---

title: Creation and retrieval of global annotations
abstract: Methods, systems, and articles of manufacture for managing global annotations made for data elements that may be instantiated (e.g., displayed) by a variety of different type applications are provided. By anchoring the global annotations to the data element, rather than the particular data source containing the data element at the time the data element was annotated, the annotation may be retrieved from any application that instantiates or displays it.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08751919&OS=08751919&RS=08751919
owner: International Business Machines Corporation
number: 08751919
owner_city: Armonk
owner_country: US
publication_date: 20100111
---
This application is a continuation of application Ser. No. 10 803 619 filed on Mar. 18 2004 issued as U.S. Pat. No. 7 669 117. The present application is also related to commonly owned U.S. Pat. No. 6 519 603 entitled Method And System For Organizing An Annotation Structure And For Querying Data And Annotations and commonly owned co pending application Ser. No. 10 600 014 entitled Universal Annotation Management System which are herein incorporated by reference.

The present invention relates to the field of data entry and retrieval and more particularly to a method and system for anchoring annotations to data elements such that the annotations may be retrieved and viewed from any type of application capable of instantiating the data element regardless of the application from which the annotation was created.

There are well known methods for capturing and storing explicit knowledge as data for example in relational databases documents flat files and various proprietary formats in binary files. Often such data is analyzed by various parties e.g. experts technicians managers etc. resulting in rich interpretive information commonly referred to as tacit knowledge. However such tacit knowledge is often only temporarily captured for example as cryptic notes in a lab notebook discussions conversations presentations instant messaging exchanges e mails and the like. Because this tacit knowledge is typically not captured in the application environment in which the related data is viewed and analyzed it is often lost.

One approach to more permanently capture tacit knowledge is to create annotations containing descriptive information about data objects. Practically any identifiable type of object may be annotated such as a matrix of data e.g. a spreadsheet or database table a text document or an image. Further subportions of objects sub objects may be annotated such as a cell row or column in a database table or a section paragraph or word in a text document. An indexing scheme is typically used to map each annotation to the annotated data object or sub object based on identifying information typically in the form of an index. The index should provide enough specificity to allow the indexing scheme to locate the annotated data object or sub object . Further to be effective the indexing scheme should work both ways given an index the indexing scheme must be able to locate the annotated data object and given an object the indexing scheme must be able to calculate the index for use in classification comparison and searching e.g. to search for annotations for a given data object .

Typically the index refers to a particular data source in which an annotated data element is instantiated e.g. a document spreadsheet database table or the like . Thus using the index the annotation can be retrieved from the application used to display the data source containing the annotated data element. However some data elements may be displayed or otherwise instantiated in a variety of different type i.e. heterogeneous application programs which is a fairly common scenario in modern business enterprises. For example in a biomedical enterprise a single data element such as a gene name may occur in text documents manipulated by a word processor text editor experimental data manipulated by a database or spreadsheet application genomic data manipulated by a specialized application images manipulated by an image viewing application and the like. In many cases an annotation made for the data element may be valid regardless of the application in which it is instantiated. In such cases it would be desirable to allow the annotation to be anchored to the data element such that the annotation could be retrieved and viewed from any application in which it is being viewed.

Accordingly there is a need for methods and systems for creating global annotations anchored to the data elements they describe such that the global annotations may be retrieved and viewed from any application displaying the data elements.

The present invention generally is directed to methods systems and articles of manufacture for managing global annotations anchored to data elements which may be contained in a variety of different type data sources loaded by a variety of different applications.

One embodiment provides a method for exchanging information between entities on a network. The method generally includes identifying a plurality of data elements capable of being manipulated by a plurality of applications on the network and to which global annotations may be anchored providing one or more interfaces for creating global annotations anchored to selected annotatable data elements from at least a first one of the applications and providing one or more interfaces for viewing from at least a second application global annotations created from the first application.

Another embodiment provides a method for creating global annotations. The method generally includes loading a first set of data with a first application identifying one or more data elements in the first set of data to which global annotations can be anchored providing an interface allowing a user to create a global annotation for a selected one of the identified data elements and storing a global annotation created via the interface in an annotation store wherein the global annotation is anchored to the selected data element.

Another embodiment provides a method for viewing global annotations. The method generally includes loading a first set of data with a first application identifying one or more data elements in the first set of data to which global annotations have be anchored providing an indication of the identified data elements and providing an interface accessible from the first application allowing a user to view a global annotation for a selected one of the identified data elements.

Another embodiment provides a computer readable medium containing an executable component for exchanging information between entities on a network. When executed by a processor the executable component performs operations generally including identifying a plurality of data elements capable of being manipulated by a plurality of applications on the network and to which global annotations may be anchored providing one or more graphical user interfaces for creating global annotations anchored to selected annotatable data elements from at least a first one of the applications and providing one or more graphical user interfaces for viewing from at least a second application global annotations created from the first application.

Another embodiment provides a system for managing global annotations anchored to one or more different type data elements. The system generally includes an annotation database for storing the global annotations one or more applications capable of loading data containing one or more data elements to which one or more global annotations are anchored a set of plug in components each for interfacing between one or more of the applications and an annotation server and an annotation server. The annotation server is generally configured to receive via the plug in components requests from the applications to access global annotations anchored to one or data elements instantiated by the applications.

The present invention provides methods systems and articles of manufacture that may be used to manage global annotations made for data elements that may be instantiated e.g. displayed by a variety of different type applications. Standard or document centered annotations are associated with or anchored to specific documents or locations within those documents and therefore rely on those documents for context. In contrast a global or data centered annotation is associated with the data element it describes independent of any particular document. As a result global annotations may be readily accessible from any variety of applications capable of instantiating the annotated data element for example in a loaded document.

Annotations both real and global may exist in various forms including textual annotations descriptions revisions clarifications comments instructions etc. graphical annotations pictures symbols etc. sound clips etc. While an annotation may exist in any or all of these forms to facilitate understanding embodiments of the present invention may be described below with reference to textual annotations as a particular but not limiting example of an annotation. Accordingly it should be understood that the following techniques described with reference to textual annotations may also be applied to other types of annotations as well and more generally to any type of reference to a data object.

As used herein the term document generally refers to any data source containing data elements that may be annotated including but not limited to text documents Adobe Acrobat .pdf documents spreadsheets database tables and the like. Further as used herein the term user may generally apply to any entity utilizing the annotation system described herein such as a person e.g. an individual interacting with an application program or an application program itself for example performing automated tasks. While the following description may often refer to a graphical user interface GUI intended to present information to and receive information from a person it should be understood that in many cases the same functionality may be provided through a non graphical user interface such as a command line and further similar information may be exchanged with a non person user via a programming interface.

One embodiment of the invention is implemented as a program product for use with a computer system such as for example the enterprise system shown in and described below. The program s of the program product defines functions of the embodiments including the methods described herein and can be contained on a variety of signal bearing media. Illustrative signal bearing media include but are not limited to i information permanently stored on non writable storage media e.g. read only memory devices within a computer such as CD ROM disks readable by a CD ROM drive ii alterable information stored on writable storage media e.g. floppy disks within a diskette drive or hard disk drive or iii information conveyed to a computer by a communications medium such as through a computer or telephone network including wireless communications. The latter embodiment specifically includes information downloaded from the Internet and other networks. Such signal bearing media when carrying computer readable instructions that direct the functions of the present invention represent embodiments of the present invention.

In general the routines executed to implement the embodiments of the invention may be part of an operating system or a specific application component program module object or sequence of instructions. The software of the present invention typically is comprised of a multitude of instructions that will be translated by the native computer into a machine readable format and hence executable instructions. Also programs are comprised of variables and data structures that either reside locally to the program or are found in memory or on storage devices. In addition various programs described hereinafter may be identified based upon the application for which they are implemented in a specific embodiment of the invention. However it should be appreciated that any particular nomenclature that follows is used merely for convenience and thus the invention should not be limited to use solely in any specific application identified and or implied by such nomenclature.

As previously described rather than reference a particular document or location thereof the global annotations reference the data elements they describe. As a result a global annotation may be accessed from any application instantiating the data element described thereby for example in a document loaded for viewing even if the global annotation was originally created while viewing another document possibly with another application . In other words different occurrences of each data element may be contained in a number of different type data sources .

As an example data element e.g. a gene family name may occur in both a document and chemical data while another data element may occur in both the document and biological data . A global annotation describing the data element may be accessed from application used to display the document application used to display the chemical data or any other application capable of loading a data source containing the chemical data . Similarly a global annotation describing the data element may be accessed from application application or any other application capable of loading a data source containing the chemical data .

During the annotation creation process the user entering the annotation content will typically be interacting with software that could be either embedded within their particular applications e.g. as a plug in component or alternatively with a separate annotation application that is external to their applications for example a stand alone browser. In any case the global annotations may be stored in a central annotation repository e.g. an annotation store with references to the data elements they describe. Storing the global annotations in the annotation store may allow tacit knowledge to be captured about the data without modifying the data sources containing the data elements to which the global annotations are anchored. For some embodiments the annotation store may be searched independently of or in conjunction with the data sources containing the data elements described by the global annotations . Thus not only can global annotations be accessed from any application capable of instantiating the data elements they describe they may also be accessed independently of those applications.

Referring now to a client server view of one embodiment of the enterprise system is shown. As illustrated the system generally includes one or more client computers e.g. user workstations generally configured to access global annotations in an annotation store via the annotation server e.g. a software component running on at least one server computer . The client computers and server computer may be connected via a network . In general the network may be any combination of a local area network LAN a wide area network WAN wireless network or any other suitable type network including the Internet.

As illustrated the client computers generally include a Central Processing Unit CPU connected via a bus to a memory storage input devices output devices and a network interface device . The input devices may be any devices to give input to the client computer such as a mouse keyboard keypad light pen touch screen track ball or speech recognition unit audio video player and the like. The output devices may be any suitable devices to give output to the user including speakers and any of various types of display screen. Although shown separately from the input device the output device and input device could be combined e.g. a display screen with an integrated touch screen.

The network interface device may be any entry exit device configured to allow network communications between the client computer and the server computer via the network . For example the network interface device may be a network adapter or other network interface card NIC . Storage is preferably a Direct Access Storage Device DASD . Although shown as a single unit storage may be any combination of fixed and or removable storage devices such as fixed disc drives floppy disc drives tape drives removable memory cards or optical storage. The memory and storage could be part of one virtual address space spanning multiple primary and secondary storage devices.

The memory is preferably a random access memory RAM sufficiently large to hold the necessary programming and data structures of the invention. While the memory is shown as a single entity it should be understood that the memory may in fact comprise a plurality of modules and that the memory may exist at multiple levels from high speed registers and caches to lower speed but larger DRAM chips. Illustratively the memory contains an operating system . Examples of suitable operating systems which may be used to advantage include Linux and Microsoft s Windows as well as any operating systems designed for handheld devices such as Palm OS Windows CE and the like. More generally any operating system supporting the functions disclosed herein may be used.

The memory is also shown containing at least one application optionally shown with an associated annotation plug in and an annotation broker . The application may be any of a variety of applications used to manipulate e.g. create view and or edit data that may be annotated. For example the application may be a text editor word processor used to manipulate annotatable documents a database application or spreadsheet used to manipulate data a document generator viewer such as Adobe s Acrobat and Acrobat Reader used to manipulate documents or data analysis software such as Decision Site available from Spotfire Inc. imaging software used to manipulate images and any other types of applications used to manipulate various types and forms of data.

Some application programs may be configured to communicate with the annotation server directly for example via a set of application programming interface API functions provided for the annotation server . As used herein the term API generally refers to any set of interface functions e.g. implementing any suitable inter process protocol that may be used to communicate between a client computer or process and a server computer or process. Other application programs however may communicate with the annotation server via plug in components and or the annotation broker e.g. also via the API . In other words annotation capability may be added to an existing application via the plug in components . The plug in components may for example present graphical user interface GUI screens to users of applications thus allowing the creation and retrieval of annotations from within the applications used to manipulate the annotated data.

The annotation broker is an optional component and may be implemented as a software component configured to present a standard interface to the Annotation Server from various applications for example communicating with plug in components from multiple applications running on the same client computer . Hence the annotation broker may provide a degree of separation between the applications and the annotation server hiding detailed operation of the annotation server and facilitating development of plug in components . In other words new applications may be supported through the development of plug in components written in accordance with the annotation broker interface.

Components of the server computer may be physically arranged in a manner similar to those of the client computer . For example the server computer is shown generally comprising a CPU a memory and a storage device coupled to one another by a bus which may all functions as similar components described with reference to the client computer . The server computer is generally under the control of an operating system e.g. IBM OS 400 UNIX Microsoft Windows and the like shown residing in memory .

As illustrated the server computer may be configured with the annotation server also shown residing in memory . The annotation server provides annotation clients e.g. running on one or more client computers with access to the annotation store for example via the annotation API . In other words the annotation API generally defines the interface between annotation clients and the annotation server . As used herein the term annotation client generally refers to any user interface or other type front end logic of the annotation system that communicates with the annotation server to manipulate e.g. create update read and query annotation data. Examples of annotation clients include applications communicating with the annotation server directly or via plug in components and an annotation browser .

As will be described in greater detail below the annotation server may be configured to perform a variety of operations such as responding to requests to create annotations for specified data objects formulating and issuing queries against the annotation store to search for annotations for a specified data object and formulating and issuing queries against the annotation store to search for annotations satisfying one or more specified conditions e.g. having a specified author creation date content and the like . As previously described the annotation server may allow a user to access both global annotation anchored to data elements and document centered annotations e.g. anchored to documents or locations therein which may be stored in the same annotation store or separate annotation stores.

For some embodiments the annotation server and various related components may be configured via a set of administrative tools shown in . The administrative tools may be used to create edit and modify a registry containing a list of annotatable data elements. For example the administrative tools may allow users e.g. administrators to define new annotatable data elements to be added to the registry . The registry may be contain an indication of annotatable data elements and may be organized in any suitable manner for example by families or categories of annotatable data elements. In some cases a parsing component parser may receive from a plug in component data loaded by an application parse the data and check the registry for entries that match the parsed data. The parser may then return to the application a list of data elements that are candidates for global annotations e.g. data elements to which global annotations may be anchored .

As illustrated the annotation broker may serve as an interface between annotation plug ins for multiple applications and the annotation server . For example the annotation broker may manage messages sent to and from multiple annotation plug ins and the annotation server e.g. providing mediation between multiple plug in components trying to access the annotation server simultaneously . For some embodiments the annotation broker may be implemented as a Windows Component Object Model COM server that provides a standard interface and facilitates access to the annotation server for annotation plug ins for Windows applications e.g. Microsoft Internet Explorer Microsoft Word Microsoft Excel Adobe Acrobat Spotfire and other Windows applications . In other words by providing a standard interface to the annotation server the annotation broker may facilitate extension of the annotation system to support new applications through the development of plug in components written in accordance with its interface.

As illustrated an annotation browser may allow the creation and viewing application data and annotations independently of any of the applications . For some embodiments the annotation browser may provide a generalized web based user interface for viewing structured data content e.g. application source data that can be accessed directly through queries via the query interface and for creating and viewing annotations on it. Thus the annotation browser may allow global annotations to be accessed e.g. searched or queried independently of the applications enabling full text searching of the annotation data.

For some embodiments in order to identify annotated data element s an index or set of indexes that may be used to identify the corresponding annotated data object s may be stored with the annotation data. As illustrated an index obtained from an annotation record may be used to retrieve information from one or more index tables that may be used to identify the annotated data element . As user herein the term data element generally refers to any identifiable data unit or group of data units that may be described by a global annotation and to which a global annotation may be anchored. Examples of annotatable data elements include but are not limited to data contained in database cells or groups of cells selected portions of text and the like.

Upon retrieving an global annotation record from the annotation store using the index stored therein the data element described by the annotation can be found from the information within the annotation record. Conversely annotations for a given data element can be looked up in the annotation store based on an index or other type value generated from the data element for example using a hash function in some cases it may be possible for slightly different data elements to generate the same hash value . In any case the indexes identify corresponding data elements and may be used to query an annotation store for global annotations associated with those data elements.

For some embodiments the index table may be queried separately to determine if annotations exist for a specified data element for example in order to provide an indication e.g. an icon in the application program of which data elements have annotations. In other words the existence of an index for a data element in the index table indicates an annotation has been made for that data object. As will be described in greater detail below For some embodiments actual annotations may not be retrieved however until a user requests them for example by clicking on a corresponding annotation icon with a mouse.

At step a user loads data in an application e.g. by opening a document spreadsheet accessing a database etc. . At step the loaded data is compared against the registry to identify any candidates for global annotations contained instantiated in the loaded data. For some embodiments the registry may contain unique identifiers such as hash values generated by applying a hash function to the corresponding data elements. Accordingly the parser may parse the loaded data by applying the same hash function to different data elements contained therein and comparing the resulting hash values to those contained in the registry .

Once it is determined that annotatable data elements exist in the loaded data global annotations may be created or retrieved for the identified data elements. For some embodiments the application may be placed in a create mode or a view mode at step . For example in the create mode an indication e.g. by highlighting of the data elements that are candidates for global annotations may be provided and the user may be allowed to create global annotations for those data elements at step . In the view mode any global annotations previously created for those data elements may be retrieved at step .

For some embodiments a common set of annotation data may be captured as global annotations for each type of data element. For other embodiments however the data captured as a global annotation may be organized as a set of fields defined in an annotation structure. Different annotation structures with different sets of fields may be defined for different type data elements allowing different types of data to be captured as annotations for different types of data elements. The selection and use of such annotation structures is described in detail in the previously referenced co pending application Ser. No. 10 600 014 entitled Universal Annotation Management System. As described therein for some embodiments certain annotation structures may be associated with users operating in a certain type of role thus allowing different users to create different types of annotations.

At step an annotation structure is selected based at least in part on the selected data element and possibly the role of the user creating the annotation . For some embodiments however there may only be one annotation structure used for all global annotations. At step a graphical user interface GUI screen is generated based on the selected annotation structure. At step global annotation data is received via the generated GUI screen and at step a global annotation record containing the annotation data and a unique identifier e.g. GUID for the data element is created.

In some cases it may be desirable for a user to be able to determine the context in which the global annotation was created. For example the user may wish to access the document or other type data source that contained the annotated data element in order to gather other information view other data contained therein possibly in order to determine if the annotation is still valid. Therefore at step the context in which the annotation data has been captured is optionally stored for example as a link to the loaded data document containing the annotated data element at the time the global annotation was created. At step the annotation record is stored in the annotation store .

Once created because the global annotations are anchored to the data elements they describe they may be retrieved from any application loading data that contains an annotated data element. While not discussed in detail below it should be understood that for some embodiments global annotations may be retrieved and or viewed on a per family basis which may facilitate retrieval and viewing particularly when or if the number of global annotations grows substantially over time. For example a user may be presented with some type of interface allowing the user to specify a particular family or families of data elements whose global annotations are to retrieve and or view.

Based on results of this query which may return a set of GUIDs for global annotation anchored to the identified data elements a list of annotated data elements may be returned to the application at step which may then provide an indication of annotated data elements at step . At step a request to view a global annotation for a selected data object is received and at step the global annotation data is retrieved e.g. from the annotation store using the GUID for the selected data element . The annotation data is displayed to the user in a GUI screen generated at step .

For some embodiments indications of the existence of annotations for a data element may be provided as an annotation icon displayed proximate the data elements see . A request to view a global annotation may then be generated by selecting e.g. double clicking on a corresponding annotation icon. For other embodiments a list of global annotations for data elements may be returned and displayed for example in a separate window. An indication of the annotated data element e.g. by highlighting may be provided in response to selecting a listed annotation.

As illustrated data elements and to which global annotations may be anchored in this example gene family and disease names are indicated for example by highlighting. For some embodiments annotatable data elements may be automatically identified and highlighted when data is loaded e.g. when a document is loaded for example by parsing the data and searching the registry as describe above. For some embodiments different categories of annotatable data elements may exist. Such different categories may be indicated for example by different color highlighting facilitating identification of the different categories.

As shown the screen may include Create and View Global annotations buttons and provided for example as part of an annotation plug in for the text editor allowing a user to create and view global annotations. For example in response to selecting one of the annotatable data elements or and pressing the Create Global Annotations button a user may be presented with the GUI screen shown in .

As illustrated the GUI screen may identify the data element being annotated an optional category and allow the user to enter annotation data in one or more fields such as the comment field . As previously described for some embodiments the exact fields may be determined by an annotation structure used to generate the GUI screen . As illustrated the GUI screen may also include a check box allowing a user to specify whether a current context in which the annotation is being created should be saved as previously described. In some cases the GUI screen may also allow a user to select whether the annotation being created should be global anchored to the data element or real anchored to the application or data source .

Once created a global annotation for the data element may be viewed from another application. For example illustrates an exemplary GUI screen of a database application illustratively entitled GeneView that has instantiated the data element in a table . As illustrated an annotation icon may be displayed proximate the data element to indicate the existence of the global annotation. In response to clicking on the annotation icon the previously created global annotation may be displayed in the GUI screen shown in . As illustrated the GUI screen may include a button allowing a user to view the context in which the global annotation being viewed was created i.e. if the context previously saved . For example pressing the button may access a link to a document containing the data element that was displayed when the global annotation was created and possibly automatically launching the application used to view the document.

As previously described for some embodiments in addition or instead of global annotations anchored to data elements document centered annotations anchored to documents or locations therein may also be created and or viewed from the same application. illustrates an exemplary GUI screen that may allow a user to select which type of annotations are to be displayed. As previously described for some embodiments users may be given more specific viewing control for example to specify particular categories of data elements for which global annotations should be viewed. Such control may be desirable as the total number of global annotations corresponding to data elements in any particular set of loaded data may grow large over time.

Global annotations may allow information about data elements to be accessed regardless of the application loading the data containing the annotated data element. As such global annotations are anchored to the data element and facilitate a more global sharing of information than with more conventional annotations anchored to a particular application or data source.

While the foregoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof and the scope thereof is determined by the claims that follow.

