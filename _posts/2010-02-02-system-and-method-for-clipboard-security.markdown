---

title: System and method for clipboard security
abstract: Provided is a clipboard security system and method for improving security of data transmission made through a clipboard which is frequently used in utilization of a computer. An example of the clipboard security system includes a clipboard managing unit for storing data in a clipboard or extracting data from the clipboard in response to a request from one or more objects, in which the clipboard managing unit includes a data encrypting unit for encrypting the data for which storage is requested according to a trust relationship of an object which desires to store the data in the clipboard and a data decrypting unit for decrypting the encrypted data according to a trust relationship of an object which desires to extract the encrypted data stored in the clipboard.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09147050&OS=09147050&RS=09147050
owner: FASOO.COM CO. LTD.
number: 09147050
owner_city: Seoul
owner_country: KR
publication_date: 20100202
---
The present invention relates to a clipboard security system and method and more particularly to a clipboard security system and method which is capable of improving the security of data transmission performed through a clipboard that is frequently used in utilization of a computer.

In various operating systems to deliver arbitrary program data to other places a clipboard or a space similar to the clipboard is provided and is regarded as one of operating system functions frequently used in utilization of a computer. Data delivery through a clipboard basically does not take security into account and consequently any program executed in an operating system can use data stored in the clipboard.

Since data in a clipboard is freely delivered between arbitrary programs capable of using a format of the data a simple text a rich text a picture and information having a particular format may be delivered between programs capable of using such information. Information delivery made between programs through a clipboard is undoubtedly an efficient method of properly using a multitasking function of an operating system but as the security of important data is increasingly demanded data transmitted between independent programs through the clipboard needs to be protected. For example even if during management of a security document a strict management function is introduced which disallows production of a copy of the document to prevent leakage of contents of the document or disallows delivery of the document to other storage places or transmission of the document to outside the contents of the security document may be leaked by being transmitted as an unrestricted general document with the use of a clipboard or someone unauthorized may peep into contents stored in the clipboard. Therefore it is necessary to enhance security by managing data transmission performed through a clipboard. Although there are applications for managing plural temporarily stored information by extending a clipboard such as a scrapbook of Macintosh and clipboard extension applications many pastes a multi clipboard a clip tray a tray text etc. these applications merely provide a function of storing a plurality of mainly plain texts and selecting and using a desired one among the stored plain texts and do not provide any function related to security. Moreover with introduction of a digital rights management DRM system when particular contents are provided management for blocking a clipboard function is performed to prevent production of a copy of the contents but such management is merely blocking of the clipboard function significantly degrading the efficiency of a computer work performed through the clipboard.

In other words since a clipboard which is a basic function of an operating system is frequently used in various computer works such as a document work a picture work a program work a presentation work and so forth if the clipboard is blocked the work efficiency is significantly degraded. Therefore it is necessary to effectively control delivery of a security demanding data through the clipboard in a state where the use of the clipboard is permitted.

To control use of a clipboard a means for integrated management of use of the clipboard has been applied but due to low trust or reliability thereof the means is difficult to use for a security purpose for preventing leakage of information. That is a conventional clipboard management means is configured to prevent security demanding information from being delivered to an unreliable or untrusty place by controlling a flow of information and in this configuration every information flow for the clipboard has to be thoroughly monitored and if such information control fails at a single position information leakage occurs. Moreover by nature of a terminal where various events occur trust is low. Therefore there is an urgent need for a clipboard security scheme which guarantees free use of a clipboard trust in control of security contents and explicit trust in preventing information leakage.

An object of embodiments of the present invention newly proposed to effectively control security demanding data in a clipboard use permitted state is to provide a clipboard security system and method which encrypts data delivery contents of a clipboard which are destined to an object capable of data copy and extraction such as security demanding applications or documents to deliver data between trusty security objects through the clipboard and to prevent delivery of data stored in the clipboard from a security object to an untrusty object or to deliver the data in an encrypted state thereby preventing leakage of security data.

Another object of embodiments of the present invention is to provide a clipboard security system and method which provides a clipboard managing unit to encrypt data provided from a trusty object store the encrypted data in a clipboard and decrypt and provide clipboard data requested from a trusty object.

Still another object of embodiments of the present invention is to provide a clipboard security system and method which in a terminal having applied thereto a digital rights management DRM unit for managing security demanding information with a secret key trust recognition and secret key securement which are necessary for encryption and decryption of clipboard using data between trust objects are performed using the DRM unit thereby improving security and application convenience.

Further another object of embodiments of the present invention is to provide a clipboard security system and method which monitors both use of a clipboard by trusty objects and use of the clipboard by untrusty objects to encrypt security demanding data and apply the encrypted data to the clipboard provide a decrypted plaintext to a trusty object and notify an untrusty object of emptiness of the clipboard instead of delivering encrypted data to the untrusty object thereby guaranteeing control and stability of the use of the clipboard.

Further another object of embodiments of the present invention is to provide a clipboard security system and method which generates encryption related information and forgery protection information during security data encryption to allow clipboard management through such information thus improving stability and independency and implements a clipboard managing unit in various schemes including an application programming interface API or hooking or a combination thereof thus improving security and stability.

Yet another object of embodiments of the present invention is to provide a clipboard security system and method which during storage of information in a clipboard through screen capture controls the information to be delivered only to an object which a security target object relies on according to execution or exposure of the security target object thereby preventing data leakage caused by the screen capture.

To achieve the foregoing objects a clipboard security system according to an embodiment of the present invention includes a clipboard managing unit for storing data in a clipboard or extracting data from the clipboard in response to a request from one or more objects in which the clipboard managing unit includes a data encrypting unit for encrypting the data for which storage is requested according to a trust relationship of an object which desires to store the data in the clipboard and a data decrypting unit for decrypting the encrypted data according to a trust relationship of an object which desires to extract the encrypted data stored in the clipboard.

A clipboard security system according to another embodiment of the present invention includes a clipboard for temporarily storing data and a clipboard managing unit positioned between one or more objects and the clipboard to control storage of data requested from the objects in the clipboard and extraction of data from the clipboard encrypt the data in response to trust information provided from the objects store the encrypted data in the clipboard or decrypt the encrypted data stored in the clipboard in response to the trust information provided from the objects and provide the decrypted data to the objects.

A clipboard security method according to an embodiment of the present invention includes clipboard security method for managing use of a clipboard by one or more objects the clipboard security method including receiving first information including data from a first object determining whether the first information includes trust information corresponding to the first object selectively performing an encryption operation with respect to the received data according to a result of the determination and storing the encrypted data in the clipboard.

A clipboard security system and method according to embodiments of the present invention encrypts data delivery contents of a clipboard which are destined to an object capable of data copy and extraction such as security demanding applications or documents to deliver data between trusty security objects through the clipboard and to prevent delivery of data stored in the clipboard from a security object to an untrusty object or to deliver the data in an encrypted state thereby preventing leakage of security data while maintaining the efficiency of a work using the clipboard.

A clipboard security system and method according to embodiments of the present invention a clipboard security system and method which provides a clipboard managing unit to encrypt data provided from a trusty object store the encrypted data in a clipboard and decrypt and provide clipboard data requested from a trusty object thereby disallowing an untrusty object to check contents of information in the clipboard even if the untrusty object secures the information and thus improving security.

A clipboard security system and method according to embodiments of the present invention a clipboard security system and method which in a terminal having applied thereto a digital rights management DRM unit for managing security demanding information with a secret key trust recognition and secret key obtaining which are necessary for encryption and decryption of clipboard using data between trust objects are performed using the DRM unit thereby improving security and application convenience.

A clipboard security system and method according to embodiments of the present invention a clipboard security system and method which generates encryption related information and forgery protection information during security data encryption to allow clipboard management through such information thus improving stability and independency and implements a clipboard managing unit in various schemes including an application programming interface API or hooking or a combination thereof thus improving security and stability.

A clipboard security system and method according to embodiments of the present invention a clipboard security system and method which during storage of information in a clipboard through screen capture controls the information to be delivered only to an object which a security target object relies on according to execution or exposure of the security target object thereby preventing data leakage caused by the screen capture.

The present invention will be described in detail with reference to the attached drawings and embodiments.

That is an object may store data in a clipboard and an object may extract and paste data stored in the clipboard . The objects and may be various objects such as application programs documents sub windows and so forth.

A clipboard in which data unspecifiedly provided from various objects is stored and data unspecifically requested from various objects is extracted is vulnerable to security in spite of convenience and to prevent such vulnerability control of data storage and extraction is required.

An object which the object cannot rely on may request extraction of encrypted data stored in the clipboard and obtain the corresponding encrypted data according to the foregoing process but the corresponding data cannot be used because of being encrypted.

In other words when a clipboard is used between objects having trust therebetween the clipboard managing unit encrypts a plaintext and decrypts encrypted data into a plaintext such that respective objects obtain the same result as in general clipboard use but in practice since data stored in the clipboard has been encrypted an untrusty object even if obtaining stored data from a security demanding object cannot use the obtained data. Therefore security demanding data is stored in the clipboard as being in an encrypted state regardless of how a terminal s environment is changed and how a system operating state is changed such that the possibility of leakage of contents of the data is fundamentally blocked.

With the foregoing structure it is not necessary to monitor clipboard input and output of every object for safe data transmission facilitating management.

Herein when it is said the object relies on the object it means that encrypted data obtained by encrypting data provided by the object can be decrypted by the object and a general trusty object is an object using security demanding data such that the trusty object encrypts the security demanding data first before storing the data in the clipboard and for encrypted data provided from a trusty object among the stored encrypted data obtains plaintext data by decrypting the encrypted data. On the other hand an untrusty object uses data which does not demand security. Thus in actual implementation a trusty object has to provide information indicating that it is a trusty object or information identifying trust e.g. in case of a corporation a corporation s unique number and in case of a particular user group a unique number of the group to the clipboard managing unit or the clipboard managing unit has to be able to check corresponding information e.g. registration user information etc. of the object application .

As shown in the clipboard managing unit may include a storage request receiving unit for receiving a request for storage of data in clipboard from an object and an extraction request receiving unit for receiving a request for extraction of data stored in the clipboard from the object. When the security demanding trusty object requests data storage extraction the clipboard managing unit may include a trust information analyzing unit which receives trust information from the trusty object and analyzes the received trust information. The clipboard managing unit may further include a data encrypting unit for encrypting data which is requested to be stored in the clipboard according to an analysis result of the trust information analyzing unit and a data decrypting unit for decrypting encrypted data extracted from the clipboard according to an analysis result of the trust information analyzing unit .

The storage request receiving unit receives a storage request S Req and data data from an object. When the object is a trusty object the storage request receiving unit further receives trust information T info indicating so. The trust information T info it delivered to the trust information analyzing unit .

In the trust information analyzing unit may be previously set and stored trust information related to objects for which a security operation is performed by the clipboard security system according to the present invention. Thus the trust information analyzing unit analyzes the trust information T info of an object provided from the storage request receiving unit to determine whether the object which has generated the storage request S Req is a trusty object and provides a control signal CON corresponding to a determination result to the data encrypting unit . The data encrypting data performs an encryption operation with respect to the data data in response to the control signal CON. For example if the trust information T info is not provided to the trust information analyzing unit or the trust information T info provided to the trust information analyzing unit is analyzed as not corresponding to an object for which security is performed by the system the data encrypting unit skips an encryption operation and stores plaintext data data in the clipboard. On the other hand if the object is analyzed as an object which demands security the data data is encrypted and encrypted data EN data is stored in the clipboard. Although it is shown in that the data data is provided from the storage request receiving unit to the data encrypting unit the data data may also be provided directly to the data encrypting unit .

Other objects than the object may also request data extraction from the clipboard and in this case the extraction request receiving unit receives an extraction request E Req and trust information T info of the object from the object which has requested data extraction. As mentioned previously if the object requesting data extraction is an untrusty object the trust information T info is not provided to the extraction request receiving unit . The trust information analyzing unit receives the trust information T info of the object which has requested data extraction and analyzes the received trust information T info to determine whether the object requesting data extraction is a trusty object. A control signal CON corresponding to a determination result may be provided to the data decrypting unit . The data decrypting unit decrypts the encrypted data EN data from the clipboard in response to the control signal CON and provides plaintext data data to the object as a result of a decryption operation.

When the encrypted data is extracted and copied by the untrusty object as shown in encrypted strings may be pasted a data format error may occur or other unexpected symptoms may occur degrading stability and causing user inconvenience of having to erase erroneously pasted information or solve the error.

Accordingly as shown in when data transmission using a clipboard is performed between a trusty object and a trusty object to provide encrypted data to an untrusty object which desires to extract the encrypted data from the clipboard the clipboard managing unit may provide information indicating emptiness of the clipboard to the object instead of providing the encrypted data to the object . To this end a separate managing unit may be further provided and a clipboard managing unit for managing a trusty object and a clipboard managing unit for managing an untrusty object may be separately provided.

As shown in the clipboard managing unit may receive a storage request receiving unit a trust information analyzing unit a data encrypting unit an extraction request receiving unit and a data decrypting unit . The clipboard managing unit may further include an information generating unit for generating information indicating emptiness of a clipboard if an untrusty object requests extraction of encrypted data stored in the clipboard when an object requests extraction of data stored in the clipboard.

The extraction request receiving unit receives an extraction request E Req or data stored in the clipboard from the object. If a trusty object requests data extraction the trust information T info in addition to the extraction request E Req is provided to the extraction request receiving unit . On the other hand if the untrusty object requests data extraction the trust information may not be provided to the extraction request receiving unit or unauthorized trust information may be provided to the extraction request receiving unit . The trust information analyzing unit analyzes if the trust information is provided from the object requesting data extraction or if the trust information provided from the object requesting data extraction is an object suitable as a security object and generates a corresponding control signal. For example if the object requesting data extraction is a suitable trust object demanding security the control signal CON is generated to activate the data decrypting unit . On the other hand if the object requesting data extraction is an untrusty object the control signal CON is generated to activate the information generating unit such that information BLK info indicating emptiness of the clipboard is provided to the untrusty object.

If there are a trusty object and a trusty object as shown in when the trusty object desires to store plaintext data in the clipboard the clipboard managing unit obtains corresponding data and trust information of the object information indicating a trust relationship e.g. a sort of trust identifier such as corporation unique information for a corporation generates encryption related information while encrypting the received data and stores the generated encryption related information together with the encrypted data in a clipboard . In this case of the encryption related information information which should not be exposed is encrypted and included in the encrypted data. When the object requests data extraction from the clipboard the clipboard managing unit obtains the encrypted data and its related encryption information from the clipboard to check a trust relationship based on the trust information obtained from the object decrypts the encrypted data and provides plaintext data to the object .

In this process the trust relationship between the encryption information and the object may be checked by the clipboard managing unit but as is shown if the DRM unit having a superior security function manages a secret key for controlling security information and trust information for security demanding objects trust or the trust relationship between objects may be checked through the DRM unit and as a result thereof a secret key or particular encryption decryption related key or information may be obtained.

In other words the shown clipboard managing unit obtains trust information from the object and provides the same to the DRM unit which analyzes the trust information and provides a secret key to the clipboard managing unit according to an analysis result. The clipboard managing unit encrypts the data by using the provided secret key and stores the encrypted data in the clipboard . The clipboard managing unit obtains trust information from the object and provides the same to the DRM unit which then analyzes the trust information and provides a secret key to the clipboard managing unit according to an analysis result. The clipboard managing unit may decrypt the encrypted data stored in the clipboard by using the provided secret key.

Various information may be generated as the encryption information and may include for example an encryption identifier for expressing encryption or non encryption with a plaintext trust identification information indicating trust of an object as additional information necessary for checking a trust relationship and an authorization code for preventing forgery of encrypted information. Among them the information except for the encryption identifier should not be exposed and thus may be encrypted in a manner similar to or the same as data to be encrypted and may be included in the encrypted data.

To generate the authorization code for preventing forgery a key value is required. The key value may use for example unique information of a terminal such as a medium access control MAC address of a network card included in the terminal or a serial number of a central processing unit of the terminal or the secret key obtained in the DRM unit . By doing so it is guaranteed that the encrypted data obtained from the clipboard will be identical to the original value stored in the clipboard .

To sum up security demanding data stored in the clipboard even if being leaked is safe thus alleviating a burden of flow management and maintaining the trust of security. Moreover even when a plurality of clipboard managing units exist and a clipboard managing unit is operated again due to a problem occurring therein decryption may be performed using encryption Information stored in the clipboard thereby maintaining the stability of the clipboard security system at all times.

The trust information transmitting unit receives trust information T info and T info provided from an object which requests data storage or data extraction and delivers them to the DRM unit. The DRM unit analyzes the trust information T info and T info to determine whether the object requesting data storage or data extraction is a trusty object. If the requesting object is analyzed as a trusty object as a determination result encryption decryption keys Key E and Key D are provided to the clipboard managing unit . The encryption decryption key receiving unit provides the provided encryption decryption keys Key E and Key D to a data encrypting unit and a data decrypting unit . As mentioned previously in addition to the encrypted data EN data with respect to the data data an encryption identifier trust identification information and an anti forgery authorization code may be further generated. Since the trust identification information and the anti forgery authorization code should not be exposed to an untrusty object encrypted trust identification information and anti forgery authorization code may be generated using the encryption decryption keys Key E and Key D provided from the encryption decryption key receiving unit . The data encrypting unit shown in may generate such information or a separate encryption information generator not shown for generating the foregoing information may be further included in the system.

As is shown the clipboard managing unit takes full charge of encrypting plaintext data provided by a trusty object storing the encrypted data in the clipboard and decrypting the encrypted data to provide the data as a plaintext to the trusty object . In other words a clipboard data flow for the trusty object is processed by the clipboard managing unit . Accordingly the clipboard managing unit encrypts plaintext data provided by the trusty object to generate encrypted data and stores the encrypted data in the clipboard . The clipboard managing unit also extracts the encrypted data from the clipboard to perform a decryption operation thus providing plaintext data to the trusty object .

Meanwhile a data flow between an untrusty object and the clipboard is processed by the clipboard auxiliary managing unit . Thus the clipboard auxiliary managing unit manages storage extraction requests for data with respect to the untrusty object such that the clipboard auxiliary managing unit stores plaintext data provided from the untrusty object in the clipboard and upon receiving a data extraction requests from the untrusty object provides the data stored in the clipboard to the untrusty object that is the plaintext data is bypassed . The clipboard auxiliary managing unit in performing the data extraction operation determines whether the data extracted from the clipboard is encrypted data and the determination operation may be performed by detecting whether a plaintext encryption identifier exists in the data stored in the clipboard . If the extraction requested data stored in the clipboard is encrypted data the clipboard auxiliary managing unit delivers information indicating emptiness of the clipboard to the untrusty object .

The clipboard managing unit and the clipboard auxiliary managing unit are functionally separated but may be substantially divided according to operation modes in a single module.

That is a clipboard managing program is separately obtained and installed in the terminal and when a security demanding application i.e. a trusty application is executed a clipboard managing unit is explicitly called. In this way every execution of a security demanding application program individual clipboard managing units are called and operate.

As is shown when an application program is executed the clipboard managing program calls the clipboard managing unit when data storage with respect to the clipboard is required data encrypted through the clipboard managing unit is stored in the clipboard . When an application program is executed as in the application program the clipboard managing program calls a clipboard managing unit when extraction of encrypted data stored in the clipboard is required the clipboard managing unit decrypts the data and delivers the decrypted data to the application program .

In other words each clipboard managing unit is separately configured and operates for each security demanding object especially each application determined through trust relationship check.

In addition to an explicit call scheme using an application program a hooking scheme for monitoring all objects without a modification of an application program may also be used as shown in .

As is shown once a clipboard managing program is separately installed and executed it inserts monitoring modules and into executed objects mainly application programs and respectively. The monitoring modules and are inserted into respective application programs in the form of a DLL dynamic link library and the monitoring modules and load clipboard managing units and respectively to perform data encryption and decryption.

The monitoring modules and loads different clipboard managing units according to whether inserted objects are trusty that is whether security is demanded such that monitoring modules and load a clipboard managing unit for performing encryption and decryption for a trusty object and load a clipboard auxiliary managing unit for notifying absence of encrypted clipboard contents for an untrusty object. Alternatively also for the untrusty object the clipboard managing unit may be loaded and the clipboard managing unit may perform the function of notifying absence of encrypted clipboard contents.

By applying both schemes shown in a predetermined object may explicitly call a clipboard managing unit implemented with an API and another object may call a clipboard managing unit implemented with a hooking scheme.

The data is encrypted using the obtained key and by using various information necessary for the encryption encryption information is generated. The encryption information may include an encryption identifier which is inserted as a plaintext to indicate encryption or non encryption an authorization code for preventing forgery and trust information for checking a trust relationship and the authorization code and the trust information are encrypted using the key or a separate key and then included in the encrypted data to be stored in the clipboard . To rapidly check encryption or non encryption the encryption identifier may be inserted as a plaintext in a front portion of the encrypted data.

In this way through the encryption information stored in the clipboard encryption or non encryption may be checked and if it is determined that the information has been encrypted the trust information and the anti forgery authorization code are secured from the encryption information to know decryption or non decryption and necessary basic information such that decryption of the encrypted data is possible. The clipboard managing unit which has performed encryption is not needed any longer for this end and when another clipboard managing unit checks clipboard contents appropriate decryption is possible thus providing independency.

When a trusty object requests data extraction from the clipboard the clipboard managing unit checks the extraction request and obtains trust information from the trusty object . The clipboard managing unit requests data extraction from the clipboard to receive encryption information.

The clipboard managing unit then checks the received encryption information to recognize that the received information has been encrypted through a plaintext encryption identifier and checks if the received encryption information is identical to the original value stored in the clipboard by using the anti forgery authorization code.

If there is no error in the foregoing process trust identification information is checked and to this end by using the trust information obtained from the trust object and trust information extracted from the encrypted data trust identification information a trust relationship between the trust objects is checked. In other words the trust information may be identical or different and if they are different a unidirectional or bidirectional trusty relationship or an untrusty relationship may be checked.

If a trust relationship is checked through the trust information extracted from the data and the trust information obtained from the trusty object the trust information obtained from the trusty object is provided to the DRM unit to obtain a corresponding key. This operation may be performed by the clipboard managing unit .

The clipboard managing unit decrypts the encrypted data by using the key obtained through the DRM unit and delivers plaintext data to the trusty object .

Although not shown in detail when a clipboard managing unit receives a data extraction request signal from an untrusty object trust information may not be obtained or even if the trust information is obtained a trust relationship with trust information extracted from encrypted data becomes an untrusty relationship and therefore the encrypted data is not decrypted and a signal indicating absence of data in the clipboard is delivered to the untrusty object. This operation may be performed by the clipboard auxiliary managing unit.

As shown in first a user manually installs a clipboard managing program or the clipboard managing program is automatically installed and executed.

Thereafter when an application which is the basic unit of an object is operated a clipboard managing unit is loaded in an explicit manner or a hooking scheme to monitor an operation of the application.

When the application desires to store data in the clipboard the clipboard managing unit senses that and checks if the application is trusty such that if the application is a trusty object the data is encrypted and at the same time related encryption information is generated and the encrypted data and the related encryption information are stored in the clipboard. If the application is an untrusty object plaintext data is stored in the clipboard.

As shown in when the clipboard managing unit is loaded if the object requests data extraction from the clipboard the clipboard managing unit receives clipboard data and checks through a plaintext encryption identifier if the data has be en encrypted. If the data has not been encrypted it is delivered to the requesting object.

If the clipboard data has been encrypted it is checked through an anti forgery authorization code if the encrypted data has not been modified. If it is checked that the encrypted data has not been modified it is checked if a trust relationship between trust information of the object requesting data extraction and trust information included in the encrypted data is trusty. If the trust relationship is trusty the encrypted data is decrypted into plaintext data and the plaintext data is delivered to the requesting object.

If a problem occurs when the anti forgery authorization code is checked the trust relationship between objects is untrusty or an object requesting data extraction falls to provide trust information information indicating absence of data in the clipboard is delivered to the object requesting data extraction.

By doing so independent and safe data delivery between trusty objects and safe clipboard content delivery to an untrusty object become possible.

Meanwhile the foregoing description is associated with a process of storing data in a clipboard from a substantial object in which by preventing data of a security demanding object from being leaked as a plaintext without permission security reliability is improved. However in case of screen capture which hard copies a work screen of the terminal some of internal information of a trusty object may be secured through the clipboard without permission. To prevent such a problem in case of screen capture when a security demanding trusty object is being executed or is exposed on the screen an operation of an expert screen capture program may be stopped. However in case of basic screen capture using a Print Screen key a document work is frequently used and thus stopping the capture program may degrade work efficiency. Therefore when image data is stored in the clipboard through screen capture such storage is regarded as a case where the trusty object requests data storage considering execution or screen exposure of the trusty object such that capture data is encrypted and stored and the encrypted data is decrypted and delivered to only the trusty object thereby allowing use of a screen capture function and preventing data of a security demanding object from being leaked.

The present invention has been particularly shown and described with reference to exemplary embodiments thereof. However the present invention is not limited to the foregoing embodiments and those of ordinary skill in the art may make various modifications without departing from the subject matter of the present invention as defined by the following claims.

