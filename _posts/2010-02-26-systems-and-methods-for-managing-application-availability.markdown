---

title: Systems and methods for managing application availability
abstract: A computer-implemented method for managing application availability. The method may include identifying an application running on a first cluster node of a failover cluster and copying configuration data of the application to a storage location accessible by a second cluster node of the failover cluster. The method may also include detecting failure of the first cluster node, restoring the configuration data to the second cluster node, and executing the application on the second cluster node in accordance with the configuration data. Various other methods, systems, and computer-readable media are also disclosed herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08688642&OS=08688642&RS=08688642
owner: Symantec Corporation
number: 08688642
owner_city: Moutain View
owner_country: US
publication_date: 20100226
---
Business continuity and disaster recovery refers to the capability to restore normal or near normal business operations from a critical business application perspective after the occurrence of a disaster that interrupts business operations. Business continuity and disaster recovery may require the ability to bring up mission critical applications and the data these applications depend on and make them available to users as quickly as business requirements dictate. In cases where downtime is costly the process will likely involve automation. For mission critical applications that demand minimal downtime the disaster recovery process may need to be highly automated and resilient. Clustering technologies may provide such highly automated and resilient disaster recovery.

Clusters may include multiple systems connected in various combinations to shared storage devices. Cluster server software may monitor and control applications running in the cluster and may restart applications in response to a variety of hardware or software faults. Unfortunately many applications may not be configured to run in a cluster environment. What is needed therefore is a mechanism for extending clustering technologies to software applications that may not be cluster aware.

As will be described in greater detail below the instant disclosure generally relates to systems and methods for managing application availability. For example a method for managing application availability may include identifying an application running on a first cluster node of a failover cluster. The method may also include copying configuration data of the application to a storage location accessible by a second cluster node of the failover cluster. The method may further include detecting failure of the first cluster node restoring the configuration data to the second cluster node and executing the application on the second cluster node in accordance with the configuration data.

In some embodiments the method may include receiving a request to start the application on the first cluster node. In such embodiments identifying the application running on the first cluster node may include receiving the request to start the application and copying the configuration data of the application may include taking an initial backup of the configuration data. Additionally or alternatively the method may include determining that the configuration data of the application has changed. In such embodiments copying the configuration data of the application may be performed in response to the determination that the configuration data of the application has changed. According to various embodiments determining that the configuration data of the application has changed may include monitoring a directory on the first cluster node that stores the configuration data of the application and detecting a change to data in the monitored directory.

According to at least one embodiment the method may include receiving a request to stop the application. In such embodiments identifying the application running on the first cluster node may include receiving the request to start the application and copying the configuration data of the application may include taking a backup of the configuration data after the application is stopped. In certain embodiments the method may include merging the restored configuration data with configuration data of the application that is already stored on the second cluster node. In at least one embodiment the application may include a non cluster aware application.

In some embodiments a system for managing application availability may include an identification module programmed to identify an application running on a first cluster node of a failover cluster. The system may also include a monitoring module programmed to copy configuration data of the application to a storage location accessible by a second cluster node of the failover cluster. The system may further include a first cluster agent installed on the first cluster node and programmed to communicate with the monitoring module. The system may include a second cluster agent installed on the second cluster node and programmed to detect failure of the first cluster node restore the configuration data to the second cluster node and execute the application on the second cluster node in accordance with the configuration data.

In some embodiments the first cluster agent may be further programmed to receive a request to start the application on the first cluster node the identification module may be programmed to identify the application running on the first cluster node by receiving the request to start the application and the monitoring module may be programmed to copy the configuration data of the application by taking an initial backup of the configuration data.

According to various embodiments the first cluster agent may be further programmed to determine that the configuration data of the application has changed and the monitoring module may be programmed to copy the configuration data of the application in response to the determination that the configuration data of the application has changed.

In certain embodiments the first cluster agent may be programmed to determine that the configuration data of the application has changed by monitoring a directory on the first cluster node that stores the configuration data of the application and by detecting a change to data in the monitored directory. Additionally or alternatively the first cluster agent may be programmed to receive a request to stop the application the identification module may be programmed to identify the application running on the first cluster node by receiving the request to start the application and the monitoring module may be programmed to copy the configuration data of the application by taking a backup of the configuration data after the application is stopped. In at least one embodiment the second cluster agent may be further programmed to merge the restored configuration data with configuration data of the application that is already stored on the second cluster node.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

As will be described in greater detail below the instant disclosure generally relates to systems and methods for managing application availability. Embodiments of the instant disclosure may provide methods and systems for making non cluster aware applications highly available by storing application configuration data at a storage location accessible by both a failed cluster node and a failover cluster node. For example a cluster agent on a first cluster node and may identify locations that contain configuration data of an application. The cluster agent may provide a monitoring module with information that identifies locations containing the configuration data of the application and the monitoring module may monitor these locations for changes.

When changes are made to data in the monitored locations the monitoring module may save the configuration data in these locations to the shared storage location that is accessible by the second cluster node. The configuration data may also be copied to the shared storage location in response to other triggers e.g. when the application starts when the application is terminated etc. If the first cluster node fails a cluster agent on the second cluster node may access the configuration data from the shared storage location. The application may then be started on the second node using the configuration data.

The following will provide with reference to detailed descriptions of exemplary systems for managing application availability. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

In addition and as will be described in greater detail below exemplary system may include a cluster agent programmed to detect cluster node failure restore configuration data and execute applications on cluster nodes. Although illustrated as separate elements one or more of modules in may represent portions of a single module or application.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. cluster node and or cluster node computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

Cluster agent monitoring module and or identification module may be part of a cluster monitor or other cluster server software for managing cluster nodes. Examples of cluster server software include VERITAS CLUSTER SERVER MICROSOFT CLUSTER SERVER LINUX CLUSTER SERVER and or any other suitable type of cluster software. Cluster server software may provide failover clusters i.e. high availability clusters which may be implemented for the purpose of improving availability of services and may operate having redundant nodes which are used to provide service when system components fail.

System may include a processor which may be configured to execute identification module monitoring module and or cluster agent . Processor generally represents any device capable of executing code such as processor in .

As illustrated in exemplary system may also include a configuration data database . Configuration data database may represent portions of a single database or computing device or a plurality of databases or computing devices. Configuration data database may store configuration data of an application. As used herein the phrase configuration data generally refers to configuration settings and options of an application. Configuration data may include any type or form of settings and options for any type of application.

Configuration data database in may represent a portion of one or more computing devices. For example configuration data database may represent a portion of shared storage in computing system in and or portions of exemplary network architecture in . Alternatively configuration data database in may represent one or more physically separate devices capable of being accessed by a computing device such as shared storage in computing system in and or portions of exemplary network architecture in .

Exemplary system in may be deployed in a variety of ways. For example all or a portion of exemplary system may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

As shown in system may include cluster nodes and in communication with shared storage via a network . Cluster nodes and generally represent any type or form of computing device capable of reading computer executable instructions. As shown in cluster node may include an identification module a monitoring module a cluster agent and an application . Similarly cluster node may include an identification module a monitoring module a cluster agent and an application . Shared storage may include configuration data database .

In the example shown in cluster nodes and may represent a cluster. As used herein the term cluster node generally refers to any computing device that is part of a cluster of linked computing devices. Examples of cluster nodes include without limitation laptops desktops servers virtual machines embedded systems combinations of one or more of the same exemplary computing system in or any other suitable computing device or system. Clusters may also include more than two nodes and may be configured to provide high availability for applications e.g. clusters may include redundant nodes that provide failover capabilities .

As noted cluster node may include an application which may be a non cluster aware application. As used herein the phrase non cluster aware application generally refers to a software application that is not designed to call cluster Application Programming Interfaces APIs is not capable of maintaining a cluster heartbeat between nodes is not capable of transaction processing is not capable of mirroring cluster information in real time and or is not capable of changing its configuration data path.

Cluster node cluster node and shared storage may communicate over network . Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a Wide Area Network WAN a Local Area Network LAN a Personal Area Network PAN the Internet Power Line Communications PLC a cellular network e.g. a GSM Network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections.

In some embodiments all or a portion of exemplary system may be implemented in a virtual environment. For example cluster nodes and may be implemented as virtual machines running as guest systems on two different host systems i.e. physical machines with virtualization software . Such a configuration may provide high availability while making possible live migrations of virtual cluster nodes between host systems. In a second example cluster node may run directly on a physical host system while cluster node runs as a guest system on the same host system. As a third example both cluster nodes and may run as guest systems on a single host system. The second and third examples may make efficient use of hardware but may also be less useful for providing high availability.

At step in one or more of the systems described herein may identify an application running on a first cluster node of a high availability cluster. For example identification module may identify application running on cluster node . Identification module may identify application in a variety of contexts. For example identification module may identify application as part of a request to start or stop application .

Identification module may identify application as an application that is not cluster aware and therefore is not programmed or otherwise configured to take advantage of failover capabilities in a traditional cluster environment. After identifying application as a non cluster aware application identification module may inform monitoring module and or cluster agent that configuration data for application should be copied to shared storage .

At step in one or more of the systems described herein may copy configuration data of the application to a storage location accessible by a second cluster node of the high availability cluster. For example monitoring module may copy configuration data of application to a storage location e.g. shared storage accessible by a cluster node . The configuration data may be copied in a variety of contexts. In some embodiments the configuration of data may be copied to a shared storage location when application starts. Additionally or alternatively monitoring module may copy configuration data of application to shared storage when the configuration data of application on cluster node is modified. In some embodiments monitoring module may copy the configuration data of application to shared storage when application is stopped or otherwise terminated.

As mentioned the configuration data of application may be copied to configuration data database on shared storage at startup of application . In such an embodiment cluster agent may receive a request to start application . If shared storage does not include configuration data for application when application starts cluster agent may prompt monitoring module to copy configuration data from application to shared storage .

If configuration data for application is already on shared storage cluster agent may apply the configuration data stored on shared storage to application . For example cluster agent may copy the configuration data in shared storage to a location on cluster node that stores configuration data for application . In some embodiments agent may replace any configuration data already stored on cluster node with the configuration data from shared storage . Alternatively cluster agent may combine configuration data already on cluster node with configuration data from shared storage by performing a differential merge as will be discussed in greater detail below.

Cluster agent may provide information to monitoring module that identifies a directory tree set of directory trees and or other locations that store configuration data for application . Cluster agent may also prompt monitoring module to begin monitoring the identified locations for changes. Cluster agent may communicate with monitoring module in any suitable way. For example cluster agent may communicate with monitoring module via an inter process communication e.g. using shared memory .

Monitoring module may register for file change notifications for each directory tree or other location associated with configuration data of application . Monitoring module may then inform cluster agent that cluster agent may start application and in response cluster agent may start application .

When application is running configuration data of application may be copied to shared storage when the configuration data changes. For example monitoring module may monitor the locations where the configuration data of application is stored e.g. by registering for change notifications monitoring input and output activity etc. . If monitoring module detects that the configuration data of application has been changed monitoring module may back up the configuration data of application to shared storage .

Configuration data may also be copied to a shared storage location when application is stopped. In such embodiments cluster agent may receive a request to stop application . Cluster agent may then inform monitoring module that the application has stopped and monitoring module may back up the configuration data associated with application to shared storage .

At step in one or more of the systems disclosed herein may detect failure of the first cluster node. For example cluster agent may determine that cluster node has failed. Failure of a cluster node may be detected in various ways. In some embodiments cluster agent may detect failure of cluster node by determining that one or more resources e.g. disks network adapters file systems databases applications etc. of cluster node have failed. A failed resource may be a resource that is no longer functioning properly due to a hardware problem a software problem being overloaded and or any other issue.

In some clusters resources may be organized into service groups which are sets of resources that work together to provide application services to clients. In such embodiments if a resource in a service group on cluster node fails cluster agent may begin a failover procedure for the entire service group. In other words cluster agent may failover each resource in the service group if cluster agent detects failure of any resource in the service group.

At step in one or more of the systems described herein may restore the configuration data to the second cluster. For example cluster agent may restore configuration data of application from shared storage to cluster node . The configuration data may be restored in any suitable manner. For example the configuration data may be copied from configuration data database in shared storage to cluster node . In some embodiments cluster agent may provide the configuration data to application e.g. by copying the configuration data to a memory region that stores registry data for application without making any changes to the configuration data.

Alternatively cluster agent may merge the configuration data from shared storage with configuration data that is already on cluster node . Cluster agent may merge the configuration data for a variety of reasons and in a variety of ways. For example if two instances of an application are running one on cluster nodes and the other on cluster node and the instance running on cluster node fails the application instance running on cluster node may failover to cluster node . To handle the failover cluster agent may restore the configuration data from configuration database to cluster node and may merge the restored configuration data with the configuration data already on cluster node i.e. the configuration data for the instance of the application running on cluster node . Cluster agent may then start a second instance of the application on cluster node and may make the restored configuration data available to the second instance of the application.

Cluster agent may merge different sets of configuration data in a variety of ways. For example cluster agent may perform a differential merge of existing configuration data and restored configuration data by keeping only a single copy of settings and or options that are the same in the existing and restored configuration data and by keeping both copies of settings and or options that are different in the existing and restored configuration data. Alternatively cluster agent may perform a full merger by combining full copies of both the existing configuration data and the restored configuration data.

In some embodiments cluster agent may merge different sets of configuration data by combining the configuration data into a single file. For example configuration data of an application may be stored in an eXtensible Markup Language XML document. In such embodiments cluster agent may merge configuration data by performing a complete or differential merge of two XML documents.

In some embodiments configuration data may include node specific information such as a host name e.g. cluster node name a Globally Unique Identifier GUID or any other type of node specific information. When a cluster agent restores configuration data with node specific information to a failover cluster node the cluster agent may translate the node specific information. For example monitoring module may copy configuration data that includes node specific information to shared storage .

Restoring the configuration data may include translating node specific information. Node specific information may be translated to apply to cluster node if the configuration is restored to cluster node . Thus if cluster node fails cluster agent may retrieve the configuration data from shared storage and may translate the node specific information in the configuration data to correspond to cluster node rather than cluster node .

At step in one or more of the systems described herein may execute the application on the second cluster node in accordance with the configuration data. For example cluster agent on cluster node may execute application on cluster node in accordance with the configuration data restored from shared storage . Cluster agent may execute application in accordance with the configuration data from shared storage by ensuring that application has access to and or is configured with the restored configuration data. By restoring configuration data in this manner the systems described herein may provide high availability to applications that are not configured to failover in traditional cluster environments.

Processor generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein. For example processor may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying copying detecting restoring executing receiving taking determining monitoring and or merging steps described herein. Processor may also perform and or be a means for performing any other steps methods or processes described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation random access memory RAM read only memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an ISA PCI PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure . In certain embodiments memory controller may perform and or be a means for performing either alone or in combination with other elements one or more of the steps or features described and or illustrated herein such as identifying copying detecting restoring executing receiving taking determining monitoring and or merging.

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface . I O controller may be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the identifying copying detecting restoring executing receiving taking determining monitoring and or merging steps described herein. I O controller may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation SCSI host adapters USB host adapters IEEE 1394 host adapters SATA and eSATA host adapters ATA and PATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments communication interface may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying copying detecting restoring executing receiving taking determining monitoring and or merging steps disclosed herein. Communication interface may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device. In at least one embodiment input device may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying copying detecting restoring executing receiving taking determining monitoring and or merging steps disclosed herein. Input device may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system . In one example configuration data database from may be stored in primary storage device .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

In certain embodiments storage devices and may be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the identifying copying detecting restoring executing receiving taking determining monitoring and or merging steps disclosed herein. Storage devices and may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and physical media such as magnetic storage media e.g. hard disk drives and floppy disks optical storage media e.g. CD or DVD ROMs electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an application specific integrated circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a wide area network WAN a local area network LAN a personal area network PAN or the Internet.

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent network attached storage NAS devices configured to communicate with servers and using various protocols such as NFS SMB or CIFS.

Servers and may also be connected to a storage area network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network . Accordingly network architecture may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying copying detecting restoring executing receiving taking determining monitoring and or merging steps disclosed herein. Network architecture may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for managing application availability.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In certain embodiments one or more of the software modules disclosed herein may be implemented in a cloud computing environment. Cloud computing environments may provide various services and applications via the internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment. For example data may be scanned from and or to a cloud computing environment and or one or more of modules may operate in a cloud computing environment.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example systems presented herein may transform a computing device into a failover cluster node by deploying one or more modules described herein to the cluster node and by recovering configuration data to the node.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms a or an as used in the specification and claims are to be construed as meaning at least one of. In addition for ease of use the words including and having as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

