---

title: Conditional deferred queuing
abstract: Conditional deferred queuing may be provided. Upon receiving a message, one or more throttle conditions associated with the message may be identified. A lock associated with the throttle condition may be created on the message until the throttle condition is satisfied. Then, the lock on the message may be removed and the message may be delivered.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141447&OS=09141447&RS=09141447
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09141447
owner_city: Redmond
owner_country: US
publication_date: 20101215
---
Conditional deferred queuing may provide a capability for delaying message processing according to an established set of rules and or priorities. In conventional systems a message may go through a series of queues and processing stages. Each processing block may take a message from the queue perform an operation on the message and requeue the message for further processing and or delivery. In some situations the processing may need to be delayed such as when a concurrency limit is exceeded and or a needed resource is unavailable. With conventional systems predicting the need to delay processing of the message may be difficult or impossible so message processing may be delayed for a fixed amount of time. This may lead to idle resources if the fixed delay is too long or wasted resources if the fixed delay is too short.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter. Nor is this Summary intended to be used to limit the claimed subject matter s scope.

Conditional deferred queuing may be provided. Upon receiving a message one or more throttle conditions associated with the message may be identified. A lock associated with the throttle condition may be created on the message until the throttle condition is satisfied. Then the lock on the message may be removed and the message may be delivered.

Both the foregoing general description and the following detailed description provide examples and are explanatory only. Accordingly the foregoing general description and the following detailed description should not be considered to be restrictive. Further features or variations may be provided in addition to those set forth herein. For example embodiments may be directed to various feature combinations and sub combinations described in the detailed description.

The following detailed description refers to the accompanying drawings. Wherever possible the same reference numbers are used in the drawings and the following description to refer to the same or similar elements. While embodiments of the invention may be described modifications adaptations and other implementations are possible. For example substitutions additions or modifications may be made to the elements illustrated in the drawings and the methods described herein may be modified by substituting reordering or adding stages to the disclosed methods. Accordingly the following detailed description does not limit the invention. Instead the proper scope of the invention is defined by the appended claims.

Conditional deferred queuing may be provided. Consistent with embodiments of the present invention messages may be locked and enqueued according to a throttle condition. A data structure may keep track of the condition that is associated with each locked message in the queue and a message may not be dequeued while it is locked. A message that is locked on a throttle condition may remain in a locked state until that condition is signaled and it s the first message on that condition. Once a message is unlocked it may be delivered to a message processing component or to a recipient for example by the next dequeue operation.

The throttle condition may be used as a flag to distinguish one condition from another. The queue may be signaled when a particular condition can accept more messages. For example for a message identifier condition the queue may be signaled to unlock the first message on the queue when a copy of the same message currently being processed completes its delivery.

Each of the condition queues may be associated with a different throttle condition such as a resource availability condition a message identifier condition a concurrency limit condition and or a tenancy condition. For example first condition queue may comprise a concurrency condition queue comprising messages all intended for the same recipient. The concurrency condition queue may for example limit the number of messages sent by a single user that may be concurrently processed allowing messages from other users to receive access to the resources of mail server . As each message from that user finishes processing the next message on the queue may be unlocked and moved to the unlocked message queue. Second condition queue may for example comprise a resource availability queue of messages waiting to be delivered to a message processing component such as a virus scanner. Consistent with embodiments of the invention messages A E messages A F messages A F and or messages A F may be queued in order of their receipt by mail server .

A dequeue request may be generated by mail server that may comprise a specific priority causing the first active and or unlocked item enqueued at that priority to be delivered. Dequeuing requests without a priority may cause the first active and or unlocked message to be delivered and or may rely on a specific heuristic about which priority to dequeue next based on prior dequeues and enqueues. For example the priority queue with the largest backlog or the queue with the least recent dequeue may be dequeued. Dequeue operations at a given priority may dequeue an unlocked message from the associated conditional queue first and if no message is found then dequeue from the queue of active messages at that priority. An unlocked message may be prioritized ahead of messages that were never locked within the same priority i.e. active messages but behind messages that were unlocked ahead of that message. A locked message may be prioritized behind all other messages as it is not eligible to be dequeued. Unlock requests may be similarly generated by mail server when the condition associated with the respective condition queue occurs. For example locked messages in first conditional queue may each be associated with the same recipient. When one message for that recipient is delivered an unlock request may be generated causing the next locked message for that recipient to be unlocked and made available for a future dequeue request.

From stage method may advance to stage where computing device may determine whether the message is first in the active message queue. If not method may remain in stage e.g. other messages in the active queue ahead of the message may be processed until the message becomes first in the queue.

Once the message reaches the front of the active message queue method may then advance to stage where computing device may determine whether a throttle condition applies to the message. For example a service level agreement with second user may prioritize messages sent and or received by second user . If messages received from second user are currently being processed by message processing components such as a DNS resolver a spam filter and or a virus scanner the message received from first user may be associated with a resource availability throttle condition. Mail server may make this determination as each message is dequeued from the active message queue which may occur in the order the messages were received by mail server .

If the message is determined to be associated with a throttle condition at stage method may advance to stage where computing device may lock the message. For example mail server may associate a locked flag with the message and assign the message to third condition queue . Such a locked message may not be delivered until the throttle condition is satisfied and the locked flag associated with the message is cleared. Consistent with embodiments of the invention locked messages may be maintained in order and may be entered into locked message queue .

From stage method may advance to stage where computing device may determine whether the throttle condition is satisfied. If not method may remain in stage until the throttle condition has been met. For example if the message is waiting on a virus scanner component to become available the message may remain locked in the resource availability condition queue until the virus scanner indicates that it has become available. The indication may comprise for example an Application Programming Interface API invocation and or a Remote Procedure Call RPC to unlock a message

After the throttle condition is determined to be satisfied at stage method may advance to stage where computing device may unlock the message. For example mail server may clear the locked flag associated with the message and re assign the message from locked message queue to unlocked queue of conditional queue . Consistent with embodiments of the invention multiple messages may be unlocked in a single operation. For example upon determining that a throttle condition associated with delivering messages to a particular recipient is satisfied a plurality of messages destined for that recipient may be unlocked.

From stage method may advance to stage where computing device may determine whether the message is first in the queue. For example messages may be queued according to a first in first out FIFO manner with unlocked messages being assigned according to the time they were unlocked and messages not associated with a throttle condition being assigned according to the time they were received. Consistent with embodiments of the invention messages received from a conditional queue may be assigned according to the time they were received and may thus be in the queue ahead of messages that were not associated with a throttle condition but which were received after the throttled message. Consistent with further embodiments of the invention messages that become unlocked may be dequeued ahead of messages that were never locked. Method may remain in stage until the message is the first message in queue when a dequeue request is received.

If the message is first in the queue or if no throttle condition was determined to apply at stage method may then advance to stage where computing device may deliver the message. For example mail server may deliver the message to a recipient such as user A associated with tenant . For another example mail server may deliver the message to a processing component such as a virus scanner. Consistent with embodiments of the invention the message may be requeued after processing by a component. Method may then end at stage .

An embodiment consistent with the invention may comprise a system for providing conditional deferred queuing. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to receive a message identify a throttle condition associated with the message create a lock on the message associated with the throttle condition and determine whether the throttle condition is satisfied. In response to determining that the throttle condition is satisfied the processing unit may be operative to remove the lock on the message and then deliver the message. The message may comprise for example an e mail message an instant messaging service message and or a text message. The throttle condition may comprise for example a resource availability condition a message identifier condition a concurrency limit condition and or a tenancy condition. Being operative to deliver the message may comprise the processing unit being operative to deliver the message to a recipient user and or a message processing component e.g. a virus scanner a spam filter an ad service a calendaring function etc. .

The processing unit may be further operative to prior to removing the lock on the message determine whether the message is a first locked message of the conditional queue. If not the processing unit may maintain the lock on the message. The processing unit may be further operative to identify a priority associated with the message and assign the message to a priority queue associated with the identified priority. The conditional queue may be associated with the priority queue that is a plurality of conditional queues may be used and each may be associated with one and or more priority queues.

Consistent with embodiments of the invention messages in the priority queue s may not be associated with throttle conditions. The processing unit may be operative to receive an unlock request associated with the identified priority determine whether the message is first in the queue associated with the throttle condition and in response to determining that the message is first unlock the message and move it to an unlocked active queue. In response to receiving a dequeue request the first message of the unlocked active queue may be delivered.

Another embodiment consistent with the invention may comprise a system for providing conditional deferred queuing. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to receive a message identify a throttle condition associated with the message assign the message to a conditional queue associated with the throttle condition determine whether the throttle condition is satisfied and if so deliver the message if the message is the first message in the conditional queue. The throttle condition may comprise for example a concurrency limit condition associated with a recipient and or a sender of the message. That is the throttle condition may limit the number of messages that may be concurrently processed that are addressed to and or sent by a single user. The throttle condition may comprise a message identifier condition limiting processing of a plurality of copies of the message such as where the same message is being sent and or copied to multiple recipients. The throttle condition may comprise a resource availability condition comprising a threshold number of simultaneous messages that can be handled by a message processing component e.g. a memory and or processing capability limit . The throttle condition comprises a tenancy condition associated with queuing a plurality of messages associated with a plurality of message processing tenants. For example multiple organizations may use the resources of a single mail server as tenants throttle conditions may limit the number of messages being processed for each of those tenants at any given time.

Yet another embodiment consistent with the invention may comprise a system for providing conditional deferred queuing. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to receive a message determine whether the message is associated with at least one of a plurality of throttle conditions and in response to determining that the message is associated with the at least one of the plurality of throttle conditions lock the message. In response to determining that the throttle condition has been satisfied the processing unit may be operative to unlock the message. If the message is not associated with a throttle condition the processing unit may be operative to deliver the message.

With reference to a system consistent with an embodiment of the invention may include a computing device such as computing device . In a basic configuration computing device may include at least one processing unit and a system memory . Depending on the configuration and type of computing device system memory may comprise but is not limited to volatile e.g. random access memory RAM non volatile e.g. read only memory ROM flash memory or any combination. System memory may include operating system one or more programming modules and may include for example a queuing component and or a message processing component . Operating system for example may be suitable for controlling computing device s operation. Furthermore embodiments of the invention may be practiced in conjunction with a graphics library other operating systems or any other application program and is not limited to any particular application or system. This basic configuration is illustrated in by those components within a dashed line .

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by a removable storage and a non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all computer storage media examples i.e. memory storage. Computer storage media may include but is not limited to RAM ROM electrically erasable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as a keyboard a mouse a pen a sound input device a touch input device etc. Output device s such as a display speakers a printer etc. may also be included. The aforementioned devices are examples and others may be used.

Computing device may also contain a communication connection that may allow device to communicate with other computing devices such as over a network in a distributed computing environment for example an intranet or the Internet. Communication connection is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. The term computer readable media as used herein may include both storage media and communication media.

As stated above a number of program modules and data files may be stored in system memory including operating system . While executing on processing unit programming modules may perform processes including for example one or more of method s stages as described above. The aforementioned process is an example and processing unit may perform other processes. Other programming modules that may be used in accordance with embodiments of the present invention may include electronic mail and contacts applications word processing applications spreadsheet applications database applications slide presentation applications drawing or computer aided application programs etc.

Generally consistent with embodiments of the invention program modules may include routines programs components data structures and other types of structures that may perform particular tasks or that may implement particular abstract data types. Moreover embodiments of the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Furthermore embodiments of the invention may be practiced in an electrical circuit comprising discrete electronic elements packaged or integrated electronic chips containing logic gates a circuit utilizing a microprocessor or on a single chip containing electronic elements or microprocessors. Embodiments of the invention may also be practiced using other technologies capable of performing logical operations such as for example AND OR and NOT including but not limited to mechanical optical fluidic and quantum technologies. In addition embodiments of the invention may be practiced within a general purpose computer or in any other circuits or systems.

Embodiments of the invention for example may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process. Accordingly the present invention may be embodied in hardware and or in software including firmware resident software micro code etc. . In other words embodiments of the present invention may take the form of a computer program product on a computer usable or computer readable storage medium having computer usable or computer readable program code embodied in the medium for use by or in connection with an instruction execution system. A computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific computer readable medium examples a non exhaustive list the computer readable medium may include the following an electrical connection having one or more wires a portable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber and a portable compact disc read only memory CD ROM . Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Embodiments of the present invention for example are described above with reference to block diagrams and or operational illustrations of methods systems and computer program products according to embodiments of the invention. The functions acts noted in the blocks may occur out of the order as shown in any flowchart. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality acts involved.

While certain embodiments of the invention have been described other embodiments may exist. Furthermore although embodiments of the present invention have been described as being associated with data stored in memory and other storage mediums data can also be stored on or read from other types of computer readable media such as secondary storage devices like hard disks floppy disks or a CD ROM a carrier wave from the Internet or other forms of RAM or ROM. Further the disclosed methods stages may be modified in any manner including by reordering stages and or inserting or deleting stages without departing from the invention.

All rights including copyrights in the code included herein are vested in and the property of the Applicant. The Applicant retains and reserves all rights in the code included herein and grants permission to reproduce the material only in connection with reproduction of the granted patent and for no other purpose.

While the specification includes examples the invention s scope is indicated by the following claims. Furthermore while the specification has been described in language specific to structural features and or methodological acts the claims are not limited to the features or acts described above. Rather the specific features and acts described above are disclosed as example for embodiments of the invention.

