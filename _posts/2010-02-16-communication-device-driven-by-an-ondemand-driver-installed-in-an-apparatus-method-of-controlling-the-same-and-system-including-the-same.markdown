---

title: Communication device driven by an on-demand driver installed in an apparatus, method of controlling the same, and system including the same
abstract: A communication device is driven by an on-demand driver installed in an apparatus that includes an on-demand driver generating program that generates the on-demand driver for the communication device based on device information of the communication device. The communication device includes a memory unit that stores therein the device information of the communication device, a responding unit that, in response to a request for obtaining the device information from the on-demand driver generating program, sends the device information stored in the memory unit to the apparatus, and an updating unit that is used in externally updating the device information stored in the memory unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08553257&OS=08553257&RS=08553257
owner: Ricoh Company, Limited
number: 08553257
owner_city: Tokyo
owner_country: JP
publication_date: 20100216
---
The present application claims priority to and incorporates by reference the entire contents of Japanese Patent Application No. 2009 042932 filed in Japan on Feb. 25 2009.

The present invention relates to a communication device such as a computer peripheral device having a communication function a method of controlling the communication device and a system including the communication device.

A typical example of a computer peripheral device is a printer that is driven by a printer driver. Usually for every printer model or every operating system OS version a separate printer driver is provided. Thus development of printer drivers compatible to a large number of printer models OS versions requires a substantial amount of effort. Moreover due to the rise in the number of printer drivers bundled to an OS there has been an increase in the required capacity for bundling and an increase in the time and effort of managing requests from printer driver developers to OS developers. Even from the user perspective since it is necessary to perform the task of installing or uninstalling printer drivers for every different printer user friendliness gets affected at the time of using a printer.

Japanese Patent Application Laid open No. 2008 165654 discloses a technology in which a common gateway interface CGI program run by a browser function of a multifunction peripheral MFP determines the version of a printer driver and when a device driver needs to be updated sends response information including driver update information that is necessary for updating the device driver to a personal computer PC . On a remote user interface UI on a client PC the user of that client PC is notified that it is necessary to obtain the latest printer driver with the information of the source destination of the latest printer driver.

However although the technology disclosed in Japanese Patent Application Laid open No. 2008 165654 enhances the user friendliness to a certain extent while updating a printer driver the user still needs to obtain the necessary driver and then install it. Hence it remains the case that a printer driver is installed for each printer model OS version.

In view of the abovementioned problem the inventors of the present invention invented a technology with the aim of reducing the number of bundled drivers to an OS and making it possible to update a device driver while freeing the user from performing the conventional task of obtaining the device driver. In the invention an external apparatus such as a PC that includes a device driver for driving a computer peripheral device such as a printer obtains device information of the computer peripheral device information on a function of the device and updates the device driver by automatically producing the device driver based on the device information. The device driver produced in this way is hereinafter referred to as an on demand driver and the description thereof is given later. Conventionally the device information for example a generic printer description GDP file of a computer peripheral device is stored in a device driver itself. Hence each time a computer peripheral device is changed it is necessary to obtain and install a device driver for the device.

In the abovementioned invention if the device configuration changes when an optional function is newly added to the computer peripheral device or if there is a difference in settings in each usage environment then it is sometimes necessary to rewrite update the device information. Besides since it is not possible to include in the device information regarding functions that do not currently exist information in advance it becomes necessary to update the device information sometime in the future.

It is an object of the present invention to at least partially solve the problems in the conventional technology.

According to one aspect of the present invention there is provided a communication device that is driven by an on demand driver installed in an apparatus that includes an on demand driver generating program that generates the on demand driver for the communication device based on device information of the communication device. The communication device includes a memory unit that stores therein the device information of the communication device a responding unit that in response to a request for obtaining the device information from the on demand driver generating program sends the device information stored in the memory unit to the apparatus and an updating unit that is used in externally updating the device information stored in the memory unit.

Furthermore according to another aspect of the present invention there is provide a method of controlling a communication device that is driven by an on demand driver installed in an apparatus that includes an on demand driver generating program that generates the on demand driver for the communication device based on device information of the communication device. The method includes storing the device information of the communication device in a memory unit responding including in response to a request for obtaining the device information from the on demand driver generating program sending the device information stored in the memory unit to the apparatus and updating externally updating the device information stored in the memory unit.

Furthermore according to still another aspect of the present invention there is provided a system including a communication device and an information processing apparatus that is connected to the communication device via a network. The information processing apparatus includes an on demand driver generating program that obtains device information of the communication device and generates an on demand driver for driving the communication device based on the device information and the on demand driver. The communication device includes a memory unit that stores therein the device information of the communication device a responding unit that in response to a request for obtaining the device information from the on demand driver generating program sends the device information stored in the memory unit to the information processing apparatus and an input output unit that is used in externally updating the device information stored in the memory unit.

The above and other objects features advantages and technical and industrial significance of this invention will be better understood by reading the following detailed description of presently preferred embodiments of the invention when considered in connection with the accompanying drawings.

Exemplary embodiments of the present invention are described in detail below with reference to the accompanying drawings. The present invention is not limited to these exemplary embodiments.

Firstly the description is given with reference to about a configuration example of a system including an image forming apparatus according to an embodiment of the present invention. is a schematic diagram of an exemplary system according to an embodiment of the present invention that includes an image forming apparatus and a plurality of information processing apparatus connected to the image forming apparatus via a network.

As illustrated in an image forming apparatus a PC A and a PC B that are information processing apparatuses and a data server are interconnected via a network . The data server stores therein device information described later of the image forming apparatus . A typical example of the image forming apparatus is a printer or an MFP. Meanwhile the configuration illustrated in is only an example and it is possible to dispose an arbitrary number of PCs or image forming apparatuses.

Given below is the description with reference to of a configuration of the image forming apparatus according to the present embodiment. is a block diagram of an exemplary configuration of the image forming apparatus according to the present embodiment.

The image forming apparatus includes a central processing unit CPU a system memory a north bridge NB a south bridge SB an application specific integrated circuit ASIC a memory unit an interface I F unit an operation panel an engine unit and other optional devices not illustrated .

The CPU intensively controls the image forming apparatus . The system memory is configured from a read only memory ROM and a random access memory RAM and is used in storing computer programs that the CPU executes. Besides the system memory is also used as a working area for performing a drawing process.

The NB is a bridge that interconnects the CPU the system memory the SB the ASIC and the I F unit and that includes a memory controller or a peripheral component interconnect PCI master. The SB is a bridge that connects the NB with peripheral devices. The connection between the SB and the NB is established via a PCI bus.

The ASIC is an integrated circuit IC that includes image processing hardware components and is specifically configured to perform image processing. Moreover the ASIC is connected to the operation panel that is used in displaying information and receiving user input and connected to the engine unit that performs image formation. The ASIC performs data communication with the operation panel and the engine unit .

The memory unit includes a hard disk drive HDD a flash ROM a non volatile RAM NVRAM and a synchronous dynamic RAM SDRAM . The memory unit is used for example as a storage area for storing image data or as a working area for performing image processing.

The I F unit includes a network I F such as an Ethernet registered trademark I F I Fs such as a universal serial bus USB I F an IEEE 1394 I F and a wireless I F that are used for connection with external devices an external device I F that enables detachable attachment of an external memory medium and that is configured compatible to the standard of the external memory medium and a general switched telephone network GSTN I F that is used for connection with a public telephone network. Using these I Fs the image forming apparatus can be connected to networks such as the Internet an intranet and a public telephone network or connected to a variety of external devices and apparatuses. Meanwhile as the abovementioned external memory medium any type of memory card such as a secure digital SD card or a compact flash registered trademark memory card can be used.

Given below is the description with reference to of a software configuration of the image forming apparatus according to the present embodiment. is a block diagram of an exemplary software configuration of the image forming apparatus .

The exemplary configuration illustrated in is mainly divided into an application unit and a platform unit . Besides a simple object access protocol extensible markup language SOAP XML processing unit is disposed to be usable by both the application unit and the platform unit . Meanwhile the functions of application programs hereinafter referred to as applications control units and processing units included in the application unit the platform unit and the SOAP XML processing unit are implemented by the CPU illustrated in .

The application unit includes a plurality of applications that perform processing inherent to user services related to image forming operations such as printing and copying. As illustrated in the application unit includes a copying application that is an application for copying a facsimileing application that is an application for facsimileing a scanning application that is an application for scanning a networking file application that is an application regarding networking files and a printing application that is an application for printing.

The platform unit is configured from a variety of control units that along with an OS Kernel interpret processing requests issued from the application unit and generate acquisition requests for acquiring various resources such as hardware resources. The platform unit includes a system control unit a memory control unit an engine control unit a security control unit a distribution control unit an operation control unit a power management unit a network control unit and a facsimileing control unit as described later. The OS Kernel includes a processing unit not shown that performs network processing under sockets.

The platform unit is configured to include an application programming interface API that can receive processing requests from the application unit using pre defined functions.

The system control unit performs processing such as management of a variety of hardware resources that includes application management input output control with respect to peripheral devices and detection of optional devices. The memory control unit performs processing such as acquisition release of memory resources and compression expansion of image data.

The engine control unit controls the engine unit illustrated in for image formation. The security control unit provides a security service to the application unit or each control unit. For example the security control unit performs data encryption and data decryption. The distribution control unit performs control and processing of data communicated with other devices. The operation control unit controls the operation panel illustrated in that functions as an information transmitting unit between the user and the image forming apparatus .

The power management unit monitors the electrical condition of the CPU or other hardware resources as well as performs management and monitoring of the energy saving status of the other control units or of the application unit . The power management unit functions in close association with the OS Kernel .

The network control unit is connected to the network I F such as an Ethernet registered trademark I F and provides sharable services to applications that require network input output I O processing. Besides the network control unit serves as an intermediary for allocating data that is received via the network using each protocol to each application and sending data from each application to the network.

The facsimileing control unit performs via the GSTN I F facsimile communication using a public telephone network registration and citation of a variety of facsimile data managed in a backup memory and provision of API for printing of received facsimiles.

As described above the SOAP XML processing unit is disposed to be usable by both the application unit and the platform unit . The SOAP XML processing unit performs encoding decoding of SOAP XML messages. Although the SOAP XML processing unit is usually provided in the form of a library it can also be provided as a process.

Meanwhile the image forming apparatus can also be configured while removing some of the applications in the application unit some of the control units in the platform unit or some of the interfaces in the I F unit .

Given below is the description with reference to about a configuration of the components such as the network control unit and the printing application that are relevant to the characteristic processing of the image forming apparatus according to the present embodiment. In a configuration example of the relevant components such as the network control unit and the printing application is illustrated along with other components such as applications or services as well as the SOAP XML processing unit the external device I F and the flash ROM and the HDD of the memory unit . Meanwhile in the components also illustrated in other diagrams are referred to by the same reference numerals.

In the present embodiment the flash ROM and the HDD are assumed to be non detachable and fixed components. Moreover although not illustrated in regarding accessing the flash ROM the HDD or an external memory medium such as an SD card the system control unit the memory control unit and the security control unit are also involved. In the following description the WS PRINT protocol to which the web services on device WSD confirms is given as an example of the protocol for implementing the printing function.

The network control unit includes an overall control unit that controls the network control unit in entirety a communication unit that performs communication of messages or data with other applications control units or the network I F a hypertext transfer protocol HTTP control unit that processes the HTTP protocol a WS PRINT processing unit that processes the WS PRINT protocol an information obtaining unit that obtains device information from external components or external devices and a plurality of protocol control units that process protocols other than the HTTP protocol e.g. file transfer protocol FTP Port 9100 protocol line printer remote LPR protocol etc. .

The printing application includes an overall control unit that controls the printing application in entirety a communication unit that performs communication of messages or data with other applications or control units a WS PRINT processing unit that processes the WS PRINT protocol and an information obtaining unit that obtains device information from external components.

The WS PRINT processing units and are disposed in either one of the network control unit and the printing application and are enclosed by dashed lines in . In the examples of operation sequence described later it is assumed that the WS PRINT processing unit is disposed in the network control unit . Meanwhile as illustrated in an SD card is connected to the external device I F . Alternatively any other similar external memory medium can also be connected.

When the image forming apparatus receives a device information obtaining request t then in the network control unit of the image forming apparatus the HTTP control unit sends the device information obtaining request to the WS PRINT processing unit t . Subsequently the WS PRINT processing unit sends the device information obtaining request to the SOAP XML processing unit t and instructs decoding of the contents of the request. The SOAP XML processing unit decodes the contents of the device information obtaining request and sends back the decoding result to the WS PRINT processing unit t .

Subsequently the WS PRINT processing unit sends the received decoding result to the information obtaining unit t . Then depending on the decoding result the information obtaining unit obtains necessary information as the device information from the other components via the communication unit t t and sends the device information to the WS PRINT processing unit t .

The WS PRINT processing unit then sends the device information received from the information obtaining unit to the SOAP XML processing unit t and instructs encoding of the device information. The SOAP XML processing unit encodes the device information and sends back the encoding result to the WS PRINT processing unit t . The WS PRINT processing unit then sends the encoded device information specific example described later encoded by the SOAP XML processing unit to the HTTP control unit t . Eventually the HTTP control unit sends the received information to the PC as a response to the device information obtaining request t .

The difference between the operation sequence in the first example and the second example is as follows. In the operation sequence in the first example the information obtaining unit in the network control unit directly obtains the device information from the other components of the image forming apparatus via the communication unit . In contrast in the operation sequence in the second example the information obtaining unit in the network control unit makes the information obtaining unit in the printing application obtain the device information via the communication unit in the network control unit and the communication unit in the printing application t to t . That is because of the fact that essentially the network control unit should not be dependent on the configuration of a printer driver. Thus by performing control of the printer driver from within the printing application that has a strong association with the printer driver it becomes possible to retain the independence of each control unit.

In the operation sequence in the second example the information obtaining unit in the printing application obtains the device information from an external memory medium connected to the external device I F or from the HDD or the flash ROM in the memory unit . The device information obtained by the information obtaining unit in the printing application is sent to the information obtaining unit of the network control unit via the communication unit in the printing application and the communication unit in the network control unit . The other steps t to t t to t are identical to those in the first example details given above . After the set of steps is implemented the information obtaining unit in the network control unit sends the device information to the PC.

The abovementioned examples are given for the case when the WS PRINT processing unit is disposed in the network control unit . Alternatively it is also possible that the printing application including the WS PRINT processing unit makes a call to the SOAP XML processing unit . In that case the HTTP control unit in the network control unit sends the device information obtaining request from the PC to the WS PRINT processing unit in the printing application via the communication unit in the network control unit and the communication unit in the printing application . The device information is then sent to the SOAP XML processing unit for decoding. Depending on the decoding result the information obtaining unit in the printing application obtains the device information.

The difference between the operation sequence in the first example and the third example is as follows. In the operation sequence in the first example the information obtaining unit in the network control unit directly obtains the device information from the other components of the image forming apparatus via the communication unit in the network control unit . In contrast in the operation sequence in the third example the information obtaining unit in the network control unit obtains device information from an external server such as the data server via the protocol control units t to t . Because of that the device information corresponding to the upgraded image forming apparatus can be provided in an identical manner to the conventional way of releasing an updated printer driver. As a result it becomes easier to manage when for example an on demand driver is provided along with a normal driver.

In the operation sequence in the third example depending on the decoding result of a device information obtaining request received from the WS PRINT processing unit the information obtaining unit in the network control unit issues an information obtaining request to the protocol control units for obtaining the device information from an external server t . Then the protocol control units perform protocol processing on the information obtaining request which is issued by the information obtaining unit on the basis of the communication protocol e.g. Ethernet registered trademark used in the network and sends the information obtaining request to the external server via the network I F t .

The external server then sends back the device information as a response to the information obtaining request t . The protocol control units perform protocol processing on the received device information based on the communication protocol used in the network and send the device information to the information obtaining unit in the network control unit t . The other steps t to t t to t are identical to those in the first example details given above . After the set of steps is implemented the information obtaining unit in the network control unit sends the device information to the PC.

In the abovementioned examples of the operation sequence in response to a device information obtaining request either the network control unit directly obtains the device information from other components of the image forming apparatus or the printing application obtains the device information via the external device I F or from the HDD or the network control unit obtains the device information from an external server. Besides the device information can also be obtained by arbitrarily combining the operation sequences in the abovementioned examples. The device information obtained by the information obtaining unit or the information obtaining unit is stored dispersedly or collectively in a memory unit of the image forming apparatus such as one of the memories or the HDD or in a memory unit of an external server in a predetermined format. Meanwhile as illustrated later the device information sent as a response to the PC has an XML format that is suitable for network communication.

In the following description regarding the network control unit the operations of the network control unit which are explained in the first to third examples of the operation sequence and performed in response to a device information obtaining request from the PC are explained with reference to a flowchart in . is a flowchart for explaining the operations of the network control unit in response to a device information obtaining request from the PC.

When the network control unit receives a device information obtaining request from the PC Step S the information obtaining unit in the network control unit responds to the device information obtaining request by obtaining the device information Step S .

The methods of obtaining the device information at Step S are as follows. As explained in the first example of the operation sequence the information obtaining unit in the network control unit can obtain the device information from another component in the software group illustrated in the flash ROM the HDD or an external memory medium such as the SD card via the external device I F . Alternatively as explained in the second example of the operation sequence the network control unit make the information obtaining unit in the printing application obtain the device information and then receive the same. Still alternatively as explained in the third example of the operation sequence the network control unit can obtain the device information from an external server.

Eventually the information obtaining unit in the network control unit sends the obtained device information to the PC as a response to the device information obtaining request Step S .

 Sequence of Operations at the Time of Replacedly Attaching an External Recording Medium Having Device Information Stored Therein First Example of Device Information Updating 

Given below is the description with reference to about an exemplary sequence of operations in an external information processing apparatus and the image forming apparatus at the time of replacedly attaching an external recording medium having the device information stored therein.

As illustrated in device information data is created in an external information processing apparatus such as a PC Step S . Then the device information data is written in an external recording medium such as an SD card from the information processing apparatus Step S .

Subsequently an external recording medium attached to the image forming apparatus is replaced with the external recording medium in which the newly created device information data is stored Step S and the image forming apparatus is restarted Step S . After the image forming apparatus restarts the device information therein gets updated.

Then upon receiving a device information obtaining request from the PC the image forming apparatus responds with the updated device information that has been stored in the replacedly attached external recording medium in the manner explained in the first example of the operation sequence Step S . In this way an external recording medium can be used to update the device information data. For that the newly created device information can be stored in the external recording medium from an external image processing apparatus and the external recording medium can be attached in place of the old external recording medium.

 Sequence of Operations in Response to a Device Information Writing Request from PC Second Example of Device Information Updating 

Given below is the description with reference to about the operations in the network control unit in response to a device information writing request from a PC. is a sequence diagram of operations at the time of writing the device information from an external PC into the image forming apparatus . is a flowchart for explaining the sequence of operations at the time of writing the device information from an external PC into the image forming apparatus .

When the image forming apparatus receives a device information writing request from an external PC t Step S one of the protocol control units or the HTTP control unit in the network control unit performs protocol processing on the device information writing request on the basis of the communication protocol used in the network and then via the communication unit in the network control unit writes the device information writing request in an external recording medium connected to the external device I F or in the HDD or the flash ROM of the memory unit t and t Step S . Then a predetermined response to the device information writing request is sent back to the external apparatus t Step S .

In this way as a method of updating device information data the device information can be written from an external information processing apparatus such as a PC in an external recording medium that is detachably attached to the image forming apparatus or in the HDD or the flash ROM that is fixedly disposed in the image forming apparatus .

Described below are some examples of the device information. is a schematic diagram of an example of device information fixed data that the image forming apparatus sends as a response to a device information obtaining request from outside. Meanwhile since the device information obtained in the image forming apparatus is assumedly responded via a network the following examples of device information are illustrated in the XML format. In the examples the description following a hash sign is an explanatory comment.

In the Body section following the Header section in the portion written between a tag and a tag represents fixed data that cannot be rewritten from outside. In that particular portion description is given about the resolution Resolution a paper feeding tray PaperFeedUnit and a finishing unit FinisherUnit . Regarding the resolution it is made possible to select between 300 dots per inch dpi and 600 dpi. Regarding the type of the paper feeding unit PaperFeedUnit it is given that an A type is attachable. Regarding the type of the finishing unit FinisherUnit it is given that a B type is attachable. Such information is the fixed information regarding the capability configuration of the image forming apparatus . Based on the fixed information the on demand driver in the PC displays a selection screen on the UI of the PC so that selections can be made regarding the fixed information.

In is illustrated an example of device information variable data and maximum optional configuration that the image forming apparatus sends as a response to a device information obtaining request from outside. In the Body section following the Header section in the portion written between a tag and a tag represents variable data that can be rewritten from outside. Besides AllowedValue represents the optional configuration of the image forming apparatus . The configuration illustrated in is the maximum optional configuration. In the first example of InstallableOptionFeature describes about a paper feed tray PaperFeedingUnit and it is given that either one of an A type to a C type of the paper feeding unit is attachable. The subsequent example describes about a finishing unit FinisherUnit and it is given that either one of an A type to a C type of the finishing unit is attachable.

At the time of generating an on demand driver the on demand driver generating program installed in the PC configures the on demand driver using the fixed data and the variable data maximum optional configuration . That is the on demand driver generating program refers to the fixed data indicating the capability of the image forming apparatus and the variable data indicating the maximum optional configuration of the image forming apparatus and accordingly generates the on demand driver in such a way that even if the configuration of the image forming apparatus changes only the selection screen on the UI of the device driver is made compatible to the changed configuration without having to regenerate the core of the on demand driver. The on demand driver is then installed in the PC details described later so that the PC can control the image forming apparatus using the on demand driver.

In is illustrated an example of device information non selectable combination data that the image forming apparatus sends as a response. In the Body section following the Header section in the portion regarding ConstraintFeature written between a tag and a tag represents data of a non selectable exclusive combination of device information. At times that data is rewritable from outside. In the example illustrated in selection of andholes as HolePunchUnit indicates that it is not possible to select Left Top and Right as HolePunchUnit . This information is reflected in the selection screen on the UI of the on demand driver installed in the PC.

In the examples illustrated in Existing Information InstallableOption and FeatureConstraint are represented as separate data XML formats . However it is also possible to create data XML format by integrating the same.

Moreover the rewritable data that changes according to the option installation status of the image forming apparatus can be rewritten from outside as described above as well as rewritten dynamically. In the case rewriting the data dynamically the option installation status of the image forming apparatus is detected when the power is ON and based on the detection result the dynamically rewritable data is generated and stored in the SDRAM or the HDD . Meanwhile the fixed data is stored in the flash ROM the HDD or the SD card .

Given below is the description with reference to about the on demand driver generating program that is installed in the PC and that generates an on demand driver for the image forming apparatus on the basis of the device information of the image forming apparatus . is a schematic diagram of a configuration of the on demand driver generating program installed in the PC.

An on demand driver generating program includes a driver generating module that obtains the device information from the image forming apparatus and generates an on demand driver a port generating module that generates a port line printer daemon LPD port LPR port component object model COM port WSD port etc. used by the on demand driver a WS PRINT control module that processes the WS PRINT protocol a network control module that controls packets communicated with an external network and an installation control module that installs in the PC an updated on demand driver having a UI.

At the time of generating the on demand driver the driver generating module obtains the device information of the image forming apparatus over the network via the WS PRINT control module and the network control module using a WSD port . The on demand driver generated by the driver generating module and the port data generated by the port generating module are respectively stored in a device driver data storing unit and a port data storing unit inside an HDD in the PC.

The driver generating module is a computer program that uses the device information and generates an on demand driver having a UI specific to the device information. Generally a device driver for an image forming apparatus has two functions namely a function for processing target information for printing received from an application and converting that information into a printing instruction and a graphic user interface GUI function for displaying a printing setting screen to the user so that the user can set printing conditions for the application and the image forming apparatus. The on demand driver generating program generates a new on demand driver by changing adding deleting GUI components to reflect therein the contents of the obtained device information and then making only the UI compatible to the updated device information. That is the on demand driver generating program rebuilds only the UI of the on demand driver based on the updated device information. Consequently the image forming apparatus gets upgraded and even when the device information is newly updated the on demand driver can be uninstalled once and then reinstalled using the same on demand driver generating program. Likewise the single on demand driver generating program can be used in installing the on demand driver for a plurality of models.

According to a request issued by an application the on demand driver generated in the abovementioned manner displays on the UI thereof the selectable items based on the obtained device information. Then the on demand driver performs print control of the image forming apparatus by sending thereto a printer job language PJL file or a postscript PS file that includes a job ticket of printing conditions paper size or option settings selected set by the user on the UI. Thus as long as the on demand driver generating program and a single on demand driver are installed in the PC the PC can deal with any model of an image forming apparatus that is driven by the on demand driver or deal with an image forming apparatus that has undergone changes in the optional configuration or settings. As a result the user is freed from the task of obtaining a new device driver. Besides the user can confirm the current functions of the image forming apparatus and make use of those functions.

Moreover as described above regarding settings duplex printing stapling etc. that have no direct effect with respect to an image portion of the page description language PDL the printer driver can operate just by comprehending the UI display format or the non selectable combinations. However regarding settings reduction or aggregation for the image portion that the printer driver is also able to process that portion can be considered to be a fixed portion and a common UI can be created at the device driver side as necessary.

Firstly when driver installation instruction is issued via a user operation Step S the installation control module instructs the driver generating module to send a device information obtaining request to the image forming apparatus via the WS PRINT control module and the network control module and obtain as a response the device information from the image forming apparatus Step S .

Upon obtaining the device information of the image forming apparatus the driver generating module generates the on demand driver based on the device information Step S . That is the driver generating module rebuilds the UI to reflect therein the obtained device information and generates the on demand driver having the rebuilt and customized UI. is a schematic diagram of an exemplary print setting screen before rebuilding the UI and is a schematic diagram of an exemplary print setting screen after rebuilding the UI. Upon rebuilding the UI herein a function B is added to the image forming apparatus as an example the print setting screen illustrated in changes to the print setting screen illustrated in in which selection setting can be performed regarding the function B.

Subsequently the installation control module instructs the port generating module to generate a port for the on demand driver generated at Step S Step S .

Then the installation control module instructs the driver generating module to store the on demand driver generated at Step S in the device driver data storing unit Step S .

Subsequently the installation control module instructs the port generating module to store the data of the port generated at Step S in the port data storing unit Step S .

In this way the on demand driver customized at the time of installation and the corresponding port data are installed in the PC. When the PC is booted a loader not illustrated loads the installed on demand driver in the system memory that is the main memory of the PC. The port data is used in connection with the on demand driver.

In the example illustrated in the installation processing is performed with the driver installation instruction issued via a user operation as the starting point. Alternatively for example it is also possible to store the previously obtained device information in the PC newly obtain the device information of the image forming apparatus upon booting the PC and if comparison of the newly obtained device information and the stored device information indicates an update then perform the processing starting from Step S. After the installation is complete the PC can be rebooted and the updated on demand driver and the port data can be reloaded so that the updated on demand driver can be used without needing the user operation for the purpose of driver updating.

Meanwhile the operation sequences the data or the processing flows in the abovementioned description are given only as examples. Alternatively for example it can also be the case that the components of the network control unit and the printing application belong to other different components or that the destination for obtaining information is wide ranging irrespective of whether the destination is inside or outside of the communication device. Moreover in the various operation sequences described above it can be the case that the information is encrypted using the secure sockets layer SSL or the transport layer security TLS or that the data itself is separately encrypted.

Meanwhile the image forming apparatus according to the embodiment of the present invention is assumed to be an image forming apparatus MFP having copying facsimileing scanning and printing functions. However the present invention is also implementable to an image forming apparatus such as a single function copying machine having communication capability a single function printer a single function scanning device and a single function facsimileing device or implementable to a computer peripheral device. Besides the present invention is not limited to an image forming apparatus or a computer peripheral device but is also implementable to any communication device that is driven by a device driver installed in an external apparatus.

The image forming apparatus described above in detail enables achieving the following advantages. Since the device information which the image forming apparatus functioning as a communication device sends in response to a device information obtaining request from the on demand driver generating program is rewritable or updatable from outside of the image forming apparatus the device information used by the on demand driver can be controlled managed for each user administrator rather than controlling managing it for each communication device. That makes it easier to provide the device information necessary for each model so that the functions of the device driver can be controlled with respect to the environment in which the models are installed and not with respect to the models. For example it becomes possible to keep control over the optional configuration or manage conditions such as restricting a particular device or the department in which that device is installed from using colors. That enables achieving reduction in the overall management cost.

Moreover because of the configuration of storing the device information in a component that is physically detachable from the image forming apparatus and attaching that component to the image forming apparatus it becomes possible to provide the device information using an external recording medium such as an SD card. Thus even in an environment having restrictions on network access or in a non network compliant environment the device information can be controlled managed without difficulty.

Furthermore because of the configuration of storing the device information in a physically non detachable component fixedly disposed Flash ROM or HDD it can be made sure that the device information is not changed by anybody other than the administrator.

Moreover by enabling rewriting of the device information via the network to which the image forming apparatus is connected it becomes possible to update the device information without having to be present at the location of the image forming apparatus .

Furthermore since the device information which the image forming apparatus sends in response to a device information obtaining request from the on demand driver generating program in a PC is stored in an external apparatus the device information of a plurality of devices can be managed without difficulty in the external apparatus such as a data server.

Moreover by configuring the device information to include a rewritable portion and a fixed portion it becomes possible to reduce the updatable volume of device information.

Furthermore by configuring the device information to include information regarding the maximum optional configuration that is connectable to the image forming apparatus it becomes possible to eliminate the need for making changes to the on demand driver even when the optional configuration connected to the image forming apparatus is changed later.

Moreover because of the configuration of detecting the optional configuration connected to the image forming apparatus and dynamically generating the device information based on the optional configuration the device information gets automatically updated.

Furthermore by configuring the device information to include the non selectable combination of device information the device driver updated with the device information enables the user to perform correct function selections.

Meanwhile it is assumed that each computer program software executed in the image forming apparatus of the present embodiment is stored in a ROM or an HDD in advance. Alternatively the computer programs can be provided in the form of installable or executable files on a computer readable storage device such as a compact disk read only memory CD ROM a flexible disk FD a compact disk recordable CD R a digital versatile disk DVD or a memory card such as an SD card.

Still alternatively the computer programs can be stored in a computer connected over a network such as the Internet and can be downloaded via the network for distribution.

The computer programs executed in the image forming apparatus according to the present embodiment contain modules for each of the abovementioned components the application unit the platform unit and the SOAP XML processing unit . In practice the CPU processor retrieves each computer program from the ROM or the HDD and runs it such that each program is loaded in the system memory. As a result the modules for the application unit the platform unit and the SOAP XML processing unit are generated in the system memory.

According to an aspect of the present invention a communication device driven by an on demand driver can be easily provided with device information that is used at the time of generating the on demand driver for each model and or usage environment and it is possible to update the device information. Moreover since the device information can also be rewritten depending on the usage environment the functions of the on demand driver can be controlled with respect to the environment in which the models are installed and not with respect to the models. Besides since the user is freed from the task of obtaining the device driver there is an enhancement in the user friendliness while using the communication device.

Although the invention has been described with respect to specific embodiments for a complete and clear disclosure the appended claims are not to be thus limited but are to be construed as embodying all modifications and alternative constructions that may occur to one skilled in the art that fairly fall within the basic teaching herein set forth.

