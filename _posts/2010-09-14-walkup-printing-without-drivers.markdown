---

title: Walk-up printing without drivers
abstract: The disclosed embodiments provide a system that supports printing from a computing device. During operation, the system uses a discovery protocol to identify printers that can be accessed by the computing device. Next, the system receives a selection of a printer that can be accessed by the computing device. The system then generates printer data for the print job. This can be accomplished in a number of ways. The system can use a driverless printing technique, which involves obtaining printer capability information from the selected printer and generating printer data for the selected printer based on the printer capability information. Alternatively, the system can use a printer-specific driver for the selected printer to generate the printer data. The system can also send the print job to a cloud, which includes one or more servers that provide a printing service, so that the cloud can generate the printer data. Finally, the system sends the generated printer data to the printer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08610927&OS=08610927&RS=08610927
owner: Apple Inc.
number: 08610927
owner_city: Cupertino
owner_country: US
publication_date: 20100914
---
This application claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 302 916 filed 9 Feb. 2010 entitled Walk Up Printing without Drivers by the same inventors as the instant application. This application also claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 351 461 filed 4 Jun. 2010 entitled Walk Up Printing without Drivers by the same inventors as the instant application. This application also claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 378 832 filed 31 Aug. 2010 entitled Walk Up Printing without Drivers by the same inventors as the instant application. This application also claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 302 922 filed 9 Feb. 2010 entitled Framework that Supports Driverless Printing by the same inventors as the instant. This application also claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 351 466 filed 4 Jun. 2010 entitled Framework that Supports Driverless Printing by the same inventors as the instant application. This application also claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 358 306 filed 24 Jun. 2010 entitled Framework that Supports Driverless Printing by the same inventors as the instant application. This application also claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 61 378 827 filed 31 Aug. 2010 entitled Framework that Supports Driverless Printing by the same inventors as the instant application.

This application is related to pending U.S. patent application Ser. No. 12 882 116 filed on the same day as the instant application entitled Framework that Supports Driverless Printing by the same inventors as the instant application. This application is also related to pending U.S. patent application Ser. No. 12 882 124 filed on the same day as the instant application entitled Printer that Supports Driverless Printing by the same inventors as the instant application. This application is also related to pending U.S. patent application Ser. No. 12 882 134 filed on the same day as the instant application entitled Data Formats to Support Driverless Printing by the same inventors as the instant application.

The disclosed embodiments relate to printers for computer systems. More specifically the disclosed embodiments relate to a computer based printing system that operates without having to generate and maintain printer specific driver software.

Printers are often a problem for computer users. When a computer user initially installs a printer the cabling and power cords are typically not a problem to hook up. However the user typically has to install a printer specific driver which involves loading the driver from a disk or navigating to a website and downloading the driver. Even if the printer driver is already loaded into the computer system the user typically has to load and install an update for the driver from the printer manufacturer s website. These installation operations are time consuming and commonly require the user to find and enter a long software license key.

Printers pose an even bigger problem for users of mobile computing devices such as laptops or smart phones. In practice the wireless computing device may not be configured with the requisite driver software. In this case installing the appropriate printer driver can be bothersome especially if the user of the mobile computing device only intends to use the nearby printer once or twice. Also mobile computing devices have limited storage space which makes it impractical for them to store a large number of printer drivers.

Hence what is needed is a system that facilitates printing from a computing device to a nearby printer without the above described problems.

The disclosed embodiments provide a system that supports printing from a computing device e.g. a mobile computing device . During operation the system first uses a discovery protocol to identify printers that can be accessed by the computing device. Next the system receives a selection of a printer that can be accessed by the computing device. The system then obtains printer capability information from the selected printer and generates printer data for a print job based on the selected printer capability information. Finally the system sends the generated printer data to the selected printer.

In some embodiments the printer capability information includes current printer status information for the selected printer. For example the current status information can specify whether the selected printer is off line whether the selected printer is busy or whether an error condition exists in the selected printer.

In some embodiments obtaining the printer capability information involves querying the selected printer again to obtain the printer capability information.

In some embodiments obtaining the printer capability information involves obtaining the printer capability information from the printer during the discovery protocol.

In some embodiments if the computing device contains a specific driver for the selected printer instead of obtaining printer capability and generating printer data based on the obtained capability information the system uses the specific driver to generate printer data for the selected printer.

In some embodiments instead of obtaining printer capability and generating printer data based on the obtained capability information the system sends the print job to a cloud containing one or more servers that provide a printing service. This enables the one or more servers to generate printer data for the selected printer.

In some embodiments the one or more servers send the printer data to the computing device so that the computing device can forward the printer data to the selected printer.

In some embodiments while generating the printer data for the print job the system reduces the file size for the printer data.

In some embodiments while generating the printer data for the print job the system reduces the number of computational operations required to generate the printer data thereby extending battery life for the computing device.

In some embodiments the system includes a discovery component configured to perform the discovery protocol and to facilitate selection of an accessible printer a network printing component configured to transport printer data to the selected printer and a page description language component configured to generate printer data for the selected printer based on obtained capability information for the selected printer. In these embodiments the system provides an integrated framework that enables the discovery component the network printing component and the page description language component to be accessed by an application.

In some embodiments this integrated framework includes one or more application programming interfaces APIs that provide access to the discovery component the network printing component and or the page description language component. This API enables a calling application to interact with other application code being called through the API. Various function calls messages or other types of invocations which may further include various kinds of parameters can be transferred via the API between the calling application and the code being called. In addition the API may enable the calling application code to use data types or classes defined in the API and implemented in the called application code. A method for operating through this API includes transferring one or more function calls messages other types of invocations or parameters via the API.

The following description is presented to enable any person skilled in the art to make and use the disclosed embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the disclosed embodiments. Thus the disclosed embodiments are not limited to the embodiments shown but are to be accorded the widest scope consistent with the principles and features disclosed herein.

The data structures and code described in this detailed description are typically stored on a non transitory computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The non transitory computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing code and or data now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a non transitory computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the non transitory computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the non transitory computer readable storage medium. Furthermore the methods and processes described below can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The disclosed embodiments facilitate walk up printing which enables a user of a device e.g. a mobile computing device to print to a nearby printer without having to worry about installing or updating associated printer driver software. This can be accomplished by augmenting a discovery protocol such as Bonjour and an associated network printing protocol such as IPP so that the protocols return printer capability information which is used to generate printer data for a selected printer.

Note that the disclosed embodiments differ from existing systems which need to maintain specific drivers for each supported printer. In these existing systems the features and capabilities for specific printers are stored in static capability files created by the printer vendors such as a PostScript Printer Description PPD file and these static capability files are stored on the device itself. In contrast the disclosed embodiments query a printer not a static file to determine the current operational capabilities of a printer. In addition to the discovery protocol and the network printing protocol the disclosed embodiments also can provide a page description language that specifies the appearance of printed pages.

The disclosed embodiments additionally provide a framework which enables an application to easily use the discovery protocol the network printing protocol and the page description language. This framework can be implemented as one or more APIs which enable an application to access these components.

Cloud can include one or more servers that provide printing services using a cloud computing paradigm. For example cloud can include a server which receives a print job from mobile device and generates corresponding printer data which can be printed by printer . Note that a system which implements a cloud computing paradigm provides a layer of abstraction between a computing resource and the resource s underlying technical architecture e.g. servers storage networks . This facilitates convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. Clouds typically have five characteristics on demand self service broad network access resource pooling rapid elasticity and measured service.

The entities illustrated in are coupled together by one or more networks not shown . These networks can generally include any type of communication channel capable of coupling together network nodes. For example the one or more networks can include a wireless network connection such as a Bluetooth network connection a cellular networking connection e.g. a 3G 4G network or an Edge network a networking connection based on the standards described in Institute for Electrical and Electronic Engineers IEEE 802.11 a wireless personal area networking PAN connection such as a network connection based on the standards described in IEEE 802.15 or any peer to peer wireless or wired networking technology.

During the printing process mobile device initially makes contact with printer through a discovery protocol as is described in more detail below. Next after printer is identified and selected there are a number of ways that printing can be accomplished. If mobile device possesses a driver for printer or if printer supports driverless printing mobile device can use the driver or the driverless printing technique to generate printer data for a print job and can send the printer data directly to printer as is illustrated by dashed arrow . This process is described in more detail below. Note that the term driverless printing refers to a printing technique which operates without the need for printer specific software on a computing device. Instead the computing device queries a printer to obtain capability information for the printer including current status information and generates printer data for the printer based on the obtained printer capability information. 

On the other hand if mobile device does not possess a driver for printer and if printer does not support driverless printing mobile device can send the print job to a cloud illustrated by dashed arrow . Next one or more servers within cloud can process the print job to generate printer data and can send the printer data directly to printer illustrated by dashed arrow . Alternatively cloud can return the printer data to mobile device so that mobile device can forward the printer data to printer illustrated by dashed arrow .

During operation application uses discovery component which implements a discovery protocol such as Bonjour to identify available printers and to facilitate selecting one of the identified printers. Note that discovery component communicates with a corresponding discovery component in printer illustrated by dashed line . Next after a printer is selected application uses page description language component to render a print job to produce corresponding printer data . Printer data is then sent to network printing component which implements a network protocol for remote printing such as an Internet Printing Protocol IPP . Network printing component communicates printer data to a corresponding network printing component within printer illustrated by dashed line .

As mentioned above printer contains a discovery component and a network printing component . In addition printer includes components that support printing using the JPEG Joint Photographic Experts Group standard the PDF Portable Document Format standard and a RF Raster Format standard . These components send data to through printer controller to print heads within printer so that print controller can translate the data and print heads can print the translated data onto some type of print media such as paper.

Next the system checks interoperability of the selected printer step . For example the system can obtain information from the printer indicating that the printer supports JPEG PDF and RF in which case the system can use any of the supported formats. On the other hand if the information indicates the printer can only support RF the system uses RF to send data to the printer.

Next the system has a number of options. If the selected printer supports driverless printing the system can obtain printer capability information from the selected printer and can generate printer data for the printer based on the obtained printer capability information. Next the system can send the generated printer data to the selected printer step . As mentioned above this capability information can be obtained from the selected printer during a query for the discovery protocol or during a subsequent network printing protocol query. On the other hand if the mobile device contains a specific driver for the selected printer the system can use the specific driver to generate and send printer data to the selected printer step . The system can alternatively send the print job to a cloud comprising one or more servers that provide a printing service. This enables the cloud to generate and the printer data for the selected printer step .

In general the system can select between driverless printing cloud printing and using a local driver based on a number of factors such as power consumption and or computational load. In one embodiment the system uses driverless printing if possible and if driverless printing is not supported the system uses a local driver for the printer. Finally if such a local driver is not supported the system uses the cloud to generate the printer data.

As mentioned above the printer capability information can be obtained from the selected printer during a query for the discovery protocol Bonjour or during a subsequent network printing protocol IPP query. More specifically during the discovery protocol the printer can return printer specific information specifying what types of data the printer can accept and information specifying the printer s capabilities. Once the mobile device is actually communicating with the printer through IPP the IPP protocol can provide the same printer specific information. This prevents having to cache information between the discovery protocol and the network printing protocol. 

This printer capability information can specify attributes of the print media such as media sizes types e.g. paper or photo media and margins. This printer capability information can also specify finishing attributes such as attributes related to stapling hole punching and booklets. The printer capability information can additionally specify information related to printer features such as whether to print on two sides of a page duplex which output bit to use and which media source tray to use. The printer capability attributes can also specify file related attributes such as the file sizes supported by the printer the file format versions supported by the printer and the file format extensions supported by the printer. The printer capability information can also specify various printer capabilities such as the color spaces supported by the printer the bit depths supported by the printer and the resolutions supported by the printer.

This printer capability information can additionally specify current status information obtained from printers. For example this current status information can specify whether the printer is off line whether the printer is busy or whether an error condition exists in the printer. This current status information can be presented to the user while the user is selecting an available printer.

The system then generates printer data for the selected printer based on the obtained capability information step . The printer then sends the printer data to the selected printer step . Finally the system receives status information for the selected printer which indicates whether the printer data was successfully printed step .

To remedy this problem the printer data can be returned to the mobile device so that the mobile device can forward the printer data to the printer. More specifically referring to mobile device first sends a print job to cloud step . Next one or more servers within cloud generate corresponding printer data for the selected printer and return the printer data to mobile device step . Finally mobile device forwards the printer data to the selected printer step . Because a channel already exists between the mobile computing device and the cloud and between the mobile computing device and the printer there is no need to set up an additional channel between the cloud and the printer.

In some embodiments the system can perform optimizations to improve speed increase print quality and save battery power. This can be accomplished by selecting a file type for the printer data that reduces the number of computational operations involved in generating the printer data thereby improving speed and reducing the amount of power consumed by the mobile device. For example if a printer supports PDF and the mobile device is printing a PDF file it uses much less battery power and is faster to send the PDF file to the printer in comparison to converting the PDF file into raster data and sending the raster data to the printer. Note that by saving computational operations and computational time the system frees up resources and time to perform other operations for example operations that increase print quality. Also in the case where the cloud returns the generated printer data to the mobile device the system can select a file format which reduces the size of the printer data file. This reduces the number of data transfer operations required to forward the printer data to the printer and thereby improves speed and reduces the amount of power consumed by the mobile device.

In another example the system can save power by selecting between driverless printing and cloud printing based on whether or not the power consumed while transferring data to and from the cloud will be offset by the power saved by off loading the printer related rendering operations to the cloud. By using a cloud power consuming computational operations can be off loaded from a mobile device that runs on battery power to a server within a cloud that runs on wall power which can potentially save a significant amount of battery power.

In some cases a printer manufacturer may attempt to implement a printer which adheres to the driverless printer specification but the implementation may have one or more bugs. In this case the system can maintain a database containing such known bugs for specific printer models. During a printing operation the system can first perform a lookup in the database and if one or more known bugs exist for a printer the system can adjust how the printer data is generated to compensate for these known bugs.

The foregoing descriptions of embodiments have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present description to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present description. The scope of the present description is defined by the appended claims.

