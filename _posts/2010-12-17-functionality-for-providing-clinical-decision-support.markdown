---

title: Functionality for providing clinical decision support
abstract: An information management system (IMS) is described herein that provides supplemental information to a user who is interacting with an application module. In one implementation, the IMS includes a collection system, an information extraction module, and a notification system. The collection system provides collected information from one or more information sources. The information extraction module extracts application information from the application module, even though the application module may lack a native interface for providing the application information. The analysis engine determines supplemental information to present to the user based on the collected information and the application information. And the notification information provides notification information which alerts the user to the existence of the supplemental information. In one scenario, the IMS can be applied in a healthcare-related domain.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473307&OS=08473307&RS=08473307
owner: Microsoft Corporation
number: 08473307
owner_city: Redmond
owner_country: US
publication_date: 20101217
---
A wealth of information is currently available to physicians and other medical professionals to provide assistance in treating patients. Further systems now exist for aggregating this information into a central repository. However physicians often access this information through disparate application modules and associated workflows. Each application module may allow a physician to access a subset of information pertaining to a particular patient and process that information using particular functionality. For example a physician may use a first application module to interact with lab results a second application module to review the medical literature a third application to prescribe medication to patients and so on. After interacting with several such application modules the physician can then manually correlate and synthesize the insights provided by the disparate application modules. However this approach is inefficient and burdensome. This approach is also prone to errors. For example a physician may use a collection of tools in treating a patient which fails to reveal pertinent information regarding the patient as a result the physician may make an incorrect or non optimal decision regarding treatment provided to this patient.

To address this issue a developer may attempt to reconfigure plural application modules into a larger cohesive body of functionality. However this solution is not feasible in many cases. For example the redesign of software is a time consuming and expensive task. Further different application modules are often produced by different respective providers based on different design paradigms hence these modules can be considered non cooperating functionality with respect to each other. This issue compounds the difficulty of integrating the functionalities provided by the application modules.

The above described challenges are cited by way of example not limitation other challenges may exist. Further other environments besides healthcare related environments may face similar challenges.

An information management system IMS is described herein that provides supplemental information to a user who is interacting with an application module. That supplemental information pertains to information that complements the information that is natively available to the application module. In some cases for instance the supplemental information comprises information that is not natively provided by the application module in other cases the supplemental information comprises information that is presented in a manner that differs from or otherwise complements information delivery provided by the application module and so on. In one implementation the IMS can include a collection system an information extraction module an analysis engine and a notification module.

The collection system receives collected information from one or more information sources. The information sources can include any number of sources that are internal to an enterprise environment in which the user interacts with the application module and any number of sources that are external to the enterprise environment.

The information extraction module IEM extracts application information from the application module. The application information reflects a current context of an interaction between the application module and the user. In one implementation the information extraction module is configured to extract application information from any application module including an application module that lacks a native interface for providing the application information.

The analysis engine receives the collected information from the collection system and the application information from the IEM. Based on this received information the analysis engine presents supplemental information to the user that enhances content delivered via the application module. To perform this task the analysis engine can rely on any combination of analysis modules selected from a suite of available analysis modules.

The notification module presents notification information to the user. The notification information alerts the user to the existence of the supplemental information. In response to the notification information the user can make a request to receive the supplemental information. Or the notification module can immediately deliver the supplemental information.

According to one illustrative use the application module provides functionality for use in a healthcare related domain. In this scenario the user may correspond to a physician or other medical professional. The current context extracted from the application module may identify a task that is being performed with respect to a patient or focus of interaction referred to herein as a target focus .

By virtue of the features summarized above the IMS can provide an efficient mechanism for providing a wide variety of pertinent information to a user irrespective of whether the application module with which the user is interacting was originally designed to supply such information. This wealth of information and assistance enables the user to more efficiently make appropriate decisions regarding the care of patients. Further the IMS can provide a satisfactory user experience to the user. For instance the IMS eliminates or reduces the need for the user to engage in independent interactions with separate information sources.

The above functionality can be manifested in various types of systems components methods computer readable media data structures articles of manufacture and so on.

This Summary is provided to introduce a selection of concepts in a simplified form these concepts are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The same numbers are used throughout the disclosure and figures to reference like components and features. Series numbers refer to features originally found in series numbers refer to features originally found in series numbers refer to features originally found in and so on.

This disclosure is organized as follows. Section A describes an illustrative information management system IMS for providing supplemental information to a user such as a physician or other provider of care in the context of the user s interaction with an application module. Section B describes illustrative methods which explain the operation of the IMS of Section A. Section C describes illustrative processing functionality that can be used to implement any aspect of the features described in Sections A and B.

As a preliminary matter some of the figures describe concepts in the context of one or more structural components variously referred to as functionality modules features elements etc. The various components shown in the figures can be implemented in any manner by any physical and tangible mechanisms for instance by software hardware firmware etc. and or any combination thereof . In one case the illustrated separation of various components in the figures into distinct units may reflect the use of corresponding distinct physical and tangible components in an actual implementation. Alternatively or in addition any single component illustrated in the figures may be implemented by plural actual physical components. Alternatively or in addition the depiction of any two or more separate components in the figures may reflect different functions performed by a single actual physical component. to be discussed in turn provides additional details regarding one illustrative physical implementation of the functions shown in the figures.

Other figures describe the concepts in flowchart form. In this form certain operations are described as constituting distinct blocks performed in a certain order. Such implementations are illustrative and non limiting. Certain blocks described herein can be grouped together and performed in a single operation certain blocks can be broken apart into plural component blocks and certain blocks can be performed in an order that differs from that which is illustrated herein including a parallel manner of performing the blocks . The blocks shown in the flowcharts can be implemented in any manner by any physical and tangible mechanisms for instance by software hardware firmware etc. and or any combination thereof .

As to terminology the phrase configured to encompasses any way that any kind of physical and tangible functionality can be constructed to perform an identified operation. The functionality can be configured to perform an operation using for instance software hardware firmware etc. and or any combination thereof

The term logic encompasses any physical and tangible functionality for performing a task. For instance each operation illustrated in the flowcharts corresponds to a logic component for performing that operation. An operation can be performed using for instance software hardware firmware etc. and or any combination thereof When implemented by a computing system a logic component represents an electrical component that is a physical part of the computing system however implemented.

The following explanation may identify one or more features as optional. This type of statement is not to be interpreted as an exhaustive indication of features that may be considered optional that is other features can be considered as optional although not expressly identified in the text. Similarly the explanation may indicate that one or more features can be implemented in the plural that is by providing more than one of the features . This statement is not be interpreted as an exhaustive indication of features that can be duplicated. Finally the terms exemplary or illustrative refer to one implementation among potentially many implementations.

From a high level perspective the IMS provides supplemental information to a user while the user interacts with an application module . The information is considered supplemental in the sense that the application module may not natively provide this information. To cite merely one example the user may interact with an application module that enables the user to prescribe medication to the patient. As originally designed that application module may not provide information regarding the insurance coverage of the patient. However the IMS can recognize that insurance information is relevant to the user s current interaction with the application module. The IMS can then alert to the user to the existence of the supplemental insurance information. This behavior is achieved without modifying the interfaces provided by the application module.

Alternatively or in addition the supplemental information corresponds to information that is available to the application module . But the IMS includes analysis functionality to be described below which delivers the information to the application module in a manner that is not natively provided by the application module or which otherwise complements information delivery in the application module . For example the application module may have native functionality that allows a user to manually access medication alerts. The IMS can supplement this native functionality by also automatically delivering the medication alerts to the user at particular relevant junctures of the user s interaction with the application module .

Alternatively or in addition the supplemental information provides an analysis result that is derived based on raw data that is available to the application module but the application module itself does not have the capacity to provide such an analysis result. To cite one concrete example the IMS can provide an analysis module which generates a diagnosis or alert primarily on the basis of lab data or the like. The application module may have access to the same lab data but not to the diagnostic information imparted by the analysis module. Hence that diagnostic information comprises supplemental information that can be said to be unavailable to the application module .

In the following explanation the term supplemental information is given the above described expansive meaning. The supplemental information encompasses any raw information derived from any information source as well as any information that is derived from this raw information as well as an experience by which the information is delivered to the user etc.

To perform these functions the IMS can include or can be conceptualized to include a series of modules namely a collection system an information extraction module an analysis engine and a notification module . These modules are described below in turn.

To begin with the collection system receives information from one or more information sources e.g. including the generically labeled information source information source information source etc. . In one case the user can interact with the application module within a particular enterprise environment such as within a system associated with a hospital. In this case one or more of the information sources may be internal to the enterprise environment. In addition or alternatively one or more of the information sources may be external to the enterprise environment.

In a healthcare related enterprise environment a first internal information source may correspond to a general hospital information system for managing the care of patients within a hospital. A second internal information source may correspond to a lab system which provides lab results for patients. A third internal information source may correspond to a radiology department which provides imaging results for patients. A fourth internal information source may correspond to an out patient administrative system and so on.

The healthcare related enterprise environment may also provide application modules for interacting with particular types of information sources. For example a lab related application module may be configured to interact with lab information provided by a laboratory system. These application modules may also supply information to the IMS . As such these applications also comprise information sources which contribute to the information received by the collection system . For example a lab technician may use the lab related application module to input blood count information for a particular patient. This information contributes to the corpus of information maintained by the collection system .

As to possible external information sources a first external information source may correspond to an external lab system. A second external information source may correspond to an external hospital system of any type e.g. from a partner medical institution . A third external information source may correspond to a research database which provides information regarding medical research such as the PubMed database. A fourth external information source corresponds to a government entity such as in the United States the Food and Drug Administration FDA the Centers for Disease Control and Prevention CDC National Institutes of Health NIH Centers for Medicare and Medicaid Services CMS and so on. A fifth external information source may correspond to a non governmental provider of medical information such as WebMD headquartered in New York N.Y. . A sixth external information source may correspond to a system which allows end users to maintain personal health information repositories such as HealthVault provided by Microsoft Corporation of Redmond Wash. and Google Health provided by Google Inc. of Mountain View Calif. etc. These examples are merely illustrative not exhaustive.

The collection system can use any technology to receive the information from the various information sources . For example the collection system can provide any combination of push related technologies and pull related technologies to collect information from the information sources . Upon receipt the collection system can parse classify and store the information. The collection system can use any ontology and associated tagging approach to classify the information. In one implementation the collection system can use one or more commercially available systems to collect the information such as Microsoft Amalga provided by Microsoft Corporation of Redmond Wash.

The information extraction module IEM collects information from the application module with which the user is interacting. From a high level perspective the IEM attempts to extract information which characterizes the context of the user s current interaction with the application module . The term context may have plural aspects. For example in one environment the context of an interaction may correspond to the task or tasks that the user appears to be attempting to accomplish. The user s task may be directed at a particular entity such as a patient. If so the context may also correspond to the identity of that entity. To cite one example in a healthcare related domain the context may indicate that the user a physician is attempting to prescribe a certain medication to a patient named John Jones.

More generally the context of an interaction can pertain to any focus of interest referred to herein as a target focus. For example in another case the target focus of an interaction corresponds to a group of patients. In another case the target focus can correspond to a doctor or other medical professional. In other cases the target focus can correspond to non human entities such as an institution a procedure or treatment lab results and so on.

The IEM can provide one or more techniques for extracting the application information from the application module . In one approach the application module provides a native interface for exposing the application information. For example in one case the application module may have been designed with the express objective of allowing external entities to query the application module and obtain certain kinds of information from the application module . For example the application module may provide an application programming interface API to expose application information. In this case the IEM can interact with the application module in a manner that conforms to the expectations of whatever native interface s that it provides to external entities.

In another case the application module does not provide a native interface for exposing at least some of the application information which the IEM seeks to collect. In that case the IEM can use various techniques for indirectly extracting the application information from the application module . For example in a first technique the IEM can extract the application information from a user interface subsystem not shown in . The interface subsystem is a mechanism through which the user interacts with the application module via a user interface presentation . In a second technique the user interacts with the application module over a communication medium e.g. a network here the IEM can extract the application information from a communication manager not shown in . The communication manager is a mechanism through which the application module forwards application information over the communication medium. The application module can use still other techniques for harvesting application information. and the accompanying description provide addition information regarding the operation of the IEM .

The analysis engine receives collected information that originates from the information sources . The analysis engine further receives the application information from the IEM . Based on this information the analysis engine determines supplemental information that can be presented to the user to assist the user in his or her interaction with the application module . As stated above the information is considered supplemental in the sense that the application module may not provide native original functionality for delivering this information to a user.

The analysis engine can perform the above tasks using one or more analysis modules . Each analysis module can receive one or more input factors. The input factors may pertain to any aspect of the collected information and or the application information. Based thereon the analysis module can generate an indication of supplemental information that can be presented to the user in the course of the user s interaction with the application module . An individual analysis module can formulate its output as a notification instruction which it passes to the notification module . The notification module responds to the notification instruction by informing the user that supplemental information exists regarding the current context of the user s interaction with the application module . Alternatively the notification module can immediately forward the supplemental information for the user s perusal.

Any analysis module can provide any technology to generate a notification action. In one case an analysis module can rely on one or more mapping rules. Each mapping rule maps one or more input factors to a notification action. In one case each mapping rule can be implemented using an IF THEN ELSE logic structure. Alternatively or in addition an analysis module can rely on a machine learning model to provide a notification action. The machine learning model can be trained based on a corpus of previously collected observations. Alternatively or in addition an analysis module can rely on a neural network to provide a notification action. Like a machine learning model the neural network can be trained based on a corpus of previous observations. Alternatively or in addition an analysis module can use any type of statistical analysis technology fuzzy logic technology inference based technology etc. to generate a notification action. Alternatively or in addition an analysis module can apply any type of forecasting or trend determination functionality. These examples are presented by way of illustration not limitation. Further these examples are not mutually exclusive for example an analysis module that performs trending analysis may rely on statistical modeling etc.

Any enterprise environment such as a hospital can select the types of analysis modules which are to be applied. In one case the enterprise environment may apply some general purpose analysis modules which are universally pertinent. These analysis modules correspond to default modules. The enterprise environment may also apply other analysis modules which are customized to address particular demands of the enterprise environment. The enterprise environment may apply still other analysis modules which are customized by individual providers of care such as individual physicians.

In one case any analysis module can be configured to receive and respond to the current context of a user s interaction with the application module . Alternatively or in addition any analysis module can be configured to receive and respond to a history of the user s interaction with the application module e.g. extending over any specified window of time. Alternatively or in addition any analysis module can be configured to receive and respond to application information collected from plural application modules with which the user has interacted over a specified window of time.

Further an analysis module can use different selection strategies in selecting information from the corpus of information maintained by the collection system . For example an enterprise environment or individual user may configure an analysis module to receive and respond to certain information sources supplied by the collection system . For example an individual physician can configure an analysis module in this manner by subscribing to various information sources. Alternatively or in addition an analysis module can be configured to respond to collected information corresponding to any time span. For example an analysis module can be configured to respond to medical alerts provided by a government agency which are no more than three months old and so on. Further the analysis module can be configured to analyze any portion of a patient s medical history including the entirety of the patient s medical history. Alternatively or in addition an analysis module can be configured to respond to collected information only if it exceeds an identified threshold. For example an analysis module can provide a notification alert if a received blood pressure reading exceeds a prescribed threshold. More specifically the analysis module can apply a default threshold that applies to all patients. In addition or alternatively an analysis module can apply a threshold which represents a prescribed deviation from a baseline reading associated with a particular patient or patient group.

In some cases an analysis module can be configured to respond to information which pertains to a single entity such as a single patient. In other cases an analysis module can be configured to perform analysis on information that pertains to a population of patients. For example an analysis module can be configured to identify a population that shares some characteristic or characteristics with the patient identified in the current context. For example the analysis module can be configured to identify a population that shares the same disease as the patient identified in the current context. The analysis module can then perform analysis based on that collection of data e.g. by identifying norms associated with the identified population of patients and comparing the current patient s condition with those norms etc. Similarly an analysis module can be configured to identify and respond to information which pertains to a specified geographic area such as specific city state region etc.

The features and behaviors of the analysis modules described above are presented by way of example not limitation.

To further clarify the operation of the analysis engine consider the following illustrative use scenarios. In a first scenario assume that the user is in the process of interacting with an out patient management system. More specifically assume that the user is currently prescribing a certain medication to a patient. An analysis module can receive application information from the IEM which identifies the particular patient. The application information can also indicate that the user is in the process of prescribing a certain type of medication to the patient. The analysis module can also receive collected information from the collection system originating from one or more governmental agencies and research databases. Based on these input factors the analysis module can determine whether there are any alerts regarding the medication in question. Some alerts may apply to all patients while others may apply to only patients who have certain characteristics such as pregnant women . If there any applicable alerts within a prescribed window of time the analysis module can instruct the notification module to notify the user of such alerts.

In a second scenario assume that the user is again prescribing a certain medication to a patient via an out patient management system. An analysis module can again receive the above described application information identifying both the patient and the medication being prescribed. The analysis module can also receive collected information from an insurance related information source. Based on these input factors the analysis module can determine whether the medication is properly covered by the patient s insurance. If not the analysis module can instruct the notification module to notify the user of such a finding.

In a third scenario assume that the user is entering notes in an out patient management system regarding the progress that a patient is making in a prescribed physical therapy program. An analysis module can receive application information which identifies the patient. The analysis module can also receive keywords within the user s notes which indicate the injury from which the patient is recovering. The analysis module also receives collected information from an external source which described recommended protocols for treating patients with the type of injury at issue. If such guidelines exist the analysis module can instruct the notification module to alert the user to such protocols. Or the analysis module can selectively inform the user of parts of the protocol which appear to have not be performed yet. In another case the analysis module can identify a population of other patients with similar conditions diagnoses observations etc. to the current patient. The analysis module can then provide a recommendation for the current patient based on an assessment of treatments that have proven effective for the population of similar patients.

In a fourth scenario assume that the user is using an application module to view images taken of a patient s heart. An analysis module can receive application information which indicates the identity of the patient. The application information can also indicate the task that is being performed by the user namely an examination of an image of the patient s heart . The analysis module can also receive collected information from a laboratory related source. Based on these input factors the analysis module can determine whether any laboratory results have a bearing the images that the user is viewing. For example the analysis module can determine that a cholesterol reading and a blood sugar reading are appropriate to the user s analysis of the medical images. If so the analysis module can send an instruction to the notification module to alert the user to these findings.

The above described fourth scenario is instructive in drawing out the possible real time nature of the decision support provided by the IMS . For example a lab technician may have entered a cholesterol reading using a lab related application program during the time at which a physician is viewing images of the patient s heart. The collection system receives these lab results. The analysis engine in conjunction with the notification module can then alert the physician to the existence of these records while the physician is viewing the images. In this sense the IMS accomplishes a real time coupling of disparate application modules that were not originally designed to work together. This coupling is performed without modifying either of the application modules to take account of each other s presence each application module can continue to operate in an independent manner and indeed may be unaware of the way in which other application modules are making use of its native data.

In a fifth scenario the user may be interacting with application module that identifies the lab results for a particular person with a yet unidentified disease or condition. An analysis module can receive application information which identifies the patient as well as the lab results for this patient. In this case the analysis module can feed the lab results to an engine such as a statistical model or neural network which identifies a possible diagnosis of the patient or which identifies a particular health related trend. Alternatively or in addition the analysis module can receive and analyze epidemiological information received from a government source such as the CDC. The analysis module can then notify the user of the results of its analysis.

In sixth scenario the user may be interacting with an application module in response to the arrival a new patient in an emergency room. An analysis module can receive application information which identifies the patient. The analysis module can also receive information that the patient has previously compiled and stored in a personal health repository such as Microsoft Corporation s HealthVault if in fact the patient expressly authorizes the user to access this information . Based on these input factors the analysis module can determine that the information obtained from the patient s personal repository may be helpful in providing emergency care to the patient. If so the analysis module can send an appropriate notification instruction to the notification module .

The above scenarios are illustrative rather than exhaustive. Further the examples presented above were simplified to clarify explanation. But any analysis module can receive multiple types of input factors originating from any aspect of the application information and any aspect of the collected information. Further any analysis module can apply any combination of analysis techniques applied over any span of time patient population geographic region etc.

The supplemental information that is delivered to the user can take any form. In one case any analysis module can formulate the information in text based form graph based form pictorial form etc. or any combination thereof In one case the supplemental information is static. In other cases the supplemental information can be delivered in an interactive experience and so on. These examples representative not exhaustive.

In any of the above identified cases the IMS can maintain appropriate safeguards to protect the confidentiality of patient information. Further the IMS can allow patients to expressly opt in or opt out of the collection of any type of personal information.

Having performed its analysis the analysis engine can send one or more notification instructions to the notification module . The notification instructions can encompass multiple categories notification actions e.g. pertaining to multiple categories of alerts and advice. For example at a particular juncture in the user s interaction with the application module the analysis engine can provide notification instructions pertaining to lab results radiology results insurance information medication alerts epidemiological alerts and so on. The analysis engine can also provide notification instructions pertaining to advice and recommendations of any type diagnoses etc.

The notification module receives the notification instructions and in response thereto provides notification information to the user. The notification information alerts the user to the existence of the supplemental information which may be of use in performing whatever task the user is currently engaged in. In one case the notification module can convey the notification information via an indicator of any type that is presented on the user interface presentation . The user can activate the indicator to receive the supplemental information. The examples which follow will provide additional information regarding the manner in which the notification module can deliver supplemental information to the user.

In some cases the notification module provides the notification information in visual form e.g. as an icon which is presented on a graphical user interface presentation. In addition or alternatively the notification module can provide audible notification information haptic notification information and so on

Considered as a whole the IMS provides an overarching framework which allows a heterogeneous collection of application modules to receive information from a variety of information sources including other application modules which supply information . Through these provisions the IMS can allow a user to make more informed decisions regarding the care given to patients. At the same time the IMS does not demand expensive time consuming and error prone re engineering of the heterogeneous application modules although the IMS does not preclude some such modification.

Advancing now to this figure shows one implementation of the functional modules of the IMS of . As shown there an enterprise environment corresponds to a particular setting such as a hospital setting in which care is provided to a plurality of patients. shows functionality which is internal to the enterprise environment and functionality which is external to the enterprise environment . A coupling mechanism of any type can connect together the internal functionality of the enterprise environment . For instance the coupling mechanism may correspond to any type of local area network wide area network or combination thereof

The enterprise environment may provide a collection system which receives information from one or more internal information sources and or one or more external information sources . The collection system may interact with the external information sources via one or more networks such as a wide area network e.g. the Internet . These information sources may correspond to any of the types of information sources described above in connection with .

The enterprise environment may provide an analysis engine which performs the functions described above with reference to . Namely the analysis engine receives collected information from the collection system and application information from application modules. Based thereon the analysis engine identifies supplemental information to present to the users who are interacting with the application modules. In some cases the supplemental information corresponds to raw information provided by the various information sources . Alternatively or in addition the supplemental information can correspond to derived information generated by an analysis module based on the raw information provided by the various information sources etc.

In one case the user device can locally implement an application module with which the user is interacting. That is the user device can store and execute the code that provides the application module. In another case the user can operate the user device to interact with one or more remote application modules . In other cases the user can interact with an application module that is distributed between local and remote processing functionality.

The remote application modules if provided in a particular implementation can be implemented by one or more server type computing devices and associated data stores etc. That equipment can be provided by functionality within the enterprise environment and or outside the enterprise environment . In one case the remote application modules can be implemented as network accessible web sites or web services and so on. In another case the remote application modules can be implemented by virtual desktop technology e.g. as provided by Citrix Systems Inc. of Fort Lauderdale Florida and so on.

Each user device can implement local instances of the IEM and the notification module of . In another case the IEM can be provided by functionality that is remote with respect to the user devices. Similarly the notification module can be provided by functionality that is remote with respect to the user devices.

In one case the functionality can corresponds to a native interface provided by the application module such as an application programming interface API .

In a second case the functionality can correspond to an interface subsystem by which the user interacts with the application module . The interface subsystem in turn can include a rendering subsystem which displays information on the user interface presentation . The interface subsystem can also include an input subsystem by which the user supplies information to the application module via the user interface presentation .

For example the IEM can extract information from the rendering subsystem that indicates the information that is being displayed on the user interface presentation at a particular juncture in the user s interaction with the application module . For example assume that the application module provides an instruction to display a menu pertaining to a particular task. The IEM can extract any type of information which describes the menu. For example the IEM can extract keywords and other content that are displayed by the menu. Alternatively or in addition the IEM can extract codes or the like which indicate the nature of the menu although the rendering subsystem may not necessarily display that code information to the user.

In addition the IEM can extract information from the input subsystem in response to input selections made by the user e.g. in response to keystrokes mouse click selections mouse movements and so on. More specifically in one case the IEM can receive information that the user formally enters e.g. by inputting the information and then activating a submit button return key or the like. Alternatively or in addition the IEM can receive any keystrokes or mouse selections that the user makes without formally submitting an entry. For example suppose the user types the patient s name or ID number in an input field but without activating a submit command or the like. The IEM can be configured to extract this application information and forward it to the analysis engine . And as a result the user may receive supplemental information pertaining to the patient without formally activating a submit command.

In another scenario assume that the user operates a user device to access an application module which is implemented by remote computing functionality. In this case the local user device presents the user interface presentation while the remote computing functionality executes the application module itself In this scenario the IEM can also extract the application information from a communication manager. The communication manager refers to any functionality that monitors or manages communication between the application module and the user device over a communication medium of any type. In particular the IEM can extract the application information from messages that the user device receives from or sends to the remote application module . The messages can be expressed in any network protocol or protocols .

One way to implement extraction via a user interface subsystem or a communication manager is described in copending U.S. application Ser. No. 11 021 755 naming the inventors of David Fusari et al. filed on Dec. 23 2004 and entitled Methods and Apparatus for Externally Controlling a Software Application to Create New Application Behavior. This application is incorporated by reference herein in its entirety.

The IEM can use different techniques to extract selected fields from this information. For example when configuring the IEM the user can identify selected user interface UI fields to extract from the application information such as input fields within a form menu item selections etc. Further the user can identify selected events which will trigger the extraction of the UI fields such as page navigation selections command button selections etc.

The next series of figures show an illustrative scenario in which the IMS of can present supplemental information to the user in the course of the user s interaction with an application module. The application module can perform any core function. For example the application module can correspond to an out patient management system or the like.

Starting with the application module presents a user interface presentation . In this merely illustrative case the user interface presentation provides a plurality of input fields by which the user may enter information regarding a particular patient the hypothetical John Jones. The user interface presentation can also include a number of other fields by which the user can perform other tasks which are only generically indicated in . The user interface presentation also includes a title field which indicates the identity of the user who is operating the application module namely Dr. Smith. The user interface presentation also includes a second title field that conveys the identity of the patient namely John Jones.

The IEM can extract application information from the application module in any of the ways described above. Generally the IEM can extract context information which indicates the type of action that the user is attempting to perform. Further the IEM can extract context information which indicates the identity of the patient or more generally the target focus of the interaction between the user and the application module. In response to this application information and other collected information the analysis engine can identify supplemental information that may be pertinent to the user s interaction with the application module. The notification module can then present an indicator to the user. The indicator alerts the user to the existence of the supplemental information.

More specifically in the case of the notification module presents an indicator in the title bar of the user interface presentation . The indicator in this case is an icon. Generally the notification module can display an indicator having any shape size color informational content etc. further the notification module can present the indicator at any location or locations in the user interface presentation . Alternatively or in addition the notification module can present an audible indicator.

Assume that the user selects the indicator e.g. by clicking on it or mousing over it etc. In response the notification module can present supplemental information to the user. For example as shown in the notification module can provide a panel on the periphery of the user interface presentation . More generally the notification module can present the supplemental information in any manner and at any location in doing so the notification module can adopt a presentation approach that does not unduly interfere with the user s interaction with the core content of the user interface presentation .

In the particular example of the panel can include a list of supplemental information items that pertain to the current context of the user s interaction with the application module. For example a first supplemental information item provides a discharge summary for this patient. A second supplemental information item provides labs results for this patient. A third supplemental information item relates to radiology results and so on. These examples are merely representative. For example in another case not shown the notification module can invite the user to review information obtained from a personal health repository maintained by the patient John Jones. In another example not shown the notification module can provide medical alerts that pertain to this patient. In another example not shown the notification module can provide diagnoses or recommended treatments that that pertain to this particular patient. In another example not shown the notification module can provide trends or forecasts that pertain to this patient e.g. based on an analysis of a population of similar patients and so on. Once again these examples are representative not exhaustive. In general note that the supplemental information items correspond to multiple informational axes associated with heterogeneous information sources some of which may not be native suppliers of information to the application module. In other cases the IMS delivers supplemental information which is natively provided to the application module but presents it in such a manner that differs from or otherwise complements the manner in which that information is typically delivered by the application module.

The supplemental information items can include hyptertext links or command buttons or other selectable fields which allow the user to obtain additional supplemental information. For example assume that the user clicks on the link Lab Results in . In response the notification module delivers a panel of additional supplemental information as shown in . Depending on the manner in which the supplemental information is organized the user can advance to yet further levels of detail. Further the user can explore various branches of inquiry.

In the above examples the notification module presents the supplemental information to the user via the user interface presentation in context with the user s interaction with the core experience provided by the application module . But in other cases the notification module can store the supplemental information in a separate file. The user can then independently and separately check this file before he or she commits to a decision regarding a patient. Still other notification strategies are possible.

Starting with this figure shows a procedure that explains one manner of operation of the analysis engine . In block the analysis engine receives collected information from one or more information sources . In block the analysis engine receives application information from the application module itself. In block the analysis engine identifies supplemental information to present based on the application information and collected information. The analysis engine can rely on one or more analysis modules to perform this task. In block the analysis engine can notify the user of the existence of the supplemental information e.g. by sending notification instructions to the notification module .

In addition any application module may itself comprise a source of information with respect to any other application modules. Hence the IEM can forward extracted application information to the collection system where it is henceforth made available to other application modules. illustrates this information path e.g. which connects the application module to the collection system .

The processing functionality can include volatile and non volatile memory such as RAM and ROM as well as one or more processing devices e.g. one or more CPUs and or one or more GPUs etc. . The processing functionality also optionally includes various media devices such as a hard disk module an optical disk module and so forth. The processing functionality can perform various operations identified above when the processing device s executes instructions that are maintained by memory e.g. RAM ROM or elsewhere .

More generally instructions and other information can be stored on any computer readable medium including but not limited to static memory storage devices magnetic storage devices optical storage devices and so on. The term computer readable medium also encompasses plural storage devices. In all cases the computer readable medium represents some form of physical and tangible entity.

The processing functionality also includes an input output module for receiving various inputs via input modules and for providing various outputs via output modules . One particular output mechanism may include a presentation module and an associated graphical user interface GUI . The processing functionality can also include one or more network interfaces for exchanging data with other devices via one or more communication conduits . One or more communication buses communicatively couple the above described components together.

The communication conduit s can be implemented in any manner e.g. by a local area network a wide area network e.g. the Internet etc. or any combination thereof The communication conduit s can include any combination of hardwired links wireless links routers gateway functionality name servers etc. governed by any protocol or combination of protocols.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

