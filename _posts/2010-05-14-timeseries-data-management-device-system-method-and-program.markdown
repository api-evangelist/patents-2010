---

title: Time-series data management device, system, method, and program
abstract: Disclosed is a time-series management device capable of filtering time-series data having a possibility of matching a specified search pattern and reading in the data from a storage device when performing a time-series analysis. A data accumulation unit () creates a time-series index having a feature value of a data series calculated at a specific regular time interval. In addition, a data search unit () makes a decision as to the feature value for each regular time interval included in the time-series index using an evaluation formula of a specified search condition, identifies a time period of a complying data series group, and performs a time-series analysis for only the data series of the identified time period.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09298854&OS=09298854&RS=09298854
owner: HITACHI, LTD.
number: 09298854
owner_city: Tokyo
owner_country: JP
publication_date: 20100514
---
The present invention relates to a time series data management device a time series data management system a time series data management method and a time series data management program for managing time series data which is generated continuously with elapse of time. In particular the present invention relates to a technique for searching accumulated time series data for a desired search pattern fast.

With the advancement of the sensing technology such as the RFID Radio Frequency Identification and GPS Global Positioning System it becomes possible to acquire various sensor data from the actual world such as factories and offices and cases where the sensor data are utilized in business are increasing. For example applied cases such as the smart grid in which power usage values are acquired from homes by using meter inspection devise and a required power value in the future is predicted and analyzed on the basis of the situation of use to control a power generation value optimally traffic situation prediction in which position information of vehicles on roads is acquired by using the GPS and traffic situations such as a traffic jam are predicted by analyzing speeds and directions of the vehicles and preventive device maintenance in which running information such as the number of motor rotations and pressures is acquired from plant devices and facilities in a factory or the like and an abnormality or a failure of a device is previously detected on the basis of their values and variations are being brought into a practical use stage.

For making the most of the sensor data it is indispensable to analyze the data and understand its operation characteristics. It can be mentioned as a feature that the sensor data is the so called time series data which is generated continuously with the elapse of time. For understanding the operation characteristics it is important to find data variations and a pattern along time. As a result it becomes possible to make the most of the sensor data in business by utilizing features and tendencies of devices and facilities acquired from the sensor devices.

In the analysis of time series data a method of accumulating data and searching for various patterns in the accumulated data through trial and error is taken. An example of time series data search will now be described specifically by taking evidence management in physical distribution industry as an example.

In recent years cases where a sophisticated transportation business utilizing sensor data is developed have increased in the physical distribution industry. As one example of them there is a service which certifies that a load demanded to be transported stably such as medical cells or medicines are not transported roughly.

An impact meter is attached to each load. Sensor data acquired every moment are accumulated in a storage device such as a hard disk upon occasion. In order to certify stable transportation various searches are conducted on the accumulated data. For example a search pattern represented as extract a series in which the impact degree of a sensor indicating a value of at least 20 is generated continuously over at least five seconds out of data during three past months is specified. Unless this series is not extracted it is certified that stable transportation has been conducted.

A difference between the above described search in time series data and search in conventional relational database will now be described. In the search in the conventional relational database individual data such as for example name or address has meaning. And a feature of the search is that data which matches a condition is taken out from data of simple substance one by one.

On the other hand in the time series data values of individual sensor values are also important. However a shift of the sensor value led out from the data series becomes more important. In search as well therefore it becomes important to extract a data series which matches a specific search pattern referred to as series pattern as well .

As a method for implementing such a time series data search a method utilizing time series analysis processing using a stream data processing system proposed in an academic society relating to databases is conceivable for example Non Patent Literature 1 .

The stream data processing is used for applications as real time analysis in many cases. However the stream data processing is also utilized for batch applications i.e. utilized as analysis processing for accumulated data in many cases. In time series analysis processing in such applications all accumulated time series data are loaded onto a memory and collation with a specified series pattern is executed successively along the time. Since such processing needs scan for all time series data however it is necessary to load all time series data which become an object of search from a disk onto the memory.

In general sensor data generated in the actual world often become an enormous volume. In the conventional method therefore there is a problem that the search performance is degraded by frequent occurrence of disk I O Input Output at the time of disk reading.

Furthermore a technique of implementing a similarity search for a specific pattern on past time series data fast is disclosed in Patent Document 1. In the scheme conventional similarity operation is made faster by previously conducting quantization operation on all time series data and conducting a similarity calculation utilizing quantization at the time of search. In the present scheme as well however it is necessary to load all time series data which become an object of operation from a disk and consequently the problem of the performance degradation caused by the frequent occurrence of the disk I O cannot be solved.

The present invention has been made to solve the problem. An object of the present invention is to provide a time series data management device a time series data management system a time series data management method and a time series data management program capable of searching accumulated time series data for a desired search pattern fast.

In order to solve the problem a time series data management device according to the present invention includes a data accumulation unit and a data search unit. When accumulating time series data the data accumulation unit creates a time series index having a feature value of a data series calculated every specific time period. And when searching time series data the data search unit converts a specified search condition to an evaluation formula for evaluating a feature value included in the time series index makes a decision as to a feature value of every time period included in the time series index by using the evaluation formula identifies a complying time period of a data series group reads a data series group in the identified time period from a disk for example an external storage device and performs a time series analysis on only the data series which is read. When performing a time series analysis on the time data series stored on the disk it is possible to filter time series data having a possibility of matching a specified search pattern and read the filtered time series data from the disk.

According to the present invention it is possible to search accumulated time series data for a desired search patter fast.

Hereafter embodiments of the present invention will be described in detail with reference to the drawings.

The time series data management device is a device which accumulates and searches the time series data . The external storage device is a storage device in which a time series data table time series data information see and a time series index table time series index information see are stored. The external storage device is composed of for example a HDD Hard Disk Drive .

The time series data is a set of sensor data. Individual sensor data generated with elapse of time are disposed in order of time as a series. The sensor data is measured data which is acquired from a sensing device a facility device or the like. The sensor data includes running information such as for example the number of revolutions or pressure a physical value such as temperature and humidity and a time stamp which represents their occurrence time.

The present embodiment will be described supposing that the sensor data are various measured data occurring in the actual world. In the present invention however the sensor data are not restricted to them as long as the data are data including a physical value. For example stock price data occurring outside the actual world can become an object of the present invention.

The manager PC is a terminal of an operation manager who instructs the time series data management device to store the time series data and conducts various kinds of setting concerning data management. The client PC is a terminal of a user who executes search the time series data management device . The client PC transmits the search query which represents a search request and receives a search result. Although not illustrated each of the manager PC and the client PC includes a processor a memory an input device and an output device including a display unit.

The time series data management device includes a processor a memory an input device and an output device . The time series data management device is connected to the external storage device via a disk interface .

The processor is composed of for example a CPU Central Processing Unit . The processor executes a time series data management program which is read onto the memory and thereby executes various kinds of processing of the program.

The various kinds of processing of the time series data management program are implemented by execution of them in the processor . However they can also be implemented as hardware by forming processing units which conduct various kinds of processing such as a data accumulation unit and a data search unit as integrated circuits. In the ensuing description of the present embodiment each of the processing units implemented by execution of various programs in the processor is regarded as a subject of each processing. In the case where processing units are implemented as hardware however the processing units conduct processing as subjects.

The memory is composed of a storage medium such as for example a RAM Random Access Memory and a flash memory. The input device is composed of devices such as for example a keyboard and a mouse. The output device is composed of a device such as for example a liquid crystal monitor.

The time series data management program is composed of the data accumulation unit the data search unit and a setting information store area .

The data accumulation unit executes processing of receiving the time series data and writing the data onto a disk in the external storage device as the time series data table and processing of creating index information for filtering a data series which is read from a disk when searching data and writing the information as the time series index table .

The data accumulation unit is composed of a data receiving unit a data writing unit an index generation unit and an index writing unit .

The data receiving unit receives the time series data from the manager PC and delivers the data to the data writing unit and the index generation unit . By the way when the data receiving unit delivers data it is also possible to work data to forms which facilitate processing in the data writing unit and the index generation unit . It is supposed in the description of the present embodiment that the work processing is conducted.

The data writing unit conducts processing of receiving worked time series data from the data receiving unit and writing the worked time series data into the time series data table .

The index generation unit conducts processing of receiving the worked time series data from the data receiving unit and generating the time series index table having time series indexes. The time series index is index information for filtering only a data series having a possibility of matching in a time series analysis from the time series data table and reading the data series when searching data. As a result it is possible to omit reading data series which cannot match in time series analysis processing and it becomes possible to prevent the search performance from being degraded by frequent occurrence of the disk I O. By the way in description of the present embodiment data series is defined as time series data in a specific regular time interval included in the time series data .

The time series indexes retain various feature values calculated every time period obtained by dividing the time series data at specific time intervals. The feature value is a numerical value representing a tendency or a state of time series data in a specific regular time interval and is calculated as a set operation of sensor data values belonging to each data series. For example an arbitrary set operation such as a maximum value minimum value or average variance can be applied to the present invention. In addition a combination of feature values may be applied as a new feature value. For example it is also possible to use upper and lower limits of a sensor value in series data as feature values by using a maximum value and a minimum value. 

The index writing unit executes processing of receiving a time series index generated by the index generation unit and writing the time series index into the time series index table .

The data search unit conducts processing of extracting a data series matching a desired search pattern from the time series data table in response to a search request from the client PC . The data search unit is composed of a search receiving unit an evaluation formula generation unit an index search unit a data reading unit and a time series analysis unit .

In the present embodiment the data reading unit reads time series data from the time series data table onto the memory and the time series analysis unit conducts collation processing of the data with the search query . However a feature of the present embodiment is that the index search unit refers to the time series index in the time series index table and filters a data series having a possibility of matching in the time series analysis processing before reading time series data from the time series data table .

The search receiving unit plays a role as an interface layer for the client PC . The search receiving unit executes processing of receiving the search query from the client PC receiving a search result from the time series analysis unit and returning the result to the client PC . After receiving the search query the search receiving unit calls the index search unit and the data reading unit at suitable timing. Details thereof will be described later.

The evaluation formula generation unit executes processing of generating an evaluation formula on the basis of the search query . The evaluation formula is a formula for making a decision as to a compliance degree of each feature value of the time series index with the search query . In this compliance degree decision the evaluation formula generation unit identifies a complying data series and reads the data series from the time series data table .

For example in the case where the feature value has a value obtained by combining maximum with minimum i.e. has an upper limit and a lower limit of series data in a specific regular time interval the search query is converted to a formula for evaluating the upper limit and lower limit. For example in the case where a search pattern represented as extract a series in which a value of at least 10 continues over at least five seconds is specified the search pattern is converted to a formula that the minimum value is at least 5 which means at least 5 seconds. Series data complying with the present formula is a series having a possibility of matching in the time series analysis. Conversely series data which does not comply with the present formula never matches in the time series analysis and consequently the series data does not become an object of reading.

The index search unit conducts processing of receiving the evaluation formula from the evaluation formula generation unit and making a decision as to a compliance degree with a feature value of every time period obtained by dividing by a specific regular time interval out of the time series index. The index search unit extracts pointer information of the data series in the complying time period and outputs the pointer information to the data reading unit .

The data reading unit reads a data series indicated by the pointer from the time series data table on the basis of the pointer information and outputs the data series to the time series analysis unit .

The time series analysis unit reads the data series conducts collation processing with the search query on the memory extracts a data series which completely matches the search query and outputs the data series to the search receiving unit . As a favorable example of processing conducted by the time series analysis unit there is stream data processing described in Non Patent Document 1. In the example of the present embodiment the time series analysis unit will be described on the basis of the stream data processing. However the processing conducted by the time series analysis unit is not restricted to the stream data processing as long as the processing is processing capable of collating a data series with the search query .

The setting information store area is composed of a schema definition table schema definition information see an index generation table index generation information see and an evaluation formula generation rule table evaluation formula generation rule information see which are various kinds of setting information for managing the time series data. The schema definition table is definition information which describes structures of respective sensor data included in the time series data . In the index generation table various kinds of setting information for generating time series indexes are defined. The index generation table is referred to by the index generation unit . In the evaluation formula generation rule table conversion rules for converting the search query to evaluation formulas are defined. The evaluation formula generation rule table is referred to by the evaluation formula generation unit .

The time series data table is an area for accumulating the time series data and is for example a table of a relational database. The time series index table is a table for accumulating the time series index and is for example a table of a relational database.

The data source name is an identifier for identifying a data source which is a generation source of the sensor data . In the present embodiment the data source name is handled as a character string which indicates a name of the data source. However the data source name is not restricted to a character string which indicates a name of the data source as long as the data source name identifies the data source. For example a numerical value such as an ID number can also be applied to the present invention.

The time stamp represents time when each sensor data has occurred. In the present embodiment the time is represented by the Christian Era four digits month day hour minute second. However the time stamp is not restricted to the representation as long as time can be recognized but any time form can be applied.

The sensor value is a measured value of sensor data and is composed of a single physical value or a plurality of physical values. In the ensuing description of the present embodiment it is supposed that a plurality of sensor values exist in one sensor data. However it is also possible that a single sensor value exists for one sensor data. The reason why a plurality of sensor values exist is that a plurality of measured values such as for example physical data the number of revolutions and pressure are acquired at the same time in some cases.

In the ensuing description of the present embodiment it is supposed that the time series data is described in the CSV Comma Separated Values text form as shown in and the time series data is input to the data receiving unit in the time series data management device . However the form of the time series data is not restricted to it as long as the time series data is represented as a set of sensor data and the data receiving unit can interpret it. For example a form in which the time series data is represented in a binary form and is input to the data receiving unit can also be applied to the present invention.

The time series data is input to the time series data management device . In the ensuing description of the present embodiment it is supposed that the time series data is input to the time series data management device from the manager PC manually by using a dedicated command. For example however a method of conducting network communication between a remote host and the time series data management device via a communication path such as a LAN Local Area Network to input the time series data is also possible.

A regular time interval of the data series is specified in the search range interval . A data source which outputs the data series and a sensor value are specified in the search item . As a feature of the time series search specification conducted by combining the search object range with a data pattern variation pattern specified in the search condition is typical. By the way the data pattern variation pattern is a pattern which indicates a variation of the data series desired to be extracted and the data pattern is composed of a regular time interval of the data series and a condition formula.

The search object range indicates a specific time period specified as a search object by the user and it is specified by a search object range. In the example shown in a time period ranging from 0 second 0 minute 7 o clock Jan. 7 2010 to 0 second 0 minute 12 o clock Jan. 10 2010 is set as the search range and time series data in the section is read from a disk in the external storage device and set as the object of the time series analysis processing.

In the example of the search condition shown in it is indicated to extract series data having an average value AVG of a pressure of a gas engine over a period of 5 seconds exceeding 1 500 on the basis of the search range interval .

A data pattern described by the search condition is composed of an aggregation function formula and a condition decision formula. The aggregation function formula is an operation intended for all sensor values existing in the search range interval and an arbitrary formula such as for example an average value AVG a maximum value Max a minimum value Min and a sum Sum can be used. The condition decision formula is a relational operator for making a decision as to an operation result led by the aggregation function formula and an arbitrary operator such as for example an inequality operator or an equality operator can be used.

To sum up the example shown in means extract series data having an average value of the pressure value of the gas engine over 5 seconds exceeding 1 500 in a time period ranging from 0 second 0 minute 7 o clock Jan. 7 2010 to 0 second 0 minute 12 o clock Jan. 10 2010 2010 01 07 07 00 00 2010 01 10 12 00 00 and output the gas engine and the pressure. 

In the description of the present embodiment it is supposed that the search condition is described in the above described form. However the present invention is not restricted to the form as long as a form can represent a variation and state pattern of the sensor value.

After receiving the time series data the data receiving unit refers to the schema definition table when conducting work processing to decompose each sensor data every attribute.

The ID is an identification number for identifying each row and one specific sensor value of sensor data generated at each time is stored in each row. The data source name is an identifier for identifying a data source which becomes a generation source of sensor data. For example a name of the data source is stored in the data source name . A classification name of a sensor value of sensor data generated from the data source is stored in the attribute name . Time when sensor data is generated is entered to the time stamp . Numerical value data which is a sensor value is stored in the sensor value .

As described above the data writing unit receives each worked sensor data from the data receiving unit and writes the data into the time series data table . By the way in the present embodiment a plurality of attributes are stored mixedly into one time series data table . However a method of dividing the table every attribute is also possible.

Furthermore in the description of the time series data it is supposed that the time series data is stored on the RDB relational database . However a scheme of storing the time series data directly on for example a file system can also be applied to the present invention.

The data source name is an identifier for identifying a data source which becomes a generation source of sensor data. A sensor classification name of a sensor value is stored in the attribute name . A single regular time interval for division or a plurality of regular time intervals are stored in the division regular time interval . An aggregation function used as a feature value is stored in the feature value calculation function .

For example in the case where the data source name is gas engine and the attribute name is water temperature in the division regular time interval is set equal to one hour 30 minutes and 10 minutes and a feature value obtained when the time period is divided by each regular time interval is calculated.

For example in the case where the whole time period of time series data is 10 00 12 00 a maximum value and a minimum value are included in the time series index in the present example as feature values in 10 00 11 00 and 11 00 12 00 obtained by dividing the whole time period to one hour intervals feature values in 10 00 10 30 10 30 11 00 11 00 11 30 and 11 30 12 00 obtained by dividing the whole time period to 30 minute intervals and feature values in 10 00 10 10 10 10 10 20 . . . 11 50 12 00 obtained by dividing the whole time period to 10 minute intervals.

The reason why the feature value is retained every different division regular time interval will now be described. If the division regular time interval is remarkably different from the search range interval a high precision compliance degree decision cannot be made. Therefore a feature value is previously calculated every different division regular time interval. And a division regular time interval having a value close to the search range interval is selected when making a decision as to compliance.

The case where a high precision compliance decision cannot be made is for example the case where division regular time interval search range interval. Even if the feature value complies with the evaluation formula it is compliance only in a local range. Therefore the possibility of not matching in ranges other than the local range in the time series analysis processing becomes high. In other words wasteful reading of time series data occurs.

In evaluating the feature value in the division regular time interval there are the case where the relation division regular time interval search range interval is satisfied and the case where the relation division regular time interval

If a node having a division regular time interval which assumes a value close to the search range interval as far as possible while satisfying the relation division regular time interval search range interval can be extracted then it is possible to prevent wasteful data reading to the utmost.

For example in the case where the division regular time interval of index data see has three hierarchy levels one hour 30 minutes and 10 minutes and the search range interval is 20 minutes it is desirable to extract nodes having the division regular time interval of 30 minutes.

For example in a time series index node is a node which is one hour in range interval and which retains various feature values for example a maximum value and a minimum value in a time period ranging from 0 second 0 minute 7 o clock Jan. 10 2010 to 0 second 0 minute 8 o clock Jan. 10 2010. A time series index node is a node which is hour in range interval in the same way and which retains various feature values in a time period ranging from 0 second 0 minute 8 o clock Jan. 10 2010 to 0 second 0 minute 9 o clock Jan. 10 2010.

As a feature of the present embodiment the index data can retain nodes having different regular time intervals hierarchically. In an example shown in a node set is a set of nodes having a regular time interval of one hour and a node set is a set of nodes having a regular time interval which is shorter than that of higher order nodes and which is for example 30 minutes. A node set is a set of nodes having a regular time interval which is shorter than that of higher order nodes and which is for example 10 minutes.

Each node has a time period specifically start time and end time of a range interval. In the case where a time period of a low order node is included in a time period of a high order node the high order node retains pointer information to the low order node. For example a time series index node is a node having a feature value in a time period ranging from 0 second 0 minute 7 o clock Jan. 10 2010 to 0 second 30 minutes 7 o clock Jan. 10 2010. A time series index node is a node having a feature value in a time period ranging from 0 second 30 minutes 7 o clock Jan. 10 2010 to 0 second 0 minute 8 o clock Jan. 10 2010. In the same way a time series index node is a node having a feature value in a time period ranging from 0 second 0 minute 7 o clock Jan. 10 2010 to 0 second 10 minutes 7 o clock Jan. 10 2010. A time series index node is a node having a feature value in a time period ranging from 0 second 10 minutes 7 o clock Jan. 10 2010 to 0 second 20 minutes 7 o clock Jan. 10 2010. A time series index node is a node having a feature value in a time period ranging from 0 second 20 minutes 7 o clock Jan. 10 2010 to 0 second 30 minutes 7 o clock Jan. 10 2010.

A pointer stores information of a pointer to sensor data in the time series data table . A pointer is a pointer of start time of time series data i.e. sensor data having start time. A pointer is a pointer of end time of time series data i.e. sensor data having end time.

In the description of the present embodiment it is supposed that the ID shown in is utilized. However a physical address in the external storage device storing sensor data can also be utilized. A subordinate node pointer stores a pointer array to subordinate nodes. For example in the subordinate node pointer of the time series index node shown in the IDs of the time series index nodes and which are subordinate nodes linked to the node are stored.

In the present embodiment the ID of each node is used as the subsequent node pointer . For example however a physical address in the external storage device in which each node is stored can also be utilized. By the way as for a data form of the index data an arbitrary form such as the binary form or the XML Extensible Markup Language form can be used as long as it can represent the index data .

The evaluation formula generation rule table is composed of a set of a plurality of rules and is a table formed by extracting one rule which matches a character string described in the search condition in the search query generating a corresponding evaluation formula and storing the formula into the table.

A rule ID is an identifier for identifying each rule. A search condition pattern is a search pattern character string for collating the search character string described in the search condition therewith. In the present embodiment the search condition pattern is implemented by normal representation. An evaluation formula stores a pattern of an evaluation formula to be generated and generates an evaluation formula corresponding to the search condition pattern .

As for a search pattern corresponding to rule ID 01 in the case of a pattern of a character string a character string of the search condition begins with AVG MIN or MAX followed by several arbitrary character strings then and arbitrary numerical value X the evaluation formula is converted to F MIN X F MIN

For example in the case where the search query as shown in is specified a search condition formula described in the search condition is AVG gas engine pressure 1500 and consequently a rule having an ID 01 is complied with it.

For example in the case where a feature value in a certain time period is MAX 1700 and MIN 800 substituting the feature value into the evaluation formula yields 1700 1500 800

On the other hand in the case of a feature value MAX 600 MIN 400 in a different time period a formula 600 1500 400

The data store unit will now be described with reference to and and with reference to as the occasion may demand.

The data receiving unit receives the time series data S and loops processing at S to S for all sensor data existing in respective rows S . The data receiving unit takes out next sensor data by one row S and acquires a list of attribute names corresponding to a data source name of the sensor data from the schema definition table see S . For example in an example of gas engine shown in water temperature temperature pressure and the number of revolutions are acquired.

Then the data receiving unit loops processing at S to S for all attribute names S . The data receiving unit takes out the next attribute name from the list of attribute names taken out at S and takes out a sensor value from the sensor data S . For example in an example of sensor data shown in a first line of a sensor value 15.2 is taken out as the water temperature. And conversion to sensor data having only one sensor value every attribute is conducted. After the conversion the data receiving unit assigns an ID number for identifying uniquely to the sensor data and conducts working to obtain sensor data having a form of ID number data source name attribute name time stamp and sensor value S .

In addition the data receiving unit delivers the worked sensor data to the data writing unit successively S and delivers the worked sensor data to the index generation unit S . If there are no attributes to be taken out i.e if in the above described example working processing for four attributes of one sensor data is finished then the processing at S to S is finished S and the processing proceeds to S.

The data receiving unit conducts the above described working processing on all sensor data existing in the time series data . If there are no sensor data to be taken out the data receiving unit finishes the processing at S to S S and proceeds to S. Upon finishing taking out of all sensor data from the time series data the data receiving unit transmits terminal data to the data writing unit to notify that there are no more data S transmits terminal data to the index generation unit in the same way S and finishes the receiving processing S.

Until all worked sensor data are received the data writing unit conducts processing at S and S S . The data writing unit receives worked sensor data from the data receiving unit S and writes the data into the time series data table S . Upon receiving the terminal data from the data receiving unit the data writing unit finishes the processing at S and S S and finishes the time series data writing processing S.

By the way in the example of the present embodiment the processing of writing sensor data into a relational database successively is conducted each time the sensor data is received. However it is also possible to buffer the sensor data into for example the memory and write the sensor data to a database in the lump.

The index generation unit receives sensor data from the data receiving unit and reads a data source name included in the data S . Then the index generation unit reads a corresponding list of attribute names from the index generation table S and secures a buffer for feature value calculation on the memory every attribute S . The buffer for feature value calculation is an area on the memory for temporarily storing sensor data of an operation object to conduct operation on a plurality of sensor data and calculate various feature values. For example in the case where the data source name of the received time series data is gas engine in the example shown in four attributes water temperature temperature pressure and the number of revolutions are read and four buffer areas are secured.

Until all sensor data are received the index generation unit conducts processing at S to S to create a time series index every attribute S . The index generation unit reads a list of the division regular time intervals and a list of the feature value calculation functions corresponding to each attribute name from the index generation table S . In the case where the attribute name is water temperature in the example shown in 1 hour 30 minutes and 10 minutes are read as the list of the range interval and MAX and MIN are read as the list of feature value calculation functions.

The index generation unit receives sensor data upon occasion stores the sensor data into the buffer areas corresponding to the attributes S and makes a decision whether a regular time interval in the buffer areas exceeds a maximum value of the division regular time interval S . If a regular time interval of a set of sensor data accumulated in the buffer areas i.e. a regular time interval of the time series data exceeds a maximum value in the list of the division regular time intervals S Yes the index generation unit executes S and subsequent steps. Otherwise S No the index generation unit returns to S again and receives data upon occasion. For example in the case where the regular time interval of the time series data in the buffer area corresponding to the attribute of the water temperature exceeds 1 hour in the case of the index generation unit executes S and subsequent steps.

The index generation unit conducts processing at S to S in order of increasing division regular time interval in the list of range intervals of the division regular time interval S . In other words at S and subsequent steps the index generation unit conducts processing of calculating a feature value for time series data in the buffer area and creating the index data .

If the attribute is the water temperature in the example shown in the index generation unit conducts processing in the order of 10 minutes 30 minutes and then 1 hour. This is because it is necessary to substitute a pointer of a low order node into the node pointer when creating a time series index node and consequently it is necessary to create time series index nodes in order from a low order time series index node.

The index generation unit takes out the next range interval division regular time interval S divides time series data in the buffer to division regular time intervals and calculates specified by a feature value calculation function in each range S . In the above described example the buffer is divided to time series data of every 10 minutes and calculates a maximum value and a minimum value for each time series data. After the calculation the index generation unit conducts pre processing for creating a time series index node. Specifically the index generation unit creates a time series index node assigns an ID number to the node and substitutes start time and end time of time series data in each time period an ID number of sensor data indicating the start time an ID number of sensor data indicating the end time and the feature value calculated at S S . By the way the present node creation is conducted every time period obtained by the division conducted at S. For example in the example shown in the time period 1 hour in the buffer is divided to 10 minutes and consequently a total of six nodes are created.

Then the index generation unit makes a decision whether a range interval division regular time interval of a processing object is a minimum value in the list of range intervals S . In the case where the range interval division regular time interval of the processing object is a minimum value in the list of range intervals S Yes i.e. a range interval of the lowest order of the time series index the index generation unit substitutes NULL into the node pointer of the time series index node created at S S . If the range interval of the processing object isn t a minimum value S No the index generation unit substitutes a plurality of ID numbers of time series index nodes belonging to the same range interval and having a range interval which is lower order by one into the node pointer S and proceeds to S.

Upon finishing the processing at S to S on all division regular time intervals the index generation unit finishes a loop S and clears the buffer S . And the index generation unit calls index writing processing S and delivers a data source name an attribute name and index data to the index writing processing. Thereafter the index generation unit executes S to S repetitively until it receives terminal data from the data receiving unit . Upon receiving all sensor data the index generation unit finishes a loop S and finishes the index generation processing S.

By the way it is also possible for the index generation unit to reconfigure the index of time series at arbitrary timing. In this case a new time series index can be reconfigured by deleting an old index stored in the time series index table at timing for example when an index update instruction has been received from the client PC taking out all time series data in the time series data table and conducting the index generation processing S.

In addition in this index reconfiguration it is also possible for the index generation unit to link feature values in adjacent time periods in the time series index at arbitrary timing and thereby calculate a feature value corresponding to a plurality of regular time intervals and reconfigure the time series index. For example in the case where there are a node A maximum value 15 minimum value 8 and a node B maximum value 18 minimum value 10 which have a division regular time interval of 10 minutes and which are adjacent to each other a new node C maximum value 18 minimum value 8 having a division regular time interval of 20 minutes can be created by linking the feature values of them. In other words the index generation unit links feature values in adjacent regular time intervals for the time series index having the hierarchical structure at arbitrary timing. As a result the index generation unit can calculate a feature value corresponding to a plurality of regular time intervals and reconfigure a time series index by regarding a plurality of regular time intervals as a new regular time interval.

In addition the index generation unit can also dynamically determine the division regular time interval of each node according to a variation of the sensor value without using the division regular time interval in the index generation table see . For example processing of providing a time period having a sensor value variation lower than a predetermined level with a large regular time interval and providing a time period having a sensor value variation of at least a predetermined level with a small regular time interval when calculating the feature value can also be applied to the present invention.

The index writing unit receives a data source name an attribute name and an index tree from the index generation unit S . And the index writing unit writes the received values into the data source name and the attribute name in the time series index table writes the index tree into the index data S and finishes the index writing processing S.

The data search unit will now be described with reference to and and with reference to as the occasion may demand.

Upon receiving the search query from the client PC S the search receiving unit delivers the search query to the index search unit calls index search processing S which will be described later and receives an address list of time series data of a reading object from the time series data table as an output.

Then the search receiving unit calls time series data reading processing in the data reading unit S . In the data reading processing time series data which becomes an object of time series analysis is output as an output result. And the search receiving unit calls time series analysis processing in the time series analysis unit S and delivers the time series data which is output to the time series analysis processing. In addition collation is conducted by the time series analysis processing and the search receiving unit receives a search result as an output. Finally the search receiving unit returns the output data to the client PC S and finishes the search processing .

If the index data is searched and a node having a division regular time interval which assumes a value close to the search range interval as far as possible while satisfying the relation division regular time interval search range interval can be extracted from the index data then it is possible to prevent wasteful data reading to the utmost when reading time series data as described above. In the present embodiment regular time interval filtering search see and regular time interval fixing search see will be described as a search method for extracting such a node.

For example in the case where the feature value is the range of sensor value of series data obtained by combining maximum value with minimum value a range in the regular time interval B is included in a range in the regular time interval A which is wider than the regular time interval B without fail. For example if a range in a regular time interval of 1 hour is 10 to 100 then a range in a regular time interval of 30 minutes included in the time period exists in the range of 10 to 100. Hereafter such a property of the feature value is described simply as includable in order to simplify the description.

Returning to the description of the regular time interval filtering search if a feature value used in a feature value decision at the time of search is includable a node complying with a high order node has a possibility of complying with a node which is lower in order than the high order node. Therefore a shift to a low order node is made i.e. the regular time interval is filtered and a compliance decision is further made as to the feature value of the low order node. Conversely there is a property that a node which does not comply with a high order node does not comply with a node which is lower in order than the high order node without fail. For example in the case where the range of a high order is 10 to 100 and the evaluation formula is minimum value

A flow of search will now be described with reference to the concrete example shown in as well. In the regular time interval has a structure of three hierarchical levels 1 hour 30 minutes and 15 minutes. In the case where the evaluation formula is MIN

First since a node complies with the evaluation formula its subordinate nodes are evaluated. Since a node does not comply its subordinate nodes and do not comply without fail and consequently decision processing is not conducted. On the other hand since a node complies a decision is made as to its subordinate nodes and . As a result a node complies and consequently the node is extracted.

Then returning to the highest order node a decision is made as to a node . Since the node does not comply a decision is not made as to its subordinate nodes. Since the decision processing can be conducted efficiently as described heretofore the search speed at the time of the time series index search can be improved.

Referring back to a processing flow of the index search processing regular time interval filtering search S will be described hereafter. The index search unit receives the search query see from the search receiving unit takes out a search condition formula described in the search condition in the search query S calls evaluation formula generation processing S see in the evaluation formula generation unit and receives an evaluation formula as an output S .

Then the index search unit searches the index data for a highest order index node group included in a search object range which is described in the search object range in the search query and takes out the highest order index node group S . For example in the example shown in nodes included in the time series nodes . . . which belong to the highest order node group and having a time period included in a specified search object range are read.

Then the index search unit conducts processing ranging from S to S on all nodes in the node group which is now an object of the processing S . If a feature value of each node complies with the evaluation formula then a shift to its subordinate node is made and a feature value evaluation is conducted again in order to further filter the regular time interval and conduct re evaluation. The index search unit repeats the evaluation processing until the lowest order node is reached or a range interval division regular time interval of an object node becomes smaller in value than the search range interval in the search query i.e. the search range interval S .

Hereafter processing for that purpose will be described with reference to S and subsequent steps. The index search unit executes S to S on all time series index nodes belonging to the same hierarchical level in the range interval of the processing object. First the index search unit takes out one index node in time order S and makes a decision whether a feature value the node has complies with the evaluation formula S . If the feature value does not comply S No the index search unit returns to S and takes out the next time series index node. If the feature value complies S Yes the index search unit makes a decision whether a pointer to subordinate nodes of the node exists S . If the pointer exists S Yes the index search unit takes out a subordinate node group S and makes a decision whether a division regular time interval of the node group is smaller than the search range interval S . If the division regular time interval is smaller S Yes the index search unit stores a set of a start pointer and an end pointer of time series data indicated by the above described index node which has complied into a specific buffer area for outputting S .

If the range interval division regular time interval of a subsequent node is greater than or equal to the search range interval at S S No then the index search unit shifts a processing object to the subsequent node group and recursively executes the processing at S and subsequent steps again. If the lowest order node is reached or the relation represented as the division regular time interval of the processing object node

In the present processing going upstream is conducted in order from a superordinate node when conducting processing for extracting an index having a range in which the division regular time interval and the search range interval assume values which are close as far as possible while satisfying the condition that the division regular time interval the search range interval . If the evaluation formula does not match a feature value of a superordinate node feature values of all nodes belonging to subordinate nodes of the superordinate node do not match without fail according to the feature of the time series data. The reason why going upstream is conducted in order from a superordinate node is that there is a merit that wasteful complying processing can be omitted because the feature of the time series data is utilized.

The regular time interval fixing search will now be described with reference to . The regular time interval fixing search is a search method in which the evaluation object is only a node group having a division regular time interval which is close in value to the search range interval as far as possible while satisfying the relation that the division regular time interval the search range interval .

For example in the case where an average value AVG is used as a feature value to be evaluated the evaluation formula is AVG 60 compliance and the search range interval is 20 minutes the regular time interval filtering search is applied to . As a result a node does not comply. However a node which is its subordinate node complies. Eventually therefore it becomes necessary to search all nodes. In this case first only nodes having a division regular time interval of the search object which is 30 minutes in the present example are assumed as the search object. Nodes . . . are searched successively.

By the way nodes having the same division regular time interval are searched sequentially in order of time in the example shown in . However the present invention is not restricted to it. For example it is also possible to provide each of feature values with a B tree structure and conduct a B tree search. By the way the B tree structure refers to a structure divided to route nodes branch nodes and leaf nodes.

The index search unit receives the search query from the search receiving unit takes out a search condition formula described in the search condition in the search query S calls the evaluation formula generation processing S see in the evaluation formula generation unit and receives an evaluation formula as an output S .

Then the index search unit takes out an index node group which satisfies the relation that the division regular time interval the search range interval and which has a minimum value of division regular time interval S takes out a node group matching the search object range in the search query from the index node group S and executes processing ranging from S to S on all nodes taken out S .

The index search unit takes out one node S and makes a decision whether a feature value of the node complies with the evaluation formula S . If the feature value does not comply S No the index search unit returns to S. If the feature value complies S Yes the index search unit stores a set of a start pointer and an end pointer of time series data indicated by the node into a specific buffer area S . Upon finishing the processing on all nodes which are taken out at S the index search unit finishes a loop of S S . And the index search unit outputs a list of sets of start pointer and end pointer of time series data existing in the buffer area S .

By the way it is also possible for the index search unit to link feature values in adjacent time periods at the time of search and thereby calculate a feature value corresponding to a plurality of division regular time intervals make a decision as to the feature value according to the evaluation formula and identify a time period of a complying data series group.

For example in the case where there are a node A maximum value 15 minimum value 8 and a node B maximum value 18 minimum value 10 which have a division regular time interval of 10 minutes and which are adjacent to each other it is possible to link the feature values of them thereby dynamically create a feature value maximum value 18 minimum value 8 having a division regular time interval of 20 minutes and make a decision according to an evaluation formula.

The evaluation formula generation unit receives the search condition formula described in the search condition in the search query from the index search unit S and extracts a rule which matches the search condition formula from the evaluation formula generation rule table S . For example in the case of the search condition formula in the example shown in the rule having the rule ID 01 in is extracted. The evaluation formula generation unit extracts and generates a corresponding evaluation formula from the extracted rule S and finishes the evaluation formula generation processing S.

The data reading unit receives a time series data section pointer list which becomes an object of reading from the search receiving unit S . As described earlier the time series data section pointer is composed of a set of a start address and an end address of series data to be extracted from the time series data table and the ID is included as the address.

The data reading unit executes processing ranging from S to S which will be described hereafter on all time series data section pointers S . The data reading unit takes out one of the time series data section pointers S reads sensor data ranging from a start time ID to an end time ID included in the time series data section pointer from the time series data table S and outputs the time series data which are read to the search receiving unit S . Upon finishing the processing ranging from S to S on all time series data section pointers the data reading unit finishes a loop S and finishes the time series data reading processing S.

The time series analysis unit stores the received data into the buffer successively S and makes a decision whether a time period of time series data in the buffer has exceeded the search range interval S . If the time period of time series data in the buffer has exceeded the search range interval S Yes the time series analysis unit deletes the oldest data in the buffer S . Otherwise S No the time series analysis unit executes S and subsequent steps. At S a sensor value of sensor data in the buffer is evaluated according to the evaluation formula in the search condition . In its collation processing a decision is made whether matching is obtained S . If matching is obtained S Yes the time series analysis unit outputs a data series in the buffer to the data receiving unit S . Otherwise S No the time series analysis unit proceeds to S. Upon receiving all data a loop of S is finished S and the time series analysis processing S is finished.

Hereafter the present embodiment will be summarized. The time series data management device includes the data accumulation unit for accumulating time series data of a search object into the external storage device and the data search unit for searching the accumulated time series data for a data series complying with the search query which is input from the client PC .

The data accumulation unit includes the index generation unit for calculating a feature value for example a feature value indicated in feature value calculation function shown in of a data series every specific regular time interval for example every division regular time interval shown in when accumulating the time series data the index writing unit for writing the calculated feature value of the data series of every regular time interval into the external storage device as the time series index table time series index information and the data writing unit for writing the time series data into the external storage device as the time series data table time series data information .

The data search unit includes the evaluation formula generation unit for generating an evaluation formula to judge degrees of compliance with each feature value in the time series index information on the basis of the search query when searching the time series data the index search unit for making a decision as to a feature value of every time period included in the time series index information by using the evaluation formula and identifying a time period of a complying data series group the data reading unit for extracting a data series corresponding to the identified time period from the time series data information and the time series analysis unit for collating the extracted data series with the search condition in the search query.

The time series index information includes the index hierarchical structure for example index data composed of a plurality of time series indexes every attribute name in the time series data . The time series index includes the time period including the start time and the end time of the time series data the feature value of the time period and the node pointer of subordinate time series indexes included in the index hierarchical structure.

In relation to the data compression unit and the data melting unit a part of processing conducted by the data writing unit A the index generation unit A the search receiving unit A the index search unit A and the data reading unit A is changed and it will be described later. Since processing except the changed part of processing is the same as that of the first embodiment description thereof will be omitted. By the way in the general configuration shown in components which are the same as those in the first embodiment are denoted by like reference numerals and description of them will be omitted.

The data compression unit conducts processing of receiving worked sensor data from the data receiving unit and generating compressed data. The data melting unit receives compressed data of time series data from the data reading unit A and melts the compressed data.

In the example shown in a time period of the data series stored in the compressed data is described in the time period . It is indicated that data corresponding to one hour is stored in the compressed data . The compressed data is data obtained by compressing sensor data in a time period described in the time period . The compressed data is stored in for example a binary form.

As for the compressed data it is possible to compress and store data hierarchically every a plurality of division regular time intervals. For example in the illustrated example data is data obtained by compressing individual sensor data with a regular time interval of 10 minutes taken as the unit data is data obtained by collectively compressing individual compressed data of the data included in the same time period and data is data obtained by collectively compressing the data included in the same time period in the same way. In the present embodiment ZIP is used as a method of the compression. In the present invention however an arbitrary algorithm can be applied.

A merit that the volume included in the time series data table can be reduced is obtained by compressing the sensor data. Besides the merit there is also a merit of advantage in performance because a plurality of sensor data can be collectively read in one disk I O. For example if sensor data are at intervals of one second it is necessary to read 3 600 lines in the case where the sensor data are not compressed in order to read data corresponding to one hour. On the other hand it suffices to read once in the case where the sensor data are compressed.

By the way the present embodiment has a hierarchical compression structures by taking a plurality of division regular time intervals as the unit. Alternatively however data may be stored into the compressed data without a hierarchical structure by taking a data series compressed with an arbitrary division regular time interval taken as unit as the unit.

The data compression unit first reads a list of the division regular time intervals corresponding to the attribute name from the index generation table S and receives sensor data successively and store them into the buffer area S . The data compression unit makes a decision whether a regular time interval of sensor data in the buffer exceeds a maximum value of the division regular time interval S . If the regular time interval of sensor data in the buffer exceeds the maximum value of the division regular time interval S Yes the data compression unit conducts processing at S and subsequent steps. Otherwise S No the data compression unit returns to the processing at S. For example in the case where the data source name in is gas engine and the attribute name is water temperature the data compression unit conducts processing at S and subsequent steps when the regular time interval of sensor data in the buffer has reached one hour.

Then the data compression unit conducts processing ranging from S to S in order beginning with the shortest division regular time interval in the list of the division regular time intervals . In the above described example the data compression unit executes the processing in order of 10 minutes 30 minutes and then 1 hour S . A decision is made whether the division regular time interval under processing is the minimum value S . If it is the minimum value S Yes the data compression unit compresses sensor data in the buffer collectively every division regular time interval S . Otherwise S No compressed data collected with a division regular time interval of a low order are collected with a unit falling in the division regular time interval and further compressed S . In the above described example three compressed data each of which is collected with 10 minutes taken as the unit are further collected with 30 minutes taken as the unit and compressed. If the processing ranging from S to S is conducted for all division regular time intervals the data compression unit finishes a loop of S S .

And the data compression unit assigns a unique ID number to the compressed data delivers the ID number the compressed data a time period of the compressed data the data source name and the attribute name to the data writing unit and clears the buffer S . Upon finishing processing ranging from S to S on all sensor data the data compression unit sends terminal data to the data writing unit and finishes a loop of S S and finishes the data compression processing S.

The index generation processing SA differs from the first embodiment in that an address of the compressed data is substituted into the pointer to time series data when creating an index node. An address of compressed data including series data indicated by the node i.e. the ID corresponding to the compressed data in the time series data table A see is substituted into the pointer see . In this case the same address is substituted even if nodes have different division regular time intervals. For example in the example shown in the same address is substituted into the time series index nodes and

Returning to the description of the processing flow shown in the index generation unit A creates a time series index node every time period obtained by division assigns an ID number and substitutes the ID number start time and end time of each time period and the feature value calculated at S S .

Then in order to acquire an address of compressed data indicated by the node the index generation unit A takes out a line which includes the time period extracted at S in the time period from the time series data table takes out the ID in that line and substitutes the ID into the pointer of the time series data S .

Upon receiving the list of the time series data pointer the start time and the end time of a reading object from the index search unit S the data reading unit executes processing ranging from S to S S . First the next time series data pointer is taken out S and the compressed data and the time period shown in are taken out from the time series data table by using the time series data pointer S . And the compressed data and the time period which are read and the start time and the end time received at S are output to the search receiving unit S . By the way series data between the start time and the end time existing in the time period of the compressed data is melted by the data melting unit . Upon executing the processing ranging from S to S on all time series data pointers a loop of S is finished and the time series data reading processing S is finished.

In the present embodiment the time series index is not used to filter the data series to conduct time series search fast but used to output each feature value retained in the time series index to the viewer in the client PC .

In a flow typically conducted in time series search an output result is displayed as a chart and a search pattern is changed by trial and error while confirming the result visually. Especially in the chart display the output result is viewed as a polygonal line graph with time represented by an abscissa axis and a sensor value represented by an ordinate axis in many cases. If the output data is large in amount however it takes long time to display and the user is waited for a long time to confirm the result in some cases. In some cases the user first peruses all data stored in the time series data table and grasps a tendency without filtering the search condition. In that case the influence appears more remarkably. If it is desired to peruse the tendency of the whole data fast display is demanded rather than accuracy of the output result.

The present embodiment has a feature that output timing for making the display speed fast is controlled in the graph display on the viewer . Specifically as for the feature value which is a representative value of series data a feature value every wide regular time interval is first displayed and the regular time interval is gradually shortened to conduct precise display. As a result the user can grasp the tendency of data quickly without waiting for a long time.

The index search unit B receives the search query from the search receiving unit B and outputs a feature value in each of time periods obtained by dividing with a specific regular time interval out of time series indexes in the time series index table to the search receiving unit. The search receiving unit B outputs the output data to the viewer .

The viewer draws data which is output from the search receiving unit B on a graph. In the present embodiment a two axis line graph having an X axis as time and a Y axis as the sensor value is used as the graph. Processing other than the above described processing is the same as that in the first embodiment and consequently description thereof will be omitted.

By the way in the present embodiment an example in which a feature value is output and then time series data is read and output in order to output more accurate data at S and subsequent steps is shown. However it is also possible to output only a feature value without outputting time series data. In this case the processing at S and subsequent steps is omitted. Furthermore after the feature value is calculated time series data need not be stored in the time series data table but may be deleted.

The index search unit B makes a decision whether the search condition taken out at S exists S . If the search condition exists S Yes i.e. a search with a condition specified is to be conducted then the index search unit B executes S and S. Otherwise S No i.e. a search of all data without specifying a condition is specified the index search unit B executes S.

The index search unit B calls the evaluation formula generation processing S see S receives the evaluation formula applies the evaluation formula to all node groups of a processing object and extracts a complying node group S . At the S all node groups which become a processing object i.e. all nodes having the same division regular time interval are extracted S .

And the index search unit B extracts a feature value start time and end time of each node and outputs them to the data receiving unit . As the feature value used here an arbitrary feature value can be used. In the description of the present embodiment however it is supposed that average AVG is used as a typical feature value. Because the average value is suitable for describing a rough feature of a data series in the time period.

Here all feature values in a specific time period have been output. Then in order to output detail values the index search unit B takes out all node groups in a layer which is lower in order by one S and executes S and subsequent steps repeatedly again. If the lowest order node is reached and the processing ranging from S to S on all nodes is finished the index search unit B finishes a loop of S S and finishes the index search processing S.

The viewer extracts a feature value start time and end time of each node from the search receiving unit B S and makes a decision whether a feature value is already plotted and drawn in the same time period S . If a rough drawing in a higher order regular time interval is left S Yes the viewer deletes the plot data S . And the viewer plots the time period from the start time to the end time extracted at S on an X axis on the screen and in that range plots a feature value for example the average value on a Y axis and draws S . Upon receiving all data the viewer finishes the processing ranging from S to S finishes a loop of S S and finishes the drawing processing S.

In the case where the number of client PCs . . . which execute the search has increased there is a fear of performance degradation due to the increase of the search load. Therefore it is an aim of the present configuration to scatter the load and prevent degradation of the search performance by scattering the disposition of search executing devices.

In addition the search pattern of the time series data is diversified according to the client. For example in the case where sale results of a certain product are accumulated a client A belonging to a production control division searches sales patterns of immediately preceding several days in order to make a future production plan. On the other hand a client B belonging to a management division searches sales patterns of immediately preceding several months to several years in order to make a future product plan.

Considering the above described situation a system in the present embodiment includes one time series data management device first management device which accumulates time series data and which retains a time series data table and a plurality of time series data management devices . . . second management devices which retain time series index tables . . . and which execute a search in response to a search request from a client PC. The devices are connected to a network via network interfaces . . . to be able to communicate.

By the way it is supposed that the time series index tables . . . respectively suitable for different search patterns are stored in the time series data management devices for search. However it is also possible for a plurality of devices to retain the same time series index table simply with the object of only load scattering.

Hereafter the present configuration will be described. The time series data management device is a device for accumulating time series data and has a time series data table in an external storage device first storage device . In addition the time series data management device conducts processing of creating a time series index in the time series index table in an arbitrary time series data management device . Specifically an index writing unit conducts processing of storing a time series index generated by an index generation unit into an external storage device in another management device. At this time a reference destination device is determined by referring to an index generation table . Although described in detail later the index generation table stores a store destination device address of a time series index in addition to components of the index generation table in the first embodiment.

In addition the time series data management device conducts processing of conducting centralized management on time series data which become search objects of the time series data management devices for search taking out a data series from the time series data table in response to a data acquisition request from the time series data management device and outputting the data series to the time series data management device

The time series data management device for search is a device for executing a search of time series data and has the time series index table in an external storage device . . . second storage device . It is considered that the client PCs . . . utilizing respective time series data management devices for search execute different search queries . . . respectively. The time series index tables suitable for search patterns are stored in respective devices. The data search unit . . . filters data series of an object and extracts a data series by referring to the time series index table and executes a time series analysis.

Unlike the processing in the first embodiment the data search unit . . . does not read a data series from a storage device connected thereto after it has filtered object data series but conducts processing of reading a data series from the time series data table managed by the time series data management device for storage via the network .

Furthermore it is also possible to create the same time series index on a plurality of time series data management devices with respect to one attribute of time series data. For example in the case where the data source name is gas engine and the attribute name is pressure. the same time series index is generated in two time series data management devices respectively having an address 192.168.10.1 and an address 192.168.10.2. Components of the index generation information except the generation destination device address are the same as those in the first embodiment and consequently description of them will be omitted.

When creating an index node the index generation unit reads the generation destination device address in the index generation table in order to identify a store destination device of the time series index of time series data. This point differs from the first embodiment. At S the index generation unit reads a list of the division regular time intervals a list of the feature value calculation functions and the generation destination device address corresponding to an attribute name from the index generation table . And when the index generation unit calls index writing processing S see the index generation unit delivers the generation destination device address acquired previously as well in addition to the data source name the attribute name and index data S .

The index writing unit receives the data source name the attribute name the index tree and the generation destination device address from the index generation unit S . And the index writing unit writes received values into the data source name and the attribute name in the time series index table in the external storage device connected to the time series data management device which is indicated by the generation destination device address and writes the index tree into the index data S .

By the way in the present embodiment a means for writing data into a specified address via the network is implemented by mounting and calling a database connection API which is configured as the API Application Programming Interface such as for example JDBC and ODBC Open Database Connectivity or configured as another API unique to a DBMS DataBase Management System .

In the time series data reading processing C conducted by the data reading unit the data reading unit does not read time series data from the external storage device connected to its own time series data management device but the data reading unit conducts processing of reading time series data sensor data from the external storage device connected to the time series management device for storage via the network S .

By the way when reading data in the present embodiment the data reading unit specifies an IP address of the time series data management device for storage and reads data. Its concrete means is implemented by mounting and calling a database connection API which is configured as the API such as for example JDBC and ODBC or configured as another API unique to a DBMS in the same way as the above described time series index writing processing.

Heretofore the present invention has been described on the basis of the present embodiment. However the present invention is not restricted to the embodiments but various changes can be made without departing from the spirit.

When making a time series analysis on time series data stored on a disk according to the present embodiment only time series data having a possibility of matching a specified search pattern is filtered and read from the disk. As a result it is possible to prevent frequent occurrence of the disk I O generated at the time of disk reading and the time required for a search can be shortened.

