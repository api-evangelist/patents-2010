---

title: Computer-implemented multiple entity dynamic summarization systems and methods
abstract: Systems and methods are provided for operation upon data processing devices are provided for operating with a fraud detection system. As an example, a system and method can be configured for receiving, throughout a current day in real-time or near real-time, financial transaction data representative of financial transactions initiated by different entities. At multiple times throughout the day, a summarization of the financial transaction data (which has been received within a time period within the current day) is generated. The generated summarization is used to determine whether fraud has occurred with respect to a financial transaction contained in the received authorization data or with respect to a subsequently occurring financial transaction.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08805737&OS=08805737&RS=08805737
owner: SAS Institute Inc.
number: 08805737
owner_city: Cary
owner_country: US
publication_date: 20101102
---
This application claims the benefit of and priority to U.S. Provisional Patent Application Ser. No. 61 257 346 entitled Computer Implemented Multiple Entity Dynamic Summarization Systems And Methods filed Nov. 2 2009 the entire disclosure of which including the drawings is incorporated herein by reference.

This document relates generally to computer predictive models and more particularly to fraud detection systems and methods.

Computer predictive models have been used for many years in a diverse number of areas such as in the financial industry. The computer predictive models provide an automated or semi automated mechanism for determining whether suspicious activity such as credit card fraud may have occurred. However current systems have difficulty in determining how to address activity that has been deemed suspicious or fraudulent.

In accordance with the teachings provided herein systems and methods for operation upon data processing devices are provided for operating with a fraud detection system. As an example a system and method can be configured for receiving throughout a current day in real time or near real time financial transaction data representative of financial transactions initiated by different entities. At multiple times throughout the day a summarization of the financial transaction data which has been received within a time period within the current day is generated. The generated summarization contains fraud indicative information regarding fraud at the entity or peer group level. The generated summarization is used to determine whether fraud has occurred with respect to a financial transaction contained in the received authorization data or with respect to a subsequently occurring financial transaction.

Still further computer implemented methods and systems are provided for operating with a financial fraud detection system. As an example authorized transaction data records are received which are representative of financial transactions initiated by multiple entities and authorized by a financial institution. Fraud data records are received which are representative of financial transactions which have been indicated as fraudulent financial transactions. Financial transaction business rules are applied to an authorized transaction data record and a fraud data record for determining degree of relatedness between the authorized transaction data record and the fraud data record. Matching scores are determined based upon the step of applying the financial transaction business rules to the authorized transaction data records and the fraud data records. Associations are created between the authorized transaction data records and the fraud data records based upon the determined matching scores thereby determining matched records.

Still further computer implemented methods and systems are provided to generate operation reason information for a fraud score generated by a predictive model. As an example input data related to financial transactions is stored. The stored input data is associated with multiple different types of entities. A score is generated based upon data regarding a new incremental transaction with respect to an entity. Operation reason information associated with the score generated for the entity is generated and a probability is also generated to indicate how likely a particular fraud type might be. The operation reason information provides operation reasons for value of the score generated for the entity. The generating of the operation reason information is based on fraud risk reason factors. The fraud risk reason factors were generated by grouping similar fraud risk reason variables together. The operation reason information is provided to a user for use in conducting fraud analysis.

As shown in input data is used during a development phase to create train one or more predictive models . The predictive models are then used during a production phase to receive input such as from a financial institution to generate fraud analysis results .

Whether in the development phase or in the production phase the input data can be of many different types. Examples of such input data are shown in . With reference to a fraud detection model can receive fraud information and other input information such as posting transaction information authorization information cycle cut information etc. Postings are the process for the recording of debits and credits to individual cardholder account balances. 

An example of fraud data could be the date of the first fraud as reported by a customer. For example a customer may call a financial institution to indicate that one or more transactions that appeared on their credit card statement and represent a fraudulent use. An example of fraud is when a person steals a credit card number and uses it to purchase items.

The input fraud data can include several dates such as the date on which fraud was first suspected to have occurred and a block date which is the date on which no further transactions should be authorized. A predictive model can be trained to detect fraud e.g. whether an entity has been compromised as shown at within this account compromise period as early as possible.

The system can also utilize payment information and or non monetary information to detect whether the account is in a fraud state. An example of payment information is the credit card payment information received on a monthly or other periodic basis. An example of non monetary data is an address change phone change mother s maiden name change or credit line change.

As shown in financial transaction data is received over network s by one or more servers . Resident on the server s a fraud detection predictive model processes the financial transaction data to determine whether fraudulent activity has occurred. The financial transaction data can include many different types of transactions such as credit card purchases of goods or services ATM transactions e.g. cash withdrawals fund transfers cash deposits balance inquiries etc. etc. One or more data stores store the data to be analyzed by the fraud detection predictive model as well as any intermediate or final data generated within the system .

The fraud detection predictive model can itself consist of one model or comprise a group of models which are configured to detect fraud based upon financial transaction data and other relevant data. The models can include a neural network model a decision tree model logistic regression model a linear regression model etc. As an illustration a fraud detection predictive model can include a neural network which has been specially trained to detect fraud on an account level. An example of a model that has been configured to detect fraud on an account level is described in the following patent document U.S. patent application Ser. No. 11 691 270 filed Mar. 26 2007 and entitled Computer Implemented Predictive Model Scoring Systems And Methods which is incorporated herein by reference. As an example of a different approach a fraud detection predictive model can be a neural network which has been specially trained to detect fraud only on a transaction level.

Financial transaction data e.g. financial transaction data received over the network s is associated with an entity e.g. entity . The entity could be associated with the account through which the transaction occurred or with just the transaction e.g. a terminal merchant peer group etc. . An entity could be the individual which used his or her credit card to purchase an item. However it should be understood that many other types of entities may be involved such as a corporation which is associated with an account etc. The example shown in illustrates that different entities e.g. different individuals corporations etc. can be associated with the transactions that are to be processed by the fraud detection predictive model.

The system further includes a dynamic summarization process which can be operating on the same server which contains the fraud detection predictive model or can be separately located such as on a different server. The dynamic summarization process summarizes information from the fraud detection predictive model and the financial transaction data at different points in time such as at multiple times during the day in which the financial transaction data was generated and processed by the fraud detection predictive model. For example as shown at the dynamic summarization process summarizes financial transaction data e.g. authorization activity transaction data at entities peer groups other than the cardholder account holder level. The dynamic summarization process periodically e.g. throughout the day once a week etc. summarizes batches of data as authorizations are passed to the fraud detection predictive model .

The summarized data is used to determine whether fraud has occurred with respect to a financial transaction contained in the received authorization data or with respect to a subsequently occurring financial transaction. For example the summarized data can be analyzed to determine whether fraud has been significantly prevalent at a particular merchant location. A financial transaction that may not have been tagged as fraud when initially processed by a predictive model may then be reexamined because the transaction had transpired at that merchant location. As another example because a particular merchant location has been determined as having an unusual number of suspicious transactions subsequent transactions occurring at the same merchant location can be analyzed by a predictive model with heightened scrutiny. Additionally when a subsequent transaction is received the summarized data can be combined with that transaction s data and processed by the initial predictive model in real time to determine if this subsequent transaction is fraudulent.

As another example the dynamic summarization process can be used to detect a situation involving a fraudster who starts with a particular credit card number and increments the number until the fraudster can find a credit card number that works. The dynamic summarization process can summarize a portion of credit card numbers over a period of time to determine whether such a situation may be occurring for a group of cards.

In the example of entityhas purchased items at the same merchant location for two successive days. If entityand entityhave also purchased items at the same merchant location then their respective fraud related information would be included in the dynamic summarization process . Accordingly the summarization can be performed not only across the entity boundary but also across multiple days.

In the fraud detection predictive model stores fraud score results in a data store which also can store transaction data. The dynamic summarization process is triggered when a certain period of time e.g. every hour every two hours etc. has elapsed. The example of depicts that the dynamic summarization process processes a set of records while the fraud detection predictive model is storing the next set of records. Because the triggering criteria is time based the number of records to be processed by the dynamic summarization process may vary.

It should be understood that the data stores in these examples could be a single database stored on a server or could comprise multiple databases wherein one database stores the most recent results of the fraud detection predictive model and data records are transferred to another database on a different server for processing by the dynamic summarization process .

A dynamic summarization process can use different period lengths to better suit the situation at hand. For example a longer period length can be used during the portions of the day when commercial transactions are not as prevalent e.g. after or before typical business hours and a shorter period length can be used during the portions of the day when most commercial transactions occur e.g. during typical business hours . A dynamic summarization process can also use various combinations of short term periods and long term periods. As an illustration a dynamic summarization process can include a first summarization process which uses a short term period and include a second summarization process which uses a long term period. A fraud detection prediction model can utilize both summarization results to improve the fraud scoring process.

The second neural network provides an improvement over the predictive capability of the first neural network because the second neural network uses not only the transaction data and related data but also uses the first fraud scores and the summarized information to generate a second set of fraud score . This improvement is a result at least in part because of the summarized information which allows the second neural network to more properly detect fraud which transcends the entity boundary.

The neural networks can be constructed in many different ways. For example the first neural network and the second neural network may comprise two separate and distinct neural networks as shown in . provides another configuration example.

With reference to summarized information from the dynamic summarization process can be fed into a separate layer of the neural network which had originally generated the first set of scores . Within the layer node variables are used to represent the summarized information within the layer and can be based upon the following data which typically appear in financial transaction data 

The system can also be configured to pre process the transaction data at using parent child hierarchical data to fill in any information which might be missing. For example if lower level information is missing from a transaction record then suitable information may be supplied by other information which exists at a higher level. In other words higher level information while not having the level of detail as the missing data can still be useful as a proxy. As an illustration if a merchant s postal ZIP code associated with a transaction is not entirely recognizable possibly because the ZIP code is relatively new the system can use the ZIP code hierarchy with respect to a received merchant postal code by examining digits appearing earlier in the postal code sequence to provide high level geographical location information if the entire ZIP code is not recognizable.

As another illustration a transaction data record may not include the location of the transaction e.g. the location of the ATM machine . In such a situation the pre processing routine can examine related information to determine generally the location of the transaction. For example within the context of an ATM machine the related information can be the residential locations of account holders who have previously used the ATM machine which can be used as a general indicator for the location of the ATM machine itself.

As another illustration the system depicted in could have the pre processing routine configured to operate between transaction and neural network . This allows the results of the pre processing to be available not only to the dynamic summarization process but also to neural network .

The dynamic summary table contains such information as periodic summarizations that have been previously generated from the dynamic summarization process . An API is also used to provide score results of the fraud detection predictive model to the dynamic summarization process in order to generate periodic summarizations for scoring subsequent financial transactions.

In this example it is noted that all of the raw quantities in the tables may be biased if used as raw inputs to the model unless the data used to do the summarization was a 100 sample of the data. Because developing a fraud model with 100 sample of data is typically not practical a 1 or 10 sample can be used. In this case all of the total counts and total amounts in the dynamic summarization tables may be far too small compared with what will be seen if summarization is performed in production.

For this reason variables that are used in the dynamic summarization portion of the model are ratios between two quantities. For example the ratio of the total number of transactions scoring above a given threshold may be compared to the total number transactions at a particular MCC. This quantity can be considered a pseudo bad rate and is not affected by down sampling in the same way that raw counts are affected. Another example can include the ratio of the number of transactions over the last three days to the total number transactions of the last 30 days for a particular merchant ID.

Another set of variables that can be used includes comparisons between a child table value and a parent table value. For example the child table may be the first thirteen digits of the account number account group and the parent may be the first six digits of the account number BIN . A comparison of the total number transactions from the child table to the total number transactions from the parent table can provide another mechanism for avoiding potential problems caused by down sampling.

The parent child structure can also be used to determine whether the statistics of a child entity is out of norm by comparing it to the more generic statistics at the parent calculated from its peers. An example is when there is a holiday sales even though the statistics of the child is unusual comparing to its normal behavior due to increase of sales when comparing it to the peers who are likely to have similar sales using the statistics stored at the parents it can be determined that the increase of sales is actually normal.

Other variables that can be created are comparisons between the current transaction and the average behavior for a given entity. As an illustration suppose that a transaction scored above a prescribed score threshold. However in the dynamic summarization table related to MCCs only 1 of the transactions scored above the same threshold total number transactions scored above threshold total number of transactions . The difference between these two quantities 1 0.01 0.99 can be used as a proxy for how much difference there is between this transaction and its peers. If the difference is positive this is an indication that the transaction may be riskier than the base model would have considered it to be and if it is negative it may be less risky than the base model would have considered it to be.

The systems and method can include other embodiments. As an illustration a dynamic summarization can be performed for many different situations and entities. As described above a system and method can be configured to detect a test merchant situation. This situation can include fraudsters targeting one or several merchants e.g. on line merchants to test the validity of plastic card information. As another example a system and method can be configured to include detection on BIN ranges Internet addresses mobile device identifiers etc. Additional entities can be analyzed such as terminal id card entities account entities and customer entities. The interaction among two or more entities can also be analyzed by treating the group as an entity.

As another illustration of the wide scope of the disclosure herein a system and method can be configured as described herein to use fresh transactions coming into the system and method without any knowledge of whether the card account have been compromised. A system and method could also be configured to incorporate summarize the fraud statistics for entities via a fraud tagging process that is done periodically in the backend. In such a system and method a batch process is used that marks the period as well as individual transactions as frauds based on feedback provided by users e.g. a financial institution such as a plastic card issuer . The process could have delays ranging from a day to several months depending on how soon the frauds are identified and confirmed by the users. The tagged transactions are then summarized by the dynamic summarization process in order for the system and method to estimate the fraud statistics at various entity levels.

As another illustration of the wide scope of the disclosure herein a system can be configured to perform dynamic summarization by storing the raw transaction data over a prolonged period of time and making such data available for performing data summarizations at different points in time. The system can store the raw data using the approaches described in the following patent document U.S. patent application Ser. No. 11 691 270 filed Mar. 26 2007 and entitled Computer Implemented Predictive Model Scoring Systems And Methods which is incorporated herein by reference. As an illustration depict an approach for storing raw transaction.

In contrast the system of as depicted at contains a repository of historical data . This is not aggregate or derived data but raw data. For example no summaries or averages of raw transactional data is stored in the repository . Raw data is being processed and stored via process and then retrieved e.g. by fraud detection process in order to determine whether an entity has been compromised. In other embodiments a combination of raw data and derived data could be stored.

In the system storage rules specify how many generations of raw data should be stored in the repository e.g. subset . This determination could include how many raw payment amounts should be stored. The determination of how many generations should be stored is based upon the type of transaction as well as the transaction fields. This may result in varying lengths of the fields being stored in the repository as illustrated at in . For example the payment amounts for the last seven transactions may be stored in the repository. However for another type of information only the previous five values need to be stored. Thus the length for one field might be seven generations in length whereas for another field only five generations in length might be stored in the repository. An advantage of storage of the raw data in comparison with storage of aggregate or derived data is that information that underlines the transaction is not lost due to process that may preserve only a top level view of what has occurred. As an example of a storage rule a storage rule can specify how many authorization amounts should be stored for an entity in the raw state e.g. without any aggregation or other type of transformation into a derived variable .

The data can be stored in a circular list e.g. a doubly linked list for each field. They can comprise varying lengths in the circular lists for the data fields. A data field may have the previous three generations stored whereas another data field may have the previous eight generations stored. The circular lists are stored in an indexed file. However it should be understood that other storage mechanisms may be utilized such as storage in a relational database.

It should be noted that the system can still operate even if not all of the generations for a particular data field has been stored. For example a relatively new card may have only enough raw data to store three generations of payment authorization amounts although the storage rules for this data field may allow storage of up to fifteen generations. A predictive model can still operate even though a particular data field does not have all of the generations specified by the storage rules.

The storage of raw data in the repository reflects a compromise between an ideal situation where all historical information that can be obtained for an entity is stored that is used to make a prediction versus the physical constraints of storage capacity and or performance. In reaching that compromise it should be noted that a less than optimal situation might exist in determining what timeframe number of generations should be stored for one or more data fields. It should also be noted that storage rules can use the number of generations e.g. the previous four generations and or a particular timeframe e.g. only the previous three weeks in determining how much raw data for a particular data field should be stored. For situations where more generations longer time frames are needed for a particular data field a multi resolution scheme can be used. In other words the storage can store only every k events transactions where k varies based on the recency of the transactions events.

Storage rules dictate how far back in history should data be stored. The history can be at different levels such as at the transaction level or at another level such as at an individual field level. As an illustration for an authorization the system may receive an authorization amount a merchant identifier and a date time stamp. The system might decide that it does not need the same history for all these different pieces of data so the system based upon the storage rules stores the past ten transaction amounts but only the previous five merchant identifiers. Thus the buffered lengths for the different data types could vary. Even the same field e.g. the date time stamp field for two different transaction types may have different storage rules. For example for one type of transaction five generations of date time stamps may be needed but for another type of transaction eight generations may need to be stored.

Signatures can be used within the system in order to help store detailed unaltered history of the account entity. The signatures provide a complete picture of the account allowing on demand scoring and not just transaction triggered scoring. The signature allows real time use of variables which depend upon detailed information for a number of previous transactions for example distances e.g. Mahalanobis distances between recent and past transactions.

Signatures may look different for one person versus another person. For example for a particular type of information fifteen generations of information might be stored for a first person whereas only six generations of the same type of information for a second person might be stored. This could occur for example if the first person utilizes their card many more times per month than the second person.

Signature records can be retrieved for one or more entities depending upon which entities need to be scored as well as which signature records are needed for scoring a particular entity. For example a scoring process may be configured to score a credit card holder s account only by utilizing the one or more signature records associated with that credit card holder. However another scoring process could be configured to score a credit card holder s account based not only upon that entity s signature records but also based upon one or more other entities signature records e.g. a merchant or terminal ID signature record .

The systems and methods can also include a financial transaction record matching system for processing financial transaction data records received over a network or other source as shown for example at in . In a financial transaction record matching system processes data records from both a database which stores authorized transaction data records and a database which stores fraudulent transaction data records. The financial transaction record matching system attempts to match data records between the two databases .

Data records in the authorized transaction database represent financial transactions which have been authorized by a financial institution. Data records in the fraudulent transaction database represent financial transactions which have been indicated as fraudulent financial transactions. The types of transactions which the system may handle can include a wide variety of financial transactions such as credit card transactions.

Additionally the data records in the databases can be stored at different times thereby increasing the difficulty of identifying matching records between the databases. For example a transaction may be authorized in real time with respect to when the transaction was occurring and within that time period the authorized database can be updated to reflect the authorization of the financial transaction. In contrast the determination and storage of whether a financial transaction is fraudulent may not occur until much later on in the process.

Another financial transaction business rule can include examining the type of transaction involved. For example the transaction type may dictate what type of payment difference is acceptable for indicating how similar two data records are. If the type of transaction is a retail purchase type of transaction then the transaction type rule may specify that there should be no difference in payment amounts for determining whether two data records should be matched. However if the type of transaction is a restaurant type of transaction then the transaction type rule may specify what an acceptable amount of difference in payment amounts can be for determining whether two data records may be a match. In the restaurant context the acceptable amount of difference can be set to recognize that a tip may have been added after the transaction has been authorized. For example an acceptable amount of difference could be a 20 difference in the payment amounts because a tip has been added. It should be noted that that payment amounts may differ in other contexts e.g. specific types of retail purchases payment of a hotel bill etc. such as when a transaction involves currency exchange rate calculations. Additionally financial transaction business rules can examine whether transaction dates associated with the authorized transaction data record and the fraud data record are within an acceptable pre specified time period e.g. the dates are not too distant from one another .

The matched records can be used for many different purposes. For example the matched records can define time periods within which fraudulent activity has occurred. With the matching more specific time periods of fraudulent activity can be ascertained such as whether the fraudulent activity time period is less than one day in duration is less than four hours in duration etc. As another example the matching results can be used by one or more fraud analysis predictive models for predicting in a production environment whether an entity has been compromised such as in a test merchant fraud situation. In this type of approach the matched records can be used by the one or more fraud analysis predictive models e.g. neural network models decision tree models linear regression models etc. for predicting whether fraud has occurred with respect to subsequent financial transactions that are received by the fraud detection system.

Different approaches can be used to create the associations between the records. For example as shown at in a bi partite graph analysis can facilitate which record should be associated with another in order to generate a set of matched financial data records. In a bi partite graph is shown at which has been generated for selecting matches between the authorized transaction data records and the fraud data records. In the bi partite graph a first set of nodes represents the authorized transaction data records and a second set of nodes in the bi partite graph represents the fraud data records. The edges of the bi partite graph connect nodes e.g. which represent authorized transactions contained within the first set with nodes e.g. which represent fraudulent transactions contained within the second set and values are associated with the edges based upon the determined matching scores. An optimal solution can be determined at for the bi partite graph based upon the edge values and is used to specify which authorized transaction data records are associated with which fraud data records.

A greedy algorithm can be used by making by making the sum of weights the locally optimal choice at each iteration with the goal of finding the global optimum. For example a greedy algorithm can find the minimum distance and shortest path in the weighted bi partite graph from a given node and use that as a local optimum. Still further the optimal solution can involve the following 

As another example a system for online identification and characterization of fraud episodes can be provided within a transactional data stream using fraud information from a source generally different from that of the transactional data stream is desired. A fraud episode for a given card is the collection of all attempted transactions on that card that occur at or after the time of occurrence of the first fraudulent transaction on that card.

In this example there exist two classes of data A set of records describing authorization requests A set of records describing fraudulent transactions. The sources of these two sets of data are generally dissimilar so the domain of the elements is generally different amongst them.

The system in this example allows for a mapping from the set of records describing fraudulent transactions to the set of records describing authorization requests. If A is the set describing authorization requests and F is the set describing fraudulent transactions then let A and F denote these respectively with NULL appended to each. In that case the desired objective is a mapping M A F such that for a A and f F M a f implies that the authorization request described by a was generated by the fraudulent transaction described by f. It is additionally required that each fraudulent transaction can be matched with at most one authorization and each authorization can be matched with at most one fraudulent transaction.

Such a mapping provides information regarding the nature and time of start of the fraud episode and particularly which of the authorization requests were generated by fraudulent transactions.

As illustrated in a graph framework is imposed upon the data such that the data is represented by what is called a weighted bipartite graph. The elements of the set A constitute an independent set of vertices while the elements of the set F constitute another. The existence and weighting on edges between these independent sets of vertices correspond to a similarity metric between the represented records.

From this graph representation a matching is derived. This matching corresponds to the desired mapping M. A similarity metric S A FX where Xis a scalar numerical domain with the addition of NULL is computed. Given a A and f F S a f corresponds to the likelihood that the authorization request represented by a was generated by the attempted fraudulent transaction represented by f.

Design of such a similarity metric recognizes that the domain of the elements in A and that of the elements in F are generally different and each is a mixture of numerical lexical categorical and ordinal dimensions. Two comparable subspaces are constructed one from the domain of the elements of A and one from that of the elements of F. This construction is dependent on the nature of the particular data and sources thereof and on heuristics based upon a priori information and expertise.

The scalar similarity measure between a A and f F is computed as an inner product from the respective projections of a and f onto these comparable subspaces.

The precise nature of S is dependent upon the nature of the particular data. The comparable subspaces into which elements of A and F are projected as described below are denoted as Aand F.

Generally existing a priori information and expertise will suggest that some subspaces of Aand Fare more relevant to matching than others. Examples include 

With respect to scaling considerations for dissimilar variable domains Aand Fare generally mixed domains composed of numerical lexical categorical and ordinal dimensions over which the data have generally non stationary and different distributions. For example transactional velocity may be higher during certain periods of time.

Moreover the strength of the implication on overall similarity by proximity in one particular dimension is generally non stationary and generally different from that by proximity in some other dimension.

These items suggest that proximity information from each dimension be dynamically normalized in some sense against its respective empirical distribution before being combined across dimensions into a scalar quantity. This normalization ought not reshape the empirical distribution over a single dimension rather ought to equalize the scales of the empirical distributions across dimensions so that the weighting in the inner product calculation constructed from a priori information and expertise is not superseded by generally intractable temporal or inter dimensional variations in scales of proximity that may be inherent in the data.

In order to construct the matching the data is encoded as a weighted bipartite graph and then a matching algorithm is executed on the resulting graph. Each of the sets A and F are represented as an independent set of vertices also denoted as A and F respectively for ease of notation. These two sets of vertices fully constitute the set of vertices of the graph. For a A and f F if S a f NULL then there exists an edge between a and f with weight equal to S a f . These edges fully constitute the set of edges of the graph.

The matching procedure involves the construction of a matching M such that the total weight of the matching that is S a M a is maximized.

With respect to levels of measurement for the similarity metric since the nature of the similarity metric is dependent upon the nature of the particular data and may be based upon ad hoc heuristics and other subjective considerations it may be difficult to maintain a tractable interval scale of measurement for it.

This indicates that a matching algorithm that operates with the assumption of only an ordinal level of measurement on the similarity metric may be more robust than one that is sensitive to scaling at an interval level of measurement.

It may be difficult to affirm that a similarity measure of x E is as much better than x as that of x is than x E. Only taking into account that x E is better than x which in turn is better than x E may yield a more robust procedure.

Depending on the nature of the particular data a greedy approach may yield a sufficiently sound matching. The greedy approach described below possesses the desirable quality of being insensitive to variations in scaling at an interval level of the similarity metric as it assumes only an ordinal scale.

Algorithms for the construction of a matching in a bipartite graph guaranteed to be a matching of optimal weight can be used. Optimality in this sense by nature assumes an interval level of measurement on the constituent quantities of the objective which in the present case are the values of the similarity metric that are used as weights on the edges of the graph. It has been described herein that only an ordinal level of measurement be assumed on the similarity metric S and thus in the present context this notion of optimality loses meaning.

Additionally the greedy approach is more straight forward in comparison to existing algorithms for matching in bipartite graphs that are guaranteed to construct an optimal matching but are significantly more computationally complex. Since the matching is performed in near real time computational economy is considered.

The essential modus operandi of the greedy method described herein is to sequentially select the most similar pair and add it to the matching. This is outlined in the following pseudo code 

As an illustration illustrates that fraud types can be grouped into multiple categories. In the table of four fraud grouping categories have been coded as 10 20 30 and 40. Each code indicates a particular grouping of one or more fraud types which in this operational scenario include a mail order telephone order MOTO fraud grouping category code 10 a first party fraud grouping category code 20 a counterfeit fraud grouping category code 30 and a lost and stolen fraud grouping category code 40 .

One or more fraud types can be included in each of the fraud grouping categories. In the table of fraud categories 10 and 30 are associated with one type of fraud. Fraud category 10 is associated with mail order MO type of fraud while fraud category 30 is associated with the counterfeit CO type of fraud. Fraud categories 20 and 40 are associated with multiple types of fraud. Fraud category 20 is associated with fraud application take over and non received FA TK and NR fraud types while fraud category 40 is associated with lost LT and stolen ST fraud types.

With reference back to once the fraud type is grouped into different categories step constructs a fraud category predictor. A fraud category predictor can comprise a set of analytic models to estimate the likelihood of each fraud category. For example a fraud category predictor can be a multinominal logistics model wherein the model to be fit is 

High scoring fraud transactions e.g. transactions whose score indicate a high likelihood of fraud are used to build the above model. Variables are derived to capture information that is indicative of potential fraud category such as 

Various known variable selection techniques can be used to select a reasonable sized set of variables for the training the fraud category predictor. After selecting a reference category the multinominal logistic model can be built using different types of logistic procedure such the SAS proc logistic procedure with GLOGIT link function and stepwise variable selection.

Although this model may be built using fraud transactions it can be used to score all suspect transactions in production. Hence analyses can be performed to understand how the model behaves on non fraud cases.

At step an operation reason code module is constructed for production. Based on the fraud category predictor built in step the operation reason code module is created to be deployed at step into a fraud detection production system and become a part of the scoring engine. This module is comprised with functions to 

For interpreting operation reason codes each of these four digit numbers can be composed with two parts the first two bytes indicate the fraud category and the second two bytes indicate the likelihood of the given transaction belong to such category if the transaction is indeed fraudulent. The most likely category is populated in the first operation reason and the second most likely category is populated in the next slot and so on. As an illustration three operation reason codes 1080 4013 and 3005 in production would mean if the case is indeed fraud 

The operation reason code module constructed in step is incorporated at step into the scoring engine in production. It is added after the scoring module. When the score of a given transaction is above a certain threshold the operation reason code module is executed to generate three operation reason codes. The users can create rules to route the suspect alerts to different investigation queues based on these operation reasons. For example a scenario could involve the following 

The operation reason code approaches disclosed herein can be further extended as follows. The fraud score informs users what transactions are suspicious whereas the operation reason codes inform the users how to deal with these suspicious transactions. The operation reason codes provide information to the users in selecting the appropriate actions on the suspicious cases. The providing of information to the user on what to do along with an analytic score can be used in other context beyond credit card fraud application. For example in the setting of the collection a collection score tells who is to be collected from and the operation reason codes provide information on the potential actions to maximize return.

While examples have been used to disclose the invention including the best mode and also to enable any person skilled in the art to make and use the invention the patentable scope of the invention is defined by claims and may include other examples that occur to those skilled in the art. For example with respect to dynamic summarization a generated summarization can include country code information postal code latitude and longitude geo location information and terminal information. As another example the generated summarization can include addresses mobile device identifications or other items represented by data in the transactions.

It is noted that the systems and methods may be implemented on various types of computer architectures such as for example on a single general purpose computer or workstation or on a networked system or in a client server configuration or in an application service provider configuration.

It is further noted that the systems and methods may include data signals conveyed via networks e.g. local area network wide area network internet etc. fiber optic medium carrier waves wireless networks etc. for communication with one or more data processing devices. The data signals can carry any or all of the data disclosed herein that is provided to or from a device.

Additionally the methods and systems described herein may be implemented on many different types of processing devices by program code comprising program instructions that are executable by the device processing subsystem. The software program instructions may include source code object code machine code or any other stored data that is operable to cause a processing system to perform methods described herein. Other implementations may also be used however such as firmware or even appropriately designed hardware configured to carry out the methods and systems described herein.

The systems and methods data e.g. associations mappings etc. may be stored and implemented in one or more different types of computer implemented ways such as different types of storage devices and programming constructs e.g. data stores RAM ROM Flash memory flat files databases programming data structures programming variables IF THEN or similar type statement constructs etc. . It is noted that data structures describe formats for use in organizing and storing data in databases programs memory or other computer readable media for use by a computer program.

The systems and methods may be provided on many different types of computer readable media including computer storage mechanisms e.g. CD ROM diskette RAM flash memory computer s hard drive etc. that contain instructions for use in execution by a processor to perform the methods operations and implement the systems described herein.

The computer components software modules functions data stores and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. It is also noted that a module or processor includes but is not limited to a unit of code that performs a software operation and can be implemented for example as a subroutine unit of code or as a software function unit of code or as an object as in an object oriented paradigm or as an applet or in a computer script language or as another type of computer code. The software components and or functionality may be located on a single computer or distributed across multiple computers depending upon the situation at hand.

It should be understood that as used in the description herein and throughout the claims that follow the meaning of a an and the includes plural reference unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise. Finally as used in the description herein and throughout the claims that follow the meanings of and and or include both the conjunctive and disjunctive and may be used interchangeably unless the context expressly dictates otherwise the phrase exclusive or may be used to indicate situation where only the disjunctive meaning may apply.

