---

title: Communicating using a cloud infrastructure
abstract: A cloud infrastructure that communicates with computing devices is provided. The computing devices install filters on other computing devices that they wish to receive items from including pictures, messages, and documents. The filters include criteria that are evaluated on the computing devices, rather than at a server, to determine if an item may be sent to another computing device. The computing devices may then send items that match the criteria to the cloud infrastructure, and the items may be stored and queued for delivery to other computing devices. The items may be encrypted before being provided to the cloud infrastructure, and decrypted when received by the computing devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08701155&OS=08701155&RS=08701155
owner: Microsoft Corporation
number: 08701155
owner_city: Redmond
owner_country: US
publication_date: 20100614
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 61 306 987 filed on Feb. 23 2010 the contents of which are hereby incorporated in their entirety.

Mobile devices connected to 3G networks are enabling new and diverse applications. One class of application consists of data sharing services where data generated by a device e.g. location updates photos video clips and real time feeds is shared with other devices based on specific policies. These policies are usually based on the generated content for example a tourist backpacking through Europe with a smart phone may want to broadcast her location to friends who live nearby e.g. location sharing receive messages that mention her name share videos that her family wants to see or even receive a feed from her home s security camera if it detects movement.

Currently such services are structured as client server applications within a cloud computing infrastructure. Cloud computing is Internet based computing whereby shared resources software and information are provided to computers and other devices on demand. The majority of cloud computing infrastructure comprises reliable services delivered through data centers and built on servers. Clouds often appear as single points of access for users computing needs. Data generated by a device is uploaded via 3G to a central server which provides it selectively to other devices. The centralized approach allows data to be uploaded just once by a sender for multiple recipients without requiring any of them to be online at the time. As an additional benefit client server applications do not require inbound connections into devices allowing ISPs Internet service providers to provide greater security by blocking such connections.

However the centralized approach can be inefficient if devices generate substantial data that few devices wish to receive. In the example of a location sharing application the device will continually upload its location to the cloud even if nobody lives nearby wasting network resources and battery life in the process. Also with respect to privacy users expose the data to application servers and the third party cloud providers hosting them and potentially even to other customers of the same cloud. Since the centralized server of the cloud has to apply sharing policies on the data simple encryption is not a viable solution.

A cloud infrastructure that communicates with a plurality of computing devices e.g. mobile devices is provided. The computing devices install filters on other computing devices that they wish to receive items from including pictures messages and documents. The filters include criteria that are evaluated on the computing devices rather than at a server to determine if an item may be sent to another computing device. The computing devices may then send items that match the criteria to the cloud infrastructure and the items may be stored and queued for delivery to other computing devices. The items may be encrypted before being provided to the cloud infrastructure and decrypted when received by the computing devices.

In an implementation a filter is received from a cloud infrastructure by a first computing device through a network. The filter has associated criteria and is associated with a second computing device. An item is generated by the first computing device. It is determined by the first computing device whether the generated item satisfies the associated criteria of the filter and if so the generated item is provided by the first computing device to a cloud infrastructure for delivery to the second computing device.

Implementations may include some or all of the following features. The generated item may be encrypted using a channel key. A list of computing devices trusted by the first computing device may be published to the cloud infrastructure by the first computing device. A filter may be received from the second computing device for delivery to the first computing device by the cloud infrastructure. It is determined if the second computing device is on the list of computing devices trusted by the first computing device and if so the filter may be provided to the first computing device by the cloud infrastructure. The generated item may be received at the cloud infrastructure and the generated item may be associated with a queue corresponding to the second computing device. The generated item may be stored in a cache by the cloud infrastructure. A request may be received at the cloud infrastructure from the second computing device for any items associated with the queue corresponding to the second computing device. Any items associated with the queue corresponding to the second computing device may be determined by the cloud infrastructure. The determined items may be retrieved from the cache by the cloud infrastructure and the determined items may be provided to the second computing device from the cache by the cloud infrastructure. The items may be associated with an expiration date. An item may comprise at least one of video data audio data or image data. One or more of the computing devices may be mobile phones. The item may be associated with a version number.

This summary is provided to introduce a selection of concepts in a simplified form that is further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The computing devices . . . may be implemented using a variety of computing devices. For example in some implementations the computing device may be wireless computing device such as a cellular or mobile telephone personal digital assistant PDA or a smart phone. Other types of computing devices may be used such as laptop computers desktop computers videogame consoles and tablet computers. An example computing device is described with respect to the computing device of for example. While only computing devices and are shown it is for illustrative purposes only it is contemplated that any number of computing devices may be supported by the system . Moreover while only the computing device is shown as having one or more components it is for illustrative purposes only each of the computing devices . . . may also have one or more of the components shown for the computing device . In some implementations each computing device may have an associated device identifier.

Each computing device may generate one or more items such as an item . An item may include any of a variety of known data types and structures. The items may include video data e.g. video clips in a variety of video formats image data e.g. photographs and other art in a variety of image formats audio data e.g. music and other recordings in a variety of audio formats and document data e.g. word processing documents email and instant messages in a variety of text and document formats . Any type of data may be generated. In some implementations each item may have an associated item identifier a version number and an expiration date for example.

A computing device such as the computing device for example may execute one or more applications . An application may generate and or use the item or multiple items. Examples of applications may include instant messaging applications social networking applications email applications word processing applications and digital photography applications. There is no limit to the number or types of applications that the computing device may execute. While only one application is shown it is for illustrative purposes only multiple applications may be executed by the computing device. In some implementations each application may have an associated application identifier.

An item may be implemented using a data structure that includes a payload portion and a metadata portion. The payload portion may include the data that is generated by the application such as the video data or the audio data. The metadata portion may include one or more tags that describe the payload data. For example the metadata may include the identifier of the application that generated the data the identifier of the computing device that executed the application that generated the data a location associated with the data e.g. GPS global positioning system coordinates of the computing device a version number for the item and or an expiration date . There is no limit to the type of metadata or tags that may be associated with the metadata portion.

The computing device may communicate with the other computing devices and through the cloud infrastructure . The cloud infrastructure may be implemented using a server or multiple servers. The server may be implemented using multiple computing devices such as a computing device illustrated in . The servers that make up or otherwise comprise the cloud infrastructure may be located in a variety of geographic locations and may each provide a variety of services to the computing devices . . . . The cloud infrastructure may be implemented using a variety of cloud platforms including Microsoft WINDOWS AZURE Google APP ENGINE and Amazon ELASTIC COMPUTE CLOUD EC2 . Other cloud platforms may also be used.

The cloud infrastructure may comprise a gateway component a processing component and a storage component . The gateway component may interface with the computing devices . . . through the network . Accordingly data sent between the computing devices . . . and the cloud infrastructure may pass through the gateway component .

The processing component may process data received from the gateway component . The processing performed by the processing component may correspond to one or more services provided to the computing devices . . . by the cloud infrastructure .

The storage component may store data such as items generated by the processing component and or received from the gateway component . The storage component may include a cache that may be used to store each item . The storage component may further maintain a queue or multiple queues corresponding to each of the computing devices . . . . The items received for a computing device may be associated with a queue corresponding to the computing device by the storage component . Each queue may correspond to a device identifier associated with a computing device for example.

A computing device such as the computing device may interface with the cloud infrastructure through a client component . In particular the client component may expose an interface such as an API application programming interface that an application executing on the computing device may use to send and receive data to the cloud infrastructure . For example an application may transmit data to the cloud infrastructure using a publish function exposed by the client component . An application may similarly receive data from the cloud infrastructure using a receive function exposed by the client component . Other functions may be supported and or exposed by the client component .

In some implementations the client component at the computing device may communicate with the cloud infrastructure using an upload component a push component and or a pull component . The computing device may use the upload component to provide data such as the item to the cloud infrastructure . For example the application may generate an item and call the publish function. In response to the publish function the client component may retrieve the item and use the upload component to establish a connection with the cloud infrastructure and provide the item to the cloud infrastructure . Alternatively the upload component may determine when some threshold number of items are waiting to be provided to the cloud infrastructure and may establish a connection with the cloud infrastructure when the threshold has been reached. Such a configuration may help preserve battery life because the number of connections to the cloud infrastructure is reduced but increases latency because items may not be provided to the cloud infrastructure until the threshold number of items is reached for example.

The computing device may use the push component and or the pull component to download data such as an item from the cloud infrastructure . For example the client component may periodically use the pull component to check for available items at the cloud infrastructure and if so establish a connection with the cloud infrastructure and receive the available item s . The client component may then distribute the item s to one or more applications depending on an application identifier associated with the item s .

In some implementations the pull component may periodically connect to the cloud infrastructure for some threshold amount of time before disconnecting. Any items that become available at the cloud infrastructure for the computing device during the duration of the threshold time may be pushed to the device. In this configuration the cloud infrastructure pushes the data to one or more of the computing devices immediately upon the data arriving at the cloud. Thus as soon as the data arrives at the cloud the cloud sends the data to one or more of the computing devices. It is contemplated that aspects of push and pull may be used in an implementation to download data from the cloud to one or more of the computing devices. Although the push component and the pull component are shown in as disposed within the computing device a push component and a pull component may also be comprised within the cloud infrastructure depending on the implementation.

In some implementations the frequency i.e. polling frequency with which the client component has the pull component check for available documents may be set by the application . For example if the application is an instant messaging application items may be received from the cloud infrastructure in near real time and therefore the pull component may continuously check for available items . If the application is a lower priority application e.g. a photo sharing application the application may have the pull component check the cloud infrastructure for available photos less frequently e.g. every five minutes every ten minutes etc. . Other polling frequencies may also be used. Some applications may use the above push configuration to get more real time and faster delivery of items. Thus polling interval is one parameter and the threshold time before disconnecting with the cloud is another parameter for example.

The client component may send items generated by the application to the cloud infrastructure according to what are referred to herein as filters. A filter may comprise a set of rules or criteria that describe the types of items that a user or particular application associated with a computing device such as the computing device would like to receive. For example a user of a photo sharing application at the computing device may wish to receive photos taken by their father. The father may be a user of the computing device . Accordingly the user may generate a filter whose criteria include all or only for example photos generated by their father at the computing device for example.

The client component of the computing device may provide generated filters to the cloud infrastructure for delivery and installation on other computing devices. Continuing the example described above the user of the photo sharing application of the computing device may provide a filter whose criteria is all photos generated by the user s father to the cloud infrastructure for installation on the computing device associated with the user s father. The next time a push component or a pull component of the computing device requests data from the cloud infrastructure the filter may be provided and installed on the computing device

In some implementations a filter may be installed on a computing device such as the computing device by storing the filter in a filter storage . When an item is generated by an application the client component may determine if the generated item satisfies the criteria associated with any of the filters in the filter storage . If the generated item satisfies any of the criteria of the filters in the filter storage then the client component may use the upload component to provide the generated item to the cloud infrastructure . The cloud infrastructure may then provide the item to the computing devices associated with the filters having the satisfied criteria.

The client component may provide security for generated items using encryption. In some implementations each computing device may receive a key pair consisting of both a public and private key component. In addition each computing device . . . may receive the public key of other computing devices. For example when a client component of the computing device provides an item for delivery to the cloud infrastructure the client component may encrypt the item using the public key of the computing device so that the computing device can decrypt it using its private key. In addition the client component may append a digital signature associated with the computing device to the item so that the item may be validated by the receiving computing device using the public key of the computing device

In some implementations the client component may generate what is referred to herein as a channel key for an item . The channel key may be generated by the computing device and encrypted using the public keys of the computing devices and or whichever computing device that the computing device intends to communicate with before the channel key is provided to the cloud infrastructure . The computing devices and may then learn the channel key by receiving it from the cloud infrastructure and decrypt it with their respective private keys. The computing devices and may then encrypt items using the channel key .

In some implementations the client components of the computing devices may communicate with one another using what is referred to herein as messages. A message may include the identifier of the computing device and or application that originated the message an identifier or identifiers of one or more of the computing devices or that are to receive the message and a message payload for example. When a message is received by the cloud infrastructure the message may be associated with the queues corresponding to the identifiers of the computing devices and that are to receive the message and the message may be stored in the cache for example.

In some implementations the message may include a filter message an item message and or a key distribution message. A filter message may have a payload that includes a filter and may be used to install filters on one or more of the computing devices . . . . An item message may have a payload that includes an item . A key distribution message may have a payload that includes a channel key that can be used to decrypt a forthcoming item in an item message. Other types of messages may be used.

In some implementations the messages may include expiration times. An expiration time may specify a time after which the message may not be delivered by the cloud infrastructure . When the cloud infrastructure retrieves messages associated with a queue for delivery to one of computing devices . . . the processing component may determine if an expiration date associated with each message has expired. The processing component may then delete messages with dates that have expired i.e. expired expiration dates .

For example a user of a computing device may generate a message to their friends using a social networking application which asks if any of them are available for dinner. Because of the immediate temporal nature of the request the user may specify that the message expires after 12 hours. After sending the message to the cloud infrastructure the message is associated with the queue corresponding to the computing devices and i.e. the computing devices associated with the friends . One hour later the user of the computing device requests messages from the cloud infrastructure and is provided the message because it has not yet expired. 13 hours later the user of the computing device requests messages from the cloud infrastructure and is not provided the message because it has expired.

As described above the computing devices . . . are able to receive items generated by other users by installing filters on the computing devices of the users whose items they wish to receive. For example if a user of the computing device wishes to receive items from a user associated with the computing device the user of the computing device may install a filter on the computing device

Thus it is determined on the computing devices . . . themselves whether or not a generated item may be provided to other users using other computing devices rather than at the cloud infrastructure or at another centralized location. In this manner in an implementation a generated item is only provided to the cloud infrastructure if it matches the criteria of a filter thereby avoiding performing the evaluation at the server resulting in a saving of bandwidth and processing resources for example. Moreover because the evaluation of an item is performed at one of the computing devices . . . the item may be encrypted before it is provided to the cloud infrastructure . The cloud infrastructure does not need to decrypt the item thereby reducing privacy concerns for the users.

To further protect the privacy of users the cloud infrastructure may allow users of computing devices . . . to publish or provide lists of users or other computing devices that are trusted e.g. a list of trusted computing devices . The list s of trusted computing devices may be maintained by the processing component of the cloud infrastructure and may be used to prevent unauthorized devices from providing filters or from providing messages that include filters. For example a user of the computing device may provide a list of trusted computing devices to the cloud infrastructure . The list of trusted computing devices may include the computing device but not the computing device . At a later time a user of the computing device may provide a filter for installation on the computing device to the cloud infrastructure . Before sending the filter to the computing device the processing component of the cloud infrastructure may use the list of trusted computing devices associated with the computing device to determine that the computing device is trusted. After determining that the computing device is trusted the filter may be provided to the computing device

Similarly a user of the computing device may provide a filter for installation on the computing device to the cloud infrastructure . Before sending the filter to the computing device the processing component of the cloud infrastructure may use the list of trusted computing devices associated with the computing device to determine that the computing device is not trusted. After determining that the computing device is not trusted the processing component may discard the filter and or provide a message e.g. an error message to the computing device

In some implementations a user of a computing device may want to receive items from a subset of their friends. For example a user of the computing device may want to receive photographs taken by their friends. The friends may be associated with the computing devices and . The user via the computing device may generate a filter for each of their friends in the subset and provide each generated filter to the cloud infrastructure for distribution and installation on each of the computing devices and associated with the user s friends. As may be appreciated if a user has many friends generating and providing each message to install each filter may be time and bandwidth consuming. Moreover if the user meets new friends at a later time new filters may be generated for the new friends before the user can receive photographs taken by the new friends.

To allow for a more efficient filter installation among groups of friends the processing component of the cloud infrastructure may support what is referred to herein as a group. A group may comprise a list of one or more computing devices . . . and may correspond to friends in a social networking application or an email distribution list for example. The group may include one or more device identifiers associated with the one or more computing devices . . . in the group.

Continuing the example described above to use a group a user of the computing device may generate a filter but rather than associate the filter with each of the computing devices and the user may associate the filter with a group and provide the filter to the cloud infrastructure in a message . The processing component of the cloud infrastructure may receive the filter in the message and distribute the filter to each computing device that is part of the group i.e. computing devices and .

In some implementations the members of a group may be dynamic. For example a user of the computing device may create a group that includes their friends who are currently located in California. The locations of the users may be determined by a GPS or other location determining means associated with those users computing devices. Thus for example if the computing device moves in and out of California it may be added or removed from the group dynamically by the processing component .

Because of the stateless nature of the cloud infrastructure it may be difficult for a computing device such as the computing device to determine if a message associated with an item has been received. To provide for stronger reliability guarantees the computing device may further install filters on other computing devices such as the computing devices and which match positive or negative acknowledgment messages generated by an application . Generated acknowledgment messages that match the installed filters may be forwarded by the client component to the cloud infrastructure for delivery. If a threshold amount of time passes before an acknowledgement message is received after a client component provides a generated message to the cloud infrastructure the client component may resend the generated message to the cloud infrastructure .

Alternatively or additionally rather than resend the generated message to the cloud infrastructure the client component may instruct the cloud infrastructure to retrieve the message from its cache and resend the message from the cache . By instructing the cloud infrastructure to resend the message from the cache bandwidth is saved because the original message is only transmitted one time to the cloud infrastructure .

As may be appreciated because of the transient and intermittent nature of mobile computing devices a computing device may not request messages from the cloud infrastructure for an extended period of time. For example the computing device may send a message to the computing device . The computing device may not request messages from the cloud infrastructure for an extended period of time. In implementations that use the acknowledgement messages described above not requesting messages from the cloud infrastructure may be interpreted by the computing device as a message failure resulting in the unnecessary resending of messages by the cloud infrastructure . Accordingly when the cloud infrastructure receives a request to resend a previously sent message from the cache the processing component may first determine if the computing device has requested messages since the last message was generated and if not may inform the computing device that the message has not been requested yet by the computing device

As described above expiration dates may be associated with each message . Therefore computing devices that infrequently connect to the cloud infrastructure may not receive messages that are stale nor no longer relevant. In another implementation the messages or the items included the messages may further be associated with version numbers. The processing component may then only provide messages or items to a computing device that has a latest or most recent version number.

For example a user of the computing device and a user of the computing device may be collaborating using an application such as a word processing application. The user of the computing device may generate a latest version of a document and the client component may send it to the cloud infrastructure for delivery to the computing device according to a filter . Before the computing device may request messages from the cloud infrastructure the user of the computing device may generate an updated version of the document and the client component may send it to the cloud infrastructure for delivery to the computing device according to the filter . When the computing device requests messages from the cloud infrastructure the processing component may determine that there are two versions of the same document in the queue corresponding to the computing device and may only provide the document having the most recent version number to the computing device

A list of trusted computing devices is provided at . The list of trusted computing devices may be provided by a client component of the computing device to the cloud infrastructure . In some implementations the list of trusted computing devices may be a list of computing devices such the computing devices and that the computing device may receive filters from. The list of trusted computing devices may correspond to a list of friends in a social networking application for example. The cloud infrastructure may only provide filters to the computing device that originate from the computing devices and on the list of trusted computing devices.

A filter is received at . The filter may be received by the push component or the pull component of the computing device . The filter may be passed to the client component and stored in the filter storage . The filter may be associated with one or more other computing devices such as the computing device and may include one or more criteria. The criteria may specify rules or conditions that may be met by an item for the item to be provided to the computing device that is associated with the filter .

At some point an item is generated at . The item may be generated by an application of the computing device . The item may comprise any of a variety of data types and or data structures such as video data audio data and document data. For example the application may be an instant messaging application and the item may be an instant message. In some implementations the item may have a version number and or an expiration date .

A determination is made as to whether the item satisfies the criteria associated with the filter at . The determination may be made by the client component . In some implementations the filter criteria may comprise a Boolean equation that takes as an input one or more of the metadata associated with the item . For example the filter criteria may be all items that are photos that have a location equal to New York . If the item satisfies the filter criteria then the method may continue at . Otherwise the method may exit at .

The item is encrypted at . The item may be encrypted by the client component of the computing device . In some implementations the item may be encrypted using a channel key that is generated by the client component and subsequently encrypted using the public key associated with computing device that will receive item . The receiving computing device can then learn the channel key by decrypting it using its public key.

The encrypted item is provided at . In an implementation the encrypted item may be provided to the cloud infrastructure by the upload component of the computing device

A filter is generated at . The filter may be generated by the client component and or the application of the computing device . The filter may have one or more criteria for items that are to be delivered to the computing device . For example a user of an application such as a social networking application may wish to receive status updates of a friend. Accordingly the user may use the social networking application to generate a filter that may be installed on the computing device associated with their friend having a criteria that is met by each item that is a status update.

The generated filter is provided at . The generated filter may be provided by the upload component of the computing device to the cloud infrastructure . In some implementations the cloud infrastructure may provide the generated filter to the push component or the pull component of the computing device the next time the computing device requests an item from the cloud infrastructure . The generated filter may be provided in a message .

At some point a request to receive an item is provided at . The request to receive an item may be provided by the pull component of the computing device to the cloud infrastructure . The pull component may provide the request on behalf of the client component or based on a predetermined polling frequency for example. The cloud infrastructure in response to receiving the request may retrieve each message including items filters and keys associated with a queue corresponding to the computing device at the cloud infrastructure .

An item is received at . The item may be received by the pull component of the computing device . The received item may be provided to the client component of the computing device . The item may be provided in a message .

The item is decrypted at . The item may be decrypted by the client component using a private key associated with the computing device . In some implementations the item may be decrypted using a channel key that was generated by the computing device that generated the received item . The channel key may have been received by the client component in a message .

An item is received at . The item may be received by a gateway component of a cloud infrastructure . The item may have been generated by an application of the computing device and may have been provided to the cloud infrastructure because it satisfied the criteria of a filter installed by the computing device . The item may be received by the gateway component in a message that identifies the computing device

The item is associated with a queue at . The item may be associated with a queue by the processing component of the cloud infrastructure . The queue may be a queue that corresponds to the computing device

The item is stored in a cache at . The item may be stored by the storage component of the cloud infrastructure .

A request for items associated with the queue is received at . The request may be received by the gateway component of the cloud infrastructure . The request may be received from the pull component of the computing device

Items associated with the queue are retrieved from the cache at . The items may be retrieved from the cache by the storage component of the cloud infrastructure . The retrieved items may include the received item and any other items or messages that were associated with the queue since the last time items were requested by the pull component of the computing device

In some implementations expiration dates associated with one or more of the items may be determined and only items with expiration dates that have not yet expired may be retrieved. Items having expired expiration dates may be deleted.

The retrieved items are provided at . The retrieved items are provided to the pull component of the computing device by the gateway component of the cloud infrastructure .

Numerous other general purpose or special purpose computing system environments or configurations may be used. Examples of well known computing systems environments and or configurations that may be suitable for use include but are not limited to personal computers PCs server computers handheld or laptop devices multiprocessor systems microprocessor based systems network PCs minicomputers mainframe computers embedded systems distributed computing environments that include any of the above systems or devices and the like.

Computer executable instructions such as program modules being executed by a computer may be used. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Distributed computing environments may be used where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules and other data may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing aspects described herein includes a computing device such as computing device . In its most basic configuration computing device typically includes at least one processing unit and memory . Depending on the exact configuration and type of computing device memory may be volatile such as random access memory RAM non volatile such as read only memory ROM flash memory etc. or some combination of the two. This most basic configuration is illustrated in by dashed line .

Computing device may have additional features functionality. For example computing device may include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage .

Computing device typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by device and includes both volatile and non volatile media removable and non removable media.

Computer storage media include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media include but are not limited to RAM ROM electrically erasable program read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of computing device .

Computing device may contain communications connection s that allow the device to communicate with other devices. Computing device may also have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. All these devices are well known in the art and need not be discussed at length here.

It should be understood that the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the presently disclosed subject matter or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium where when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the presently disclosed subject matter.

Although exemplary implementations may refer to utilizing aspects of the presently disclosed subject matter in the context of one or more stand alone computer systems the subject matter is not so limited but rather may be implemented in connection with any computing environment such as a network or distributed computing environment. Still further aspects of the presently disclosed subject matter may be implemented in or across a plurality of processing chips or devices and storage may similarly be effected across a plurality of devices. Such devices might include personal computers network servers and handheld devices for example.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

