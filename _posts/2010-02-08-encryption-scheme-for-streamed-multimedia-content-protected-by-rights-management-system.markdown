---

title: Encryption scheme for streamed multimedia content protected by rights management system
abstract: A stream of content has multiple sub-streams, where each sub-stream comprises a part of the content and is divisible into logical blocks bounded by intrinsic partitions. For each sub-stream, a specification of the logical blocks bounded by the intrinsic partitions is defined and the sub-stream is divided into the logical blocks bounded by the intrinsic partitions. Each divided logical block is encrypted and then divided into one or more portions to produce corresponding pieces of data, and each piece of data is placed into a data packet as a payload thereof. Each data packet is transmitted to a recipient thereof, and the recipient can retrieve the pieces of data from the payloads of the packets, reconstruct the encrypted logical blocks, and manipulate the sub-stream on a per-logical block basis without necessarily decrypting each encrypted logical block.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08325916&OS=08325916&RS=08325916
owner: Microsoft Corporation
number: 08325916
owner_city: Redmond
owner_country: US
publication_date: 20100208
---
This application is a division of U.S. patent application Ser. No. 11 139 956 now U.S. Pat. No. 7 684 566 filed May 27 2005 which is incorporated herein by reference in its entirety.

The present invention relates to an encryption system for encrypting at least a portion of streamed digital content protected by a rights management RM system whereby access to is provided only in accordance with a corresponding digital license. More particularly the invention relates to an encryption system that allows the encrypted stream to be more easily manipulated.

Rights management RM and enforcement is highly desirable in connection with digital content such as digital audio digital video digital text digital data digital multimedia etc. where such digital content is to be distributed to one or more users. Digital content could be static such as a text document for example or it could be streamed such as the streamed audio and video of a multimedia presentation. Typical modes of distribution of such streamed content include tangible and intangible forms such as an optical disk a cable access feed a feed from an electronic network such as the Internet a feed from an over the air broadcast etc. Upon being received by a user at an appropriate computing device thereof such user renders the streamed digital content with the aid of the computing device appropriate rendering software and appropriate output devices such as speakers a video monitor etc.

In one scenario the streamed content is distributed by a distributor as part of a subscription service such as for example a digital television service and the streamed content as distributed is either protected such as for example by being encrypted or is unprotected. If it is the case that the streamed content is indeed distributed in an unprotected form it may be the case that the distributor primarily intends for the streamed content to be immediately consumed and rendered and not stored in any meaningful retrievable form. For example the streamed content may be one of many streams of content in a digital cable television signal that is to be received by a digital cable set top box and immediately rendered thereby and is then to be forwarded to the aforementioned appropriate output devices.

However it is to be appreciated that storage systems exist and or are being developed that can indeed store the streamed content for later rendering and or re distribution to other computing devices. With regard to such storage systems then the distributor of the streamed unprotected content would rather not have such unprotected content stored in the unprotected form and without any ability to restrict such re distribution if so desired. In particular the distributor or the like may wish to prohibit the user from copying such streamed content to another storage system or the like may wish to allow the user to copy with temporal and or count restrictions or the like. As may be appreciated by prohibiting unlimited copying of the streamed content the distributor can avoid the unchecked dispersal of pristine digital copies of the streamed content where such unchecked dispersal would encourage other users from foregoing from subscribing to the subscription service offered by such distributor.

In addition the distributor may wish to provide various users with different rendering rights. For example the distributor may offer different tiers of service where higher level tiers correspondingly command higher subscription fees and where a user subscribing at a particular tier should not be allowed to access streamed content from higher tiers in an unprotected form.

Note though that after the streamed content has been distributed the distributor has very little if any real control over the streamed content. This is especially problematic in view of the fact that most any personal computer includes the software and hardware necessary to make an exact digital copy of such streamed content and to download such exact digital copy to a re distribution medium such as an optical disk or to send such exact digital copy over a network such as the Internet to any destination.

Of course as part of a transaction wherein the streamed content is subscribed to the distributor may require the user recipient of the streamed content to promise not to re distribute such content in an unwelcome manner. However such a promise is easily made and easily broken. The distributor may attempt to prevent such re distribution through any of several known security devices usually involving encryption and decryption. However such security devices if especially simple pose little problem to a mildly determined user who wishes to decrypt encrypted content save such content in an un encrypted form and then re distribute same.

RM and enforcement architectures and methods have thus been provided to allow the controlled rendering of arbitrary forms of digital content including streamed content where such control is flexible and definable by the distributor or the like of such digital content. Such architectures allow and facilitate such controlled rendering in the scenario as set forth above.

In one particular arrangement the streamed content is one of a plurality of streams of such content provided as a combined signal to a receiver. The receiver selects a particular one of the streams upon command from a media system and provides the selected stream to such media system for further processing. Notably the selected stream as provided to the receiver is unprotected but prior to being provided to the media system the selected stream is in fact protected by the receiver according to a particular RM encryption system.

Typically in an RM encryption system the content is protected by being encrypted according to a content key CK . Inasmuch as symmetric encryption and decryption is easier faster and less expensive than asymmetric encryption and decryption such content key CK is typically symmetric. Also typically the content key CK is provided by an encrypting entity such as the receiver to a decrypting entity such as the media system in an encrypted form and as part of a digital license or the like that specifies license rules that must be satisfied before such content is allowed to be decrypted and rendered by the decrypting entity media system.

Typically a particular stream of content includes multiple sub streams. For example a multimedia stream may include an audio sub stream a video sub stream a text sub stream a metadata sub stream and or the like. In addition such stream may include multiple variations of the same type of sub stream. For example such stream may include multiple audio sub streams each in a different spoken language multiple text sub streams each in a different written language and multiple video sub streams each from a different angle of view of a scene.

As is known such a stream with multiple sub streams is typically sent as a number data packets where each packet includes one or more payloads and where each payload corresponds to a contiguous portion of one of the sub streams of the stream. Thus a particular sub stream is re created by locating the payloads thereof from the packets of the stream and sequentially organizing such located payloads. Note that in the case where the stream is encrypted and as may also be known each payload is typically formed and then encrypted as a unit and thus re creating the sub stream includes decrypting each encrypted payload as a unit.

As may be appreciated each payload from a particular sub stream has a start boundary and an end boundary. As may also be appreciated each sub stream is composed of a number of sequentially organized logical blocks of information. For example a video sub stream may be composed of video frames a text stream may be composed of single or multi byte characters an audio sub stream may be composed of single or multi bit audio units and the like.

In the prior art the boundaries of any particular payload were determined rather arbitrarily and typically based on external factors. For example to achieve a particular bit rate for a stream the boundaries of each payload of each sub stream of the stream were selected to achieve such bit rate and not based on any consideration of the composition and characteristics of the sub stream from which the payload originated. Thus if a particular stream included a video sub stream based on sequential video frames such video sub stream as divided into payloads might be broken up into portions of some arbitrary size selected to achieve the particular bit rate of the stream where the start boundary of each payload started at some point within a particular video frame where the payload extended over zero one or more complete video frames and where the end boundary of the payload ended at some point within a particular video frame.

Such arbitrary boundaries on payloads are not especially troublesome during normal transmission and rendering of a stream. However it is to be appreciated that such arbitrary boundaries can cause considerable difficulty when the stream is to be manipulated such as for example when the above media system wishes to re transmit the stream to another media system or to perform other operations on the stream. As but one example if the payloads in a transmitted stream are defined according to a first bit rate and the stream is to be re transmitted at a second bit rate the payloads should be re configured to support the second bit rate. However performing such re configuration requires essentially decrypting each payload forming the entire stream from the decrypted payloads forming new payloads from the formed stream according to the second bit rate encrypting each new payload and the like before such re transmission at the second bit rate can take place. As should be appreciated such an operation requires expending a tremendous amount of effort as necessitated by the use of arbitrary boundaries for the payloads.

Likewise if an operation is to be performed on a particular sub stream on a logical block by logical block basis performing the operation preliminarily requires decrypting each payload forming the entire stream from the decrypted payloads and dividing the formed stream into the logical blocks. As should be appreciated here such preliminary steps would not be absolutely necessary if the payloads were formed based on the logical blocks of the sub stream.

A need exists then for a method and mechanism by which payloads in a stream of content are defined according to non arbitrary boundaries. In particular a need exists for a method and mechanism by which payloads in a stream of content are defined according to rational boundaries that are intrinsic to the underlying sub stream and that allow the stream to be manipulated without necessarily requiring the stream to be decrypted and re encrypted.

In the prior art the entirety of the content in a stream of content was encrypted according to the content key CK . However encrypting all of the content in a stream of content is at times unnecessary and perhaps not even desired. For example there may be little to be gained by encrypting a text sub stream in a multimedia stream and such encryption ay in fact not be desired by the content owner or the like. Moreover it is to be recognized that it may be desirable to encrypt different sub streams of a stream differently for example according to different encryption systems and or according to different content keys CK .

A need exists then for an architecture that may be employed so that each sub stream within a stream may be protected according to a particular rights management content protect system and a particular content key CK . In particular a need exists for such an architecture to specify within the stream the particular rights management content protection and the particular content key CK for each sub stream of the stream. Specifically a need exists for such an architecture that describes a header object to be included with the stream that may be interpreted and employed when rendering the stream.

The aforementioned needs are satisfied at least in part by the present invention in which a method is provided to transmit a stream of content having multiple sub streams where each sub stream comprises a part of the content and is divisible into logical blocks bounded by intrinsic partitions. In the method for each sub stream a specification of the logical blocks bounded by the intrinsic partitions is defined and the sub stream is divided into the logical blocks bounded by the intrinsic partitions. Each divided logical block is encrypted and then divided into one or more portions to produce corresponding pieces of data and each piece of data is placed into a data packet as a payload thereof. Each data packet is transmitted to a recipient thereof and the recipient can retrieve the pieces of data from the payloads of the packets reconstruct the encrypted logical blocks and manipulate the sub stream on a per logical block basis without necessarily decrypting each encrypted logical block.

The aforementioned needs are also satisfied at least in part by the present invention in which a stream of content has multiple rights management RM protected sub streams therein where each RM protected sub stream is protected according to a different particular protection scheme. The stream includes a data object including data representative of each sub stream and a header object including an RM description object. The RM description object includes at least one content encryption record where each content encryption record corresponds to a particular protection scheme and includes with regard to the protection scheme thereof an identification of the protection scheme and at least one encrypted object records. Each encrypted object record relates to a particular sub stream protected according to the identified protection scheme of the content encryption record thereof and includes an identification of the particular sub stream. For each RM protected sub stream of the stream an identification of the sub stream is employed to find a corresponding encrypted object record and the protection scheme of the content encryption record of the found encrypted object record is employed to render the sub stream.

Although not required the invention can be implemented via an application programming interface API for use by a developer and or included within the network browsing software which will be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . A graphics interface such as Northbridge may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU or host processing unit and assumes responsibility for accelerated graphics port AGP communications. One or more graphics processing units GPUs may communicate with graphics interface . In this regard GPUs generally include on chip memory storage such as register storage and GPUs communicate with a video memory . GPUs however are but one example of a coprocessor and thus a variety of co processing devices may be included in computer . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which may in turn communicate with video memory . In addition to monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

One of ordinary skill in the art can appreciate that a computer or other client device can be deployed as part of a computer network. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes. The present invention may apply to an environment with server computers and client computers deployed in a network environment having remote or local storage. The present invention may also apply to a standalone computing device having programming language functionality interpretation and execution capabilities.

Distributed computing facilitates sharing of computer resources and services by direct exchange between computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for files. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices may have applications objects or resources that may interact to implicate authentication techniques of the present invention for trusted graphics pipeline s .

It can also be appreciated that an object such as may be hosted on another computing device or . Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems may be connected together by wire line or wireless systems by local networks or widely distributed networks. Currently many of the networks are coupled to the Internet which provides the infrastructure for widely distributed computing and encompasses many different networks.

In home networking environments there are at least four disparate network transport media that may each support a unique protocol such as Power line data both wireless and wired voice e.g. telephone and entertainment media. Most home control devices such as light switches and appliances may use power line for connectivity. Data Services may enter the home as broadband e.g. either DSL or Cable modem and are accessible within the home using either wireless e.g. HomeRF or 802.11b or wired e.g. Home PNA Cat 5 even power line connectivity. Voice traffic may enter the home either as wired e.g. Cat 3 or wireless e.g. cell phones and may be distributed within the home using Cat 3 wiring. Entertainment media may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and DVI are also emerging as digital interconnects for clusters of media devices. All of these network environments and others that may emerge as protocol standards may be interconnected to form an intranet that may be connected to the outside world by way of the Internet. In short a variety of disparate sources exist for the storage and transmission of data and consequently moving forward computing devices will require ways of protecting content at all portions of the data processing pipeline.

The Internet commonly refers to the collection of networks and gateways that utilize the TCP IP suite of protocols which are well known in the art of computer networking TCP IP is an acronym for Transport Control Protocol Interface Program. The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the networks. Because of such wide spread information sharing remote networks such as the Internet have thus far generally evolved into an open system for which developers can design software applications for performing specialized operations or services essentially without restriction.

Thus the network infrastructure enables a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. Thus in computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the example of computers etc. can be thought of as clients and computer etc. can be thought of as the server where server etc. maintains the data that is then replicated in the client computers etc.

A server is typically a remote computer system accessible over a remote network such as the Internet. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server.

Client and server communicate with one another utilizing the functionality provided by a protocol layer. For example Hypertext Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW . Typically a computer network address such as a Universal Resource Locator URL or an Internet Protocol IP address is used to identify the server or client computers to each other. The network address can be referred to as a Universal Resource Locator address. For example communication can be provided over a communications medium. In particular the client and server may be coupled to one another via TCP IP connections for high capacity communication.

Thus illustrates an exemplary networked or distributed environment with a server in communication with client computers via a network bus in which the present invention may be employed. In more detail a number of servers etc. are interconnected via a communications network bus which may be a LAN WAN intranet the Internet etc. with a number of client or remote computing devices etc. such as a portable computer handheld computer thin client networked appliance or other device such as a VCR TV oven light heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device in connection with which it is desirable to process store or render secure content from a trusted source.

In a network environment in which the communications network bus is the Internet for example the servers can be Web servers with which the clients etc. communicate via any of a number of known protocols such as HTTP. Servers may also serve as clients as may be characteristic of a distributed computing environment. Communications may be wired or wireless where appropriate. Client devices may or may not communicate via communications network bus and may have independent communications associated therewith. For example in the case of a TV or VCR there may or may not be a networked aspect to the control thereof. Each client computer and server computer may be equipped with various application program modules or objects and with connections or access to various types of storage elements or objects across which files may be stored or to which portion s of files may be downloaded or migrated. Thus the present invention can be utilized in a computer network environment having client computers etc. that can access and interact with a computer network bus and server computers etc. that may interact with client computers etc. and other devices and databases .

As is known and referring now to rights management RM and enforcement is highly desirable in connection with digital content such as digital audio digital video digital text digital data digital multimedia etc. where such digital content is to be distributed or redistributed to a user. Upon being received by the user such user renders the digital content with the aid of an appropriate rendering device such as a media player text displayer etc. on a personal computer or the like.

Typically a content owner or developer or distributor hereinafter distributor distributing such digital content wishes to restrict what the user can do with such distributed digital content or at least ensure that the content is not redistributed in an unwanted manner. For example the content distributor may wish to restrict the user from copying and re distributing such content to a second user or may wish to allow distributed digital content to be rendered only a limited number of times only for a certain total time only on a certain type of machine only on a certain type of rendering platform only by a certain type of user etc.

However and as was set forth above after distribution has occurred such distributor has very little if any control over the digital content . An RM system then allows the controlled rendering of arbitrary forms of digital content where such control is flexible and definable by the content distributor of such digital content. Typically to protect the content such content is encrypted with a symmetric encryption decryption key KD i.e. KD CONTENT and is packaged with other information relevant to the content in a package .

The trust based RM system allows a distributor of digital content to specify at least some license rules that must be satisfied before such digital content is allowed to be rendered by a computing device of a user. Such license rules can include the aforementioned temporal requirement and may be embodied within a digital license or use document hereinafter license that the user user s computing device hereinafter such terms are interchangeable unless circumstances require otherwise must be possess. Such license also includes the decryption key KD for decrypting the digital content perhaps encrypted according to a key decryptable by the user s computing device . As seen in such encrypting key is a public key of the user s computing device PU C and the user s computing device presumably has the corresponding private key PR C by which PU C KD may be decrypted.

The content distributor for a piece of digital content must trust that the user s computing device will abide by the rules and requirements specified by such content owner in the license i.e. that the digital content will not be rendered unless the rules and requirements within the license are satisfied. Preferably then the user s computing device is provided with a trusted component or mechanism that will not render the digital content except according to the license rules embodied in the license associated with the digital content and obtained by the user.

The trusted component typically has a license evaluator that determines whether the license is valid reviews the license rules and requirements in such valid license and determines based on the reviewed license rules and requirements whether the requesting user has the right to render the requested digital content in the manner sought among other things. As should be understood the license evaluator is trusted in the RM system to carry out the wishes of the owner of the digital content according to the rules and requirements in the license and the user should not be able to easily alter such trusted element for any purpose nefarious or otherwise.

As should be understood the rules and requirements in the license might specify whether the user has rights to render the digital content based on any of several factors including who the user is where the user is located what type of computing device the user is using what rendering application is calling the RM system the date the time etc. In addition the rules and requirements of the license may limit the license to a pre determined number of renderings or pre determined rendering time for example. Thus the trusted component may need to refer to a clock on the computing device . If such clock is provided such clock may be a secure clock that cannot be tampered with by a user in an effort to overcome a temporal restriction of a license .

The rules and requirements may be specified in the license according to any appropriate language and syntax. For example the language may simply specify attributes and values that must be satisfied DATE must be later than X e.g. or may require the performance of functions according to a specified script IF DATE greater than X THEN DO . . . e.g. .

Upon the license evaluator determining that the license is valid and that the user satisfies the rules and requirements therein the digital content can then be rendered. In particular to render the content the decryption key KD is obtained from the license and is applied to KD CONTENT from the content package to result in the actual content and the actual content is then in fact rendered. As set forth above the license with PU C KD in effect authorizes an entity in possession of PR C to access KD and thereby access the content encrypted according to such KD presuming of course that the entity abides by all conditions as set forth in the license .

Note that a license typically includes a digital signature for authentication validation purposes. Likewise other forms of digital constructs such as a piece of digital content may also have such a digital signature for authentication validation purposes. As should be known such a digital signature may be constructed based on a first key from a pair of asymmetric keys or from a symmetric integrity key for example by performing some sort of hash on the underlying data to which the signature is attached and then encrypting the hash with the key. Thereafter the signature is validated by applying the second key from the pair of asymmetric keys or the integrity key again for example by decrypting the encrypted hash and comparing the decrypted hash to another hash of the underlying data to which the signature is attached. If the hashes match it can be presumed that the underlying data has not been altered and the underlying construct therefore can be authenticated. Typically an RM system will not honor a license or the like that is not authenticated.

Turning now to a system for receiving and handling multimedia content is shown. As should be evident such system is particularly suited for handling an input signal comprising multiple streams of multimedia content such as for example a television signal from a multi channel distributor. However such will be system may also handle other input signals without departing from the spirit and scope of the present invention.

In the system the aforementioned input signal as provided by the distributor thereof is applied to a receiver which may be any appropriate receiver without departing from the spirit and scope of the present invention presuming of course such receiver can performs the functions set forth herein. For example the receiver may be a Uni Directional Cable Receiver UDCR such as is being developed to receive a digital cable television signal and forward same for further digital processing including rendering of content therein. As may be appreciated the receiver upon being so commanded tunes one of the multiple streams of multimedia content from the input signal and forwards same for further processing. In addition the receiver prior to forwarding the tuned stream of content may if necessary convert such stream from a native format to a format more amenable for such further processing.

As envisioned each of the multiple streams of multimedia content in the input signal may or may not be encrypted. Upon tuning a particular stream of content within the input signal then the receiver decrypts such stream if encrypted and re encrypts same in a manner that will be set forth in more detail below or merely encrypts the stream if not encrypted again in a manner that will be set forth in more detail below. As was alluded to above the receiver encrypts the stream of content as part of ensuring that the stream is RM protected. Thus the stream of content is not available to be redistributed in an unprotected form.

As also shown in a media system is provided to receive the encrypted stream of content from the receiver and further process same. Presumably the media system commanded the receiver to tune the particular stream of content from within the input signal perhaps upon receiving a corresponding command from a user although it maybe appreciated that such a command may be initiated by other sources without departing from the spirit and scope of the present invention. At any rate upon receiving the stream of content from the receiver the media system stores same in an appropriate storage device for retrieval and rendering either immediately or upon some time delay. Upon rendering of the stream the media system forwards appropriate signals to one or more output devices such as one or more monitors speakers other displays and the like.

Inasmuch as the stored stream is in the RM protected form the media system includes RM components such as the trusted component license evaluator and clock of . Thus upon retrieving a particular stream the media system renders same but only in accordance with a corresponding license . Accordingly the encrypted stream is decrypted and rendered only in if such license so allows and with the content key CK set forth in the license . Note that inasmuch as the encrypted stream is stored at least temporarily on the first media system a user thereof may in theory copy same to another second media system for rendering thereby. However inasmuch as the stream is encrypted and decryptable only according to the license and inasmuch as the license is tied to the first media system such license may not be employed by the second media system .

As should be understood though it may be the case that the first media system can issue a sub license for the copied stream to the second media system presuming the first media system is in fact capable of doing so and the license so allows. If so the sub license as tied to the second media system can in fact be employed by the second media system to render the stream .

Still referring to it is seen that in addition to or as an alternative to receiving a stream from the receiver the media system may additionally receive streams from other sources either directly or indirectly. Such other sources may for example comprise an NTSC input signal an ATSC input signal and the like. As seen for each of at least some input signals received directly it may be the case that the media system includes either a hardware or software gateway that acts in the manner of the receiver to convert a stream within the received input signal to an encrypted format more amenable to the media system as necessary.

Turning now to and as was set forth above a typical stream includes multiple sub streams such as for example one or more audio sub streams one or more video sub streams one or more text sub streams etc. where at least some of the sub streams are intended to be synchronized with one another and rendered with one another. As is known when forming the stream for transmission either by the receiver a source providing the stream to the receiver a source providing the stream directly to the media system or otherwise each such sub stream is divided into payloads each payload is encrypted if necessary and tagged with appropriate identifying information payloads are formed into packets each packet is tagged with appropriate identifying information and the packets are what is in fact transmitted. Forming such stream into such packets is known or should be apparent to the relevant public and therefore need not be set forth herein in any detail. Accordingly any appropriate method of so forming such stream into such packets may be employed without departing from the spirit and scope of the present invention.

As should be appreciated with such packets the media system or the like recreates the stream from the packets by essentially reversing the process of packet formation. In essence then each sub stream is re created by locating the payloads thereof from the packets of the stream decrypting the located payloads and sequentially organizing such decrypted payloads . As each sub stream is re created the stream is rendered by rendering each sub stream in a synchronous manner. As before re creating such stream from such packets is known or should be apparent to the relevant public and therefore need not be set forth herein in any detail. Accordingly any appropriate method of so re creating such stream from such packets may be employed without departing from the spirit and scope of the present invention.

As was set forth above each payload from a particular sub stream has a start boundary and an end boundary and each sub stream is composed of a number of sequentially organized digital blocks of information such as for example frames of video in a video sub stream bytes of text in text sub stream etc. As was also set forth above in the prior art during formation of the payloads the boundaries of any particular payload were determined rather arbitrarily and typically based on external factors such as a determined bit rate for the stream . Thus and for example it typically was the case that a video sub stream was divided into payloads such that each of the start boundary and end boundary of each payload was as some point in the middle of a video frame and not at a partition between video frames.

Again although such arbitrary boundaries for payloads are not especially troublesome during normal transmission and rendering of a stream by the media system or the like it is to be appreciated that such arbitrary boundaries can cause considerable difficulty when the stream is to be manipulated such as for example when a first media system re transmits the stream to a second media system or when a media system is being operated to perform an operation on each logical block of a sub stream of the stream .

Accordingly and in one embodiment of the present invention each payload is not formed from a sub stream of a stream by defining an arbitrarily bounded portion of the sub stream and then encrypting the portion to produce the data for the payload . Instead in one embodiment of the present invention a non arbitrarily bounded logical block of the sub stream is defined and encrypted and the encrypted logical block may then be divided into portions to produce the corresponding data for each of one or more payloads . Thus data of the payloads of the logical blocks need not necessarily be decrypted to manipulate such logical blocks unless of course such manipulation requires the data to be in a decrypted form.

The size and definition of each logical block of a particular sub stream can be any size and definition without departing from the spirit and scope of the present invention. Significantly though each logical block is based on partitions intrinsic to the sub stream . Again such intrinsic partitions are specific to the type of content in a sub stream and can be the dividers between frames in the case of video bytes in the case of text audio samples in the case of audio etc.

Likewise the number of payloads produced from a particular encrypted logical block can be any number without departing from the spirit and scope of the present invention. For example in the case of a text sub stream with bytes of text the logical block may be a byte 50 bytes 512 bytes a kilobyte 10 kilobytes or the like and the number of payloads produced from such a logical block can be 1 10 40 128 1024 or the like. Similarly in the case of a video sub stream with frames of video the logical block may be a frame a pair of frames 10 frames or the like and the number of payloads produced from such a logical block can be 1 3 7 10 40 or the like.

Turning now to it is seen that a method for producing the payloads from a particular sub stream is shown. Preliminarily a logical block of the sub stream is defined step based on appropriate criteria. Remembering that each logical block is to be encrypted as a unit the logical block should be defined at least partially based on a consideration of a size of the logical block that would be amenable for such encryption. For example a particular encryption algorithm may operate better on a logical block that is about 1 kilobyte as opposed to a logical block that is about 10 bytes. However remembering that it may be more optimal for a media system or the like to manipulate particular size pieces of a sub stream the logical block should also be defined at least partially based on a consideration of such particular size pieces. For example manipulation of frames of video in a video sub stream may best be performed if each logical block is indeed a video frame.

At any rate once a logical block is defined as at step the sub stream is divided into such logical blocks step and each logical block is then encrypted step . Thereafter each encrypted logical block may itself be divided into a number of portions if so desired step . As maybe appreciated the number of portions that an encrypted logical block is divided into can be any number without departing from the spirit and scope of the present invention if indeed such division takes place and may indeed vary from block to block. For example if it is deemed advisable that each payload should have about 1 kilobyte of data or so and a particular encrypted logical block is about 10 kilobytes then it may be that such block is divided into 9 10 or 11 pieces of data.

Once divided each portion of the encrypted logical block is then incorporated into a payload as the data thereof step . Of course each payload is then incorporated into a particular packet step and the packets may then be delivered as part of a stream including the sub stream step .

To reconstitute a particular sub stream of the stream from the packets and as should now be appreciated each payload for the sub stream is removed from the packets step and each encrypted logical block portion from the sub stream is removed from each payload step . The encrypted logical block portions may then be correctly sequenced and combined to form the encrypted logical blocks step and each such encrypted logical block may then be decrypted as appropriate step . Note that re constituting a particular sub stream from packets is known or should be apparent to the relevant public and therefore need not be set forth herein in any detail. Accordingly any appropriate method of so re constituting such sub stream from such packets may be employed without departing from the spirit and scope of the present invention.

Note that it may not always be necessary for a media system or the like to perform all of steps when manipulating a stream . For example decrypting as at step may not be necessary and sequencing and combining the encrypted logical block portions as at step may also not be necessary in all circumstances. Critically inasmuch as each logical block of a sub stream is encrypted prior to being possibly divided into portions that are formed into payloads such sub stream may be manipulated by manipulating the encrypted logical block portions thereof and decryption of such encrypted logical block portions can be avoided in at least some instances.

As was pointed out above and with regard to a stream of content comprised of multiple sub streams it would be advantageous to be able to apply different rights management and protection schemes to each sub stream of the stream . For example in a stream with a video sub stream an audio sub stream a text sub stream and a metadata sub stream it may be advantageous to have the video sub stream protected by a first scheme and according to a first license to have the audio sub stream protected by the first scheme but according to a second license to have the text sub stream protected by a second scheme and to not have the metadata sub stream protected by any scheme whatsoever.

Presumably the mechanics of in fact applying such schemes to the sub streams of the stream in the manner desired are known or should be apparent to the relevant public and therefore need not be set forth herein in any detail. However and significantly an architecture describing the particular application of such schemes to such sub streams is necessary so that such a description can be provided to an entity such as a media system or the like that is to reconstitute or at least manipulate such sub streams

In one embodiment of the present invention then and turning now to an architecture describing the application of rights management RM and protections schemes to sub streams of a stream is shown. Preliminarily and as should be appreciated it is typical although not absolutely necessarily that the stream include such RM description so that a media system or the like receiving the stream need not refer elsewhere for such description. For example and as shown the stream may be at least conceptually organized into a plurality of objects including a header object and a data object where the header object includes various data and metadata relating to the stream and the data object includes the actual data representative of the stream including the constituent sub streams thereof and other related objects. As may be appreciated then such header object in particular may include the RM description in an appropriate arrangement.

In one embodiment of the present invention the RM description is set forth within the header object as an RM description object . As seen the RM description object principally includes for each protection scheme employed in connection with the stream a content encryption record describing such protection scheme. Thus with regard to the aforementioned example where a stream has a video sub stream protected by a first scheme and according to a first license an audio sub stream protected by the first scheme but according to a second license a text sub stream protected by a second scheme and an unprotected metadata sub stream it would be the case that the RM description object for such stream includes a first content encryption record describing the first scheme and a second content encryption record describing the second scheme. Such RM description object might also have a third content encryption record relating to the unprotected metadata sub stream although such a third content encryption record is likely unnecessary since such metadata sub stream is indeed unprotected.

In one embodiment of the present invention each content encryption record principally includes with regard to the protection scheme thereof an identification of the protection scheme and a number of encrypted object records where each encrypted object record relates to a particular object protected according to the identified protection scheme of the content encryption record such as for example a particular sub stream a portion of a particular sub stream or the like. Thus with regard to the aforementioned example where the stream has the video sub stream protected by the first scheme and according to a first license the audio sub stream protected by the first scheme but according to a second license the text sub stream protected by the second scheme and the unprotected metadata sub stream it would be the case that the first content encryption record describing the first scheme would include an identification of the first scheme a first encrypted object record relating to the video sub stream as protected by the identified first scheme and a second encrypted object record relating to the audio sub stream as protected by the identified first scheme. Likewise the second content encryption record describing the second scheme would include an identification of the second scheme and only a single encrypted object record relating to the text sub stream as protected by the identified second scheme.

As seen in each encrypted object record with regard to a particular object protected according to a particular protection scheme includes therein an identification of the particular object as the particular object resides in the data object and a type of the object such as for example a sub stream a portion of a sub stream etc. In addition the encrypted object record may also include with regard to the identified object related information such as an identification of a license to render the object or an identification of where to obtain such a license . Alternatively if such license type information is common to all encrypted object records of a particular content encryption record such license type information may be included with such content encryption record .

As may now be appreciated with the architecture set forth in and referring now to a rendering device such as a media system renders a particular stream by first locating the header object of the stream step then locating each content encryption record in the header object step and then locating each encrypted object record of each located content encryption record in the header object step . With regard to a particular sub stream that is RM protected then the rendering device determines an identification of the sub stream step and searches through the located encrypted object records to find a record having such identification of such sub stream step . Thereafter the rendering device determines the protection scheme of the content encryption record of the found record where such determined protection scheme is employed to protect the sub stream step and proceeds to render such sub stream in accordance with such protection scheme step .

The programming necessary to effectuate the processes performed in connection with the present invention is relatively straight forward and should be apparent to the relevant programming public. Accordingly such programming is not attached hereto. Any particular programming then may be employed to effectuate the present invention without departing from the spirit and scope thereof.

In the present invention a method and mechanism are provided by which payloads from a sub stream of content are defined according to non arbitrary boundaries. Thus the payloads are defined according to rational boundaries that are intrinsic to the underlying sub stream and the sub stream can be manipulated without necessarily requiring the stream to be decrypted and re encrypted.

Also in the present invention an architecture is provided that may be employed so that each sub stream within a stream may be protected according to a particular rights management content protect system and a particular content key CK . The architecture allows specifying within the stream the particular rights management content protection scheme for each sub stream of the stream with a header object that is included with the stream and that may be interpreted and employed when rendering the stream .

It should be appreciated that changes could be made to the embodiments described above without departing from the inventive concepts thereof. It should be understood therefore that this invention is not limited to the particular embodiments disclosed but it is intended to cover modifications within the spirit and scope of the present invention as defined by the appended claims.

