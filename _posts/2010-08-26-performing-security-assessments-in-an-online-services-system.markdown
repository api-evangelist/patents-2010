---

title: Performing security assessments in an online services system
abstract: A system and method for performing security assessments in an online services system. In one embodiment, a method includes receiving an accepted security assessment agreement from a user, where the security assessment agreement is associated with a software application utilized in an online services system. The method also includes receiving configuration data associated with the software application; receiving scanning data associated with the software application; and sending the configuration data and scanning data to one or more security assessment systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08904541&OS=08904541&RS=08904541
owner: salesforce.com, inc.
number: 08904541
owner_city: San Francisco
owner_country: US
publication_date: 20100826
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The subject matter discussed in the background section should not be assumed to be prior art merely as a result of its mention in the background section. Similarly a problem mentioned in the background section or associated with the subject matter of the background section should not be assumed to have been previously recognized in the prior art. The subject matter in the background section merely represents different approaches which in and of themselves may also be inventions.

In conventional database systems users access their data resources in one logical database. A user of such a conventional system typically retrieves data from and stores data on the system using the user s own systems. A user system might remotely access one of a plurality of server systems that might in turn access the database system. Data retrieval from the system might include the issuance of a query from the user system to the database system. The database system might process the request for information received in the query and send to the user system information relevant to the request.

Cloud service providers utilize database systems to provide resources to its customers as a service. A cloud service provider may perform tests in order to ensure the security of its infrastructure and software. Such tests may be time consuming and costly.

Embodiments provide mechanisms and methods for performing security assessments in an online services system. In one embodiment a method includes receiving an accepted security assessment agreement from a user where the security assessment agreement is associated with a software application utilized in an online services system. The method also includes receiving configuration data associated with the software application receiving scanning data associated with the software application and sending the configuration data and scanning data to one or more security assessment systems.

While embodiments of the present invention may be implemented in a system having an application server providing a front end for an on demand database service capable of supporting multiple tenants the present invention is not limited to multi tenant databases or deployment on application servers. Embodiments may be practiced using other database architectures i.e. ORACLE DB2 by IBM and the like without departing from the scope of the embodiments claimed.

Any of the above embodiments may be used alone or together with one another in any combination. Inventions encompassed within this specification may also include embodiments that are only partially mentioned or alluded to or are not mentioned or alluded to at all in this brief summary or in the abstract. Although various embodiments of the invention may have been motivated by various deficiencies with the prior art which may be discussed or alluded to in one or more places in the specification the embodiments of the invention do not necessarily address any of these deficiencies. In other words different embodiments of the invention may address different deficiencies that may be discussed in the specification. Some embodiments may only partially address some deficiencies or just one deficiency that may be discussed in the specification and some embodiments may not address any of these deficiencies.

As used herein the term multi tenant database system refers to those systems in which various elements of hardware and software of the database system may be shared by one or more customers. For example a given application server may simultaneously process requests for a great number of customers and a given database table may store rows for a potentially much greater number of customers. As used herein the term query plan refers to a set of steps used to access information in a database system.

Next mechanisms and methods for providing performing security assessments in an online services system will be described with reference to example embodiments.

Environment is an environment in which an on demand database service exists. User system may be any machine or system that is used by a user to access a database user system. For example any of user systems can be a handheld computing device a mobile phone a laptop computer a work station and or a network of computing devices. As illustrated in and in more detail in user systems might interact via a network with an on demand database service which is system . System may also be referred to as an online services system or cloud service provider. System provides its resources to customers e.g. end users as a service.

An on demand database service such as system is a database system that is made available to outside users who do not need to necessarily be concerned with building and or maintaining the database system but instead may be available for more general use when the users need the database system e.g. on the demand of the users . Some on demand database services may store information from one or more tenants stored into tables of a common database image to form a multi tenant database system MTS . Accordingly on demand database service and system will be used interchangeably herein. A database image may include one or more database objects. A relational database management system RDMS or the equivalent may execute storage and retrieval of information against the database object s . Application platform may be a framework that allows the applications of system to run such as the hardware and or software e.g. the operating system. In an embodiment on demand database service may include an application platform that enables creating managing and executing one or more applications developed by either the provider of the on demand database service users accessing the on demand database service via user systems or third party application developers accessing the on demand database service via user systems .

The users of user systems may differ in their respective capacities and the capacity of a particular user system might be entirely determined by permissions permission levels for the current user. For example where a salesperson is using a particular user system to interact with system that user system has the capacities allotted to that salesperson. However while an administrator is using that user system to interact with system that user system has the capacities allotted to that administrator. In systems with a hierarchical role model users at one permission level may have access to applications data and database information accessible by a lower permission level user but may not have access to certain applications database information and data accessible by a user at a higher permission level. Thus different users will have different capabilities with regard to accessing and modifying application and database information depending on a user s security or permission level.

Network is any network or combination of networks of devices that communicate with one another. For example network can be any one or any combination of a local area network LAN wide area network WAN telephone network wireless network point to point network star network token ring network hub network or other appropriate configuration. As the most common type of computer network in current use is a transfer control protocol and Internet protocol TCP IP network such as the global internetwork of networks often referred to as the Internet with a capital I that network will be used in many of the examples herein. However it should be understood that the networks that the present invention might use are not so limited although TCP IP is a frequently implemented protocol.

User systems might communicate with system using TCP IP and at a higher network level use other common Internet protocols to communicate such as hypertext transfer protocol HTTP file transfer protocol FTP Andrew file system AFS wireless application protocol WAP etc. In an example where HTTP is used user system might include an HTTP client commonly referred to as a browser for sending and receiving HTTP messages to and from an HTTP server at system . Such an HTTP server might be implemented as the sole network interface between system and network but other techniques might be used as well or instead. In some implementations the interface between system and network includes load sharing functionality such as round robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server each of the plurality of servers has access to the MTS data however other alternative configurations may be used instead.

In one embodiment system shown in implements a web based customer relationship management CRM system. For example in one embodiment system includes application servers configured to implement and execute CRM software applications as well as to provide related data code forms webpages and other information to and from user systems . The application servers are also configured to store to and retrieve from a database system related data objects and Webpage content. With a multi tenant system data for multiple tenants may be stored in the same physical database object. Tenant data may be arranged such that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant s data unless such data is expressly shared. In certain embodiments system implements applications other than or in addition to a CRM application. For example system may provide tenant access to multiple hosted standard and custom applications including a CRM application. User or third party application developer software applications which may or may not include CRM may be supported by the application platform which manages the creation and storage of the applications into one or more database objects and executing of the applications in a virtual machine in the process space of the system . The terms software application and application are used interchangeably.

One arrangement for elements of system is shown in including a network interface application platform tenant data storage for tenant data system data storage for system data accessible to system and possibly multiple tenants program code for implementing various functions of system and a process space for executing MTS system processes and tenant specific processes such as running applications as part of an application hosting service. Additional processes that may execute on system include database indexing processes.

Several elements in the system shown in include conventional well known elements that are explained only briefly here. For example each user system could include a desktop personal computer workstation laptop PDA cell phone or any wireless access protocol WAP enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection. User system typically runs an HTTP client e.g. a browsing program such as Microsoft s Internet Explorer browser Netscape s Navigator browser Opera s browser or a WAP enabled browser in the case of a cell phone PDA or other wireless device or the like allowing a user e.g. subscriber of the multi tenant database system of user system to access process and view information pages and applications available to it from system over network . Each user system also typically includes one or more user interface devices such as a keyboard a mouse trackball touch pad touch screen pen or the like for interacting with a graphical user interface GUI provided by the browser on a display e.g. a monitor screen liquid crystal display LCD monitor etc. in conjunction with pages forms applications and other information provided by system or other systems or servers. For example the user interface device can be used to access data and applications hosted by system and to perform searches on stored data and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above embodiments are suitable for use with the Internet which refers to a specific global internetwork of networks. However it should be understood that other networks can be used instead of the Internet such as an intranet an extranet a virtual private network VPN a non TCP IP based network any LAN or WAN or the like.

According to one embodiment each user system and all of its components are operator configurable using applications such as a browser including computer code run using a central processing unit such as an Intel Pentium processor or the like. Similarly system and additional instances of an MTS where more than one is present and all of their components might be operator configurable using application s including computer code to run using a central processing unit such as processor system which may include an Intel Pentium processor or the like and or multiple processor units. A computer program product embodiment includes a machine readable storage medium media having instructions stored thereon in which can be used to program a computer to perform any of the processes of the embodiments described herein. Computer code for operating and configuring system to intercommunicate and to process webpages applications and other data and media content as described herein are preferably downloaded and stored on a hard disk but the entire program code or portions thereof may also be stored in any other volatile or non volatile memory medium or device as is well known such as a read only memory ROM or random access memory RAM or provided on any media capable of storing program code such as any type of rotating media including floppy disks optical discs digital versatile disk DVD compact disk CD microdrive and magneto optical disks and magnetic or optical cards nanosystems including molecular memory integrated circuits ICs or any type of media or device suitable for storing instructions and or data. Additionally the entire program code or portions thereof may be transmitted and downloaded from a software source over a transmission medium e.g. over the Internet or from another server as is well known or transmitted over any other conventional network connection as is well known e.g. extranet virtual private network VPN LAN etc. using any communication medium and protocols e.g. TCP IP HTTP HTTPS Ethernet etc. as are well known. It will also be appreciated that computer code for implementing embodiments of the present invention can be implemented in any programming language that can be executed on a client system and or server or server system such as for example C C HTML any other markup language Java JavaScript ActiveX any other scripting language such as VBScript and many other programming languages as are well known may be used. Java is a trademark of Sun Microsystems Inc. .

According to one embodiment each system is configured to provide webpages forms applications data and media content to user client systems to support the access by user systems as tenants of system . As such system provides security mechanisms to keep each tenant s data separate unless the data is shared. If more than one MTS is used they may be located in close proximity to one another e.g. in a server farm located in a single building or campus or they may be distributed at locations remote from one another e.g. one or more servers located in city A and one or more servers located in city B . As used herein each MTS could include one or more logically and or physically connected servers distributed locally or across one or more geographic locations. Additionally the term server is meant to include a computer system including processing hardware and process space s and an associated storage system and database application e.g. object oriented database management system OODBMS or rational database management system RDBMS as is well known in the art. It should also be understood that server system and server are often used interchangeably herein. Similarly the database object described herein can be implemented as single databases a distributed database a collection of distributed databases a database with redundant online or offline backups or other redundancies etc. and might include a distributed database or storage network and associated processing intelligence.

User system network system tenant data storage and system data storage were discussed above in . Regarding user system processor system A may be any combination of one or more processors. Memory system B may be any combination of one or more memory devices short term and or long term memory. Input system C may be any combination of input devices such as one or more keyboards mice trackballs scanners cameras and or interfaces to networks. Output system D may be any combination of output devices such as one or more monitors printers and or interfaces to networks. As shown in system may include a network interface of implemented as a set of HTTP application servers an application platform tenant data storage and system data storage . Also shown is system process space including individual tenant process spaces and a tenant management process space . Each application server may be configured to tenant data storage and the tenant data therein and system data storage and the system data therein to serve requests of user systems . The tenant data might be divided into individual tenant storage areas which can be either a physical arrangement and or a logical arrangement of data. Within each tenant storage area user storage and application metadata might be similarly allocated for each user. For example a copy of a user s most recently used MRU items might be stored to user storage . Similarly a copy of MRU items for an entire organization that is a tenant might be stored to tenant storage area . A UI provides a user interface and an API provides an application programmer interface to system resident processes and to users and or developers at user systems . The tenant data and the system data may be stored in various databases such as one or more Oracle databases.

Application platform includes an application setup mechanism that supports application developers creation and management of applications which may be saved as metadata into tenant data storage by save routines for execution by subscribers as one or more tenant process spaces managed by tenant management process for example. Invocations to such applications may be coded using PL SOQL that provides a programming language style interface extension to API . Invocations to applications may be detected by one or more system processes which manage retrieving application metadata for the subscriber making the invocation and executing the metadata as an application in a virtual machine.

Each application server may be communicably coupled to database systems e.g. having access to system data and tenant data via a different network connection. For example one application server might be coupled via the network e.g. the Internet another application server might be coupled via a direct network link and another application server might be coupled by yet a different network connection. Transfer control protocol and Internet protocol TCP IP are typical protocols for communicating between application servers and the database system. However it will be apparent to one skilled in the art that other transport protocols may be used to optimize the system depending on the network connection used.

In certain embodiments each application server is configured to handle requests for any user associated with any organization that is a tenant. Because it is desirable to be able to add and remove application servers from the server pool at any time for any reason there is preferably no server affinity for a user and or organization to a specific application server . In one embodiment therefore an interface system implementing a load balancing function e.g. an F5 Big IP load balancer is communicably coupled between the application servers and the user systems to distribute requests to the application servers . In one embodiment the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms such as round robin and observed response time also can be used. For example in certain embodiments three consecutive requests from the same user could hit three different application servers and three requests from different users could hit the same application server . In this manner system is multi tenant wherein system handles the storage of and access to different objects data and applications across disparate users and organizations.

As an example of storage one tenant might be a company that employs a sales force where each salesperson uses system to manage his or her sales process. Thus a user might maintain contact data leads data customer follow up data performance data goals and progress data etc. all applicable to that user s personal sales process e.g. in tenant data storage . In an example of an MTS arrangement since all of the data and the applications to access view modify report transmit calculate etc. can be maintained and accessed by a user system having nothing more than network access the user can manage his or her sales efforts and cycles from any of many different user systems. For example if a salesperson is visiting a customer and the customer has Internet access in their lobby the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.

While each user s data might be separate from other users data regardless of the employers of each user some data might be organization wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus there might be some data structures managed by system that are allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors the MTS should have security protocols that keep data applications and application use separate. Also because many tenants may opt for access to an MTS rather than maintain their own system redundancy up time and backup are additional functions that may be implemented in the MTS. In addition to user specific data and tenant specific data system might also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports news postings and the like that are sharable among tenants.

In certain embodiments user systems which may be client systems communicate with application servers to request and update system level and tenant level data from system that may require sending one or more queries to tenant data storage and or system data storage . System e.g. an application server in system automatically generates one or more structured query language SQL statements e.g. one or more SQL queries that are designed to access the desired information. System data storage may generate query plans to access the requested data from the database.

Embodiments described herein enable facilitate and manage security testing of aspects of an online services system. Such aspects include security assessments of software applications provided by third party developer as well as other security assessments with the online services system. Security assessments includes network and software application analysis ensure the security of infrastructure of the online services system and software applications used by the online services system. Some providers strictly forbid this type of testing while others have a lengthy process for completing this type of testing. This system describes an automated way to enable facilitate and manage the security reviews of an on demand system.

In one embodiment system provides an application exchange e.g. AppExchange where partners e.g. third party application providers may provide applications and be listed on the application exchange. As described in more detail below system receives from the third party application providers information e.g. configuration data and scanning data associated with their applications and related testing requirements. This information enables system to automatically perform the security assessments described herein on an ongoing basis e.g. reoccuring or as needed. The frequency of the security assessments may vary e.g. every month every year etc. . Also in one embodiment the frequency of the security assessments may depend on security vulnerability risks e.g. low risk medium risk high risk etc. . For example a given application with a significantly large number of users may be assigned a higher risk value and thus may be tested more frequently e.g. monthly .

As indicated above security assessment providers provide security assessments on applications provided by the third party application providers . These assessments may include assessments and analysis for security vulnerabilities that the third party applications may cause e.g. within system and or associated with customers . The assessments may test integration components of applications that third party application providers run on system as well as any external components used to support the applications. The security assessments may also provide data used to determine security risks associated with a given application.

In block system provides a security assessment agreement with the user if authentication was successful. In one embodiment system displays the security assessment agreement to the user. In one embodiment the security assessment agreement is an agreement in which the user e.g. third party application provider permits security assessments of the user s application. In one embodiment the security assessment agreement is required in order to allow the application provider to use the services of the online services system e.g. system . In one embodiment the security assessment agreement also includes terms agreed to by parties performing the assessments.

In block system receives the accepted security assessment agreement from the user. In one embodiment system receives the accepted security assessment agreement when the user indicates e.g. checking an acceptance box online that the user accepts the agreement. In one embodiment system enables the user to submit a request for changes and or updates to the security assessment agreement. In one embodiment the changes may be received by email. Once received an administrator or other appropriate individual may approve the change notify the user of the approval and save the modified agreement. In one embodiment the modified security assessment agreement received from the user may be considered an accepted form of the agreement.

In block system receives configuration data from the user. The configuration data may also be referred to as configuration metadata. In one embodiment the configuration data includes testing parameters and requirements for performing security assessments on an application. For example in one embodiment the configuration data may include the testing permitted e.g. Boolean a testing window start time e.g. Greenwich Mean Time GMT Time a testing window end time e.g. GMT Time allowed tools e.g. Enum set of constant values tools allowed by the provider etc. testing allowed e.g. Enum all network or application require signed agreement e.g. Boolean testing frequency e.g. Enum once yearly quarterly etc. providers used Enum current service provider list any other information needed to test an application etc.

In block system determines if the configuration data is valid. If not system allows the user to correct the configuration data. In block system stores the configuration data onto a storage device if the configuration data is valid.

In block system creates a test environment for performing security assessments on the application if the configuration data is valid. In one embodiment the test environment is based on the configuration data. In one embodiment the test environment may be a new instance for an organization and would be configured accordingly. In one embodiment the test environment may be a copy of an existing test environment. In one embodiment the copy of the test environment may have a configuration for a production system where no data would be present but the configuration would be the same. In one embodiment the creation of the test environment is conditioned upon receiving the accepted security analysis agreement from the user. In one embodiment the results of the test environment are communicated internally and externally as appropriate. In one embodiment a security service provider may review the test results. In one embodiment the security service provider may identify aspects such as out of date software web vulnerabilities such as cross site scripting XSS vulnerabilities etc.

In block system receives scanning data from the user. The scanning data may also be referred to as scanning metadata. In one embodiment the scanning data provides access information including access credentials needs for testing a target applications. In one embodiment the scanning data may include the following information tool provider testing window URL to test site login user site login password Internet protocol IP addresses to test e.g. in the cloud provider s space provider login user provider login password source IP and any other access information needed to test an application etc. In one embodiment some of the scanning data may be copied from the configuration data. In block system determines if the scanning data is valid. If not system allows the user to correct the scanning data. In block system stores the scanning data onto a storage device.

In block system sends the test information to one or more appropriate security assessment systems e.g. systems internal to the cloud provider or external systems that provide security assessments such as security assessment providers and . In one embodiment system communicates with the security assessment providers via an application programming interface API to provide the test information. This exchange of information also schedules security assessments to occur automatically at an appropriate time.

In one embodiment system stores the results of the security assessments to a results repository or any other suitable storage location. System may later retrieve the results for delivery and review by an appropriate administrator of the cloud provider software application provider end user customer prospect and or any other appropriate user.

In one embodiment system parses the results into individual records. In one embodiment system may label the individual records as fixed not fixed false positive or accept risk etc. In one embodiment when an issue is marked as fixed a simple retest is kicked off using automation may be used by system to test that the issue was indeed resolved.

In one embodiment system determines if any systems under test e.g. servers or other components of system communicate with an unauthorized computer system e.g. any external systems in violation of a policy . In order to do this references to an external system e.g. a recording system are sent to the system under test in a variety of different ways. In one embodiment each reference contains a token that can later be traced back to the system under test and the specific mechanism used to insert the individual reference containing the token. In one embodiment the recording auditing system may be the external system that serves as the target of all of these references and the recording auditing system records every attempt to communicate with or retrieve any reference. In one embodiment the reference includes information that uniquely identifies each request to its source computer system. In one embodiment the source computer system may be an individual system under test multiple systems may be tested at the same time and or a specific mechanism used to insert a reference that violates a policy multiple references may be inserted using a variety of techniques . The reference can be in the form of a URL IP address or other similar system indicator etc.

In one embodiment system generates a token for each request. A token may be in the form of a random character string unique URL port number or similar unique indicator etc. In one embodiment system may issue reference token combinations to computer systems that are not authorized communication destinations and maintain a record of the recipient of each reference token combination. In one embodiment an unauthorized computer system is a system that has established communication against policy. For example in one embodiment a policy may be that a system is permitted to use only a pre defined set of systems as authentication providers. If a user specifies a system outside of that set that they wish to be authenticated against the system under test should reject the request. If a reference to the recording auditing system is sent to the system under test and the recording auditing system is being suggested as the authentication provider system may later look at the recording auditing system to determine if the system under test communicated with the recording auditing system. If so system would know that the system under test has violated the policy by communicating with a system outside of the pre defined set of authentication systems.

The reference token combinations and records associated with an unauthorized computer system may be maintained and stored in a database or in any suitable storage location. In one embodiment system may record all communications with a given unauthorized computer system and may generate reports associated with the unauthorized computer system. The method further comprises maintaining a record of unauthorized computer systems that have established communication against a policy.

In one embodiment system facilitates security assessments of software applications running on an on demand system where data elements and fields can contain unknown data types and content or where data type and content can vary based upon an individual customer configuration in a multi tenant environment. In one embodiment during code analysis the installation or intended runtime environment for the code is queried dynamically to resolve data fields referenced in the code to determine their data type or validation logic. An analysis tool may then use this information to determine if the validation or data type would make the usage of the field resistant to vulnerabilities that could exist if the field was not validated or allowed any data to be stored.

In one embodiment services may allow customers to upload arbitrary HTML or software code to be executed by system in the context of the customers organizations. When performing static analysis of the software application for security purposes data objects or fields referenced in data code are of known data types in order for the security software to accurately report of any vulnerabilities that the software application may contain. Because customers may have created new data elements or changed existing elements data type resolution may occur at runtime. System dynamically resolves the data types against specific instances of a customer s on demand service to resolve data fields and objects as they are defined by that customer and system considers the results in the security assessment of software.

Each database can generally be viewed as a collection of objects such as a set of logical tables containing data fitted into predefined categories. A table is one representation of a data object and may be used herein to simplify the conceptual description of objects and custom objects according to the present invention. It should be understood that table and object may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example a CRM database may include a table that describes a customer with fields for basic contact information such as name address phone number fax number etc. Another table might describe a purchase order including fields for information such as customer product sale price date etc. In some multi tenant database systems standard entity tables might be provided for use by all tenants. For CRM database applications such standard entities might include tables for Account Contact Lead and Opportunity data each containing pre defined fields. It should be understood that the word entity may also be used interchangeably herein with object and table .

In some multi tenant database systems tenants may be allowed to create and store custom objects or they may be allowed to customize standard entities or objects for example by creating custom fields for standard objects including custom index fields. In certain embodiments for example all custom entity data rows are stored in a single multi tenant physical table which may contain multiple logical tables per organization. It is transparent to customers that their multiple tables are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.

Any suitable programming language can be used to implement the routines of particular embodiments including C C Java assembly language etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single processing device or multiple processors. Although the steps operations or computations may be presented in a specific order this order may be changed in different particular embodiments. In some particular embodiments multiple steps shown as sequential in this specification can be performed at the same time.

Particular embodiments may be implemented in a computer readable storage medium for use by or in connection with the instruction execution system apparatus system or device. Particular embodiments can be implemented in the form of control logic in software or hardware or a combination of both. The control logic when executed by one or more processors may be operable to perform that which is described in particular embodiments.

A processor includes any suitable hardware and or software system mechanism or component that processes data signals or other information. A processor can include a system with a general purpose central processing unit multiple processing units dedicated circuitry for achieving functionality or other systems. Processing need not be limited to a geographic location or have temporal limitations. For example a processor can perform its functions in real time offline in a batch mode etc. Portions of processing can be performed at different times and at different locations by different or the same processing systems. A computer may be any processor in communication with a memory. The memory may be any suitable processor readable storage medium such as random access memory RAM read only memory ROM magnetic or optical disk or other tangible media suitable for storing instructions for execution by the processor.

Particular embodiments may be implemented by using a programmed general purpose digital computer by using application specific integrated circuits programmable logic devices field programmable gate arrays optical chemical biological quantum or nanoengineered systems components and mechanisms may be used. In general the functions of particular embodiments can be achieved by any means as is known in the art. Distributed networked systems components and or circuits can be used. Communication or transfer of data may be wired wireless or by any other means.

It will also be appreciated that one or more of the elements depicted in the drawings figures can also be implemented in a more separated or integrated manner or even removed or rendered as inoperable in certain cases as is useful in accordance with a particular application. It is also within the spirit and scope to implement a program or code that can be stored in a machine readable medium to permit a computer to perform any of the methods described above.

As used in the description herein and throughout the claims that follow a an and the includes plural references unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise.

While the invention has been described by way of example and in terms of the specific embodiments it is to be understood that the invention is not limited to the disclosed embodiments. To the contrary it is intended to cover various modifications and similar arrangements as would be apparent to those skilled in the art. Therefore the scope of the appended claims should be accorded the broadest interpretation so as to encompass all such modifications and similar arrangements.

