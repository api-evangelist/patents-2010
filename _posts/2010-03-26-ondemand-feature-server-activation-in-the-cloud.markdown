---

title: On-demand feature server activation in the cloud
abstract: A feature activation system provides a mixed computing environment that includes a server and cloud computing. The hybrid model splits the execution of a communication feature between the cloud and the enterprise server installed at or with the enterprise. Service activation is linked to a portal that can communicate with either an intermediary system or directly with an entity executing computer programs in the cloud. When the customer desires to use a feature, the customer accesses the portal and activates the feature the enterprise desires. In the background, the portal instantiates a virtual machine, on any cloud platform, and then installs the feature with virtual machine on that cloud server. To execute feature, the enterprise server and the virtual machine exchange information between the server and the cloud and allow the feature to access the enterprise server or enterprise data. When the user has completed feature execution, the instance of the feature may be stopped and discarded and any data may be saved either at the enterprise or within the cloud.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137213&OS=09137213&RS=09137213
owner: Avaya Inc.
number: 09137213
owner_city: Basking Ridge
owner_country: US
publication_date: 20100326
---
Communication systems often include features that a business can use to further enhance their communications abilities. These features could be for example exporting of call logs to travelers who are away from the office recording calls or conferences conferencing with external businesses web conferencing presence servers analytics and other features. Unfortunately there are generally two ways of activating features with a communication system. The first method requires bundling the features within a feature server that is sold to the business. For small and medium size companies the feature server is extremely expensive and generally is cost prohibitive. The other method requires the enterprise to activate or use the feature at a distant computing system e.g. a remote server made available to the enterprise. The remote systems are not owned by the entity executing the software. As such third parties can provide computing services to entities on a subscription basis. However the remote system for activating features is also not always practical because enterprises often have difficulty determining what features are needed or would be used. Thus enterprises often purchase subscriptions that are not used or of little use. Further the remote servers that are used for the features often fail and leave the enterprise with no ability to use the features.

The embodiments presented herein provide systems and methods for executing features in a mixed computing environment that includes a server and cloud computing. The hybrid model splits the features between the cloud and the enterprise server installed at or with the enterprise. Further feature activation may be on demand. Thus the embodiments provide a turn key solution with an on demand service activation feature. Service activation is linked to a portal that can communicate with either an intermediary system or directly with an entity executing computer programs in the cloud. When the customer desires to use a feature the customer accesses the portal and activates the feature the enterprise desires. In the background the portal instantiates a virtual machine on any cloud platform and then installs the feature with virtual machine on that cloud server. To execute feature the enterprise server and the virtual machine exchange information between the server and the cloud and allow the feature to access the enterprise server or enterprise data. When the user has completed feature execution the instance of the feature may be stopped and discarded and any data may be saved either at the enterprise or within the cloud.

Thus the customer which may be a small or medium sized business owner is provided an on demand service activation feature that eliminates the need for a subscription service or the need to install expensive communications equipment at the enterprise. Some examples of features that can exploit the novel architecture and methods include i export of call logs to travelers ii recording calls and or conferences on the cloud this can be done via an extension in the cloud or at the local server that receives the audio stream iii conferencing with users external to the business and iv webconferencing v executing a presence server in the cloud vi generating analytics vii allowing a customer to test a service or feature i.e. customers can test new features with data from their own installations as opposed to demonstrations vii providing all other feature servers with web access etc. The small business owner may subsidize the payment of the service by receiving advertisements. The feature service provider need not own the cloud infrastructure or the small business owner s on premise equipment.

For enterprises where cloud data privacy is an issue there are several options. If access is through a personal endpoint e.g. an iPhone enterprise laptop etc. there can be a shared key SK between the enterprise and the endpoint. Data is encrypted with the SK and stored in the cloud. Data is decrypted at the secure endpoint after a secure download. The decryption encryption can also be done with a public private key pair. The data privacy scheme ensures that only encrypted data is stored in the cloud. Other embodiments use an encrypted file system for storage in the cloud that can include an on access on the fly decryption at the local server e.g. using Truecrypt or similar techniques .

The phrases at least one one or more and and or are open ended expressions that are both conjunctive and disjunctive in operation. For example each of the expressions at least one of A B and C at least one of A B or C one or more of A B and C one or more of A B or C and A B and or C means A alone B alone C alone A and B together A and C together B and C together or A B and C together.

The term a or an entity refers to one or more of that entity. As such the terms a or an one or more and at least one can be used interchangeably herein. It is also to be noted that the terms comprising including and having can be used interchangeably.

The term automatic and variations thereof as used herein refers to any process or operation done without material human input when the process or operation is performed. However a process or operation can be automatic even though performance of the process or operation uses material or immaterial human input if the input is received before performance of the process or operation. Human input is deemed to be material if such input influences how the process or operation will be performed. Human input that consents to the performance of the process or operation is not deemed to be material .

The term computer readable medium as used herein refers to any tangible storage that participates in providing instructions to a processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example NVRAM or magnetic or optical disks. Volatile media includes dynamic memory such as main memory. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium magneto optical medium a CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM a solid state medium like a memory card any other memory chip or cartridge or any other medium from which a computer can read. When the computer readable media is configured as a database it is to be understood that the database may be any type of database such as relational hierarchical object oriented and or the like. Accordingly the embodiments is considered to include a tangible storage medium and prior art recognized equivalents and successor media in which the software implementations of the present embodiments are stored.

The terms determine calculate and compute and variations thereof as used herein are used interchangeably and include any type of methodology process mathematical operation or technique.

The term module or component as used herein refers to any known or later developed hardware software firmware artificial intelligence fuzzy logic or combination of hardware and software that is capable of performing the functionality associated with that element. Also while the embodiments are described in terms of examples it should be appreciated that individual aspects of the embodiments can be separately claimed.

The phrase in communication with can mean any exchange of signals information and or data between two or more modules systems components or other items described herein using any system protocol method and or format regardless of whether the communications are wired or wireless.

In the appended figures similar components and or features may have the same reference label. Further various components of the same type may be distinguished by following the reference label by a letter that distinguishes among the similar components. If only the first reference label is used in the specification the description is applicable to any one of the similar components having the same first reference label irrespective of the second reference label.

The ensuing description provides embodiments only and is not intended to limit the scope applicability or configuration of the appended claims. Rather the ensuing description will provide those skilled in the art with an enabling description for implementing the embodiments. It is to be understood that various changes may be made in the function and arrangement of elements without departing from the spirit and scope of the appended claims as set forth in the appended claims.

An embodiment of a feature provider system is shown in . The feature provider system can include an enterprise server a network and or an intermediary server and or a cloud . The cloud can include a cloud server . The one or more components of the feature provider system shown in may be hardware software or a combination of hardware and software. The components can be servers or computing systems as described in conjunction with . Each of the components described in conjunction with and the one or more other components modules software functions or other items described hereinafter may communicate with each other. The function and interaction of the components of shall be explained hereinafter.

An enterprise server can be any computing system which offers communication or software functionality for an enterprise. Generally the enterprise server may be a computing system that is provided to a small or medium sized organization. The enterprise server can complete communications or other actions for the entity or enterprise. An embodiment of the enterprise server is described in conjunction with . In one embodiment the enterprise server is a private branch exchange PBX .

Optionally the enterprise server can communicate with an intermediary server through a network . The network can be any communication system. For example a network may include one of but is not limited to an Intranet the Internet a wide area network a local area network a wireless local area network or other communication system or network. The network may use any format or protocol to communicate data or other information between the enterprise server and one or more other components as shown in .

The intermediary server optionally can receive signals from the enterprise server and communicate signals or actions to the cloud . In embodiments the intermediary server is executed by an organization that assists the enterprise server in providing features. An embodiment of an intermediary server is shown in . The cloud can be any cloud computing environment executed over the Internet Intranet or other computing system networks and or environments. Some computing system environments are explained in conjunction with . The cloud may include a cloud server which can represent a single computing system as described in conjunction with . The cloud server can execute a feature application for the enterprise server . Cloud computing is well known in the art and will not be explained further here and after.

An embodiment of an enterprise server is described in conjunction with . The enterprise server may be a computing system as described in conjunction with . The enterprise server may include one or more modules functions or components that execute to provide communication features or the ability to enable communication features for the enterprise. The enterprise server can include a feature user interface UI a feature application programming interface API an encryption module and or an enterprise feature code database . The several modules shall be explained as being software code executed by the enterprise server . However in alternative embodiments the modules and may be logics circuits or other hardware especially designed in an application specific integrated circuit ASIC or field programmable gate array FPGA or other hardware. Thus modules and shall be described as being software code executed within a computing system.

The feature user interface is operable to receive user input . User input can include a selection of an already enabled feature a request to enable a feature a request to disable a feature and or one or more other user inputs. The user inputs may be received in an input device as explained in conjunction with . The user inputs can instruct the feature user interface to execute functions or activities the user desires.

The feature user interface can interpret the user input and provide signals to the feature API to execute or conduct certain actions related to the features. The feature user interface may also communicate with an intermediary server or a cloud server through the network . As such the feature user interface can provide a display of features from the intermediary server and or cloud server that can be enabled or selected by the user with user input . Further the feature user interface send signals to the intermediary server or cloud server to enable or execute certain features.

A feature API can translate functions or signals from the feature user interface into a protocol or format readable or understandable by an intermediary server or cloud server . The feature API can also execute some feature code on the enterprise server such as receiving initial inputs or rendering the UI displays and or can interface with the enterprise feature code database . A feature API is the main processing component of the enterprise server that allows functioning of the feature at the enterprise server .

An encryption module can be optional. The optional encryption module may encrypt or decrypt communications to and from either the intermediary server or the cloud . The encryption can be any encryption including pretty good privacy PGP encryption private key encryption public key encryption or any other type of encryption that may be executed with the enterprise server .

An enterprise feature code database may be operable to store one or more portions of feature code within the enterprise server . In embodiments the feature code stored with the enterprise server is not complete. As such in order to execute or enable the feature code the enterprise server can execute a portion of the feature code in the cloud . Thus the enterprise feature code database may only provide enough feature codes to complete the interface between enterprise server and the cloud . The enterprise feature code database in some embodiments may also be able to store data related to a feature. For example a first execution of a feature may result in the creation of data. The data may be stored in the enterprise feature code database and then retrieved and used in the second execution of a feature at a later time.

An embodiment of an intermediary server is shown in . It should be noted that the intermediary server is an optional component within the feature provider system . As such it is possible for the enterprise server to interact directly with the cloud without the intermediary server . However in alternative embodiments the intermediary server can provide functionality that allows the interaction between the enterprise server and the cloud .

The intermediary server may be a computer system as explained in conjunction with and as such the components or modules described in conjunction with may be software code executed by the intermediary server . However in other embodiments the components or modules described in conjunction with may be hardware created in an ASIC FPGA or some other hardware. The intermediary server can include a mediator module a procedure instantiator an encryption module a feature code database and or a billing function . The mediator module can communicate or mediate the communications between the enterprise server and the cloud . As such the mediator module can receive a request to instantiate to enable a feature or to disable a feature from the enterprise server . The mediator module may interpret the communications from the enterprise server and send signals to the procedure and instantiator to instantiate enable disable or to conduct some other action associated with the feature.

The procedure instantiator can instantiate feature code or instruct the cloud to instantiate feature code associated with the feature which is the subject of the communication from the enterprise server . The procedure instantiate can retrieve feature code from the feature code database and attach the code to a transmission packet for the cloud . The communication to the cloud may also include instructions or signals that require the execution of the feature code. In other circumstances the procedure instantiator may also instruct the cloud to deactivate disable or conduct some other action on feature code that is already executing in the cloud .

The feature code database can be any database as described in conjunction with . The feature code database may be able to store one or more items of feature code software that may be executed on the cloud . An encryption module may encrypt or decrypt communications that are sent or received from the enterprise server or the cloud . The encryption module may be the same or similar to the encryption module and as such shall not be explained further herein.

Along with the encryption module the intermediary server may optionally include a billing function . A billing function is a module component or software that receives billings or bills from a cloud or a third party that executes the feature within the cloud and requires payment. The billing function may receive the information for payment and forward or reformat the information for forwarding to the enterprise server . In some embodiments the billing function may also receive payment from the enterprise server and forward the payment to the cloud or the third party that executes the feature within the cloud . As such the intermediary server may act as a billing entity for the feature provider system .

An embodiment of a cloud computing system is shown in . The cloud as explained in conjunction with may include one or more servers which may be computer systems as described in conjunction with . The server or other computer system may provide some basic computing hardware such as cloud processing memory and or storage . The cloud processing can be any processor or system that executes the feature code. The memory can be any memory or storage that stores the feature code either during execution or before or after the feature is instantiated and executed. The storage can be any storage or database as explained in conjunction with which may store all or a portion of the feature code or may store data related to one or more features. The cloud processing system can be in communication with the enterprise server or the intermediary server .

Generally the method begins with a start operation and terminates with an end operation . While a general order for the steps of the method are shown in the method can include more or fewer steps or arrange the order of the steps differently than those shown in . The method can be executed as a set of computer executable instructions executed by a general or special purpose computer system and encoded or stored on a computer readable medium. Hereinafter the method shall be explained with reference to the systems components modules software data structures etc. described in conjunction with .

The enterprise server receives selection of a feature website in step . The selection of the feature website may be through user input received by the feature user interface . The feature user interface may provide a link or portal to the website at the intermediary server . Thus when the user selects a button or other user interface device that user input is provided to the features interface to select or communicate with a website at the intermediary server .

The enterprise server receives selection from one or more features in step . Upon selecting the feature website the feature user interface can provide a display of the feature website to the user. The user may then use one or more user interface devices to select one or more features for which the user desires to enable. The user input is received by the feature user interface as selections of one or more features. These selections may then be communicated to the intermediary server .

The enterprise server may also receive one or more parameters for the features in step . Some features may include parameters. For example a feature may be operable only for a pre determined period of times thus a feature may be selected that will be enabled for three months and then disabled at the end of that period of times. The pre determined amount of time or the desire to have the feature only enabled for a pre determined period of time can be a parameter that is received by the feature user interface . Other parameters may also be received for one or more other features. The feature user interface receives the selections or parameter s to user input . These user parameters may also be communicated through intermediary server .

The intermediary server may receive the features selection and the parameters at the mediator module . The mediator module may communicate these selections to procedure instantiator which can store the indication of feature selection in the feature code database in step . In alternative embodiments the enterprise server may also save the indication of features selection in the enterprise feature code database . Thus both the intermediary server and enterprise server may store information about features selection such as the feature selected in step and the parameters received in step .

Upon storing this information the procedure instantiator may push one or more items of feature code to the enterprise server in step . For example the enterprise server may desire to instantiate or execute a feature in the future. However in order to execute the feature the enterprise server may need at least a portion of the code related to the feature. As such the procedure instantiator can retrieve feature code from the feature code database and provide the code to the encryption module to be sent to the enterprise server . The enterprise server may receive the code at the feature API and store the code in the enterprise feature code database .

An embodiment of a method for executing a feature in a combined environment with an enterprise server and a cloud is shown in . The method in is a hybrid model where some portions of the feature are executed at the enterprise server and some portions are executed at the cloud . The method can be completed or executed by one of three systems. For example some functions may be executed at the enterprise server some at an intermediary server and some at the cloud . The method steps that are executed at each of these different systems are separated by lines and . In some embodiments intermediary server is optional and those tasks that the intermediary server completes are executed by the cloud or the enterprise server .

A user selects a feature in step . The user may select a feature on the feature user interface by selecting an interface device which provides user input to an enterprise server . A feature user interface can receive the user input to determine which feature is selected. The feature user interface may then provide another display to the user for the selection of parameters. Thus the feature user interface can receive second user input from the feature user interface for parameters in step . Generally the feature selection and the received parameters apply to a feature that has already been enabled and can be selected for use by the user through the enterprise server .

The feature user interface provides the feature selection and the received parameters to the feature API . The feature API can extract one or more portions of feature code from the enterprise feature code database to begin the execution of the feature. However the feature API sends the selection and received parameters on to the intermediary server in step . In some embodiments the selection and the parameters are encrypted with encryption module before sending the selection of the feature and the parameters to the intermediary server . The intermediary server receives the selection of the feature and the parameters in step . The mediator module of the intermediary server can receive the selection and parameters. The mediator module can then send the selection of the feature and the parameters to the procedure instantiator . In some embodiments the mediator module may translate or convert the signals received for the feature and the parameters into a form understandable by the procedure instantiator .

The procedure instantiator can interpret the selection and the parameters and extract the correct feature code from the feature code database . From the metadata or other information about the feature code in the feature code database the procedure instantiator can determine the instantiation requirements for the feature in step . The instantiation requirements can delineate the processing speeds storage requirements memory requirements or other requirements needed for the feature to execute properly in a cloud .

The procedure instantiator may then package the feature code and the required instantiation requirements into a packet and send the packet to the cloud . This packet can be an activation directive or request sent to the cloud in step . The cloud can receive the activation directive or request. In response to receiving activation directive or request the cloud can instantiate or activate the feature in step . To activate the feature the cloud may send the feature code to a cloud server . The cloud server can store the code in storage and in memory and then execute the code in the cloud processing from memory . Executing the feature code instantiates an instance of the feature in the cloud server which then can provide functionality to the enterprise server .

In some embodiments the intermediary server may also push code to the enterprise server in step . Thus the intermediary server can store all the code in the feature code database for use in executing the feature. The procedure instantiator can retrieve the feature code required by the enterprise server from the feature code database and send that code to the enterprise server . In embodiments the encryption module can encrypt the code or information sent from the procedure instantiator to the enterprise server .

The enterprise server can receive the code and then install the code in step . The enterprise server can receive the encrypted code at the encryption module and decrypt the code to provide to the feature API . The feature API can store the feature code into the enterprise feature code database . Further the feature API may then execute the feature code required by the enterprise server . In this way both the cloud server and the enterprise server execute portions of the feature code in a hybrid system.

The method flows through page connector A to . In the cloud executes the feature . The cloud processing function can execute the feature code and communicate results to the intermediary server or to the enterprise server . During execution of the feature both the intermediary server and the enterprise server can communicate with the cloud in step . Execution of the feature is on going and provides communication signals between the cloud intermediary server and or the enterprise server during execution. It should be noted that step is shown spanning the areas of the cloud the intermediary server and the enterprise server . This depiction does not limit the embodiments to the use of the intermediary server some embodiments may include the cloud and enterprise server communicating directly without the intermediary server .

At some point it is possible that the enterprise server to request that the feature be deactivated in step . The selection of the deactivation of the feature can be received as user input at the feature user interface . The communication of the deactivation selection can be communicated by the feature user interface to the feature API . The feature API can select the deactivation signal and send the signal through the encryption module to either the intermediary server or the cloud . If received by the intermediary server at the mediator module the mediator module can send the signal to the procedure instantiator to deactivate the feature. The procedure instantiator can then send the signal to the encryption module for the cloud to deactivate the feature in step .

The cloud can receive the deactivation signal and then deactivate the feature in step . Deactivating the feature may include the cloud processing stopping the execution of the feature clearing the memory and storing any information that must be kept in storage . The information stored in storage may be results that are needed by the enterprise server . As such the cloud server can send the results in step . The results may be sent to the intermediary server or the enterprise server . The enterprise server may receive the results in step . The results can be received by the encryption module and decrypted for the procedure instantiator . The procedure instantiator may store some or all of the results in the feature code database and provide the results to the mediator module . The mediator module can send the results to the enterprise server . In other embodiments the procedure instantiator can send the results to the encryption module for the enterprise server .

Regardless of the source of the results whether the results are from the cloud or the intermediary server the enterprise server can receive the results in step . The results may be stored by the enterprise server in the enterprise feature code database . The feature API can provide the results through the feature user interface to the user.

In alternative embodiments the enterprise server after deactivating a feature may be sent an uninstall signal in step . The uninstall signal may be sent from the intermediary server to the enterprise server to uninstall the feature from enterprise server . The uninstall signal may be received by the enterprise server in step . To uninstall the feature the feature API may delete a portion of code related to the feature from the feature code database . As such the enterprise server may be unable to activate the feature in the future until the feature is re enabled at a future time.

Environment further includes a network . The network may can be any type of network familiar to those skilled in the art that can support data communications using any of a variety of commercially available protocols including without limitation SIP TCP IP SNA IPX AppleTalk and the like. Merely by way of example the network maybe a local area network LAN such as an Ethernet network a Token Ring network and or the like a wide area network a virtual network including without limitation a virtual private network VPN the Internet an intranet an extranet a public switched telephone network PSTN an infra red network a wireless network e.g. a network operating under any of the IEEE 802.11 suite of protocols the Bluetooth protocol known in the art and or any other wireless protocol and or any combination of these and or other networks. The network may be the same or similar to network .

The system may also include one or more server . In this example server is shown as a web server and server is shown as an application server. The web server which may be used to process requests for web pages or other electronic documents from user computers and . The web server can be running an operating system including any of those discussed above as well as any commercially available server operating systems. The web server can also run a variety of server applications including SIP servers HTTP servers FTP servers CGI servers database servers Java servers and the like. In some instances the web server may publish operations available operations as one or more web services.

The environment may also include one or more file and or application servers which can in addition to an operating system include one or more applications accessible by a client running on one or more of the user computers . The server s and or may be one or more general purpose computers capable of executing programs or scripts in response to the user computers and . As one example the server may execute one or more web applications. The web application may be implemented as one or more scripts or programs written in any programming language such as Java C C or C and or any scripting language such as Perl Python or TCL as well as combinations of any programming scripting languages. The application server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase IBM and the like which can process requests from database clients running on a user computer .

The web pages created by the server and or may be forwarded to a user computer via a web file server . Similarly the web server may be able to receive web page requests web services invocations and or input data from a user computer and can forward the web page requests and or input data to the web application server . In further embodiments the web server may function as a file server. Although for ease of description illustrates a separate web server and file application server those skilled in the art will recognize that the functions described with respect to servers may be performed by a single server and or a plurality of specialized servers depending on implementation specific needs and parameters. The computer systems and web file server and or web application server may function as the system devices or components described herein.

The environment may also include a database . The database may reside in a variety of locations. By way of example database may reside on a storage medium local to and or resident in one or more of the computers . Alternatively it may be remote from any or all of the computers and in communication e.g. via the network with one or more of these. The database may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers may be stored locally on the respective computer and or remotely as appropriate. The database may be a relational database such as Oracle 101 that is adapted to store update and retrieve data in response to SQL formatted commands.

The computer system may additionally include a computer readable storage media reader a communications system e.g. a modem a network card wireless or wired an infra red communication device etc. and working memory which may include RAM and ROM devices as described above. The computer system may also include a processing acceleration unit which can include a DSP a special purpose processor and or the like.

The computer readable storage media reader can further be connected to a computer readable storage medium together and optionally in combination with storage device s comprehensively representing remote local fixed and or removable storage devices plus storage media for temporarily and or more permanently containing computer readable information. The communications system may permit data to be exchanged with the network and or any other computer described above with respect to the computer system . Moreover as disclosed herein the term storage medium may represent one or more devices for storing data including read only memory ROM random access memory RAM magnetic RAM core memory magnetic disk storage mediums optical storage mediums flash memory devices and or other machine readable mediums for storing information.

The computer system may also comprise software elements shown as being currently located within a working memory including an operating system and or other code . It should be appreciated that alternate embodiments of a computer system may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

In the foregoing description for the purposes of illustration methods were described in a particular order. It should be appreciated that in alternate embodiments the methods may be performed in a different order than that described. It should also be appreciated that the methods described above may be performed by hardware components or may be embodied in sequences of machine executable instructions which may be used to cause a machine such as a general purpose or special purpose processor or logic circuits programmed with the instructions to perform the methods. These machine executable instructions may be stored on one or more machine readable mediums such as CD ROMs or other type of optical disks floppy diskettes ROMs RAMs EPROMs EEPROMs magnetic or optical cards flash memory or other types of machine readable mediums suitable for storing electronic instructions. Alternatively the methods may be performed by a combination of hardware and software.

Specific details were given in the description to provide a thorough understanding of the embodiments. However it will be understood by one of ordinary skill in the art that the embodiments may be practiced without these specific details. For example circuits may be shown in block diagrams in order not to obscure the embodiments in unnecessary detail. In other instances well known circuits processes algorithms structures and techniques may be shown without unnecessary detail in order to avoid obscuring the embodiments.

Also it is noted that the embodiments were described as a process which is depicted as a flowchart a flow diagram a data flow diagram a structure diagram or a block diagram. Although a flowchart may describe the operations as a sequential process many of the operations can be performed in parallel or concurrently. In addition the order of the operations may be re arranged. A process is terminated when its operations are completed but could have additional steps not included in the figure. A process may correspond to a method a function a procedure a subroutine a subprogram etc. When a process corresponds to a function its termination corresponds to a return of the function to the calling function or the main function.

Furthermore embodiments may be implemented by hardware software firmware middleware microcode hardware description languages or any combination thereof. When implemented in software firmware middleware or microcode the program code or code segments to perform the necessary tasks may be stored in a machine readable medium such as storage medium. A processor s may perform the necessary tasks. A code segment may represent a procedure a function a subprogram a program a routine a subroutine a module a software package a class or any combination of instructions data structures or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and or receiving information data arguments parameters or memory contents. Information arguments parameters data etc. may be passed forwarded or transmitted via any suitable means including memory sharing message passing token passing network transmission etc.

While illustrative embodiments have been described in detail herein it is to be understood that the concepts may be otherwise variously embodied and employed and that the appended claims are intended to be construed to include such variations except as limited by the prior art.

