---

title: Method and system for action suggestion using browser history
abstract: Disclosed is a method and system for displaying one or more actions associated with a domain. A server computer receives over a network from a client-side module executing on a computing device a Uniform Resource Locator (URL) associated with a web page to which a user has navigated via a browser executing on the computing device. The server computer determines that the web page is part of a domain that the user has navigated to more than a predetermined number of times within a given period of time. The server computer determines a category associated with the web page and determines one or more actions associated with the domain. The server computer transmits to the computing device for display in the browser a link, the link representing an action associated with the domain and with the category associated with the web page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08863000&OS=08863000&RS=08863000
owner: Yahoo! Inc.
number: 08863000
owner_city: Sunnyvale
owner_country: US
publication_date: 20100407
---
The present disclosure relates to web pages and more specifically to a method and system for action suggestion using browser history.

The structure of the World Wide Web is based on web pages and domain names associated with those web pages. Each web page is identified by its Uniform Resource Locator URL . When a user saves a bookmark the user saves the URL associated with a web page to which the user may want to return. When a user signs up for a Really Simple Syndication RSS feed the user obtains information from a single web page source. Further each instance of a typical web browser is set up to display a single web page.

Despite the structure of the web being based on individual web pages the intent of a user of the web is often not based on a particular web page itself but rather based on concepts or topics of interest.

In one aspect a server computer receives over a network from a client side module executing on a computing device a Uniform Resource Locator URL associated with a web page to which a user has navigated via a browser executing on the computing device. The server computer determines that the web page is part of a domain web site that the user has navigated to more than a predetermined number of times within a given period of time. The server computer determines a category associated with the web page and determines one or more actions associated with the domain. The server computer transmits to the computing device for display in the browser a link the link representing an action associated with the domain and with the category associated with the web page.

In one embodiment a set of topics associated with the web page is determined by the server computer. In one embodiment the server computer determines a predetermined number of supported web pages for each category. In one embodiment the server computer determines steps needed to be performed to complete the action for each of the predetermined number of web pages within the category. In one embodiment the determined steps are stored in a storage medium. In one embodiment the transmitting of a link representing an action further includes transmitting a link that when selected causing data to be entered in a web form.

In another aspect a computing device determines that a web page navigated to by a user of a browser executing on the computing device is part of a domain that the user has navigated to more than a predetermined number of times within a given period of time. The computing device determines a category associated with the web page. The browser then displays one or more actions associated with the domain and with the category associated with the web page.

In one embodiment the computing device determines a set of topics associated with the web page. In one embodiment the computing device determines a predetermined number of supported web pages in the domain and associated with the category. In one embodiment the computing device determines steps needed to be performed to complete the action for each of the predetermined number of web pages associated with the category.

These and other aspects and embodiments will be apparent to those of ordinary skill in the art by reference to the following detailed description and the accompanying drawings.

Embodiments are now discussed in more detail referring to the drawings that accompany the present application. In the accompanying drawings like and or corresponding elements are referred to by like reference numbers.

Various embodiments are disclosed herein however it is to be understood that the disclosed embodiments are merely illustrative of the disclosure that can be embodied in various forms. In addition each of the examples given in connection with the various embodiments is intended to be illustrative and not restrictive. Further the figures are not necessarily to scale some features may be exaggerated to show details of particular components and any size material and similar details shown in the figures are intended to be illustrative and not restrictive . Therefore specific structural and functional details disclosed herein are not to be interpreted as limiting but merely as a representative basis for teaching one skilled in the art to variously employ the disclosed embodiments.

In one embodiment the computing device transmits a request to download a client side module from the server computer . The client side module can appear in any area of the browser e.g. the left side of the browser the right side of the browser the top of the browser and or the bottom of the browser . In one embodiment the client side module is a sidebar. In another embodiment the client side module is a toolbar. In one embodiment the client side module modifies content displayed with e.g. below a web page address bar. In one embodiment the client side module is downloaded by the computing device step and once the client side module is downloaded a graphical user interface UI associated with the client side module is displayed when the browser navigates to a web page associated with or not associated with the service provider . In one embodiment the graphical UI is displayed if the user selects to have the UI displayed. In one embodiment the client side module e.g. sidebar or toolbar can be web based as the secondary content presentation framework is web based. This means that it can be shared via a domain link and the recipient can get a sidebar toolbar experience without requiring a download.

For example after downloading the client side module the user may use the web browser to navigate to a particular web page step . In one embodiment the web browser displays the web page in a first content area of the browser and displays content associated with the client side module in a second content area of the browser . The size of the first content area can be larger than or smaller than the size of the second content area . In one embodiment the size of either or both content areas is adjustable by the user. In one embodiment the client side module is accessed by the browser when a user of the computing device enters a particular web page domain name.

In one embodiment the computing device transmits a request for topics associated with the web page to which the browser has navigated step . The request for topics can be transmitting a URL of the web page to which the computing device has navigated. The request for topics can also be transmitting a copy of the content of the web page to which the user has navigated to the server computer .

In one embodiment the server computer includes a topic and category determination module . In one embodiment the topic and category module has previously analyzed the web page to which the user has navigated and has stored the results of its analysis in server storage e.g. a database . The server computer topic and category module can then use this previous analysis to quickly determine one or more topics associated with the web page. Alternatively the topic and category module analyzes the web page to determine a set of topics associated with the web page after receiving the request . A set of topics associated with a web page is defined herein as one or more topics associated with the web page. A topic may be part of or not part of the web page s title URL graphics etc. and is typically determined by analyzing at least a portion of the text of the web page.

In one embodiment the topic and category module also determines from data stored in server storage or from an analysis of the web page a set of categories associated with the web page. A category compared to a topic is a higher level of abstraction. For example if a web page is discussing a Nikon digital camera the topic of the web page can be digital cameras while the category of the web page can be purchasable products. A set of categories associated with a web page is defined herein as one or more categories associated with the web page.

The server computer transmits the set of topics and the set of categories associated with the web page to the computing device . In one embodiment the set of topics and categories have been ordered or ranked in accordance with their relevance to the web page itself. For example a set of topics associated with a web page about Nikon digital cameras can be listed as

In one embodiment a set of categories associated with the web page about Nikon digital cameras can be listed as 

In one embodiment the server computer e.g. the topic and category module transmits the entire set of topics and the entire set of categories to the computing device . In another embodiment the server transmits a predetermined number of the determined topics and categories e.g. the first topic and the first category in each set . The computing device receives the topics and categories step . In one embodiment the computing device stores the topics and categories in a storage e.g. a memory or database . The computing device displays the web page in the first content area of the web browser step and displays one or more of the topics and or categories in the second content area of the web browser step . In one embodiment the computing device configures the second content area of the web browser according to a received category step . For example if a category associated with a web page is Sports in one embodiment the computing device displays sports related advertisements in the second content area in addition to the received topics. As another example the computing device can display sports related graphics in the second content area in addition to the received topics. Further in one embodiment different user interfaces are shown based on categories of specific topics.

For purposes of this disclosure and as described in more detail below with respect to a computer or computing device such as the computing device and or server includes a processor and memory for storing and executing program code data and software which may also be tangibly stored or read from any type or variety of well known computer readable storage media such as magnetic or optical discs or RAM discs or tape by way of non limiting example. Computers can be provided with operating systems that allow the execution of software applications in order to manipulate data. Personal computers personal digital assistants PDAs wireless devices cellular telephones interne appliances media players home theater systems servers and media centers are several non limiting examples of computing devices. The computing device and the server can in one embodiment also include a display such as a screen or monitor. Further the server and or computing device may include one or more computers.

In one embodiment the server computer receives a request for topics associated with a search query that has been input into a search input area displayed by the browser in the first content area . The server computer transmits to the browser for display in the second content area of the browser topics associated with the search query. In one embodiment each topic associated with the search query corresponds to a category.

If the category is not generic the server computer chooses appropriate category specific application programming interfaces APIs to use to obtain data for sending to the computing device step . The server computer can include separate APIs for different categories. For example the server computer can include a sports API a shopping API a movies API and an any other category API representing an API for any other category. In one embodiment the server computer uses a specific API to acquire data that will be part of a transmitted entity associated with the web page. In one embodiment and as described in more detail below the server computer determines domain actions for a particular category step . The server computer can retrieve domain actions associated with a category from an actions database . The server computer then uses a data transmitting module to transmit category specific data e.g. an entity and or an action item associated with the category to the computing device step .

In one embodiment and as described in more detail below with respect to the computing device determines one or more domain actions for the category step . The computing device renders the actions with an actions renderer step . An action associated with a category can include for example a link to Blockbuster s web page that enables a user to rent a movie online if the category is Movies. In a further embodiment an action may include filling in Blockbuster s web form on the web page enabling a user to rent a movie online. These actions may be rendered by for example a user selecting a link a user selecting a checkbox etc.

An embodiment of pseudocode executed by the computing device for displaying topics in a detailed view is 

An embodiment of pseudocode executed by the server computer for displaying topics in a detailed view is 

In one embodiment the Topics tab also includes a Recent Topics section . The Recent Topics section includes topics recently viewed i.e. a topic recently selected by the user of the computing device after the user was notified of the topic . In one embodiment the topics listed in the Recent Topics section also shows the day or date that the user viewed the topic. In one embodiment the Topics tab also includes topic suggestions which are topics that are currently popular e.g. often searched via one or more search engines . In one embodiment when a user selects one of the topics displayed in the Topics tab the user is brought to a detailed view. In one embodiment and as shown in web page is a web page about a review of the Nintendo Wii console.

In the secondary content is not associated with the current web page. The My Interests user interface is a user dashboard that displays topics that a user is following recent topics they have viewed and suggested topics. In one embodiment a user accesses this user interface via a global button in the secondary content area and possibly from the browser chrome at any time during the browsing session.

In one embodiment the detailed view of the sidebar provides related topics which are other topics related to the topic of the web page in this example the Nintendo Wii console . In one embodiment if a user selects a related topic the user navigates in the sidebar to a detailed view for the selected topic. The detailed view shown in sidebar also includes an At a Glance tab . When selected the At a Glance tab shows a context specific view for the topic found. In this example Nintendo Wii has been categorized as a Product. Therefore the At a Glance tab displays shopping information e.g. pricing information links to online stores a link to eBay a link to Craigslist etc. . The sidebar also includes a News tab .

The user can navigate to the web page from the My Interests user interface a personalized search use case where content is displayed in the second content area and or a browsing use case where related topics are displayed in the second content area and from a shared link.

An embodiment of pseudocode of the computing device for displaying articles for a topic is as follows 

It should be noted that the article referenced above in the pseudocode can be replaced with a photograph a video etc.

An embodiment of pseudocode of the server computer for displaying articles for a topic is as follows 

It should be noted that the article referenced above in the pseudocode can be replaced with a photograph a video etc.

In one embodiment a browser history associated with the browser is associated with topics. Thus in one embodiment two web pages not immediately seen to be related based on their titles could in fact be found to be related based on the major topics of the web pages. Topic based browser history can be displayed based on the topics the user is currently browsing. Thus when a user accesses information about the topics the user is following or which are related to the web page to which the user has currently navigated browser history will be accessed such that web pages from the user s history which correlate to the topic s in question will be shown.

In one embodiment the client side module transmits the URL of the web page to the server computer . The server computer receives the URL and obtains e.g. retrieves from server storage a set of topics associated with the web page. In one embodiment the server computer determines other topics related to the set of topics associated with the web page and also determines web pages associated with the other topics that the browser has navigated to within a predetermined amount of time. The server computer transmits the other topics and links to the web pages associated with the other topics to the client side module for display in the second content area of the browser . In another embodiment the client side module determines other topics related to the set of topics associated with the web page and determines web pages associated with the other topics that the browser has navigated to within a predetermined amount of time.

If there is another URL associated with the currently displayed topic in the topic history database the client side module retrieves the next URL from the topic history database step . The client side module then displays the link to the found URL step in the second content area of the browser . This is shown above in the Recent Topics section of . In one embodiment the client side module only performs step if the second content area e.g. sidebar is open. In a further embodiment the client side module displays an alert that there is a new topic to display. If the user accepts the alert the new topic is displayed. In one embodiment topic encounters stored to storage are used as a cue for when to show notifications to the user.

In one embodiment to determine the web pages that other users have visited which relate to particular topics in a particular period of time the topics related to URLs are stored in a database. This results in the content of the database being keyed and therefore searchable by topic. Thus the URLs that the user has previously visited related to that topic can be determined. In one embodiment a score is calculated for each stored URL. In one embodiment this score is based on total visits and or date of last visit. In one embodiment topics related to a web page are automatically added to a user s topic history. In another embodiment the user has to perform an explicit action e.g. a topic must be accessed viewed for an item to be added to the user s topic history.

An embodiment of pseudocode of the computing device for adding a URL and topics to the topic history database is as follows 

Referring again to links from the user s topic based browser history are shown. For example the links titled amazon kindle Kobe Bryant and kobe bryant are links from the user s browser history. These links also show the data from the last visit timestamp field e.g. 44 mins ago 48 mins ago and 49 mins ago . Thus the client side module can maintain a browser history associated with topics of web pages.

In one embodiment the client side module scans the web sites across broad categories to which a particular user frequently navigates. The client side module can then use that information to suggest actions for those categories based on the history.

For example suppose a service provider e.g. Yahoo Inc. of Sunnyvale Calif. is presenting a user interface based around a movie that is available for sale or rent. In one embodiment the client side module determines which domain s involved in movie sales the user navigated to the most. The client side module can then provide buttons to buy or rent from those web sites based on the user s history.

The server computer then identifies particular web sites also referred to as best of breed sites in each identified category step . The server computer then determines how to perform some common actions across the identified web sites step . This information is then stored in server storage step . In one embodiment the server computer then transmits the information to the client side module so that the client side module can display the stored action s step .

In one embodiment the actions suggested include actions from sites that are applicable across categories e.g. Facebook and or Twitter . For example a user can be viewing a movie topic and a Twitter action will appear because Twitter is stored in the user s history and interest profile.

The Action record includes an Action Type field . The Action Type field corresponds to an enumerated value uniquely identifying the type of action such as buy ticket show athlete player profile etc. . The Action record also includes a Category Type field which corresponds to a list of one or more user interface categories in which this action is valid. The Action record also includes a Provider Name field which corresponds to a name for the provider e.g. Amazon.com ESPN NetFlix etc. . The Action record also includes a Provider Domain which corresponds to the domain name for the provider s website which can be correlated to the domain based browser history . The Action record also includes an Action URL Template field which corresponds to a string containing a template for the URL to navigate to in order to perform this action. The string can contain substitution codes for live values related to the specific instance in which this action is appearing such as the specific term being considered the zip code of the current user etc. For example FoxSports.com supports the action show athlete player profile with the following URL http msn.foxsports.com player statsId . In one embodiment this URL is stored in the Action URL Template field with substitution codes for league and playerID that are filled in from the live data obtained by the client side module at the time these actions are presented.

Referring again to the client side module determines if there are additional actions in the actions database step . If there are additional actions the client side module determines whether the Action Type field of the Action record is valid for the current user interface UI category displayed by the client side module step . If not the process returns to step to obtain the next action from the actions database . If the Action Type field is valid for the current UI the client side module determines whether the Provider Domain field of the Action record is in the domain history step . If not the process returns to step to obtain the next action from the actions database . If so the client side module adds the action and the corresponding domain visit count to an action list step in the actions database .

If there are no additional actions in step the client side module sorts the current action list in the actions database step . In one embodiment the client side module then determines whether to display more than one action step . If not the client side module forms a UI and provides a link for the first action step . The process then ends step . If so the client side module retrieves the next action from the sorted list step . The client side module then determines whether there are additional actions step . If not the process ends step . If so the client side module forms a UI and link for the current action step . The process then returns to step .

An embodiment of pseudocode of the computing device for populating domain based history is as follows 

For example referring again to an action is shown which enables a user to see listings for the Nintendo Wii on eBay. Another action is shown which enables a user to see listings for the Nintendo Wii on Craigslist. Referring to a single provider domain based action for buying tickets is shown with action . Multiple provider domain based actions can be grouped by action provider such as actions associated with Sports Illustrated and actions associated with ESPN.

In one embodiment a user has to log into the service for these steps to occur. It should be noted that one or more of the steps described herein can be performed in any order unless otherwise noted and when the second content area is open or closed unless otherwise noted.

In one embodiment the web articles are external documents retrieved from one or more knowledge collection website data files such as data files from www.wikipedia.org. Wikipedia has a large number of articles and each article includes a link structure and belongs to at least one category. Further redirect pages enable resolution of synonyms to an article. Each link in an article points to a disambiguated article. Further the category hierarchy in Wikipedia is broad and deep and the link structure of Wikipedia articles is a valuable source of labeled training data for disambiguation and selection as described below.

In one embodiment the training module includes an article information extraction module to extract information from each web article step . In one embodiment the article information extraction module is a module that disassembles the data e.g. web articles into a set of nodes in the Wikipedia taxonomy. The article information extraction module can also determine link data associated with the extracted information step . The link data obtained from each web article can include for example its inlinks links from other web articles its outlinks links to other web articles any redirects from synonyms category hierarchy and or disambiguation as defined below . The extraction module stores the link data and extracted information e.g. the article s text inlinks outlinks any redirects category hierarchy and or disambiguation in storage media medium e.g. a database . The Wikipedia link structure forms the labeled training instances that are used to generate the disambiguation classifier and the selection classifier.

In one embodiment a disambiguation learning module operates on the information stored in the storage media medium . As used herein disambiguation is the process of determining a sense of a phrase one or more contiguous words that can have multiple senses. In one embodiment a phrase has multiple senses if the phrase links to more than one web article. Disambiguation is the process of determining which sense is the appropriate one in a particular usage. For example the word tree can relate to the woody plant or it can relate to a data structure. The way the word tree is used the words around tree etc. determine which tree usage is the correct one for a given phrase.

The disambiguation learning module learns from the extracted information and or link data to disambiguate the extracted information step . In particular in one embodiment the disambiguation learning module learns to predict the probability of a sense of an ambiguous phrase using its context unambiguous topics . A phrase is considered unambiguous if it has only one sense. To disambiguate a phrase feature vectors are created for the set of co occurring unambiguous phrases. The disambiguation learning module then generates a disambiguation classifier from its learning step . In one embodiment the disambiguation classifier is a gradient boosted decision tree created using a C4.5 algorithm. Features of disambiguation include for example 1 prior probability or commonness of a sense e.g. the number of occurrences of a sense total number of senses 2 relatedness and or 3 context quality e.g. average relatedness of context articles .

Relatedness between two topics also referred to as concepts is the fraction of common articles linking to both topics concepts versus the number of those linking to either. In one embodiment for two Wikipedia articles relatedness is the Normalized Google Distance NGD with the function being the set of inlinks to each article. Basically the NGD quantifies the strength of a relationship between two words. For example speakers and sound are more related than speakers and elephant. In one embodiment the disambiguation learning module finds the Yahoo or Google PageCount when two words are used together in a search. Speakers and sound would have a relatively high number of result pages when compared to speakers and elephant. . Thus a search distance is a measure of semantic interrelatedness derived from the number of hits returned by the Google search engine for a given set of keywords. Keywords with the same or similar meanings in a natural language sense tend to be close in units of search distance while words with dissimilar meanings tend to be farther apart.

The disambiguation learning module is in communication with a selection learning module . The selection learning module orders topics concepts on how best they describe the theme of a document e.g. web article . As used herein the theme of a document is defined herein as an ordered list of concepts. The list is ordered on importance of the concept to the document in question. In one embodiment topics are one or more contiguous words that appear in a document and which are the subject of an article node within Wikipedia . In particular the selection learning module learns to select a portion of the extracted information as being relevant to the theme of the web article step . Once the selection learning module has learned to select topics a selection classifier is generated step . The selection classifier learns to predict the probability that a topic will become an anchor. In one embodiment the selection classifier is a gradient boosted decision tree. In one embodiment given the context output of the disambiguation classifier the selection learning module orders topics on how best they describe the theme of the document e.g. web page . Anchors in Wikipedia articles are created by for example following a set of linking guidelines such as from Wikipedia . Features of the selection classifier include keyphraseness disambiguation probability relatedness to context terms depth in the Wikipedia taxonomy count distribution e.g. number of paragraphs with occurrence total number of paragraphs .

As described in more detail below the selection classifier is used in the indexing phase with the disambiguation classifier to determine a set of topics and categories of a web page step . It should be noted that each module of may be software hardware or a combination of software and hardware. Further the functionality of one or more of the modules may be combined with one or more additional modules.

The indexing module includes a tokenization module . In one embodiment the tokenization module tokenizes each crawled web page to determine phrases one or more contiguous words in the web page that are associated with stored data such as with Wikipedia names step . In one embodiment the tokenization module transmits Wikipedia names found in the web page to the disambiguation classifier . As described above the disambiguation classifier predicts the probability of a sense of an ambiguous phrase using the context unambiguous topics and outputs a context for each tokenized phrase of the crawled web page step .

As described above the selection classifier is applied to the context of the phrase and orders or ranks topics on how best they describe the theme of the web document . is a screen shot of an embodiment of a selection example. The selection classifier receives the context of phrases in the web article and ranks topics shown in determined from the phrases based on how best the topics describe the theme of the web document . An output window shown in of the selection classifier illustrates examples of topics found and their respective weights.

Referring again to in one embodiment the selection classifier transmits topics and categories associated with the web page into a topic ordering module . The topic ordering module includes an Aboutness module and a Search inducing ness module . The Aboutness module filters topics that are not important to the largest cluster of coherent topics. In one embodiment the Aboutness module is a second level filter of relevance. In one embodiment the Aboutness module removes topics that have low association with other topics in context . In one embodiment the Aboutness module is modeled as the dominance of a topic to other topics present on the web page. In one embodiment dominance of a topic is defined as the coverage of context topics by its outlinks. As an equation dominance of a topic is defined as 

In one embodiment the Aboutness module ranks selected topics on Aboutness and discards those topics with a value of zero. In one embodiment the Aboutness module provides a score for each topic identified in the web page . The score represents how dominant the topic is compared with other topics found for the web page . In a further embodiment the Aboutness module provides a score representing how dominant the topic is and a weight for the score representing how much weight should be given for the particular score value . In one embodiment the Aboutness module generates a classifier to learn to choose a single dominant topic in large articles.

In one embodiment the topic ordering module also includes a search inducing ness module . Search inducing ness describes the probability that a term would be web searched explicitly. In one embodiment this module re ranks the topics transmitted from the selection classifier . Search inducing ness can be calculated for each topic treating its surface forms as search queries and is a function of one or more of the following 1 number of queries landing on the current page 2 total number of queries and 3 change in buzz score where buzz in general means whether the topic under consideration is receiving a lot of attention e.g. how newsworthy the topic currently is on the Internet.

The topics and categories output from the topic ordering module is then applied to a category ranking module . In one embodiment the category ranking module ranks the categories further. In one embodiment each topic belongs to many different categories. In one embodiment the category ranking module ranks categories for each topic germane to the current context. In one embodiment categories are ranked as a function of their agreement with those of other selected topics and depth in the Wikipedia category hierarchy. For example the category ranking module would rank the category American film actors higher than Governors of California in a web page discussing actors for Arnold Schwarzenegger. In one embodiment the category ranking module outputs a topic and category document e.g. in XML related to each web page . It should be noted that each module and of may be software hardware or a combination of software and hardware. Further the functionality of one or more of the modules may be combined with one or more additional modules.

After the previously described phases are completed the runtime phase is performed. A user uses the web browser displayed by the computing device as shown in to navigate to a particular web page. shows a screen shot of an embodiment of a web page to which the user has navigated and a sidebar . The web page is displayed in a first content area of browser . The sidebar is displayed in a second content area of the browser . In one embodiment URL of the web page is transmitted to the server computer as shown in . In one embodiment the server computer uses the URL to query its storage as shown in to retrieve entities corresponding to topics associated with the web page . In one embodiment a hash is used to verify freshness of topics in the entities. The entities are displayed by the computing device in the second content area of the browser . For example entities and are displayed for the web page . The entities can include for example text an icon a graphic a link a video etc. associated with a topic in the set of topics.

In one embodiment the server queries its storage and determines that no entities exist for the particular URL . When this occurs in one embodiment the server downloads the web page and executes the indexing phase described above on the web page . When the processing associated with the indexing phase is completed for the URL the server transmits one or more entities associated with the web page to the computing device for display.

Memory interfaces with computer bus so as to provide information stored in memory to CPU during execution of software programs such as an operating system application programs device drivers and software modules that comprise program code and or computer executable process steps incorporating functionality described herein e.g. one or more of process flows described herein. CPU first loads computer executable process steps from storage e.g. memory storage medium media removable media drive and or other storage device. CPU can then execute the stored process steps in order to execute the loaded computer executable process steps. Stored data e.g. data stored by a storage device can be accessed by CPU during the execution of computer executable process steps.

Persistent storage medium media is a computer readable storage medium s that can be used to store software and data e.g. an operating system and one or more application programs. Persistent storage medium media can also be used to store device drivers such as one or more of a digital camera driver monitor driver printer driver scanner driver or other device drivers web pages content files playlists and other files. Persistent storage medium media can further include program modules and data files used to implement one or more embodiments of the present disclosure. Persistent storage medium media can be either remote storage or local storage in communication with the computing device.

For the purposes of this disclosure a computer readable storage medium stores computer data which data can include computer program code executable by a computer in machine readable form. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer.

Those skilled in the art will recognize that the methods and systems of the present disclosure may be implemented in many manners and as such are not to be limited by the foregoing exemplary embodiments and examples. In other words functional elements being performed by single or multiple components in various combinations of hardware and software or firmware and individual functions may be distributed among software applications at either the client or server or both. In this regard any number of the features of the different embodiments described herein may be combined into single or multiple embodiments and alternate embodiments having fewer than or more than all of the features described herein are possible. Functionality may also be in whole or in part distributed among multiple components in manners now known or to become known. Thus myriad software hardware firmware combinations are possible in achieving the functions features interfaces and preferences described herein. Moreover the scope of the present disclosure covers conventionally known manners for carrying out the described features and functions and interfaces as well as those variations and modifications that may be made to the hardware or software or firmware components described herein as would be understood by those skilled in the art now and hereafter.

While the system and method have been described in terms of one or more embodiments it is to be understood that the disclosure need not be limited to the disclosed embodiments. It is intended to cover various modifications and similar arrangements included within the spirit and scope of the claims the scope of which should be accorded the broadest interpretation so as to encompass all such modifications and similar structures. The present disclosure includes any and all embodiments of the following claims.

