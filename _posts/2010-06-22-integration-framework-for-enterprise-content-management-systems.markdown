---

title: Integration framework for enterprise content management systems
abstract: Integration framework for enterprise content management systems, in which a request related to performing an operation associated with enterprise content management is received from a customer relationship management application. In response to the request, a standard user interface is provided and user input that is entered into the standard user interface and that requests performance of an enterprise content management operation is received. In response to the user input, a particular enterprise content management system to perform the enterprise content management operation is identified from among multiple, different enterprise content management systems and a particular connector component configured to interface with the particular enterprise content management system is selected from among multiple, different connector components. The particular connector component is used to interface with the particular enterprise content management system and control the particular enterprise content management system to perform the enterprise content management operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08620724&OS=08620724&RS=08620724
owner: Accenture Global Services Limited
number: 08620724
owner_city: Dublin
owner_country: IE
publication_date: 20100622
---
The present application claims the benefit of Indian Patent Application No. 1123 CHE 2010 filed on Apr. 20 2010 which is incorporated herein by reference in its entirety for all purposes.

The present disclosure generally relates to an integration framework for enterprise content management systems.

A company may use a customer relationship management system to implement a strategy for managing the company s interactions with customers and sales prospects. The customer relationship management system may organize automate and synchronize business processes and handle sales related activities marketing customer service and technical support. The company also may use an enterprise content management system to capture manage store preserve and deliver content and documents related to the company and its processes.

In one aspect a computer system includes at least one processor and at least one memory coupled to the at least one processor having stored thereon at least one user interface component configured to provide a user interface multiple different connector components configured to interface with multiple different enterprise content management systems and instructions which when executed by the at least one processor causes the at least one processor to perform operations. The operations include receiving from a customer relationship management application a request related to performing an operation associated with enterprise content management and in response to the request providing using the at least one user interface component a standard user interface that includes a set of user interface elements that apply to operations performed by each of the multiple different enterprise content management systems serviced by the computer system and that abstract out details of operations of any one of the multiple different enterprise content management systems. The operations also include receiving user input that is entered into the standard user interface and that requests performance of an enterprise content management operation and in response to the user input identifying from among the multiple different enterprise content management systems a particular enterprise content management system to perform the enterprise content management operation. The operations further include selecting from among the multiple different connector components a particular connector component configured to interface with the particular enterprise content management system identified and using the particular connector component to interface with the particular enterprise content management system and control the particular enterprise content management system to perform the enterprise content management operation.

In another aspect at least one computer readable storage medium is encoded with executable instructions that when executed by at least one processor cause the at least one processor to perform operations. The operations include receiving from a customer relationship management application a request related to performing an operation associated with enterprise content management and in response to the request providing a standard user interface that includes a set of user interface elements that apply to operations performed by each of multiple different enterprise content management systems serviced by the computer system and that abstract out details of operations of any one of the multiple different enterprise content management systems. The operations also include receiving user input that is entered into the standard user interface and that requests performance of an enterprise content management operation and in response to the user input identifying from among the multiple different enterprise content management systems a particular enterprise content management system to perform the enterprise content management operation. The operations further include selecting from among multiple different connector components configured to interface with the multiple different enterprise content management systems a particular connector component configured to interface with the particular enterprise content management system identified and using the particular connector component to interface with the particular enterprise content management system and control the particular enterprise content management system to perform the enterprise content management operation.

In yet another aspect a computer implemented method of integrating a customer relationship management application with an enterprise content management system includes receiving by a computer system and from a customer relationship management application a request related to performing an operation associated with enterprise content management and in response to the request providing by the computer system a standard user interface that includes a set of user interface elements that apply to operations performed by each of multiple different enterprise content management systems serviced by the computer system and that abstract out details of operations of any one of the multiple different enterprise content management systems. The method also includes receiving by the computer system user input that is entered into the standard user interface and that requests performance of an enterprise content management operation and in response to the user input identifying from among the multiple different enterprise content management systems a particular enterprise content management system to perform the enterprise content management operation. The method further includes selecting from among multiple different connector components configured to interface with the multiple different enterprise content management systems a particular connector component configured to interface with the particular enterprise content management system identified and using by the computer system the particular connector component to interface with the particular enterprise content management system and control the particular enterprise content management system to perform the enterprise content management operation.

Implementations may include one or more of the following features. For example the method may include identifying from among the multiple different enterprise content management systems at least two enterprise content management systems to perform the enterprise content management operation and selecting from among the multiple different connector components configured to interface with the multiple different enterprise content management systems at least two connector components each connector component being configured to interface with one of the at least two enterprise content management systems identified. In this example the method may include using by the computer system the at least two connector components to interface with the at least two enterprise content management systems and control the at least two enterprise content management systems to perform the enterprise content management operation.

In addition the method may include launching one or more user interface components based on one or more services in the customer relationship management application being invoked and enabling the one or more services invoked in the customer relationship management application to consume web services offered by the particular enterprise content management system. The method also may include handling an event that results in a request to store data from the customer relationship management application in one or more of the multiple different enterprise content management systems and in response to the event logging in electronic storage separate from the customer relationship management application and the multiple different enterprise content management systems the event to identify the data from the customer relationship management application and the one or more of the multiple different enterprise content management systems requested to store the data from the customer relationship management application.

In some implementations the method may include based on the logging auditing the one or more of the multiple different enterprise content management systems to determine whether the data from the customer relationship management application was properly stored in each of the one or more of the multiple different enterprise content management systems. In these implementations the method may include in response to a determination that the data from the customer relationship management application was not properly stored in each of the one or more of the multiple different enterprise content management systems identifying at least one enterprise content management system in which the data from the customer relationship management application was not properly stored and taking corrective action with respect to the at least one enterprise content management system to cause proper storage of the data from the customer relationship management application in the at least one enterprise content management system. Further in these implementations the method may include calculating based on the logging and auditing integration statistics related to storage operations requested for each of the multiple different enterprise content management systems and success or failure of the storage operations generating a report that reflects the calculated integration statistics and outputting using an output device the report.

In some examples the method may include receiving user input related to a new enterprise content management system to integrate with the customer relationship management application and adding a new connector component configured to interface with the new enterprise content management system based on the user input. In these examples the method may include updating integration rules to account for the new enterprise content management system based on the user input and handling integration of the customer relationship management application with the new enterprise content management system based on the new connector and the updated integration rules.

The method may include maintaining an existing connector component and existing integration rules for an existing enterprise content management system previously integrated with the customer relationship management application such that addition of the new enterprise content management system does not impact integration of the customer relationship management application with the existing enterprise content management system. The method also may include receiving by the computer system and from the customer relationship management application a second request related to performing an operation associated with the new enterprise content management system and in response to the second request providing the standard user interface used for the multiple different enterprise content management systems to enable a user to provide input requesting performance of the operation associated with the new enterprise content management system using the same standard user interface used for the multiple different enterprise content management systems prior to the addition of the new enterprise content management system.

In some examples the method may include receiving user input defining one or more rules to apply in integrating the customer relationship management application with the particular enterprise content management system and defining in electronic storage the one or more rules for the particular enterprise content management system based on the received user input. In these examples the one or more rules for the particular enterprise content management system may be applicable to integration operations associated with the particular enterprise content management system and inapplicable to integration operations associated with other of the multiple different enterprise content management systems.

Also the method may include identifying an integration operation that relates to the particular enterprise content management system applying the one or more rules for the particular enterprise content management system to the integration operation based on the identification of the integration operation as relating to the particular enterprise content management system and performing the integration operation that relates to the particular enterprise content management system based on the application of the one or more rules. The one or more rules for the particular enterprise content management system may include a first rule and the particular enterprise content management system may be a first enterprise content management system. The method may include receiving user input defining a second rule to apply in integrating the customer relationship management application with a second enterprise content management system defining in electronic storage the second rule for the second enterprise content management system based on the received user input identifying a target enterprise content management system for an integration operation and determining whether the target enterprise content management system is the first enterprise content management system or the second enterprise content management system.

In response to a determination that the target enterprise content management system is the first enterprise content management system the first rule for the first enterprise content management system is applied to the integration operation. In response to a determination that the target enterprise content management system is the second enterprise content management system the second rule for the second enterprise content management system is applied to the integration operation.

In some examples the one or more rules for the particular enterprise content management system may include a first rule that identifies types of documents to be transferred to the particular enterprise content management system. In these examples the method may include handling a request to store a document in the particular enterprise content management system by determining a type of the document included in the request comparing the determined type of the document to the types of documents identified by the first rule and determining whether the determined type of the document is included in the types of documents identified by the first rule based on the comparison. In response to a determination that the determined type of the document is included in the types of documents identified by the first rule the document is transferred to the particular enterprise content management system. In response to a determination that the determined type of the document is not included in the types of documents identified by the first rule the request is handled without transferring the document to the particular enterprise content management system.

In some implementations the one or more rules for the particular enterprise content management system may include a first rule that defines metadata handling for storing documents in the particular enterprise content management system. In these implementations the method may include receiving a request to store a document in the particular enterprise content management system. The document may have a first set of metadata. In these implementations the method may include converting the first set of metadata for the document to a second set of metadata appropriate for the particular enterprise content management system based on the first rule and storing the document in the particular enterprise content management system in association with the second set of metadata appropriate for the particular enterprise content management system.

Further the one or more rules for the particular enterprise content management system may include a first rule that defines mapping of user privileges for access to documents in the particular enterprise content management system and the customer relationship management application. The method may include handling user access to the customer relationship management application and the particular enterprise content management system based on the first rule that defines mapping of user privileges for access to documents in the particular enterprise content management system and the customer relationship management application.

In addition the one or more rules for the particular enterprise content management system may include a first rule that identifies a storage location in the particular enterprise content management system for storing documents from the customer relationship management application. The method may include receiving a request to store a document in the particular enterprise content management system determining a location to store the document in the particular enterprise content management system based on the first rule that identifies the storage location in the particular enterprise content management system for storing documents from the customer relationship management application and controlling the particular enterprise content management system to store the document in the determined location.

In some implementations the one or more rules for the particular enterprise content management system may include a first rule that identifies file name conventions for naming documents from the customer relationship management application that are stored in the particular enterprise content management system. In these implementations receiving a request to store a document in the particular enterprise content management system. The document may have a first file name. In these implementations the method may include renaming the document to a second file name based on the first rule that identifies file name conventions the second file name being different than the first file name and controlling the particular enterprise content management system to store the document in the particular enterprise content management system using the second file name to identify the document.

Implementations of any of the techniques described throughout the disclosure may include a method or process a system or instructions stored on a computer readable storage device. The details of particular implementations are set forth in the accompanying drawings and description below. Other features will be apparent from the following description including the drawings and the claims.

An enterprise integration system keeps business information consistent across different enterprise systems used by an organization such as organizations which maintain customer data with a customer relationship management CRM application and product data with enterprise content management ECM repositories. The enterprise integration system acts as a broker between multiple systems and provides a common interface to enable multiple systems to interact and process instructions in a consistent manner. The enterprise integration system includes a framework of components that make enterprise system integration across CRM applications and ECM systems configurable and extensible.

The ECM systems and may be used for example to capture manage store preserve and deliver content and documents related to organizational processes of an organization. The ECM systems and may each include one or more ECM repositories. An ECM repository may include both structured data such as database data and unstructured information such as documents email messages audio and video. Structured and unstructured data may be tagged with metadata in the ECM systems and . Each ECM system and may be accessed through a different API Application Programming Interface .

A CRM application included in the CRM system may request to perform an operation associated with enterprise content management. For example a CRM application running on the CRM system may request to access information from one or more ECM repositories included in one or more of the ECM systems and . The CRM application may access the ECM systems and through the use of an integration framework .

The integration framework provides a standard ECM interface for CRM applications to use when accessing the ECM systems and . The standard ECM interface hides connection and API differences between the ECM systems and . Rather than interface to multiple different ECM interfaces a CRM application can interface to the standard ECM interface to provide a consistent experience regardless of which ECM system is being accessed. Access to an ECM system may include retrieving data e.g. content from the ECM system and storing data e.g. content to the ECM system.

The integration framework includes one or more user interface components one or more webservices components one or more connector components and one or more sets of integration rules . In response to the request from the CRM application one or more user interface components may be launched. The user interface components may be launched to provide the standard ECM interface used by CRM applications. The standard ECM interface may allow a user to request performance of ECM operations such as searching browsing navigating importing and creating new documents. The user requested operations may be performed by one or more ECM systems. The user interface components provide a standard interface which abstracts out details of operations of any one ECM system. Accordingly the user may not be concerned with and may not be aware of which ECM system performs the operation or which commands and input are needed to perform a generic operation in the ECM system.

ECM functionalities may be performed by one or more webservices components . The webservices components provide an abstraction which hides ECM system specific service invocation details. The webservices components expose a standardized set of ECM functionalities to CRM services. A CRM service encapsulates a set of CRM functionality such as converting and moving data between a CRM application and the ECM system or the ECM system . CRM services may perform ECM functionality by consuming services offered by the webservices components .

The webservices components and the user interface components may use one or more connector components to connect to the ECM system or the ECM system . A connector component is configured to interface with a particular ECM system. For example a first connector component may be configured to connect to the ECM system and a second connector component may be configured to connect to the ECM system .

The integration rules define rule related to integrating a CRM application with a particular ECM system. For example rules may be defined to identify types of documents to be transferred to a particular ECM system to define metadata handling for storing documents in the particular ECM system to define mapping of user privileges for access to documents in the particular ECM system and in the CRM application to identify a storage location in the particular ECM system for storing documents from the CRM application and to identify file name conventions for naming documents from the CRM application that are to be stored in the particular ECM system.

The integration rules may have general rules that apply to all ECM systems and or specific rules that apply to specific ECM systems. The specific rules allow for different operations to be performed when integrating a CRM application with different ECM systems.

As shown in a CRM service may in response to being invoked launch one or more user interface components and may consume one or more webservices . Thus the CRM services the user interface components and the webservices components form an invoke launch consume execution pattern. As described above the user interface components provide a standard user interface for initiating ECM operations regardless of which ECM system is accessed and the webservices components provide a generic set of API services which hide specific details of accessing various ECM systems.

In some examples the CRM services act as a place holder to launch the one or more user interface components e.g. Java 2 Platform Enterprise Edition J2EE Components and to consume the webservices components e.g. ECM Webservices . The one or more user interface components act as user Interface components to perform operations like search browse navigation import and create new documents. The webservices components provide a generic set of API Application Programming Interface services to perform single sign on file transfer and metadata fetching updating.

In further detail and as shown in a CRM application may be invoked by one or more web clients and . A CRM application may provide functionality through one or more CRM services . The CRM services may include for example single sign on browsing searching querying file transfer or security functions.

A CRM service may in response to being invoked launch one or more user interface components and may consume one or more webservices . A new thread may be created each time one of the CRM services is invoked. The user interface components and the webservices interface with one or more connector components where each connector component is configured to interface with a particular ECM system .

The user interface components may include for example a login component a grid browser component a tree browser component a search component and a properties component. A login component may be launched for example if the user is not logged into an ECM system when a CRM service is invoked. A grid browser component may be used to allow a user to view table based data e.g. database related data from one or more ECM repositories. A tree browser component may be used to enable a user to navigate a hierarchical view of ECM data and to expand or collapse different levels of the hierarchical view. A search component may allow a user to initiate a search of one or more ECM repositories for one or more user entered search terms and to browse returned search results. A properties component may enable a user to view or modify metadata for a document stored in an ECM repository. In some implementations the user interface components are implemented using J2EE Java Two Platform Enterprise Edition technology.

The webservices components provide an abstraction which hides ECM system specific service invocation details. In some implementations the webservices components expose ECM functionalities to the CRM applications using SOAP Simple Object Access Protocol . The webservices components may include for example a single sign on service a browse service a search service a metadata service a file transfer service and a query service.

The single sign on service may expose one or more methods to sign into or sign out of an ECM repository from a CRM application . The browse service may expose a set of methods for browsing or navigating ECM repositories in a hierarchical manner. The search service may expose a set of methods for searching one or more ECM repositories for one or more stored documents. The metadata service may expose a set of methods for updating metadata information in ECM repositories. The file transfer service may expose a set of methods for transferring documents across ECM systems and CRM applications . The query service may expose a set of methods to execute queries in ECM repositories.

The one or more configuration files may define configuration details for the handlers . The handlers may leverage the one or more configuration files in handling operations. As such editing the one or more configuration files enables reconfiguration of the functionality of the handlers . The one or more configuration files may be XML Extensible Markup Language files that allow for relatively easy editing.

In some implementations a handler e.g. one of the handlers is exposed by a connector component e.g. connector component shown in . A handler may be used to perform an operation in an ECM repository. For example types of handlers may include configuration handlers connection handlers navigation handlers tag handlers query handlers file transfer handlers and object handlers. A configuration handler may be used to add edit or delete configuration information such as access details or ECM folder details. A connection handler may be used for creating and managing a session with an ECM repository. A navigation handler may be used to access artifacts in an ECM repository such as cabinets folders or documents. A query handler may be used to query an ECM repository. A file transfer handler may be used to transfer files across CRM applications and ECM repositories. An object handler may be used to access an object included in an ECM repository.

A handler also may be configured to interface with a particular ECM system . For instance the handler may be configured to communicate with the particular ECM system using a proprietary API of the ECM system. The use of multiple handlers may enable interfacing to multiple ECM systems. To interface to a new ECM system a new set of handlers may be implemented.

The one or more configuration files may define configuration details for the handlers . The handlers may leverage the one or more configuration files in handling operations. As such editing the one or more configuration files enables reconfiguration of the functionality of the handlers . The one or more configuration files may be XML eXtensible Markup Language files that allow for relatively easy editing.

The integration framework includes configuration files and . A configuration file may include configuration information about a particular ECM system such as information about an ECM repository included in the ECM system. In the example of each of the configuration files and is associated with one of the ECM systems and respectively. For example the configuration file may include configuration information for the ECM system the configuration file may include configuration information for the ECM system and the configuration file may include configuration information for the ECM system .

A configuration file may include for example package and class name information about handler classes used to access a particular ECM system connection details for connecting to a particular ECM system references to folder path names included in an ECM repository ECM repository query details ECM repository script details or other custom information related to a particular ECM repository or system. In some implementations multiple sets of configuration information for multiple ECM systems may be included in a single configuration file or multiple configuration files. In some implementations a configuration file is implemented as an XML eXtensible Markup Language file.

As shown in the integration framework may include a user interface base component a webservices base component a handler base component a database manager a local persistent data store a monitoring component a logging component one or more user interface hook components one or more webservices hook components and one or more handler hook components .

The handler base component is configured to parse a configuration file e.g. the configuration file shown in and to orchestrate the handler hook components . A handler hook component invokes a handler for a particular ECM system. In some implementations handler components e.g. handler are derived from or are otherwise associated with the handler base component .

The user interface base component is configured to orchestrate the user interface hook components and to communicate with the handler base component . The user interface hook components are used by user interface components to access an ECM repository. In some implementations user interface components e.g. user interface component are derived from or are otherwise associated with the user interface base component .

The webservices base component is configured to orchestrate the webservices hook components and to communicate with the handler base component . A webservices hook component is used by a webservices component to access an ECM repository. In some implementations webservices components e.g. webservice are derived from or are otherwise associated with the webservices base component .

The local persistent data store may be used for storing ECM configuration details and other configuration data such as data used for performance tuning. The database manager is a software component which may be used to provide and manage access to the local persistent data store .

The monitoring component may be used for monitoring CRM application and ECM system integration. For example the monitoring component may provide access to one or more information feeds and enable monitoring of integration operations using the one or more information feeds.

The logging component may be used to log information associated with integrating a CRM application with one or more ECM systems. In some implementations the logging component may use the log4j Logging For Java API. The logging component may log in the local persistent data store records of integration operations performed by the integration framework

The system receives a request related to performing an operation associated with enterprise content management . For example the system may receive a request from a CRM application. As shown in a request from a CRM application included in a CRM system may be received.

The request may be a request based on user input provided to the CRM application to perform an operation associated with enterprise content management. For instance a user may provide to the CRM application user input requesting storage of content from the CRM application in an ECM system. In response to the user input the CRM application sends a request to perform an operation related to storing the content from the CRM application in the ECM system.

The request also may be a request automatically generated by the CRM application without user intervention. For instance the CRM application may analyze actions being performed by the CRM application and based on the analysis determine that content from an ECM system may be useful to a user interacting with the CRM application. In response to a determination that content from an ECM system may be useful to a user interacting with the CRM application the CRM application automatically without user intervention sends a request related to accessing the relevant content from the ECM system.

In response to the request the system provides a standard user interface . The standard user interface may include a set of user interface elements that apply to operations performed by each of multiple different enterprise content management systems serviced by the computer system and that abstract out details of operations of any one of the multiple different enterprise content management systems. For instance in the example of a standard ECM interface may be provided in a CRM application included in the CRM system . Providing the standard user interface may include launching one or more user interface components e.g. the user interface component discussed above with respect to . The user interface components may be launched for example in response to one or more services in the CRM application being invoked. The launching of the user interface components may enable the one or more CRM services to consume one or more web services offered by a particular enterprise content management system.

The system receives user input that is entered into the standard user interface and that requests performance of an enterprise content management operation . For example a user may interact with a user interface component such as a grid browser component a tree browser component a search component or a properties component. The user input received from the CRM system may include generic data and commands e.g. data and commands not specific to any ECM system .

In response to the user input the system identifies a particular enterprise content management system to perform the enterprise content management operation . The particular ECM system may be identified from among multiple different ECM systems. For example the system may automatically identify a particular ECM system by referencing an entry in a configuration file to determine to which one or more enterprise content management systems the operation pertains. The system also may identify the particular enterprise content management system based on user input provided by a user selecting an appropriate enterprise content management system for the operation.

The system selects a particular connector component configured to interface with the particular enterprise content management system identified . For example the system may select a particular connector component by identifying one or more entries in a configuration file corresponding to the identified enterprise content management system. For example a configuration file may include one or more entries which identify attributes of a connector component such as a class name and a package name.

In the example of a connector component may be identified from a set of connector components included in an integration framework which includes other connector components such as a connector component . The connector component is configured to interface with an ECM system . As another example and as shown in the connector component may be identified. The connector component is configured to interface with an ECM system .

Returning to the system uses the particular connector component to interface with the particular enterprise content management system and perform the enterprise content management operation . For instance the system may use the particular connector component to retrieve data e.g. content from the particular enterprise content management system or to store data e.g. content in the particular enterprise content management system.

In the example of the connector component may be used to perform an ECM operation in the ECM system . The connector component may be configured to interface with an API used by the ECM system and may provide data specific to the ECM system . The data specific to the ECM system may have been converted to a format specific to the ECM system by the integration framework .

In the example of the connector component may be used to perform an ECM operation in the ECM system . The connector component may be configured to interface with an API used by the ECM system and may provide data specific to the ECM system . The data specific to the ECM system may have been converted to a format specific to the ECM system by the integration framework . The data specific to the ECM system or its format may be different than the data specific to the ECM system or its format .

In some implementations and for some CRM services the system may identify more than one ECM system to perform a requested ECM operation. For example and as illustrated in both the ECM system and the ECM system may be identified. The connector components and each may be selected to interface with the ECM systems and respectively. The connector component may be used to send data to the ECM system where the data is specific to the ECM system . Similarly the connector component may be used to send data to the ECM system where the data is specific to the ECM system . The data specific to the ECM system or its format may be different than the data specific to the ECM system or its format . The integration framework may convert the data from the CRM application to the formats needed by the ECM systems and based on integration rules. More than one ECM system may be requested to perform an ECM operation when data e.g. content is stored in multiple ECM systems. More than one ECM system also may be requested to perform an ECM operation when data e.g. content is needed to be accessed from multiple ECM systems.

The system handles an event that results in a request to store CRM data in one or more ECM systems . For example a CRM application integrated with one or more ECM systems through an integration framework may request to store CRM data in one or more ECM systems. For example and as shown in a CRM system may request using an integration framework to store CRM data in one or more of ECM systems and . The request to store CRM data in one or more of the ECM systems and may be based for example on a user interface event received from a user interface component displayed in a CRM application included in the CRM system .

Returning to in response to the event the system logs the event to identify the CRM system and the one or more ECM systems requested to store the CRM data . Logging may be performed for example by the logging component described above with respect to .

In the example of the event may be logged to an integration log . The integration log indicates for example that requests to store data one and data two in the ECM system occurred at time one and time two respectively and that requests to store data three and data two in the ECM system occurred at time three and time two respectively and that requests to store data two data four and data five in the ECM system occurred at time two time four and time five respectively. As indicated in the integration log a single event may result in requests to store data in multiple ECM systems as indicated by the multiple simultaneous requests to store data two in each of the ECM systems and at the same time e.g. time two .

The system also may at least temporarily store the CRM data to be stored in the one or more ECM systems as past of the logging. The temporary storage may be performed for example using the local persistent data store described above with respect to . By storing the CRM data included in the integration operation the system may correct any errors that occurred in performing the integration operation by accessing the temporarily stored CRM data.

Returning to based on the logging the system audits the one or more ECM systems to determine whether the CRM data was properly stored . For instance referring to the example of the system may process the integration log and may verify for each entry in the log whether the data indicated by the entry was actually stored in the indicated ECM system. Auditing results may be stored for example in an audit log . The audit log indicates for example that an audit verified that data and data were stored in the ECM system and that data two and data five were stored in the ECM system but that data three and data two were not stored in the ECM system and that data four was not stored in the ECM system .

The system takes corrective action in response to a determination that the CRM data was not properly stored . For example the data which was not properly stored and the ECM system which did not properly store the data may be identified a request to store the data may be reissued to the ECM system and a verification process may be performed to confirm that the reissued request results in proper storage of the data in the ECM system.

The system provides reporting based on the logging and auditing . For example the system may generate a report that details integration operations. The system also may determine integration statistics e.g. statistics related to number of integration operations and or success and failure rates for integration operations and include the integration statistics in a generated report. In the example of the system may generate the report using data stored in the integration log and o data stored in the audit log .

The system receives input related to a new ECM system to integrate with a CRM system . For example the new ECM system may be a new ECM product offering or may otherwise be an ECM system not previously integrated with the CRM system. As shown in a company may begin using a new ECM system and may wish to integrate the new ECM system with a CRM system used by the company.

The system adds a new connector to an interface with the new ECM system based on the input . The new connector may be implemented configured to interface with the new ECM system and added to an integration framework. Other components may be added to the integration framework to interface with the new ECM system such as one or more handler components one or more configuration files one or more user interface hook components and one or more webservices hook components.

Also in some implementations some existing integration framework components such as a webservices base connector component and a user interface base connector component may be updated to interact with newly added components. In the example of a new connector is added to an integration framework . The integration framework may be updated without requiring a change to a standard ECM interface . Because changes to the standard ECM interface are not needed a user is able to perform integration operations with the new ECM system using a known interface that does not require additional training or knowledge by the user to operate.

The system updates integration rules to account for the new ECM system based on the input . For instance in the example of new rules may be added to existing rules where the existing rules are associated with an existing ECM system . In addition to updating integration rules for the new ECM system one or more configuration files may be added or updated. Updating integration rules to account for the new ECM system is described in more detail below with respect to .

Returning to the system handles integration of the CRM system with the new ECM system based on the new connector and the updated integration rules . For instance in the example of a request for an ECM operation may be received from the CRM system through the standard ECM interface . For some requests the new ECM system may be selected for performing the operation the CRM system may connect to the new ECM system through the new connector and the requested operation may be performed according to the new rules . The request for the ECM operation may be received using the same unchanged standard ECM interface which had been previously used for integrating the existing ECM system with the CRM system prior to the addition of the new ECM system .

After the addition of the new ECM system for some requested operations the ECM system may be requested to perform the operation. For such operations the CRM system may connect to the ECM system through the connector and the requested operation may be performed according to the existing rules as occurred prior to the addition of the new ECM system . In other words addition of the new ECM system does not impact integration of the CRM system with the existing ECM system .

The system receives input defining rules or logic to apply in integrating with a particular ECM system . For example integration rules for an ECM system e.g. an existing ECM system or a new ECM system may be received. For instance illustrates example integration rules which include a rule for identifying types of documents to be transferred to an ECM system a rule for handling metadata for an ECM system a rule for mapping of user privileges for an ECM system a rule for defining one or more storage locations in an ECM system and a rule for naming files in an ECM system.

Returning to the system defines rules or logic for the particular ECM system based on the received input . For example the system may define one or more rules in electronic storage. The one or more rules may define criteria and configuration settings for integrating with one or more ECM systems. The one or more rules may include general rules that apply to all ECM systems and or specific rules that apply to specific ECM systems. The specific rules allow for different operations to be performed when integrating a CRM application with different ECM systems. The specific rules may define data conversion and attribute mapping e.g. metadata attribute mapping for each ECM system to ensure data is stored in each ECM system in an appropriate format.

The system identifies an integration operation that relates to the particular ECM system . For example a request for an ECM operation may be received from a CRM system. The request may be a request to store a document in the particular ECM system where the document is a particular type of document and the document may have associated metadata. As another example a request from a particular user to access a document may be received.

The system applies the rules or logic for the particular ECM system to the integration operation and the system performs the integration operation based on application of the rules or logic . For example if the integration operation includes a request from a particular CRM application for a particular user to access the ECM system the system may handle the request based on an integration rule e.g. rule that defines mapping of user privileges for access to documents in the ECM system and the CRM application. In this example the system may determine whether the user has access rights to documents in the ECM system based on the user privileges mapping. If the user does not have access rights to documents in the ECM system the system may reject or ignore the request.

As another example if the integration operation includes a request to store a document in the ECM system the system may determine a type of the document included in the request and may compare the document type to document types identified by an integration rule as types of documents to transfer to the ECM system. In response to a determination that the determined document type is not included in the types of documents to be transferred to the ECM system the system may handle the request without transferring the document to the ECM system.

In response to a determination that the determined document type is included in the types of documents to transfer to the ECM system the system may transfer the document to the ECM system. If the document has associated metadata the system may before storing the document convert a first set of metadata for the document to a second set of metadata appropriate for the ECM system based on an integration rule e.g. rule and may store the document in the ECM system in association with the second set of metadata. Before storing the document the system may rename the document to a new different file name based on an integration rule e.g. rule that identifies file name conventions and may use the new file name to identify the document. The system may determine a location to store the document in the ECM system based on an integration rule e.g. rule that identifies a storage location in the system for storing documents from a particular CRM application and may control the ECM system to store the document in the determined location.

The system includes a processor a memory a storage device and an input output device . Each of the components and are interconnected using a system bus . The processor is capable of processing instructions for execution within the system . In one implementation the processor is a single threaded processor. In another implementation the processor is a multi threaded processor. The processor is capable of processing instructions stored in the memory or instructions stored on the storage device to display graphical information for a user interface on the input output device .

The memory stores information within the system . In one implementation the memory is a computer readable medium. In one implementation the memory is a volatile memory unit. In another implementation the memory is a non volatile memory unit.

The storage device is capable of providing mass storage for the system . In one implementation the storage device is a computer readable medium. In various different implementations the storage device may be a floppy disk device a hard disk device an optical disk device or a tape device.

The input output device provides input output operations for the system . In one implementation the input output device includes a keyboard and or pointing device. In another implementation the input output device includes a display unit for displaying graphical user interfaces.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The apparatus can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The elements of a computer may include a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include e.g. a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly other implementations are within the scope of the following claims.

