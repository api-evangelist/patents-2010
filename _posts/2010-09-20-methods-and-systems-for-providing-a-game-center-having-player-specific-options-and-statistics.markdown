---

title: Methods and systems for providing a game center having player specific options and statistics
abstract: Described herein are methods and systems for providing a game center having player specific options and statistics. For example, in at least certain embodiments, a game center module can provide a friends option such that a user can view and select from a list of friends. The game center module can provide friend details of a selected friend including a list of games played together between the user and the selected friend and a list of other games in common between the user and the selected friend. In an embodiment, the list of games in common and the list of other games in common each include a list of options with each option indicating a respective game name and a comparison of the user's ranking and the selected friend's ranking for the respective game.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08734255&OS=08734255&RS=08734255
owner: Apple Inc.
number: 08734255
owner_city: Cupertino
owner_country: US
publication_date: 20100920
---
This application claims the benefit of commonly assigned U.S. Patent Application No. 61 321 861 entitled SYSTEMS AND METHODS FOR PROVIDING A GAME CENTER filed on Apr. 7 2010 by Marcel van Os and commonly assigned U.S. Patent Application No. 61 378 886 entitled METHODS AND SYSTEMS FOR PROVIDING A GAME CENTER filed on Aug. 31 2010 by Marcel van Os the disclosures of which are hereby expressly incorporated herein by reference.

The invention to be disclosed and claimed in this application was prematurely and without Apple s authorization disclosed to the public when a prototype of Apple s iPhone 4 was apparently stolen from an Apple engineer on Mar. 25 2010. The U.S. priority applications on which this application is based were not filed before the apparent theft.

Embodiments of the present invention relate to systems and methods that provide a game center having player specific options and statistics for gaming applications.

Various devices such as electronic devices computing systems portable devices and handheld devices have software gaming applications. These devices can network with each other for a multi player gaming experience.

One prior gaming device allows players to interact with each other online. This gaming device allows the sharing of a game and accomplishments between players. A user with a game console accesses an online game service to share the gaming experience with other players.

However this prior approach has limitations in terms of connecting players playing games with other players and tracking player performance.

Described herein are methods and systems for providing a game center. For example in at least certain embodiments a game center module provides a game center having player specific options and statistics. The game center module can provide a friends option such that a user can view and select from a list of friends. The game center module can provide friend details of a selected friend including a list of games played together between the user and the selected friend and another list of other games in common between the user and the selected friend.

In one embodiment the list of games played together includes a list of options with each option indicating a respective game name and a comparison of the user s ranking and the selected friend s ranking for the respective game. The list of other games in common includes a list of options with each option indicating a respective game name and a comparison of the user s ranking and the selected friend s ranking for the respective game. Upon selection of an option from the list of games played together or the list of game in common the game center module may provide game details regarding the selected game and a leaderboard option. Selection of the leaderboard option causes the generation of a leaderboard that includes rankings for top players the user and optionally the selected friend for the selected game.

The present disclosure includes systems and devices that perform these methods including data processing systems which perform these methods and machine readable media which when executed on data processing systems cause the systems to perform these methods.

Described herein are methods and systems for providing a game center having player specific options and statistics. For example in at least certain embodiments a game center module located on a system provides the game center. The game center may be a central area in a gaming system that provides information for numerous games clients players etc. or any combination thereof. The games can be educational have utility provide entertainment or be any category of software applications provided by an application service e.g. application store .

The game center module can provide a friends option such that a user can view and select from a list of friends. The game center module can provide friend details of a selected friend including a list of games played together between the user and the selected friend and another list of other games in common between the user and the selected friend.

In one embodiment the list of games played together includes a list of options with each option indicating a respective game name and a comparison of the user s ranking and the selected friend s ranking for the respective game. The list of other games in common includes a list of options with each option indicating a respective game name and a comparison of the user s ranking and the selected friend s ranking for the respective game. Upon selection of an option from the list of games played together or the list of game in common the game center module may provide game details regarding the selected game and a leaderboard option. Selection of the leaderboard option causes the generation of a leaderboard that includes rankings for top players the user and optionally the selected friend for the selected game.

As illustrated in a general network topology implemented in one embodiment of the present invention can include a group of client or peer computing systems respectively communicating with one another and with one or more services over a network . Although illustrated as a single network cloud in the network can be comprised of a variety of different components including public networks such as the Internet and private networks such as local Wi Fi networks e.g. 802.11n home wireless networks or wireless hotspots local area Ethernet networks cellular data networks and WiMAX networks to name a few. For example system may be connected to a home Wi Fi network represented by network link system may be connected to a 3G network e.g. Universal Mobile Telecommunications System UMTS High Speed Uplink Packet Access HSUPA etc represented by network link system may be connected to a WiMAX network represented by network link and system may be connected to a public Wi Fi network represented by network link . Each of the local network links over which the systems are connected may be coupled to a public network such as the Internet thereby enabling communication between the various systems over the public network. However if two systems are on the same local or private network e.g. the same Wi Fi network then the two systems may communicate directly over that local private network bypassing the public network. It should be noted of course that the underlying principles of the present disclosure are not limited to any particular set of network types or network topologies.

Each of the systems illustrated in can communicate with a data service that may include a collaborative service e.g. game service music creation service document creation service a connection data exchange CDX service a matchmaker service an invitation service an account service and an application service . In one embodiment the collaborative service enables users to collaborate with collaborative applications. For example the collaborative service may be a game service that enables users to collaborate for multi player gaming applications. The game service may include or access any of the services to provide a game center. The game service may include or access any of the services . For example the game service may include services and . The services can be implemented as software executed across one or more physical computing systems such as servers. As shown in in one embodiment the services may be implemented within the context of a larger data service managed by the same entity e.g. the same company and accessible by each of the systems over the network . The data service can include a local area network e.g. an Ethernet based LAN connecting various types of servers a storage area networks SANs and databases. In one embodiment the databases store and manage data related to each of the user systems e.g. client systems computer systems mobile systems and the users of those systems e.g. user account data system account data user application data etc. .

In one embodiment a game center module is located on each system . The game center module is associated with a game center software application that manages a game center in conjunction with the game service. The game center module includes sub modules e.g. profile friends games notifications for managing the game center and providing the gaming experience for multi player gaming.

In one embodiment the game center module is implemented on a game framework such as that described in co pending applications U.S. patent application No. 61 321 854 entitled APPLICATION PROGRAMMING INTERFACE SYSTEM AND METHOD FOR COLLABORATIVE ONLINE APPLICATIONS Filed Apr. 7 2010 by Mike Lampell U.S. patent application No. 61 321 842 entitled APPARATUS AND METHOD FOR MATCHING USERS FOR ONLINE SESSIONS Filed Apr. 7 2010 by Jeremy Werner Phillip Smith Andrew H. Vyrros U.S. patent application No. 61 321 832 entitled APPARATUS AND METHOD FOR INVITING USERS TO ONLINE SESSIONS Filed Apr. 7 2010 by Andrew H. Vyrros Jeremy Werner and Patrick Gates U.S. patent application No. 61 321 841 entitled APPARATUS AND METHOD FOR ESTABLISHING AND UTILIZING BACKUP COMMUNICATION CHANNELS Filed Apr. 7 2010 by Jeff Tung Barry A. Whitebook Joe Abuan Hyeonkuk Jeong Andy Yang and Roberto Garcia and U.S. patent application No. 61 321 851 entitled APPARATUS AND METHOD FOR EFFICIENTLY AND SECURELY EXCHANGING CONNECTION DATA Filed Apr. 7 2010 by Joe Abuan Jeff Tung Robert Quattlebaum Barry A. Whitebook and Roberto Garcia hereinafter Co pending Applications which are assigned to the assignee of the present application and which are incorporated herein by reference. It should be noted however that the game framework described in the co pending applications is not required for complying with the underlying principles of the invention. Additionally in one embodiment the friend service operations described herein e.g. displaying friends lists sending receiving friend requests etc are managed by the friend service described in the co pending application U.S. patent application No. 61 321 848 entitled APPARATUS AND METHOD FOR EFFICIENTLY MANAGING DATA IN A SOCIAL NETWORKING SERVICE Filed Apr. 7 2010 by Amol Pattekar Jeremy Werner and Patrick Gates hereinafter Friend Service Application which is incorporated herein by reference.

For example in one embodiment of the present invention each user is identified within the friend service by either a unique destination signaling identifier DSID or a unique handle. In one embodiment a DSID is used to identify users who are known to have accounts on the friend service. These users are sometimes referred to as in network users. A handle can be used to identify users who are not known to have accounts on the friend service . These users are sometimes referred to as out of network users. This may include users who have not yet registered an account on the friend service and or users who have an account on the friend service but who have not yet associated a particular handle with their account.

A friend may be defined as a user having an account that is associated or linked with an account from another user. More details in regards to the friends service operations and defining a friend are described in the co pending Friend Service Application.

The matchmaker service can match two or more systems for a collaborative peer to peer P2P session based on a specified set of conditions. For example users of two or more of the systems may be interested in playing a particular multi player game. In such a case the matchmaker service may identify a group of systems to participate in the game based on variables such as each user s level of expertise the age of each of the users the timing of the match requests the particular game for which a match is requested and game specific variables associated with the game. By way of example and not limitation the matchmaker service may attempt to match users with similar levels of expertise at playing a particular game. Additionally adults may be matched with other adults and children may be matched with other children. Moreover the matchmaker service may prioritize user requests based on the order in which those requests are received. The underlying principles of the present disclosure are not limited to any particular set of matching criteria or any particular type of P2P application. More details in regards to the matchmaker service are described in co pending U.S. patent application No. 61 321 842.

In response to a match request the matchmaker service can coordinate with the CDX service to ensure that all matched participants receive the necessary connection data for establishing P2P sessions in an efficient and secure manner.

In one embodiment the invitation service also identifies systems for participation in collaborative P2P sessions. However in the case of the invitation service at least one of the participants is specifically identified by another participant. For example the user of system may specifically request a collaborative session with the user of system . As with the matchmaker service in response to an invitation request the invitation service can identify the set of participants and coordinate with the CDX service to ensure that all participants receive the necessary connection data for establishing P2P sessions in an efficient and secure manner.

The profile sub module associated with a profile option provides access to the profile editor option e.g. avatar editor option and account data option of the user. An avatar is a representation of a computer user or their alter ego. An avatar is often in the form of a three dimensional 3D model used in computer games or a two dimensional 2D icon or picture or image or clip art used on Internet forums social networks and other communities. Avatars can also be used in video games including online interactive gaming environments. The avatar editor option can create and edit a user s avatar. More details regarding avatars avatar editing and features of avatars are described in U.S. provisional patent application No. 61 321 716 entitled PERSONALIZING COLORS OF USER INTERFACES filed Apr. 7 2010 by Marcel van Os and U.S. provisional patent application No. 61 321 840 entitled AVATAR EDITING ENVIRONMENT filed Apr. 7 2010 by Marcel van Os et al. all of which are incorporated herein by reference in their entirety.

A friends sub module associated with a friends option provides access to a friends list option . These friends can be editing by the user. The list of friends may be friends within one or more networks e.g. gamecenter network . Certain information e.g. name status representation regarding each friend is included in the list of friends. A user can obtain additional information regarding a friend by selecting one of the friends. This user selection generates friend details option for the selected friend. These details for the selected friend may include a representation e.g. avatar a status statistics a list of games played with the friend a list of other games in common with the friend a list of games owned by the friend but not owned by the user etc. A user can select one of the games owned by the friend that the user would like to play. In one embodiment if the user does not own this game then the user is automatically directed to an application store option to access the selected game.

A gaming sub module associated with a gaming option provides access to a games list option . Games can be added or deleted from the list of games. Certain information e.g. game manufacturer game name rating regarding each game may be included in the list of games. A user can obtain additional information regarding a game by selecting one of the games. This user selection generates game details option for the selected game. The games details option can be accessed from option and also from option . These game details for the selected game may include a leaderboard option an achievements option a play application game option a recently played games option and a tell a friend TAF option .

In one embodiment these options provided by game details may appear differently depending upon whether a user accessed the game details option from the games list option or from the friend details option . For example if the option is accessed via option then the leaderboard and achievements options relate to the user. If the option is accessed via option then the leaderboard and achievements options relate to a comparison mode with a comparison of user and friend gaming statistics.

A notifications sub module associated with a notification option provides access to a notification list option . These notifications can be edited by the user. The list of notifications may be outgoing requests that are sent or incoming requests that have been received within one or more networks e.g. gamecenter network . The notification may include gaming updates for a certain game a notification regarding a new release of a game or a new game being released etc. Certain information e.g. name status representation regarding each request is included in the list of notifications s. A user can obtain additional information regarding a notification by selecting one of the notifications. This user selection generates notification details option for the selected notifications. In one embodiment these details for the selected notifications e.g. request may include an invitation to a friend etc. A user can select an invitation option to invite a new friend. If a new friend is invited at option then option is accessed. Other options and relationships between the options can be provided by the game center module in addition to those illustrated in . illustrate exemplary flow diagrams for various computer implemented methods of providing a game center with a game center module and game service.

At block the processing logic receives a user selection to initiate the game center application and associated game center module. At block the processing logic can automatically present to the graphical user interface selectable options e.g. profile friends games notifications of the game center module. At block the processing logic may receive a user selection of a friends option of the game center module. At block the processing logic can send data to be automatically presented to a graphical user interface of the system in response to the user selection. The data is indicative of a list of friends. At block the processing logic may receive a user selection of a friend from the list of friends. The processing logic can send data to be automatically presented to the graphical user interface. The data is indicative of friend details of the selected friend including a list of games played together a list of other games in common and a list of games owned by the friend but not owned by the user at block .

In an embodiment the list of games played together includes a list of options with each option indicating a respective game name and a set of achievements for the friend while playing the respective game. Each option may also indicate a comparison of a user s ranking and the selected friend s ranking for the respective game. The processing logic may receive a user selection of an option from one of the list of games at block . At block the processing logic can determine whether a user selection of a game from the games played together or games in common lists is received. At block the processing logic can send data to be automatically presented to the graphical user interface. The data is indicative of game details for the selected game if a game from the games played together list or games in common list is received. At block the processing logic may then optionally receive a user selection of a leaderboard option from game details of the selected game. The leaderboard may include rankings for top players the user and the friend for the selected game. Alternatively the leaderboard may include rankings for top players and the user.

In another embodiment the processing logic receives a user selection of a game from the games owned by the friend and not owned by the user list at block . In this case at block the processing logic can automatically direct the user to an application service e.g. application store to purchase the selected game in response to the user selection.

The game center module is initiated and presents selectable options e.g. profile friends games notifications as discussed in blocks and of computer implemented method . At block processing logic can generate data to be presented to a graphical user interface of a system. The data is indicative of game details of a selected game associated with a game center module e.g. software application . The game details are associated with a game details option e.g. game details option which can be accessed via a friends option or a games option as discussed above and illustrated in . The game details include an achievement option that indicates a set of achievements of a user for the selected game. At block the processing logic receives a user selection of the achievement option. At block the processing logic can generate data to be presented to the graphical user interface. The data includes achievement data that includes a list of achievements and completion status of these achievements for the selected game.

In one embodiment the game details are accessed via a games option. In this case the achievement data includes a user s score based on a number of achievements completed. The achievement data also includes a list of achievements with each achievement having an achievement icon if the achievement is completed by the user. Alternatively progress information is provided that indicates an amount of completion if the achievement has not been completed.

In another embodiment the game details are accessed via a friends option. In this case the processing logic receives a user selection of a friend prior to receiving the user selection of the achievement option. The achievement data that is generated in response to the user selection of the achievement option includes a comparison of a user s score based on a number of achievements completed by the user to a friend s score based on a number of achievements completed by the friend. The achievement data also includes an indication for the friend regarding whether the friend has completed each achievement in the list of achievements and another indication for the user regarding whether the user has completed each achievement in the list of achievements.

The game center application and associated module are initiated and the module presents selectable options e.g. profile friends games notifications as discussed in blocks and of computer implemented method . At block processing logic may receive either a user selection of a friends option causing generation of a friends list option followed by a user selection of a friend from the friends list or alternatively the processing logic may receive a user selection of a games option. At block the processing logic can send data to be presented to the graphical user interface. The data is indicative of friend details or a games list based on the respective user selection s received at block . For example friend details are generated in response to a user selection of a friend from the friends list option. Alternatively a games list is generated in response to a user selection of the game option. At block the processing logic may receive a user selection of a game from a list of games owned by a selected friend i.e. user selection of a game from friend details option or a user selection from a list of games owned by the user i.e. user selection of a game from games list option . At block the processing logic can send data to be presented to the graphical user interface. The data is indicative of game details of a selected game associated with the game center module. The game details include comparison information for a selected friend and the user for the selected game if the user accesses the gaming details from the friend details option e.g. friend detail option . Alternatively the game details include user information only about the user for the selected game if the user accesses the gaming details from the games list option e.g. games list option .

In one embodiment the comparison information includes a leaderboard option that indicates a comparison of a user s ranking and the selected friend s ranking for the selected game. The comparison information may further include an achievement option that indicates a comparison of the user s set of achievements and the selected friend s set of achievements for the selected game.

In another embodiment the user information includes a leaderboard option that indicates a user s ranking for the selected game and an achievement option that indicates a user s set of achievements for the selected game. Thus the game details option presents a first set of options in a comparison mode if accessed via a friend details option and a second set of options in a non comparison mode if accessed via a games list option.

The game center application and associated game center module are initiated and the module presents selectable options e.g. profile friends games notifications as discussed in blocks and of computer implemented method . A user can select a friends option or a games option in order to access a game details option for a specific game as discussed in blocks and of computer implemented method and also illustrated in . At block the processing logic can generate data to present to a graphical user interface of a system. The data is indicative of game details of a selected game associated with a game center module with the gaming details having a recent matches option. At block the processing logic may receive a user selection of the recent matches option. At block the processing logic can generate data to present to the graphical user interface. The data includes recent matches data that includes recent matches between the user and one or more other players. The data includes games the user recently played with the one or more other players. For example the data may include a list of players and associated games recently played with the user. The players may include friends or alternatively friends and non friends.

The list of players may include gaming information for each friend of the user such as name status message representation e.g. avatar and date of last match with the user. The gaming information for each non friend of the user may include name representation e.g. avatar and date of last match with the user. Each player in the list of players is associated with a selectable option.

At block the processing logic may receive a user selection of a selectable option associated with a non friend. At block the processing logic can generate data to present to the graphical user interface details. The data includes details in regards to the selected non friend including a notification e.g. send friend request option and a report concern option. At block the processing logic may receive a user selection of the send friend request option. At block the processing logic can generate data to present to the graphical user interface. The data includes a friend request to be sent to the selected non friend who recently played a game with the user. Thus a user can invite a non friend to become a friend based on a list of players that recently played games with the user. A friend may be defined as a user having an account that is associated or linked with an account from another user. More details in regards to the friends service operations and defining a friend are described in the co pending Friend Service Application.

At block processing logic in response to a user selection initiates a multi player gaming application on a system. At block the processing logic can generate data to present to a graphical user interface of the system. The data includes a gaming invite having a list of friends of a user that provides an ability to invite one or more friends for the multi player gaming application. The friends can be invited individually or simultaneously. At block the processing logic may receive data that identifies one or more of a user s friends to invite to play the multi player gaming application e.g. receive a user selection of at least one friend from the list of friends in order to invite the at least one friend to play the multi player gaming application . At block the processing logic can generate data to present to the graphical user interface. The data includes invite status information for the one or more invited friends and the one or more auto matched players. The invite status information may includes a list of invited friend positions and one or more auto matched player positions if needed to meet a minimum player requirement for the multi player gaming application with each auto matched player position having an invite friend option. A multi player gaming application typically has a minimum and a maximum number of player slots or positions. Any empty positions that need to be filled and are not filled by friends of the user can be automatically filled by the auto matching function of the game center module. In one embodiment in response to the user s selection of a friend at block a series of invitation transactions may be implemented with the invitation service such as those described in the Co Pending applications. Additionally in one embodiment in order to fill additional player slots or positions a series of matchmaking transactions may be implemented with a matchmaking service such as those described in the Co Pending applications.

In one embodiment each invite friend position has status information including waiting or ready. Each invite friend position having a waiting status may also have an uninvite player option. At block the processing logic optionally receives a user selection of the uninvite player option associated with an invite friend position having a waiting status in order to uninvite the previously invited friend associated with the invite friend position. The user selection of the uninvite player option and subsequent confirmation allows the user to replace the previously invited friend with a player selected automatically by the matchmaker service or a player selected by the user. The invite friend position has a waiting status which indicates that an invited friend has not accepted an invite. An invite friend position having a ready status which indicates that the friend has accepted the invitation may not be replaced with an auto match player. Alternatively the invite friend position may have an auto match option. A user selection of this option causes the invite friend position having a waiting status to be replaced with an auto match player position.

At block the processing logic optionally receives a user selection of an invite friend option associated with an auto match friend position in order to replace the auto match position with the invite friend position. Thus a user can enjoy a multi player gaming experience with friends and auto matched players.

At block the processing logic receives with a system of a user an invite from a specific friend of the user to play a specific game. At block the processing logic determines whether the user owns the specific game. At block the processing logic presents to a graphical user interface various options including an access option to access the specific game if the user does not own the specific game a decline option to decline the game invite and an optional dismiss option to dismiss the game invite. Selection of the dismiss option allows the user to decide at a later time whether to decline or access the game.

At block the processing logic automatically directs the user to an application service e.g. application store to purchase the specific game in response to a user selection of the access option e.g. purchase application store . Alternatively the processing logic may automatically direct in response to the user selection of the access option the user to the application service to access for free a fully functional version of the game for a limited time period or a limited functionality demo copy.

At block the processing logic presents to a graphical user interface an accept option to accept the invite and play the specific game with the sender of the invite if the user owns the specific game on the device. The processing logic also presents to the graphic user interface a decline option to decline the invite and optionally a dismiss option to dismiss the invite for a period of time.

At block the processing logic presents to a graphical user interface a download option to accept the invite and download the specific game with the sender of the invite if the user owns the specific game but not on the device being used currently by the user. The processing logic also presents to the graphic user interface a decline option to decline the invite and optionally a dismiss option to dismiss the invite for a period of time.

For example in one embodiment one player generates and sends an invite to another player. The data service may locate the player to receive the invite and the invitation service sends the invite to this player who can then easily and quickly obtain the game or play the game as discussed above.

In certain embodiments the user and friends rankings are compared to each other and displayed. For example for game name the friend may be ranked in the 47percentile and the user is ranked in the 49percentile. In this case the friend and the user are ranked about the same. In another embodiment the friend is ranked first and the user is ranked last for the game name . In this case the friend is ranked waaaaaaaay higher than me.

The game icon may be retrieved from the client system or a server if the client system does not have the game icon. In an embodiment a friend selects a color for the friend s representation e.g. avatar . Processing logic generates this color on the user s system and also automatically selects a complementary color or background based on the friend s color. The background color may be used for at least some of the text on this user interface .

The user selections e.g. color background pattern for the user s representation e.g. avatar or other settings may be broadcast such that new game developers can use these selections as part of the game. For example a user having a color preference of blue may be able to play a new game with the user automatically or by default having a blue game component e.g. avatar car while playing the game.

For each game in common the list may include a game icon e.g. 15 achievements of the friend for the particular game the name of the game and a comparison of how the friend and the user rank on the leaderboard e.g. ranked higher than me for a particular game. For example the friend is ranked lower than the user for game name displayed in the list .

For each game owned by the friend and not owned by the user e.g. Mel the list may include a game icon e.g. 16 the game manufacturer of the particular game the name of the game a rating for a particular game e.g. 2 out of 5 stars and a cost of purchasing the particular game. For example game name has a two star rating and costs 1.99 to purchase from an online application store. The processing logic automatically directs the user to an online application store e.g. application service to purchase the selected game in response to the user selection of one of these games e.g. game name .

The game center module may provide a user interface to buy a fully functionally version of the game. Alternatively the game center module may provide a user interface to access for free a fully functional version of the game for a limited time period or a limited functionality demo copy. In another embodiment the game center module provides an application seed that uniquely identifies the gaming application on a server e.g. application store .

In another embodiment a user receives an invite from a specific friend to play a specific game that the user does not have. As discussed above the game center module provides a user interface to buy a fully functional version of the game. Alternatively the game center module provides a user interface to access for free a fully functional version of the game for a limited time period or a limited functionality demo copy. In yet another embodiment the game center module provides an application seed that uniquely identifies the gaming application on a server e.g. application store . In an embodiment these different options are based on a gaming application s preferences for providing limited rights or full rights.

Information for each game in the list of games is displayed on the user interface . This game information includes game icon user achievements for this game game name and ranking for the user playing this game. For example game name is displayed with game icon . The user has 30 of 52 achievements and ranks 250out of 1 000 players. Alternatively the ranking for the user can be a ranking among the user s friends rather than a ranking among everyone.

A selection of the option causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. User interface is a leaderboard that includes the previously selected game name e.g. game name a number of games played by the user a number of players in the leaderboard and at least a partial list of the leaderboard. The user interface includes a today option a this week option an all time option a friends options and an everyone option . The list of leaders can be filtered and ranked based on these options.

In certain embodiments a certain number of top players are listed e.g. five and if the user e.g. Mel is not in this list then the user s ranking is also listed e.g. 25 . A show more option can be selected to display additional player rankings. Optionally a games recently played option can filter the rankings to show rankings of the players that played in the most recent games e.g. 10 most recent games .

Alternatively a selection of the option causes the processing logic to generate user interface as illustrated in in accordance with one embodiment. User interface includes a selectable leaderboard option to select among different leaderboards e.g. leaderboard leaderboard etc. . For example Game Name may include 4 different tracks that are not related to each. A different leaderboard can be generated for each track. A merged leaderboard may include rankings aggregated from all tracks. The user interface includes a today option a this week option and an all time option . The list of leaders can be filtered and ranked based on these options.

Friends includes a ranked list of Mel s friends for Game Name . Everyone includes a ranked list of all users for Game Name .

In certain embodiments a certain number of top players are listed e.g. five and if the user e.g. Mel is not in this list then the user s ranking is also listed e.g. 25th . A show more option e.g. can be selected to display additional player rankings. Optionally a games recently played option can filter the rankings to show rankings of the players that played in the most recent games e.g. 10 most recent games . Different types of metrics can be defined for creating the rankings in the leaderboard. For example the metrics may include points number of top finishes number of finishes within a certain threshold etc. A game developer can define these metrics and the leaderboard. The user interfaces e.g. may be presented as a smaller snapshot during a game for convenience of the users. The leaderboard presented during a game may have selectable or non selectable options during the game.

Returning to a selection of the option causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. User interface includes achievements for the user with respect to the selected game e.g. game name . The achievements include a score based on a number of achievements completed by the user e.g. 30 52 and a resulting score of 180 points . The user interface includes a list of achievements . Each achievement has a name descriptive lines and an icon if the user has completed the achievement. Otherwise the icon is replaced with progress information that indicates a current amount of progress toward completing the achievement e.g. 70 30 . The icon may include a question mark if the user has not made any progress towards completing the achievement or less than a certain threshold of progress.

Returning to a selection of option causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. The user interface includes a list of players from recent matches with the user. For example all players from the 10 most recent matches with the user can be displayed. The list may include only friends or all players based on the selection of friend option or all player option . More information can be shared for friends compared to non friends. For example the shared gaming information for each friend of the user may include a name a status message a representation e.g. avatar and session data e.g. date of last match with the user . The shared gaming information for each non friend of the user may include a name a representation e.g. avatar and session data. In an embodiment session data is obtained from a server. In another embodiment session data is not shared for friends or non friends. Each player in the list of players is associated with a selectable option.

A selection of a player that is already a friend causes the processing logic to generate user interface for the selected friend. A selection of a player that is not a friend causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention in order to invite this player to become a friend. User interface may include a name a representation e.g. avatar and session data for the selected non friend. Send friend request option can be selected to generate an exemplary user interface having a friend request communication as illustrated in or this request can be added to an exemplary user interface having a list of requests as illustrated in and discussed in more detail below. Alternatively a concern can be reported regarding this selected player by selecting option from user interface . Optionally user interface may also include a player rating option . The user can provide a rating for the player that was recently matched with the user. Selection of option causes the generation of the previous user interface .

Returning to a selection of option from user interface causes the processing logic to generate a user interface for creating a communication e.g. an email message . The user can send the communication to a friend.

A selection of the option from causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. User interface is a leaderboard that includes the previously selected game name e.g. game name a number of games played by the user a number of players in the leaderboard and at least a partial list of the leaderboard. The user interface includes a today option a this week option an all time option a friends options and an everyone option . The list of leaders can be filtered and ranked based on these options.

In certain embodiments a certain number of top players are listed e.g. five and if the user is not in this list then the user s ranking is also listed e.g. 25 . The selected friend e.g. Susie may also be included in the rankings to show a comparison between Susie and the user e.g. Mel . A show more option can be selected to display additional player rankings. Optionally a games recently played option can filter the rankings to show rankings of the players that played in the most recent games e.g. 10 most recent games .

Returning to a selection of the option causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. User interface includes a selectable leaderboard option to select among different leaderboards e.g. leaderboard leaderboard etc. . Alternatively a merged leaderboard may include rankings from all leaderboards. The user interface includes a today option a this week option and an all time option . The list of leaders can be filtered and ranked based on these options.

Friends includes a ranked list of Mel s friends for Game Name . Everyone includes a ranked list of all users for Game Name .

In certain embodiments a certain number of top players are listed e.g. five and if the user e.g. Mel is not in this list then the user s ranking is also listed e.g. 250th . Susie s ranking may also be listed even if she is not in the certain number of top players. A show more option e.g. can be selected to display additional player rankings. As discussed above the user interfaces e.g. may be presented as a smaller snapshot during a game for convenience of the users.

Returning to a selection of the option causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. User interface includes a comparison of scores for the user and the selected friend with the scores being based on a number of achievements completed. For examples Susie has 210 points and Mel has 180 points for game name . User interface also includes a list of achievements for the previously selected game name e.g. game name and displays these achievements for the previously selected friend e.g. Susie and the user. For example Susie has completed achievements and as illustrated in but Susie has not completed achievements and . The user has completed achievements and as illustrated by the icons and but has not completed achievements and . Each achievement has a name descriptive lines and an icon if the user has completed the achievement. Otherwise the icon is replaced with progress information that indicates in numerical and graphical form a current amount of progress toward completing the achievement e.g. 70 25 .

Returning to a selection of the option causes the processing logic to generate user interface as illustrated in in one embodiment of the present invention. User interface includes a comparison of scores and achievements for the user and the selected friend with the scores being based on a number of achievements completed. For example Susie has 210 points and 32 achievements and Mel has 180 points and 30 achievements for game name . User interface also includes a list of achievements for the previously selected game name e.g. game name and displays these achievements for the previously selected friend e.g. Susie and the user. For example Susie has completed achievements and as illustrated in but Susie has not completed achievements and . The user has completed achievements and as illustrated by the icons and but has not completed achievements and . Each achievement has a name descriptive lines and an icon if the user has completed the achievement. Otherwise the icon is replaced with progress information that indicates in numerical and graphical form a current amount of progress toward completing the achievement e.g. 70 25 . An icon may include a question mark indicator if the user has made no progress or has made less than certain threshold of progress. A game of Game Name can be started between Susie and Mel with the selection of play option .

Returning to a selection of option from user interface causes the processing logic to generate a user interface for creating a communication e.g. an email message . The user can send the communication to a friend.

The game center module and game service provide a game center in which a user can send and receive notifications e.g. friend requests game invitations game updates etc . illustrate exemplary user interfaces for friend requests and game invitations.

In an embodiment an incoming friend request may be associated with an email address. The user s address book or contact information associated with the user s contacts can be searched to find a match with the email address. If a match occurs then the incoming friend request will display a real name or nickname for the player who sent the incoming friend request to the user.

In one embodiment option is selected and then user name is also selected. illustrates an exemplary user interface having a received friend request in one embodiment of the present invention. User interface is generated in response to the selection of user name from the list . The user interface includes details regarding the player that sent the friend request such as a representation e.g. avatar and a short message from this player. The user interface also includes accept option to accept a request decline option to decline a request optional view option to view more details regarding the request and an optional dismiss option to dismiss the friend request and possibly block future requests from the same player for a certain time period or indefinitely.

In an embodiment user interface includes options and . In certain embodiments options and are both not included or only one of these options is not included. In certain embodiments various combinations of these options are possible. Options may also be provided that permit a user to defriend a current friend decline a friend request once and never receive another invite from this player or limit friend requests in time e.g. 1 invite week .

The user interface also includes a report concern option to report a concern regarding the player that sent the invitation. A user selection of the request option causes the generation of the user interface .

In one embodiment the user interface includes a send option to send the friend request communication to a player a cancel option to cancel the communication a To field that displays the selected player s user name and is associated with an email address a text field for composing a message and a virtual keyboard . The user interface may represent an email message. A user selection of the send option causes an alert message as illustrated in to appear on a graphical user interface of the system in one embodiment of the present invention. The alert message indicates that the friend request has been sent and the friend will be added to the user s friend list upon acceptance. A selection of an acknowledgement option will clear the alert message from the graphical user interface.

In an embodiment the To field is prefilled with a user name based on a previous user selection e.g. selection of option . Alternatively a user can enter contact information e.g. name nickname alias email address phone number into the field . In another embodiment a user can select option and search for contact information for a player to invite from the user s contacts or address book. The user may be able to determine from the contact information whether a particular player is registered with the game service associated with the game center module.

After a user selects the send option a server associated with the game service receives the contact information in the field . If the contact information is an email address then the server uses the email address to find a matching email in email accounts registered with the game service or account service. The recipient of the friend request then receives a push notification that appears in the game center module associated with the recipient. If the contact information is not an email address e.g. alias then an email address for the recipient can be found using the contact information if the recipient is registered with the game service. Otherwise if the recipient is not registered with the game service then an external social network e.g. Facebook Twitter can be searched to find an email address for the recipient. For example Facebook data can be obtained for the recipient and an email sent to Facebook with this email requesting the email address of the recipient.

In one embodiment the recipient has a client system e.g. Apple iPod Touch Apple iPhone Apple iPad and an account with the game service. Upon receipt of the friend request the game center module of the recipient is launched and the recipient can accept the friend request.

In an embodiment the recipient has the client system but does not have an account with the game service. Upon receipt of the friend request the game center module of the recipient is launched and the recipient receives a recommendation to join the game service associated with the game center module. In another embodiment the recipient does not have a client system. In this case the recipient receives the email message and can be directed to web page to join the game service.

The list includes four positions that are filled with the user e.g. Mel an invited friend e.g. user name that has received an invite but not yet responded and two auto match players that will be filled automatically by the game service and matchmaker . The list may include four additional positions for this example. The user can select at least one friend based on one or more factors e.g. gaming abilities of the user s friends for the multi player gaming application.

The matchmaker service can perform the auto matching and can select auto match players based on various factors e.g. player skill level leaderboard rankings achievement score user s ratings location time zone players that are ready to play age etc. .

The user interface also includes a play now option a cancel option an add player option and a remove player option . In an embodiment a user selection of an add player option causes the generation of user interface and the user can add one or more players by selecting one or more friends. The add player option can be disabled if a maximum number of players for the game has been reached. A user selection of a remove player option allows the user to remove one or more players by selecting one or more players that have filled one of the positions listed in list . The remove player option can be disabled if a minimum number of players for the game has been reached.

A user selection of an uninvite option and subsequent confirmation allows the user to replace the current player e.g. user name with a player selected automatically by the matchmaker service or a player selected by the user. A user selection of an invite friend option or allows the user to replace the auto match player with a player selected by the user. For example a user can select the invite option and invite a friend e.g. user name . These selections cause the generation of user interface . The auto match position associated with invite option has been replaced with a friend e.g. user name associated with position having an uninvite option in user interface . Additionally user name has accepted the invite and the status for position has been updated to Ready. The auto match option has been removed from this position because user name has accepted the invite.

In an embodiment if user name had declined the invite from the user then position or briefly changes colors and or flashes. Then the position reverts to auto matching. If the invited friend e.g. user name fails to respond within a certain time period or frequency then the invited friend is replaced with auto matching. Alternatively the invited player can always decline invites from certain other players. The user selected positions and auto match positions can be ordered with the user selected positions listed first near the top of the user interface.

In an embodiment one player position has a ready status two other positions have a waiting status and remaining positions are filled with auto matching. If one player selects a play now option e.g. 2660 2760 then the game can begin with the player with the ready status and auto matching players for the other positions. Additional auto matching players can be added if necessary to meet the minimum player requirement of the game. An alert may be generated indicating that play is beginning without the friends that have a waiting status. In one embodiment an alert may be generated indicating that a problem needs to be resolved before play can begin or the alert can be generated during play. If Mel drops out of the game or loses connectivity at the time of initiation of the game then his position can be replaced with an auto match player.

In certain embodiments alerts within a game are provided. For example upon entering a game a welcome alert may slide across the graphical user interface. illustrates an exemplary welcome alert that slides across a user interface in one embodiment of the present invention. illustrates an exemplary achievement award that slides across a graphical user interface in one embodiment of the present invention. The achievement award is generated in response to a user completing an achievement.

In an embodiment a user can report a concern regarding a player from within a game. A user can also display ratings for other players from within a game.

The user interfaces discussed in the present disclosure are merely examples. Other variations and modifications are within the scope of the present disclosure. For example some user interfaces have been shown with four options e.g. profile option friend option games option notifications option near the bottom of the user interfaces. These options can be located in other locations on the user interfaces or not displayed at all.

Described embodiments may include touch I O device that can receive touch input for interacting with computing system as illustrated in via wired or wireless communication channel in one embodiment of the present invention. Touch I O device may be used to provide user input to computing system in lieu of or in combination with other input devices such as a keyboard mouse etc. One or more touch I O devices may be used for providing user input to computing system . Touch I O device may be an integral part of computing system e.g. touch screen on a laptop or may be separate from computing system .

Touch I O device may include a touch sensitive panel which is wholly or partially transparent semitransparent non transparent opaque or any combination thereof. Touch I O device may be embodied as a touch screen touch pad a touch screen functioning as a touch pad e.g. a touch screen replacing the touchpad of a laptop a touch screen or touchpad combined or incorporated with any other input device e.g. a touch screen or touchpad disposed on a keyboard or any multi dimensional object having a touch sensitive surface for receiving touch input.

In one example touch I O device embodied as a touch screen may include a transparent and or semitransparent touch sensitive panel partially or wholly positioned over at least a portion of a display. According to this embodiment touch I O device functions to display graphical data transmitted from computing system and or another source and also functions to receive user input. In other embodiments touch I O device may be embodied as an integrated touch screen where touch sensitive components devices are integral with display components devices. In still other embodiments a touch screen may be used as a supplemental or additional display screen for displaying supplemental or the same graphical data as a primary display and to receive touch input.

Touch I O device may be configured to detect the location of one or more touches or near touches on device based on capacitive resistive optical acoustic inductive mechanical chemical measurements or any phenomena that can be measured with respect to the occurrences of the one or more touches or near touches in proximity to device . Software hardware firmware or any combination thereof may be used to process the measurements of the detected touches to identify and track one or more gestures. A gesture may correspond to stationary or non stationary single or multiple touches or near touches on touch I O device . A gesture may be performed by moving one or more fingers or other objects in a particular manner on touch I O device such as tapping pressing rocking scrubbing twisting changing orientation pressing with varying pressure and the like at essentially the same time contiguously or consecutively. A gesture may be characterized by but is not limited to a pinching sliding swiping rotating flexing dragging or tapping motion between or with any other finger or fingers. A single gesture may be performed with one or more hands by one or more users or any combination thereof.

Computing system may drive a display with graphical data to display a graphical user interface GUI . The GUI may be configured to receive touch input via touch I O device . Embodied as a touch screen touch I O device may display the GUI. Alternatively the GUI may be displayed on a display separate from touch I O device . The GUI may include graphical elements displayed at particular locations within the interface. Graphical elements may include but are not limited to a variety of displayed virtual input devices including virtual scroll wheels a virtual keyboard virtual knobs virtual buttons any virtual UI and the like. A user may perform gestures at one or more particular locations on touch I O device which may be associated with the graphical elements of the graphical user interface GUI . In other embodiments the user may perform gestures at one or more locations that are independent of the locations of graphical elements of the GUI. Gestures performed on touch I O device may directly or indirectly manipulate control modify move actuate initiate or generally affect graphical elements such as cursors icons media files lists text all or portions of images or the like within the GUI. For instance in the case of a touch screen a user may directly interact with a graphical element by performing a gesture over the graphical element on the touch screen.

Alternatively a touch pad generally provides indirect interaction. Gestures may also affect non displayed GUI elements e.g. causing user interfaces to appear or may affect other actions within computing system e.g. affect a state or mode of a GUI application or operating system . Gestures may or may not be performed on touch I O device in conjunction with a displayed cursor. For instance in the case in which gestures are performed on a touchpad a cursor or pointer may be displayed on a display screen or touch screen and the cursor may be controlled via touch input on the touchpad to interact with graphical objects on the display screen. In other embodiments in which gestures are performed directly on a touch screen a user may interact directly with objects on the touch screen with or without a cursor or pointer being displayed on the touch screen.

Feedback may be provided to the user via communication channel in response to or based on the touch or near touches on touch I O device . Feedback may be transmitted optically mechanically electrically olfactory acoustically or the like or any combination thereof and in a variable or non variable manner.

Attention is now directed towards embodiments of a system architecture that may be embodied within any portable or non portable device including but not limited to a communication device e.g. mobile phone smart phone a multi media device e.g. MP3 player TV radio a portable or handheld computer e.g. tablet netbook laptop a desktop computer an All In One desktop a peripheral device or any other system or device adaptable to the inclusion of system architecture including combinations of two or more of these types of devices. is a block diagram of one embodiment of the present invention of system that generally includes one or more computer readable mediums processing system Input Output I O subsystem radio frequency RF circuitry and audio circuitry . These components may be coupled by one or more communication buses or signal lines .

It should be apparent that the architecture shown in is only one example architecture of system and that system could have more or fewer components than shown or a different configuration of components. The various components shown in can be implemented in hardware software firmware or any combination thereof including one or more signal processing and or application specific integrated circuits.

RF circuitry is used to send and receive information over a wireless link or network to one or more other devices and includes well known circuitry for performing this function. RF circuitry and audio circuitry are coupled to processing system via peripherals interface . Interface includes various known components for establishing and maintaining communication between peripherals and processing system . Audio circuitry is coupled to audio speaker and microphone and includes known circuitry for processing voice signals received from interface to enable a user to communicate in real time with other users. In some embodiments audio circuitry includes a headphone jack not shown .

Peripherals interface couples the input and output peripherals of the system to processor and computer readable medium . One or more processing units communicate with one or more computer readable mediums via controller . Computer readable medium can be any device or medium e.g. storage device storage medium that can store code and or data for use by one or more processing units . Medium can include a memory hierarchy including but not limited to cache main memory and secondary memory. The memory hierarchy can be implemented using any combination of RAM e.g. SRAM DRAM DDRAM ROM FLASH magnetic and or optical storage devices such as disk drives magnetic tape CDs compact disks and DVDs digital video discs . Medium may also include a transmission medium for carrying information bearing signals indicative of computer instructions or data with or without a carrier wave upon which the signals are modulated . For example the transmission medium may include a communications network including but not limited to the Internet also referred to as the World Wide Web intranet s Local Area Networks LANs Wide Local Area Networks WLANs Storage Area Networks SANs Metropolitan Area Networks MAN and the like.

One or more processing units run various software components stored in medium to perform various functions for system . In some embodiments the software components include operating system communication module or set of instructions touch processing module or set of instructions graphics module or set of instructions one or more applications or set of instructions and game center module or set of instructions . In an embodiment a game center application is associated with a game center module that includes sub modules e.g. profile friends games notifications . Each of these modules sub modules and above noted applications correspond to a set of instructions for performing one or more functions described above and the methods described in this application e.g. the computer implemented methods and other information processing methods described herein . These modules i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise rearranged in various embodiments.

In some embodiments medium may store a subset of the modules and data structures identified above. Furthermore medium may store additional modules and data structures not described above.

Operating system includes various procedures sets of instructions software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communication between various hardware and software components.

Communication module facilitates communication with other devices over one or more external ports or via RF circuitry and includes various software components for handling data received from RF circuitry and or external port .

Graphics module includes various known software components for rendering animating and displaying graphical objects on a display surface. In embodiments in which touch I O device is a touch sensitive display e.g. touch screen graphics module includes components for rendering displaying and animating objects on the touch sensitive display.

One or more applications can include any applications installed on system including without limitation a game center application a browser address book contact list email instant messaging word processing keyboard emulation widgets JAVA enabled applications encryption digital rights management voice recognition voice replication location determination capability such as that provided by the global positioning system GPS a music player etc.

Touch processing module includes various software components for performing various tasks associated with touch I O device including but not limited to receiving and processing touch input received from I O device via touch I O device controller .

System may further include game center module having sub modules e.g. profile friends games notifications for performing the method functions as described herein in connection with . In one embodiment the game center module may at least function to provide customized player specific options and statistics. For example the game center module may provide a user with the ability to build and modify a list of friends within the gamecenter. The user can select a specific friend and view games played with the friend games in common and games owned by the friend but not by the user. The user can view rankings and achievements for each of these games. The user can select one of these games to generate game details having a leaderboard option. Upon selection of the leaderboard option the game center module generates a leaderboard for the user and the friend. The game center module also provides the ability for a user to obtain a game owned by the friend but not owned by the user.

In another embodiment a system e.g. includes a computer readable medium e.g. that stores a game center module one or more processing units e.g. that execute a set of instructions associated with the game center module and an input output device e.g. . The one or more processing units may be configured to receive a selection of a friends option of the game center module to send data to be presented to the input output device. The data is indicative of a list of friends. The one or more processing unit also may be configured to receive a selection of a friend from the list of friends and to send data to be presented to the input output device. The data is indicative of friend details of the selected friend including a first list of games played together between a user and the selected friend and a second list of other games in common between the user and the selected friend. The first list of games may include a list of options with each option indicating a respective game name and a comparison of the user s ranking and the selected friend s ranking for the respective game. The second list of games may also include a list of options with each option indicating a respective game name and a comparison of the user s ranking and the selected friend s ranking for the respective game.

In another embodiment the game center module provides customized game details based on being accessed via a friends option or a games option. The game center module provides gaming details of a selected game with the gaming details having comparison information for a selected friend and the user if the user selects the friends option and the gaming details having user information if the user selects the games option. The comparison information can include a leaderboard option that indicates a comparison of a user s ranking and the friend s ranking for the selected game. The comparison information may also include an achievement option that indicates a comparison of a user s set of achievements and a friend s set of achievements for the selected game. The user information can include a leaderboard option that indicates a user s ranking for the selected game and an achievement option that indicates a user s set of achievements for the selected game.

In another embodiment the game center module can provide a user with an invite from a specific friend of the user to play a specific game. The game center module determines whether the user owns the specific game and provides a game option to access the specific game if the user does not own the specific game.

Module may also interact with game center application to provide the methods and functionality described herein. Module may be embodied as hardware software firmware or any combination thereof. Although module is shown to reside within medium all or portions of module may be embodied within other components within system or may be wholly embodied as a separate component within system .

I O subsystem is coupled to touch I O device and one or more other I O devices for controlling or performing various functions. Touch I O device communicates with processing system via touch I O device controller which includes various components for processing user touch input e.g. scanning hardware . One or more other input controllers receives sends electrical signals from to other I O devices . Other I O devices may include physical buttons dials slider switches sticks keyboards touch pads additional display screens or any combination thereof.

If embodied as a touch screen touch I O device displays visual output to the user in a GUI. The visual output may include text graphics video and any combination thereof. Some or all of the visual output may correspond to user interface objects. Touch I O device forms a touch sensitive surface that accepts touch input from the user. Touch I O device and touch screen controller along with any associated modules and or sets of instructions in medium detects and tracks touches or near touches and any movement or release of the touch on touch I O device and converts the detected touch input into interaction with graphical objects such as one or more user interface objects. In the case in which device is embodied as a touch screen the user can directly interact with graphical objects that are displayed on the touch screen. Alternatively in the case in which device is embodied as a touch device other than a touch screen e.g. a touch pad the user may indirectly interact with graphical objects that are displayed on a separate display screen embodied as I O device .

Touch I O device may be analogous to the multi touch sensitive surface described in the following U.S. Pat. No. 6 323 846 Westerman et al. U.S. Pat. No. 6 570 557 Westerman et al. and or U.S. Pat. No. 6 677 932 Westerman and or U.S. Patent Publication 2002 0015024A1 each of which is hereby incorporated by reference.

Embodiments in which touch I O device is a touch screen the touch screen may use LCD liquid crystal display technology LPD light emitting polymer display technology OLED organic LED or OEL organic electro luminescence although other display technologies may be used in other embodiments.

Feedback may be provided by touch I O device based on the user s touch input as well as a state or states of what is being displayed and or of the computing system. Feedback may be transmitted optically e.g. light signal or displayed image mechanically e.g. haptic feedback touch feedback force feedback or the like electrically e.g. electrical stimulation olfactory acoustically e.g. beep or the like or the like or any combination thereof and in a variable or non variable manner.

System also includes power system for powering the various hardware components and may include a power management system one or more power sources a recharging system a power failure detection circuit a power converter or inverter a power status indicator and any other components typically associated with the generation management and distribution of power in portable devices.

In some embodiments peripherals interface one or more processing units and memory controller may be implemented on a single chip such as processing system . In some other embodiments they may be implemented on separate chips.

In certain embodiments of the present disclosure the system or system or combinations of systems or can be used to implement at least some of the methods discussed in the present disclosure.

Some portions of the detailed descriptions are presented in terms of algorithms which include operations on data stored within a computer memory. An algorithm is generally a self consistent sequence of operations leading to a desired result. The operations typically require or involve physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like can refer to the action and processes of a data processing system or similar electronic device that manipulates and transforms data represented as physical electronic quantities within the system s registers and memories into other data similarly represented as physical quantities within the system s memories or registers or other such information storage transmission or display devices.

The present disclosure can relate to an apparatus for performing one or more of the operations described herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a machine e.g. computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs erasable programmable ROMs EPROMs electrically erasable programmable ROMs EEPROMs flash memory magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a bus.

A machine readable medium includes any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . For example machines store and communicate internally and with other devices over a network code and data using machine readable media such as machine storage media e.g. magnetic disks optical disks random access memory read only memory flash memory devices phase change memory .

One or more Application Programming Interfaces APIs may be used in some embodiments. An API is an interface implemented by a program code component or hardware component hereinafter API implementing component that allows a different program code component or hardware component hereinafter API calling component to access and use one or more functions methods procedures data structures classes and or other services provided by the API implementing component. An API can define one or more parameters that are passed between the API calling component and the API implementing component.

An API allows a developer of an API calling component which may be a third party developer to leverage specified features provided by an API implementing component. There may be one API calling component or there may be more than one such component. An API can be a source code interface that a computer system or program library provides in order to support requests for services from an application. An operating system OS can have multiple APIs to allow applications running on the OS to call one or more of those APIs and a service such as a program library can have multiple APIs to allow an application that uses the service to call one or more of those APIs. An API can be specified in terms of a programming language that can be interpreted or compiled when an application is built.

In some embodiments the API implementing component may provide more than one API each providing a different view of or with different aspects that access different aspects of the functionality implemented by the API implementing component. For example one API of an API implementing component can provide a first set of functions and can be exposed to third party developers and another API of the API implementing component can be hidden not exposed and provide a subset of the first set of functions and also provide another set of functions such as testing or debugging functions which are not in the first set of functions. In other embodiments the API implementing component may itself call one or more other components via an underlying API and thus be both an API calling component and an API implementing component.

An API defines the language and parameters that API calling components use when accessing and using specified features of the API implementing component. For example an API calling component accesses the specified features of the API implementing component through one or more API calls or invocations embodied for example by function or method calls exposed by the API and passes data and control information using parameters via the API calls or invocations. The API implementing component may return a value through the API in response to an API call from an API calling component. While the API defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API may not reveal how the API call accomplishes the function specified by the API call. Various API calls are transferred via the one or more application programming interfaces between the calling API calling component and an API implementing component. Transferring the API calls may include issuing initiating invoking calling receiving returning or responding to the function calls or messages in other words transferring can describe actions by either of the API calling component or the API implementing component. The function calls or other invocations of the API may send or receive one or more parameters through a parameter list or other structure. A parameter can be a constant key data structure object object class variable data type pointer array list or a pointer to a function or method or another way to reference a data or other item to be passed via the API.

Furthermore data types or classes may be provided by the API and implemented by the API implementing component. Thus the API calling component may declare variables use pointers to use or instantiate constant values of such types or classes by using definitions provided in the API.

Generally an API can be used to access a service or data provided by the API implementing component or to initiate performance of an operation or computation provided by the API implementing component. By way of example the API implementing component and the API calling component may each be any one of an operating system a library a device driver an API an application program or other module it should be understood that the API implementing component and the API calling component may be the same or different type of module from each other . API implementing components may in some cases be embodied at least in part in firmware microcode or other hardware logic. In some embodiments an API may allow a client program e.g. game center application to use the services provided by a Software Development Kit SDK library. In other embodiments an application or other client program may use an API provided by an Application Framework. In these embodiments the application or client program may incorporate calls to functions or methods provided by the SDK and provided by the API or use data types or objects defined in the SDK and provided by the API. An Application Framework may in these embodiments provide a main event loop for a program that responds to various events defined by the Framework. The API allows the application to specify the events and the responses to the events using the Application Framework. In some implementations an API call can report to an application the capabilities or state of a hardware device including those related to aspects such as input capabilities and state output capabilities and state processing capability power state storage capacity and state communications capability etc. and the API may be implemented in part by firmware microcode or other low level logic that executes in part on the hardware component.

The API calling component may be a local component i.e. on the same data processing system as the API implementing component or a remote component i.e. on a different data processing system from the API implementing component that communicates with the API implementing component through the API over a network. It should be understood that an API implementing component may also act as an API calling component i.e. it may make API calls to an API exposed by a different API implementing component and an API calling component may also act as an API implementing component by implementing an API that is exposed to a different API calling component.

The API may allow multiple API calling components written in different programming languages to communicate with the API implementing component thus the API may include features for translating calls and returns between the API implementing component and the API calling component however the API may be implemented in terms of a specific programming language. An API calling component can in one embedment call APIs from different providers such as a set of APIs from an OS provider and another set of APIs from a plug in provider and another set of APIs from another provider e.g. the provider of a software library or creator of the another set of APIs.

It will be appreciated that the API implementing component may include additional functions methods classes data structures and or other features that are not specified through the API and are not available to the API calling component . It should be understood that the API calling component may be on the same system as the API implementing component or may be located remotely and accesses the API implementing component using the API over a network. While illustrates a single API calling component interacting with the API it should be understood that other API calling components which may be written in different languages or the same language than the API calling component may use the API .

The API implementing component the API and the API calling component may be stored in a machine readable medium e.g. computer readable medium which includes any mechanism for storing information in a form readable by a machine e.g. a computer or other data processing system . For example a machine readable medium includes magnetic disks optical disks random access memory read only memory flash memory devices etc.

In Software Stack in one embodiment of the present invention applications can make calls to Services A or B using several Service APIs and to Operating System OS using several OS APIs. Services A and B can make calls to OS using several OS APIs.

Note that the Service has two APIs one of which Service API receives calls from and returns values to Application and the other Service API receives calls from and returns values to Application . Service which can be for example a software library makes calls to and receives returned values from OS API and Service which can be for example a software library makes calls to and receives returned values from both OS API and OS API . Application makes calls to and receives returned values from OS API .

If the user owns the game e.g. game name on the user s current system then the alert also includes an accept option to accept the specific game a decline option to decline the game invite and an optional dismiss option to dismiss the game invite. Selection of the dismiss option allows the user to decide at a later time whether to decline or access the game.

The invite may be in the form of an alert if the user owns the game but not on the current system being used by the user. The alert includes a user name e.g. user name of the player that sent the invite a game name e.g. game name and a message field . The player that creates the invite composes a message in the message field .

The alert also includes a decline option to decline the game invite a download option to download the game from an online application service e.g. application store and an optional dismiss option to dismiss the game invite. Selection of the dismiss option allows the user to decide at a later time whether to decline or download the game.

The invite may be in the form of an alert if the user does not own the game. The alert includes a user name e.g. user name of the player e.g. friend that sent the invite a game name e.g. game name and a message field . The alert also includes a decline option to decline the game invite an access option e.g. app store buy to access a fully functional or limited version of the game from an online application service e.g. application store and an optional dismiss option to dismiss the game invite. Selection of the dismiss option allows the user to decide at a later time whether to decline or download the game.

Upon a user selection of the access option the processing logic automatically directs the user to an application service e.g. application store to purchase the specific game in response to a user selection of the access option e.g. buy application store . Alternatively the processing logic may automatically direct in response to the user selection of the access option the user to the application service to access for free a fully functional version of the game for a limited time period or a limited functionality demo copy. In one embodiment a game invite includes at least one of a graphical icon for the game a game name a rating for the game an ability to access the game and a price for purchasing the game.

The user interface also includes information which includes a user s name e.g. Mel a number of friends a number of games played and a number of achievements. The information also includes games we played together e.g games that Mel and a selected friend have played together other games in common and games not owned by Mel .

Friends includes a ranked list of Mel s friends for Game Name . Everyone includes a ranked list of all users for Game Name .

In certain embodiments a certain number of top players are listed e.g. 10 20 and if the user e.g. Mel is not in this list then the user s ranking is also listed e.g. 1900th . A show more option e.g. can be selected to display additional player rankings.

In an embodiment an incoming friend request may be associated with an email address. The user s address book or contact information associated with the user s contacts can be searched to find a match with the email address. If a match occurs then the incoming friend request will display a real name or nickname for the player who sent the incoming friend request to the user.

In one embodiment option is selected and then user name is also selected. Information includes details regarding the player that sent the friend request such as a representation e.g. avatar and a short message from this player. The user interface also includes an accept option to accept a request decline option to decline a request and a report a concern option to report a concern regarding the user name . Additional options may also be provided as illustrated and discussed in conjunction with the description of .

In an alternative embodiment the user interfaces illustrated in may also be used in mobile phone devices.

Various types of texture layers can be used for forming the desired object or other types of objects. The texture layer s can vary in color intensity pattern etc. across portions of a desired object to create a customized object and user interface.

In the foregoing specification the disclosure has been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the disclosure as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

