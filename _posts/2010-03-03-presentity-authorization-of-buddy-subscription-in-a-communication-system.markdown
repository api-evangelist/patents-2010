---

title: Presentity authorization of buddy subscription in a communication system
abstract: A server, computer readable medium and method for accessing buddy data related to a first user (presentity) that is connected to a communication network that includes a server, the data being accessed by a second user (watcher) connected to the communication network. The method including storing, at a server, information associated with a plurality of users associated with the presentity as the buddy data, receiving, at the server, a request from a watcher for buddy data of the presentity, authorizing, at least in part by the server, the request for buddy data, and transmitting, by the server, the buddy information to the watcher.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09357026&OS=09357026&RS=09357026
owner: TELEFONAKTIEBOLAGET LM ERICSSON (PUBL)
number: 09357026
owner_city: Stockholm
owner_country: SE
publication_date: 20100303
---
The present invention generally relates to communication systems devices software and methods and more particularly to mechanisms and techniques for authorizing a user to receive information related to another user in a communication system.

During the past years the interest in using mobile and landline wireline computing devices in day to day communications has increased. Desktop computers workstations and other wireline computers currently allow users to communicate for example via e mail video conferencing and instant messaging IM . Mobile devices for example mobile telephones handheld computers personal digital assistants PDAs etc. also allow the users to communicate via e mail video conferencing IM etc. Mobile telephones have conventionally served as voice communication devices but through technological advancements they have recently proved to be effective devices for communicating data graphics etc. Wireless and landline technologies continue to merge into a more unified communication system as user demand for seamless communications across different platforms increases.

Many communication applications allow for real time or near real time communication that falls outside of the traditional voice communication associated with wireline and wireless telephone communications. Chat sessions instant messaging Short Message Service SMS video conferencing are a few such communication vehicles. Many of these types of communications are expected to become increasingly popular particularly in view of the proliferation of wireless devices and continual technological breakthroughs.

In order to implement such technologies presence technology is used to determine the location willingness to communicate and other parameters relating to real time or near real time communications. The presence technology generally refers to applications and services that facilitate location and identification of one or more endpoints to such communication links. For example if a first user of a wireless handheld device intends to initiate an IM session with a second IM user presence services may be used to present the second user s willingness to receive IM messages. Presence services are an integral part of third generation 3G wireless networks and are intended to be employed across a wide variety of communication devices.

Presence information may be created at a presence server or an associated system. Presence information may be a status indicator that conveys the ability and willingness of a potential user to communicate with other users. The presence server may provide the presence information for distribution to other users to convey the availability of the user for communication. Presence information is used in many communication services such as IM and recent implementations of voice over IP communications.

More specifically a user client may publish a presence state to indicate its current communication status. This published state informs others that wish to contact the user of his availability and willingness to communicate. One use of presence is to display an indicator icon on IM clients for example a choice of a graphic symbol with an easy to convey meaning and a list of corresponding text descriptions of each of the states. This is similar to the on hook or off hook state of a fixed telephone.

Common states regarding the user s availability are free for chat busy etc. Such states exist in many variations across different modern instant messaging clients. However the standards support a rich choice of additional presence attributes that may be used for presence information such as user mood location or free text status.

Presence service is typically implemented as a network service which accepts stores and distributes presence information. The presence service may for example be implemented as a single server or may have an internal structure involving multiple servers and proxies. There may be complex patterns of redirection and proxying while retaining logical connectivity to a single presence service. Also presence service may be implemented as direct communication among presentity and watchers i.e. a server is not required.

A number of entities may be implemented in a presence service architecture. One of these entities is referred to as the Presentity which is an entity that provides presence information. Another entity is the Presence Server which receives presence information from presentities. The Watcher is an entity that is interested in the presence information.

The presence information e.g. location willingness to communicate at a certain time or with certain users etc. may be collected and utilized by presence servers which may notify authorized Watchers who are interested in certain presence information. Watcher applications may be implemented in wireline and or wireless terminals to obtain presence information from the presence servers about other users. This may come in the form of a notification issued to the Watcher by the Presence Server.

Notifications to users watchers that a targeted user device has become available may be sent as complete or partial presence information. In other words there are a number of different pieces of presence information that can be associated with the totality of the presence information. In a similar manner to the presence information and associated structure there are location servers and location information regarding the users. The location information may include geographical location information.

Presence technology has been implemented in many different types of networks including those using Session Initiation Protocol SIP for communications such as networks operating in conformance with IP Multimedia Subsystem IMS standards. The basic SIP Presence XML PIDF document is described in IETF RFC 3863 and the basic SIP presence event package is defined in IETF RFC 3856. These RFCs describe how a Watcher can subscribe to presence information of a Presentity using SIP signaling. Once the Watcher has been authorized by the Presentity e.g. using a presence.watcherinfo event package as described in IETF RFC 3857 changes to the presence information will be notified to the Watcher via SIP. The notification contains the presence information enclosed in the PIDF XML document.

The list of watchers associated with a Presentity is included in a Watcherinfo XML document. The Presentity subscribes to the presence.watcherinfo event of their own Watcherinfo XML document. This subscription is automatically authorized by the Presence system. When a new Watcher requests a subscription to the Presentity it is added to the pending section of the Watcherinfo document and this change is notified to the Presentity. The Presentity can now authorize i.e. allow or reject the new Watcher. In OMA IMS XCAP is used to edit the Presence authorization document. Once authorization is complete the new Watcher gets to see the latest presence information in case the subscription is still active or when a new subscription request is issued i.e. a presence notification is sent to the Watcher as including the latest information of the Presentity.

Communities and social networks e.g. Facebook MySpace Yahoo MSN and Google are among the leading wireless service providers WSPs on the Internet today. Presence is already established in these Internet communities with different solutions for different communities. A significant aspect of many Internet communities is the ability to extend one s own network by finding people who have a common interest or by finding people who are friends of people you know yourself. The successful Social networks provide several ways to extend your network and interact with new people. This ability to extend your network is a significant aspect of such social networks and is used in so called viral marketing to spread marketing messages amongst friends and spread the message even wider as people add new friends.

However care must be taken with people s social network information. People want to extend their social network but also want to control the privacy and security regarding the information that is passed around in their social network. So this ability to extend a social network also needs to be coupled with proper security and privacy mechanisms.

Considering this social network functionality in the context of IMS networks IMS provides a managed multimedia network with security and QoS capabilities. IMS is primarily for exchanging presence information and establishing multimedia sessions between users. In addition IMS networks can be used to establish sessions between network servers and users. This make IMS networks valuable to Internet WSPs where the IMS network is exposed to the WSPs via e.g. HTTP based interfaces such as RESTful or PARLAY X. Two examples of how IMS Presence technology can be used to support a WSP web site include 1 enabling users of a web site to see other user s presence and providing a presence engine hosted in a IMS.Presence Server to push content to users and 2 enabling users subscribe to a content feed and notifying such users of content updates via the presence mechanisms.

However presence usage within IMS 3GPP OMA specified systems is based upon the aforedescribed IETF RFCs. Thus while there may be many watchers of the presence event package for a Presentity in IMS there is typically only one watcher of the presence.watcherinfo event package namely the Presentity itself. In other words according to the standard only the user can see the list of other users they are associated with i.e. only the user can see its own list of authorized watchers. This means that there is no mechanism defined for IMS which would enable users to extend one s buddy or friend list e.g. based upon information from other people s presence lists. Thus the social networking and viral effects that are so successful on Internet web sites are not supported in the IMS Presence systems today.

Accordingly it would be desirable to provide devices systems and methods for presence based applications that avoid the afore described problems and drawbacks. More specifically it would be desirable to provide mechanisms which enable buddy subscription in Presentities with such mechanisms preferably employing authorization techniques that provide users with adequate security and privacy that they demand.

The following exemplary embodiments provide a number of advantages and benefits relative to existing presence systems devices and methods including for example the possibility to enable users to expand their contacts in e.g. an IMS presence system by leveraging their existing relationships with presentities so that they can be introduced to other presentities. Advantageously such introductions can be controlled in a number of different ways to take into account privacy concerns of the users. Other advantages include re use of existing presence mechanisms according to some exemplary embodiments to provide buddy information which enables such introductions. It will be appreciated by those skilled in the art however that the claims are not limited to those embodiments which produce any or all of these advantages or benefits and that other advantages and benefits may be realized depending upon the particular implementation.

According to an exemplary embodiment a method for obtaining buddy data associated with buddies of a presentity in a communication network includes the steps of storing at a server information associated with a plurality of users associated with the presentity as the buddy data receiving at the server a request from a watcher for buddy data of the presentity authorizing at least in part by the server the request for buddy data and transmitting by the server the buddy information to the watcher.

According to another exemplary embodiment a server administering access to buddy data related to a presentity connected to a communication network that includes the server the data being accessed by a watcher connected to the communication network includes a memory device configured to store information associated with a plurality of users associated with the presentity as the buddy data a processor connected to the memory device configured to receive a request from the watcher for buddy data of the presentity and to authorize at least in part the request for buddy data and an interface configured to transmit the buddy information to the watcher.

The following description of the exemplary embodiments refers to the accompanying drawings. The same reference numbers in different drawings identify the same or similar elements. The following detailed description does not limit the invention. Instead the scope of the invention is defined by the appended claims. The following embodiments are discussed for simplicity with regard to the terminology and structure of presence servers discussed in the context of IMS systems. However the embodiments to be discussed next are not limited to these systems but may be applied to other communication systems.

Reference throughout the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with an embodiment is included in at least one embodiment of the present invention. Thus the appearance of the phrases in one embodiment or in an embodiment in various places throughout the specification are not necessarily all referring to the same embodiment. Further the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

In order to provide some context for the subsequent discussion regarding buddy mechanisms according to exemplary embodiments initially an overview of a system including a presentity a presence server and multiple watchers in which such buddy mechanisms can be implemented is discussed. As shown in according to an exemplary embodiment a general communication system that uses presence data may include a plurality of presentities 1 n represented by presentities and a presence server an optional location server a presence XDMS server and a plurality of watchers 1 n represented by watchers and . The presence server the location server and the XDMS server may be part of a single server or may be implemented as separate servers located at separate physical locations. The presence server the location server and the presence XDMS server may communicate directly to each other or via one of these servers as shown in . The communication path may be wireline or wireless. The presentities and the watchers may communicate with each of the presence server the location server and the presence XDMS server or may communicate via a single port not shown with the single server . The communication of the presentities and the watchers with the servers may be wireline or wireless.

The concept of presence and associated concepts are for example standardized by the Internet Engineering Task Force IETF and the standardization specifications the entire content of which are incorporated by reference herein may be found at http www.ietf.org. Systems and methods which use presence can be found in various networks including the networks described herein and can be used to improve networks which use network based address books. A number of entities may be implemented in a presence server architecture. One of these entities is the presentity which is an entity that provides presence information. Another entity is the presence server which receives presence information from presentities. The watcher is an entity that is interested in the presence information e.g. information indicating that other users and their respective devices are online and other related status information.

The presence information e.g. location willingness to communicate at a certain time or with certain users information regarding business cards etc. may be collected and utilized by presence servers which may notify authorized watchers who are interested in certain presence information. Watcher applications may be implemented in wireline and or wireless terminals to obtain presence information from the presence severs about other users. This may come in the form of a notification issued to the watcher by the presence server. The presence entities may use Session Initiation Protocol SIP as a presence protocol and uses a general event notification framework defined for SIP and as such makes use of the SUBSCRIBE and NOTIFY methods defined in the presence specifications.

An event package which is introduced in the presence system and is defined in RFC 3265 is based on the concept of a presence agent which is a logical entity that is capable of accepting subscriptions storing subscription state and generating notifications when there are changes in presence. The entity is defined as a logical one since it may be co resident with another entity. A Presence User Agent PUA manipulates presence information for a presentity. This manipulation can be the side effect of some other action such as using an Extensible Markup Language XML Configuration Access Protocol XCAP PUT message to add a new Contact or can be performed explicitly through the publication of presence documents e.g. using SIP PUBLISH. A user may have many devices such as a cell phone and a personal digital assistant PDA each of which may be independently generating a component of the overall presence information for a presentity. PUAs push data into the presence system but are outside of it in that they do not receive SUBSCRIBE messages or send NOTIFY messages.

A presence agent PA is a SIP user agent which is capable of receiving SUBSCRIBE requests responding to them and generating notifications of changes in the presence state. A presence agent may have knowledge of the presence state of a presentity. This means that it has access to presence data manipulated by PUAs for the presentity. A PA is also a notifier as defined in RFC 3265 that supports the presence event package.

A presence server is a physical entity that may act as either a presence agent or as a proxy server for SUBSCRIBE requests. When acting as a PA it is aware of the presence information of the presentity through some protocol means. When acting as a proxy the SUBSCRIBE requests are proxied to another entity that may act as a PA. When an entity the subscriber wishes to learn about presence information from some other user it creates a SUBSCRIBE request. The SUBSCRIBE request is carried along SIP proxies as other SIP requests. In most cases it eventually arrives at a presence server which may either generate a response to the request in which case it acts as the presence agent for the presentity or proxy it on to an edge presence server. If the edge presence server handles the subscription it is acting as the presence agent for the presentity.

The presence agent whether in the presence server or edge presence server first authenticates the subscription then authorizes it. If authorized an OK response is returned. If authorization could not be obtained at this time the subscription is considered pending and another response is returned. In both cases the PA sends an immediate NOTIFY message containing the state of the presentity and of the subscription. As the state of the presentity changes the PA generates NOTIFYs containing those state changes to all subscribers with authorized subscriptions. Changes in the state of the subscription itself can also trigger NOTIFY requests that state is carried in the Subscription State header field of the NOTIFY message and would typically indicate whether the subscription is active or pending.

In many communications applications such as Voice over IP instant messaging and presence the network servers may access per user information in the process of servicing a request. This per user information may reside within the network but may be managed by the end user themselves and its management can be performed through a multiplicity of access points including the web a wireless handset or a PC application.

There are many examples of per user information. One is presence authorization policy which defines rules about which watchers are allowed to subscribe to a presentity and what information they are allowed to access. Another is presence lists which are lists of users whose presence is desired by a watcher. One way to obtain presence information for the list is to subscribe to a resource which represents that list. In this case the Resource List Server RLS requires access to this list in order to process a SIP SUBSCRIBE request for it. Another way to obtain presence for the users on the list is for a watcher to subscribe to each user individually. In that case it is convenient to have a server store the list and when the client boots it fetches the list from the server. This would allow a user to access their resource lists from different clients.

A protocol that may be used to manipulate this per user data is XCAP. XCAP is a set of conventions for mapping XML documents and document components into hypertext transport protocol HTTP Uniform Resource Identifiers URIs rules for how the modification of one resource affects another data validation constraints and authorization policies associated with access to those resources. Using this structure normal HTTP primitives may be used to manipulate the data.

Each application where an application refers to a use case that implies a collection of data and associated semantics that makes use of XCAP specifies an application usage. This application usage defines the XML schema for the data used by the application along with other pieces of information. One task of XCAP is to allow clients to read write modify create and delete pieces of that data. An XCAP server acts as a repository for collections of XML documents. There may be documents stored for each application. Within each application there are documents stored for each user. Each user may have a multiplicity of documents for a particular application. To access some component of one of those documents XCAP defines an algorithm for constructing a URI that may be used to reference that component. Components refer to any element or attribute within the document. Thus the HTTP URIs used by XCAP point to a document or to pieces of information that are finer grained than the XML document itself. An HTTP resource which follows the naming conventions and validation constraints defined here is called an XCAP resource. Because XCAP resources are also HTTP resources they can be accessed using HTTP methods. Reading an XCAP resource is accomplished with HTTP GET creating or modifying one is done with HTTP PUT and removing one of the resources is done with an HTTP DELETE. With this presence background which can be used in support of and or in conjunction with exemplary embodiments described herein examples of buddy mechanisms according to exemplary embodiments are now described below.

According to an exemplary embodiment a mechanism is provided which enables for example a Watcher to request access to the buddy data of a Presentity to which it is already subscribed and to allow the Presentity to authorize the Watcher to have access to this buddy data or some part of it . From this buddy data the user can then contact other users e.g. to expand his or her contact list.

A general method for sending buddy information associated with a Presentity one user to a Watcher another user in an IMS system is shown in the flowchart of in this example from the point of view of the Presentity and or the presence server . That is all of the steps illustrated in can be performed by a Presentity all of the steps can be performed by the presence server or one or more of the steps can be performed by each. Therein at step a list of users buddies associated with Presentity e.g. including a subset or possibly the complete set of the Watchers . . . N is established stored. According to exemplary embodiments the Watcher can subscribe to this buddy list or parts of this buddy list to obtain information about users associated with Presentity e.g. by sending a SIP message to the Presentity requesting buddy information as indicated by step .

However as shown in step the Presentity will first perform an authorization process to determine whether to grant the requesting subscribing user access to this buddy information. If the Watcher is granted authorization to access some or all of the buddy information the Presentity will then send the authorized buddy information to the subscribing user. Once authorized buddy information can be updated on a subscription basis e.g. in a manner similar to that by which presence information is provided to subscribing users. This buddy information by the subscribing user can then be used to for example expand his or her contact list associated with the IMS system. Each of the steps illustrated in will now be described in more detail.

Starting with step a Presentity will according to exemplary embodiments store its buddy information in a suitable data structure e.g. a list or database so that it can make such buddy information available to authorized subscribers. The buddy information can for example be stored in a memory device associated with the Presentity and can include one or more of the data elements illustrated in the exemplary buddy list shown in . Exemplary memory devices are described below with respect to .

Therein the data structure buddy list includes one or more data elements associated with each buddy in the list. For example each buddy can be represented in the buddy list by one or more of a display name an addressable name and a public private indicator. According to one exemplary embodiment when a user requests buddy information from a Presentity and is authorized to receive such data the Presentity may send that user only a display name associated with one of its buddies. The display name is usable as described below to request contact with that buddy via the Presentity but not usable by the requesting Watcher to directly contact the buddy. Alternatively the buddy list can include an addressable name associated with each buddy in the list . The addressable name can be used by the Watcher who requested the buddy information to directly contact the buddy e.g. to ask that user if it is ok to add him or her to the Watcher s presence list without necessarily going through Presentity for the introduction. The buddy list may also include a public private indicator associated with each buddy in the list. This indicator can be used by the buddies and by Presentity to selectively filter out some buddies who prefer that their names not be shared in response to a request for buddy information from a Watcher . If used in the buddy list a successful requester of buddy information would then only receive the display name or addressable name of those users in the list that have been flagged as public .

In addition to the type and amount of information which is stored for each user in a buddy list the manner in which users are selected for storage in a Presentity s buddy list may also vary according to exemplary embodiments. There are a number of possible lists that could be used as buddy list according to exemplary embodiments and these can be grouped generally into two categories static lists dynamic lists. There are three static lists held in the XDMS server which respectively describe 1 all users who the Presentity has granted permission to watch their presence 2 all users who the Presentity has blocked from watching their presence and 3 all known users i.e. List List . There are also dynamic lists held in the presence server regarding who is currently subscribed to watch the Presentity . These dynamic lists will typically hold a subset of the users on the static list which lists all those users who are allowed to watch i.e. who are allowed to receive presence information. For example one dynamic list can include those active watchers that are online i.e. excluding those who are allowed to watch but who are currently not watching. The dynamic list of those currently watching is the watcherinfo list. Any one of these lists or any other list of users can be used as buddy list according to various exemplary embodiments.

Having buddy list information stored and available for use step a Presentity and or the presence server can receive requests to subscribe to the Presentity s buddy information e.g. from one of its already subscribed Watchers at step . This can be accomplished by for example the Presentity and or the presence server receiving a SIP message requesting buddy information step which has been transmitted by a Watcher as will be described in more detail below with respect to .

At step the Presentity and or the presence server processes a received buddy information request to determine whether the requester is authorized to receive such information. This can be accomplished according to exemplary embodiments in a number of different ways. For example the presence server may first receive the request from a Watcher and apply a policy thereto. An exemplary policy for authorizing buddy list information requests at the presence server is to determine whether the requesting Watcher is a buddy of Presentity e.g. listed on the allowed list for Presentity in the Presence XDMS . Alternatively if the presence server determines that the requesting Watcher is a buddy of the Presentity whose buddy information it is requesting then the presence server can authorize release of that Presentity s public buddy information.

Various other authorization mechanisms are also contemplated. For example if the presence server detects that a Watcher who is requesting buddy information is not in the allowed or similarly is on the blocked list of the Presentity for whom the Watcher is requesting buddy information then the presence server can treat the request for buddy information as a presence subscription request. That is under these circumstances the presence server can send a watcher info notification to the Presentity whose buddy information was requested to determine if the requesting Watcher can first be qualified to receive presence information. In this exemplary embodiment the Presentity is notified of the new subscription request i.e. because Presentity is subscribed for changes. Suppose that for the sake of this example Presentity decides to accept the request for the Watcher to become a subscriber to its presence information. In this case the Presentity edits the presence authorization rules to approve the request and Watcher receives a successful response to the subscription to the list of associated users. According to another exemplary embodiment the presence server detects that Watcher is requesting buddy information rather than presence information and acts as though this Watcher is not in the allowed list of Presentity and so sends a watcher info notification to Presentity because Presentity is subscribed for changes as normal and therefore edits the presence authorization rules to approve reject the request. The presence authorization rules now capture the distinction between users who can watch the presence info for Presentity and users who can watch the buddy information of Presentity .

It will be appreciated from the foregoing that at least some exemplary embodiments will result in different levels of authorization to receive data from Presentities i.e. some Watchers may be authorized to receive only presence information other Watchers may be authorized to only receive buddy information and or that some Watchers may be authorized to receive both types of information associated with a particular Presentity . Thus for such exemplary embodiments the presence authorization rules will capture these distinctions e.g. between users who can watch the presence data for Presentity and users who can watch the buddy list of Presentity . For other exemplary embodiments these different levels can be reduced to one e.g. wherein all authorized Watchers can receive both presence information and buddy information.

Whereas in the previous exemplary embodiment the authorization step is performed using a modified version of existing presence authorization mechanism and a presence authorization document another solution would be to add a new authorization mechanism separate from but similar to the presence solution e.g. a Buddy authorization XDMS is introduced as shown in wherein the remaining elements are numbered and operate as described above with respect to . According to this exemplary embodiment the watcher info subscription authorization and the presence authorization mechanisms can re use the same basic functionality but different authorization documents are used i.e. a presence authorization document and a buddy list authorization document are both used. Yet another alternative for performing the authorization step according to an exemplary embodiment is to have the Presentity subscribe to watcher info of the watcher info in which case Watcher s subscription to watcher info would result in a notification to Presentity within that subscription. To expand on this exemplary embodiment consider that typically a User A subscribes to their own watcherinfo and when user B subscribes to user A for Presence then user A gets notifed of the change via watcherinfo. However according to this exemplary embodiment it is further desirable for user B to subscribe to the watcherinfo of A and thus an additional mechanism is needed to notify user A. One option for providing this mechanism is to overload the presence.winfo event. In such a case the presence server is configured to determine that a particular SUBSCRIBE signal is from user B and then it shall notify user A. Another option for providing this mechanism according to an exemplary embodiment separates these functions more explicitly. In this second case user A subscribes to Watcherinfo i.e. to obtain notifications of presence subscribes and user A also subscribes to new event presence.winfowinfo i.e. to obtain notifications of Buddyinfo subscribes .

Once authorization is completed and assuming that the requesting Watcher is authorized to receive buddy information then that information is delivered to the Watcher as indicated by step . As mentioned earlier the actual buddy information which is delivered to the Watcher can vary from implementation to implementation or even within a single implementation based on the Watcher s access level if varying levels of access are provided. For example the delivered buddy information could include the full information about all watchers on the Presentity s buddy list the full information but only for those watchers who allow their buddy information to be distributed the full information but only for the currently subscribed watchers or a subset of the buddy list information e.g. a public part of the information for any of the groups of watchers mentioned above. According to exemplary embodiments and also as described above this latter mechanism can involve usage of a new XML document format that only provides the public elements of watcherinfo and only gives user display names rather than full user ids. Moreover providing only a public portion of the buddy list information can be implemented as a configurable mechanism and not require a new user management mechanism.

In addition to considering buddy mechanisms from the perspective of the Presentity and or the presence server other exemplary embodiments also consider buddy information from the perspective of the Watcher as shown generally in the flow diagram of . Therein at step a Watcher sends a request for buddy information and subsequently receives a response at step e.g. a buddy list. Subsequent to receipt of the buddy information Watcher then decides to contact one of Presentity s buddies e.g. Presentity using the buddy information e.g. in order for Watcher to expand its group of friends at step . Step can be performed in a number of different ways according to exemplary embodiments depending upon at least in part the information which was received in the buddy list.

For example suppose that the Watcher decides that it would like to communicate with one of the elements from the buddy list of Presentity which it received in response to a buddy list request. The target user is identified as Presentity however Watcher only has the display name for Presentity which it received in step and so cannot subscribe directly to the presence information of Presentity . Accordingly Watcher sends a request to Presentity asking that Presentity should request Presentity to allow Watcher to subscribe to its presence information. Presentity can approve or reject this request or the request can be automatically granted if Watcher is a buddy of Presentity . According to one exemplary embodiment this functionality to contact a buddy of Presentity can be implemented as a subscribe request from Watcher to Presentity indicating that the subscription is meant for Presentity. The presence server then relays the request to Presentity indicating that for example the request is a third party subscription initiated by Watcher and relayed by Presentity .

According to another exemplary embodiment a REFER mechanism can be used wherein a REFER message is sent to Presentity as a result of the subscription request of Watcher . As yet another alternative Presentity may indicate to Watcher that he or she allows the subscription to contact Presentity and the full id of Presenity is returned to Watcher . Watcher can then send a normal subscribe message using the full identity of Presentity and Presentity can approve or reject this subscription.

As described above some exemplary embodiments involve the transmission or reception of e.g. SIP signals in IMS systems which facilitate the request for authorization of and delivery of buddy information. Accordingly a detailed yet still purely illustrative signal diagram according to an exemplary embodiment will now be described with respect to . Therein Watcher is already authorized to watch Presentity i.e. to receive presence information about Presentity . Watcher now wishes to obtain access to the buddy data of Presentity . The signaling sequence of shows how according to one exemplary embodiment Watcher requests permission from Presentity to have access to the buddy data of Presentity and then how that Watcher subsequently requests permission to subscribe to the presence data of Presentity who is one of the buddies of Presentity . In this example authorization of the buddy information request is performed by re using the Watcher Info list which is normally used for supplying presence information and applying a new authorization policy to that list to determine authorization to obtain buddy information. However other authorization mechanisms are possible and contemplated some of which were described above.

Starting with signal Watcher subscribes to the buddy data of Presentity by transmitting signal to the presence server . In this embodiment signal is exemplified as a SIP SUBSCRIBE to watcher info of Presentity signal although other types of signals can alternatively be used to request buddy information. Presence server and XDMS or apply policy as indicated by signaling e.g. in one of the ways described above and decide to pass the request on to Presentity for authorization via a SIP NOTIFY signal .

After acknowledging receipt of the request via SIP 200 OK message to the presence server Presentity edits the XDMS document associated with presence buddy authorization to give its authorization for Watcher to receive buddy information and to inform the XDMS or as shown by the XCAP signaling . The presence server is notified which subsequently acknowledges the original SIP SUBSCRIBE signal via SIP 200 OK signal and then informs the Watcher of the buddy information via signal . In this example only the public portion of Presentity s buddy information is sent to Watcher which as described above includes basic information about the buddies of Presentity one entry of which is for Presentity .

Suppose that in this exemplary scenario Watcher wishes to obtain presence information from Presentity . According to this example the Watcher needs to do this via referral from Presentity although other mechanisms could alternatively be used as described above. Thus Watcher requests Presentity via presence server to refer him to Presentity via signal and to request that Watcher can subscribe to presence data of Presentity . After applying policy to determine if Watcher is authorized signal Presentity passes on the request to Presentity via signal who authorizes the request via signal . The response signal to Watcher includes the full identity of Presentity as opposed to e.g. the display name which was provided to Watcher as all or part of the public information in signal .

Watcher then subscribes to the presence data of Presentity via signal . After applying policy to determine if this request is authorized via signaling presence server then notifies Presentity of the request via signal which signal is acknowledged via signal . Presentity edits its XDMS document by wavy of signaling toward XDMS or to give its authorization to Watcher s request and a response signal is then sent to Watcher indicating its authorization to receive presence information from Presentity via signals and .

Terminals that may act as presentity and or watchers as described in connection with the exemplary embodiments may be desktop personal computers workstations large scale computing terminals wireless terminals or any other computing device capable of executing presence awareness applications. The wireless terminals may include devices such as wireless cellular telephones personal digital assistants PDAs or other wireless handsets as well as portable computing devices. The mobile terminals may utilize computing components to control and manage the conventional device activity as well as the functionality provided by the exemplary embodiments. Hardware firmware software or a combination thereof may be used to perform the various methods and techniques described in this document.

For purposes of illustration and not of limitation an example of a representative mobile terminal computing system capable of carrying out operations in accordance with the exemplary embodiments as e.g. a presentity or watcher is illustrated in . It should be recognized however that the principles of the present exemplary embodiments are equally applicable to standard computing systems.

The exemplary mobile computing arrangement may include a processing control unit such as a microprocessor reduced instruction set computer RISC or other central processing module. The processing unit need not be a single device and may include one or more processors. For example the processing unit may include a master processor and associated slave processors coupled to communicate with the master processor.

The processing unit may control the basic functions of the mobile terminal as dictated by programs available in the storage memory . Thus the processing unit may execute the functions described in . More particularly the storage memory may include an operating system and program modules for carrying out functions and applications on the mobile terminal. For example the program storage may include one or more of read only memory ROM flash ROM programmable and or erasable ROM random access memory RAM subscriber interface module SIM wireless interface module WIM smart card or other removable memory device etc. The program modules and associated features may also be transmitted to the mobile computing arrangement via data signals such as being downloaded electronically via a network such as the Internet.

One of the programs that may be stored in the storage memory is a specific program . As previously described the specific program may interact with a buddy server and or a presence server to fetch and or subscribe to presence information and or buddy information of one or more presentities. The specific program and associated features may be implemented in software and or firmware operable by way of the processor . The program storage memory may also be used to store data such as the various authentication rules or other data associated with the present exemplary embodiments. In one exemplary embodiment the programs and data are stored in non volatile electrically erasable programmable ROM EEPROM flash ROM etc. so that the information is not lost upon power down of the mobile terminal .

The processor may also be coupled to user interface elements associated with the mobile terminal. The user interface of the mobile terminal may include for example a display such as a liquid crystal display a keypad speaker and a microphone . These and other user interface components are coupled to the processor as is known in the art. The keypad may include alpha numeric keys for performing a variety of functions including dialing numbers and executing operations assigned to one or more keys. Alternatively other user interface mechanisms may be employed such as voice commands switches touch pad screen graphical user interface using a pointing device trackball joystick or any other user interface mechanism.

The mobile computing arrangement may also include a digital signal processor DSP . The DSP may perform a variety of functions including analog to digital A D conversion digital to analog D A conversion speech coding decoding encryption decryption error detection and correction bit stream translation filtering etc. The transceiver generally coupled to an antenna may transmit and receive the radio signals associated with a wireless device.

The mobile computing arrangement of is provided as a representative example of a computing environment in which the principles of the present exemplary embodiments may be applied. From the description provided herein those skilled in the art will appreciate that the present invention is equally applicable in a variety of other currently known and future mobile and fixed computing environments. For example the specific application and associated features and data may be stored in a variety of manners may be operable on a variety of processing devices and may be operable in mobile devices having additional fewer or different supporting circuitry and user interface mechanisms. It is noted that the principles of the present exemplary embodiments are equally applicable to non mobile terminals i.e. landline computing systems.

The presence server presence and or buddy XDMS servers or other systems for providing presence and location information in connection with the present exemplary embodiments may be any type of computing device capable of processing and communicating presence information. An example of a representative computing system capable of carrying out operations in accordance with the servers of the exemplary embodiments is illustrated in . Hardware firmware software or a combination thereof may be used to perform the various steps and operations described herein. The computing structure of is an exemplary computing structure that may be used in connection with such a system.

The exemplary computing arrangement suitable for performing the activities described in the exemplary embodiments may include a presence server or a buddy server or a presence and or buddy XDMS server . Such a server may include a central processor CPU coupled to a random access memory RAM and to a read only memory ROM . The ROM may also be other types of storage media to store programs such as programmable ROM PROM erasable PROM EPROM etc. The processor may communicate with other internal and external components through input output I O circuitry and bussing to provide control signals and the like. The processor carries out a variety of functions as is known in the art as dictated by software and or firmware instructions.

The server may also include one or more data storage devices including hard and floppy disk drives CD ROM drives and other hardware capable of reading and or storing information such as DVD etc. In one embodiment software for carrying out the above discussed steps may be stored and distributed on a CD ROM diskette or other form of media capable of portably storing information. These storage media may be inserted into and read by devices such as the CD ROM drive the disk drive etc. The server may be coupled to a display which may be any type of known display or presentation screen such as LCD displays plasma display cathode ray tubes CRT etc. A user input interface is provided including one or more user interface mechanisms such as a mouse keyboard microphone touch pad touch screen voice recognition system etc.

The server may be coupled to other computing devices such as the landline and or wireless terminals and associated watcher applications via a network. The server may be part of a larger network configuration as in a global area network GAN such as the Internet which allows ultimate connection to the various landline and or mobile client watcher devices.

The disclosed exemplary embodiments provide for example a user terminal a system a method and a computer program product for obtaining buddy data of a certain user or presentity in an IMS system. It should be understood that this description is not intended to limit the invention. On the contrary the exemplary embodiments are intended to cover alternatives modifications and equivalents which are included in the spirit and scope of the invention as defined by the appended claims. Further in the detailed description of the exemplary embodiments numerous specific details are set forth in order to provide a comprehensive understanding of the claimed invention. However one skilled in the art would understand that various embodiments may be practiced without such specific details.

For example although the foregoing exemplary embodiments describe that the single set of authentication rules e.g. the rules used to generate the authentication privileges for a user for both the buddy data and the presence data can be stored according to one exemplary embodiment on a presence data management server it will be appreciated that the particular name and or location of the server which stores the single set of rules can be varied. For example this server could also be referred to as a presence and buddy authorization rules server . The server regardless of its name could be dedicated to the storage of such rule sets or alternatively could also be used to store other e.g. similar data. In the latter case the server could then be referred to for example as a content based authorization rules server . For the purposes of this specification the term presence and buddy authorization rules server shall be generic to all such servers which may be used to store the rule sets described herein.

Although the features and elements of the present exemplary embodiments are described in the embodiments in particular combinations each feature or element can be used alone without the other features and elements of the embodiments or in various combinations with or without other features and elements disclosed herein. The methods or flow charts provided in the present application may be implemented in a computer program software or firmware tangibly embodied in a computer readable storage medium for execution by a general purpose computer or a processor.

