---

title: Location based query suggestion
abstract: Methods, systems, and apparatus, including computer programs encoded on computer storage media, for suggesting search queries based on location. One of the methods includes determining a current location of the user. A selection of the user's past search queries is generated, where each past search query in the selection is associated with a query location related to the query. A respective score is assigned to each past search query in the selection. The score for each query is based at least in part on the proximity of the current location to the query location of the query. One or more of the past search queries in the selection are provided for presentation to the user on the user's electronic device based on the assigned scores.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08301639&OS=08301639&RS=08301639
owner: Google Inc.
number: 08301639
owner_city: Mountain View
owner_country: US
publication_date: 20100129
---
This specification relates to providing suggested search queries to an electronic device for display to a user based on the location of the electronic device.

The use of mobile electronic devices with Internet connectivity has increased significantly over the past few years as the availability and speed of wireless Internet service has improved. Search queries that may have in the past been input by a user sitting at a home or office computer are now often input on the fly while the user is at a location relevant to his or her particular query. For example as a user is leaving his office he may search for nearby restaurants on his mobile telephone. Later as the user is leaving a restaurant he may use his mobile telephone to search for telephone numbers for taxi cab companies. While riding in the taxi cab he may search for movies playing at a nearby theater that evening.

This specification describes technologies relating to providing suggested queries to a user of an electronic device. In general one aspect the subject matter described in this specification can be embodied in methods for providing suggested queries to a user of an electronic device which include determining a current location of the user. A selection of the user s past search queries is generated where each past search query in the selection is associated with a query location related to the query. A respective score is assigned to each past search query in the selection. The score for each query is based at least in part on the proximity of the current location to the query location of the query. One or more of the past search queries in the selection are provided for presentation to the user on the user s electronic device based on the assigned scores. Other embodiments of this aspect include corresponding systems apparatus and computer programs recorded on computer storage devices each configured to perform the actions of the methods.

These and other embodiments can each optionally include one or more of the following features alone or in combination. One or more query search results having been previously presented to the user in response to one or more of the user s past search queries and having been previously selected by the user can be included in the generated selection. Each of the one or more query search results is associated with a location related to the query search result.

Assigning a score to a query can include assigning the score based at least in part on how recent the query was input by the user as compared to a current time. Determining the score for a query can further include basing the score on the proximity of the user s current location to the user s location when the query was input or selected by the user. Assigning a score to a query can include assigning the score based at least in part on how often the user frequents the user s current location. Assigning a score to a query can include assigning the score based at least in part on the number of search results selected by the user when the query s search results were previously presented to the user.

In general in another aspect a method is described that includes retrieving an item from a data store that includes multiple queries and query search results each associated with a location related to the query or query search result. The queries were previously input by a particular user and the query search results were previously presented to and selected by the user in response to a query by the user. A score is determined for the retrieved item. The score is based on the proximity of a current location of the user to the location associated with the retrieved item. The score is assigned to the retrieved item. Other embodiments of this aspect include corresponding systems apparatus and computer programs recorded on computer storage devices each configured to perform the actions of the methods.

These and other embodiments can each optionally include one or more of the following features alone or in combination. Determining the score for the retrieved item can further include basing the score on the how often the user frequents the user s current location. Determining the score for the retrieved item can further include basing the score on the proximity of the user s current location to the user s location when the retrieved item was input if a query or selected if a query search result by the user.

When the retrieved item is a query determining the score for the retrieved item can further include basing the score at least in part on the number of search results selected by the user when the query s search results were previously presented to the user. Determining the score for the retrieved item can further include basing the score on how recent the retrieved item was input by the user if a query or selected by the user if a query search result as compared to a current time.

In general in another aspect a method is described that includes receiving multiple queries input by a user. For each of the queries a time at which the user input the query is determined a location related to the query is determined click data related to the query is obtained where click data indicates a number of search results generated in response to the query that were clicked on by the user. The query is associated with data including the time the location related to the query and the click data. The multiple queries and associated data are stored in a data store. Other embodiments of this aspect include corresponding systems apparatus and computer programs recorded on computer storage devices each configured to perform the actions of the methods.

These and other embodiments can each optionally include one or more of the following features alone or in combination. For each of the queries a location of the user at the time the user input the query can be determined and associated with the query. For each search result clicked on by the user where the search result was generated in response to a query the search result data including the time the user input the query and the location related to the query can be determined. The search result and associated data can be stored in the data store.

Particular embodiments of the subject matter described in this specification can be implemented so as to realize one or more of the following advantages. A user can be presented on a display screen of the user s electronic device with one or more suggested queries or query search results that are relevant to the user s current location without the user making any input into his electronic device i.e. with zero clicks . As the user s current location changes the user can be presented with different suggestions that are relevant to his new current location. If the user had previously indicated interest in a query search result e.g. by clicking on a webpage the user can be presented with the query search result when it is relevant to his current location saving the user from having to re input the query and select from the search results. A user can be presented with locally relevant information about a location he may have previously searched but later forgotten about. For example if the user input a query or clicked on a query search result months ago about a restaurant and later was in the proximity of the restaurant but had forgotten about it he may be reminded by receiving a suggested query or query search result relating to the restaurant.

The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

For example the user inputs the following query SURFING LESSONS KAUAI. The set of search results includes a search result that has a link to the website for Kauai Surf School and that may also include a snippet of information about the surf school. The user clicks on the link and is directed to the Kauai Surf School website which he browses for a period of time. The user also inputs the query BEACHES KAUAI and is presented with a set of search results. The user s queries are stored in a history store and are identified as queries of the particular user.

A location related to each of the user s queries is determined and associated with the query in the history store . For example the location Kauai can be extracted from each of the two example queries above and associated with the queries as the query location. Extracting a location from the query can be performed manually or automatically. For example one or more words forming the query can be automatically compared to a collection of words or phrases previously determined to identify locations and if a match is found the word or words in the query can be extracted as a location relating to the query. In some implementations the locations identified in the collection correspond to cities venues addresses landmarks and the like and are mapped to geographic coordinates e.g. latitude and longitude. The location associated with the query as the query location can be geographical coordinates and or the corresponding name of the location i.e. city venue etc. . In some implementations query locations can have differing levels of granularity. For example a first query can be related to a specific location e.g. the geographical coordinates for the Empire State Building may be a query location for the query EMPIRE STATE BUILDING while a second query can be related to a broader location e.g. New York City for a query NEW YORK MARATHON .

Additionally other data associated with each query can also be stored with each query in the data store. For example the user s location at the time he input the query can be stored with the query as the user location . The time when the user input the query can be stored in association with the query as the query time . Click data indicating the number of search results and or which search results that were presented to the user in response to the query were clicked on by the user can be stored in association with the query.

At a later point in time i.e. time T 1 the user has now traveled to Kauai. The user is traveling with a mobile electronic device e.g. a mobile telephone which is capable of communicating with the search system over the network . A current location of the user is determined by the search system as being Kauai. As is discussed further below the current location of the user can be checked at periodic intervals by the search system . A zero click engine can search the history store to retrieve the user s previously input queries and or query search results. The queries and query search results for the user can be searched for those having a query location that are relevant to the user s current location namely Kauai. The queries input by the user at time T when the user was at home researching his trip to Kauai are found in the history store and can now be presented to the user as suggested queries that are relevant to his current location. For example a message can be displayed to the user on the display screen of his mobile electronic device that says You are in Kauai and a list of suggested queries can be presented to the user including SURFING LESSONS KAUAI and BEACHES KAUAI .

Additionally since the user had previously clicked on the query search result for the website Kauai Surf School that query search result also can be retrieved from the history store and presented to the user. Therefore the user without any clicks i.e. with zero clicks is presented with queries and or query search results relevant to his current location. In other implementations the user can initiate this process by clicking or otherwise selecting a user control to instruct his mobile electronic device to provide him with suggested queries and or query search results rather than the process initiating on its own.

The example system described here in reference to receives search queries at a search interface for transmission to a search engine. It should be understood that queries can be input and received in various types of search interfaces in various types of applications and for processing by various search engines. For example queries can be received and collected from a map application that includes a search field where a user can input a query. In another example queries are received and collected from a search page for a search engine that searches documents included in the World Wide Web. Other examples of applications that receive queries are possible.

Referring again to a location determination engine can be used to determine the location of the user at the time the user input the search query the user location . For example if the user is using a mobile electronic device then the geographical location of the mobile electronic device and therefore the user s location can be determined using various techniques some of which include using a global positioning system GPS information from the mobile device cellular telephone cell tower triangulation techniques sending a request for the location to a location service e.g. Skyhook Wireless of Boston Mass. retrieving the information from the mobile electronic device s network or receiving a manual input from the user. As another example if the user is using a WiFi enabled device the location of the device may be determined using known WiFi access points and their known geographic locations. If the user is using a computer the user s geographical location can be determined using information from the user s network provider for example using the user s IP address e.g. using a service provided by IP2Location.com of Penang Malaysia . Referring again to the previous example the user location of San Francisco can be determined as the user s location at the time the user input the search query SURFING LESSONS KAUAI .

The user action of inputting the search query can have a time stamp the query time . A location extractor can be used to determine a location related to the user s search query the query location . As described above in some implementations each word or words included in the query can be checked against a collection of terms predetermined to identify locations and if a match is found that word s can be identified as the query location. In some implementations the collection of terms is a database of location terms that can include administrative areas e.g. streets cities districts states provinces countries geographical features e.g. mountains rivers lakes landmarks e.g. important buildings monuments and venues e.g. parks stadiums . Each location term can have a corresponding latitude and longitude and may also include a shape or extent. The location extractor can extract the location term and the corresponding latitude and longitude and shape extent if there is one from the database of location terms.

In the above example the term KAUAI is identified as a location and the location extractor can identify Kauai as the query location. Other techniques for determining a location that is related to the query can be used. For example if the query is input into a search field in a map application the user s interaction with a map displayed by the map application can be used to determine a location relating to the query. By way of illustration if a map of Hawaii was displayed to the user and the user zoomed in on the map to Kauai and then input a search query BEACHES then query location can be determined to be Kauai even though Kauai was not a term in the query.

The history store is configured to store a set of queries and optionally query search results for one or more users. The queries and query search results for a particular user can be identified within the history store as belonging to the particular user. In some implementations the user logs into the search system and can be identified by data stored in a cookie. A unique identifier for the user can be used to label his queries in the query index 202.

Each query and query search result in the history store can be labeled with a query location i.e. a location related to the query or query search result. The query or query search result can be sent to the history store from the search interface already labeled with the query location. Alternatively the query or query search result can be sent to the history store at a first time and then at a later second time the query location can be sent to the history store .

The search system can be further configured to associate other data with each query or query search result including for example the user location and query time for each query. Click data for a query can also be associated with the query in the history store where the click data can indicate the number of search results clicked on by a user when presented with the search results to the query and or indicate the particular search results that were clicked on by the user.

The history store can further include query search results that were previously selected by the user when presented to the user in response to one of their queries. The query search result can also be labeled with one or more query locations which can be derived from the query search result itself and or from the query corresponding to the query search result. For example if the query is SURFING LESSONS KAUAI and the query search result is Poipu Surf Academy the location Kauai can be extracted from the query and the more specific location Poipu a town in Kauai can be extracted from the query search result. Either or both locations can be used to label the query search result item within the history store .

Each item i.e. query or query search result in the history store can be labeled with more than one query location. For example the query SURFING LESSONS KAUAI can be labeled with the query location Kauai . However since Kauai is within the state of Hawaii the larger location Hawaii can also be used to label the query. In the previous example the user may initially land at the airport in Honolulu Hi. before catching a connecting flight to the island of Kauai. Once he lands in Hawaii the history store can be searched for suggested queries and query search results relevant to his current location of Hawaii and therefore find the query SURFING LESSONS KAUAI even before he has arrived in Kauai. The query search result Poipu Surf Academy can be labeled with the query locations Poipu Kauai and Hawaii.

In other implementations each query and query search result can be labeled with one query location however a match of a current location to a query location can include a radius broad enough to capture locations that are different than but close to the user s current location. For example a query labeled with the query location Poipu can still be retrieved from the history store and presented to the user when he lands in Honolulu if Poipu is within a certain predetermined radius of the user s current location. In some implementations the predetermined radius can vary i.e. be increased or decreased as a function of the density of items in the history store. For example it may be desired to fetch a particular number of items from the history store. The radius can be increased or decreased depending on the density of items in the history store having a query location in the proximity of the current location. If there are few items in the history store having a query location within the predetermined radius to the current location then the radius can be increased to increase the number of items that will be fetched.

In some implementations geographic coordinate locations corresponding to a location or venue derived from a query or a query search result can be determined from a look up table having location and venue names correlated to corresponding geographic coordinates e.g. GPS coordinates. The distance between two locations can then be computed by known methods. Particular locations or venues may have their separation distance determined beforehand and such a distance can be used.

A zero click engine can be configured to search the history store for queries and query search results to present to the user at a later time e.g. time T 1 based on his current location at that later time. In some implementations the zero click engine can determine the current location of the user s device e.g. by using the location determination engine and then provide the user s device with a selection of queries and query search results retrieved from the history store that have a query location matching his current location. What constitutes a matching location can vary in different implementations. For example if the query location is within a predefined radius of the current location the locations can be considered a match.

In some implementations the closer the query location is to the current location the higher up the list of presented suggestions the query or query search result can be positioned. In such implementations a scoring module can be configured to determine and assign a score to items retrieved from the history store for the user and the scores can be used to rank the retrieved items for presentation to the user. For example the closer in proximity the user s current location is to the query location the higher a score that can be assigned to the query. In some implementations the closeness of the current location to a location related to a previously clicked on query result for the query can be used to determine the score. That is if for a particular query the user had clicked on a search result and the query search result was related to a location is that is close to the current location then the score for that particular query can be boosted.

Other factors can be used by the scoring module to determine a score for a query. For example the recency of the query can be determined by comparing the query time to the current time. The more recent a query the higher the score that can be assigned to the query. As another example click data associated with a query can be used to determine the score. For example the more query search results that were clicked on by a user the higher the score that can be assigned to the corresponding query.

The time at which the user input the query is determined e.g. a time stamp of the user action Step . A timestamp can be included with the query or alternatively the query can be time stamped when received by the search interface .

A location related to the query is determined Step . For example the location extractor can be used to extract a location from the query search terms as described above. That is the search terms forming the query can be compared to a collection of terms known to identify locations. If a match is found the term or terms can be identified as the query location. The query location can be a geographical location e.g. a city name can be the name of a venue e.g. Empire State Building. In some implementations a look up table having location and venue names and corresponding geographic coordinate locations e.g. GPS coordinates can be used to retrieve geographical coordinates for the query location.

Not all queries will include the query location within the search terms. Accordingly other techniques can also be used to determine the query location. For example a query for SUBWAYS does not include a geographical location and since subways are present in multiple different locations a particular location cannot be inferred from the search query alone. If no location relating to the query can be determined from the query search terms then the location of the user at the time the query was input can be used as the query location. In other implementations a query location can be inferred from one or more query search results clicked on by the user. For example if the user queries SUBWAYS and then clicks on a query search result for New York City Transit the location New York City can be extracted from the query search result and used as the query location for the corresponding query SUBWAYS.

In response to receiving the query from the user a set of search results responsive to the query is determined Step and sent to the user Step for example as a list with the most relevant search results positioned highest in the list although other techniques for presenting search results can be used.

The query is sent to the history store and labeled with the query location. In the particular example discussed here additional data is associated with the query can also be sent to the history store Step . The additional data includes the user location at the time the query was input and the time the query was input. However it should be understood that in other implementations the additional data is not sent to the history store only some of the additional data is sent or other additional data is sent to the history store in association with the query. Over time as the user continues to input queries the history store of the user s past queries accumulates. If the history store is used to store past queries of multiple users the queries can be identified as originating from a particular user so that the particular user s past history of queries can be identified and retrieved from the history store. The user can be asked whether or not he agrees to having his past queries included in the history store and can opt not to participate in which case his past queries will not be labeled with a query location and stored for later use.

If the user may select one or more query search results in order to view more information for example to be directed to a website pertaining to the search result. Information about the search results selected by the user can be referred to as the click data for the query since a user typically clicks on a result to select the result although other techniques for selecting a result can be used. The click data for the query can be determined Step . The click data can include the number of query search results that were clicked on by a user for a particular query which can indicate the user s interest in the query search results.

In some implementations the history store can also be used to store query search results labeled with a query location as was discussed above. In such implementations the click data can include the clicked search results. Each clicked search result can be included as an item in the history store that is labeled with a location related to the search result. Additional data can be associated with the search result such as the time the search result was presented to the user and or the user s location when the search result was presented to the user. The click data is sent to the history store Step . In implementations where the history store includes clicked on search results the clicked on search results associated with query locations and optionally additional data also is sent to the history store.

The query location for a query search result can be the query location of the corresponding query. In other implementations a location can be extracted from the query search result itself. As was discussed above in a previous example if the user queries SURFING LESSONS KAUAI and is presented as a search result with a link to a website for the Poipu Surf Academy then the location Poipu can be extracted from the search result and used as the query location for that particular search result. In another example any search results generated in response to the query SURFING LESSONS KAUAI which is labeled with the query location Kauai can automatically be labeled with the same query location i.e. Kauai. In other implementations search results that have not been clicked by the user can also be stored in the history store and labeled with a query location which location can be determined as discussed above.

A selection of the user s past queries is generated Step . In implementations where suggested query search results also can be presented to the user the selection can include the user s past queries and previously presented search results i.e. presented in response to the past queries . Preferably the previously presented search results is narrowed to include only search results previously selected i.e. clicked by the user.

In some implementations all the past queries and query search results stored for the particular user in the history store are included in the generated selection which includes the query location and user location i.e. location of user at time the query was input . The selection can be processed to generate two further selection the first selection can order the selected items based on the distance between the user s current location and the query location e.g. the closest items are positioned highest on a list represented the first selection and the second selection can order the selected items based on the distance between the user s current location and the user location i.e. location at query time . A score is assigned to the selected items Step .

The score assigned to a selected item i.e. to a query or query search result can be determined so that items most probable to be relevant to the user s current context are presented to the user at the top of a listing of the selected items. In some implementations the items for the user included in the history store can be indexed by either or both of the user location and query location e.g. to avoid retrieving the entire history for the particular user for scoring. If the user s device has a relatively small display area e.g. a mobile telephone then the number of items that can be presented to the user may be limited in which case selecting the few items for presentation to the user is that much more important. In some implementations a scoring function can be used that generates a score based on the proximity of the user s current location to the query location. The scoring function can also generate the score based on the recency of the query as compared to the current time the distance between the user s current location and the user location for the query and or an estimated level of interest in search results that were generated for the query if the selected item is a query and not a query search result .

The selection can be sorted according to the assigned scores with the higher scoring items at the top of the selection Step . In implementations where two selections are generated the two selections can be merged and sorted or sorted and merged . One or more selected items of the sorted list e.g. the top N items N being an integer are sent to the user s device for presentation to the user Step . For example if the user s device is a mobile telephone with limited screen space then N may be a small number like five or three items. If the user s device is a computer with a full screen then N can be a larger number thereby presenting the user with many different suggested queries and query search results.

The user can chose to select one of the suggested queries in which case the query is submitted to a search engine and a fresh set of search results is generated and presented to the user. The user can chose to select one of the suggested query search results in which case he can obtain more information about the result. For example a query search result provides a link to a webpage in which case clicking the query search result directs the user to the webpage.

In a simple implementation the values A B C D and E are determined by manual iteration and evaluation. In other implementations the values can be determined by a machine learning system. The value of E is a constant which can be used to boost the score of items considered to be more interesting and can be eliminated or set to zero.

A selected item i.e. a query or query search result is received for example by a scoring module included in a zero click engine such as the scoring module and zero click engine shown in Step . The selected item comes labeled with a query location and the proximity of the query location to the user s current location is determined Step .

The proximity of the user location i.e. the location of the user when he input the query to the user s current location is determined Step . Using this proximity determination can help to provide relevant suggestions in the following type of scenario. The user goes to Cambridge infrequently but when he does go there he often needs to find the telephone number of a taxi cab company and he likes to visit the same restaurants each visit. At a point in time the user is in Cambridge i.e. his user location is Cambridge and inputs a search query TAXI CAB and another search query RESTAURANTS CAMBRIDGE. In response to the restaurants query the user clicks on the The Gardenia search result. Now at a later point in time the user is again in Cambridge and the zero click engine presents him with the suggested queries TAXI and RESTAURANTS CAMBRIDGE and the suggested query search result The Gardenia . Because these queries and query search result were input by the user when he was in Cambridge they are labeled with the user location of Cambridge. Later when the user s current location is Cambridge there is a close proximity i.e. direct match of his current location to the user location for these items in the selection which is factored into their scores.

In some implementations the value B in the above scoring function can be set to zero 0 or this step eliminated altogether to prevent queries input at locations the user frequents e.g. his home and office from always showing up when the user is near those locations and effectively drowning out other potentially more interesting queries.

In some implementations to avoid the above described problem a location familiarity score for the user s current location can be determined for example using the following function Familiarity Count All locations Count Locations within km ml of Current Location 

In the above formula the Count All locations refers to the total number of current locations reported for the user which can be limited in some examples to a certain time period. For example a historical set of reported current locations for the user can be stored optionally with timestamps in a store of location history indexed by user. The value for Count All locations can be obtained from the store of location history. The Count Locations within X km ml of Current Location refers to the number of total locations within the store of location history for the user that are within a predefined distance to the user s current location. Consider the following illustrative example the user s current location is a coffee shop a block from his office and the predefined distance is 1 kilometer or mile . The Count All locations value is 100 locations. The Count Locations within 1 km of current location is 55 locations. The Familiarity score is therefore 100 55 or 1.8. Later the user is 5 kilometers away from his office and the Count Locations within 1 km of current location is only 10 locations. The Familiarity score is therefore 100 10 or 10. The familiarity score can then be used to determine the value of B for example B B Familiarity. B can be determined by manual iteration and evaluation or by a machine learning system. Multiplying the value B by the Familiarity score can boost scores for queries input by a user in a location of which he does not usually frequent when he is later at the same location e.g. Cambridge in the above example by giving a higher score to a current location the user visits less often and a lower score to a current location the user frequents often e.g. his office . In some implementations certain queries or types of queries can be suggested to the user when he is at places he frequents for example queries relating to stock prices or the weather can be suggested to him when he is at a location having a very low familiarity score indicating he frequents it often such as his home or office.

Referring again to the recency of the selected item can be determined Step . For example the current time can be determined and compared to the time stamp given to the query or query search result. The more recent a query was input or query search result selected the higher the score the query or query search result can be assigned.

Click data for the search results for a query or for a query search result can be determined Step . If the selected item is a query then the click data for the query may be indicative of how responsive the search results were to the query i.e. the success of the query . In one example the number of search results selected e.g. clicked on by the user can be used to estimate the query s success. If the selected item is a query search result then click data for the query search result can be indicative of how responsive the particular query search result was to a corresponding query. Other click data such as the length of time the user spent at a webpage corresponding to the clicked on query search result can also be used to estimate the success of the query search result.

A score for the selected item can be calculated based on the above discussed determinations Step . In some implementations the score is calculated using the scoring function set forth above. That is a multiplier can be determined for each of the 4 factors and can be multiplied by the determinations made in steps above to calculate a score which may or may not be adjusted by a constant E.

In some implementations the specificity of the query location can be used when calculating the score. That is the more specific a query location the higher the score can be assigned as compared to a query location that is rather broadly defined. For example the query location Manhattan is not that specific since Manhattan is an entire borough of New York City. By comparison the query location Greenwich Village which is only a small section of Manhattan is more specific. Accordingly a query having the query location Manhattan can score lower for specificity than a query having the query location Greenwich Village however the Manhattan query can score higher overall if the user s proximity is closer to the center of Manhattan than Greenwich Village and or if the query time of the query for Manhattan is significantly more recent than the query for Greenwich Village.

The process in can be initiated automatically based on various triggers. For example in some implementations the process can be scheduled to execute periodically at a predefined interval e.g. every 15 minutes. In other implementations the process can be triggered once the user s current location has changed by a certain predefined distance. In such implementations the user s current location can be periodically determined and compared to a last reported current location to calculate the change if any in the user s current location since the last report. In other implementations the user can initiate the process manually for example by selecting an icon on his display screen clicking a button or otherwise inputting a command to present him with suggested queries and query search results. In some implementations the command can be as subtle as placing the focus of a web browser on a search field displayed by the web browser application. A user control can be provided to the user so the user can manually change the trigger to initiate the process. For example as a default the process can initiate every 15 minutes but the user can be permitted to change the default to initiate more or less frequently on demand only or when his current location has changed by a predefined amount which the user may also be also to set.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various buses and may be mounted on a common motherboard or in other manners as appropriate. The processor may process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product may be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device memory on processor or a propagated signal.

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor may execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory may be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for instance a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory memory on processor or a propagated signal that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Device may also include one or more different devices that are capable of sensing motion. Examples include but are not limited to accelerometers and compasses. Accelerometers and compasses or other devices that are capable of detecting motion or position are available from any number of vendors and may sense motion in a variety of ways. For example accelerometers may detect changes in acceleration while compasses may detect changes in orientation respective to the magnetic North or South Pole. These changes in motion may be detected by the device and used to update the display of the respective devices according to processes and techniques described herein.

Various implementations of the systems and techniques described here may be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations may include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and may be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here may be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user may provide input to the computer. Other kinds of devices may be used to provide for interaction with a user as well for example feedback provided to the user may be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user may be received in any form including acoustic speech or tactile input.

The systems and techniques described here may be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user may interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system may be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or of what may be claimed but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

A number of embodiments have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

