---

title: Scrambling an address and encrypting write data for storing in a storage device
abstract: An address to access a location in a storage device () is received, and the address is scrambled. Write data is encrypted using an encryption key. The encrypted write data is stored in the storage device at a location of the storage device specified by the scrambled address.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09397834&OS=09397834&RS=09397834
owner: Hewlett-Packard Development Company, L.P.
number: 09397834
owner_city: Houston
owner_country: US
publication_date: 20101005
---
This application is a national stage application under 35 U.S.C. 371 of PCT US2010 051413 filed Oct. 5 2010.

An electronic device typically includes a storage device to store data. The storage device can be a volatile memory device used to temporarily store various types of data including user or application data machine readable instructions and so forth. Alternatively the storage device can be a persistent storage device such as a disk based storage device or a non volatile memory device. The data stored in a storage device can include sensitive or confidential data such as security keys user credentials financial information personal information and so forth. If the electronic device is stolen or otherwise accessed in an unauthorized manner a hacker may attempt to retrieve the content of the storage device to obtain sensitive or confidential information stored in the storage device.

In accordance with some implementations techniques or mechanisms are provided to protect content of a storage device in an electronic device which can be a computer personal digital assistant electronic appliance storage server mobile telephone or other type of electronic device. In some examples the storage device can be a volatile memory device implemented with dynamic random access memory DRAM or static random access memory SRAM technology. In alternative examples the storage device can be a non volatile memory device such as a flash memory device. As yet further examples the storage device can be a disk based storage device such as a hard disk drive or optical disk drive. In other examples other types of storage devices can be used.

A storage device bus interconnects the storage device controller and storage device . The storage device bus includes a control portion for carrying control signals an address portion for carrying address signals and a data portion for carrying data read from or written to the storage device . The control address and data portions of the bus are shown separately as an example. Various implementations could have these as separate connections but the portions can also be multiplexed or sent on common bus signals and so forth. Also the control address and or data portions can be implemented as wired or wireless connections. In wireless implementations the control address and or data portions are transmitted using a wireless protocol.

As shown in the storage device controller can provide a storage device address to access a location of the storage device . For a write operation write data can be provided to the storage device and for a read operation read data can be retrieved from the storage device . To protect content of the storage device write data sent to the storage device from the storage device controller includes encrypted write data. If data is read from a location of the storage device that is protected by encryption the corresponding read data is encrypted read data.

For further protection of the content of the storage device the storage device address can be a scrambled address. Note that not all locations in the storage device have to be protected by data encryption and address scrambling in some examples certain locations of the storage device are not subject to data encryption and or address scrambling. For example data encryption and or address scrambling can be selectively enabled or disabled for specific storage locations. The selective enabling disabling of data encryption and or address scrambling can be accomplished by including a command field with a storage access command to specify whether or not the corresponding storage location is to be protected by data encryption and or address scrambling. Alternatively other mechanisms can be used for selectively enabling disabling data encryption and or address scrambling for specific storage locations such as by use of configuration information an application programming interface API and so forth.

Using both address scrambling and data encryption provides an enhanced level of protection for data stored in the storage device . In this way the likelihood of a hacker being able to retrieve content of protected data in the storage device is reduced. In trying to retrieve data from the storage device the hacker may steal the electronic device remove the storage device from the electronic device or otherwise gain unauthorized access to the storage device either physically or electronically .

Although shows just one storage device controller implemented with data protection mechanisms to protect data in the storage device note that there can be additional storage device controller s with similar data protection mechanisms for other storage device s .

The storage device controller includes an encryption module to encrypt un encrypted write data and a decryption module to decrypt encrypted read data . The decryption module outputs decrypted read data.

Each of the encryption module and decryption module is supplied with a key to perform the respective encryption or decryption. The key can be a data key stored in key storage . Alternatively the key provided to the encryption module and decryption module can be a mixed key output by a key mixer . The key mixer mixes a data key from the key storage with address information to output the mixed key. The mixing of the data key with the address information can be an exclusive OR of the data key and the address information. Other types of mixing of the data key and address information can be used in other implementations. Note that in depicting the key mixer in dashed profile means that in some examples the key mixer is not provided in the storage device controller .

The encryption that is applied by the encryption module can be one of various types of encryption. For example a fast encryption technique can be an exclusive OR XOR technique in which an encryption key is XOR ed with write data. A benefit of using the XOR based encryption technique is that it is relatively fast and can support relatively fast access speeds of the storage device without adding delay to the write and read paths.

The encryption module can thus apply the following exclusive OR operation AK C where A represents the input plaintext data write data that is XOR ed with the encryption key K data key or mixed key to produce encrypted write data C .

To perform decryption the encrypted read data C can be XOR ed with the encryption key K to recover the original plaintext A according to CK A.

In alternative implementations instead of using the XOR based encryption technique a higher level encryption technique can be used. For example the higher level encryption can be Advanced Encryption Standard AES encryption. The AES encryption key is more difficult to hack than a key used in XOR encryption. However AES encryption can come with increased circuit complexity since more circuits have to be used to implement AES encryption which can lead to increased access times or increased complexity in addressing the issue of increased access time involved in performing AES encryption. Other types of higher level encryptions can be used in other examples.

In the key mixer the address information that is mixed with the data key can include one or a combination of the following 1 at least a portion of an initial un scrambled physical address provided by the storage device requestor 2 at least a portion of a scrambled physical address and 3 at least a portion of virtual address information scrambled virtual address or un scrambled virtual address . A virtual address refers to a logical address that is part of a virtual address space typically used by higher level components of an electronic device such as an operating system or a file system. The virtual address space is typically larger than the physical address space that defines the actual available storage locations in the storage device .

Each data key stored in the key storage can be a randomly generated key which can be generated by the storage device controller itself or by a component outside the storage device controller . For example a data key can be generated by system boot code such as basic input output system BIOS code which performs various initialization functions when an electronic device is first started. Alternatively the data key can be generated by a management engine that is part of the chipset of an electronic device. As yet another alternative the data key can be generated based on user input. As another example the data key can be generated by a processor a trusted platform module or other component. The data key can also be received over a network connection or a management bus to which the electronic device is connected. Generally the data key is generated without using data that can be discovered by reverse engineering a component in the electronic device.

Random data keys can be generated based on output of a random number generator. Also or alternatively random data keys can be generated based on dates and or time. To enhance security the data key that is used to perform the encryption and decryption by the encryption module and decryption module respectively changes with each system reset or reboot. Alternatively a different data key can be generated when the electronic device resumes from a lower power state such as a standby state a hibernation state or other lower power state. As yet a further alternative encryption refresh cycles can be employed in which a new data key is generated in each new encryption refresh cycle.

The key storage is a volatile storage device that loses its content upon loss or removal of power. For example the key storage can be a register in the storage device controller or alternatively the key storage can be part of the storage device . The key storage can be a write only write once storage device e.g. register that is reset in response to a predefined event such as the electronic device being shut down being reset entering into a lower power state starting a new encryption refresh cycle and so forth. A write only storage means that the key storage cannot be read by a component outside the storage device controller and a write once storage means that the key storage can only be written once during each predefined interval e.g. during the on time of an electronic device between resets reboots or power cycles during a particular refresh cycle interval and so forth .

As noted above the storage device address provided by the storage device controller to access a location in the storage device can be a scrambled address. Employing address scrambling allows for an additional layer of protection on top of the protection provided by the encrypting data stored in the storage device . The address scrambling can be performed by an address scrambler in the storage device controller in some examples. In alternative examples instead of providing the address scrambler in the storage device controller an address scrambler can be provided as part of the storage device requestor or alternatively the address scrambler can be provided between the storage device requester and storage device controller in other words the address scrambler can be provided in a component that is separate from the storage device requestor and the storage device controller .

Scrambling an initial address can be performed using any one of various techniques. For example address bits of the initial address can be switched around. Alternatively an initial address can be scrambled by using a key such as a randomly generated key. The key for scrambling the address can be a data key stored in the key storage or a different key. The key can be mixed with or otherwise applied to the initial address to generate the scrambled address. Alternatively address scrambling can be performed by hashing the initial address to produce a hash value that represents the scrambled address. As yet another alternative a data structure such as a table can be stored to map input initial addresses to output addresses where the output addresses are considered the scrambled addresses. Other techniques can be used in other implementations.

In implementations where a key is used to scramble an address there can be various possible scenarios some of which are set forth below . In a first scenario the address scrambler or can scramble an initial physical address to form a scrambled address using a data key . The key mixer mixes the initial physical address with the data key to form a mixed key and the mixed key can be used by the encryption module and decryption module to encrypt or decrypt data respectively.

A second scenario involves the address scrambler or scrambling an initial physical address with an address key that is different from a data key . The initial physical address is mixed by the key mixer with the data key to form a mixed key that is used to encrypt or decrypt data.

In a third scenario the address scrambler or can scramble an initial physical address using a different technique than a technique used for encrypting data. For example a first encryption technique is used to scramble the initial physical address with a key data key or address key different from the data key to form the scrambled address while a second encryption technique is used to encrypt write data with a data key instead of a mixed key to output encrypted write data.

In a fourth scenario a scrambled address can be generated using an address key that is different from a data key. The scrambled address is mixed with the data key to form a mixed key to encrypt write data.

In a fifth scenario a scrambled address can be generated using a data key. The scrambled address is mixed with the data key to form a mixed key to encrypt write data.

In a sixth scenario a scrambled address can be generated using an encryption technique different from the encryption technique used for encrypting write data. In this scenario a data key is used to encrypt the data instead of a mixed key.

In a seventh scenario en initial physical address can be scrambled to form a scrambled address but a virtual address or a scrambled virtual address can be mixed with a data key to provide the mixed key for encrypting the write data. A variant of this scenario is to use the virtual address or a scrambled virtual address as the data key to encrypt write data.

There can be numerous other scenarios. Moreover some scenarios can involve combinations of multiple ones of the above scenarios.

In alternative implementations a key mixer such as the key mixer of can be added to the memory controller of .

The memory protection mechanisms implemented by the memory controller include a data encryption mechanism to encrypt write data that is to be stored into the memory device . The memory protection mechanisms of the memory controller also include an address scrambling mechanism to scramble an address that specifies a location in the memory device .

For a write operation as shown in the memory controller includes a write data buffer to store incoming write data. An encryption module applies encryption on the write data from the write data buffer and provides the encrypted write data for storage at the memory device over a memory bus . The memory bus includes a control portion having control signals an address portion containing an address and data portion containing data to be transferred between the memory controller and the memory device .

For a read operation read data is retrieved from the memory device and provided to a decryption module . Note that the data read from the memory device can be encrypted data such that the decryption module applies decryption to the encrypted read data to output decrypted read data to a read data buffer where the read data can be provided to the requester .

The encryption or decryption applied by the encryption module and decryption module can be based on a data key stored in key storage in the memory controller . As depicted in the key storage can store multiple data keys represented as data key 1 . . . data key where n where n 2 . In some implementations different memory regions of the memory device can be encrypted using different data keys. As depicted in the memory device has multiple memory regions memory region 1 . . . memory region n . The different memory regions can represent different portions of a particular memory device. The multiple memory regions can alternatively represent different memory devices. Thus in an electronic device having multiple memory devices a first data key can be used to protect data in a first memory device a second data key can be used to protect data in a second memory device and so forth. In further examples there can be different types of memory devices in the electronic device in which case different data keys are used to protect data stored in the different types of memory devices. Thus for example a first data key is used to protect data in a first type of memory device e.g. a DRAM based memory device a second data key is used to protect data in a second type of memory device e.g. a flash memory device and so forth. Note also that there can be cache memory in the electronic device such that another data key is used to protect the cache memory.

Additionally note also that different data keys can be used for different memory regions depending on how the respective memory regions are used. For example one of the memory regions can be an operating system OS area for storing data or instructions associated with an operating system. Another memory region can store data associated with a non OS program such as user or application data.

Alternatively different data keys can be used during different modes of operation of the electronic device where the different modes can refer to different levels of security for example.

In other implementations different levels of encryption can be applied to different memory regions. For example XOR based encryption can be applied for a first memory region while AES encryption or some other higher level encryption is applied for a different memory region.

In addition in some implementations different address scrambling are used for different memory regions. For example different keys data keys or address keys different from the data keys can be applied to generate different address scramblings. Alternatively different encryption levels can be applied to provide different address scramblings for the different memory regions.

The different keys and or different encryption levels and or different address scramblings to be applied to different memory regions can be configured at build time of the electronic device or during electronic device operation by a user or administrator.

The memory controller also includes a transaction address buffer to store an address associated with a particular transaction read transaction or write transaction . An address scrambler applies address scrambling on the address from the transaction address buffer . The scrambled address is provided from the address scrambler to an address control and timing module which outputs the scrambled address over the address portion of the memory bus .

Note that different address scramblings can be performed for different memory regions in the memory device. Thus for example an address that accesses a first memory region will be scrambled in a first manner whereas an address accessing a second memory region is scrambled in a second different manner.

For example the different manners of scrambling the address can be based on using different keys for scrambling the different addresses for different memory regions. Alternatively different hashing functions can be used to scramble the addresses for different memory regions. Also different address scrambling techniques can be performed for the memory regions that store different types of data such as user data graphics data OS data and so forth.

By using different data keys and or different address scramblings for different memory regions it becomes more difficult to recover keys or a specific address scrambling technique for memory regions that may contain sensitive or confidential data. Note that certain OS data may be known data such that a hacker can relatively easily reverse engineer a key or a specific address scrambling technique for a OS memory region based on the known OS data. However if a different data key and or address scrambling technique is used for a memory region containing non OS data e.g. such as user or application data then the hacker would be unable to access the content of this other memory region even though the data key and or address scrambling technique were determined by the hacker for the OS memory region.

In some implementations note that OS data and non OS data may be spread out over the memory device . If different address scramblings are being applied for the memory region containing OS data versus a memory region containing non OS data then the address scramblings are designed such that the resultant scrambled address for a non OS memory region does not end up being the same as the resultant scrambled address for an OS memory region.

The control system receives at address bits which in the context of are part of an address associated with a request to write to a storage device. The control system then scrambles at the address bits. Write data is then encrypted at using an encryption key that is a combination of a data key and address information where the address information can include one or a combination of the following 1 at least a portion of an initial un scrambled physical address 2 at least a portion of a scrambled physical address and 3 at least a portion of virtual address information scrambled virtual address or un scrambled virtual address .

The encrypted write data segments are then provided at for storing in the respective storage regions.

The control system used to implement the process of can be implemented with hardware only or a combination of hardware and machine readable instructions that are loaded for execution on processing circuitry which can be part of the requestor or or part of the storage device controller or memory controller in . Processing circuitry can include a microprocessor microcontroller processor module or subsystem programmable integrated circuit programmable gate array or another control or computing device.

Data and instructions are stored in respective storage devices which are implemented as one or more computer readable or machine readable storage media. The storage media include different forms of memory including semiconductor memory devices such as dynamic or static random access memories DRAMs or SRAMs erasable and programmable read only memories EPROMs electrically erasable and programmable read only memories EEPROMs and flash memories magnetic disks such as fixed floppy and removable disks other magnetic media including tape optical media such as compact disks CDs or digital video disks DVDs or other types of storage devices. Note that the instructions discussed above can be provided on one computer readable or machine readable storage medium or alternatively can be provided on multiple computer readable or machine readable storage media distributed in a large system having possibly plural nodes. Such computer readable or machine readable storage medium or media is are considered to be part of an article or article of manufacture . An article or article of manufacture can refer to any manufactured single component or multiple components.

In the foregoing description numerous details are set forth to provide an understanding of the subject disclosed herein. However implementations may be practiced without some or all of these details. Other implementations may include modifications and variations from the details discussed above. It is intended that the appended claims cover such modifications and variations.

