---

title: Method and systems for the management of non volatile items and provisioning files for a communication device with multiple service accounts
abstract: Methods and systems enable communication devices equipped with software defined radio based chipset modules to seamlessly re-program the communication device to operate on any of a variety of service provider networks. By re-programming a communication device equipped with software defined radio based chipset module, the communication device can support communications over both UMTS and CDMA communication networks. An environment is provided which allows a user to quickly and efficiently switch between service provider accounts supporting communications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08756256&OS=08756256&RS=08756256
owner: QUALCOMM Incorporated
number: 08756256
owner_city: San Diego
owner_country: US
publication_date: 20100526
---
The present application is related to U.S. patent application Ser. No. 12 467 281 entitled Method and Apparatus for Programming a Communication device with Multiple Service Accounts filed May 17 2009 U.S. patent application Ser. No. 12 467 282 entitled Method and Apparatus for Tracking the Programming of a Communication device with Multiple Service Accounts filed May 17 2009 and U.S. patent application Ser. No. 12 431 050 entitled Method for Generically Handling Carrier Specific Provisioning for Computer Cellular Wireless Cards filed Apr. 28 2009 the entire contents of each are hereby incorporated by reference.

The present invention relates generally to provisioning and programming a cellular communication devices and more particularly to methods and apparatus for provisioning and programming multiple service provider accounts on a single cellular communication device unit across multiple technologies and or multiple carriers.

Traditionally cellular communication devices are designed and programmed to operate on a specific carrier s network using a specific technology. Often times carriers attempt to lure more potential customers to their specific carrier network service by offering unique services features and communication devices. However this often frustrates users by forcing a user to only use specific devices designed and programmed to be used with the specific carrier s network.

In order to provide users with the flexibility of a communication device capable of operating with any carrier network communication devices may be equipped with software defined radio based chipset modules such as Qualcomm s Gobi chipset. These software defined radio based chipset modules allow a communication device to generate encode decode and modulate demodulate data signals within a programmable digital signal processor DSP . The programmable DSP enables the communication signal to be defined by software to conform with the wave form frequency and data packet requirements of any communication technology i.e. GSM UMTS v. CDMA . By re programming the DSP to generate signals with different characteristics the communication device may be made to generate a communication signal that is compatible with any carrier s unique communications network regardless of communication technology being utilized by a specific carrier. Thus a communication device equipped with such a software defined radio based chipset module may subscribe to any carrier for communications support.

While communication devices equipped with such software defined radio based chipset modules are capable of being programmed to operate on virtually every carrier s communication network in order to operate properly on a carrier s communication network the communication device must also be properly provisioned for the selected carrier s network. Each carrier requires the implementation of a large number of unique parameter values that not only vary from carrier to carrier but may even vary among accounts supported by the same carrier. This implementation is referred to as the provisioning of the communication device. Given the wide variety of communication device operation available feature sets offered by different carriers and large number of possible provisioning parameters the efficient programming and provisioning of such communication devices is difficult to achieve.

Various embodiment methods and systems are provided to categorize and store non volatile provisioning data parameters for multiple carriers so that an appropriately equipped communication device can operate on any of a number of different carrier communication networks. Such a communication device may include a software based radio chipset module enabling it to communicate with cellular networks of all technology types including UMTS CDMA and GPS .

The present systems devices apparatus methods and machine readable medium will be described in more detail hereinafter with reference to the accompanying drawings in which aspects of the inventions are shown. The systems devices apparatus methods and machine readable medium however may be embodied in many different forms and should not be construed as limited to the aspects set forth herein rather the present aspects are provided so that the subject disclosure will be thorough and complete and will convey the scope of the invention to those skilled in the art. Like numbers refer to like elements throughout.

In this description the term exemplary is used herein to mean serving as an example instance or illustration. Any implementation described herein as exemplary is not necessarily to be construed as preferred or advantageous over other implementations.

As used herein the term communication device is intended to encompass any form of programmable computer as may exist or will be developed in the future which implements a communication module for wireless voice and data communications including for example cellular telephones personal data assistants PDA s palm top computers laptop and notebook computers wireless electronic mail receivers e.g. the Blackberry and Treo devices multimedia Internet enabled cellular telephones e.g. the Blackberry Storm and similar personal electronic devices which include a wireless communication module processor and memory. In a preferred embodiment the communication device is a portable computer with a software defined radio based chipset module.

Typically individual operators of cellular communication networks often referred to as carriers have made significant investments in their networks and compete with one another in the marketplace on the basis of service and feature sets. As a result the carriers have economic reasons for limiting access to their networks. Accordingly carriers often seek to control who is given access to their communication networks. One conventional way in which carriers control access to their communication networks is by limiting which communication devices are given access to the carrier s communication device.

Conventional cellular communication devices employ one of two competing technologies. Communication devices designed to operate on one of the competing technologies do not operate on the other and vice versa. One of these network technologies is Universal Mobile Telecommunications Systems UMTS . UMTS a third generation 3G technology designed to succeed the Global System for Mobile Communications GSM technology. UMTS is sometimes referred to as a 3GSM. The second network technology is Code Division Multiple Access CDMA . While there are a number of differences between the two competing technologies at the core UMTS implements a time division multiplexing scheme while CDMA as its name implies implements a code based multiplexing scheme. In a UMTS network a portion of the network s total bandwidth is allocated as a channel to a communication device. The network base station then selectively listens to each of the allocated channels for a short amount of time to send and receive voice and or data information to and from the communication device. The base station can only selectively listen to the allocated channel for a short amount of time because it must also listen to other channels allocated to other communication devices operating on the network. While effective the UMTS scheme is hampered by its limited bandwidth and need to dedicate a single channel to a single communication device.

In contrast in a CDMA network each channel may be utilized by multiple communication devices. In order to differentiate the information received from different communication devices operating on the same allocated channel each communication device is assigned a different coding offset in which to encode its voice and or data information. By selectively switching the decoding code offset the base station can decode the information received from multiple communication devices operating on the same allocated channel. This greatly increases the capacity to service more communication devices on the same amount of total bandwidth.

In addition to the multiplexing and encoding schemes implemented on each of the competing technologies individual service providers operating competing communication networks may modify other aspects of the communication signals being sent and received over their respective communication networks. This allows each carrier to differentiate their network from another and in some instances offer differentiating features to its customers. These aspects may include communication signal waveforms frequency amplitude etc.

In order to properly operate on a particular carrier s network a communication device must be equipped with the necessary hardware to generate the appropriate waveform with the correct modulation and coding scheme as required by the service provider s network. Because of the fundamental differences in the type of waveform modulation and coding schemes used between the two competing networks communication devices equipped with the necessary hardware to operate on a UMTS technology network cannot operate on a CDMA technology network and vice versa.

A second conventional way in which carriers control access to their communication networks is by creating a unique provisioning information image that can only be received directly from the carrier. Without the appropriate provisioning image loaded into the communication device s non volatile memory the communication device may not access the carrier s communication network. By generating a provisioning image that is unique to the carrier the carrier may restrict communication devices operating with the same communications technology i.e. UMTS vs. CDMA from accessing the carrier s network to only those communication devices employing the appropriate communications technology and the appropriate provisioning image.

The provisioning information that needs to be loaded onto a cellular communication device includes information needed by the communication device to access the network identifiers to be transmitted by the communication device to the network and information to enable the communication device to connect to cellular networks no matter where they are located. In particular the communication device needs to be informed of the frequencies and access codes for connecting to a particular carrier s network. Also the communication device needs to be programmed with identification codes that it will transmit to the carrier s network so that the carrier will recognize the communication device as authorized to access the network. The provisioning information will also include data known as the Preferred Roaming List PRL which is a set of carriers and network access frequencies to be used when the primary network is unavailable. In addition to such subscription related data the provisioning information may also include feature flags and definitions that activate features and applications on the communication device by setting particular variables to specific values. For example one carrier may choose to support a particular optional feature in the 3G standard and does so by setting associated flags and data values in the provisioning. A second carrier that chooses not to support that optional feature commercial reasons would include in its provisioning data a different set of flags and data associated with this feature.

Provisioning information is typically stored in nonvolatile NV memory such as flash memory on the transceiver circuit board. This ensures that the essential provisioning information is always available to the communication device for connecting to the network. As such the provisioning information is said to contain a variety of NV items. Each NV item may contain a value or array of data. Each NV item may be utilized by the carrier to perform a function or feature set. Currently several thousand possible NV items exist. Conventionally communication device manufacturers developed a particular device model for a particular carrier. Because particular device models are designed and developed for particular carriers the manufacturers of the communication devices may set various NV items and NV item values in the flash memory so that the communication device and each of its functions and applications works properly on the particular carrier s communication network. In order to allow the communication device to initiate communication on multiple carriers the NV items and NV item values may need to be altered each time a new carrier is selected. Various embodiments disclosed herein allow for the modification and revision of the NV items and NV item values stored in a communication device containing a software defined communication module.

In order to sustain communication on a particular carrier s communication network certain requirements must be satisfied by the communication device. In order to satisfy these requirements the software being executed by the communication device implements various NV items and NV item values. Thus a different provisioning notation file image may exist for each device operating on each possible carrier network. The provisioning notation file image may be certified by each carrier to insure that each communication device executing the provisioning image does not damage the carrier s communication network or impact other the communication links or other communication devices established on the carrier s network. Each provisioning image may vary not only the values assigned to each NV item but also by which NV items are contained in the carrier specific provisioning image. A carrier specific provisioning image need not contain a value for all of the possible NV items. Indeed many of the NV items are not contained within a carrier s provisioning image as many of the NV items are related to various feature sets that are not necessarily offered by all carriers. For example some of the NV items are related to Global Positioning System GPS applications. If the carrier is not offering GPS applications in its feature sets then the provisioning image for that carrier may not contain any reference to those NV items. Carriers may also distinguish their provisioning images from those of another carrier by varying the format of the value assigned to a particular NV item.

For the NV items that are common to most provisioning images each carrier provisioning image has a different value or format to the value for a particular common NV item. These values are stored in the communication device s non volatile memory for access by various software function calls. When a software build for a particular carrier attempts to execute a function on the communication device the software build may attempt to access specific NV item values. In order for the software to execute properly the value for a particular NV item must not only be stored in the correct NV memory location but it must also have the correct format and value. Otherwise the software executing on the communication device will not be able to execute the function properly. For example if the correct channel frequencies are not stored in the appropriate NV memory location with the correct values for a selected carrier when the software executing on a communication device attempts to initiate a call over the carrier s communication network the correct channel frequencies will not be accessed and the call will fail.

Moreover some NV item values are not only unique to the carrier but further unique to a particular user s subscription account with the carrier. Some NV item values are assigned to the user s subscription account when the user initiates the provisioning process. For example the phone number user names passwords etc. may be unique not only to a carrier s provisioning image but further unique to each individual user s subscription account. Thus the provisioning image for one subscription account may be different from the provisioning image for a different subscription account despite the fact that both subscription accounts are being supported by the same carrier using the same communication technology i.e. UMTS CDMA .

In some settings a removable smart card such as a Subscriber Identity Module SIM card or analogous R UIM card may allow a user to interchange the provisioning data loaded into a communication device without the need for carrier intervention. The provisioning information for different carriers may be stored on the removable smart card. Because each smart card may store the provisioning data for a different carrier a user may physically interchange smart cards in a communication device to use different carrier networks for primary service. However the need to physically interchange smart cards requires a user to carry multiple smart cards. In addition the physical interchange of smart cards is cumbersome. Lastly the use of smart cards still does not allow a communication device equipped with the necessary hardware to operate on a UMTS technology network to operate on a CDMA technology network and vice versa.

As discussed above conventional communication devices have been equipped and designed with a hardware defined radio chipset module. As a result conventional communication devices are designed to operate on a single communication technology e.g. GSM UMTS v. CDMA . While such conventional communication devices assist carriers to restrict access to their communication networks such device design often frustrates users by preventing users to use their communication device with any carrier. For example a user who owns a CDMA type communication device may not be able to use the communication device in an area where only UMTS carrier networks operate and vice versa.

Additionally conventional communication devices have been designed to operate with a single carrier s communication network. As a result the non volatile memory of the conventional communication devices may only store the provisioning image for a single carrier. If a user attempts to re provision the communication device for another carrier assuming the same communication technology i.e. UMTS vs. CDMA the provisioning image for the first carrier is overwritten by the provisioning image for the second carrier. The provisioning image for the first carrier including any NV item values unique to the user s subscription account are lost. As a result if the user attempts to re provision the communication device with the provisioning image for the first carrier NV items unique to the user s subscription account may be lost. As a result the user may be assigned a new phone number or be required to re enter a user name password etc. Essentially the user is provided with a wholly new subscription account each time the user attempts to re provision the communication device.

In order to overcome some of these difficulties and to provide user with the flexibility to use their communication device with virtually any carrier in existence new communication devices may be equipped with software defined radio based chipset modules such as Qualcomm s Gobi . Such software defined radio based chipset modules generate encode decode and modulate demodulate data signals within a programmable digital signal processor DSP . The programmable DSP enables the communication signal to be defined by software to conform with the wave form frequency and data packet requirements of any communication technology i.e. GSM UMTS v. CDMA . By re programming the DSP to generate signals with different characteristics the communication device may be made to generate a communication signal that is compatible with any service provider s unique communications network. Thus a communication device equipped with a software defined radio based chipset module may subscribe to any carrier for communications support regardless of communication technology required.

However in order to operate properly on any carrier even communication devices equipped with properly programmed software defined radio based chipset modules must also be properly provisioned for the selected carrier. Previous attempts to re program and re provision the communication devices equipped with software defined radio based chipset modules required a complete replacement of the entire software build as well as the provisioning image. This re programming and re provisioning may be considered time consuming and inefficient. In addition updates to minor portions of the software build would require a complete re programming of the updated software build.

The various apparatus and methods disclosed herein are directed to the efficient programming and provisioning of communication devices equipped with such software defined radio based chipset modules. Various embodiment apparatus and methods utilize a notation file to modify update the software build and provisioning image. By categorizing the set of possible NV items contained in a carrier s provisioning information the values for NV items required by a carrier s software build and provisioning image may be efficiently packaged in a small binary format file. Updates to the notation file may effectuate updates to the software build by directing the software build to implement different NV items and or NV item values. Because the size of the notation file is significantly smaller than a complete software build updates to the software build may be made and transmitted to the communication device with great speed and efficiency. The notation file may contain NV item values themselves or indices to memory locations and slots where the value of various NV items have been previously stored in memory. In most cases the notation file is specific to each carrier supporting communications. However in some instances the notation file may be shared or common to multiple carriers. This may be the case where different carriers operate similar networks having similar provisioning requirements. i.e. similar technology features applications etc. . Thus a generic notation file may be implemented for multiple carriers. By extracting and parsing the information contained in the generic notation file along with the corresponding software build a communication device may be configured to operate on any of the multiple carrier networks. This may allow a user to seamlessly continue communications in areas where one of the multiple carrier s network coverage is not as good as another one of the multiple carrier s network.

The communication device may include an antenna for sending and receiving electromagnetic radiation that is connected to the software defined communication module coupled to the processor . Further the communication device includes a speaker to produce audible sound and a microphone for sensing sound such as receiving the speech of a user. Both the microphone and speaker may be connected to the processor via a vocoder which transforms analog electrical signals received from the microphone into digital codes and transforms digital codes received from the processor into analog electrical signals which the speaker can transform into sound waves. In some implementations the vocoder may be included as part of the circuitry and programming of the processor . Communication devices also typically include a key pad and menu selection buttons or rocker switches for receiving user inputs.

The processor may be any programmable microprocessor microcomputer or multiple processor chip or chips that can be configured by software instructions applications to perform a variety of functions including the functions of the various embodiments described below. In some communication devices multiple processors may be provided such as one processor dedicated to wireless communication functions and one processor dedicated to running other applications. In some communication devices multiple processors may be provided to share wireless communication functions and or application between them. Typically software applications may be stored in the internal memory before they are accessed and loaded into the processor . In some communication devices the processor may include internal memory sufficient to store the application software instructions. In some communication devices the processor is included within the software defined communication module such as in Qualcomm s Gobi which includes two processors in addition to signal generator and modem circuits.

In order to re program the DSP within the software defined radio based chipset to generate a data signal compatible with a selected carrier network the communication device must load an appropriate software build for the selected carrier. Each carrier s software build may contain the necessary instructions to generate encode and modulate data signals to be properly carried over the service provider s communication network as well as contain the necessary programming to carry out all of the additional features offered by the service provider. By selectively enabling the appropriate software build for different carriers a communication device may be able to switch back and forth between multiple accounts supported by one or more carriers.

In previous attempts to re program a software defined radio based chipset communication module the entire software build was written into the memory buffers of the device and the provisioning image was written into the flash memory . Recent enhancements allow the communication device to execute a much smaller notation file. The notation file provides direction to the processor to configure various software modules to generate a complete software build for a particular carrier. Because the notation file is significantly smaller in size than the software build the notation file is much easier to update. In an embodiment an additional binary format notation file e.g. UNDP Qualcomm Compact Notation also referred to as UQCN that encodes the NV items PRL and any non volatile settings specific to the selected carrier is provided. The additional notation file may be loaded along with the carrier specific software image as a separate file or bundled within the carrier specific software image. The notation file instructs the software build where various NV item values for different carriers may be retrieved from as well as where copies of received NV item values may be stored.

Each time a user elects to enable a different carrier account the user may launch an individual connection manager for the selected carrier or through a common connection manager . Each carrier s connection manager may contain a notation file e.g. Universal Qualcomm Notation file UQCN which instructs a common application programming interface C API to retrieve the appropriate DLLs and software modules within the multi interface module to generate an accurate software build image for the selected carrier and retrieve selected NV item values from memory and place them into flash memory of communication module . While the entirety of a software build may include a large number of software modules and DLLs the notation file may be a small discrete file that may be easily updated. Updates to the notation file may allow carriers to modify their software builds quickly and easily by instructing the C API and multi interface module to retrieve different pre stored software modules or NV item values. In contrast conventional software builds may only be updated by loading wholly new software modules and DLLs. Typically a notation file may be on the order of 10 kb which is significantly smaller than the storage size of a software build. Thus by transmitting the much smaller notation file carriers may be able to make changes to the software build and provisioning image quickly and efficiently.

The notation file may also contain data that enables carrier specific features. For example the notation file may contain NV item values that enable a GPS feature for a particular carrier. Alternate version of the notation file may be loaded onto the communication device with alternative NV item values which disables the GPS feature functionality of the communication device . In this manner a carrier may be able to selectively enable and disable various features according to subscription level by transmitting a new notation file to identified communication devices. Similarly the notation file may contain data related to NV items that are pre stored in the communication device s memory by the factory that manufacturers the communication device .

As discussed in more detail below when the communication device is manufactured the manufacturer may preload a number of NV item values into memory. Each of these NV items is stored in a specifically assigned memory slot. The factory NV item index may contain the necessary information for the communication module to retrieve the NV items related to a specific carrier when an account for the specific carrier is selected to be enabled. Similarly each time a user activates a new account with a specific carrier various NV item values may be downloaded from the notation file specific to carrier and stored in memory. A copy of these NV item values may be generated and stored in the specifically assigned memory slots for subsequent retrieval. The carrier NV item index may contain a record of the specifically assigned memory slots containing these NV item values.

In contrast to the factory NV item index the copy of the NV item values may not be actually generated and stored in a memory slot until the user elects to activate an account with a selected carrier. However once the account has been activated the copy of the specific carrier NV item values may be generated and stored in pre assigned memory slots. The index of pre assigned memory slots may be contained within the carrier NV item index .

Other information may be contained in the notation file that is specific to a particular carrier and does not change until a wholly new software build is loaded. Such static UQCN data may include for example SCI MIP retries etc. Additionally the notation file may include multiplexed UQCN data . Such multiplexed UQCN data may include for example preferred roaming lists PRL the mobile directory number MDN that is associated with the enabled carrier account packet data protocols PDP profiles etc.

Each of the foregoing items are specific to the carrier account currently enabled and may be overwritten in non volatile memory when a new carrier account is enabled.

As discussed above when a user desires to activate a different carrier account not only must the appropriate software build be loaded but the appropriate NV item profile values must also be loaded into the flash memory of the communication module . Due to the large number of possible NV items appearing in a profile management of all NV items can become difficult. Accordingly an embodiment categorizes all possible NV items into a single document solution in order to manage track and distribute NV item settings and Factory Provisioning files for all possible service providers.

The Factory Default category of NV items may include NV items which are programmed by the factory at the time the communication device is manufactured. For example this category of NV items may include parameters that are used with the communication device s radio frequency RF calibration procedure. These NV items may include for example the band preference used by the communication device. The values of these NV items typically do not change regardless of which service provider account is currently enabled on the communication device. Also the values of these NV items typically do not change regardless of communication technology used by the service provider account currently enabled on the communication device.

The second category of NV items is identified as Factory provisioning items. Similar to the factory default items these items have their values assigned by the factory as the communication device is manufactured. The Factory Provisioning category of NV items are specified by individual carriers. For example individual service providers may wish to include a specific 10.key file an Enhanced Roaming Indicator ERI file a Vendor Identification Product Identification VID PID or Notebook lock. Many of the NV items in this category are unique to each individual carriers or OEM and may have unique carrier OEM specific values. In many cases other carriers or OEM will not include the same NV items in their unique profiles.

The third category of NV items may include multiplexed factory provisioned items. Similar to the factory provisioning category of NV items the multiplexed factory provisioned items are NV item values that are pre loaded into memory slots by the factory during the manufacture of the communication device . The multiplexed factory provisioned NV items are stored in specific memory slot locations. Each of these specific memory slot location addresses are identified in the notation file in a factory NV item index . Unlike the Factory Provisioning category of NV items which often contain NV items unique to each individual carrier or OEM the Multiplexed Factory Provisioned category of NV items typically includes NV items that are used by multiple carriers or OEMs. However the values for these NV items may by unique to each carrier OEM or even unique to each individual communication device. As a result the value assigned to these NV items may be multiplexed in the flash memory of the communication device. For example this category of NV items may include a specific Authentication Key Akey file a service programming code SPC file or One time Key pad Subsidy Lock OTKSL file. While multiple service providers require an Akey file stored in non volatile memory each service provider will require a different value for the Akey. Indeed each individual service provider account will require a unique Akey file. Accordingly as different service provider accounts are enabled on the communication device a different value for the Akey value must be written into the flash memory .

The fourth category of NV items may include multiplexed software NV items. This category of NV items includes dynamic items that are assigned and initialized by the software build for each carrier during the initial account activation process. In contrast to the factory provisioned NV items these NV item values are not generated and assigned until a user elects to activate an account with a select carrier. During the initial activation of an account with the select carrier a value for the specific NV item may be generated and assigned. While no value for this category of NV items is stored until the user elects to activate an account with the selected carrier once the activation process is initiated the values for the NV items belonging to this category are stored in pre assigned memory slots within the communication device. The location of these pre assigned memory slots may be contained within a carrier NV item index that is part of the notation file. Examples of multiplexed software NV items include MIP usernames passwords etc.

The fifth category of NV items may include static notation file UQCN items. These NV item values are carrier specific items which are overwritten each time a new carrier software build is loaded. Examples of these NV items may include desktop images which display carrier logos on the display screen SCI Slot cycle Index MIP Mobile IP retries etc. Such NV items remain static so long as the selected carrier remains the same. Thus as a user switches between different accounts within the same carrier the value for these NV items does not change. The static notation file items may be over written when a user with multiple accounts switches from one carrier to the next. The static notation file items may be categorized in such a way since they are not changed by any other means e.g. over the air activation or by a connection manager . Therefore there is no reason to maintain a separate copy of these NV Items. Consequently valuable memory space may be reclaimed and conserved.

A sixth category of NV items may include multiplexed notation file UQCN items. Similar to the static notation file items the multiplexed notation file items are carrier specific and are overwritten each time a new carrier software build is loaded. While the notation file may differ from one service provider to another various NV items may appear in one service provider s notation file that also appear in another service provider s notation file. For example each service provider may maintain a communication network that has finite boundaries. This communication network is often referred to as a subscriber s home network. When a subscriber travels outside the range of its home network the subscriber may no longer conduct wireless communications over the home network. However other service provider s may be operating a communication network in the subscriber s current location. These other communication networks may be referred to as a roaming network. In some instances there may be multiple roaming networks available in a location. In order to provide their subscribers with the ability to continue conducting wireless communication outside of the home network the subscriber s service provider often negotiates with other service providers to allow its subscriber s access to the roaming networks and vice versa. However due to the specifics of the negotiated deals a subscriber s service provider may have a preference list of which roaming network to access in instances where multiple roaming networks are available. This preference list is often referred to as a preferred roaming list PRL . While each service provider utilizes a PRL the PRL files are unique and specific to each service provider. Thus while each notation file may have a PRL file as one of its NV items the PRL file will be different for each service provider. Thus NV items such as the PRL file may be an example of a multiplexed notation file NV item. The multiplexed UQCN items assume values that are defined in the notation file. At some point in time they may also be changed by over the air activation process or by the Connection Manager. The multiplexed software items may be the NV Items that have values assigned using some pre defined algorithm in the software as defined by the network. A typical example of the multiplexed item is the shared secret key password or usernames assigned by the carrier when the module is activated for service on its network. These values are saved in a specific format that is pre defined in the software. In contrast the UQCN notation file does not include such item values. Rather the UQCN notation file indicates the attribute as multiplexed in the file. For example the UQCN may indicate the specific format or length or whether the NV item is a multiplexed NV item.

A seventh category of NV items may include software defined multiplexed items. These items are NV items that are set by the software build and do not change once the software build has activated. These NV items may include the model name of the communication device. The values of these items are assigned by the software and are usually settings that need to be preserved t allow for some functionality in software that makes the software build more efficient. For example Network Access Identifier NAI is a user name that is automatically generated by the software to provide the user with a .com identifier. Typically the phone number used for the communication device may be appended with a .com address to create a unique NAI. As an example if a user s communication device is assigned the phone number 202 555 1212 the Verizon software build may append the phone number 202 555 1212 with the domain address vzw3g.com to generate the NAI 202 555 1212 vzw3g.com . Such NV item values are generated once and then do not change after the software build has been initially activated. Because it is not necessary to generate an NAI after it has been generated once the multiplexed NV item value may be stored in a location determined by the notation file and retrieved any time the software build and notation file for a selected carrier is subsequently activated.

By implementing the usage of notation files communication devices equipped with a software defined communication module may be afforded the additional flexibility of having its communications supported by currently non existent carrier networks. For example as markets evolve additional carriers may be established which come online in the future but are currently non existent. Once the newly established carrier comes online the necessary parameter values that would allow the newly established carrier to support communications on the existing communication device may be downloaded to the communication device in a notation file update.

The various embodiments provide the capability to manage store and implement each of the necessary NV items for each possible service provider. Through the effective management and storage of the NV items a user may switch between service provider accounts on a single communication device and maintain all of the necessary parameter values. In an embodiment the various values assigned to a particular NV item are separately maintained and stored in memory. Each of the separately maintained and stored NV item values may be indexed. Each of the NV item values may be stored for example in the RAM or hard drive memory of the communication device. Once a particular carrier account is enabled and the notation file is activated the various NV item values may be retrieved from RAM or hard drive memory and loaded into flash memory of the communication module .

As discussed above various embodiments leverage the ability to multiplex NV item values stored in memory. This process is sometimes referred to as shadowing NV item values. By multiplexing NV items a single communication device may be configured to support multiple carrier subscriptions as well as enhance the power of a notation file. Multiplexing or shadowing of NV items is a way to manage multiple copies of a carrier specific setting. It may be referred to as an indexed array with each of the indices referring to a carrier. illustrates the concept of multiplexing NV items as it applies to factory indexed NV items. These items may be referred to as statically multiplexed because the values for each of the NV items in this category are known and are pre loaded by the manufacturer of the communication device at the factory. The value for each statically multiplexed NV item is stored in pre assigned memory slot locations.

By way of example the service provisioning code SPC is an NV item included in the category of factory indexed NV items. The SPC is used as a security protection. The communication module of the communication device would be allowed to provision only if a valid SPC is given during activation. Typically each carrier utilizes a different value for SPC. For example Verizon 1 may require that SPC be set to all zeros while Sprint 2 may require SPC to be a randomly generated six digit number. Other carriers may require a specific six digit numeric code. In a conventional communication device the value of SPC is stored in non volatile memory location . When the software build of a carrier requires the value of SPC the software build looks to the value stored in non volatile memory location .

In an embodiment multiple values for the NV item SPC may be stored in memory. Each of the different values for SPC may be stored in different memory and slot locations. An index of the different memory and slot locations storing each of the different carrier values for the NV item SPC may be contained within the notation file for subsequent retrieval. As shown in the communication device may store a value for the SPC in a different slot for memory location . For example the value for SPC for Verizon may be stored in memory location slot . In this example a value of 000000 may be stored in memory location slot . The value for SPC for Sprint may be stored in memory location slot . In this example a value of 345987 may be stored in memory location slot . also illustrates that additional memory slot location exist for possible future carrier values. In this example Future X and Future Y represent possible future carriers. In the event such future carriers begin to actively support communications each of their specific SPC values may be stored in memory location slot and slot respectively.

In a conventional provisioning operation a value for the NV item SPC may typically be stored in non volatile memory location . Thus when the selected carrier s software build executes it may seek to retrieve the value for NV item SPC from memory location . However during the implementation of the software build on a software defined radio based chipset communication module after the software build loads the notation file may be loaded. When the software build seeks to retrieve a value for the SPC from non volatile memory location the notation file may in turn direct the communication module to retrieve the SPC value from a specific slot in memory location . The slot may be chosen in accordance with the factory NV item index that correlates the selected carrier whose software build is being loaded with the appropriate memory slot location. Thus if the Verizon software build is being loaded then slot may be accessed and a value of 000000 may be loaded into the non volatile memory location . However if the Sprint software build is being loaded then slot may be accessed and the value of 345987 may be loaded into the non volatile memory location . Thus the value of NV item SPC may be said to be multiplexed or shadowed by the multiple values for SPC stored in the new NV item memory location.

Similar to the static factory indexed NV items dynamic carrier indexed NV items may be stored in memory and utilized by the software defined radio based chipset communication module . These NV items may be referred to as dynamically multiplexed items because the values for each of the NV items are not known until a user elects to activate an account with the selected carrier. Thus each communication device may dynamically create a copy and store values for these NV items on a need basis. Nevertheless while a communication device may not create a copy and store a value for a particular NV item for a select carrier once the value for the particular NV item for a select carrier is received a copy is generated and stored in a pre assigned memory location and slot.

As an example SD timer may be an NV item that is dynamically multiplexed. In a conventional operation when a user activates an account with a select carrier a value for SD timer is generated by the carrier and transmitted to the communication device . The received value for SD timer is then stored in NV item . Each time the software build for the selected carrier executes and seeks to retrieve the value for SD timer it is directed to NV memory location .

In an embodiment for example when the user activates an account with a select carrier the communication device receives a value for among other NV items the SD timer. The communication device may receive the NV item value for SD timer in the same manner as in the conventional operation. For example this value may be received in an over the air provisioning process or over a connected cable. However in order to preserve these dynamic NV item values an embodiment method utilizes the notation file to create a shadowed NV item value at a new memory location. In addition to writing the NV item value into flash memory the notation file directs the software defined radio based chipset communication module to create a new memory and slot location in hard drive memory or RAM for the purpose of storing a shadow copy of the received NV item values. The new memory and slot location are assigned by the notation file. Each carrier has a pre assigned memory slot location for each NV item value. The notation file contains the pre assigned index. It should be noted that until the user activates an account with a selected carrier the memory location slot is not created as there is no dynamically assigned NV item value to store. As carrier accounts are activated the dynamically assigned NV item values are stored in memory and their memory and slot locations are added to the carrier index. Thus if a user has only activated a carrier account with two carriers only two entries would appear in the carrier index. Because copies of the NV items are not created until a user elects to activate a new carrier account memory may be conserved. Space in the communication device s memory is utilized on an as needed basis.

In addition the listing of entries in the carrier index reflects the order in which carrier accounts are activated. For example the Verizon notation file may dictate that all dynamically generated NV item values be stored in memory slot . However the Vodafone notation file may dictate that its dynamically generated NV item values be stored in memory slot . As a result even though Vodafone was the second carrier account to be activated the carrier index will still record an index of for Vodafone. The relative order of carriers listed in the carrier index provides an indication of the order in which accounts were activated.

In this manner the notation file for each carrier indicates not only where NV item values may be retrieved from but also where copies of received NV item values should be stored. By indexing and storing the NV item values to a separate memory location from the NV memory location the values for each of the user s varied accounts may be preserved. In a conventional operation each time a user elected to enable a new carrier account the previous NV item values occupying memory locations in the flash memory would be overwritten and not preserved. When the user sought to re enable the previous carrier account the user would be required to obtain new carrier indexed NV item values. Such a process may cause longer delays to enable the carrier account. In addition some NV items values are generated each time the carrier account is activated. Once overwritten the user s carrier account will require new NV item values to be generated and assigned to the user s carrier account. This may cause great frustration to the user if NV items such as the assigned telephone number username or password are reset each time the user enables a different carrier account. The embodiment methods of multiplexing NV item values allows a communication device to not only quickly retrieve previously generated and assigned NV item values but also maintain existing NV item values despite the switching of enabled carrier accounts.

When the communication device processor receives a read write NV item request the NV item parameters are validated step . For example the NV item may have a write once attribute that prevents the communication device processor from writing the NV item more than once into flash memory . The communication device processor may determine if the NV item value has already been written before and terminate the write process if it has already been written. Once the NV item parameters have been validated the communication device processor determines if the NV item is present in the Multiplexed Item list described above with reference to determination . The Multiplexed Item list may be dynamically created when the communication device starts up. If the NV item is not one of the multiplexed items i.e. determination No then the NV item value may be either read from or written to the flash memory directly step . Once the NV item value is read or written the process is complete step .

However if the NV item is present in the multiplexed item list i.e. determination Yes then the processor may obtain the selected carrier index from the notation file step . Using the selected carrier index as the proper offset the processor may read write the NV item value from to the appropriate flash memory location step . Once the NV item value is read or written the process is complete step . The process may be re initiated for each additional NV item value that is to be read from or written into the flash memory .

In another embodiment the data stored in the notation file may be used to restrict which communication modules may successfully implement a carrier s software build and notation file. A software defined radio based chipset communication module if programmed and provisioned correctly may access any carrier s communication network. However some carrier s may wish to restrict which devices access their network. For example some carriers may partner up with certain manufacturers to provide the manufacturers with exclusive or semi exclusive access to the carrier s communication networks. Similarly certain manufacturers may wish to limit the carrier networks that their communication devices may access. In order to restrict which carrier communication networks the communication modules may access a technology lock also referred to as a device lock carrier lock or notebook lock .

Once the NV item is added to the write once NV item list or if the NV item is determined to not be a write once item i.e. determination No the processor may determine if all of the notation file items have been complete determination . In other words the processor may determine if any other NV items should be analyzed. If the there are additional NV items listed in the notation file and that preprocessing of the notation file items is not complete i.e. determination No the processor may return to determination and complete steps again. If however all of the preprocessing is complete i.e. determination Yes the processor may proceed to check the notebook lock and compatibility for the notation file step shown in . The process flow illustrating a notebook lock embodiment method is discussed above with reference to . If the results of the notebook lock and notation compatibility method indicate that the software build and notation file are not allowed for the communication device i.e. determination No the error routine may be initiated and the module may be set into an offline state step A.

If the software build and notation file are allowed for the communication device i.e. determination Yes the processor may determine if the notation file loaded into memory is the same version of the notation file loaded into the flash memory determination . If the version of the notation file loaded into memory matches that of the notation file loaded into the flash memory i.e. determination Yes the memory resources may be cleared and reclaimed for other purposes step . If the version of the notation file loaded into memory does not match that of the notation file loaded into the flash memory i.e. determination No the notation file stored in flash may be updated with the notation file loaded into the memory step . Each of the NV item values stored in flash may be written over or deleted using the contents of the notation file loaded in memory as per the NV item attribute. Once the notation file loaded in flash has been updated the memory resources may be cleared and reclaimed for other purposes step . Once the memory resources have been reclaimed the processor may continue with the communication module initialization using the software build and NV item values from the notation file step . In this manner a communication device having the software defined communication module may be quickly modified to enable communication over a different carrier s communication network regardless of communication technology or selected carrier.

Various embodiments allow communication device manufacturers to streamline the manufacturing process of the communication device. In a conventional manufacturing process of a communication device the communication devices are loaded with factory provisioning software as well as with the required NV item values. However the tools typically employed by original equipment manufacturers may only write individual NV items. The tools must retrieve the NV item write the NV item value into flash and then serially repeat the process for the next NV item. This provisioning process greatly hampers the manufacturing process. By loading the communication device with the notation file in conjunction with the factory provisioning software the various embodiments may load the necessary NV item values into the flash memory after the communication devices have left the factory. This optimizes the manufacturing time considerably. Moreover since the notation file processing occurs before other tasks e.g. protocol processing are activated the loading of the notation file NV items may be quickly loaded. In addition because the notation file is typically a small file that may be quickly and easily updated the manufacturing process may be quickly adapted and configured to load the NV items for specific multiple carriers.

Those of skill in the art would appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module of processor executable software instructions may be stored in a non transitory processor readable memory which may be any of RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary non transitory storage medium is coupled to a processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal or communication device. In the alternative the processor and the storage medium may reside as discrete components in a user terminal or communication device. Additionally in some aspects the steps and or actions of a method or algorithm may reside as one or any combination or set of codes and or instructions on a non transitory processor readable medium and or non transitory computer readable medium which may be incorporated into a computer program product.

The foregoing description of the various embodiments is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus the present invention is not intended to be limited to the embodiments shown herein and instead the claims should be accorded the widest scope consistent with the principles and novel features disclosed herein.

