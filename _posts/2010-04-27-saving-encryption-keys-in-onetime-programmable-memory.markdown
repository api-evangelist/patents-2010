---

title: Saving encryption keys in one-time programmable memory
abstract: Described embodiments provide encryption/decryption of data transferred between a media controller and a storage device. The media controller provides encryption/decryption based on a root key (RK). Storage in a one-time programmable (OTP) memory is provided as a plurality of un-burned slots. The OTP memory is initially provided without the RK, which is generated with a random number generator. A control module performs the steps of i) burning the RK to an initial slot of the OTP memory, and ii) validating the burned RK (bRK) stored at the initial slot based on a comparison of the RK and the burned RK. If the control module validates the burned RK, the burned RK is employed by the media controller. Otherwise, one or more subsequent slots of the OTP memory are burned with the RK until the control module validates the corresponding burned RK.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08286004&OS=08286004&RS=08286004
owner: LSI Corporation
number: 08286004
owner_city: Milpitas
owner_country: US
publication_date: 20100427
---
This application claims the benefit of the filing date of U.S. provisional application Nos. 61 250 055 filed Oct. 9 2009 61 250 047 filed Oct. 9 2009 and 61 265 109 filed Nov. 30 2009 the teachings of which are incorporated herein in their entireties by reference.

The subject matter of this application is related to U.S. patent application Ser. Nos. 12 436 227 filed May 6 2009 12 475 710 filed Jun. 1 2009 12 475 716 filed Jun. 1 2009 12 477 996 filed Jun. 4 2009 12 478 013 filed Jun. 4 2009 12 508 879 filed Jul. 24 2009 12 508 915 filed Jul. 24 2009 12 643 471 filed Dec. 21 2009 12 649 490 filed Dec. 30 2009 12 722 828 filed Mar. 12 2010 12 730 627 filed Mar. 24 2010 12 731 631 filed Mar. 25 2010 and 12 768 058 filed Apr. 27 2010 the teachings of all of which are incorporated herein in their entireties by reference.

The present invention relates to storage devices and in particular to prevention of unauthorized access to data stored on the storage device with interlocking plaintext passwords for data encryption keys.

Flash memory is a type of non volatile memory that is electrically erasable and re programmable. Flash memory is primarily used in memory cards and USB flash drives for general storage and transfer of data between computers and other digital products. Flash memory is a specific type of electrically erasable programmable read only memory EEPROM that is programmed and erased in large blocks. One commonly employed type of flash memory technology is NAND flash memory. NAND flash memory forms the core of the flash memory available today especially for removable universal serial bus USB storage devices known as USB flash drives as well as most memory cards. NAND flash memory exhibits fast erase and write times requires small chip area per cell and has high endurance. However the I O interface of NAND flash memory does not provide full address and data bus capability and thus generally does not allow random access to memory locations.

There are three basic operations for NAND devices read write and erase. The read and write operations are performed on a page by page basis. Page sizes are generally 2bytes where N is an integer with typical page sizes of for example 2 048 bytes 2 kb 4 096 bytes 4 kb 8 192 bytes 8 kb or more per page. Pages are typically arranged in blocks and an erase operation is performed on a block by block basis. Typical block sizes are for example 64 or 128 pages per block. Pages must be written sequentially usually from a low address to a high address. Lower addresses cannot be rewritten until the block is erased.

A hard disk is addressed linearly by logical block address LBA . A hard disk write operation provides new data to be written to a given LBA. Old data is over written by new data at the same physical LBA. NAND flash memories are accessed analogously to block devices such as hard disks. NAND devices address memory linearly by page number. However each page might generally be written only once since a NAND device requires that a block of data be erased before new data is written to the block. Thus for a NAND device to write new data to a given LBA the new data is written to an erased page that is a different physical page than the page previously used for that LBA. Therefore NAND devices require device driver software or a separate media controller chip with firmware to maintain a record of mappings of each LBA to the current page number where its data is stored. This record mapping is typically managed by a flash translation layer FTL in software firmware that might generate a logical to physical translation table. The flash translation layer corresponds to the media layer of software and or firmware controlling a hard disk drive HDD .

Since a storage device such as a solid state disk SSD or HDD might be used to store sensitive or private data a typical media controller chip might employ data encryption to encrypt data on all or part of the storage media. For example a media controller chip might implement a self encrypting storage device such as an SSD or HDD which locks data locks the drive erases data completely and safely stores security credentials. Such a chip might further be optionally employed in combination with a Trusted Platform Module TPM security chip found on many enterprise systems. The media controller might also interact with other security measures such as smart cards or biometric verification.

The Trusted Computing Group TCG is an organization that has published standards for Storage Devices and Storage Interfaces generally and for Security Subsystem Classes SSCs specifically which define the minimum capabilities of a storage device in a specific class . For example Version 2.0 2009 and Version 1.0 2009 define a comprehensive architecture of storage devices and storage device commands respectively. Further Version 1.0 2009 hereinafter TCG Enterprise Specification defines security requirements and commands for enterprise storage systems. Similarly Version 1.0 2009 hereinafter TCG Opal Specification defines security requirements and commands for consumer storage systems. These documents are referred to herein collectively as the TCG Specifications . Devices operating in accordance with the TCG Specifications might employ encryption methodologies such as described in Federal Information Processing Standard FIPS Publication 197 2001 and FIPS Publication 180 3 2008 both published by the National Institute of Standards and Technology NIST . In any data encryption scheme for both enterprise and consumer systems key storage and management are important security issues as gaining access to the one or more security keys might allow access to data stored on the storage device.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Described embodiments provide encryption decryption of data transferred between a media controller and a storage device. The media controller provides encryption decryption based on a root key RK . Storage in a one time programmable OTP memory is provided as a plurality of un burned slots. The OTP memory is initially provided without the RK which is generated with a random number generator. A control module performs the steps of i burning the RK to an initial slot of the OTP memory and ii validating the burned RK bRK stored at the initial slot based on a comparison of the RK and the burned RK. If the control module validates the burned RK the burned RK is employed by the media controller. Otherwise one or more subsequent slots of the OTP memory are burned with the RK until the control module validates the corresponding burned RK.

In accordance with embodiments of the present invention a media controller for a storage device provides for burning a root key and corresponding checksum to a slot in a one time programmable OTP memory. The root key generally might be programmed at the manufacture time of the storage device rather than at the manufacture time of the media controller System on Chip SoC . Embodiments of the present invention might also employ the root key and checksum burning as a test of the media controller SoC to detect failed devices e.g. devices having OTP memory failures .

Table 1 defines a list of acronyms employed throughout this specification as an aid to understanding the described embodiments of the present invention 

Media controller controls transfer of data between media and an external device coupled to communication link . Media controller might be implemented as a system on chip SoC . Media controller might include internal RAM buffer and might also be coupled to additional external memory shown as external RAM buffer . In an exemplary embodiment internal RAM buffer comprises 128 kB of static RAM SRAM and external RAM buffer comprises 512 MB of double data rate version 2 dynamic RAM DDR2 DRAM . RAM buffer might act as a cache for processor while RAM buffer might act as a read write buffer between storage media and communication link . Processor includes software and or firmware as needed for operation including for tracking and conflict checking of outstanding access requests in accordance with exemplary embodiments of the present invention as described subsequently. Although shown in as a single processor processor might be implemented with multiple processors. For embodiments having multiple processors inter processor communication might be employed such as described in related U.S. patent application Ser. No. 12 436 227 filed on May 6 2009.

For example media controller receives one or more requests for media access from external devices such as requests for read or write operations from communication link . Such requests for access to media generally include at least one logical block address LBA where data should be read or written. For example the requests could be to read from or write to a i single media address ii a group of contiguous media addresses or iii a group of non contiguous media addresses. Requests for one or more contiguous addresses of media might be processed substantially the same as described in greater detail in related U.S. patent application Ser. No. 12 643 471 filed Dec. 21 2009 and requests for one or more non contiguous addresses might be processed as described in related U.S. patent application Ser. No. 12 508 915 filed on Jul. 24 2009. Received requests are processed by host subsystem . Host subsystem i controls host interface specific commands e.g. SCSI commands ii coordinates host side data transfers and command execution and iii processes any other host commands e.g. status updates . Host subsystem is in communication with buffer subsystem . Host subsystem might track received requests and perform conflict checking substantially as described in related U.S. patent application Ser. No. 12 649 490 filed Dec. 30 2009.

Media subsystem translates the LBA into a physical address of the desired data. Logical to physical and physical to logical address translation might be performed as described in related U.S. patent application Ser. No. 12 643 471 filed Dec. 21 2009. Media subsystem might be implemented to support enterprise system sector sizes e.g. 520 or 528 bytes per sector or consumer system sector sizes e.g. 512 bytes per sector such as described in related U.S. patent applications Ser. Nos. 12 477 996 and 12 478 013 both filed Jun. 4 2009.

Media subsystem also interfaces with buffer subsystem . Since data transfers between communication link and media might be temporarily stored in buffer memory buffer subsystem generally directs the data traffic between host subsystem and media subsystem . For example if an external host not shown provides via communication link data to be written to media buffer subsystem might coordinate temporary storage of the data in buffer until media subsystem coordinates writing the data to media . Similarly if the external host requests to read data from media buffer subsystem might temporarily store the data in buffer until host layer coordinates sending the data to the host via communication link . Infrastructure subsystem might generally serve as an operating system for media controller .

In general host layer processes higher level host operations e.g. host command handlers buffer layer processes higher level buffer and cache operations e.g. cache and buffer allocation media layer processes higher level media operations e.g. logical to physical address translation and infrastructure layer processes higher level processing operations e.g. operating system operations . In general host LLD processes lower level host operations e.g. parsing host commands to the host layer buffer LLD processes lower level buffer operations e.g. RAM hardware specific commands media LLD processes lower level media operations e.g. low level read write erase and infrastructure LLD processes lower level operating system operations e.g. initialization timers interrupts .

For example host layer implements protocols to control flow of data between communications link and media controller . Host layer might process data access commands from communication link and communicate with media layer . Host LLD implements hardware specific basic operations of communications link thus separating the low level hardware specific signal and timing requirements of the link protocol from the functionality of host layer . In embodiments of the present invention media layer translates the logical to physical addresses and vice versa of data stored in media . Media layer might temporarily store data in a target buffer via buffer layer .

In general data transfers between media and communication link are buffered in a target buffer that includes at least one of external RAM buffer and internal RAM buffer . Buffer LLD implements hardware specific basic operations of buffers and thus separating the low level hardware specific signal and timing requirements of RAM from the functionality of buffer layer . Media layer interfaces with media by media low level driver LLD . Media LLD implements hardware specific basic read and write operations of media thus separating the low level hardware specific signal and timing requirements of the media circuitry from the functionality of media layer . Media layer also might enable error recovery and wear leveling routines for media .

Receive RX Datapath handles incoming data from link protocol core and routes the incoming data to the buffer e.g. buffer subsystem or to other internal modules e.g. command parser encryption datapath etc. . RX Datapath might include a buffer e.g. RX buffer to synchronize data between the timing requirements of link protocol core and the timing requirements of host subsystem . For example data might be sent in frames for a given link protocol and RX Datapath might reorganize the framed data into data blocks for further processing within media controller . The buffer might be sized to support required bandwidth for both the link protocol and the internal communications within media controller .

Command Parser receives commands from RX Datapath and generates contexts corresponding to the command. In general a context is a data structure employed within media controller to specify the information necessary to send or receive data e.g. the requirements to send a data frame or frame information structure FIS via communication link the requirements to perform direct memory access DMA etc. . New contexts are added to the tail end of a context execution queue which is one of a plurality of linked lists created by firmware operating on processor and stored in cache memory e.g. a cache in at least one of RAM buffer and RAM buffer of controlled by buffer subsystem . Context cache loads contexts from the head of the linked lists before the previous contexts complete allowing firmware running on processor to queue or reorder context lists before the data transfers are started. Buffer Allocation Manager BAM might generally provide acceleration for the transfer of user data between host subsystem and buffer subsystem for example by performing cache lookup for a context or allocating buffer space for a context.

As will be described herein embodiments of the present invention generally employ two sets of keys i a first set of keys used by DSE to encrypt and decrypt user data and ii a second set of keys that are plaintext user passwords used to authenticate a host device. Once authenticated the host device may perform operations allowed by the storage device settings. Embodiments of the present invention associate plaintext passwords used in authentication PAKs to the data encryption keys DKs .

As shown in media might be divided into one or more separate physical spaces shown as anchor space reserved space and data space . Anchor space might contain data that must be stored in particular physical position in media for example a portion of the software or firmware for media controller or configuration files or other data required by media controller at power up. Data space holds all user data and might be divided into one or more LBA ranges bands not shown . Reserved space is not accessible by host requests e.g. host read and write requests and thus reserved space generally might not have corresponding host accessible LBAs. Reserved space might be used to store mapping data e.g. a flash translation table or other data used by media controller . For example as shown in reserved space might include band key storage area and administrative storage area .

Key cache couples ACS to DSE and holds one key for each user defined LBA range band . Key cache is loaded when LBA bands are authenticated and locked or unlocked by commands defined in the TCG specifications TCG commands such as for example the Set Band Lock command as defined in the TCG Enterprise Specification. Key cache might include one or more band key entries for the encrypted keys corresponding to each band. Each band s corresponding key might be stored in a separate file in band key storage area which provides independent modification of keys for each band. As indicated by dashed line when a band is unlocked via TCG commands the encrypted key for the band might be loaded into a buffer e.g. one of buffers and of from the corresponding file in band key storage area . ACS reads the encrypted key from buffer subsystem decrypts the key and loads the decrypted key into key cache . Key cache also might have an entry for the root key to be used as a data key. Administrative storage area is an encrypted storage area that can be read and written via TCG commands. Administrative storage area might contain data related to the management of the security system such as a plaintext manufacturer s password Maker s password and an encrypted hashed Maker s password.

As shown in ACS interface provides an interface to host layer . ACS interface might generally be implemented as an AMBA High performance Bus AHB as introduced by ARM Limited and often employed in System on a Chip SoC designs. Status register and control register allow host layer to start and observe the operation of ACS .

ACS includes one time programmable OTP memory . OTP might generally be employed to store the root key RK of media controller . In embodiments of the present invention the root key is a 256 bit random value that is generated and stored in OTP at the manufacture time of media controller however other sizes of the root key e.g. 512 bit are possible. The RK is generally not accessible by any modules of media controller outside of ACS . In accordance with the Federal Information Processing Standard FIPS the RK is generated by a random number generator RNG . Also in accordance with FIPS the RK might be permanently and irreversibly zeroed which renders media controller completely unusable. Truly Random Number Generator TRNG generates data keys. In embodiments of the present invention TRNG might be an RNG operating in conformance with the Advanced Encryption Standard AES defined in FIPS Publication 197.

The AES defines a 128 bit block cipher with a variable key size of 128 192 or 256 bits. The AES further specifies electronic codebook ECB and cipher block chaining CBC modes. AES is a block cipher module. In embodiments of the present invention AES might operate in ECB mode to encrypt keys that are stored on media . Unencrypted keys are generally not accessible by modules of media controller outside of ACS but encrypted keys are stored on media and thus might be accessible by DSE buffer subsystem and media subsystem . Secure Hash Algorithm SHA module generates a hash of plaintext authentication key PAK . In embodiments of the present invention SHA module operates in accordance with the Secure Hash Standard SHS defined in FIPS Publication 180 3. The hashed PAK hPAK is compared by hash comparator to hashed data key values read from media . Thus hash comparator validates a plaintext authentication key PAK without saving the PAK to media . If validation fails the requested authentication fails and operations requiring that level of authentication cannot complete.

ACS generates an encrypted Data Key eDK for each band of media . The eDK is generated based upon contains three components i a Data Key DK randomly generated by TRNG ii a Key Wrap and iii an Authentication Hash Key AHK . DK Key Wrap and AHK are not accessible to modules of media controller outside of encryption datapath in an unencrypted format. The DK is the key used by DSE to encrypt and decrypt data for a specific user and or band. The AHK is a randomly generated key input to SHA module to hash the password into a hashed Password Authentication Key hPAK . The hPAK is provided to modules outside of encryption datapath such as infrastructure subsystem and the hPAK is saved for password authentication. The Key Wrap is an encryption key used to encrypt key data such as described in the AES Key Wrap Specification NIST 2001 and incorporated by reference herein. In general the eDK might typically be 448 576 or 832 bits. For example a key wrapped eDK with an hPAK will have a size that is the key size 320 bits 64 bits for the key wrap plus 256 bits for the AHK . Thus for a key size of 128 bits the eDK is 448 bits for a key size of 256 bits the eDK is 576 bits and for a key size of 512 bits the eDK is 832 bits.

Encryption engine provides data encryption and decryption within DSE . Encryption engine might operate in accordance with the AES. In exemplary embodiments of the present invention encryption engine supports up to seven encryption threads. One thread might be dedicated to encrypt data for each read path RX Port A and RX Port B of host subsystem . The remaining five threads might be allocated to process multiple write commands that are in process. For example two threads might be dedicated to each write path to decrypt data and the final thread might be dedicated to processing out of band encryption to support infrequent or specialized commands such as write same commands format commands and read write operations for administrative storage area . Data is sent to encryption engine while corresponding status data is sent to Status FIFO .

Key Cache Interface KCI couples DSE to Key Cache . KCI requests keys based on instructions from Control Logic . Encryption engine performs AES encryption and decryption based on the data received from Data In Storage . The order in which data is provided from Data In Storage to encryption engine is controlled by Control Logic . Status FIFO is employed to track status data that is not encrypted along with its corresponding data in encryption engine . For example status data might include a thread ID corresponding to the data flags indicating whether the current data block is the first or last data block of a sector and a flag to indicate whether cipher text stealing CTS is required for the data block. Status FIFO is also controlled by Control Logic .

Data Out Storage receives data from encryption engine and reassembles the data with its corresponding status data processed by status FIFO . Data Out Storage also manages cipher text stealing CTS . CTS is employed when a data block size is not equal to a multiple of the encryption block size. When the data block size is not a multiple of the encryption block size a runt block might result that is smaller than the encryption block size. CTS is employed to encrypt such runt blocks without expanding the size of the stored data block. For example embodiments of the present invention might employ a data block size of 520 bytes and an encryption block size of 128 bits 16 bytes . In that case the data block size is not a multiple of the encryption block size and an 8 byte runt block is left over. This 8 byte runt block is encrypted using CTS. Similarly as Data In Storage Data Out Storage has one storage register per thread processed by encryption engine shown as registers RX CTS N TX CTS and plus generic Data Out register . Data output from encryption engine is either routed i to one of CTS registers N or or ii to generic Data Out register . If the output data block is not the last block for the sector the data block is routed to one of CTS registers N or . Data currently in that CTS register is provided to the appropriate data path e.g. the TX datapath for Port A or Port B or Buffer Subsystem . If the output data block is the last block of the sector it is routed to OutData register .

When a runt block exists and CTS is required the contents of Data Out register are provided to the appropriate data path followed by any data in the corresponding one of CTS registers N or . When CTS is required the data stored in the corresponding one of CTS registers N or is fed back into encryption engine . As shown multiplexer controlled by control logic determines which of Data In Storage and Data Out Storage provide the input to encryption engine . Encryption engine also receives any runt blocks. The entries in the CTS register are invalidated and are not provided to the corresponding datapath. When the last data block is processed an equivalent runt block is in the corresponding one of CTS registers N or and the runt block is sent after the data from Data Out register to the appropriate datapath. If CTS was not required the feedback loop is disabled and the data in the corresponding one of CTS registers N or is sent to the appropriate datapath followed by the data in Data Out register .

Locking SP controls data encryption and locking unlocking of bands of media and maintains Lock Table that for each band N of media contains i read write lock enable settings N and ii power on reset POR settings N . To lock and unlock the storage device a host device employs a plaintext password to authenticate and modify the locking tables. The host might set R W enables N to enable or disable read locks and write locks. Depending on the reset handling states set in POR Action N in Lock Table locks might persist when a reset or a power on event occurs. Once unlocked key cache loads the key for the band unlocked. Embodiments of the present invention employ an index for key cache that is the same value as the band index. Thus a User N password is associated with band N of media .

Read write lock enable settings N are modified to lock or unlock the corresponding band. For example to lock or unlock a band of media a user of a host device creates a session with media controller authenticates for the specific band using their plaintext password for that band and modifies the corresponding one of read write lock enable settings N of Lock Table . The user may also change the behavior of media controller on reset condition. For example once a band is unlocked it might remain unlocked for all host devices until i the user relocks the band or ii a power on reset POR condition occurs depending on POR settings N . For example for a POR condition one or more bands might be set to return to a locked state regardless of their status when the reset occurred. POR settings N might also include settings for lock status during any power saving modes of media controller .

As shown in the locking architecture uses Band Key Storage of media to store one or more passwords and a single key for each band of media . As shown each band N might have a corresponding eDK value shown for Bands N as eDKs N . Each band might also have one or more corresponding hPAKs N and one or more corresponding Administrative hPAKs N . As described herein hashed authentication keys hPAK N are the hashed plaintext passwords used by a specific user to unlock the corresponding band of media . As shown in eDK N are encrypted data keys used by DSE to encrypt and decrypt user data. Administrative Admin hPAK N might generally allow for an administrator to have access to substantially all bands of media . Thus some embodiments of the present invention provide that more than one key can apply to any one band of media .

Other data might also be tracked and stored in Band Key Storage for example a list of allowed commands to media might be kept and a mirror of the master boot record MBR might be stored. For example the TCG Opal Specification requires the addition of allowed commands list and Master Boot Record mirror . Allowed commands list allows media controller to check that a received command is allowed before processing the command. MBR mirror allows running a secure pre boot authentication on storage device startup to perform device unlocking without allowing access to data on media . Similarly the hashed Maker s Password and the hashed Session Identifier SID Password list might be stored in Band Key Storage . SID Password list might generally be used to identify specific active host device sessions with media controller .

In accordance with the TCG Specifications when a storage device is activated and enrolled one or more bands of media are defined in Lock Table to discriminate one band from another by employing different keys and passwords. In exemplary embodiments of the present invention the maximum number of bands might be equal to the maximum number of entries in key cache . Each band has a unique encryption key and password.

At step a Maker s Password is generated which is employed at the time of manufacture to initialize all other passwords. The Maker s Password is generated by TRNG . In accordance with the TCG Specifications invalid characters in the random values returned from TRNG might be parsed out by ACS thus a request for one or more values from TRGN might be required to complete the Maker s Password. In exemplary embodiments of the present invention the Maker s Password is 32 bytes. The Maker s Password is saved as a plaintext password in Band Key Storage and later might be transferred by media controller to a user during device personalization.

At step the data keys for each band of media are generated. ACS loads a password authentication key PAK from register during device initialization routine the loaded PAK is the Maker s Password and TRNG generates a random AHK and a random DK. A hashed PAK hPAK is generated by SHA module based on the value in PAK register and the AHK value. Generating the hPAK based on the PAK and the AHK is what ties each hPAK to a respective band of media . The hPAK is stored in hPAK register . An encrypted data key eDK is generated by AES module based on the random DK and the random AHK each generated by TRNG . The resulting eDK is stored in eDK register . As shown in the eDK and the hPAK are saved to Band Key Storage for use in key cache loading and in authentication.

At step the hashed passwords for each band of media are generated. Initially all passwords might be set to a default value for example the Maker s Password. Thus step might save the Maker s Password hPAK value as the hPAK value for other passwords of media controller . After step each band of media has one hPAK and one Administrator hPAK such as shown in . At step other hashed passwords not necessarily related to bands of media are generated. These hashed passwords might be authentication keys employed by an Administrative Security Provider for authentication. These password hashes are generated based on the global band of media i.e. a band accessible by all users of media . For example a default setting of media controller might define one or more bands of media but only enable one band the global band .

The global band covers all of media and allows access and control to the Administrator User e.g. the user of band and Maker s Passwords. As described the global band s encryption key might be used by default. Encryption datapath is always active on a device regardless of whether a user has activated encryption. If the user does not activate the encryption system the Maker s Password and Maker s Hashed Password are employed to unlock the global band by default. If the user changes any of the passwords or redefines access to any bands of media the band specific passwords are employed.

At step if the RK of step and the read back burned RK bRK of step are equal the RK and checksum were successfully burned to OTP and process ends at step . If at step the RK of step and the read back burned RK bRK of step are not equal the process continues to step . At step the number of changed bits between the RK and the burned RK is calculated for example by a logical exclusive or XOR operation. At step if the number of changed bits does not exceed a threshold the process continues to step .

If at step the number of changed bits does exceed a threshold the process continues to step . At step since the RK and the checksum were not burned successfully the slot number of OTP is incremented. If at step slots in OTP are available the process returns to step to burn the RK and checksum to the next slot of OTP . If at step all slots of OTP are used then media controller is deemed faulty and OTP programming fails at step .

Authentication of a user session in accordance with the TCG Specifications requires validation of a plaintext password PAK . If the PAK is the Administrative password since a hash for the Administrative password was generated and stored for each band as shown in then access can be authenticated for any band of media . If the PAK is one of the User N passwords since a hash for each user password was generated and stored for the corresponding band as shown in then access can be authenticated for the corresponding band of media .

At step the hPAK retrieved from reserved area is compared to the hPAK generated from the received PAK. If at step the retrieved hPAK and the received hPAK are not equal at step authentication of the received plaintext password fails. If at step the retrieved hPAK and the received hPAK are equal at step it is determined if the received plaintext password is either an administrative password or a user password. If at step the received PAK is an administrative password at step the received password is authenticated for administrative access to at least one corresponding band of media . For example an administrative password might allow a greater level of access to a single band or might allow access to one or more bands or media . If at step the received PAK is not an administrative password at step the received password is authenticated for non administrative access to at least one corresponding band of media . After steps or complete plaintext password authentication process is successfully complete at step . An authenticated user has authority to perform tasks e.g. loading DKs as permitted by the TCG tables.

After a user authentication is complete at step key cache might be loaded with the DK for the accessed band for example whenever a key is opened. Thus whenever a PAK for a band is successfully authenticated by plaintext password authentication process if the bands are unlocked to allow read or write access the entry of key cache corresponding to the band might be updated. The index into key cache matches the band number for processing of host data transfer contexts.

In order to change a plaintext password the current password is first authenticated such as described with regard to . This ensures that a valid password is provided in order to generate any new password. The authenticated password need not match the password to be changed. The authenticated password only needs to i be a valid password and ii have sufficient permissions to reset the desired password e.g. an administrator might have permission to change the administrator password and any user password . A new Password Authentication Key PAK is generated by TRNG or might be provided by the original password owner and is stored to register . A hashed value of the new PAK hPAK is generated based on the existing Authentication Hash Key AHK . The new hPAK value is stored to hPAK register . If a password applies to more than one band such as an administrative password then the password update routine is performed for each band.

To change a data key DK for one or more bands a valid PAK and hPAK value for the band are required. A host device might change the DK for one or more bands for example to erase repurpose or decommission the storage device. The PAK hPAK and eDK values are loaded into registers and respectively to generate a new DK. If the PAK hPAK is valid ACS requests a new DK from TRNG . AES module then generates the new eDK based on the new DK. The new eDK is saved in Band Key Storage . The Authentication Hash Key AHK is not changed since changing the AHK would invalidate all password hashes hPAKs which could then not be regenerated without each plaintext password PAK . In accordance with the FIPS standard embodiments of the present invention also provide for complete erasure of all data keys including the root key to allow for complete decommissioning of a storage device without the data keys being useable.

Thus as described herein embodiments of the present invention provide a media controller for a storage device that burns a root key and corresponding checksum to a slot in a one time programmable OTP memory. The root key generally might be programmed at the manufacture time of the storage device rather than at the manufacture time of the media controller System on Chip SoC . Embodiments of the present invention might also employ the root key and checksum burning as a test of the media controller SoC to detect failed devices e.g. devices having OTP memory failures .

Reference herein to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment can be included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments necessarily mutually exclusive of other embodiments.

While the exemplary embodiments of the present invention have been described with respect to processing blocks in a software program including possible implementation as a digital signal processor micro controller or general purpose computer the present invention is not so limited. As would be apparent to one skilled in the art various functions of software may also be implemented as processes of circuits. Such circuits may be employed in for example a single integrated circuit a multi chip module a single card or a multi card circuit pack.

The present invention can be embodied in the form of methods and apparatuses for practicing those methods. The present invention can also be embodied in the form of program code embodied in tangible media such as magnetic recording media optical recording media solid state memory floppy diskettes CD ROMs hard drives or any other non transitory machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. The present invention can also be embodied in the form of program code for example whether stored in a non transitory machine readable storage medium loaded into and or executed by a machine or transmitted over some transmission medium or carrier such as over electrical wiring or cabling through fiber optics or via electromagnetic radiation wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code segments combine with the processor to provide a unique device that operates analogously to specific logic circuits. The present invention can also be embodied in the form of a bitstream or other sequence of signal values electrically or optically transmitted through a medium stored magnetic field variations in a magnetic recording medium etc. generated using a method and or an apparatus of the present invention.

It should be understood that the steps of the exemplary methods set forth herein are not necessarily required to be performed in the order described and the order of the steps of such methods should be understood to be merely exemplary. Likewise additional steps may be included in such methods and certain steps may be omitted or combined in methods consistent with various embodiments of the present invention. Similarly although the elements in the following method claims if any are recited in a particular sequence with corresponding labeling unless the claim recitations otherwise imply a particular sequence for implementing some or all of those elements those elements are not necessarily intended to be limited to being implemented in that particular sequence.

As used in this application the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion.

As used herein in reference to an element and a standard the term compatible means that the element communicates with other elements in a manner wholly or partially specified by the standard and would be recognized by other elements as sufficiently capable of communicating with the other elements in the manner specified by the standard. The compatible element does not need to operate internally in a manner specified by the standard.

Also for purposes of this description the terms couple coupling coupled connect connecting or connected refer to any manner known in the art or later developed in which energy is allowed to be transferred between two or more elements and the interposition of one or more additional elements is contemplated although not required. Conversely the terms directly coupled directly connected etc. imply the absence of such additional elements. Signals and corresponding nodes or ports may be referred to by the same name and are interchangeable for purposes here.

It will be further understood that various changes in the details materials and arrangements of the parts which have been described and illustrated in order to explain the nature of this invention may be made by those skilled in the art without departing from the scope of the invention as expressed in the following claims.

