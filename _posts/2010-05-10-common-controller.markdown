---

title: Common controller
abstract: A common game controller is compatible with multiple platforms including game devices and general purpose processors. The common controller can be utilized by both developers and users. Game software can easily be implemented on multiple platforms. Common source code can be developed and compiled to run on multiple systems, for example XBOX 360®, WINDOWS XP®, and WINDOWS® VISTA. Users only have to learn and get familiar with a single game controller. The common controller includes a Universal Serial Bus (USB) compatible interface allowing the controller to be coupled to multiple types of platforms. The common controller can also include a wireless interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08409002&OS=08409002&RS=08409002
owner: Microsoft Corporation
number: 08409002
owner_city: Redmond
owner_country: US
publication_date: 20100510
---
This application is a continuation of U.S. patent application Ser. No. 11 263 761 filed Oct. 31 2005 which claims benefit of Provisional Patent Application No. 60 723 195 filed Oct. 3 2005 both entitled COMMON CONTROLLER. The contents of each of the above referenced applications are incorporated by reference herein in their entirety.

The technical field generally relates to controllers and more specifically relates to a game controller for use with multiple platforms such as game devices and general purpose processors.

Users of general purpose processors such as a personal computer PC for example who want to play games on their PCs have several control devices from which to choose. These control devices include joysticks game pads steering wheels flight yokes gloves head trackers and first person shooter controllers for example. But there is no standard governing how data provided by all these controllers should be interpreted by the game application being executed on the PC. Interpreting this data is a difficult challenge for game developers and as a result game developers often tend to support only a keyboard and a mouse as control devices. Keyboards and mice were not designed for gaming and do not provide a very sophisticated suited of controls. A user s gaming experience can be greatly diminished when playing a game using only a keyboard and or a mouse. This is especially so if the user is familiar with playing the game on a game device having a dedicated controller.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description Of The Illustrative Embodiments. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. A common game controller is compatible with multiple platforms such as XBOX 360 and a PC for example provides a consistent game experience to both users and developers. The common controller can be utilized by both developers and users on multiple platforms having multiple operating systems and applications such as XBOX 360 WINDOWS XP and WINDOWS VISTA for example to provide a consistent game pad for developers to develop software and for uses to play games on multiple platforms. The common controller includes a Universal Serial Bus USB compatible interface allowing the controller to be coupled to multiple types of platforms. The common controller can also include a wireless interface such as a BLUETOOTH compatible interface for example. Use of the common controller allows game software to be implemented on multiple platforms while taking advantage of all the data available from the controller. Common source code can be developed that can be compiled to run on multiple systems for example XBOX 360 WINDOWS XP and WINDOWS VISTA. Use of the common controller allows users to become familiar with only a single game controller for use with multiple platforms.

A controller that can be used by both developers and users with multiple operating systems and applications such as XBOX 360 and WINDOWS provides a consistent game pad for developers to develop software and for users to play games on multiple platforms. The common controller comprises an interface compatible with multiple platforms. In an exemplary embodiment the common controller comprises a USB compatible interface a wireless interface or a combination thereof. Game software can easily be implemented on multiple platforms. Common source code can be developed that can be compiled to run on multiple systems for example XBOX 360 WINDOWS XP and WINDOWS VISTA. Users only have to learn and get familiar with a single game controller.

Provided herein is a description of an exemplary embodiment of a common controlling system as applied to XBOX 360 WINDOWS XP and WINDOWS VISTA. The application of the common controlling system is not be limited thereto but is applicable to other types of platforms and operating systems. The following description of a common controller and common controlling system for use with XBOX 360 WINDOWS XP and WINDOWS VISTA is an example of the more general application of the common controller. Note the terms common controller and gamepad also are used interchangeably throughout.

The driver receives data from each common controller . The driver interprets the received data and translates the data as required. The driver provides the translated data to the API . The driver also is capable of being utilized with legacy system . For example if a user is using a legacy controller other than the common controller such as a joystick for example the driver is capable of receiving data from the joystick interpreting the received data translating the data as appropriate and providing the translated data to the legacy existing system for providing information to the application being executed by the platform. Other legacy control devices such as a keyboard and a mouse also are compatible with the driver . Example control devices supported by the common controlling system include the common controller coupled by a wired coupling means the common controller coupled by a wireless coupling means a wheel a joystick an arcade stick skate boards a dancepad fishing a text input device a headset Wired a headset Wireless or a combination thereof. Note that typically a driver is made for a specific device or class of devices. For example a keyboard and or mouse are in their own device class and therefore have their own drivers. The driver is compatible common controller devices . Significantly however the driver can expose control devices to the platform via the API or the legacy system having an API . Thus a legacy controller can have a separate driver or class driver and be interfaced to the legacy system .

The common controller is coupled to the platform via interface . The interface can comprise any appropriate interface such a wired interface a wireless interface or a combination thereof. In an exemplary embodiment the interface comprises a Universal Serial Bus USB interface.

The API received translated data from the driver and makes that data available to the platform application as needed. The platform application can comprise any appropriate application such as a game application a non game application or a combination thereof for example. The API also is capable of making audio information depicted by block available to the application . Voice and or other audio information can be provided from to a user via the common controller . The user can chat with other users via the audio interface. In an exemplary embodiment the user can control the application via the audio interface. For example a user can activate an application via the audio interface.

In an exemplary embodiment coupling an audio device to the common controller enumerates the audio device Audio device not shown in . The common controlling system enumerates a device by recognizing the device determining its physical port assignment. For example in an exemplary embodiment when the common controller is coupled to the platform without a headset microphone or other type of audio device no audio device is enumerated by the common controlling system. Once the headset microphone is plugged into the common controller the audio device is enumerated by the common controlling system. The audio device is recognized by the common controlling system the driver logically assigns a port to the audio device and an interface is established between the audio device and the common controlling system. In an exemplary embodiment the audio device remains active whether or not the headset microphone becomes subsequently unplugged.

In an exemplary embodiment the common controller driver is compatible with an XBOX 360 controller a controller that can be used to control an XBOX 360 game device . When the driver is installed on platforms comprising WINDOWS XP or WINDOWS VISTA the XBOX 360 controller is compatible with the platform and the operating system therein. In this exemplary embodiment the user can connect the XBOX 360 controller to a PC via a USB port on the PC. The user can then play games via the XBOX 360 controller that are being executed by the platform operating under WINDOWS XP or WINDOWS VISTA.

The API determines the current state of all the connected controllers . For example the API via the driver determines the state of the buttons and controls of each common controller . The API also maps API logical identifiers IDs to physical controller IDs. That is the API assigns a logical ID to each to each port to which a controller is coupled. In an exemplary embodiment the assignment of ID s is performed because the list of controllers in the driver is determined by the order in which the controllers are coupled to the platform. While the logical IDs in the API are determined in accordance with the order in which the controllers are first used. A controller is in a used state when the controller is used such as moving a joystick or depressing a button for example. The API translates data received from the driver and makes the translated data available to the platform application . The API also provides an indication to each controller of the all controller assignments. For example the API provides a signal to each controller via the driver of the platform assignment of each controller coupled to the platform. Each controller comprises means for indicating the controller assignments. In an exemplary embodiment each controller comprises a visual indicating means e.g. light emitting diodes LEDs or liquid crystal display LCD for indicating the port assignment configuration status of each controller .

In an exemplary embodiment the controller state information is stored cached to alleviate the need to wait for an update every time the platform application requests controller state information. It is envisioned that a platform application will request controller state information for each controller each iteration of the platform application. In one implementation the API queries the driver every game request for controller state information. The driver responds with the cached data rather than wait for new data to arrive. If the response provided by the driver is cached data the response is labeled as such.

The API via the driver determines if the specific controller is coupled to a port of the platform at step . If the specific controller is coupled to the port the process of assigning IDs ends at step . If it is determined step that the specific controller is not coupled to the platform the controllers are enumerated at step . That is all platform ports are analyzed to determine if controllers are coupled thereto and the coupling status is remembered. The physical IDs of the new controller or controllers are assigned to the first open API IDs at step . The configuration status is provided to the new controller or controllers at step . For example a new controller can be provided information needed to illuminate its LED displays indicating port assignments of coupled controllers. The configuration status stored in the driver is analyzed at step . If it is determined step that a controller is no longer coupled to the platform the configuration status stored in the driver is updated at step . The API ID is freed for use with the next new controller. If it is determined step that no controllers are missing the process of assigning IDs ends at step .

In an exemplary embodiment the API resets the controller states when the platform application is finished. In an exemplary embodiment this includes turning off the Rumble vibration mode feature on the controllers and also resetting the LEDs to an Off state. The driver enumerates the coupled controllers queries for the types and amount of child devices each controller can support and exposes active children devices to the operating system of the platform. For example the driver can enumerate two controllers one having a microphone headset child device connected thereto. The driver exposes the microphone headset to the operating system e.g. WINDOWS XP of the platform.

At step the driver is installed loaded into the platform to which the common controller or common controllers is coupled. Interfaces between the API and the driver are created at step . This assumes that the API has been installed into the platform. If the API has not been installed the API also is installed at step . Any interfaces and or components needed to support legacy operations are loaded at step . The API provides the interface between the driver and the application. API IDs are assigned to physical controller IDs for each controller coupled to the platform at step . Indicators on each coupled controller are set at step . The indicators on the controllers provide an indication of the number of controllers coupled to the platform and the port assigned to each controller. The indicating means can include any appropriate means such as a visual means e.g. LED or LCD an audio means a mechanical means e.g. vibration or a combination thereof. The application is loaded and or invoked at step . Note that the sequence of steps in is exemplary. For example in another exemplary embodiment logical port assignments and setting controller indicators is not done until after the application is loaded. As the coupled controllers and the application communicate data provided by the controllers to the driver is passed to the API and translated by the API so that the data is usable by the application at step . Also at step data provided by the application is translated by the API and provided to the driver which in turn provides the translated data to the controllers. As predetermined events occur in the application the controllers are re enumerated and API IDs are reassigned in accordance with any change in controller configuration.

While exemplary embodiments of a common controller have been described in connection with various computing devices the underlying concepts can be applied to any computing device or system capable of controlling multiple platforms comprising a game device and a general purpose processor with a common controller. illustrates an example of a suitable computing system environment on which a common controller can be implemented. The computing system environment is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the common controller. Neither should the computing environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment . Although one embodiment of the common controller can include components illustrated in the exemplary operating environment another more typical embodiment of the common controller excludes non essential components.

With reference to an exemplary system for implementing the common controller includes a general purpose computing device in the form of a computer . Components of the computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. Additionally components of the computer may include a memory cache . The processing unit may access data from the memory cache more quickly than from the system memory . The memory cache typically stores the data most recently accessed from the system memory or most recently processed by the processing unit . The processing unit prior to retrieving data from the system memory may check if that data is currently stored in the memory cache . If so a cache hit results and the data is retrieved from the memory cache rather than from the generally slower system memory .

The computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and nonvolatile media and removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers hereto illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a tablet or electronic digitizer a microphone a keyboard the common controller and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but can be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . In an exemplary embodiment the common controller is connected to user input interface via a USB port. A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . The monitor may also be integrated with a touch screen panel or the like. Note that the monitor and or touch screen panel can be physically coupled to a housing in which the computing device is incorporated such as in a tablet type personal computer. In addition computers such as the computing device may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface or the like.

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. For example in the common controlling system the computer may comprise the source machine from which data is being migrated and the remote computer may comprise the destination machine. Note however that source and destination machines need not be connected by a network or any other means but instead data may be migrated via any media capable of being written by the source platform and read by the destination platform or platforms.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

The common controlling system describe herein is applicable to game applications. Many games do not play well with a keyboard and mouse. The common controller provides a means for users to play games on platforms utilizing WINDOWS operating systems. The common controller is applicable to both users and developers. In an exemplary scenario involving a user a user can receive a common controller and a few new games as a gift for the holidays. The user can install the driver for the controller and the games on her general purpose processor. She then plugs in the common controller to a USB port on her general purpose processor and uses the common controller to play the new games that came optimized to work well with common controller. Later on the user finds that she can also configure existing games to work well with the common controller. In another exemplary scenario involving a developer a developer works for a gaming company that generates sports titles for both the XBOX 360 and PCs. The developer is new to the company and has been tasked with implementing setup and game input for his cross platform title. He develops high level software for the XBOX 360 and upon completion can port this high level software to the PC. Also the developer has the ability to incorporate voice and text input into the game because all the controllers are compatible therewith.

It is envisioned that utilizing a common controller for game applications can reduce the work needed to develop game applications for both game devices and general purposes processors. It is also envisioned that utilizing a common controller for game applications will increase the popularity of using PCs as game machines.

The various techniques described herein can be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus for a common controller or certain aspects or portions thereof can take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing memory management. In the case of program code execution on programmable computers the computing device will generally include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. The program s can be implemented in assembly or machine language if desired. In any case the language can be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus for a common controller also can be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer or the like the machine becomes an apparatus for practicing a method for controlling an application via a common controller. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of a common controller. Additionally any storage techniques used in connection with a common controller can invariably be a combination of hardware and software.

A common controlling system typically includes at least some form of computer readable media. Computer readable media can be any available media that can be accessed by a common controller. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by a common controller. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

While a common controller has been described in connection with the exemplary embodiments of the various figures it is to be understood that other similar embodiments can be used or modifications and additions can be made to the described embodiments for performing the same functions of a common controlling system without deviating therefrom. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. Therefore the common controlling system as described herein should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

