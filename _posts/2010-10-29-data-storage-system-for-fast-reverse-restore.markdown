---

title: Data storage system for fast reverse restore
abstract: Techniques are provided for performing a copy operation. A fast reverse restore command indicating a new source and a new target is received, wherein the new source is an original target and the new target is an original source. A synchronous scan is performed on the new target. A new target structure associated with the new target is updated using a new source structure associated with the new source. Techniques are also provided for performing a copy operation in which a fast reverse restore command is received after an instant virtual copy has been performed from a new target to a new source and wherein the fast reverse restore command is performed before a background copy has been performed by the instant virtual copy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08005800&OS=08005800&RS=08005800
owner: International Business Machines Corporation
number: 08005800
owner_city: Armonk
owner_country: US
publication_date: 20101029
---
This application is a continuation of and claims the benefit of U.S. Pat. No. 7 856 425 entitled ARTICLE OF MANUFACTURE AND SYSTEM FOR FAST REVERSE RESTORE having application Ser. No. 12 255 575 filed Oct. 21 2008 which is a continuation of and claims the benefit of U.S. Pat. No. 7 461 100 having application Ser. No. 10 856 239 filed May 27 2004 the entire contents of each of which is incorporated herein by reference.

Computing systems often include one or more host computers hosts for processing data and running application programs direct access storage devices DASDs for storing data and a storage controller for controlling the transfer of data between the hosts and the DASD. Storage controllers also referred to as control units or storage directors manage access to a storage space comprised of numerous hard disk drives otherwise referred to as a Direct Access Storage Device DASD . Hosts may communicate Input Output I O requests to the storage space through the storage controller.

Some disaster recovery systems address data loss over a period of time in which case writes to volumes on data storage may be lost. The writes may update data write new data or write the same data again. To assist in recovery of data writes a copy of data may be provided at a remote location. Such copies may also be referred to as dual or shadow copies. International Business Machines Corporation IBM the assignee of the subject patent application provides remote mirroring systems including a Peer to Peer Remote Copy PPRC service e.g. a PPRC Extended Distance service or a synchronous PPRC service and an Extended Remote Copy XRC service in an Enterprise Storage Server ESS system.

The remote mirroring systems provide techniques for mirroring data in order to facilitate recovery after a system failure. Such data shadowing systems can also provide an additional remote copy for non recovery purposes such as local access at a remote site.

In remote mirroring systems data is maintained in volume pairs. A volume pair is comprised of a volume in a primary storage device and a corresponding volume in a secondary storage device that includes a copy of the data maintained in the primary volume. Typically the primary volume of the pair will be maintained in a primary direct access storage device DASD and the secondary volume of the pair is maintained in a secondary DASD shadowing the data on the primary DASD. A primary storage controller may be provided to control access to the primary DASD and a secondary storage controller may be provided to control access to the secondary DASD.

Volumes in the secondary DASDs are consistent when all writes have been transferred in their logical order i.e. all dependent writes transferred first before the writes dependent thereon. In the banking example this means that the deposit is written to the secondary volume before the withdrawal. A consistency group is a collection of related volumes that need to be kept in a consistent state. A consistency transaction set is a collection of updates to the primary volumes such that dependent writes are secured in a consistent manner. Consistency groups maintain data consistency across volumes.

In many systems data on one storage device such as a DASD may be copied to the same or another storage device so that access to data volumes can be provided from two different devices. A point in time copy involves physically copying all the data from source volumes to target volumes so that the target volume has a copy of the data as of a point in time. A point in time copy can also be made by logically making a copy of the data and then only copying data over when necessary in effect deferring the physical copying. This logical copy operation is performed to minimize the time during which the target and source volumes are inaccessible.

A number of direct access storage device DASD subsystems are capable of performing instant virtual copy operations also referred to as fast replicate functions. Instant virtual copy operations work by modifying metadata in structures such as relationship tables or pointers to treat a source data object as both the original and copy. In response to a host s copy request the storage subsystem immediately reports creation of the copy without having made any physical copy of the data. Only a virtual copy has been created and the absence of an additional physical copy is completely unknown to the host.

Later when the storage system receives updates to the original or copy the updates are stored separately and cross referenced to the updated data object only. At this point the original and copy data objects begin to diverge. The initial benefit is that the instant virtual copy occurs almost instantaneously completing much faster than a normal physical copy operation. This frees the host and storage subsystem to perform other tasks. The host or storage subsystem may even proceed to create an actual physical copy of the original data object during background processing or at another time.

One such instant virtual copy operation is known as a FlashCopy operation. A FlashCopy operation involves establishing a logical point in time relationship between source and target volumes on the same or different devices. The FlashCopy operation guarantees that until a track in a FlashCopy relationship has been hardened to its location on the target disk the track resides on the source disk. A relationship table is used to maintain information on all existing FlashCopy relationships in the subsystem. During the establish phase of a FlashCopy relationship one entry is recorded in the source and target relationship tables for the source and target that participate in the FlashCopy being established. Each added entry maintains all the required information concerning the FlashCopy relationship. Both entries for the relationship are removed from the relationship tables when all FlashCopy tracks from the source extent have been physically copied to the target extents or when a withdraw command is received. In certain cases even though all tracks have been copied from the source extent to the target extent the relationship persists.

The target relationship table further includes a bitmap that identifies which tracks involved in the FlashCopy relationship have not yet been copied over and are thus protected tracks. Each track in the target device is represented by one bit in the bitmap. The target bit is set e.g. either logically or physically when the corresponding track is established as a target track of a FlashCopy relationship. The target bit is reset when the corresponding track has been copied from the source location and destaged to the target device due to writes on the source or the target device or a background copy task.

Further details of the FlashCopy operations are described in the commonly assigned U.S. Pat. No. 6 611 901 issued on Aug. 26 2003 with U.S. patent application Ser. No. 09 347 344 filed on Jul. 2 1999 entitled Method System and Program for Maintaining Electronic Data as of a Point in Time which patent application is incorporated herein by reference in its entirety.

Once the logical relationship is established hosts may then have immediate access to data on the source and target volumes and the data may be copied as part of a background operation. A read to a track that is a target in a FlashCopy relationship and not in cache triggers a stage intercept which causes the source track corresponding to the requested target track to be staged to the target cache when the source track has not yet been copied over and before access is provided to the track from the target cache. This ensures that the target has the copy from the source that existed at the point in time of the FlashCopy operation. Further any destages to tracks on the source device that have not been copied over triggers a destage intercept which causes the tracks on the source device to be copied to the target device.

Instant virtual copy techniques have been developed at least in part to quickly create a duplicate copy of data without interrupting or slowing foreground processes. Instant virtual copy techniques such as a FlashCopy operation provide a point in time copy tool. Instant virtual copy techniques may be used for a variety of applications including for example data backup data migration data mining testing etc. For example an instant virtual copy technique may be used for the creation of a physical backup copy of the source data to aid in disaster recovery.

Although the instant virtual copy techniques such as FlashCopy operations are useful for copying data conventional instant virtual copy techniques may be improved.

Provided are an article of manufacture system and method for performing a copy operation. A fast reverse restore command indicating a new source and a new target is received wherein the new source is an original target and the new target is an original source. A synchronous scan is performed on the new target. A new target structure associated with the new target is updated using a new source structure associated with the new source.

Also provided are an article of manufacture system and method for performing a copy operation in which a fast reverse restore command is received after an instant virtual copy has been performed from a new target to a new source and wherein the fast reverse restore command is performed before a background copy has been performed by the instant virtual copy.

In the following description reference is made to the accompanying drawings which form a part hereof and which illustrate several implementations of the invention. It is understood that other implementations may be utilized and structural and operational changes may be made without departing from the scope of implementations of the invention.

The first control unit includes a cache in which updates to blocks of data in the storage A are maintained until written to storage A i.e. the blocks of data are destaged . The system memory may be in a separate memory devices from cache or may share a memory device with cache .

Additionally the first control unit includes a nonvolatile cache . The non volatile cache may be for example a battery backed up volatile memory to maintain a non volatile copy of data updates and other information.

The first control unit includes system memory in which a read process for reading data and a write process for writing data reside. The system memory also includes a remote mirroring process for transferring data from the first control unit to remote storage such as storage at the second control unit . That is the remote mirroring process performs a remote mirroring copy operation such as a PPRC copy operation. When a remote mirroring copy operation is being performed between two storages the two storages may be said to be in a remote mirroring relationship. When an instant virtual copy operation is being performed between two storages the two storages may be said to be in an instant virtual copy relationship which is a type of point in time copy relationship.

Second control unit includes system memory in which a read process for reading data and a write process for writing data reside. The system memory also includes an instant virtual copy process and a fast reverse restore process . The fast reverse restore process reverses a point in time copy i.e. restores original data that had been copied from an original source to an original target with an instant virtual copy operation . The fast reverse restore command is received after an instant virtual copy has been performed and the fast reverse restore command may be performed before a background copy has been completed by the instant virtual copy.

The fast reverse restore process performs a reverse restore operation that transfers data from an original target to an original source to restore data at the original source to what the data was at the time of a last instant virtual copy from the original source to the original target. In certain implementations of the invention there may be multiple reverse restore processes. In certain implementations of the invention the reverse restore process may be executed at another storage controller connected to storage controller instead of or in addition to execution at the storage controller .

Second control unit provides one or more host computers access to storage such as storage B which maintains back up copies of all or a subset of the volumes of the storage A and storage C . The host computers may each execute one or more programs under control of an operating system not shown and executing on a Central Processing Unit CPU not shown . The host computers may be the same as host computers may be different from host computers or may form a subset of the host computers .

The second control unit also includes a cache in which updates to blocks of data in the storage B may be maintained until written to storage B i.e. the blocks of data are destaged and a cache in which updates to blocks of data in storage C may be maintained until written to storage C . The cache and cache may comprise separate memory devices or different sections of a same memory device. The cache and cache may be used to buffer read and write data being transmitted between the hosts storage B and storage C . Further caches and may be referred to as source and target caches for holding source or target blocks of data in a point in time copy relationship e.g. an instant virtual copy relationship and the caches and may store at the same time source and target blocks of data in different point in copy relationships.

The system memory may be in a separate memory device from caches and or may share a memory device with one or both caches and .

Additionally the second control unit includes a nonvolatile cache . The non volatile cache may be for example a battery backed up volatile memory to maintain a non volatile copy of data updates and other information.

Storage B maintains copies of all or a subset of the volumes of the storage A . Additionally storage B may be updated by for example one or more programs at one or more host computers respectively. Storage B is configured to have volumes e.g. Logical Unit Numbers Logical Devices etc. where n represents that there may be any number of volumes. The volumes may be divided into blocks of storage containing blocks of data and the blocks of storage are further divided into sub blocks of storage where p may be any integer value that contain sub blocks of data. A volume may be any logical or physical element of storage. In certain implementations the blocks of data are contents of tracks while the sub blocks of data are contents of sectors of tracks.

Storage C may maintain copies of all or a subset of the volumes of the storage B . Additionally storage C may be updated by for example one or more programs at host computers respectively. Storage C is configured to have volumes e.g. Logical Unit Numbers Logical Devices etc. where o represents that there may be any number of volumes. The volumes may be divided into blocks of storage containing blocks of data and the blocks of storage are further divided into sub blocks of storage where p may be any integer value that contain sub blocks of data. A volume may be any logical or physical element of storage. In certain implementations the blocks of data are contents of tracks while the sub blocks of data are contents of sectors of tracks.

In certain implementations removable storage instead of or in addition to remote storage such as storage B may be used to maintain back up copies of all or a subset of the storage A and the techniques of the invention transfer data to the removable storage rather than to the remote storage. The removable storage may reside at the first control unit .

In certain implementations the first control unit and second control unit may be comprised of the IBM Model Storage Controller Enterprise Storage Server or any other control unit known in the art.

In certain implementations the host computers host computers first control unit and or second control unit may comprise any computing device known in the art such as a mainframe server personal computer workstation laptop handheld computer telephony device network appliance virtualization device storage controller etc.

A primary site may include multiple first control units storage and host computers. A secondary site may include multiple second control units recovery systems and storage.

In certain implementations of the invention data is maintained in volume pairs. A volume pair is comprised of a first volume in a first storage device e.g. storage A and a corresponding volume in a second storage device e.g. storage B that includes a consistent copy of the data maintained in the first volume. For example volume at storage A may correspond to volume at storage B .

In certain implementations the first control unit and second control unit communicate via communication paths such as direct high speed transmission lines e.g. an Enterprise System Connection ESCON link. However the communication paths may be comprised of any other communication means known in the art including network transmission lines fiber optic cables etc.

For storage and the values of m n and o may be the same or different. The storage and may each comprise an array of storage devices such as Direct Access Storage Devices DASDs Just a Bunch of Disks JBOD Redundant Array of Independent Disks RAID virtualization device etc.

For ease of reference the terms tracks and sectors may be used herein as examples of blocks of data and sub blocks of data but use of these terms is not meant to limit the technique of the invention to tracks and sectors. The techniques of the invention are applicable to any type of storage block of storage or block of data divided in any manner.

Implementations of the invention are applicable to the transfer of data between any two storage mediums which for ease of reference may be referred to herein as source storage and target storage or as first storage and second storage. For example certain implementations of the invention may be used with two storage mediums located at a single storage controller as illustrated in . Moreover certain alternative implementations of the invention may be used with two storage mediums located at different storage controllers different physical sites etc. Also for ease of reference a block of data in source storage may be referred to as a source block of data and a block of data in target storage may be referred to as a target block of data. 

When the indication of which storage is to be a source and which storage is to be a target is reversed for ease of reference the original source may be referred to as a new target the original target may be referred to as a new source an original source block of data may be referred to as a new target block of data and an original target block of data may be referred to as a new source block of data. 

A storage C structure is used to monitor updates to blocks of data within portions of data in target C after an instant virtual copy relationship has been established between a portion of source storage and a portion of target storage. In certain implementations there is a storage C structure for each volume on storage C . The storage C structure includes an indicator e.g. a bit for each block of data in the source storage that is part of the instant virtual copy relationship. When an indicator is set to a first value e.g. one the setting indicates that the block of data has not been copied from the portion of the source storage to the target storage. When an indicator is set to a second value e.g. zero the setting indicates that the block of data has been copied from the portion of the source storage to the portion of the target storage.

Structures may each be viewed as either a source structure or a target structure depending on whether each associated storage is being treated as a source or a target of a copy operation.

An out of sync structure is used to determine which blocks of storage e.g. tracks have been updated since a last transfer to from one storage to another storage without regard to the particular updated sub blocks e.g. sectors of the block of storages. When an indicator is set to a first value e.g. one the setting indicates that the block of data has been updated since the last transfer e.g. due to a PPRC copy operation . When an indicator is set to a second value e.g. zero the setting indicates that the block of data has not been updated since the last transfer e.g. due to a PPRC copy operation . For example out of sync structure would be maintained for storage B if storage B were in a remote mirroring relationship with storage A .

In certain implementations of the invention each structure and comprises a bitmap and each indicator comprises a bit. In each structure and the nth indicator corresponds to the nth block of data e.g. the first indicator in each structure and corresponds to the first data block . Although the structures and structures and have been illustrated as three separate structures the structures may be combined in any form without departing from the scope of the invention and the structures and may be combined in any form without departing from the scope of the invention. In certain implementations of the invention there is a copy of each structure for each volume. In certain alternative implementations of the invention there is a single copy of each structure for all volumes.

In certain implementations of the invention prior to execution of the fast reverse restore process updates that have been made to an original source e.g. volume since an instant virtual copy operation was performed to an original target e.g. volume may be either in cache nonvolatile cache and or on storage B . If these updates have been destaged to the storage B then prior to that destage a copy of the original data would have been made from volume to volume

Additionally there may be some blocks of data in cache and or nonvolatile cache for volume that existed at the time the instant virtual copy relationship was created. These blocks of data are part of the original instant virtual copy relationship.

Moreover for each block of data that is copied from volume to volume an indicator in the storage C structure associated with volume is reset to indicate that the block of data has been copied from volume to volume

Volume is write inhibited to protect the point in time copy. That is programs at host computers are not allowed to write to the protected point in time copy created by the instant virtual copy operation.

In control begins at block with receipt of a fast reverse restore command that indicates a new source e.g. volume and a new target e.g. volume . In block the fast reverse restore process performs a synchronous scan on the new target volume . In particular with the synchronous scan blocks of data in cache at the new target volume that existed at the time an instant virtual copy relationship was created from the original source i.e. the new target to the original target i.e. the new source e.g. from volume to volume are moved to physical storage. In particular blocks of data that belong to the instant virtual copy relationship are destaged to physical storage for the new target volume but are not copied to the new source volume . Also for blocks of data that were updated after the instant virtual copy operation the original content of the blocks of data on the physical storage for the new target volume are copied to physical storage for the new source volume and the corresponding indicators for the copied blocks of data are reset in structure which may be referred to as a new source structure as it is associated with the new source volume to indicate that the blocks of data have been copied. In block the fast reverse restore process quiesces the I O on the new source volume and on the new target volume . In certain implementations I O is quiesced before performing the synchronous scan of block and no additional blocks of data are updated for the new target. In block the fast reverse restore process optionally sets the new target volume as write inhibited.

In block the fast reverse restore process updates structure by inverting the values in the new source structure and copying these values to structure which may be referred to as the new target structure as it is associated with the new target volume . In certain implementations the processing of block is performed once the scan of block is completed. In certain implementations in which the indicators in the new source structure are ones and zeroes inverting values refers to converting zeros to ones and ones to zeroes . The new target structure then represents the blocks of data that are to be physically copied from the new source volume back to the new target volume . From block processing continues to block .

In block the fast reverse restore process discards the blocks of data in cache for the new target volume as these were previously processed e.g. copied as needed to the new source volume . In block the fast reverse restore process optionally starts a background copy i.e. a type of physical copy from the new source volume to the new target volume . The background copy operation copies blocks of data from volume to volume for which indicators are set in a storage B structure . In certain implementations rather than performing a physical background copy a logical copy is performed. In block the fast reverse restore process resets the write inhibit for the new target volume if write inhibit had been set in block . In block the fast reverse restore process unquiesces I O on the new source volume and new target .

Additionally the fast reverse restore process may optionally perform a copy from the new target volume to one or more storages e.g. to volume or to another storage . When copying is performed from the new target volume the new target may be referred to as a source . In particular once the background copy is complete which should be very quick especially for an asynchronous PPRC copy operation where an instant virtual copy operation was performed a short time before the fast reverse restore command was issued the new target volume is a physically restored copy and the instant virtual copy relationship between the new source and new target is terminated. The updated volume may then be copied with a new instant virtual copy operation to volume again which may be performed so that a consistent copy of data on volume resides on volume . In certain implementations the updated volume may be copied to up to eleven additional volumes to create one or more logical copies.

To further illustrate implementations of the invention will be used to describe examples of implementations of the invention. Implementations of the invention are applicable to scenarios in which an instant virtual copy has been made from a source to a target and the data is to be restored at the source. Such scenarios include those in which no PPRC copy operation is performed. For example if an instant virtual copy is performed from source A to target B and then due to some error e.g. software corruption etc. source A was corrupted the fast reverse restore command is used to restore the contents of source A to what they were at the time of the instant virtual copy.

In certain implementations the computing environment of is an asynchronous PPRC environment in which a PPRC Extended Distance copy operation is being performed. Host I O is being written to one or more volume s on storage A . Also there exists an asynchronous PPRC relationship i.e. a type of remote mirroring copy relationship between storage A and storage B . There exists a full volume FlashCopy relationship i.e. a type of instant virtual copy relationship between storage B and storage C with target write inhibit i.e. a write inhibit of storage C . Initially storage B is a source for the FlashCopy relationship and storage C is a target volume for the FlashCopy relationship.

In certain scenarios the primary control unit may fail while an asynchronous PPRC copy operation i.e. a type of remote mirroring copy operation is being performed between storage A and storage B and while a FlashCopy operation i.e. a type of instant virtual copy operation is being performed between storage B and storage C . In such scenarios once a primary control unit failure has occurred the asynchronous PPRC copy operation is no longer able to form consistency groups that include updates from the primary control unit .

In certain implementations a recovery program issues a fast reverse restore command to the storage B to storage C instant virtual copy relationship indicating that a background copy is to be started that the target volume may be a primary mirroring volume for a PPRC copy operation and that the instant virtual copy relationship is not persistent i.e. the instant virtual copy relationship is terminated when the instant virtual copy operation is completed .

The fast reverse restore command does not require that all blocks of data involved in an instant virtual copy relationship be physically copied from the source storage B to the target storage C prior to performing the fast reverse restore. Thus the storage C structure may have some indicators set to indicate that blocks of data are still to be copied from storage B when the fast reverse restore command is issued. The fast reverse restore command ensures that for volumes on storage B that have been modified since the last instant virtual copy operation physical copies of the original data are transferred from storage B to storage C before data is copied from storage C back to storage B . Also the fast reverse restore command ensures that the source storage B is physically restored to the data as it existed at the time of the last instant virtual copy e.g. from storage B to storage C .

After the execution of the fast reverse restore command a volume on storage C may not be usable. For example because the instant virtual copy operation is a logical operation not all blocks of data involved in the copy operation may have been physically copied to storage C from storage B . In such cases another instant virtual copy operation may be issued to copy blocks of data from storage B to storage C .

Moreover the fast reverse restore command detects whether a new target volume is a primary mirroring volume for a PPRC copy relationship. If the new target volume is a primary mirroring volume for a PPRC copy relationship the fast reverse restore command updates the out of sync structure of storage B with the storage B structure .

The fast reverse restore command is performed by starting a synchronous scan on volumes on storage B to ensure that original data for a point in time copy e.g. an instant virtual copy is moved to storage C . The synchronous scan destages all data in the cache for storage B . If the data in cache belongs to the point in time relationship then no data is copied from storage B to storage C . If the data was updated after the point in time copy then this destage will force a copy of the original data from storage B to storage C . Also an inverted storage C structure is copied to the storage B structure . Additionally the blocks of data in cache for the volumes in storage B are discarded. Then a background copy is started and the target write inhibit for storage C is reset. Also there is no I O to the volumes on storage B and storage C during this time.

The recovery program waits until the background copies complete on the volumes on storage B . Then the recovery program issues queries to check whether the background copies have completed on the volumes on storage B . When this has occurred the consistency group has been hardened on the volumes on storage B . The storage C to storage B instant virtual copy relationship terminates when the background copies complete.

The host computers are activated on the secondary control unit e.g. the host computers may be activated by the recovery program . The recovery consistency group is saved on the volumes on storage C . Changes made by activities by host computers on the secondary control unit are recorded on volumes at storage B and out of sync structure associated with storage B .

FlashCopy IBM Enterprise Storage Server and ESCON are registered trademarks or common law marks of International Business Machines Corporation in the United States and or other countries.

The described embodiments may be implemented as a method apparatus or article of manufacture using programming and or engineering techniques to produce software firmware hardware or any combination thereof. The terms article of manufacture and circuitry as used herein refer to a state machine code or logic implemented in hardware logic e.g. an integrated circuit chip Programmable Gate Array PGA Application Specific Integrated Circuit ASIC etc. or a computer readable medium such as magnetic storage medium e.g. hard disk drives floppy disks tape etc. optical storage CD ROMs optical disks etc. volatile and non volatile memory devices e.g. EEPROMs ROMs PROMs RAMs DRAMs SRAMs firmware programmable logic etc. . Code in the computer readable medium is accessed and executed by a processor. When the code or logic is executed by a processor the circuitry may include the medium including the code or logic as well as the processor that executes the code loaded from the medium. The code in which embodiments are implemented may further be accessible through a transmission media or from a file server over a network. In such cases the article of manufacture in which the code is implemented may comprise a transmission media such as a network transmission line wireless transmission media signals propagating through space radio waves infrared signals etc. Thus the article of manufacture may comprise the medium in which the code is embodied. Additionally the article of manufacture may comprise a combination of hardware and software components in which the code is embodied processed and executed. Of course those skilled in the art will recognize that many modifications may be made to this configuration and that the article of manufacture may comprise any information bearing medium known in the art.

The illustrated logic of describes specific operations occurring in a particular order. In alternative implementations certain of the logic operations may be performed in a different order updated or removed. Moreover operations may be added to the above described logic and still conform to the described implementations. Further operations described herein may occur sequentially or certain operations may be processed in parallel or operations described as performed by a single process may be performed by distributed processes.

The illustrated logic of may be implemented in software hardware programmable and non programmable gate array logic or in some combination of hardware software or gate array logic.

The computer architecture may comprise any computing device known in the art such as a mainframe server personal computer workstation laptop handheld computer telephony device network appliance virtualization device storage controller etc. Any processor and operating system known in the art may be used.

The foregoing description of implementations of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the implementations of the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the implementations of the invention be limited not by this detailed description but rather by the claims appended hereto. The above specification examples and data provide a complete description of the manufacture and use of the composition of the implementations of the invention. Since many implementations of the invention can be made without departing from the spirit and scope of the implementations of the invention the implementations of the invention reside in the claims hereinafter appended or any subsequently filed claims and their equivalents.

