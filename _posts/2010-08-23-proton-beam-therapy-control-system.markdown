---

title: Proton beam therapy control system
abstract: A tiered communications architecture for managing network traffic in a distributed system. Communication between client or control computers and a plurality of hardware devices is administered by agent and monitor devices whose activities are coordinated to reduce the number of open channels or sockets. The communications architecture also improves the transparency and scalability of the distributed system by reducing network mapping dependence. The architecture is desirably implemented in a proton beam therapy system to provide flexible security policies which improve patent safety and facilitate system maintenance and development.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473608&OS=08473608&RS=08473608
owner: Loma Linda University Medical Center
number: 08473608
owner_city: Loma Linda
owner_country: US
publication_date: 20100823
---
This U.S. patent application is a continuation of U.S. patent application Ser. No. 12 167 893 filed Jul. 3 2008 which is a continuation of U.S. patent application Ser. No. 10 433 817 filed Nov. 28 2003 which was the U.S. National Phase application of PCT US01 47634 filed Dec. 10 2001 which claims priority to U.S. Provisional Patent Application No. 60 254 467 entitled Proton beam therapy system control system client agent monitor architecture filed Dec. 8 2000 and all of which are hereby incorporated by reference in their entireties.

This invention was made with Government support under grant DE FG03 98ER62632 awarded by the Department of Energy. The Government has certain rights to this invention.

The present invention relates to distributed control systems and in particular concerns a control system for managing data communications in a distributed environment for a proton beam therapy device.

Radiation particle therapy devices are commonly used to treat localized forms of cancer as well as other afflictions. These devices are used to target specific regions of a patient e.g. a tumor and direct a precisely aligned stream of atomic particles or electromagnetic radiation towards the target region. The energy from the stream results in localized cell damage and effectively disrupts the growth and progression of the tumor.

One particularly useful form of radiation therapy is proton beam therapy wherein protons form the energy stream used to irradiate the target regions of the patient. Like other types of beam directed radiation therapy proton beam therapy requires the patient to be accurately positioned with respect to the beam source so that the proton stream irradiates only the desired target region. Otherwise the stream could damage other healthy cells within the patient s body.

As described in detail in U.S. Pat. No. 4 905 267 a support apparatus is used to position the patient with a particular orientation and the support apparatus is further positioned on a treatment platform within a gantry structure of the proton treatment facility. The proton treatment facility may further comprise more than one such treatment apparatus for the purposes of accommodating multiple patients. Control and monitoring of the apparatus and components of the treatment facility are directed by computer and hardware subsystems which coordinate the activities of each treatment station. In addition to the mechanical apparatus used to position the patient proton beam therapy requires numerous other systems and software components which are used to control beam intensity modify beam position perform digital imaging monitor safety conditions and other functions. Together these systems form a complex and distributed collection of hardware and software components. Additionally in a proton treatment facility with more than one treatment apparatus the complexity of the system is further increased by the additional requirements for system redundancy and selective control of each treatment apparatus.

The complex architecture of distributed systems such as radiation therapy devices present numerous obstacles in allowing for coordinated control by a single application and further create networking difficulties between the components of the system. One particular limitation of conventional distributed systems relates to the management of data communications between the various components of the distributed system which becomes more difficult as the size of the distributed system increases. This problem is particularly apparent when a radiation therapy device is designed to contain more than one treatment apparatus. As a result providing a centralized control and monitoring solution becomes a cumbersome task due in part to the number of communications channels which must be maintained. Additionally the complex communications mapping schema presents difficulties in insuring that all devices can communicate with one another. Oftentimes modifying or upgrading a single component of the distributed system necessarily results in the need to modify the configuration for a large number of other components to which the modified component was connected. Improper modification of the configuration for these components can result in numerous problems including loss of system control inaccurate system monitoring and device failure.

In a radiation therapy device significant reconfiguration of the existing mapping schema in the aforementioned manner is undesirable as it introduces potential control issues which must be resolved in order to insure patient safety. If these issues are not properly resolved or if there is unexpected loss of control of one of more of the components during operation of the radiation therapy device patient injury may occur. Therefore it is desirable to increase the level of transparency between components within the radiation therapy device to make the system more tolerant to modification and component upgrades.

A number of difficulties arise when using this approach which limit the coordination and management capabilities of complex distributed systems such as radiation therapy devices. In particular when a large number of hardware devices are to be managed or monitored by the host applications or processes the required number of communication channels that must be established and maintained becomes increasingly large. In many instances this results in increased system overhead necessary to manage the communication channels which may grow to a point where the maximum number of communication channels supported by the operating system or hardware components is exceeded. Thus conventional distributed systems provide limited scalability due to restrictions in the number of communications channels which can be accommodated. Additionally as the complexity of the distributed system increases it becomes more difficult to perform effective network monitoring and authentication as well as maintain secure firewall policies to insure adequate system security.

A further problem arises in complex distributed systems to insure that individuals who work with the architecture of the existing system understand the communications mapping of the channels and services within the system . This is especially important for developers who must have specific knowledge of how the hardware devices are interconnected in order to add new hardware components or functionality. Conventional approaches insufficiently address this problem and rely on esoteric mapping schemes which may be difficult to understand and develop around.

Conventional distributed environments are typically based on a client server paradigm. The client server approach uses one or more monolithic host applications to poll individual systems of the distributed environment and piece the information together as needed. This method of information distribution and coordination is undesirable for a number of reasons including the above described maintenance difficulties lack of scalability and increased complexity in data verification and validation.

Additionally in the proton beam therapy system there are numerous safety features which typically require constant monitoring of the underlying hardware devices and subsystems to operate. A conventional approach to this monitoring requirement is to have hardware monitoring take place exclusively at a host application level by a controlling program or application. One potential drawback using this approach is that a failure of the host application or the controlling program may result in a potentially unsafe or hardware damaging condition. In some instances a watchdog program is employed to detect lapses in communication between the host application and the monitored hardware however the use of a watchdog program may have undesirable effects on the system.

In the case of a power supply the watchdog program may automatically shut off the power supply to thereby invoke a system safe. This may result in the cooling of the power supply and subsequently result in a lengthy warm up period before patient treatment can resume. Furthermore a failure in the proton beam therapy system may be masked until just prior to treatment possibly delaying the treatment and adding to the discomfort of the patient.

Hence there is a need for an improved system and methods for managing communications within complex and loosely coupled distributed environments such as that used in a proton beam therapy device. This system architecture should be able to accommodate the complexity and bandwidth demands of the proton beam therapy system while maintaining an acceptable level of simplicity so as to facilitate scaling maintenance and development. Additionally the system should provide improved system monitoring features that resolve potential problems associated with monitoring off line or malfunctioning devices.

The present invention comprises a tiered communications system for command management and monitoring of a proton beam therapy system. In one aspect the architecture of the proton beam therapy system includes one or more host applications or programs which communicate with hardware and or resources used in patient treatment through an agent module. The agent transparently manages communications traffic and performs a number of administrative functions including data routing between the components of the proton beam therapy system. The communications system contains a monitor module which provides low level communications control and command translation for the various hardware devices and resources associated with the proton beam therapy system.

Communications coordination and management complexity is significantly reduced using the tiered communications system. In one aspect the communications system architecture reduces channel or socket utilization by multiple processes using a routing multiplexing functionality of the agent to resolve potential bottlenecks encountered coordinating data exchange between the hardware devices. The communications system further provides a constant monitoring capability for embedded systems using a proctor module.

A centralized connection architecture provides a further benefit of increased connection security which is important in maintaining the safety of patients treated using the proton beam therapy system. The communications system architecture additionally simplifies user interfacing and reduces the complexity of application development and deployment. For example host applications can be configured to manage monitor and control embedded hardware devices without specific knowledge of the functional implementation or definitions required to communicate with each device. Additionally the host applications can be configured to communicate with the embedded hardware devices without knowing the physical location of the device or its controlling system. In one aspect logical mapping of this nature permits the flexible placement of devices within the system without substantial modification to the system configuration.

In one aspect the invention comprises a communications system for managing communications in a proton beam therapy device wherein the system comprises a treatment station one or more host applications one or more functional components and an agent. The treatment station is used to direct a calibrated and aligned beam towards a patient isocenter and the one or more host applications are used to monitor and control the operation of the treatment station through the functional components comprising hardware subsystems associated with the operation of the treatment station. The agent is connected to each host application and uses a single client data channel per host application. The agent is further connected to each functional component by a monitor data channel wherein the agent performs routing operations between each host application and the functional components such that each host application can communicate with each functional component using the single client data channel.

In another aspect the invention comprises a tiered communication architecture for a proton beam therapy device comprising a distributed network which operates using a reduced channel set and provides substantially transparent communications between one or more host applications and a plurality of hardware devices associated with the generation and alignment of a radiation beam used to treat a patient. The architecture further comprises an agent device connected to each application and to each hardware device by a plurality of discrete data channels wherein the agent routes communications between the one or more host applications and the plurality of hardware devices through the discrete data channels. The architecture further comprises a monitor component associated with each hardware device used to receive instructions from the host application routed through the agent and transform the instructions into a hardware recognized form that are subsequently executed on the hardware device the monitor component further used to receive an information response from the hardware device and forward the information response back to the host application through agent. The architecture also incorporates a proctor component resident in the monitor component which evaluates the information response obtained from the hardware device and identifies anomalous hardware behavior and further issues one or more safety measures when anomalous hardware behavior is detected.

In yet another aspect the invention comprises a tiered communications system for managing communications in a distributed network. The system further comprises a client connected to the distributed network and configured to transmit instructions to a plurality of hardware devices through a single channel. Additionally the system comprises an agent connected to the client through the distributed network and further connected to the plurality of hardware devices such that each hardware device is connected to the agent by a single channel wherein the agent receives the instructions transmitted by the client identifies a destination hardware device for which the instruction is intended and routes the instruction to the destination hardware device through an appropriate channel. The system further comprises a monitor associated with the destination hardware device and further connected to the distributed network which receives the instruction routed by the agent identifies a hardware recognizable command associated with the instruction and thereafter issues the hardware recognizable command to the destination hardware device for subsequent execution.

In still another aspect the invention comprises a method for exchanging information between a client and a plurality of hardware devices wherein the client issues instructions which control and monitor the plurality of hardware devices. The method further comprises the steps of 1 establishing a first communication channel between the client and an agent which is configured to communicate with the client and receive instructions transmitted therefrom 2 establishing a plurality of second communication channels between the agent and each hardware device 3 routing the instructions issued by the client using the agent such that the instructions are forwarded to the appropriate hardware device in a substantially transparent manner and 4 receiving the instructions using a monitor module residing on the hardware device which transforms the instructions into a hardware recognized format to be subsequently executed by the hardware device.

In yet another aspect the invention comprises a method for exchanging information in a proton beam therapy system wherein at least one host application and a plurality of hardware devices are interconnected such that the at least one host application is desirably used to control and monitor the plurality of hardware devices through the transmission of a plurality of instructions. This method further comprises the steps of 1 establishing a first communication channel between each host application and an agent device which is configured to communicate with the host application and receive the transmitted instructions 2 establishing a plurality of second communication channels between the agent device and each hardware device such that each hardware device is connected to the agent by a single communication channel 3 routing the instructions issued by the host applications using the agent device such that the instructions are forwarded to the appropriate hardware device in a substantially transparent manner and 4 receiving the instructions using a monitor module residing on each hardware device which transforms the instructions into a hardware recognized format to be subsequently executed by the hardware device.

In still another aspect the invention comprises a method for communicating and controlling a distributed system of network resources wherein a first communication channel is established between a client device and an agent device a second communication channel is established between the agent device and at least one hardware device and data transferred between the client device and the agent device and furthermore the agent device and the monitor device is processed according to a client process which requests access to the distributed system of hardware resources an agent process which manages the communication channels and provides routing for client process requests and a monitor process which accepts requests from the agent process executes the requests and returns any results to the client process.

During the treatment process the operation of these hardware devices are desirably coordinated to direct a precisely calibrated and aligned proton beam towards a specific target region or isocenter of the patient . In one embodiment the treatment station comprises a proton source connected to an accelerator by an injector . The accelerator accelerates protons to a desired energy level and via a beam transport apparatus delivers the proton beam to the patient who is supported in a fixed position at a treatment station . The beam transport apparatus further comprises a nozzle which directs the particle stream towards a specific target isocenter within the body of the patient . The patient is supported by a gantry which is rotatable about an axis of rotation and is used to properly align the proton beam. Additional details of the proton beam therapy system can be found in commonly assigned U.S. Pat. No. 5 866 912 and U.S. Pat. No. 4 870 287 which are hereby incorporated by reference.

In aspect the proton beam therapy system comprises a plurality of treatment stations . Each treatment station may be configured to share at least some of the same components such as the aforementioned proton source accelerator and injector . In one aspect components which are shared between treatment stations are monitored and controlled through a common control interface. Additional details of a proton beam therapy system which incorporates multiple treatment stations is described in U.S. Pat. No. 5 585 642 and U.S. Pat. No. 4 870 287 which are hereby incorporated by reference.

As is understood in the art of radiation therapy it is important to deliver the proton beam or radiation stream accurately to the target isocenter. Further proton beam or radiation stream therapy may be enhanced when the beam can be delivered from a variety of different angles. Hence it is generally desirable to place the patient in a fixed position relative to the nozzle of the beam delivery apparatus and to move the nozzle of the beam delivery apparatus to various positions via the movable gantry such that the beam is delivered from a variety of different angles. U.S. Pat. No. 4 905 267 and U.S. Pat. No. 5 117 829 each disclose a system for aligning a patient for radiation treatment and each of these references are hereby incorporated by reference. Furthermore U.S. Pat. No. 4 917 344 and U.S. Pat No. 5 039 057 each disclose a gantry system which allows for delivery of the beam over a continuous range of different angles and each of these patents are also hereby incorporated herein by reference. Various other methods of selecting treatment for patients apparatuses for enhancing the delivery of particle or radiation beams to patients and the like are disclosed in U.S. Pat. Nos. 5 017 789 5 240 218 5 825 845 4 905 267 5 117 829 and 5 260 581 which are also hereby incorporated herein by reference.

The functional components monitor and coordinate the activities of the hardware subsystems used to configure and direct the proton beam as well as insure patient safety. Patient safety is a primary concern in radiation treatment and strict control over the proton beam therapy system must be maintained at all times to insure that the beam is always directed with an appropriate intensity or energy level. In one embodiment the beam therapy system is configured in such a manner so as to prevent the beam from contacting the patient unless the hardware devices and subsystems can be confirmed to be in a ready condition and appropriately configured. The ready condition indicates that the hardware devices and subsystems are performing within tolerances and at the specific range determined to be suitable for patient treatment. Typically the proton beam is disabled until all subsystems can be confirmed to be in this ready condition. As will be described in greater detail herein below the configuration of the functional components and tiered communications system provides necessary coordination functionality to monitor the state of readiness of the proton beam therapy device to determine when it is appropriate to administer patient treatment.

In one aspect the host applications exchange information with the functional components and provide the primary command and monitoring functionality for the radiation therapy system. Host application communication with the functional components proceeds through a plurality of data channels typically formed using conventional networking topologies. The host applications and the functional components are linked by the tiered communication network which utilizes a reduced number of data channels compared to conventional systems to perform the data communications necessary to operate the proton beam therapy system .

The host applications may comprise both local host applications and remote host applications . Local host applications comprise applications run on computers or components directly associated with the proton beam therapy system . For example the local host applications may be run directly from computers associated with one or more of the hardware devices of the radiation therapy system . Alternatively the local host applications may be run from one or more standalone computers linked via networking connections to the hardware devices or subsystems of the radiation therapy system . Data exchange between the local host applications and the one or more functional components from which it receives and sends information proceeds through the aforementioned tiered communication network.

Remote host applications comprise applications that are run externally and or independently from the proton beam therapy system . In one aspect remote host applications are configured to interface with the proton beam therapy system through the use of a remote networking protocol and need not be locally executed from the computers or components directly associated with the radiation therapy system . Like local host applications remote host applications utilize the tiered communication network to exchange data and information with the functional components as needed or desired.

The functional components comprise numerous subsystems associated with the operation of the proton beam therapy system . In one aspect these subsystems form a distributed network of computers and hardware devices which exchange data and information between one another and the host applications . As shown in exemplary functional components are shown for the purposes of illustration. These functional components include beam a transport system a safety system a power system and a logging system .

It will be appreciated that radiation therapy systems are complex collections of interconnected devices and components which may include the aforementioned exemplary functional components as well as numerous other components systems and processes. Together these devices and subsystems form the distributed environment for which the tiered communication system of the present invention may be implemented to reduce channel complexity and improve patient safety.

In one aspect the distributed environment of the radiation therapy system includes a plurality of treatment stations and associated hardware and software components useful for accommodating more than one patient at a time. The present invention is particularly suitable for adaptation to managing communications in a multi station treatment facility where the complexity of the distributed environment is substantially increased over that of a single station treatment facility.

Although the tiered communications system is disclosed in the context of command control and monitoring of a proton beam therapy system it will be appreciated that the invention may be adapted for use with other types of distributed systems to improve communications efficiency and reduce channel number. These alternative distributed system architectures are therefore understood to represent but other embodiments of the present invention as adapted for use with the system and methods described herein.

The connectivity between the host applications and the agent device as well as the agent device and the hardware devices comprises a networking connection which uses a suitable protocol such as Berkley sockets based Transmission Control Protocol Internet Protocol TCP IP or User Datagram Protocol Internet Protocol UDP IP . The widespread interoperability of the sockets based protocol may be advantageously used in the tiered communications system to provide a commonly recognized communications protocol which each hardware device is capable of using to transmit and receive information. Additionally the sockets based protocol possesses a number of advantageous properties including 1 a generally well understood specification that developers may use for creating hardware interfaces 2 reliable transmission and reception characteristics 3 multithread compatibility 4 support for multiple concurrent connections and 5 support for blocking and non blocking configurations. As will be described in greater detail herein below these properties are useful in simplifying the tasks associated with development of the tiered communications architecture and may be configured for use with most hosts applications and hardware devices alike.

It will be appreciated by those of skill in the art that the tiered communications architecture is not necessarily limited for use with the aforementioned sockets based protocol but rather may be adapted for use with numerous other communications protocols including for example remote message passing protocols. The implementation of other protocols with the tiered communications architecture is therefore understood to be representative of other embodiments of the present invention.

As previously discussed in connection with conventional distributed systems must maintain a plurality of channels between each host application and the corresponding hardware devices . Thus the total number of channels required by conventional distributed systems grows rapidly which reduces performance and may exceed the design threshold of the architecture. The tiered communication architecture overcomes this limitation and significantly reduces the total number of channels required for communication and data exchange in a distributed system such as the proton beam therapy device . For example in the exemplified conventional distributed system three host applications are configured to communicate with four hardware devices requiring a total of twelve channels . In comparison as shown in using the tiered communications architecture to provide connectivity for the same number of host applications and hardware devices requires only seven channels.

It will be appreciated that the illustrated distributed system is but one embodiment of the present invention and other sizes configurations of distributed systems will likewise benefit from reduced channel number when implementing using the tiered communication architecture . Additionally the tiered communication architecture may advantageously be configured for use with existing distributed systems permitting these systems to be retrofitted with this new communications architecture and benefit from reduced channel number and complexity.

A further benefit of the aforementioned distributed system configuration is that the host applications can be configured to communicate with the hardware devices without knowing the physical location of each device its controlling system or the agent . Logical mapping of this nature permits the flexible placement of components within the distributed system without substantial modification to the system configuration. In one aspect the distributed system configuration of the present invention may be desirably applied to a proton beam therapy device to increase the scalability and flexibility of the system by substantially reducing mapping dependence between the system components. This feature is particularly useful in a proton beam therapy system which includes a multi station treatment facility due to the fact that the system is more readily maintained and upgraded without requiring substantial reconfiguration when existing components are replaced or new components added to the system.

An important feature of the distributed system configuration relates to the computational complexity of adding a new host application to the system. Conventional systems such as that shown in have a computational complexity of O N for each host application to be connected to the hardware devices where N is the number of hardware devices in the distributed system . Additional host applications each require N more channels to be appropriately connected to the hardware devices . Thus for each additional host application the number of channels increase as the function M N where M represents the number of host applications present in the distributed system.

In the present invention the computational complexity and cost of host application addition is substantially reduced over that of the prior art. For example as shown in the computational complexity for the connection of a the first host application or client to the plurality of hardware devices results in a complexity of O N where N is the number of hardware devices associated with the distributed system . Thereafter however the computational complexity for adding subsequent host applications or clients to the tiered communications architecture is O 1 a constant value. Thus for each host application or client added beyond the first a substantially reduced computational complexity is encountered. Integration of additional host applications therefore requires only a total of M more channels where M corresponds to the total number of host applications or clients present in the distributed system to be appropriately connected to the hardware devices . The number of channels in the distributed system of the present invention therefore increase as the function M N . As a result the total number of channels required by the distributed system configuration of the present invention grows at a substantially reduced rate and as the complexity of the system increases i.e. more hosts applications or more hardware devices the computational complexity grows at a slower rate compared to that of conventional distributed systems. This feature of the tiered communications system desirably increases the system scalability and improves management of the distributed system in a manner that will be described in greater detail herein below.

In one aspect the clients comprise control components and user interfaces . The control components interact with the functional component and exchange information with the underlying hardware devices to carry out designated control functions. Each control component may further connect to one or more user interfaces to receive input from users and direct information back to the user interface as needed. In one aspect one or more control components may interface with other control components to provide a means for direct communication between desired control components . Additionally the control components provide a means for collaboration between a plurality of functional components . This collaboration is directed by a one or more specialized controller components referred to as a brain controller . Like other control components brain controllers may desirably utilize the services of the functional components directly or indirectly by connecting to other brain controllers . Additional details of the brain controller configuration and function will be described in greater detail in connection with .

In another aspect the user interface can directly interface with the functional component and bypass communication channels through the control components and brain controllers . This mode of communication may be used for example in logging operations fetching configuration parameters and data stream applications to transmit information directly between hardware devices of the functional component and the user interface .

The aforementioned agent resides in the general purpose tier of the functional component . Each functional component may be associated with an agent that serves as a routing device for messages and information between the client and the underlying hardware devices . In one aspect the information transmitted by the client comprises commands instructions requests or the like which are desirably issued by the client to monitor and control the hardware devices . The agent receives this information from the client and forwards it to one or more monitors which service the communication needs for the underlying hardware devices of the functional component . Additionally the agent may be configured to broadcast the desired information to all monitors in the functional component simultaneously depending upon the nature of the information.

The agent further comprises a dual proxy functionality wherein a monitor proxy functionality is responsible for communications with monitors associated with the functional component and a client proxy functionality is responsible for communications with clients . Additionally the agent manages other network communication functions such as error checking and logging. The agent may further incorporate security features which permit the agent to be configured to recognize allowed clients and monitors that are granted access to use the communications facilities of the tiered communications architecture .

During routine operation of the distributed system using the tiered communications architecture the system is initialized where the monitor proxy of the agent opens a hardware channel with each available monitor . The monitor proxy is a communications proxy that maintains network applications programming interfaces APIs that communicate with each monitor in the functional component and is responsible for queuing messages to and from the monitors .

Similarly the client proxy is a communications proxy that maintains network APIs for communicating with clients by opening client channels with each client . Unlike conventional systems which require a large number of open channels to allow for communications in the distributed system in the present invention there is a one to one correspondence between the number of open communications channels and the number of client and hardware devices .

In one embodiment the agent makes use of pointers to message pointer queues wherein the message pointers are passed and the actual messages or information is stored in a shared heap. A first queue is used for messages incoming to the client proxy a second queue for messages outgoing from the monitor proxy and a third queue is used for messages incoming to the monitor proxy which are also outgoing to the client proxy e.g. clean pass through . Information is transmitted by the agent which initializes a thread that examines messages arriving on the client proxy s incoming queue and places a single message straight route or a plurality of messages broadcast on the monitor proxy s outgoing queue.

The client proxy maintains a lookup table that maps the addresses of the clients to their network address i.e. soft IP address . This table is built as messages are received and the entries added to the table are used for routing replies to the messages back to the client . Additionally the agent may maintain configuration data comprising monitor mapping information which is used by the monitor proxy for routing messages to the corresponding destination monitors . This information may also be used by the agent to determine which monitors and associated hardware devices are in a particular functional area . As a result a single agent may be configured to coordinate network communications for a plurality of functional components and corresponding hardware devices . In one embodiment the tiered communication architecture is desirably configured to utilize a single agent which coordinates network traffic and messaging for the entire distributed system. The use of the single agent configuration facilitates scaling operations associated with adding new functional components and hardware devices and insures consistency throughout the distributed system.

The agent may further implement various security operations which prevent unauthorized access to the distributed system or selectively block clients which are not recognized for purposes of information transmission at a particular time. One method by which the agent may perform these security operations is to restrict open client channels to only those for clients currently recognized or allowed. It will be appreciated that these security measures may be desirably implemented in the proton beam therapy system to improve patient safety and system security.

The second logical tier comprising the embedded tier provides a network interface or hook that is responsible for translation and communication with the underlying hardware devices . The embedded tier for each functional component is desirably substantially user transparent such that hardware devices of a particular functional component may be accessed and monitored by clients without specific knowledge of their location or address within the distributed system.

The monitors reside at the embedded tier for each functional component and are responsible for exchanging data and information with the agent of the general purpose tier . As will be described in greater detail herein below the monitor comprises a plurality of cooperative modules that are responsible for performing functions including information reception command interpretation and translation data acquisition data presentation and information transmission.

The driver resides at the lowest logical level of the monitor and provides hardware interfacing between the functional component and the hardware device with which it interacts. The hardware device may include any of a number of different instruments devices apparatuses or the like which are desirably controlled and monitored by the client . Exemplary hardware devices of the proton beam therapy system may include magnets and dosimeters. The driver is responsible for providing an interface to the hardware device so that the desired services of the hardware device can be accessed by the client . For each hardware device to be controlled there is at least one driver which interfaces with a portion of the hardware device i.e. a controller card or the like .

In general each hardware device recognizes a limited and highly dedicated command set which may include specialized bit memory addressing or register level commands. These command language definitions and addressing schemes are not typically shared between hardware devices of different classes e.g. temperature monitors and dosimetry monitors . Additionally similar hardware devices from different manufacturers may utilize different command structures. Furthermore the data output and format will typically vary from one hardware device to the next and the data output may be in a format or unit designation which is to be desirably altered for presentation to the client or other functional components . Therefore in order to communicate with each hardware device a specialized interpreter must be employed.

The driver acts as the specialized interpreter and provides abstraction functions which transform higher level information requests or commands into a native language or code recognized by the hardware device . The tiered communication architecture desirably utilizes a generic command and information structure when possible to overcome the command language limitations of the hardware devices . The generic language codes information in a commonly recognized form across the various components of the tiered communication architecture . Information and commands directed towards specific hardware devices are received by the driver which performs the necessary operations to translate the generic code into a hardware recognizable code. Likewise the driver receives information from the hardware device and translates this information into a generic form which is recognized by other components of the distributed system. The driver may also perform conversion operations such as unit conversions and format transformation to modify the data prior to distribution to the higher level components of the monitor .

In one aspect performing the aforementioned data translation operations at the level of the driver desirably improves system scalability and development flexibility. For example should an existing hardware device be replaced or upgraded to a different hardware device minimal modification to the upper level components of the tiered communication architecture is required. Instead the driver may be readily modified to accommodate changes in the syntax or command structure which are used to transform the generic language codes into commands or information that are recognized by the newly installed hardware device. Similarly the driver may be modified to recognize changes in the format or presentation of data made by the new hardware device without requiring substantive modification of other components of the distributed system. Thus by configuring the tiered communications architecture in this manner improves hardware device transparency and limits the number of changes required to accommodate upgrades and maintenance of the system.

In one aspect the driver provides a wrapper Application Programming Interface API to be used to access the underlying hardware device . Additionally the driver can be implemented as a collection of thread safe functions which execute as requested by upper level modules of the monitor . The driver typically interfaces with the associated hardware device using memory mapped access to the hardware s registers. Driver interfacing in this manner may utilize a processor contained in the hardware device or a peripheral control card used to control the hardware device . This configuration may be referred to as an embedded crate where the crate comprises the hardware device the driver a processor upon which the driver executes and a controller card used by the driver to control the hardware device .

In one embodiment driver development and implementation in the embedded crate utilizes an embedded computer operating system and development platform. Using the embedded development platform the driver may be designed to virtualize hardware registers and provides protection and other services required by the hardware device . In one aspect the driver may be configured to present a series of function calls that maintain the logical mapping between the functions and registers within the hardware device and the functions the software developer uses. The functional component may also be configured to make use of the driver to issue function calls to perform actions as needed or requested.

While the driver is focused on hardware device interaction and may provide the interface to the raw services of a particular hardware device the hardware abstraction layer HAL provides necessary hardware abstraction using the drivers and forms a bridge between the presentation of information by the clients and that of the hardware device . The HAL further serves as a translator between the services provided by the distributed system and the hardware device that performs the job. This feature of the HAL significantly reduces problems and difficulties associated with trying to keep each part of the distributed system aware of the current implementation and command structure of each hardware device contained in the functional component .

For example the HAL may receive commands and instructions in engineering units e.g. Amps Volts mTorr etc from the clients and translate them into the appropriate driver representations and API calls that are recognized by the underlying hardware devices as acceptable input. Similarly the HAL may receive raw data output and information from the hardware device and perform one or more operations which transform the raw data into a form recognized or desired by the clients .

One desirable feature provided by the HAL is the ability to isolate each hardware device used in the distributed system from the command control functions of the clients . More specifically the HAL is designed to reflect those services required by the clients in a hardware transparent manner and present them to the driver for processing. When hardware devices are changed in the distributed system or if new or different services are requested by the client the HAL desirably requires only minimal modification to accommodate the changes. Furthermore other components residing above the HAL such as the agent and the clients desirably require little or no modification when changes or additions to the distributed system are made. Instead the HAL may be updated as needed to accommodate changes in the design of the system by re working that portion of the code that interfaces the HAL with the driver and the underlying hardware device .

The HAL may also provide mechanisms for consolidating a drivers and associated hardware devices into a single meta device. The meta device appears logically to the clients as single unit of hardware. Hardware consolidation in this manner desirably reduces the apparent complexity of the system and facilitates monitoring and command of the hardware components of the distributed system. For example in the proton beam therapy system a beam scatterer meta device may be defined as comprising hardware devices including one or more resolvers a motor controller digital input and serial port communications. A single meta command or instruction issued to the beam scatterer meta device may thus be used to represent a composite of a plurality of commands and or instructions that are desirably issued to the various hardware devices of the beam scatterer. The meta command is recognized by the HAL and the corresponding commands and or instructions are issued by the HAL through the drivers to the appropriate hardware devices . Similarly the HAL may receive data and information from a plurality of hardware devices contained within the meta device and perform one or more operations which combine this information and send it back to the client in a consolidated form.

An additional feature of the HAL is that it may be used to internally maintain the mapping of each hardware device within the functional component such that the clients are not required to have knowledge of the specific address or path to the device . Instead the clients may simply direct a command to the monitor which may be subsequently processed and routed to the appropriate hardware device s as determined by the HAL . It will be appreciated that this feature significantly reduces the mapping complexity in complex distributed systems and provides for improved device transparency. Device transparency is a desirably characteristic as it reduces the apparent complexity of the distributed system and is an aid to developers who are freed from having to discern the actual layout or topology of the hardware devices . Additionally the HAL may be readily redefined to permit modification of the underlying hardware devices or alterations in the composition of devices in the functional component without necessitating substantial reworking of the clients .

The monitor further comprises one or more proctors which monitor the performance of the associated hardware devices and acts as handlers for anomalous or undesirable device behavior within the functional components . The proctor evaluates the requirements and or needs of the hardware devices of the functional component . Functions performed by the proctor may include monitoring for correct system settings and identifying out of range parameters.

In one aspect the proctor identifies anomalous device behavior by interpreting data and information received from the hardware device . The proctor maintains knowledge of desired tolerances and ranges for hardware devices within the functional component and determines if the hardware devices are performing within desired parameters by comparing actual hardware information with the designated tolerances and ranges. In one aspect anomalous device behavior in the proton beam therapy system may be identified by evaluating one or more critical variables such as ring energy power supply output magnetic field strength and or delivered dose. When the value of a critical variable is observed to be outside of the maximum limits or tolerances the proctor may recognize and report this event. In another aspect the anomalous behavior may be identified when the critical variable deviates by more than a given limit from a normal value e.g. a power spike . Additionally the anomalous behavior may be observed as an adverse trend where the moving average of the deviation is projected by the proctor to be likely out tolerance in a certain time interval.

The proctor may handle anomalous behavior by halting the operation of one or more hardware devices through the issuance of a halt command or instruction. Alternatively the proctor may permit the hardware device to continue to operate but issue a warning to the client of the anomalous condition. Additionally the proctor may possess functionality for logging and reporting anomalous behavior to the client in a configurable manner such as by transmission of a status indicator .

The proctor further mitigates the drawback of monitoring off line or malfunctioning systems at the host application level often performed by conventional systems. In one aspect the proctor features a localized form of hardware device monitoring which may be performed constantly without substantial interaction with the client. In this embodiment the proctor recognizes a set of conditions or parameters for which the hardware device should desirably operate within. The proctor further monitors the hardware device function and insures that it is operating within these parameters. Should the hardware device deviate from the recognized conditions the proctor may instruct the monitor to issue appropriate hardware recognized commands which restore normal operational parameters.

For example a power supply for the proton beam therapy device may be monitored by the proctor to insure that the output power is consistent with the requested or desired power. Furthermore the proctor may insure that there are no internal faults within the power supply system. If the proctor for the power supply detects a fault or observes the power supply is not operating within normal parameters the proctor may generate a report which is transmitted to an outside system thereby giving advance warning of the failure even without a control application or client running. Furthermore the proctor may take corrective action to restore the power supply to normal operation by instructing the monitor to issue hardware recognized commands which perform a corrective or restorative function.

In one aspect the use of the proctor significantly improves patient safety in the particle beam therapy device. By continuously monitoring important hardware devices in an automated manner the proctor can identify dangerous anomalous conditions that are presently occurring and may predict future anomalous conditions that may present a danger to the patient. For example should the proctor observe that the beam intensity is out of tolerance the system can be halted preventing potential injury to the patient. Likewise the proctor may observe that although the beam intensity is currently within acceptable tolerances an adverse trend may have formed that is used to predict when the beam intensity will be out of tolerance and therefore determine a corrective action should be taken. It will be appreciated that the complexity of the proton beam therapy system is conducive to the automated hardware monitoring and control approach implemented using the proctor .

The command processor logically resides directly above the proctor and the HAL both of which are independently connected to this component. The function of the command processor is to interpret and execute incoming instructions received from clients . Additionally the command process provides reply messages in the form of requested data and information received from the hardware device .

The command processor performs instruction interpretation by parsing and checking the syntax of incoming instructions or messages and upon verification forwards the instruction to be executed on the appropriate hardware device . The forwarded instruction is received by the HAL and as previously mentioned the HAL performs operations associated with instruction preparation and presentation to the driver for execution on the hardware device . Additionally the command processor forwards the instruction to the proctor which performs operations associated with hardware device monitoring and error detection. Another function of the command processor is to receive data and information from the hardware devices presented by the HAL and proctors and forward this information to the appropriate client s .

In one aspect the command processor comprises an information queue that maintains the order of incoming instructions from the clients which are processed in a first in first out manner. Rather than copying the instructions directly to the queue the command processor may store pointers to the instructions in order to avoid unnecessary copying of information which may adversely affect system performance when the size of the messages is large. As instructions are processed the queue is updated accordingly and requested information sent back to the client .

The communications proxy logically resides above the command processor and receives incoming data and information from one of more channels associated with the agent and forwards this information directly to the command processor . The communications proxy typically does not posses any specialized command or instruction interpreters unlike other components of the monitor but rather is used for information reception and dissemination. Additionally the communication proxy accepts outgoing messages comprising requested information from the command processor and forwards the outgoing message to the appropriate client s through the agent .

In one aspect the communications proxy associates instructions received from the clients with the corresponding data or responses sent by the hardware device by maintaining a plurality of network API objects each of which reflect an open channel or socket connection to the monitor from the agent . The network API objects are used by the communications proxy to identify the source of the incoming command or instruction so that the results of the instruction can be forwarded to the appropriate client s when the results have be received from the command processor .

Proceeding to state the communications proxy forwards the instruction to the command processor for verification. Verification comprises checking the syntax of the instruction to insure that it conforms to a recognized format and possesses the requisite parameters and values which will be distributed to the HAL and proctor . Following command verification the process proceeds to a state where the communications proxy performs an authorization check. The authorization check is a validation procedure which confirms that the client requesting access to a particular hardware device or issuing hardware commands actually has permission to do so. In one aspect the authorization state may be used to implement a level of security in the distributed system by restricting client access to functional components or hardware devices . Client access is permitted only when the client is recognized as having sufficient permissions designated by a list stored within the monitor . Additionally the authorization state can be used in blocking procedures to insure that client devices do not access a particular hardware device or resource when that resource is already in use by another client or blocked for other reasons.

Following command verification and authorization the process proceeds to a command lookup state where the command processor determines the correct hardware API and associated hardware device to invoke based upon the input command or instruction. The command processor then sends this information to the appropriate HAL associated with the desired hardware device where the instruction is transformed into a suitable form recognized by the hardware device and executed in state .

Results of the hardware invocation are returned in state through the various components of the monitor where they are processed and packaged as described in detail in connection with . Thereafter the communications proxy transmits the results of the command or instruction to the appropriate client s thorough the agent .

In state the agent begins normal information processing and communications with the client and monitors . When an instruction or information request is received by the agent from a connected client the agent records the source or channel of the request thereby identifying the client from which the instruction originated. Thereafter in state the agent determines the appropriate monitors which will be sent the instruction. In one aspect monitors which are designated to receive the instruction are identified using the incoming channel number from which the command originated. Additionally the source address of the requesting client may be encoded in the data transmission between the client and the agent . The source address is resolved by the client to determine the appropriate agent which should receive the results of the instruction. Thereafter the agent forwards the instruction to the appropriate monitor where the instruction is processed as described in .

When the agent receives a reply containing the results of the instruction from the monitor in state the agent forwards the reply to the appropriate client s as determined by the listening port and central configuration file. Thus the agent acts as a intermediary between each client and the hardware associated monitors .

The brain controller may be further subdivided into a hind brain and fore brain . The hind brain typically performs operations that do not require extensive decision making or analytical comparisons. For example the hind brain may be used to connect to a plurality of systems or functional components and perform operations such as monitoring and or operation functions. In one aspect the hind brain functions autonomously without direct user input from the user interface and interacts directly with one or more functional components through the networking connections or channels . The hind brain may be configured to display the status or results of its activities to the user through the user interface however this function is not necessarily required for hind brain operation. The hind brain may additionally function as an agent for the meta device which is in turn networked to other agents to provide a means for associating many systems or functional components together.

For example the proton beam therapy system may implement a beam obstruction meta device which desirably monitors a plurality of separate functional components spread throughout the distributed system each with their own agent . The beam obstruction meta device may further require knowledge of the treatment mode the particle beam therapy device is currently in. Additionally the beam obstruction meta device may require knowledge of the treatment station which is to receive the proton beam. Using the information obtained from each of these sources the hind brain decides when it is safe to allow the proton beam to be engaged. Because this process involves the coordination of a plurality of functional components spread across the distributed system a single HAL is typically not suitable to perform operations of this complexity and thus the meta device may be desirably used to accomplish similar functions.

The fore brain provides increased analytical functionality compared to the hind brain and is responsible for implementing complex active control operations. In one aspect the fore brain creates operational state machines that ensure the correct steps are taken to perform a particular operation. For example the fore brain may be responsible for controlling and monitoring the steps necessary to administer a patient treatment. The fore brain accomplishes this task by communicating with a plurality of agents and hind brains sending commands and receiving responses which are used to coordinate the activities of the underlying hardware devices . The fore brain therefore directs the activities of the various subsystems to perform distributed system tasks in a coordinated manner. Additionally each fore brain is typically connected to a user interface which is used to interact with the fore brain directing various system actions and receiving responses or status updates as needed or required.

Although the foregoing description of the invention has shown described and pointed out novel features of the invention it will be understood that various omissions substitutions and changes in the form of the detail of the apparatus as illustrated as well as the uses thereof may be made by those skilled in the art without departing from the spirit of the present invention.

