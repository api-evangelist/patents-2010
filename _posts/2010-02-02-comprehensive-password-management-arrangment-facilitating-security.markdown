---

title: Comprehensive password management arrangment facilitating security
abstract: Computer-implemented process and apparatus for screening data for malware. Received data stored in at least one data store includes at least: (i) a first protected item of data containing contents that are generally inaccessible without specific access credential information, and (ii) specific access credential information corresponding to the first protected item of data. The received data is analyzed to detect any protected items of data therein based on predetermined protected data item identification criteria and to detect any access credential information contained therein based on predetermined access credential identification criteria. In response to a detection of the specific access credential information in the at least one data store, the specific access credential information is stored in the at least one data store in a grouping arrangement with other access credential information. In response to a detection of the first protected item of data, use the specific access credential information is stored in the grouping arrangement to facilitate access to the first protected item of data by a malware screening process to extract its content. The malware screening process is executed to scan the content extracted from the first protected data item to detect a presence of malware.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09003531&OS=09003531&RS=09003531
owner: Kaspersky Lab ZAO
number: 09003531
owner_city: Moscow
owner_country: RU
publication_date: 20100202
---
This application claims priority to Russian Federation patent application No. 2009136232 filed Oct. 1 2009 and entitled System for Management of Passwords for Encrypted Files and Archives. 

The invention relates generally to computing and information processing. More specifically this invention relates to systems and methods for the accelerated detection of malware in compressed data structures utilizing advanced local and remote access management.

Destructive computer programs much as viruses spyware malware and others have become a mainstay in the computing world. What began in the 1970 s with the creation of somewhat primitive programs that harmed specific machines has evolved into highly complex programs capable of spreading and proliferating over networks of attached computers. Along with the evolution of malware and harmful programs the programs used to protect systems against these harmful programs have developed as well. Programs that began by utilizing simple filename comparisons or file size comparisons have evolved to utilize additional technologies to increase performance and coverage such as similarity determinations or utilizing hashing or other encryption.

Several companies including Kaspersky Symantec McAfee Panda Eset and others offer programs aimed at providing solutions to provide protection against the harmful programs. These programs utilize various methods of protection many of which focus on the comparison of received files with signatures stored in a local or centralized database. For example an email attachment received by a user will be investigated and the attachment name size and extension will be captured and compared against a local database of known harmful files. If a match is found in the known database the user will be notified that the file is harmful and given options to terminate or continue in the user action. Additionally select programs are able to examine data stored within unprotected archives that have been compressed.

However existing programs are inefficient in processing attachments. Current attachment analysis programs utilize a specific set of metadata such as size name extension and in some cases date for comparisons. Various file compression programs exist and are able to compress data into transportable archives. Programs marketed using trademarks such as Gzip Zip 7zip WinRar and others provide user interfaces and command line options of implementing the compression. This compression reduces file sizes and thus reduces the bandwidth required to transfer information. In addition the archive formats effectively hide or obfuscate the contents of the archive so that the contents are not directly discernible without first decompressing the archive. Many of these compression programs allow the archive creator to apply various access credential technologies to the archives. For example an information supplier may create a compressed archive of a computer executable program and apply a password to the generated archive file so as to prevent unauthorized access. Typically a protected archive will have its contents encrypted so that a key would be needed to gain access to those contents. While these features are certainly useful for protecting data from being accessible to persons other than the intended recipient they can also be exploited as tools to defeat security measures. For instance a malicious program can be encrypted and transmitted to a target computer. In this form the malicious program is virtually undetectable until decompression and is encoded based on the encryption key. Accordingly the same malicious program can be copied a multiplicity of times with each copy being encoded with a different key thereby appearing different from all of the other copies.

Current anti virus and other protection technology cannot examine the contents of protected archives and thus a protected archive containing malware or malicious code may pass the initial scan. The user may obtain the access credentials for the protected archive in a later transmission or other communication and attempt to access the information in protected archive and unwittingly execute malware or malicious code on their machine. While certain efforts have been made to reduce this occurrence such as examining email addresses and attachment sizes the malware and malicious code creators have altered their practices to steer clear of these protections. For instance the protected archive and access credential information may come from distinct email addresses but maintain visual congruency in order to trick the user into opening the protected archive.

While some of the current security programs are able to extract data from unprotected compressed archives and compare the archive content to the local or remote malware databases none of the programs available today are able to extract data from protected archives within any practical amount of time as part of a malware scan or intrusion detection screen. Currently when confronted with an archive requiring access credentials security software will attempt to compare the name size and extension of the archive as a whole to the files stored in the local or remote virus database. Since a known malware program can be so readily obfuscated into a multiplicity of forms virus databases simply cannot keep up with the rate at which the copies of malware can be made and distributed.

As a practical matter distributors of malware in compressed archives need to provide the access credentials along with the compressed archive itself so that the compressed archive can be decrypted to be executed. Malware distributors will want to make the access credentials easily available to human users but difficult to identify for security programs. For example the access credential information for accessing the malicious program may be supplied in a separate transmission or in a separate format making it extremely difficult to automatically match up the credentials to the compressed archive.

Moreover challenge response gate technology aimed at ensuring that an actual human is interacting with a service or feature such as Captcha can be used to confound security programs. This technology has been conventionally applied to inhibit bots or automated computing devices tasked with the proliferation of malware spam or other harmful payloads. However the same technology can be readily used to proliferate attacks by inhibiting the protection software.

Accordingly a practical solution is needed to address these and other challenges of efficient and effective containment of malware.

Aspects of the invention are directed to improving the functionality of security applications to provide a practical approach for scanning protected data such as encrypted archives. In some embodiments data is scanned for indicia of access credential information such as passwords keys personal identification numbers PINs and the like. Provisions exist for examining access credentials in the form of text or disguised as a challenge response such as in an image. When found the access credentials are collected and maintained in a grouping such as a list file or database or simply indexed. The collection is then used to access the protected data regardless of whether the protected data was received separately from the associated credentials. Advantageously in some embodiments the building of the collection can be utilized to provide other functionality such as assisting the user with the management of access credential information in general. Related embodiments are directed to a comprehensive access credential management solution.

According to one type of embodiment a computer implemented process and apparatus are provided for screening data for malware. Received data stored in at least one data store includes at least i a first protected item of data containing contents that are generally inaccessible without specific access credential information and ii specific access credential information corresponding to the first protected item of data. The received data is analyzed to detect any protected items of data therein based on predetermined protected data item identification criteria and to detect any access credential information contained therein based on predetermined access credential identification criteria. In response to a detection of the specific access credential information in the at least one data store the specific access credential information is stored in the at least one data store in a grouping arrangement with other access credential information. In response to a detection of the first protected item of data use the specific access credential information is stored in the grouping arrangement to facilitate access to the first protected item of data by a malware screening process to extract its content. The malware screening process is executed to scan the content extracted from the first protected data item to detect a presence of malware.

In a related type of embodiment the computer system is further configured to prevent direct user access to the contents of the first protected item of data until successful completion of the malware screening process. In another related type of embodiment the access credential information stored in the grouping arrangement is grouped with user generated access credential information for a variety of different programs or services in a secure arrangement of at least one data structure.

While the invention is amenable to various modifications and alternative forms specifics thereof have been shown by way of example in the drawings and will be described in detail. It should be understood however that the intention is not to limit the invention to the particular embodiments described. On the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims.

Referring to various computer based embodiments of systems for access credential information management are described. illustrates a relatively high level architecture of a computer system programmed to manage access credential information according to one embodiment. The computer system includes an input data store an access credential data store an operating memory data store an instruction set data store an analysis result data store and a processor . Each of the data storage facilities can be allocated in one or a combination of RAM magnetic or optical disk flash or any suitable medium for storing data. The system includes processor that is programmed to read input data store from which it obtains a target software item or items and access credential data store from which known access credential information is received. The processor reads instructions from an instruction set data store . The instruction set data store may contain the access credential analysis instruction protected archive instructions and malware detection instructions . At different operating steps the processor reads operating instructions from instruction set data store and processes data according to those instructions. The output from processor execution of instructions is written to the analysis result data store . Further during the execution of the instructions read form the instruction set data store the processor may read and write data to the operating memory data store . In this way the operating memory data store is used to hold data that is manipulated and transformed during processing. Further the operating memory data store may contain the analysis result data before writing to the analysis result data store .

In one type of embodiment the computer system is implemented in a single computer system. In another type of embodiment however the system may be implemented utilizing a system of more than one distinct computer communicatively coupled with one another. Accordingly in various embodiments the input data store access credential data store instruction set data store operating memory data store and analysis result data store utilize the same underlying hardware.

The removable and non removable memory interfaces may couple the computer to disk drives such as a solid state drives SSD or rotational disk drives. These disk drives may provide further storage for various software applications such as the operating system application programs and other program modules . Further the disk drives may store other information such as program or application data . In various embodiments the disk drives store information that doesn t require the same low latencies as in other storage mediums. Further the operating system application program data program modules and program or application data may be the same information as that stored in the RAM in various embodiments mentioned above or it may be different data potentially derivative of the RAM stored data.

Further the removable non volatile memory interface may couple the computer to magnetic portable disk drives that utilize magnetic media such as the floppy disk Iomega Zip or Jazz or optical disk drives that utilize optical media for storage of computer readable media such as Blu Ray DVD R RW CD R RW and other similar formats. Still other embodiments utilize SSD or rotational disks housed in portable enclosures to increase the capacity of removable memory.

The computer may utilize the network interface to communicate with one or more remote computers over a local area network LAN or a wide area network WAN . The network interface may utilize a Network Interface Card NIC or other interface such as a modem to enable communication. The modem may enable communication over telephone lines coaxial fiber optic or powerline. The remote computer may contain a similar hardware and software configuration or may have a memory that contains remote application programs that may provide additional computer readable instructions to the computer . In various embodiments the remote computer memory can be utilized to store information such as identified file information that may be later downloaded to local system memory . Further in various embodiments the remote computer may be an application server an administrative server client computers or a network appliance.

A user may enter information to the computer using input devices connected to the user input interface such as a mouse and keyboard . Additionally the input device may be a trackpad fingerprint scanner joystick barcode scanner media scanner or the like. The video interface may provide visual information to a display such as a monitor . The video interface may be an embedded interface or it may be a discrete interface. Further the computer may utilize a plurality of video interfaces network interfaces and removable and non removable interfaces in order to increase the flexibility in operation of the computer . Further various embodiments utilize several monitors and several video interfaces to vary the performance and capabilities of the computer . Other computer interfaces may be included in computer such as the output peripheral interface . This interface may be coupled to a printer or speakers or other peripherals to provide additional functionality to the computer .

Various alternative configurations and implementations of the computer are within the spirit of the invention. These variations may include without limitation additional interfaces coupled to the system bus such as universal serial bus USB printer port game port PCI PCI X PCI Express or integrations of the various components described above into chipset components such as the northbridge or southbridge. For example in various embodiments the processing unit may include an embedded memory controller not shown to enable more efficient transfer of data from the system memory than the system bus may provide.

The computer network is utilized to provide interconnectivity between the application server administrative server and client computers and . In this way the system utilizes the computer network as a platform to connect otherwise disconnected computers and computer networks and allows network capable devices to send and receive information and connect to programs and services made available.

The application server may include a database component and an application web server component. In this embodiment client computers and may connect to application server to obtain access credential and malicious code information. Further the application servers may utilize database software such as those marketed under the tradenames MySQL Microsoft SQLServer Oracle PostgreSQL Ingres hash files or a combination thereof to store access credential information and malware information. In other embodiments the application server is connected via a distributed network utilizing various architectures such as Client Server N Tier peer to peer P2P cloud or cluster. Further application server may be a standard desktop computer or may utilize high end server hardware. A person having skill in the art will appreciate that the application server will utilize hardware that is most appropriate for its load and performance requirements whether that be a the mini ITX form factor Extended ATX Advanced Technology eXtended blade or other configuration. Further the servers may utilize Intel or AMD or other processors Double Data Rate DDR memory Error Correcting memory ECC rotational or Solid State Disk SSD arrays and other hardware to ensure optimum performance and reliability in operation and storing of data. Further the application server may utilize enterprise class software such as Linux Unix or Windows Server operating systems. Additional application server may be utilized in load balancing or cluster configurations in order to handle increased load and to maintain system performance as the number of requests to the application server increase. In other embodiments the application server instructions are stored in the memory of client computers and .

The administrative server may be a server located at an external service provider or computer software provider. The administrative server may validate client computer s and license or other access credential information when attempts are made to retrieve access credential information relating to for example various local or network enabled services received protected archive files or access credential strength indicators. Further the administrative server may be configured to utilize hardware and software similar to the application server above. In one embodiment the administrative server and the application server may utilize the same hardware to which the client computers and connect. In this way the administrative server may operate to identify computers authorized to utilize the various embodiments disclosed herein.

Client computers and may be personal desktop computers personal laptops netbooks servers ultra mobile personal computers UMPCs smartphones such as the iPhone from Apple or Pre from Palm or other devices. In various embodiments the client computers may utilize Double Data Rate DDR memory Error Correcting memory ECC rotational or Solid State Disks SSD to store the information relating to identified files. Client computers may utilize software such as Linux Unix or Windows or Apple operating systems. Further as disclosed above the client computers and may utilize database software such as Microsoft Access MySQL lite SQL Server Express IBM DBS Express hash files or a combination thereof to store information relating to access credential information and malware in a structure allowing for fast retrieval.

Now referring to another embodiment of a system for access credential information management is presented. This embodiment includes computer network application server administrative server client computers and and network appliance . In this embodiment client computers and operate on a Local Area Network LAN . Further the LAN may utilize a firewall router server or other network appliance to filter access to network resources. In this embodiment the application server may be embedded into the firewall router server or other network appliance . Thus the client computers and may request access credential information or malware information from the local network appliance . In other embodiments communication with the application server may be moderated by the administrative server . This access to access credential information and malware information stored in the application server may first require access credential from the client computer and to pass through the administrative server . In this way unauthorized access to access credential and malware information can be secured.

In various embodiments the client computers and may be configured to run software applications developed in a variety of programming languages including JAVA .NET C C C Perl Ruby Grails Python and others. Thus the methods for access credential management and malware detection may be implemented at least partially in one of the said variety of programming languages and executed on client computers. In certain embodiments client computers and utilize a TCP IP link to connect to the application server to obtain access credential management and malware information. In other embodiments the client computers and utilize a web service to obtain information. The web service may utilize TCP IP including hypertext transfer protocol HTTP and implement Simple Object Access Protocol SOAP or may utilize a Representational State Transfer REST ful architecture for queries and response. Further the web service may be secured by utilizing secure web service technologies such as eXtensible Markup Language XML encryption XML signatures Secure Socket Layer SSL Transport Layer Security TLS Hypertext Transfer Protocol Secure HTTPS or HTTP authorization. In this embodiment client computers and format messages containing requested file information and send it to the application server which processes the message and returns the requested information.

Importantly it should be understood that it is immaterial to the spirit of the invention as to where or in what manner the access credential management software items including access credentials protected archive and malware detection software items and associated access credential data input data and analysis result data are stored or maintained. In various embodiments software items may constitute files stored in the computer system s file system or may be sets of data stored as part of one or more files or loaded into RAM a data buffer or any other practical medium whether local to the computer system or located remotely that is accessible to the processor of the computer system performing the access credential analysis protected archive analysis or malware detection.

Now referring to a process of analyzing a protected archive according to one embodiment is depicted. In this embodiment in process block the computer receives an access credential protected archive or other item of data as part of a message file transfer or other delivery payload. The protected archive may be an attachment in an e mail transfer via instant messenger or other means of electronic communication. In other embodiments the access credential protected archive may be transferred via tangible medium such as compact disc CD hard disk or other memory format. In process block the computer processor or system will scan the message payload for access credential information contained within the payload. The protected archive is identified as such based on a variety of criteria according to various embodiments. For example in one such embodiment metadata in the archive is used to identify the type of archive and if it is protected. In another embodiment a protected archive may be identified by default if the data item cannot otherwise be identified as being of a known data type.

The access credential information may be stored in a text file image file or other format viewable by the user and providing the related access credential information. The scan may utilize a variety of criteria for detecting access credential information such as for example keywords such as password key passcode passkey passphrase ID PIN access code protect encrypt decrypt parole ticket countersign secret or similar in identifying access credential information. In a related embodiment a measure of proximity to the set of keywords is to be employed e.g. a proximate determination may be made if the protected archive and the password information is received within a certain time window alternatively or in addition the proximity measure can be based on their proximity in the file system directory.

In the event that the system cannot find access credential information the system can scan the local access credential data store for information relating to the protected archive in process block . The scan may use metadata associated with the protected archive such as file size file name file header information file type or other identifying information in an attempt to retrieve access credential information from the data store. In the event that the local access credential data store does not contain access credential information relating to the protected archive the system can be configured to scan a remote access credential data store depicted in process block . The remote access credential data store may reside in a remote network accessible computer or server system such as an application server or database server. In various embodiments the system will utilize a web service HTTP request email or other networked messaging format to communicate with the remote access credential data store.

The communications may be encrypted locally using an encryption mechanism such as a cryptographic hash function block cipher or public key cryptography before transmission. In certain embodiments the remote access credential data store may decrypt the message and utilize the received information to search for access credential information. In other embodiments the communication channel with the remote access credential data store is secured by utilizing SSL TLS HTTPS or other secure communication protocol. Further the remote access credential data store may have a public or communal portion for the sharing of access credential information and a private portion that may be utilized to provide remote backup and access of access credential information. Once the access credential information is determined the system will access the protected archive and extract the information contained therein in process block . As mentioned above protected archive may be in a compressed format such as that which is typically stored with file extensions .zip .rar .gzip or other compression formats. The extracted information may then be examined for malicious content in process block . In various embodiments the extraction of process block and detection of process block are performed within a protected area of memory or sandbox . Any detected malicious code is thus prevented from proliferation and contained within a defined memory space. In process block information relating to the contents of the protected archive and the determination of maliciousness is communicated to the user. The communication may take the form of a graphic sound byte movie or combination in order to fully represent the result of the process. In various embodiments the process allows the user to communicate the results of the process blocks including extracted data and maliciousness determination to the remote access credential data store. In the case that the user selects transmission to the remote data store additional metadata relating to the received protected archive and detected malicious content is compiled and communicated to the remote data store. The remote data store will then store the information and related metadata for later retrieval. In this way the user may supply the community with information relating to the protected archive containing malicious content. Other users that receive the same protected archive may utilize the information sent to the remote data store to bypass the access credential and detection process blocks. In various embodiments the local and remote access credential data stores may be MySQL PostgreSQL Oracle MSSQL or other relational databases having tables for storing and associating the access credential information with the protected archive. Thus the system described in maybe used to provide a more efficient and robust system of protection from malicious code stored in protected archives.

Now referring to another embodiment of a process of analyzing a protected archive is presented. In process block a protected archive is received on a user s computer and scanned for access credential information. If an image is detected optical character recognition will be performed in an effort to determine the access credential information stored therein. As mentioned above the image may be a type that is typically stored with a file extension of .jpg .png .tiff .gif or other image format. The optical character recognition performed in step may utilize various algorithms known in the art that operate to decipher the characters utilized in an image enabling their capture for use in additional processes. If no images are detected the payload will be analyzed for presence of a textual description. If a textual description exists then it is scanned parsed or otherwise analyzed in an effort to obtain access credential information in process block . In various embodiments keywords such as username password license terms of use or other such keywords relating to access credential will be used to locate potential access credential information located within a textual description. If no textual description exists the process will then scan for an access credential file. The scanning may include searching the payload for file attachments having file names including terms such as Pswd Key Pass and variations thereon. If an access credential file is detected the access credential information is extracted from the access credential file by parsing the file for keywords such as username password or other such terms relating to access credential in process block . The access credential file may be an ASCII file such as a file stored with a file extension .txt .doc .docx .xml .html .nfo or other ASCII document format which can be readily parsed for keywords identifying access credential information including password key pass . In process block the recognized parsed or extracted access credential information is stored in a local access credential information data store for future use. The local data store may be a database hash file or other data store capable of storing information for later extraction and use. For example the local access credential data store may be a MySQL PostgreSQL Oracle MSSQL or other relational database having tables for storing and associating the access credential information with the protected archive.

In the event that access credential information is not stored in an image textual description or access credential file the local access credential information data store will be scanned for access credential information in process block . As mentioned above the local data store scan may utilize metadata relating to the protected archive in an effort to find the stored access credential information. If the information is not located in the local data store the remote access credential information data store will be scanned in process block . The remote scan may utilize metadata relating to the received protected archive as keywords in the scan. The remote access credential data store may reside in a remote network accessible computer or server system such as an application server or database server and may contain a MySQL PostgreSQL Oracle MSSQL or other relational database having tables for storing and associating access credential information with protected archives. In various embodiments the system will utilize a web service HTTP request email or other networked messaging format to communicate with the remote access credential data store. The metadata may be encrypted utilizing a hash cipher block cipher public key encryption or other method of cryptography before transmittal. By encrypting the metadata information before transmittal the information is protected from manipulation while being transferred the remote access credential data store. In certain embodiments the remote access credential data store may decrypt the message and utilize the received information to search for access credential information. In other embodiments the communication channel with the remote data store is secured by utilizing SSL TLS HTTPS or other secure communication protocol. Further the remote access credential data store may have a public or communal portion for the sharing of access credential information and a private portion that may be utilized to provide remote backup and access of access credential information. In the event that access credential information is determined the protected archive file is authenticated and contained information extracted in process block . The data contained in the protected archive may be executable files data files databases or other forms of data storage. In process block the extracted information is scanned for malicious content detecting any malware. That malicious content may be detected by various antivirus programs known in the art such as antivirus programs from Kaspersky McAfee Symantec and others. If malware is detected the user may be prompted to store the information relating to the protected archive in the local access credential data store in process block and remote access credential information data store in process block . In process block the summary result of the payload is presented to the user. If no malware is detected the result is shown to the user and the information in the protected archive may be utilized for its intended purpose.

In various embodiments the process of analyzing a protected archive may utilize plugins or functional modifications of programs in order to assist in the detection of protected archives and access credential information. For instance the process of analyzing a protected archive may utilize a Microsoft Outlook plugin in order to continually monitor incoming email messages for protected archives and to implement payload scanning Additionally the process may utilize a Unix Microsoft Windows Linux or other operating system background service to implement the scans. In this way the protected archive analysis may operate as a continually monitoring background service system load process or scheduled process.

The ACDS may also utilize plugins or functional modifications of programs in order to detect access credential information. For instance the ACDS may utilize a Microsoft Outlook plugin in order to continually monitor incoming email messages for access credential information or a Mozilla Firefox plugin to monitor web browsing. Additionally the ACDS may utilize a Unix Microsoft Windows Linux or other operating system background service to implement the scans. In this way the ACDS may operate as a continually monitoring background service system load process or scheduled process. Thus in various embodiments the ACDS continually monitors a user s access credential profile.

In various embodiments the access credential information retrieved during the ACDS scan may be retrieved by a user for use of the associated networks or local services. For example if a user has purchased something from Amazon.com in the past but cannot remember their access credential information the user may query or scan the ACDS for the access credential information associated with Amazon.com. Similarly if a user has forgotten their debit card pin number and had stored it in a text file on the computer system the user may now query the ACDS data store for the pin.

In order to attempt to determine the associated local or networked services associated with access credential information existing on a system the ACDS may retain metadata related to where the information was found on the system in order to provide context to the access credential information. In various embodiments the user may view and alter the captured metadata in order to assist in the management of the information. For example a user may associate a service with access credential information stored within the ACDS data store via a user interface. Thus by executing the ACDS a computer user with a long history of creating and utilizing access credential information in various networked or local services may have all historical access credential information stored in one central location.

In various embodiments the ACDS data store is stored remotely in order to facilitate portability of the access credential information. Additionally the remote storage of access credential information allows for alternative modes of access. For instance when a user utilizes his own personal computer local software may be utilized to access the remote ACDS data store. When the user utilizes a computing device that is not owned or operated by the user or one which the user has limited feature access the ACDS data store may utilize a web enabled interface to ensure access to the access credential information. Further the remote ACDS data store affords additional security to users who have several distinct persons interacting on a single device. For instance when utilizing a computing device that several users have access to the remote ACDS data store allows each user to store their access credentials in a secure location that cannot be accessed by the other users of the device.

In various embodiments the system will utilize a web service HTTP request email or other networked messaging format to communicate with the remote ACDS data store. The data may be encrypted utilizing a hash cipher block cipher public key encryption or other method of cryptography before transmittal. By encrypting the data information before transmittal the information is protected from manipulation while being transferred the remote access credential data store. In other embodiments the communication channel with the remote ACDS data store is secured by utilizing SSL TLS HTTPS or other secure communication protocol.

In establishing access to a new network enabled service a user will often be required to create a user account having a username password email address phone number or other such access credential and personably identifiable information. Once this information is submitted the service administrator will often generate a confirmation message which is then delivered to the user. In many situations the user may then validate the receipt of the message and begin utilizing the service. is a depiction of the process of automatic detection and association of such access credential information according to one embodiment. In process block a registration message is received from a network enabled service. The registration information may be encapsulated within an email Instant Messenger chat Short Message Service SMS Multimedia Messaging Service MMS or other form of digital communication. In process block the registration message is scanned for access credential information. The access credential information may include a username and password that was entered by the user when registering for a service. The scan may utilize keywords such as username and password and variations thereon to quickly identify access credential information. In process block the registration message is scanned for information relating to the service. For example if the user registered for a user account on Wordpress.com the registration message may include a reference to Wordpress.com in the message body either as a textual description or as a hyperlink. If the message was delivered to the user via email the email may include information in the message header such as the from designator having a suffix such as wordpress.com . Thus similar to the scan for access credential information the service search may utilize process block may utilize keywords or characters such as .com .net .edu and others to search for service information. In process block the access credential information and the service information is stored in the local access credential information data store. In the process of storing the information the access credential records and the service information is linked in order to enable users to later utilize the access credential information data store to retrieve access credential information. In process block the access credential information and the service information is stored in a remote access credential information data store. In various embodiments the system will utilize a web service HTTP request email or other networked messaging format to communicate with the remote access credential data store. The data may be encrypted utilizing a hash cipher block cipher public key encryption or other method of cryptography before transmittal. By encrypting the data information before transmittal the information is protected from manipulation while being transferred the remote access credential data store. In other embodiments the communication channel with the remote data store is secured by utilizing SSL TLS HTTPS or other secure communication protocol. Thus the process of automatic detection and association of access credential information operates to capture and store access credential and service information in a central location for later retrieval.

In a select embodiment the system of automatic detection and association of access credential information includes the ability to capture and analyze images relating to access credentials. For example if a user creates a bank account that utilizes mutual access credentials to authenticate the users and the service provider that includes an image the system may capture the image information and store it in the data store along with the other access credential information for later retrieval. In this embodiment the image capture and analysis feature may be provided by an internet browser plugin or via a small desktop application capable of analyzing network communication along with the information rendered on the screen. For example the user may download a plugin for Mozilla Firefox that allows the browser to capture information relating to the image utilized in mutual access credential. The plugin may capture the image and associated username password and URL information and store it in the access credential information data store. For example if a user opened an account with a service which utilizes a mutual security program such as SiteKey from RSA Data Security that allows the user to select an image that is displayed by the service prior to a user entering in a password the system could capture the user selected image along with username password and URL and store it in the local access credential information database. Later upon return to the service website the system could examine the URL and displayed image to determine the authenticity of the website and associated service. The image analysis could be performed by utilizing an object character recognition program hash comparison or other image analysis software capable of comparing digital images. The system could then query the access credential information data store for the username and password information associated with the service. In this way the system provides the user not only access credential management support in assisting in the retrieval of access credential information but also assists in the identification of security threats by identifying URL and image combinations incompatible with the associated service. Thus various embodiments of the system are able to detect and neutralize malicious attacks that utilize Phishing or man in the middle schemes in an attempt to obtain sensitive information.

Further in a select embodiment the system compiles information relating to access credentials including but limited to usage and age. For example the system may provide the user information relating to the most frequently used access credentials on their system. In another embodiment the system may provide the user with a summary of the age of the access credential information stored in the data store. Further the system may provide suggestions to the user as to which access credentials need to be retired updated or otherwise altered in order to maintain good security practices. The system may provide a cross reference of access credential information and associated metadata providing related service information to list of the most frequently maliciously attacked services. In this way the system may provide the user with a statistical analysis of their access credentials and an up to date analysis of risk.

In a related embodiment the system may provide the user a potential infiltration map to assist the user in identifying services that are utilizing the same access credentials. The system would first analyze the local access credential data store to obtain a list of access credentials and their related services. The system would then compile a list of the services utilizing the same access credentials for display to the user. The system would then present these services to the user utilizing an interactive graphical representation. The graphical representation may be 2D or 3D and may utilize image formats such as those typically stored with file extensions .png .jpg .gif and may utilize content represented by code typically stored using the file extensions .html .xml .xhtml Adobe Flash or Microsoft Silverlight . The graphical representation may present the services to the user in an interconnected web a grid a sphere a data tree cloud Venn diagram or other representation capable of visualizing the relationship between data points. The interactive graphical representation may provide functionality to the user for access credential management including password changes password change reminders use alerts service grouping and the like. For example the user could hover over a portion of the graphical representation representing a service utilizing a user input device and obtain a pop up or hover menu which would allow the user to for example update the access credentials in the local data store and the remote service site.

In another embodiment the system may provide the user with a security score that provides an indication to the user of their security level. The security score would be an metric related to the user s implementation of security best practices including installation and maintenance of an antivirus software program a firewall software program an anti phishing program distinct access credential maintenance and others. A high security score would indicate to the user that they have taken the appropriate measures to ensure security of their computer system and maintain a good security profile with local and network software. A low security score would indicate a lack implemented security measures use of compromised access credentials use of same or similar access credentials for several services extended period since last access credential update and other insecure practices. In certain embodiments the system accepts data warning s from local and network services. These data warnings would indicate a potential or realized security breach of the service. In this situation the service may scan the access credential data store for the service that issued the data warning and other services that utilize the same access credentials. For example if Amazon.com s service was compromised and access credentials for user accounts stored on their server were accessed Amazon.com may send a data warning. The system would then locate Amazon.com s entry in the local access credential database and all other services utilizing the same access credentials for example SmugMug and Flickr . The system may then update the security score to reflect the potential security threat reducing the score due to the data warning and the three potentially effected services. Further the system may provide warnings and suggestions to the user regarding actions to take to ensure security. In various embodiments the system may automatically update the affected passwords in the local access credential data store and in the local or remote service. The system may update the remote service access credentials utilizing a web service secure email or other secure transmission. Further the local access credential data store may be synchronized with a remote access credential data store to enable a user to access their access credentials from alternative locations and maintain a safe backup of the sensitive information. Thus the system thus may provide the user with security maintenance and management tailored to the user s actual usage patterns.

The embodiments above are intended to be illustrative and not limiting. Additional embodiments are within the claims. In addition although aspects of the present invention have been described with reference to particular embodiments those skilled in the art will recognize that changes can be made in form and detail without departing from the spirit and scope of the invention as defined by the claims.

Persons of ordinary skill in the relevant arts will recognize that the invention may comprise fewer features than illustrated in any individual embodiment described above. The embodiments described herein are not meant to be an exhaustive presentation of the ways in which the various features of the invention may be combined. Accordingly the embodiments are not mutually exclusive combinations of features rather the invention may comprise a combination of different individual features selected from different individual embodiments as understood by persons of ordinary skill in the art.

Any incorporation by reference of documents above is limited such that no subject matter is incorporated that is contrary to the explicit disclosure herein. Any incorporation by reference of documents above is further limited such that no claims included in the documents are incorporated by reference herein. Any incorporation by reference of documents above is yet further limited such that any definitions provided in the documents are not incorporated by reference herein unless expressly included herein.

For purposes of interpreting the claims for the present invention it is expressly intended that the provisions of Section sixth paragraph of 35 U.S.C. are not to be invoked unless the specific terms means for or step for are recited in a claim.

