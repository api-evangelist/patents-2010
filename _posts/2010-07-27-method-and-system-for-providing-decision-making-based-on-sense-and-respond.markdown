---

title: Method and system for providing decision making based on sense and respond
abstract: According to an embodiment, the present invention provides a method for providing automated decision in response to one or more responses. The method includes providing, at a computer system, a user interface for receiving input from a user. The method also includes detecting a first event. The method further includes receiving a first set of attributes associated with the first event. Also, the method includes processing the first set of attributes. The method additionally includes analyzing the first set of attributes using at least pattern recognition. The method includes determining a first context for the first event based at least on the first set of attributes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08719207&OS=08719207&RS=08719207
owner: Oracle International Corporation
number: 08719207
owner_city: Redwood Shores
owner_country: US
publication_date: 20100727
---
This application relates to U.S. patent application Ser. No. 12 757 763 entitled METHOD AND SYSTEM FOR PROVIDING ENTERPRISE PROCUREMENT NETWORK filed on Apr. 9 2010 U.S. patent application Ser. No. 12 767 286 entitled PRODUCT CLASSIFICATION IN PROCUREMENT SYSTEMS filed on Apr. 26 2010 U.S. patent application Ser. No. 12 793 37 entitled COMMUNITY RATING IN ENTERPRISE APPLICATIONS filed on Jun. 3 2010 which are incorporated by reference in their entirety for any and all purposes.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention is directed to method and system for providing decision making based on sense and respond. More specifically various embodiments of the present invention provide techniques for detecting processing and analyzing one or more events based on a given set up of rules and based on the analysis of the events providing suggestions for responding to the one or more events. For example rules are customized for specific needs and are dynamically updated. In one embodiment both short term and long term responses are provided in response to an event. There are other embodiments as well as will be described below.

Over the last few decades with advent of computer technologies organizations are becoming more and more reliant on automated business intelligence technologies. Business intelligence technologies provide functions such as reporting online analytical processing analytics data mining business performance management benchmarking text mining and predictive analytics. Using business intelligence techniques organizations are able to operate more efficiently.

The use of business intelligence is becoming more prevalent. Currently there are various conventional techniques for providing some types of automated decision making techniques. Unfortunately conventional techniques are often inadequate.

Therefore improved techniques for providing decision making based on sense and respond are highly desirable.

Aspects of the present invention includes implementing a sense and respond application. The implementation of the sense and respond application includes a design time aspect and a run time aspect. In one embodiment the design time aspect includes receiving and processing information from various sources and defining event sources. Furthermore design time includes defining entities attributes and types of objects associated with the event sources. Additionally business solutions business logic and contexts are defined. Then responses associated with the context are defined. Accordingly the events situations responses and business objects are deployed by a sense and respond server.

In a further embodiment the run time aspect includes detecting and event and then analyzing filtering and routing the event. The event is then normalized and enriched and then attributes of the event are analyzed to determine a context of the event. The events are correlated and conditions are evaluated. Finally the response is defined and executed.

Certain embodiments are directed to method and system for providing decision making based on sense and respond. More specifically various embodiments of the present invention provide techniques for detecting processing and analyzing one or more events based on a given set up of rules and based on the analysis of the events providing suggests for responding to the one or more events. For example rules are customized for specific needs and are dynamically updated. In one embodiment both short term and long term responses are provided in response to an event. There are other embodiments as well as will be described below.

According to an embodiment the present invention provides a method for providing automated decision in response to one or more events set of event or responses. The method includes providing at a computer system a user interface for receiving input from a user. The method also includes detecting a first event. The method further includes receiving a first set of attributes associated with the first event. Also the method includes processing the first set of attributes. The method additionally includes analyzing the first set of attributes using at least pattern recognition. The method includes determining a first context for the first event based at least on the first set of attributes. The method additionally includes retrieving a set of related events based on the first contact and the first set of attributes. The method further includes determining dependencies between the first event and the set of related events. The method includes generating a first set of responses based on the first set of attributes and the dependencies using a first set of rules. The method includes providing at the user interface the first set of response to the user.

According to another embodiment the present invention provides a method for providing automated decision in response to one or more responses. The method includes providing at a computer system a user interface for receiving input from a user. The method also includes receiving a set of training events each of the training events being associated with a plurality of attributes. The method further includes receiving a set of training data associated with the first set of training events the set of training data including a set of sensing information and set of response information. The method additionally includes processing the set of training events and the set of training data. The method also includes determining a set of rules and exceptions based on the set of training events and the set of training data. The method further includes receiving via the user interface user inputs. The method includes modifying the set of rules based on the user inputs.

According to yet another embodiment the present invention provides the present invention provides a method for providing automated decision in response to one or more responses. The method includes providing at a computer system a user interface for receiving input from a user. The method also includes detecting a first event. The method additionally includes receiving a first set of attributes associated with the first event. The method further includes processing the first set of attributes. The method additionally includes determining a first context information for the first event based at least on the first set of attributes. The method also includes storing the first context information. The method also includes analyzing the first context information. The method also includes selecting a logic element for interpreting the first context information. The method also includes checking a context inconsistency using the logic element. The method also includes resolving the context inconsistency if it is determined that the first contact information has the context inconsistency. The method also includes determining dependencies between the first event and the set of related events using at least the first context information. The method includes generating a first set of responses based on the first set of attributes and the dependencies using a first set of rules and the first context information. The method also includes providing at the user interface the first set of response to the user.

Various additional objects features and advantages of the present invention can be more fully appreciated with reference to the detailed description and accompanying drawings that follow.

Certain embodiments are directed to method and system for providing decision making based on sense and respond. More specifically various embodiments of the present invention provide techniques for detecting processing and analyzing one or more events based on a given set up of rules and based on the analysis of the events in a context providing suggests for responding to the one or more events. For example rules are customized for specific needs and are dynamically updated. In one embodiment both short term and long term responses are provided in response to an event. There are other embodiments as well as will be described below.

Techniques for providing decision making based on sense and response have a wide range of applications. In a supply chain changes take place all the time. Depending on the importance of these changes as well as on how frequently they happen the operators need to make decisions and plan ahead. These planning decisions may be of an operational tactical or even strategic level. The operators of the supply chain take such decisions based on information from the existing systems such as enterprise resource planning ERP news feed feed external ecommerce systems i.e. Oracle Supplier Network as well as information on sales costs and sometimes estimated data. However this information is not centrally available and the sources of events are multiple internal as well as external. As a result the process of decision making is often a difficult and time consuming process which may not always produce desirable and results. Moreover due the fact that most of the data may be just estimates of future values errors in the forecasts are often made by the decision makers.

In the past in supply chain process operations decision making processes are not automated. Often operators make their decisions based on data from the ERP system news feed feed from external ecommerce systems i.e. Oracle Supplier Network or other information technology systems of the company or even data from market research. However since these types of data are in a raw format processing these data is difficult time consuming and unpredictable. Many times operators and decision makers use third party consulting services which again were based on the same information.

As described below various embodiments of the present invention provide automated decision making process using a sense and respond system. is simplified diagram illustrating a system for facilitating decision making process according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications.

Turning now to which illustrates a simplified diagram of a system for facilitating decision making process according to an embodiment of the present invention. In one embodiment system includes situation design repository which This repository contains definition of events situations processes and rules that are used to determine the situations event sources sinks and response actions. The situation design repository includes a design time ontology which is in the situation design knowledge base and contains ontological descriptions and interconnection rules of the various components defined in the situation design repository .

System further includes an intelligent context repository which contains definitions of contextual elements needed for determining the processing of the events. The intelligent context repository includes a context ontology which is configured to manage the storage of a context mediator s knowledge. This knowledge includes the ontology for describing various types of contexts as well as ontology instance data.

System further includes event sources which includes sensor events application events and or human input. These events form the input to the system which the system analyzes interprets and responds to. Event sources is a generator module for specified events. Among other thing the event sources could encapsulate a wide variety of real world sources e.g. Data Base Tables RSS Feeds Web Service Calls etc. . For example the event sources can be seen as an adapter which pumps the events into the Sense and Respond Framework. An event source can feed many event types. For example one event can be fed by multiple event sources. A pluggable adapter capable of pumping in events can be referred to as a type of an event source. Event sources may be created in various ways service oriented architecture SOA composite plain old java object POJO and the like.

Event sources includes multiple types of events structured semi structured unstructured and business events . Structured events have a backing relational model that defines the elements and types and are easy to process. Semi Structured Unstructured events is a form of structured data that does not conform with the formal structure of tables and data models associated with databases but contains nonetheless tags or other markers to separate semantic elements and hierarchies of records and fields within the data. Finally semi structured events are increasingly occurring since the advent of the Internet where full text documents and databases are not the only forms of data. Especially in object oriented databases you often find semi structured data. For example Web APIs i.e. REST SOAP could be used to pull or push data.

System includes an event transmission and normalization ESB module which receives raw data from one or more sources and formats the data into a standard event format which can then be processed by other modules of system . The event transmission and normalization ESB module includes event loading which loads event data from the event source into the event service bus. Event transmission and normalization ESB module also includes an event type recognition filtering and routing module which determines the type of event. This can be done by examining the type information in the Event by the event Name or by a set of event values. An event payload extraction module extracts the event related payload from the event message an event payload transformation module transforms the event to a standard normalized form and an event transmission module forwards the communication of the event onward to downstream components.

Furthermore system includes a visualization platform which is configured to provide various types of reports for users. In one embodiment user reports are provided in a web format. For example information is displayed as part of a dashboard containing KPIs alerts and or notifications . Users may view reports in various ways such as using a computer monitor a mobile phones a PDA etc. The visualization platform includes a search UI that drives search activities and includes a design time UI which helps business users in modeling viewing and modifying business processes to keep up with changing business requirements. Additionally the situation manager application provides a single place to view design customize deploy and manage sensors events source events filters processors rules responses and dashboards processes e.g. BPM and services.

The visualization platform includes a transactional UI used to perform ERP CRM SCM Other transactions BI widgets used for BI screens and BAM widgets used for BAM screens constructed using the data visualization toolkit.

System further includes a deployment platform which includes an S R application created using the steps described above which can be deployed and un deployed from within the situation manager. The deployment platform includes deployment services which reads the design time information and deploys SNR components to the SOA server. The deployment services includes context management performs configured to determine context for situation detection and loads and manages the lifecycle of context data. The deployment services may include transactional components which are software components that perform transactional activities such as creating an order. The BAM server provides real time access to critical business performance indicators to improve the speed and effectiveness of business operations. The BAM is configured to process and analyze events in light of other business activities. The BI components analyzes the events from the sense response server and if needed uses information from the event hub. In various embodiments the BI components provide both short term and long term analysis and decision. Furthermore alerts are used to bring situations of potential conflict to the notice of users notifications are used to notify situations of interest to the notice of users and BI widgets and BAM widgets are similar to BI widgets and BAM widgets .

Further SOA event sensing processing and situation detection module implements a method which includes detecting a first event. The method additionally includes receiving a first set of attributes associated with the first event processing the first set of attributes and additionally determining a first context information for the first event based at least on the first set of attributes. The method also includes storing the first context information analyzing the first context information selecting a logic element for interpreting the first context information and checking a context inconsistency using the logic element. Further the method includes resolving the context inconsistency if it is determined that the first contact information has the context inconsistency determining dependencies between the first event and the set of related events using at least the first context information generating a first set of responses based on the first set of attributes and the dependencies using a first set of rules and the first context information and providing at the user interface the first set of response to the user.

The SOA event sensing processing and situation detection module includes a CEP which combines the real time information of the business activity monitoring BAM and business intelligence BI dashboards with the data of the stored in the event hub e.g. a event repository the users can discover new information such as trends or long term changes. The sense respond server provides this kind of intelligence based on pre built rules and machine learning. Furthermore come custom code such as Java Script code is used for situation detection.

An event situation response module is in communication with The SOA event sensing processing and situation detection module . The event situation response module includes a BPM server which is a part of the response module and is event driven. Business process management attempts to improve processes continuously and it could therefore be described as a process optimization process. Being event drive the event driven BPM is able to update various business processes in response to the events. The BAM server provides real time access to critical business performance indicators to improve the speed and effectiveness of business operations. The BAM server is configured to process and analyze events in light of other business activities. The event situation response module further includes applications services .

An in memory processing platform is in communication with the event sensing processing and situation detection module and the event situation response module . The in memory processing platform includes an intelligent context manager SCA which in event driven systems provides a context mediator which has the following responsibilities Provide a centralized model of context that all events in a given situation can share Acquire contextual information from event sources Reason about contextual information that cannot be directly acquired from the sensors Detect and resolve inconsistent knowledge stored in the shared context model and Protect privacy by enforcing policies that users have defined to control the sharing and use of their contextual information.

The in memory processing platform further includes an intelligent context initializer SCA which initializes the context cache with data to help situation detection. The in memory processing platform also includes a distributed shared cache such as Coherence and a distributed event and situation object model .

Additionally system includes an event analysis platform in communication with the event transmission and normalization ESB and a search platform . The event analysis platform includes an event and situation repository which stores events received. For example the event hub includes a database for organizing and or storing events. The event hub can later be access for performing business intelligence analysis. The event analysis platform further includes data mining ETL and OBIA .

The search platform is in communication with each or the platforms visualization platform deployment platform event situation response module in memory processing platform and event analysis platform . The search platform provides the ability to search on events and situations in addition to other enterprise objects and provide relevant results. The search platform includes a search engine which processes search queries and an event information base which is a repository of all events and situations that have been processed by the sense and response system .

Referring now to which illustrates a simplified flow diagram of a method of providing design time implementations according to an embodiment of the present invention. Method implements a design and deploy time diagram. This diagram details the sequence and the component steps that a sense and respond designer may step through in order to design and deploy a sense and respond application. At process block the sense and respond application may be defined. For example. the scope of the Sense and Respond Application i.e. the entire set of artifacts that are associated with one deployment unit may be named . In one embodiment situation design repository design time ontology and design UI may be used to implement process block .

At process block event sources may be defined. In one embodiment the event sources are selected or defined that are the potential sources of the events for the application. In one embodiment situation design repository design time ontology and design event sources may be used to implement process block . Furthermore at process block the event s are defined selected for the event source s . The events that are available from the source are selected or defined. This may be implemented using the design time ontology and the design event sources .

At process block entities attributes and type s view objects associated with the event are defined. In one embodiment the entities and the attributes of these entities contained in the events emanating from the event sources may be specified. The situation design repository the design time ontology and the design event sources may be used to implement process block . At process block business situations are defined. In one embodiment using the design time ontology business situations that are the result of conditions that apply on the event attributes are defined.

Further at process block business rules CEP logic custom code associated with business situations may be created. In one embodiment using CEP the processor that defines the conditions that the events are evaluated against is defined. At process block contexts e.g. view objects associated with the situation may be defined. In one embodiment using context ontology the context that drive the identification of the actions that apply to the situation are identified. The contexts may be view objects and have backing entities and attributes.

At process block responses associated with the situation and context including a business process flow as a possible response are defined. In one embodiment using the situation design repository and the design time ontology the responses that are determined as a combination of the situation and the context are defined. At process block the business situations are associated with events and processors. In one embodiment using the situation design repository and the design time ontology the business situations are associated with the various events that are input. At process block events situations processors responses business objects and views are deployed to the sense and respond server. In one embodiment using the deployment services module and the event situation response module the entire set of artifacts are published as one deployment unit on to the sense and respond server.

Turning next to which illustrates is a simplified flow diagram of a method of providing run time implementations according to an embodiment of the present invention. At process block using the event transmission and normalization ESB and event logging the sense and respond system detects the arrival of an event from either an internal or an external source. At process block using the event transmission and normalization ESB including the event logging event type recognition filtering and routing module the event payload extraction module the event payload transformation module and the event transmission module the sense and respond system analyzes the event e.g. looks up event type attribute and determines if this event is of interest.

At process block using the SOA event sensing processing and situation detection module the event is normalized to a standard for a well defined schema. At process block also using the SOA event sensing processing and situation detection module the event attributes are analyzed for enrichment purposes and at process block the event attributes are enriched with information from enterprise systems. Furthermore at process block the event attributes are inspected for context determination purposes and the context for the situation is determined process block .

At process block using the SOA event sensing processing and situation detection module and the event analysis platform the events related to the current state of the system and the situation under consideration are retrieved. Then at process block using the SOA event sensing processing and situation detection module the intelligent context manager SCA and the event and situation repository the dependent objects needed for the determination of a situation are loaded. At process block using the SOA event sensing processing and situation detection module the CEP engine for example would use CQL queries to evaluate if the event set is intended for a situation of interest.

Furthermore at process block using the SOA event sensing processing and situation detection module system uses the loaded context to determine and issue a response then using the event situation response module the response is transmitted to the target system process block .

As is evident from the model represents a business process that abstracts away technical details e.g. computer programming implementations that are inherent to each of the processes and focuses only on business entities such as events event sources processors and situations. Using the situation manager business users can model a process by dragging and dropping components from a component palette consisting of events event sources processors and responses. They can connect these processes and define a business flow that will regulate the flow of events through the system.

According to various embodiments a situation manger allows users to create and manage sense and response applications and their individual components. The situation manager includes among other components events event source situation response and sense and response application.

As an example events are represented as xsd . The events can be classified into two types 1 entities and 2 actions that belong to each of these entities. One example is Order Header Entity and Order booking event. A create read update delete CRUD event would be represented by the entity. Other events would be modeled as actions. The xsd representation can be created by using a suitable editor and uploaded into the situation manager .

Event source is a generator module for specified events. Among other thing the event source could encapsulate a wide variety of real world sources e.g. Data Base Tables RSS Feeds Web Service Calls . For example an event source can be seen as an adapter which pumps the events into the Sense and Respond Framework. An event source can feed many event types. For example one event can be fed by multiple event sources. A pluggable adapter capable of pumping in events can be referred to as a type of an event source. Event sources may be created in various ways service oriented architecture SOA composite plain old java object POJO and others.

A situation component can be seen as a black box of deployable codes. In various embodiments the situation component takes event streams as input and tells if a situation has occurred or not as events are fed into it. The business logic for the situation is encapsulated inside the situation black box. Depending on the application a situation component may be implemented in various ways 1 complex event processing CEP Event Processing Network 2 business rules 3 business process execution language BPEL 4 workflow with human intervention and 5 others.

In one embodiment situations are defined using an integrated design environment IDE most suited for the implementation you are planning The situation thus defined can be imported into the Situation manager .

Response is the action that has to be performed when a situation is detected. Among other things a response is a deployable block which is capable of invoking external actions. This translates to adapters which are able to invoke PL SQL call web services write to files and perform other actions. A response can be created using SOA composite POJO and others.

For example responses are defined using the IDE that best suites the job and can be imported into Situation manager . One situation can have multiple responses many situations can use the same compatible response.

An S R application can be built by connecting event sources to a chain of situations and finally to responses. For example a user interface is shown in for connecting events and responses. In a specific embodiment the following steps are performed for creating an S R application 

The S R application created using the steps described above can be deployed and undeployed from within the Situation manager .

In certain embodiments the situation manager acts as a repository for various components as each the components imported can be used and shared by many S R applications. For example there are multiple interfacing methods that can be used for connecting the different components together.

In one embodiments the present invention provides a three phase method for creating sense and respond application 1 define 2 connect and 3 deploy.

At the define phase necessary components e.g. events event sources situation responses that are required for the application are defined in the Situation manager .

Connect phase is provided in which the application is build by connecting together the different components. For example the result is an application xml AXML file which describes the components of the application and their relation. is a simplified diagram illustrating a process for connecting components for a sense and response application according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications.

In there are four types of components 1 events 2 event sources 3 situations and 4 responses. These components are listed blow 

In light of the relationship among components as illustrated in an AXML file is created for the sense and respond application its source code is shown below 

At deploy phase a sense and response server takes up the AXML file and deploys the respective servers for which the components were designed. The AXML and a Queue Lookup for all the components is sent to the Message Switch Board MSB . For example MSB is a lightweight ESB which is responsible for routing the messages between the different components

In the past a complex IT infrastructure is many times the panacea for a complex business problem. Often the complexity of the solution soon turns into a nightmare because of the high cost of maintenance and dependence of business analysts who have limited access to the underlying technology on IT staff which has limited understanding of the business. When the business process changes business analysts have to log change requests with their IT team and explain the changes needed which leads to elaborate change request procedures. When designing the sense and respond solution this was identified as a key problem area. It could cause delay in modeling and modifying business processes. Also it would require a dependable IT team either to be recruited or contracted each time the system needed configuration. It is therefore to be appreciated that the situation manager application according to the present invention provided an interface that is simple to use and easy to manage. More specifically situation manager provides a single unique platform for managing business processes. For example business Process can be streamlined by performing strategic analysis on historical reports as obtained from an event hub. With a graphical interface business processes can be deployed or undeployed on click of a button. Essentially the situation manager helps match the dynamic nature of business new business policies and or rules can be integrated into the system easily and quickly without much of technical support from the system administrator end.

It is to be appreciated that the customization of sense and response system according to embodiments of the present invention is not limited in situation manager . In various embodiments a context manager architecture is provided to allow users to define the context under which events are analyzed. A detailed description is provided below.

Among other things context manager is provided to allow users to fine tune a sense and response system to accommodate various irregularities. Often small delays and irregularities can have severe repercussions for a business in its downstream processes. For example a delay in acquiring raw materials from a supplier can cause stock out at the retailer s outlet. This delay could be in transportation or logistics. In either case the person in charge needs to monitor every inflection point in the supply chain identify alarming situations and respond to the situation based on company policies or in many cases his her better judgment. Without an automated sense and response system of the present invention the person in charge often have to manually make adjustments. In this example as soon as the person in charge realizes the delay she must select an alternative supplier who can fulfill the order in time. Delay in realizing the situation or in taking appropriate action could result in a stock out. Since the sense and respond process is manual the business is subject to high risk of failure.

As explained above a sense and respond system according the present invention can be coarsely divided into 3 tiers 1 event source tier 2 processing tier and 3 presentation tier.

The event source tier is at the edge of the system and interfaces with third party devices such as temperature pressure sensors RFID readers location detecting devices etc. Incoming events are filtered and relayed to the processing tier which consists of the Sense and respond server. The Sense and respond server consumes events and runs them through a composite assembly of processes. Each process enhances the device level event with business context and helps in the interpretation of the event based on pre seeded business rules and machine learning algorithms. The outcome of these processes is a real world business situation. This is sent to the presentation tier where a business user can view and take action in response to the business situation.

In various embodiment an Intelligent Context Manager Architecture ICMA which is a service centric architecture for supporting contextualization of such event driven systems is used to process events in their proper context. Central to the ICMA is an intelligent service called context mediator illustrated in . is a simplified block diagram illustrating a context mediator according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. A context manager shown in is a specialized server entity that runs on a resource rich compute space.

In one embodiment a functional design of the context mediator comprises four modular components. Each component provides distinctive functions for supporting 1 persistent data storage 2 context reasoning 3 context acquisition and 4 privacy protection. As illustrated in the context manager acquires context information from event sources in its environment and fuses it into a coherent model which is then shared with the event processing situation detection engine to aid the process of contextual situation detection and alerting process.

Context knowledge base is configured to manage the storage of the context mediator s knowledge. This knowledge includes the ontology for describing various types of contexts as well as the ontology instance data .

Context reasoning engine is a logical inference engine for reasoning over the acquired contextual information. For example the function of this engine includes interpreting context based on the acquired event data aggregating the contextual information from multiple sources using ontology and domain heuristics detecting and resolving inconsistent information.

Context acquisition module is a set of services for acquiring contextual information from various sources to enable contextual situation detection. It hides the low level context acquisition implementations from the high level functional components. This middle ware based design is aimed to improve the reusability of the context sensing procedures.

Privacy management module manages the users privacy policies and controls the sharing of their private context information. It is responsible for enforcing the appropriate privacy policies when the context mediator attempts to share contextual information for situation detection. When sharing information if it is forbidden by some user s policy this component also helps to guide the logical reasoning to adjust information granularity.

Depending on the application context module includes other components as well such as context reasoning and web ontology language OWL component. For example the function of a context aware system depends on the support of context reasoning. Context reasoning in the ICMA is implemented via with a rule based logical inference approach using OWL DL.

Various components the context manager are implemented to work with one another. is a simplified diagram illustrating operation of a context manager according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications.

As shown in context information is first acquired in light of one or more events process block . The new information is stored in the knowledge database process block . An evaluation is performed do determine whether new context knowledge can be inferred using an available reasoner decision block . If new knowledge can be inferred a reasoner is selected process block and context is interpreted by the reasoner process block . If new knowledge cannot be inferred then consistence is checked decision block . If the context is consistent then the context is processed process block . If the context is inconsistent inconsistency is resolved and or eliminated process block .

The use of context manager provides many benefits. Among other things an explicit representation of the context reasoning rules provided by the context manager can help separate the high level reasoning logic from the low level functional implementation. Additionally by separating the logic from the functional implementation developers can modify or replace context reasoning components without requiring significant amount of re programming efforts. A rule based approach according to the present invention allows many well defined logic models of general concepts such as time and space to be directly mapped into the context reasoning implementation. The logical inferences associated with these general concepts are often useful in context reasoning. When context interpretation rules are explicitly represented meta reasoning techniques can be developed to detect and resolve inconsistent context interpretations. There are other benefits as well.

As shown system environment includes one or more client computing devices communicatively coupled with a server computer via a network . In one set of embodiments client computing devices may be configured to run one or more components of a graphical user interface described above. For example client computing devices allow user to view sense and response report create sense and response application and modify rules and context.

Client computing devices may be general purpose personal computers including for example personal computers and or laptop computers running various versions of Microsoft Windows and or Apple Macintosh operating systems cell phones or PDAs running software such as Microsoft Windows Mobile and being Internet e mail SMS Blackberry and or other communication protocol enabled and or workstation computers running any of a variety of commercially available UNIX or UNIX like operating systems including without limitation the variety of GNU Linux operating systems . Alternatively client computing devices and may be any other electronic device capable of communicating over a network e.g. network described below with server computer . Although system environment is shown with four client computing devices and one server computer any number of client computing devices and server computers may be supported.

Server computer may be a general purpose computer specialized server computer including e.g. a LINUX server UNIX server mid range server mainframe computer rack mounted server etc. server farm server cluster or any other appropriate arrangement and or combination. Server computer may run an operating system including any of those discussed above as well as any commercially available server operating system. Server computer may also run any of a variety of server applications and or mid tier applications including web servers Java virtual machines application servers database servers and the like. In various embodiments server computer is adapted to run one or more Web services or software applications described in the foregoing disclosure. For example server computer is specifically configured to process events and provide decision based on sense and response method.

As shown client computing devices and server computer are communicatively coupled via network . Network may be any type of network that can support data communications using any of a variety of commercially available protocols including without limitation TCP IP SNA IPX AppleTalk and the like. Merely by way of example network may be a local area network LAN such as an Ethernet network a Token Ring network and or the like a wide area network a virtual network including without limitation a virtual private network VPN the Internet an intranet an extranet a public switched telephone network PSTN an infra red network a wireless network e.g. a network operating under any of the IEEE 802.11 suite of protocols the Bluetooth protocol known in the art and or any other wireless protocol and or any combination of these and or other networks. In various embodiments the client computing devices and server computer are able to access the database through the network . In certain embodiments the client computing devices and server computer each has its own database.

System environment may also include one or more databases . Database may correspond to an instance of integration repository as well as any other type of database or data storage component described in this disclosure. Database may reside in a variety of locations. By way of example database may reside on a storage medium local to and or resident in one or more of the computing devices or server computer . Alternatively database may be remote from any or all of the computing devices or server computer and or in communication e.g. via network with one or more of these. In one set of embodiments database may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computing devices or server computer may be stored locally on the respective computer and or remotely on database as appropriate. For example the database stores event information and rules associated with different situations and contexts.

In various embodiments computer system may be used to implement any of the computing devices or server computer illustrated in system environment described above. As shown in computer system comprises hardware elements that may be electrically coupled via a bus . The hardware elements may include one or more central processing units CPUs one or more input devices e.g. a mouse a keyboard etc. and one or more output devices e.g. a display device a printer etc. . For example the input devices are used to receive user inputs for creating a sense and response application illustrated in . Computer system may also include one or more storage devices . By way of example storage devices may include devices such as disk drives optical storage devices and solid state storage devices such as a random access memory RAM and or a read only memory ROM which can be programmable flash updateable and or the like. In an embodiment various databases are stored in the storage devices . For example the central processing units is configured to retrieve data from a database and process the data for displaying on a GUI.

Computer system may additionally include a computer readable storage media reader a communications subsystem e.g. a modem a network card wireless or wired an infra red communication device etc. and working memory which may include RAM and ROM devices as described above. In some embodiments computer system may also include a processing acceleration unit which can include a digital signal processor DSP a special purpose processor and or the like.

Computer readable storage media reader can further be connected to a computer readable storage medium together and optionally in combination with storage devices comprehensively representing remote local fixed and or removable storage devices plus storage media for temporarily and or more permanently containing computer readable information. Communications system may permit data to be exchanged with network of and or any other computer described above with respect to system environment .

Computer system may also comprise software elements shown as being currently located within working memory including an operating system and or other code such as an application program which may be a client application Web browser mid tier application RDBMS etc. . In a particular embodiment working memory may include executable code and associated data structures for one or more of the design time or runtime components services illustrated in . It should be appreciated that alternative embodiments of computer system may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed. In various embodiments the behavior of the view functions described throughout the present application is implemented as software elements of the computer system .

In one set of embodiments the techniques described herein may be implemented as program code executable by a computer system such as a computer system and may be stored on machine readable media. Machine readable media may include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as machine readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store or transmit the desired information and which can be accessed by a computer.

Although specific embodiments of the present invention have been described various modifications alterations alternative constructions and equivalents are within the scope of the invention. Further while embodiments of the present invention have been described using a particular combination of hardware and software it should be recognized that other combinations of hardware and software are also within the scope of the present invention. The present invention may be implemented only in hardware or only in software or using combinations thereof.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. Many variations of the invention will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should therefore be determined not with reference to the above description but instead should be determined with reference to the pending claims along with their full scope or equivalents.

