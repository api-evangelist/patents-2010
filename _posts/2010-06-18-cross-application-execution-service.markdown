---

title: Cross application execution service
abstract: A user device receives, from a user, a query regarding services to be performed by an application and conducts a search of metadata associated with a group of applications. The user device selects, based on the search of the metadata, potential applications, from the group of applications, that are responsive to the user query. The user device generates, based on the user query, commands to be executed by each of the potential applications. The user device generates, based on the commands, results from each of the potential applications, and formats, for presentation on a display, the results from each of the potential applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08515979&OS=08515979&RS=08515979
owner: Verizon Patent and Licensing, Inc.
number: 08515979
owner_city: Basking Ridge
owner_country: US
publication_date: 20100618
---
Application software also referred to as an application a widget or an app is computer software designed to help a user perform one or more specific tasks. Apps may be downloaded to perform particular tasks for mobile electronic devices such as personal digital assistants PDAs smartphones multimedia players gaming systems etc. or computing systems PCs laptops netbooks etc. . In other instances apps may include interactive applications that may be used to supplement television programming in a subscription television system e.g. cable satellite etc. . In some environments apps may be purchased using an electronic commerce site e.g. an app store and downloaded to a user s device. Thus the user may have numerous apps stored locally on the user s device and options to purchase a multitude of other apps that perform particular functions. In some instances it may be difficult to determine which app of a group of apps is best suited to perform a particular function.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following detailed description does not limit the invention.

Implementations described herein may provide a platform to present which app of a group of apps is best suited to perform a requested function on a user device. The systems and or methods may provide an application programming interface API to determine one or more apps from the group of apps that is capable of executing a particular command. The systems and or methods may execute the one or more apps receive results based on the user s request and present the results to the user along with a link to the one or more apps. When an app is added to a distribution system e.g. to be made available in an app store the app may be registered with particular metadata to identify the app functions. The app may also be configured to conform to a particular execution input format to support the execution by the API and a return of data in a format supported by the API.

Assume for that three apps with suitable functionality are identified by user device shown as Flight Find FlightSight JFK and Airport Live . User device may generate a command to execute a function including JFK Flight UA 28 in each of the three apps. At a time t the results or portions of the results from each of the three apps along with a link to the app may be displayed on user device . In one implementation the order of the app results may be ranked e.g. based on context past search history etc. . The user may select a particular app from the displayed apps and at a time t the selected app may be opened by user device . In one implementation the selected app may be opened to show the results of the originally executed command e.g. the command for the selected app associated with JFK Flight UA 28 .

Although the above implementation is described above in the context of apps stored locally on user device in other implementations cross app execution may be applied in the context of remotely stored apps and or a combination of locally stored apps and remote apps. As used herein the terms user viewer subscriber and customer may refer interchangeably to a person who interacts with orders uploads listens to or plays apps on a user device.

Apps server may include one or more server devices or other types of computation or communication devices that gather process search and or provide information in a manner described herein. Apps server may provide data to push application software and content to user devices . For example apps server may provide apps and associated metadata that may be downloaded by user devices . In one implementation apps server may provide apps for a particular hardware and or software environment. For example apps server may provide apps that are particularly configured for proprietary operating systems on media client mobile device or other devices. An example of apps server may include a headend device or another device that provides multimedia content upon request to media client . Another example of apps server may include an apps store server associated with a particular mobile device and or operating system.

In general apps server may provide access e.g. via network to apps for user devices as requested by a user. Apps server may communicate with a variety of other components such as databases gateways web servers network switches or routers television broadcast facilities and other servers to facilitate providing particular apps to customers. Apps from apps server may include metadata to facilitate searching and cross execution by an apps tool that may reside on user devices and or execution server . In one implementation apps server may be controlled by a different entity than the entity that controls execution server . In another implementation apps server and execution server may be controlled by the same entity e.g. a multimedia service provider .

Execution server may include one or more server devices or other types of computation or communication devices that gather process search and or provide information in a manner described herein. Execution server may store copies of apps that may be available to execute commands queries from user devices . For example execution server may perform cross execution of apps that are also stored on a user device e.g. if a user device lacks sufficient processing capacity to simultaneously execute multiple apps . In another example execution server may perform execution of apps that are not stored on a user device e.g. to identify and or market features of apps that may be of interest to a user initiating a cross app execution process .

Media client may include any device capable of receiving transmitting and or processing information to and or from network . In one implementation media client may be a closed device e.g. including a hardware software configuration that is not accessible to the general public that restricts unauthorized alteration of content delivered over network . In one implementation media client may receive a television signal from a backend server not shown may convert the signal to a form usable by display device and may transmit the signal to display device for display. Examples of media client may include a set top box a computer a cable card and a portable electronic device. In some implementations media client may be incorporated into display device such as a television a computer or a portable electronic device. Media client may further receive and present data for apps e.g. interactive television applications . In implementation described herein media client may also be capable of sending via network data to apps server execution server and or another server to enable use of an app on display device . Media client may include one or more devices to receive input from a user including for example a remote control.

Display device may include a digital or analog display via which a user may view multimedia content including for example television programming and or interactive television applications . Display device may refer to any device that can receive and display multimedia content delivered over network and or through media client for perception by users. Display device may include technologies such as cathode ray tube CRT displays liquid crystal displays LCDs light emitting diode LED displays plasma displays etc.

Mobile device may include a computation or communication device such as a wireless mobile communication device that is capable of communicating with apps server execution server and or other devices. Mobile device may also include capabilities to store and execute apps e.g. apps received from apps server . For example mobile device may include a radiotelephone a personal communications system PCS terminal e.g. that may combine a cellular radiotelephone with data processing and data communications capabilities a PDA e.g. that can include a radiotelephone a pager Internet intranet access etc. a camera a personal gaming system a personal media player or another type of computation or communication device that may be capable of presenting exchanging multimedia content. In one implementation mobile device may generate and or store information in a memory associated with mobile device . Mobile device may include hardware and or software to receive data for cross execution of apps and to present the cross execution results to a user.

Computer may include a computation or communication device such as a personal computer that is capable of communicating with apps server execution server and or other devices. For example computer may include a desktop computer a laptop a tablet computer a netbook or another computation or communication device. Computer may include for example features similar to those of mobile device .

Network may include a network and system that permit transfer of data between apps server execution server and or user devices . Network may include for example a single network such as a wide area network WAN a local area network LAN a metropolitan area network MAN a telephone network e.g. a public switched telephone network PSTN or a wireless network the Internet a satellite network etc. or a combination of networks. Network may also include a radio access network that includes a variety of components such as antennas base transceiver stations BTSs base station controllers BSCs and or interfaces for packet data servicing nodes PDSNs and or mobile switching centers MSCs . In one implementation network may include a video signaling and distribution network and system that permit transfer of data between apps server execution server media client mobile device and or computer . In another implementation network may include a subscription television service. As used herein a subscription television service may refer to television telephone networking and or other multimedia services provided to customers over a closed distribution network such as a cable an optical fiber a satellite or a virtual private network that restricts unauthorized alteration of content delivered by a multimedia service provider.

In implementations described herein app server may receive e.g. from a third party device both app code and metadata relating to app functionality. App server may provide to user device via network the app code and the metadata. User device may receive from a user a query requesting app functionality. User device may based on the query conduct a search of the metadata and may select based on the search of the metadata one or more apps that are potentially responsive to the query. User device may generate based on the query commands to be executed by the app code associated with the potentially responsive apps. In one implementation the commands may be executed locally in user device . In another implementation the commands may be executed partially or exclusively by execution server and the results from execution server may be provided to user device . User device may receive the results for the commands executed using the app code and may format the results for presentation on a display e.g. display device an integrated display of mobile device or a display associated with computer .

Control unit may include one or more processors microprocessors or another type of processing unit that interprets and executes instructions. Among other functions control unit may collect and store viewer context records conduct metadata searches for app functions and execute app commands. In some implementations control unit may execute instructions to send use history and or other context information to another device such as execution server . Control unit may also receive information and or instructions from other devices such as apps server or execution server .

Memory may include one or more dynamic or static storage devices that may store information and instructions for execution by control unit . For example memory may include a storage component such as a random access memory RAM a dynamic random access memory DRAM a static random access memory SRAM a synchronous dynamic random access memory SDRAM a ferroelectric random access memory FRAM a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM and or a flash memory.

Display may include any component capable of providing visual information. For example in one implementation display may be a light emitting diode LED or a liquid crystal display LCD . In another implementation display may use another display technology such as a dot matrix display etc. Display may display for example text such as a time a date or a channel selection image and or video information.

Network connection may include any transceiver like mechanism that enables media client to communicate with other devices and or systems such as apps server . For example network connection may include an Ethernet interface an optical interface a coaxial interface a radio interface or the like. Network connection may allow for wired and or wireless communication. Network connection may be configured to connect media client to a packet based IP network.

Input output devices may generally include user input devices such as external buttons and output devices such as LED indicators. With input output devices a user may generally interact with media client . In some implementations input output devices may be implemented via a remote control. Bus may provide an interface through which components of media client can communicate with one another.

As will be described in detail below media client may perform certain operations relating to displaying information and communicating viewer activities to a server such as apps server or execution server . Media client may perform these operations in response to control unit executing software instructions contained in a computer readable medium such as memory . A computer readable medium may be defined as a physical or logical memory device. A logical memory device may refer to memory space within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into memory from another computer readable medium or from another device. The software instructions contained in memory may cause control unit to perform processes that will be described later. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although illustrates example components of media client in other implementations media client may include fewer different differently arranged or additional components than those depicted in . Alternatively or additionally one or more components of media client may perform one or more other tasks described as being performed by one or more other components of media client .

Bus may include a path that permits communication among the components of device . Processing unit may include one or more processors microprocessors or other types of processing units such as application specific integrated circuits ASICs field programmable gate arrays FPGAs etc. that may interpret and execute instructions.

Main memory may include a RAM or another type of dynamic storage device that stores information and instructions for execution by processing unit . ROM may include a ROM device or another type of static storage device that may store static information and instructions for use by processing unit . Storage device may include a magnetic and or optical recording medium and its corresponding drive. In one implementation storage device may include a database. In one implementation storage device may store for example metadata for apps and viewer account activity for particular user devices associated with a subscription multimedia service provider.

Input device may include a mechanism that permits an operator to input information to device such as a keyboard a mouse a pen voice recognition and or biometric mechanisms a touch screen interface etc. Output device may include a mechanism that outputs information to the operator including a display a printer a speaker etc. Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems such as media client .

As will be described in detail below device may perform certain operations. Device may perform these and other operations in response to processing unit executing software instructions contained in a computer readable medium such as main memory . The software instructions may be read into main memory from another computer readable medium such as storage device or from another device via communication interface . The software instructions contained in main memory may cause processing unit to perform processes that will be described later. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with example implementations. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although illustrates example components of device in other implementations device may include fewer different differently arranged or additional components than those depicted in . In still other implementations one or more components of device may perform one or more other tasks described as being performed by one or more other components of device .

Processor may include one or more microprocessors ASICs FPGAs or the like. Processor may control operation of mobile device and its components. Memory may include a RAM a ROM and or another type of memory to store data and instructions that may be used by processor . In one implementation memory may store metadata for apps and code to display and execute apps.

User interface may include mechanisms for inputting information to mobile device and or for outputting information from mobile device . Examples of input and output mechanisms may include buttons e.g. control buttons keys of a keypad a joystick etc. a speaker to receive electrical signals and output audio signals a microphone to receive audio signals and output electrical signals a display to receive touch input and or to output visual information a vibrator to cause mobile device to vibrate and or a camera to receive video and or images.

Communication interface may include for example a transmitter that may convert baseband signals from processor to radio frequency RF signals and or a receiver that may convert RF signals to baseband signals. Alternatively communication interface may include a transceiver to perform functions of both a transmitter and a receiver. Communication interface may connect to antenna assembly for transmission and or reception of the RF signals.

Antenna assembly may include one or more antennas to transmit and or receive RF signals over the air. Antenna assembly may for example receive RF signals from communication interface and transmit them over the air and receive RF signals over the air and provide them to communication interface . In one implementation for example communication interface may communicate with a network e.g. network and or devices connected to a network.

As will be described in detail below mobile device may perform certain operations described herein in response to processor executing software instructions of an application contained in a computer readable medium such as memory . The software instructions may be read into memory from another computer readable medium or from another device via communication interface . The software instructions contained in memory may cause processor to perform processes that will be described later. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although shows example components of mobile device in other implementations mobile device may include fewer components different components differently arranged components or additional components than depicted in . In still other implementations a component of mobile device may perform one or more other tasks described as being performed by another component of mobile device .

App searcher may include hardware or a combination of hardware and software to solicit receive an app functionality request and to identify potential apps to facilitate the functionality request. In one implementation app searcher may search a locally stored data source and or a remote data source of app metadata to identify potential apps. In another implementation app searcher may be a distributed component e.g. distributed among user device and apps server . In one implementation app searcher may identify one or more apps not currently stored on user device e.g. that may facilitate the functionality request for promoting new app sales.

App metadata storage may include hardware or a combination of hardware and software to collect and or store metadata associated with apps. Metadata may be generated for example by third parties in conjunction with uploading apps for distribution by apps server . Thus metadata may be provided to app metadata storage in conjunction with downloading of an app to mobile device e.g. if mobile device is equipped with cross application execution functionality . Metadata may include for example keywords and or other data to associate a particular app with particular functions. Additionally or alternatively metadata in app metadata storage may include command language or command templates that may be used e.g. by command generator to generate app commands from user input. In an implementation app metadata storage may reside locally on a user device and include metadata for locally stored apps. In another implementation app metadata storage may reside on a remote device and store app metadata for a global app database. In another implementation app metadata storage may be a distributed component e.g. distributed among user device and apps server .

Command generator may include hardware or a combination of hardware and software to assemble commands for apps that app searcher identifies as potentially having the functionality requested by the user. In one implementation command generator may retrieve command forms from app metadata storage and apply terms from the user s app functionality request to generate particular commands for each app identified by app searcher .

Apps processor may include hardware or a combination of hardware and software to execute one or more apps based on commands from command generator . In one implementation apps processor may execute apps stored locally on user device . In other implementations apps processor may execute apps on a remote device e.g. execution server .

Results ranker may include hardware or a combination of hardware and software to rank results obtained from apps processor . In one implementation results ranker may apply context data e.g. from context data storage to determine which results from apps processor may be most likely to meet criteria of the user s app functionality request. In another implementation results ranker may apply popularity information associated with each app or other ranking information obtained from other users of network .

Context data storage may store data that may be used to influence results rankings Context data may include for example historical data such as browsing histories app usage viewed programs and or other usage information user preferences past ranking results etc. In one implementation context data may be associated with a particular user e.g. a user logged into a particular account of user device .

Display generator may include hardware or a combination of hardware and software to present ranked results to a user of user device . In one implementation display generator may extract textual content from each of the rank results to present a results list. In another implementation display generator may present a split screen or multi screen view to display multiple app results on multiple sections of a display screen. Display generator may include results for locally stored apps e.g. apps already stored on user device and or remote apps e.g. apps not stored on user device . In one implementation one or more remote apps may be highlighted within the ranked results list or displayed separately from the ranked results list as a promotional item.

In operation app searcher may receive input from a user in the form a user query. For example a user may initiate a cross application execution feature on user device and provide a user query to identify an app for a particular function. For example user query may include the terms convert meters to feet. App searcher may communicate with app metadata storage to perform a search of metadata associated with locally stored apps. For example in the case of a user device app searcher may perform natural language processing a keyword search and or another type of search of information in app metadata storage to identify locally stored apps which may correspond to the user query.

Additionally or alternatively user query may be provided to app searcher associated with apps server . For example if a search of locally stored apps in user device fails to identify an app for a particular function user device may forward user query to app searcher at apps server . As another example user device may forward user query to app searcher at apps server to allow apps server to promote apps that are not already stored on user device . In the context of apps server app searcher may perform natural language processing keyword search and or another type of search of information in app metadata storage to identify globally available apps which may correspond to user query . Based on metadata search app searcher may provide a potential apps list to command generator .

Command generator may receive potential apps list and user query and from app searcher . Command generator may retrieve from app metadata storage command forms for each of the apps in potential apps list . In one implementation command generator may also retrieve from context data storage context information that may be used to supplement user query . For example context information may include dates times currently viewed programs currently used applications click through information or other context data. Command generator may apply user query command forms and context information to generate commands for each of the apps in potential apps list . Command generator may send commands to apps processor .

Apps processor may receive commands and execute e.g. simultaneously or serially commands for each application in the list of potential applications. Application processor may generate results for each of the apps based on commands and provide results to results ranker . Results may include images screen shots text other presentation formats and or a link e.g. a hyperlink to the local app or to an Internet page to the app associated with each result. In one implementation results may include a deep link that provides the results page for the user query for a particular app. In another implementation results may include teaser information information partially responsive to the user query or a link to a download page to encourage a user to purchase an app not currently downloaded on user device .

Results ranker may receive results and may rank results based on a ranking algorithm. For example results ranker may rank a particular result based on location of keywords and or frequency of keywords in comparison to other results . In one implementation results ranker may also retrieve context information from context data storage to use in the ranking algorithm. Results ranker may provide ranked apps results to display generator .

Display generator may receive ranked apps results and format the ranked apps results for presentation on a display. For example in the context of user device as media client display generator may format ranked apps results for presentation on display device . In the context of user device as mobile device display generator may format ranked apps results for presentation on an integrated display screen e.g. user interface .

Although shows example functional components of user device in other implementations user device may include fewer functional components different functional components differently arranged functional components or additional functional components than depicted in . Additionally or alternatively one or more functional components of user device may perform one or more other tasks described as being performed by one or more other functional components of user device . Furthermore in an implementation one or more functional components may be distributed among other devices such as device apps server and or execution server .

As further shown in app registry module may receive e.g. from a third party device via network a new app intended for use by user devices . The new app may include an executable portion that includes code to run the app on a user device and new app metadata that provides information for conducting e.g. by app searcher searches for potential apps responsive to a user query. App registry module may forward executable portion to an execution server e.g. execution server for executing apps in response to the user query from user device . App registry module may also forward executable portion to user device e.g. in response to a request from user device to download a particular app .

In conjunction with executable portion app registry module may separately or jointly forward new app metadata to app metadata storage which may reside within apps server and or user device . New app metadata may be provided for example only to user devices that have a cross application functionality enabled.

Although shows an example functional component of apps server in other implementations apps server may include different functional components differently arranged functional components or additional functional components than depicted in .

Process may include registering and storing app metadata block receiving a request from a user block and conducting a search for potential apps based on the metadata block . For example as described above in connection with metadata may be provided to app metadata storage in conjunction with downloading of an app to mobile device . App searcher may receive input from a user in the form a user query. For example a user may initiate a cross application execution feature on user device and provide a user query to identify an app for a particular function. For example user query may include the terms convert meters to feet. App searcher may communicate with app metadata storage to perform a search of metadata associated with locally stored apps. For example in the case of a user device app searcher may perform natural language processing a keyword search and or another type of search of information in app metadata storage to identify locally stored apps which may correspond to the user query.

Process may also include generating commands for potential apps block . For example as described above in connection with command generator may receive potential apps list and user query and from app searcher . Command generator may retrieve from app metadata storage command forms for each of the apps in potential apps list . In one implementation command generator may also retrieve from context data storage context information that may be used to supplement user query . For example context information may include dates times currently viewed programs currently used applications click through information or other context data. Command generator may apply user query command forms and context information to generate commands for each of the apps in potential apps list . Command generator may send commands to apps processor .

Process may further include executing the commands for each potential app block and generating results and links for each potential app block . For example as described above in connection with apps processor may receive commands and execute e.g. simultaneously or serially commands for each app in the list of potential apps. Apps processor may generate results for each of the apps based on commands and provide results to results ranker . Results may include images screen shots text other presentation formats and or a link e.g. a hyperlink to the local app or to an Internet page to the app associated with each result. In one implementation results may include a deep link that provides the results page for the user query for a particular app.

Process may further include ranking the results for each potential app block and formatting the results and links for presentation to a user block . For example as described above in connection with results ranker may receive results and may rank results based on a ranking algorithm. In one implementation results ranker may rank a particular result based on location of keywords and or frequency of keywords in comparison to other results . Additionally results ranker may retrieve context information from context data storage to use in the ranking algorithm. Results ranker may provide ranked apps results to display generator . Display generator may receive ranked apps results and format the ranked apps results for presentation on a display. For example in the context of user device as media client display generator may format ranked apps results for presentation on display device . In the context of user device as mobile device display generator may format ranked apps results for presentation on an integrated display screen e.g. user interface .

The user may choose to enable use of a cross application execution service provided on media client by the subscription television network to identify which app may best identify when the next original episode of The Traitor will be shown. In one implementation the user may signal media client to enable the cross application execution service using a menu screen on display device via remote control or a dedicated key on remote control . The signal from remote control may cause media client to present an interface not shown to accept a user query. Assume the user enters the query The Traitor Times. 

In response to the user s query in the cross application execution service media client may initiate a search e.g. using app metadata of apps available to media client . In one implementation the search may be limited to apps stored in e.g. previously downloaded to media client . In another implementation the search may include all apps available within the subscription television network. As described above in connection with for example media client may identify particular apps to provide a function associated with the user query The Traitor Times generate a command to execute each of the particular apps based on the user query and rank the results from each app. Media client may use contextual information to supplement terms from the user query and to help rank results from the executed apps.

As shown in results from apps identified and ranked by media client may be displayed on display device . Displayed app results may include an app for the television network associated with The Traitor e.g. TV Time an app for another television network associated with a program about a traitor e.g. History an app for a games site that may includes games about a traitor e.g. Games for You and an app for television program schedules e.g. Show Times . Using for example remote control the user may navigate to a particular screen section of display device and select an app to use. Alternatively the user may elect to return to a previous menu screen e.g. using a back option or other functionality of remote control .

The illustration of provides an example for providing a cross application execution service. Other formats and variations may be used. For example while shows four apps as being identified by media client in other implementations more or fewer apps may be displayed. Also while app results are shown using a split screen format other presentation formats may be used. Furthermore in another implementation a user may specify a particular number of apps to display and how they are presented.

Implementations described herein may provide systems and or methods that may receive from a user a query regarding services to be performed by an app and may conduct a search of metadata associated with a group of apps. The systems and or methods may select based on the search of the metadata potential apps from the group of apps that are responsive to the user query. The systems and or methods may also generate based on the user query and or the metadata commands to be executed by each of the potential apps. The systems and or methods may further generate based on the commands results from each of the potential apps and may format for presentation on a display the results from each of the potential apps.

The foregoing description provides illustration and description but is not intended to be exhaustive or to limit the implementations to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of systems and or methods disclosed herein.

For example while a series of blocks has been described with regard to the flowchart of the order of the blocks may differ in other implementations. Further non dependent blocks may be performed in parallel.

It will be apparent that example aspects as described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these aspects should not be construed as limiting. Thus the operation and behavior of the aspects were described without reference to the specific software code it being understood that software and control hardware could be designed to implement the aspects based on the description herein.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the invention. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification.

No element block or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on as used herein is intended to mean based at least in part on unless explicitly stated otherwise.

