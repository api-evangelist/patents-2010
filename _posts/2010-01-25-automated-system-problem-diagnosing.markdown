---

title: Automated system problem diagnosing
abstract: Embodiments of the invention relate to automated system problem diagnosing. An index is created with problem description information of previously diagnosed problems, a diagnosis for each problem, and a solution to each diagnosis. System states, traces and logs are extracted from a source system with a new problem. The problem diagnosis system generates problem description information of the new problem from the system states, traces and logs. Problem description information of the new problem is compared with problem description information in the problem description index. A search score is computed for each document in the problem description index. The search score is a measure of similarity between each document in the index and the description of the new problem. A matching score is assigned to each previously diagnosed problems based on the search score. The matching score is a measure of similarity between the new problem and each previously diagnosed problem. The system determines a diagnosis and solution of the new problem based on a diagnosis and solution of one of the previously diagnosed problems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08112667&OS=08112667&RS=08112667
owner: International Business Machines Corporation
number: 08112667
owner_city: Armonk
owner_country: US
publication_date: 20100125
---
Embodiments of the disclosure relate to the field of system problem diagnosis and in particular systems and methods for automatically diagnosing a system problem.

A system may encounter a problem which needs to be diagnosed. System problems may include a software or application error flaw mistake failure or fault that prevents the software from operating as intended by producing an incorrect or unexpected result. System problems may further include a firmware error such as a memory leak or a firmware bug. System problems may further include an operating system configuration error such as an adapter port configuration problem or a Logical Unit Number LUN configuration problem. System problems further includes a hardware error such as a power supply failure a fan failure a controller failure or a storage failure. System problems may further include a maintenance problem such as an adapter card failure during hardware replacement power failure during adding hardware or an internal power communication error during Remote Power Control RPC replacement. System problems may further include a network problem such as a Transmission Control Protocol and Internet Protocol TCP IP configuration error a TCP IP connectivity error a gateway error or Domain Name System DNS error.

System problem diagnosis generally involves analyzing information to determine the cause of a status change from a satisfactory system state to an unsatisfactory system state. For example a computer may be running as expected but may subsequently have a problem which causes the system to not operate as anticipated. Problem diagnosis involves an ability to detect a problem to yield information useful for diagnosing the problem. Problem diagnosis is based on an ability to analyze information generated by a system or an application to determine a root cause of the problem to determine an appropriate solution.

System problems may be diagnosed manually. Troubleshooting of systems may be done manually by technicians or engineers. For example a user may troubleshoot the system to find a problem. The user may view system information test hardware components and manually run tests to determine and diagnose a system or an application problem. Systems typically record information related to events in logs traces and system states which are useful for problem diagnosis. A technician may manually examine event information recorded by various system components applications and system states when there is a system problem. Previously diagnosed problems may also require manual troubleshooting to determine and diagnose a system or an application problem.

Embodiments of the invention relate to automated system problem diagnosis. An aspect of the invention includes a method for automatically diagnosing a system problem. The method receives a problem description index and problem description information of a new problem. The problem description index includes problem description information of previously diagnosed problems.

The method compares problem description information of the new problem with problem description information in the problem description index. The method computes a search score for each document in the problem description index. The search score is a measure of similarity between each document in the problem description index and the problem description information of the new problem. The method assigns a matching score to each of the previously diagnosed problems based on the search score. The matching score is a measure of similarity between the new problem and each of the previously diagnosed problems. The method determines a diagnosis of the new problem. The diagnosis of the new problem is a diagnosis of at least one of the previously diagnosed problems.

Another aspect of the invention includes a computer program product for automatically diagnosing a system problem. The computer program product includes a computer readable storage medium having computer readable program code embodied therewith. The computer readable program code includes computer readable program code configured to receive a problem description index and problem description information of a new problem. The problem description index includes problem description information of previously diagnosed problems.

The computer readable program code includes computer readable program code configured to compare problem description information of the new problem with problem description information in the problem description index. The computer readable program code further includes computer readable program code configured to compute a search score for each document in the problem description index. The search score is a measure of similarity between each document in the problem description index and the problem description information of the new problem. The computer readable program code further includes computer readable program code configured to assign a matching score to each of the previously diagnosed problems based on the search score. The matching score is a measure of similarity between the new problem and each of the previously diagnosed problems. The computer readable program code further includes computer readable program code configured to determine a diagnosis of the new problem. The diagnosis of the new problem is a diagnosis of at least one of the previously diagnosed problems.

Another aspect of the invention includes a system for automatically diagnosing a system problem. The system includes an index module configured to create a problem description index and update the problem description index with the problem description information of a new problem and a diagnosis of the new problem. The problem description index includes problem description information of previously diagnosed problems. The system further includes an extraction module configured to extract problem description information of a new problem. The system further includes a receiving module coupled to the extraction module and the indexing module and configured to receive the problem description index and problem description information of the new problem.

The system further includes a scoring module coupled to the receiving module and configured to compare problem description information of the new problem with problem description information in the problem description index. The scoring module is further configured to compute a search score for each document in the problem description index. The search score is a measure of similarity between each document in the problem description index and the problem description information of the new problem. The scoring module is further configured to assign a matching score to each of the previously diagnosed problems based on the search score. The matching score is a measure of similarity between the new problem and each of the previously diagnosed problems. The system further includes a diagnosis module coupled to the scoring module. The diagnosis module is configured to determine a diagnosis of the new problem. The diagnosis of the new problem is a diagnosis of at least one of the previously diagnosed problems. The diagnosis module is configured to determine a solution to the new problem from the diagnosis based on a solution of at least one of the previously diagnosed problems.

Other aspects and advantages of the present invention will become apparent from the following detailed description which when taken in conjunction with the drawings illustrate by way of example the principles of the invention.

The following description is made for the purpose of illustrating the general principles of the invention and is not meant to limit the inventive concepts claimed herein. Further particular features described herein can be used in combination with other described features in each of the various possible combinations and permutations. Unless otherwise specifically defined herein all terms are to be given their broadest possible interpretation including meanings implied from the specification as well as meanings understood by those skilled in the art and or as defined in dictionaries treatises etc. For example while the following description will be described in terms of system problem diagnosis processes modules and devices for clarity and to place the invention in context it should be kept in mind that the teachings herein may have broad application to all types of systems devices and applications.

The embodiments of the invention relate to automated system problem diagnosing. A problem diagnosis system includes an index created with problem description information of previously diagnosed problems a diagnosis for each of the previously diagnosed problem and may include a solution to each diagnosis. The problem diagnosis system extracts system states traces and logs from a source system with a new problem. The problem diagnosis system generates problem description information of the new problem from the system states traces and logs extracted from the source system.

Problem description information of the new problem is compared with problem description information in the problem description index. A search score is computed for each document in the problem description index. The search score is a measure of similarity between each document in the problem description index and the problem description information of the new problem. A matching score is assigned to each of the previously diagnosed problems based on the search score. The matching score is a measure of similarity between the new problem and each of the previously diagnosed problems. The problem diagnosis system determines a diagnosis and solution of the new problem based on a diagnosis and solution of one of the previously diagnosed problems.

The problem diagnosis system node is coupled to storage subsystem over connection according to one embodiment. For example storage subsystem may include but is not limited to a locally attached physical storage a network attached storage device NAS and a storage area network SAN . For example connection may include but is not limited to a local area network LAN a wide area network WAN or a fibre channel FC network. The storage subsystem includes a direct attached storage DAS device according to one embodiment. For example problem diagnosis system node is coupled to a DAS storage subsystem using Small Computer System Interface SCSI connection .

The problem description index may be created using but not limited to Lucene library based functionalities according to one embodiment Lucene is a trademark of The Apache Software Foundation . A Lucene Application Programming Interface API may provide for scalable indexing under high performance workloads and easy extensibility. The Lucene library based functionalities further include field based searching and sorting multiple index sorting and simultaneous updating and searching. The problem diagnosis system is cross platform versatile and able to handle different query types and sorting methodologies without code re factoring using the Lucene library based functionalities.

The problem description index may be created in various index structures. The problem description index is created as a line wise index according to one embodiment. The line wise index includes a document entry in the problem description information index for each line in the problem description information of previously diagnosed problems . The problem description index is created as a description wise index according to one embodiment. The description wise index includes a document entry in the problem description index for the problem description information of previously diagnosed problems . The problem description index is created as a set wise index according to one embodiment. The set wise index includes a document entry in the problem description index for problem description information of previously diagnosed problems .

At the receiving module receives problem description information of the new problem and the problem description index . The receiving module receives the problem description information from the previously diagnosed problems from the problem description index created by indexing module .

The problem description information of the new problem is extracted by the extraction module from system logs system traces and system states associated with a new problem. The system logs system traces and system states are recorded by the source system with the new problem. The extraction module extracts problem description information of the new problem from system logs system traces and system states when the new problem occurs on source system . The extraction module extracts the problem description information of the new problem from system logs system traces and system states by automatic extraction based on a tailored set of heuristic rules and domain knowledge according to one embodiment. The problem description information of the new problem is produced from the extracted information by the extraction module by mining a correlation between recorded system logs system traces and system states according to another embodiment.

The problem description information of the previously diagnosed problems in the problem description index and the problem description information of the new problem may include event information which describes a problem. The problem description information may contain content from a plurality of system events in system logs system traces or system state . The content of the problem description information may include text describing a plurality of system events that have occurred. The problem description information may further include metadata which provides information about data managed within a system. The problem description information may further include a problem cause. The problem description information may further include a problem type. The problem description information may further include problem identification ID . The problem description information may further include a problem set ID.

The problem diagnosis system may operate without the extraction module according to one embodiment. The problem description information of the new problem is extracted by manual extraction by an administrator according to one embodiment. A diagnosing administrator would extract problem description information of the new problem and enter the problem description information of the new problem into the problem diagnosis system to identify a problem diagnosis based on the problem description information of previously diagnosed problems .

The problem diagnosis system receives the problem description information from the problem description index and the problem description information of the new problem . The receiving module is configured to receive problem description index from the indexing module and problem description information of the new problem from the extraction module .

At the scoring module compares problem description information of the new problem with problem description information in the problem description index . The scoring module uses a plurality of fuzzy matching algorithms to compare problem description information of the new problem with problem description information in the problem description index . Contents of the problem description information of the new problem will be searched in the problem description index .

Comparing problem description information may be based on different levels of granularity. The plurality of different index comparison granularity searches may include a line wise search of the line wise index. The plurality of different index comparison granularity may further include a description wise search of the description wise index. The plurality of different index comparison granularity may further include a description wise search of the set wise index.

In line wise search of the line wise index each line in problem description information of a new problem l may be searched in the problem description index using an inclusive OR function. The inclusive OR function is a Boolean operator which returns a value of True if either or both of its operands is True. For example Query word word . . . word wherein all words in each line in the problem description information of the new problem are searched.

In line wise search of the line wise index similarity of problem description information of a new problem and a plurality of previously diagnosed problems in the problem description index is defined as follows. A new problem is defined as p. A problem set is defined as s. All problem sets as a whole are defined as S. For example a previously diagnosed problem p belonging to set s is defined as p s. A line including problem description information in a new problem p is represented as l. A line including problem description information in a previously diagnosed problem pis represented as l. A word or term in a line including problem description information is defined as w.

At the scoring module computes a search score for each document in the problem description index . The search score is a measure of similarity between each document in the problem description index and the problem description information of the new problem . Similarity between a line l in the problem description information of a new problem and a line in the problem description index l is obtained by normalizing the tf idf score of each word w in a line l in the problem description index .

The tf idf search is a standard feature selection technique for categorical data sets and is a statistical measure used to evaluate how important a word is to a document in a collection or corpus. Term frequency tf in a document is a measure of the importance of a term in a given document. Inverse document frequency idf is a measure of a general importance of a term. The tf idf score increases proportionally based on the number of times a word appears in a document and is offset by the frequency of the word in a corpus.

The tf idf score of each word w is normalized by taking the logarithm of the number of problem sets containing w plus 1 S 1 and then summing all normalized tf idf scores of all words in the line l together. The search score for line wise search of line wise index is defined as 

In a line wise search of the line wise index all terms in a line in the problem description index are searched. For each line in the problem description information of a new problem a search score is assigned to each document a document is a log line in this line wise index case in the problem description index in reference to a comparison with this new line. The documents lines in the problem description index with the highest search scores e.g. top matching documents are identified.

In a description wise search of the description wise index all terms in the problem description information of a new problem are searched for in the problem description index . A search score is assigned to each document the description of each previously diagnosed problem in description wise index case in the problem description index in reference to a comparison with the description information of the new problem . The documents e.g. top in the problem description index with the highest search scores are identified as top matching document.

In a description wise search of a description wise index The tf idf score tf idf w p can be calculated as follows 

The search score or the similarity between a new problem p and an old problem pis obtained by normalizing the tf idf score of each word w in pby taking the logarithm of S 1 the number of problem sets containing w plus 1 and then summing all normalized tf idf scores of all words in p together. The search scores are also the problem matching scores for a description wise search of a description wise index.

In a description wise search of the set wise index all terms in the problem description information of a new problem in the problem description index are searched. A search score is assigned to each document a plurality of problem descriptions of a previously diagnosed problem set in the problem description index in reference to a comparison with this new problem description . The problem sets e.g. top 10 in the problem description index with the highest search scores are identified. The search scores are also the problem set matching scores. The problem sets in the problem description index with the highest search scores are reported as a problem diagnosis.

In description wise search of a set wise index the search score or the problem set matching score or the similarity between a new problem p and a problem set s which may be defined as the sum of the tf idf score of each word w in s 

At the scoring module assigns a matching score to each of the previously diagnosed problems based on the search score. A matching score is assigned to each previously diagnosed problem or problem set in reference to the compared new problem for each comparison. The matching score is a measure of similarity between problem description information of the new problem and problem description information of the compared previously diagnosed problem.

In a line wise search of the line wise index after finding the matching documents lines in the problem description index with the highest search scores for all lines in the new problem description the search scores of all the matching documents are processed to generate the problem matching similarity scores or set matching similarity scores for the previously diagnosed problems based on the similarity definition for line wise search of a line wise index. The previously diagnosed problems or problem sets with the highest problem matching scores or set matching scores e.g. top 5 or 10 problems or sets are reported as a problem diagnosis.

In a line wise search of a line wise index similarity between problem description information of a new problem p and a plurality of previously diagnosed problems in the problem description index included in a problem set s may be defined as 

Sim p s is the problem set matching similarity score between the new problem description and the descriptions of a plurality of previously diagnosed problems in the problem description index . Sim p p is the problem matching similarity score between the new problem description and the description of a previously diagnosed problem in the problem description index . Sim l p is the matching score between a line in the new problem description and the description of a previously diagnosed problem in the problem description index .

For example the search score for Query is the sum of the tf idf score of each term wherein Query term term . . . term. All terms from a line in the new description will be searched together in the previously diagnosed problem description information index by using an OR relation. The top M matching documents problem description information lines in problem description index which have the highest tf idf scores for the line query will be identified. After getting the top M matching problem description information lines for each line in the problem description information of the new problem the search scores of all top matching problem description information lines may be further processed to generate the corresponding top N matching problems or sets based on the similarity definition. The top M matching problem description information lines may be large for example top M 200. The top N matching problems or sets may be small for example N 5.

In a description wise search of the description wise index the search scores of the top matching documents e.g. top with the highest search scores in the problem description index are processed to generate the problem matching similarity scores or set matching similarity scores for the previously diagnosed problems. The problem matching scores or set matching scores are based on the similarity definition for description wise search of a description wise index. The previously diagnosed problems or problem sets with the highest problem matching scores or set matching scores e.g. top 5 or 10 problems or sets are reported as a problem diagnosis.

In a description wise search of a description wise index the problem matching similarity score is the search score which is defined previously. The problem set matching similarity score or the similarity between a new problem p and a problem set s may be defined as 

In a description wise search of a set wise index the problem set matching score is the search score which is defined previously.

At the diagnosis module determines a diagnosis of the new problem from a diagnosis of at least one of the previously diagnosed problems in the problem description index based on the assigned matching scores. The assigned matching scores are processed to determine a candidate diagnosis or a plurality of candidate diagnoses of the new problem. A user may update the problem description information of a new problem and re select a diagnosis of the new problem until appropriate problem description information is identified.

At the diagnosis module determines a solution to the new problem based on the corresponding diagnosis. The diagnosis module determines a solution in reference to the selected candidate diagnose s in the problem description index .

At the indexing module updates the problem description index with the diagnosis solution and problem description information of the new problem when the new problem is resolved. The new problem becomes a historical problem after the new problem is resolved. A problem description of a new problem including a problem cause and problem type is added into the problem description index to assist with diagnosing similar problems in the future. The index module allows problem description information in the problem description index to be de prioritized or removed if the diagnosed problem may not occur again. Problem description information may be removed line wise and description wise or updated set wise from the index if the diagnosed problem may not occur again.

The indexing module uses a Configuration Management Version Control CMVC software package or other software packages which document the diagnosis process of the previously diagnosed problems according to an embodiment of the invention. The problem description index is also updated using CMVC logs which include additional information including comments problem descriptions from technicians and administrative information which may or may not be retained.

The problem description index may further include unfiltered logs including raw logs of historical problems. Filtered logs are logs which have been previously processed through a troubleshooting technician. Filtered logs are likely to have a higher signal to noise ratio than unfiltered logs. Once the administrator resolves the problem the administrator documents the original input and diagnosis result into a CMVC file describing that problem. The indexing module incorporates the input logs and diagnosis result into the problem description index .

Diagnosis efficiency and accuracy is improved by processing the similarity for approximation and noise reduction. Approximations on problem set frequency matching lines and problem set similarity are made to the base similarity matching definition to reduce a problem set similarity matching calculation overhead using a plurality of fuzzy matching algorithms. For noise reduction raw log lines contain lots of noise wherein the noise negatively impacts diagnosis accuracy.

In a line wise search of a line wise index processing for approximation includes normalizing the tf idf score of each term word in the problem description information of the new problem based on the set frequency of the line containing this term in the in the problem description information of the new problem also being located in problem description information of the plurality of previously diagnosed problems in the problem description index .

In a line wise search of a line wise index processing for approximation further includes for each line l in problem description information of the new problem the approximated similarity only considers the top M matching problem description information lines with highest aggregated tfidf scores tfidf w l . Therefore 

This is because a line l in the problem description index will be involved in the similarity calculation if l a line in the new problem description and lshare words. In another word if 0. Therefore the number of matching index lines for each line l in the problem description information of the new problem may be large because the amount of information indexed is large. This may cause large overhead in the similarity calculation.

Processing for approximation further includes the set similarity calculation only considers the top X e.g. X 5 problems with highest problem similarities Sim p p instead of calculating set similarity based on all problem similarities in a line wise search of a line wise index.

In a line wise search of a line wise index problem diagnosis efficiency and accuracy may be improved using a plurality of noise reduction techniques. Raw log lines contain lots of noise wherein the noise negatively impacts diagnosis accuracy.

Processing for noise reduction in a line wise search of a line wise index further includes omitting a timestamp and a sequence number identifier from the problem description information of the previously diagnosed problems in the problem description index and from the problem description information of the new problem . The scoring module ignores the temporal information between log lines because timestamp and sequence number information is irrelevant for classification.

Processing for noise reduction in a line wise search of a line wise index further includes removing duplicate problem description lines of problem description information of previously diagnosed problems in the problem description index . Important and trivial lines in problem description information could be duplicated. Duplicate lines do not provide any further problem description information. The scoring module is configured to retain a single instance of duplicated lines in problem description information.

In a line wise search of a line wise index processing for noise reduction further includes normalizing the matching score similarity between a line in the problem description information of the new problem and a description of a previously diagnosed problem on the number of similar lines in the new problem description to this line. Similar lines in the problem description information of the new problem and the problem description index which is trivial may skew a comparison away from more important problem description information. Therefore Sim l p is normalized by similarLinesl 1 the number of lines similar to lplus 1.

Processing for noise reduction in a line wise search of a line wise index further includes filtering out the effect of irrelevant logs lines on problem or set similarity calculation by filtering out the low similarity score of Sim l p . The scoring module uses a score filter threshold on Sim l p for noise reduction.

In description wise search of a description wise index approximations on problem set frequency matching problems and problem set similarity are made to the base similarity matching definition to reduce a problem set similarity matching calculation overhead using a plurality of fuzzy matching algorithms.

Processing for approximation in a description wise search of a description wise index includes normalizing the tf idf score of each term word in the problem description information of the new problem based on the set frequency of the problem description information of the new problem being located in problem description information of the plurality of previously diagnosed problems in the problem description index .

Processing for approximation in description wise search of a description wise index further includes for the problem description information of the new problem the approximated similarity only considers the top M matching documents problem descriptions in the problem description index with highest aggregated tf idf search scores tfidf w p . Therefore 

This is because a previously diagnosed problem pin the problem description index will be involved in the similarity calculation if the problem description information of the new problem p and the previously diagnosed problem p share words. For example 0 Therefore the number of matching problems for the problem description information of the new problem may be large because the amount of information indexed is large. This may cause large overhead in the similarity calculation.

In description wise search of a description wise index processing for approximation further includes the set similarity calculation only considers the top X e.g. X 5 problems with highest problem similarities Sim p p instead of calculating set similarity based on all problem similarities.

In description wise search of a description wise index problem diagnosis efficiency and accuracy may be improved using a plurality of noise reduction techniques. Raw log lines contain lots of noise wherein the noise negatively impacts diagnosis accuracy.

Processing for noise reduction in description wise search of a description wise index includes omitting a timestamp and a sequence number identifier from the problem description information of the previously diagnosed problems in the problem description index and from the problem description information of the new problem according to one embodiment. The scoring module ignores the temporal information between log lines because timestamp and sequence number information is irrelevant for classification.

In description wise search of a description wise index processing for noise reduction includes further includes removing duplicate problem description lines of the problem description information of previously diagnosed problems in the problem description index according to one embodiment. Important and trivial lines in problem description information could be duplicated. Duplicate lines do not provide any further problem description information. The scoring module is configured to retain a single instance of duplicated lines in problem description information.

In a description wise search of a set wise index problem diagnosis efficiency and accuracy may be improved using a plurality of noise reduction techniques. Raw log lines contain lots of noise wherein the noise negatively impacts diagnosis accuracy.

Processing for noise reduction includes in a description wise search of a set wise index includes omitting a timestamp and a sequence number identifier from the problem description information of the previously diagnosed problems in the problem description index and from the problem description information of the new problem according to one embodiment. The scoring module ignores the temporal information between log lines because timestamp and sequence number information is irrelevant for classification.

Processing for noise reduction includes in a description wise search of a set wise index further includes removing duplicate problem description lines of the problem description information of previously diagnosed problems in the problem description index according to one embodiment. Important and trivial lines in problem description information could be duplicated. Duplicate lines do not provide any further problem description information. The scoring module is configured to retain a single instance of duplicated lines inside each problem description information.

The one or more processors execute instructions in order to perform whatever software routines the computing system implements. The instructions frequently involve some sort of operation performed upon data. Both data and instructions are stored in system memory and cache . Cache is typically designed to have shorter latency times than system memory . For example cache might be integrated onto the same silicon chip s as the processor s and or constructed with faster SRAM cells whilst system memory might be constructed with slower DRAM cells. By tending to store more frequently used instructions and data in the cache as opposed to the system memory the overall performance efficiency of the computing system improves.

System memory is deliberately made available to other components within the computing system. For example the data received from various interfaces to the computing system e.g. keyboard and mouse printer port LAN port modem port etc. or retrieved from an internal storage element of the computing system e.g. hard disk drive are often temporarily queued into system memory prior to their being operated upon by the one or more processor s in the implementation of a software program. Similarly data that a software program determines should be sent from the computing system to an outside entity through one of the computing system interfaces or stored into an internal storage element is often temporarily queued in system memory prior to its being transmitted or stored.

The ICH is responsible for ensuring that such data is properly passed between the system memory and its appropriate corresponding computing system.

One or more I O devices are also implemented in a typical computing system. I O devices generally are responsible for transferring data to and or from the computing system e.g. a networking adapter or for large scale non volatile storage within the computing system e.g. hard disk drive . ICH has bi directional point to point links between itself and the observed I O devices .

Referring back to modules of the different embodiments of the described system may include software hardware firmware or any combination thereof. The modules may be software programs available to the public or special or general purpose processors running proprietary or public software. The software may also be specialized programs written specifically for signature creation and organization and recompilation management. For example storage of the system may include but is not limited to hardware such as floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs flash magnetic or optical cards propagation media or other type of media machine readable medium .

In addition elements of the present invention may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs flash magnetic or optical cards propagation media or other type of media machine readable medium suitable for storing electronic instructions.

For the exemplary methods illustrated in embodiments of the invention may include the various processes as set forth above. The processes may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these processes may be performed by specific hardware components that contain hardwired logic for performing the processes or by any combination of programmed computer components and custom hardware components.

Embodiments of the invention do not require all of the various processes presented and it may be conceived by one skilled in the art as to how to practice the embodiments of the invention without specific processes presented or with extra processes not presented.

The foregoing description of the embodiments of the invention has been presented only for the purpose of illustration and description and is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Numerous modifications and adaptations are apparent to those skilled in the art without departing from the spirit and scope of the invention.

