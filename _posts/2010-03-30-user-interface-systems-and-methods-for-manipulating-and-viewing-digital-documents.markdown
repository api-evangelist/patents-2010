---

title: User interface systems and methods for manipulating and viewing digital documents
abstract: A tool document file may also be stored in the memory and may provide an internal representation of a document providing an image that is representative of a graphical tool. Associated with a tool document can be tool code that is capable of processing the content document file to create an internal representation of the contents that presents the content in a manner that achieves a display effect associated with the tool. The device will also include parsing code that processes the content document file, the tool document file, and the processed internal representation to generate a screen document for display on the touch sensitive display in a manner that portrays the display effect.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08358290&OS=08358290&RS=08358290
owner: Samsung Electronics Co., Ltd.
number: 08358290
owner_city: Samsung-ro, Yeongtong-gu, Suwon-si, Gyeonggi-do
owner_country: KR
publication_date: 20100330
---
This application is a continuation of U.S. patent application Ser. No. 12 242 066 entitled User Interface Systems and Methods for Manipulating and Viewing Digital Documents filed Sep. 30 2008 which is a continuation of U.S. patent application Ser. No. 09 835 458 titled User Interface Systems and Methods for Manipulating and Viewing Digital Documents and filed Apr. 16 2001 now U.S. Pat. No. 7 450 114 which is a continuation in part of U.S. patent application Ser. No. 09 703 502 titled Systems and Methods for Digital Document Processing and filed Oct. 31 2000 now U.S. Pat. No. 7 055 095 issued May 30 2006 both of which claim priority to British patent application No. 0009129.8 titled Digital Document Processing and filed Apr. 14 2000 and the contents of all of which are herein incorporated by reference.

The systems and methods described herein relate to systems and methods for viewing and manipulating a display of digital documents and more particularly to user interface systems and methods that allow a user to manipulate and view a digital document presented on a display such as the display of a hand held electronic device such as a computer mobile communicator or phone or a display device associated with a tactile commander.

Today there is a strong effort to build mobile and handheld computing devices that easily allow users to view documents email video presentations and other forms of content. To achieve this convergence engineers and scientists have developed systems including the systems described in the above referenced U.S. patent application Ser. No. 09 703 502 entitled Systems and Methods for Digital Document Processing the contents of which are hereby incorporated by reference. As described therein digital content whether a document audio visual presentation or some other type of content is processed by a software system operating on a handheld device mobile device or some other platform and translated into a uniform internal representation that can be processed and manipulated by the software system so that a display of different types of content can be generated by the system and presented on the screen display of the respective device.

These systems as well as other handheld and mobile computing systems such as the Palm Pilot Compaq Ipaq and mobile phones are therefore capable of providing a display of content to a user. However these handheld and mobile systems are typically limited to simple input devices such as small and limited keyboards commonly the keyboards present on a cellular phone or by small touch screen systems such as the touch screens provided with the Palm computing device. Therefore although these systems are capable of presenting content to a user wherein the content can be quite complex these systems have limited capacity to allow a user to manipulate the display of that content such as by paging through the different pages of a document or selecting different portions of a document. Therefore although these handheld and portable systems may be quite useful there are limitations to their use based in part on the user interfaces available for supporting the manipulation and viewing of the content presented on these devices.

Consequently there is a need in the art for systems and methods that provide improved user interface tools that make it more facile to manipulate and view content presented by a handheld or portable device.

Additionally there is a need in the art for user interface tools that allow for the manipulation of content when that content is separated from its native application program.

The systems and methods described herein provide advanced user interface tools that allow a user to more easily manipulate and view content presented on a mobile device or handheld device. In one particular embodiment the systems and methods described herein provide a graphical user interface that exhibits a touch and feel user interface experience. More specifically the systems and methods described herein include hand held or mobile computer devices having a system for simulating tactile control over a document which may be viewed on the device itself or through a remote instruction or remote display on another unit. These systems may include a housing which supports a processor memory and a touch sensitive display or display with remote touch sensitive control system code stored within the memory and adapted to be executed by the processor. The system code may generate or provide a digital representation of a document wherein the digital representation may include data content and a page structure representative of the page layout of the document. Thus in certain applications the rendered image can include the content of the document as well as the layout of the document thereby providing an image of what the document physically looks like. The system may also include a rendering engine that may include a parser and a renderer for rendering at least a portion of the page layout of the digital representation on the touch sensitive display. A screen monitor can monitor the touch sensitive screen for detecting movement across a surface of the touch sensitive screen and an interface process can process the detected movement to detect a motion representative of a command to alter the page structure of the digital representation. A navigation module may be responsive to the interface process and can change the rendered portion of the page layout. Thus by altering the rendered portion of the page layout the system allows a user to navigate through the digital representation of the document. Although the systems and methods of the invention will have applicability and value when used in other applications and on other types of systems for purposes of illustration the invention will be described with reference to those applications where the systems facilitate the navigation of documents presented on a hand held computing device.

According to one aspect the invention relates to a computing device having a display and a processor. The processor is configured to display the content of a document on the display. In response to a user input the processor adjusts the graphic properties of selected portions of the document thereby adjusting the prominence of the selected portions relative to other portions of the document. The user input may be a slider control which may be implemented e.g. on a touch screen. The selected portions of the document may be hyperlinks or highlighted text or they may be a combination of both. In one embodiment the graphic properties to be adjusted is the alpha transparency of the selected portions and relative prominence is adjusted by adjusting the alpha transparency of the selected portions of the document. The processor displays the content of the document using the adjusted graphic properties.

In another aspect the systems and methods described herein provide among other things computer devices having a system for simulating tactile control over a document. In one embodiment these systems comprise a processor memory and a display system code stored within the memory and adapted to be executed by the processor the system code providing a digital representation of a document including data content and a page structure representative of a page layout of the document a rendering engine for rendering at least a portion of the page layout of the digital representation on the display a screen monitor for monitoring the screen to detect movement of an object across an image presented on the display an interface process for processing the detected movement to detect a motion representative of a command to alter the rendered page structure of the digital representation and a navigation module responsive to the interface process for changing the rendered portion of the page layout wherein altering the rendered portion of the page layout allows a user to navigate through the digital representation of the document.

These computer devices can include touch sensitive displays where the screen monitor monitors a touch sensitive screen for detecting movement across a surface of the touch sensitive display as well as computer displays capable of depicting a cursor moving across a screen of the display and wherein the screen monitor detects movement of the cursor across a surface of the display. The processor memory screen monitor and a display may be arranged as a data processing platform useful with a plurality of applications and devices including hand held computers telephones mobile data terminal a set top box an embedded processor a notebook computer a computer workstation a printer a copier and a facsimile machine.

In certain optional embodiments the computer device may also include a velocity detector for determining a velocity vector associated with motion detected across the surface of the touch sensitive display as well as means for applying a velocity characteristic to a document within a display.

Additionally these computer devices can have interface processes that make it more easy to navigate through a document or a collection of documents and other content. These interface processes can include a page flip detector for detecting a motion across the surface of the touch screen at a location presenting a portion of the page layout graphically representative of a corner of a document. The page flip detector can render a portion of the page layout representative of a page adjacent a currently rendered page. Similarly the device can include a page curl detector for rendering a portion of the page layout representative of a portion of a page adjacent a currently rendered page. Additionally the interface process can include a gesturing process for detecting a predefined movement representative of a command for selecting a portion of the page layout to be rendered or for altering data content of the digital representation of the document. Still further interface controls include processes for controlling a transparency characteristic of a document presented on the display and for controlling a transparency characteristic of selected portions of the document for adjusting visibility of the selected portions relative to other portions of the document. Other interface processes can provide tools including tools representative of a magnifying tool a ruler a text entry cursor a thumbnail navigation column a thumbnail view of linked content and a query tool.

In still other aspects the invention provides computer devices and related processes having a context sensitive graphical interface tool. These devices may comprise a processor memory and a touch sensitive display a content document file stored in the memory and being representative of an internal representation of the content a tool document file stored in the memory and providing an internal representation of a document providing an image that is representative of the graphical interface tool tool code capable of running of the processor and being associated with the tool document file and capable of processing the content document file to create an internal representation of the content that when rendered presents the content in a manner that achieves a display effect associated with the tool parsing code that processes the content document file the tool document file and the processed internal representation to generate a screen document for display and interface code capable of running on the processor for allowing a user to arrange the image of the graphical interface tool into a selected contextual relationship over the rendered content and for directing the tool code to process a portion of the content document file associated with the selected position.

The contextual relationship between the graphical interface tool and the rendered content can vary depending upon the application and may for example be selected from the group consisting of the relative position of the graphical interface tool and the rendered content the time at which the graphical interface tool acts on the rendered content and the state of the rendered content. These devices are flexible and may be embodied in different forms and devices including but not being limited to a hand held computer a telephone mobile data terminals a set top box an embedded processor a notebook computer a computer workstation a printer a copier and a facsimile machine as well as in car systems and domestic devices such as audio players microwaves refrigerators and washing machines.

However it will be understood by those of ordinary skill in the art that these interface tools may be employed in other applications including applications wherein content is displayed on a conventional computer workstation that includes typical input tools such as a standard keyboard and a mouse. Additionally it will be understood that the systems and methods described herein also provide useful tools for providing interfaces for embedded display systems such as embedded visual displays employed as output devices. Examples of such embedded display systems can include cellular phones copy machines that include a visual touch screen display that allows a user to select different options for performing a copy job and which may also present images to the user of the documents being copied. Other examples may include fax machines wherein visual displays are provided to a user to allow a user to view a depiction of an incoming fax. Other embodiments and applications of the user interface systems and methods described herein will be apparent to those of ordinary skill in the art.

More particularly the systems and methods described herein provide user interface tools that allow a user to manipulate content displayed on a screen. In particular the systems and methods described herein provide software systems that create an abstraction layer for information that is to be presented on a display. This abstraction layer includes a document object wherein a document object contains information or content that is to be displayed on a screen. In one implementation all information displayed on a screen is treated as one document. Thus at the highest level the entire contents of a screen is understood as one document object. Further to this embodiment it will be understood that a document object may contain other document objects each of which may contain a subset of the content displayed to the user. Thus at the screen level all information displayed will be understood as a single document wherein items such as web pages streamed video and graphical icons presented on the screen are each understood separately as document objects contained within the high level screen document object. Therefore all content displayed on a screen is treated abstractly as a document and this paradigm holds whether the content being displayed is information representative of a page of text or information representative of a user interface tool or window desktop furniture. Accordingly the user interface systems and methods described herein provide user interface tools and functionality for allowing a user to manipulate document objects presented on a screen display.

Additionally the systems and methods described herein provide in one embodiment a handheld computing device that comprises a housing which supports a processor memory and a touch sensitive display. Further the computing device may include system code stored within the memory and adapted to be executed by the processor. The system code can process an input byte stream that is representative of content to be displayed on the touch sensitive display and can generate a content document file representative of an internal representation of the content. A tool document file may also be stored in the memory and may provide an internal representation of a document providing an image that is representative of a graphical tool. Associated with a tool document can be tool code that is capable of processing the content document file to create an internal representation of the content that presents the content in a manner that achieves a display effect associated with the tool. The device may also include parsing code that processes the content document file the tool document file and the processed internal representation to generate a screen document for display on the touch sensitive display in a manner that portrays the display effect.

The systems and methods described herein include systems and methods for manipulating and viewing documents displayed on a viewing surface such as a computer terminal a display screen a printer plotter or any other output device suitable for creating a visual representation of human readable information. For the purpose of illustration the systems and methods will be described with reference to certain exemplary embodiments including hand held computer systems that include touch screen displays and which are capable of displaying an integrated view of content produced in different formats. In particular the systems and methods described herein include graphical user interface tools that are capable of presenting tools that can be presented as content that will be integrated along with other content being displayed on the screen.

In the depicted embodiment the display can present the images of a plurality of different documents. Each of the representative outputs appearing on display is termed a document and each of the depicted documents can be associated with one separate application program such as Word Netscape Navigator Real Player Adobe Visio and other types of applications. It will be understood that the term document as used herein will encompass documents streamed video web pages and any other form of data that can be processed and displayed by the computer process .

The computer process generates a single output display that includes within that display one or more of the documents. The collection of displayed documents represent the content generated by the application programs and this content is displayed within the program window generated by the computer process . The program window for the computer process may also include a set of icons representative of tools provided with the graphical user interface and capable of allowing a user to control the operation in this case the display of the documents appearing in the program window.

For the illustrated embodiment the display presents content representative of different data types in a single integrated display. This is in contrast to the conventional approach of having each application program form its own display which results in a presentation on the display device that includes several program windows typically one for each application program. Additionally each different type of program window would include a different set of user interface tools for manipulating the content displayed in that window. Thus the system depicted in creates an integrated display that contains viewable images of documents of different types. This includes web pages that would normally be viewed in a browser word documents that would normally be viewed in a viewer or word processing document PDF documents that would normally be viewed in a vector graphic reader and streaming video that would normally be viewed in a video player. Thus the depicted system separates the content of these documents from the underlying application program and presents them for display on the screen .

To allow a user to manipulate the depicted documents the system depicted in provides a set of tools that can be used to navigate through a collection of documents whether it is a multi page text document the pages of a web site or a series of time varying images that make up a video presentation. To this end as will be explained in greater detail below the system creates documents that are representative of tools and which may be displayed by the system just as system would display any other type of document. Thus the system of the invention has the advantage of providing a consistent user interface and only requiring knowledge of one set of tools for displaying and controlling the different documents.

As discussed above each source document is associated with a document agent that is capable of translating the incoming document into an internal representation of the content of that source document . To identify the appropriate document agent to process a source document the system of includes an application dispatcher not shown that controls the interface between application programs and the system . In one practice an external application programming interface API communicates with the application dispatcher which passes data calls the appropriate document agent or otherwise carries out a request made by an application program. To select the appropriate document agent for a particular source document the application dispatcher advertises the source document to all the loaded document agents . These document agents then respond with information regarding their particular suitability for translating the content of the published source document . Once the document agents have responded the application dispatcher selects a document agent and passes a pointer such as a URI of the source document to the selected document agent .

As shown in the document agent employs the library of standard object types to generate the internal representation which describes the content of the source document in terms of a collection of document objects as defined in the library together with parameters defining the properties of specific instances of the various document objects within the document. The document object types employed in the internal representation will typically include text bitmap graphics and vector graphics which may or may not be animated and which may be two or three dimensional video audio and a variety of types of interactive objects such as buttons and icons. Vector graphics document objects may be PostScript like paths with specified fill and transparency. Text document objects may declare a region of stylized text.

Once documents are translated into an internal representation of document objects these objects are passed to the parser renderer . The parser renderer generates a context specific representation or view of the documents represented by the internal representation . The required view may be of all the documents a whole document or of parts of one or some of the documents. The parser renderer receives view control inputs which define the viewing context and any related temporal parameters of the specific document view which is to be generated. For example the system may be required to generate a zoomed view of part of a document and then to pan or scroll the zoomed view to display adjacent portions of the document. The view control inputs are interpreted by the parser renderer to determine which parts of the internal representation are required for a particular view and how when and for how long the view is to be displayed.

The context specific representation view is expressed in terms of primitive figures and parameters. Optionally there may be a feedback path between the parser renderer and the internal representation e.g. for the purpose of triggering an update of the content of the internal representation such as in the case where the source document represented by the internal representation comprises a time varying multi frame animation.

Each source document provides a digital representation of a document such as a text document a spread sheet or some other document. The document agent creates an internal representation of that document. In one practice the created digital representation includes information that describes the page layout of the document including information about page size margins and other page layout information. The digital representation also includes information about the content of the source document such as the text figures and other content information that appears in the document. Processes for translating a known file structure into another structure are known in the art including systems that identify page structure and content information. Any of the suitable techniques for performing this operation may be practiced without departing from the scope of the invention.

The output from the parser renderer expresses the document in terms of primitive figures. For each document object the representation from the parser renderer defines the object at least in terms of a physical rectangular boundary box the actual shape of the object bounded by the boundary box the data content of the object and its transparency. The shape processor interprets the primitive object and converts it into an output frame format appropriate to the target output device e.g. a dot map for a printer vector instruction set for a plotter or bitmap for a display device. An output control input connects to the shape processor and can deliver user interface control signals to generate an output suitable for a particular output device . Thus the parser renderer and the shape processor can act as an engine that renders portions of the page layout and page content on the display .

Additionally depicts a tool document file . The tool document file may be a computer data file that stores information representative of an image wherein that image may represent a tool such as a magnifying glass a cursor a ruler or any other type of tool. For the purpose of illustration the system depicted in will now be described with reference to an example wherein the tool document file includes data that is representative of a graphical image of a magnifying glass. The magnifying glass image will be associated with a function that allows a user to magnify the image of a document stored on the display by passing the magnifying glass over the respective image. As will be described in greater detail hereafter the magnifying glass can include a central lens portion wherein portions of a document that fall under the lens of the magnifying glass appear to the user to be magnified and therefore are presented in an enlarged format relative to the rest of the underlying document. Although the below example will be described primarily with reference to the magnifying glass tool it will be obvious to those of ordinary skill in the art that other types of tools may be provided using the systems and methods described herein and all such tools will be understood to fall within the scope of the invention.

Turning to the operation of the magnifying glass tool can be seen. Specifically depicts the display wherein the display presents a screen document that comprises a plurality of sub elements including the document the thumbnail document the magnifying glass document and the lens document . The display presents the screen as a single integrated document that contains sub documents through . The content provided for creating the screen can come from one or a plurality of source documents whose content appears as the document and thumbnail document . The screen document also comprises content provided by the tool document file that in this example contains data according to an internal representation data format wherein that data represents the image of the magnifying glass . Additionally the tool document file may contain a portal object that creates a further document by processing the appropriate portion of the screen document to present that content in an enlarged format to appear as the magnified document appearing within the lens of the magnifying glass . Thus the document appearing within the lens is derived from the underlying document and therefore this derived document changes according to the context in which the magnifying glass tool is employed. Accordingly the specific behavior for the tool can vary depending on the context of its use. For example a magnifying glass tool may be associated with tool code that processes differently the content of a content document having map data than a content document having text. For example with a map the magnifying glass tool may process the associated content document to render handles within the associated document structure that are tagged as only to be shown within a view created by a magnifying glass. Thus the derived document presented within the magnifying glass tool can include additional information such as street names tourist sites public transportation locations notations or other information. In this operation the magnifying glass tool responds to the context of the application which is the rendering of a view of a map. In other applications where the magnifying glass tool is employed on text the behavior of the tool may result in changes to the color or style of the text or could result in the presentation of text editing tools and user interface controls such as control buttons pull down menus annotation information text bubbles or other types of information.

Accordingly the screen document is an integration and aggregation of information contained within a source document and a tool document file . An application program associated with the tool document file can process the appropriate content to create the enlarged view . The magnifying tool and the associated source code are capable of identifying that portion of the screen document that is to be presented in an enlarged format to create the enlarged view . The tool code is further capable of processing the selected content to create the enlarged view and clip that enlarged view within the lens area of the magnifying glass to achieve the display affect of an enlarged region of the screen . Thus the tool document and the source document are in the same internal representation and thus can be merged into the screen document that can be rendered by the parser renderer .

In one embodiment the graphical tool may be moved over the screen by dragging with a cursor or if a touch sensitive screen is present by dragging a stylus or some other pointer across the screen of the display. To process this movement the display may include a screen monitoring process for monitoring the screen of the display to detect movement of a cursor stylus or some other pointer across the images of the documents presented on the screen. Such screen monitoring processes are known in the art and any suitable process may be employed. The monitor process therefore allows a user sense of tactile control over the visual representation of the document . The movements detected by the screen monitor process may be passed to an interface process that processes the detected motion to detect a motion representative of a known command. The interface process may be a separate process or may be part of the screen monitor process as is common in the art. As the interface module detects commands to move the tool a navigation module can create input signals that direct the parser render to create a new display for presentation to the user wherein the display will show the tool repositioned as the user wanted.

Accordingly the system depicted in is capable of providing a graphical user interface tool that may be integrated into a screen display that represents a single document which contains a plurality of sub documents some of which sub documents include the graphical tools themselves. The power of this approach allows for the development of novel graphical user interface tools that allow a user to manipulate and view a document on a display and to simulate tactile control over the depicted documents. These systems and methods are particularly well suited to use on hand held and mobile computing platforms where traditional input tools are lacking. Additional graphical user interface tools that may be provided by the systems and methods described herein include the bubble thumbnail graphical tool depicted in . Specifically depicts the screen display that includes a screen document which comprises a plurality of sub documents including the document and the thumbnail documents through . As shown in the document may be presented as a large document employing most of the viewing area of the display . In this embodiment the thumbnail documents through are arranged in a vertical column within the screen document at a position adjacent the left side of the display . The thumbnail documents through vary in size with the largest thumbnail document being centrally positioned within the vertical array of thumbnail documents.

As further shown by as documents in the vertical array increase in distance from the center document the documents decrease in size. The measure of distance from the center document may be representative of the distance in pages from the document or may be representative of some other measure of distance or difference such as the amount of time that has passed since the document was last viewed the difference in alphabetical order or some other characteristic. Thus documents and which are adjacent the central document are somewhat smaller than the document . Further documents and which are adjacent documents and respectively and further from document are smaller than documents and still. The decrease in size of documents continues from documents and each of which is still smaller. The impression created by the array of thumbnail documents through is employed to indicate that document the largest document is representative of the document being displayed within the largest viewing area of the screen document . Documents through get smaller in proportion to the distance from the current viewing page . Accordingly the vertical column of thumbnail document through provide a navigation tool that a user can employ for selecting a document to appear within the large viewing area of the display . Additionally the user can select a document within the vertical array of thumbnails to choose a new document to appear within the viewing area. For example in those applications where the screen display is a touch sensitive screen display the user may activate a new document to appear within the viewing area by touching the respective thumbnail document within the array of documents through . In those applications where the user is provided a keyboard or a mouse the user may employ that particular input device for selecting which of the documents within the array of documents that the user would like to appear within the viewing area. In an optional embodiment the user can scroll through the thumbnails to find the document of interest. Optionally scrolling through the thumbnail documents can result in the document changing with the scrolling of the document. Alternatively the scrolling of the thumbnail documents can occur independently from any changing of the document with the document only changing when a new thumbnail document is selected.

Accordingly as the systems and processes described herein may employ thumbnail images for queuing a user during navigation to generate thumbnail images the systems and processes described herein can include any suitable thumbnail generator processes including those known in the art including those thumbnail generations that generate live or animated thumbnails.

Turning to a further graphical user interface tool is presented wherein a document includes links . Moreover the links may be associated with a floating thumbnail document . As shown in a control may be presented to the user. Upon activating the control those links within the document may be associated with a floating thumbnail representative of a page view of the page associated with the respective link . Additionally depicts that in one option practice the display may further include a collegian of read ahead thumbnail documents . The thumbnail documents may be representative of those documents that are associated with links within document or that are associated with other pages of the document when that document is a multipage document.

Particularly depicts text entry step wherein the cursor plate appears on the display of the device . A user may trace a letter within space defined by the cursor or in another area and optionally the tracings may appear within the area defined by the text entry cursor . The tracings entered by the user may be processed by a character recognition system of the type known in the art to associate these markings with a character such as the letter L in this example. As shown in step once character recognition has been completed the recognized character L may be presented on the display and the cursor may move or the text may scroll but in either case the cursor becomes available for the user to enter more text. Thus as shown in step the user may enter text until a word is formed. In step upon entry of a complete word the user may move the cursor a space away from the written word and begin again tracing characters that will appear within the text entry cursor . Thus the depicted cursor provides a tool that allows in line insertion of content into a document such as by inserting a section of text into an existing line of text that occurs within the document. In other applications tools can be provided that edit images such as by erasing content changing colors or performing other applications.

As described above for those systems that include a touch sensitive display the systems and methods described herein may provide for allowing a user to use a stylus to trace markings on the display and these marking may be interpreted by the system for allowing character entry. Additionally through depicts a series of representative command strokes that a user may enter by moving stylus across the touch sensitive screen. Each of the command strokes depicted in through may be associated with a user interface command that the user may employ for manipulating and viewing documents. For example depicts a stroke wherein the user forms a rounded check mark that the system may be associated with a command that affirms an action proposed by the system. Similarly depicts a stroke that forms a plurality of peaks and troughs on the display and that may be associated with a command to delete content from a display. depicts a circular clockwise stroke that may be associated with having a document returned to a home page or to start over and depicts a straight line diagonal upstroke that indicates a delete clear or no command. depicts a box stroke running counterclockwise and indicating a paragraph select command and and depict strokes that indicate a request by the user to move to the next or respectively previous document. It will be understood by those of ordinary skill in the art that as the systems and methods described herein include systems and methods that work with document of different types such as Word documents web pages streaming media and other types of content the meaning of the different strokes may vary according to the application. For example the circular clock wise rotation of may indicate for a document that is representative of web page a request to return to a web page associated with the web page document. Alternatively the use of the circular clock wise stroke of when viewing streamed media content may indicate a request to start over causing the streamed video to stop and restart from the beginning. Accordingly it will be apparent to those with ordinary skill in the art that the stroke command depicted in through may have different meanings depending on their applications.

Additionally and optionally other user interface processes may be provided to enhance the user experience of having tactile control over the document. For example the user interface may include a page flip detector for detecting a motion on the display at a location of the display associated with the upper right hand corner of document in . If the page flip detector or the screen monitor detect a brushing motion across the surface of the document the page flip detector can direct the parser render to flip the page causing the next page chapter scene or other section to be displayed. Motions may be detected in either direction for page flipping back and forth and the page flip detector may be context sensitive generating a new display suited to the application and type of content. Optionally the interface process may include a page curl detector that can operate similar to the page flip detector except that a motion in the upper right corner of document can cause the page curl detector to direct the parser render to redraw the screen or document so that the corner of the document is curled downward and a portion of the underlying page is presented. Both the page flip and page curl detectors may be computer processes that can generate instructions to the parser renderer to achieve the desired effect. Additionally a page zoom detector such as a double click over the page area can be followed by an upward downward movement to zoom in out of the view. This function may be advantageously combined with the velocity detector to provide an inertial zoom feature.

It shall be obvious to those of skill in the art that although graphically depicts the user interface system as functional block elements these elements can be realized as computer programs or portions of computer programs that are capable of running on a data processor platform to thereby configure the data processor as a system according to the invention. Moreover although depicts the system as an integrated unit it will be apparent to those of ordinary skill in the art that this is only one embodiment and that the invention can be embodied as a computer program distributed across multiple platforms.

As discussed above the user interface systems described above can be realized as a software component operating on a data processing system including hand held computing platforms as well as more conventional computing platforms such as a Unix workstation. In these embodiments the user interface systems can be implemented as a C language computer program or a computer program written in any high level language including C Fortran Java or BASIC. Additionally in an embodiment where the platform is primarily a microprocessor microcontrollers or DSPs the user interface systems can be realized as a computer program written in microcode or written in a high level language and compiled down to microcode that can be executed on the platform employed. The development of such systems is known to those of skill in the art and such techniques are set forth in the literature including for example Digital Signal Processing Applications with the TMS320 Family Volumes I II and III Texas Instruments 1990 . Additionally general techniques for high level programming are known and set forth in for example Stephen G. Kochan Programming in C Hayden Publishing 1983 . It is noted that DSPs are particularly suited for implementing signal processing functions including preprocessing functions such as image enhancement through adjustments in contrast edge definition and brightness. Developing code for the DSP and microcontroller systems follows from principles well known in the art.

Additionally it is to be understood that although graphically depicts the computer process as comprising a plurality of functional block elements these elements can be realized as computer programs or portions of computer programs that are capable of running on the data processing platform to thereby configure the data processing platform as a system according to the invention. Moreover although depicts the system as an integrated unit of a process and a display device it will be apparent to those of ordinary skill in the art that this is only one embodiment and that the systems described herein can be realized through other architectures and arrangements including system architectures that separate the document processing functions and user interface functions of the process from the document display operation performed by the display .

Those skilled in the art will know or be able to ascertain using no more than routine experimentation many equivalents to the embodiments and practices described herein. Moreover the systems and processes of the invention have wide application and can be employed in a range of devices including hand held computers telephones mobile data terminals set top boxes an embedded processor a notebook computer a computer workstation a printer a copier facsimile machine and other systems. Additionally it will be understood by those of skill in the art that the systems described herein may be practiced with any suitable interface devices including touch sensitive screens and pads mouse input devices keyboards and keypads joysticks thumb wheel devices a mouse a trackball virtual reality input systems voice control systems eye movement control systems and any other suitable devices. Thus it will also be understood that the systems described herein have many uses and provide advantages over the prior art including providing a set of interface processes and systems that provide sophisticated manipulation of different document types.

Accordingly it will be understood that the invention is not to be limited to the embodiments disclosed herein but is to be understood from the following claims which are to be interpreted as broadly as allowed under the law.

