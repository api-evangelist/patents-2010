---

title: Adaptive tree structure for visualizing data
abstract: One or more systems and/or techniques for generating an adaptive tree structure for storing event data based upon data density of events are disclosed. In particular, the adaptive tree structure may comprise one or more levels of nodes, where a level may correspond to a resolution of events. Nodes may correspond to particular time spans over which event data was recorded. A node may be designated as a raw node comprising raw events or a summary node comprising summary events based upon the number of events occurring within a time span covered by the node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08595750&OS=08595750&RS=08595750
owner: Microsoft Corporation
number: 08595750
owner_city: Redmond
owner_country: US
publication_date: 20101130
---
Today many applications store process and or visualize large amounts of data. For example an application development environment may allow users to develop test and deploy graphical user interfaces websites web services and or other applications. It may be advantageous for developers to track and or visualize events regarding the execution of such applications which may provide insight into events such as context switches application calls into an application program interface CPU utilization sampling and or a wide variety of other events. In this way the developer may visually analyze performance data of the application s execution for example through a timeline of events. Unfortunately execution of an application over a few minutes may result in millions of events. Current event visualization techniques attempt to manage such large amounts of event data by pre calculating visualization data for various visual resolutions.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for generating an adaptive tree structure based upon data density of an event dataset and one or more systems and or techniques for determining node data of events within the adaptive tree structure are disclosed herein. While one or more examples illustrated herein may describe the implementation of the adaptive tree structure in the context of events associated with an application s execution it may be appreciated that the adaptive tree structure is not limited to storing data regarding such events but may be used to store any type of data e.g. data recorded over time data associated with text documents data associated with spreadsheets data associated with network traffic data associated with a social network and or any other type of data . In one example events regarding the execution of an application may be recorded as a plurality of raw events within an event dataset. For example context switching e.g. the switching of CPU usage between applications application calls into an application program interface e.g. a call resulting in the application being blocked because a file is locked CPU usage sampling e.g. collecting a sample event to determine whether an application is executing at a particular time and or a plethora of other events may be recorded as raw events within the event dataset. The adaptive tree structure may be generated to store pre calculated event data associated with particular visual resolutions of the event dataset or portions thereof. Event data at a particular visual resolution may be extracted from the adaptive tree structure for visualization such as through an event timeline.

It may be appreciated that the adaptive tree structure may comprise one or more levels of nodes. It may be appreciated that a number of events assigned to a node may be limited by a threshold number such that a node may be assigned no more than the threshold number of events e.g. a threshold number of 1 000 events . It may be appreciated that a node may be associated with a time span corresponding to a time span of events within the event dataset. In this way a node may cover raw events in the event dataset covered by the time span of the node e.g. a node may be associated with a time span of 0 30 seconds covering 500 raw events within the event dataset . However if a node covers a number of raw events within the event dataset greater than the threshold number e.g. the node may cover 195 500 raw events occurring between 30 60 seconds within the event dataset which is greater than the threshold number of 1 000 then the raw events within the event dataset covered by node may be aggregated into summary events. In this way the node may be assigned a number of summary events no greater than the threshold number e.g. 195 500 raw events may be aggregated into 1 000 summary events .

It may be appreciated that a node may be a summary node or a raw node. A raw node may be a node that covers a number of raw events within the event dataset less than or equal to the predetermine number e.g. a node may be associated with a time span of 0 30 seconds covering 500 raw events within the event dataset which is less than or equal to the threshold number of 1 000 . In this way the node may be assigned the 500 raw events and may be designated as a raw node. It may be appreciated that a raw node may be a leaf node without child nodes within the adaptive tree structure. A summary node may be a node that covers a number of raw events within the event dataset greater than the predetermined number e.g. a node may comprise a time span of 30 60 seconds corresponding to 195 500 raw events within the event dataset which is greater than the threshold number of 1 000 . In this way the node may be assigned a number of summary events aggregated from the raw events covered by the time span of the node where the number of summary events equals the predetermined number e.g. the summary node may be assigned 1 000 summary events aggregated from the 195 500 raw events . It may be appreciated that a summary node may be a non leaf node associated with a predetermined number of child nodes e.g. a summary node may be associated with a predetermined number of 4 child nodes such that respective child nodes correspond to of the time span of the summary node .

During the generation of the adaptive tree structure one or more levels of nodes may be specified. For example a first level may be specified with a root node. A time span of the root node may correspond to a total time span of the event dataset e.g. the root node may be associated with a time span 0 120 seconds covering 200 000 raw events recorded over 120 seconds . Because the root node may cover a greater number of raw events than the threshold number the root node may be assigned a number of summary events aggregated from the raw events covered by the root node where the number of summary events is less than or equal to the threshold number e.g. the 200 000 raw events may be aggregated into 1 000 raw events that are assigned to the root node . The root node may be designated as a summary node. It may be appreciated that the root node may be associated with a predetermined number of child nodes because the root node is a summary node e.g. root node of level 1 may be associated with 4 child nodes of level 2 .

One or more additional levels may be specified within the adaptive tree structure. For a current level of the adaptive tree a determination of whether a previous level immediately before the current level comprises one or more summary nodes may be made e.g. if the previous level comprises merely raw nodes leaf nodes then the adaptive tree structure may be complete . If the previous level comprises one or more summary nodes then for respective summary nodes a predetermined number of child nodes may be generate for a summary node where respective time spans of the child nodes correspond to fractions of a time span of the summary node e.g. if a time span of the summary node covers 30 60 seconds of raw events and 4 child nodes are generated then respective time spans of the child nodes may be of the 30 second time span of the summary node such that a first child node may comprise a time span of 30 37.5 a second child node may comprise a time span of 37.5 45 a third child node may be comprise a time span of 45 52.5 and a fourth child node may comprise a time span of 52.5 60 . For respective child nodes if a number of raw events within the event dataset covered by a time span of a child node is less than or equal to the threshold number then the child node may be designated as a raw node and may be assigned the raw events otherwise the child node may be designated as a summary node and may be assigned a number of summary events derived from the raw events within the event dataset covered by the time span of the child node. The number of summary events may be equal to the threshold number. In this way the adaptive tree structure may be generated based upon data density of the event dataset e.g. more nodes and or levels may be specified in dense areas of raw events whereas fewer nodes and or levels may be specified in sparse areas of raw events .

The adaptive tree structure may comprise one or more levels of nodes such as raw nodes leaf nodes comprising raw events and or summary nodes non leaf nodes comprising summary events aggregated from raw events. Respective levels within the adaptive tree structure may correspond to visual resolutions of the event dataset or portions thereof. For example a first level may comprise a root node a summary node assigned summary events aggregated from an entire time span of the event dataset. Higher levels such as the first level may provide low resolution views of the event dataset or a portion thereof which may be used to provide a zoomed out visualization of the event dataset e.g. the first level may provide 1 000 summary events corresponding to 200 000 raw events over 120 seconds . Lower levels such as a fourth level out of a six level adaptive tree structure may provide high resolution views of a particular portion of the event dataset which may be used to provide a zoomed in visualization of the event dataset of a portion thereof e.g. a summary node within a fourth level may provide 1 000 summary events corresponding to 10 000 raw events over a 1.875 second time span . It may be appreciated that a timeline may be populated with event data derived from node data within the adaptive tree structure. For example node data may be determined from one or two nodes within the adaptive tree structure based upon a requested time span e.g. a user may request a visualization of events occurring within a time span of 30 60 seconds . One or two nodes corresponding to the requested time span of 30 60 seconds may be determined as comprising the node data. In this way the timeline may be populated with event data derived from the node data. A user may be able to visualize events zoom in zoom out scroll and or perform other interactions with the timeline. Such user input may be satisfied by updating the timeline with corresponding event data derived from node data within the adaptive tree structure.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

Today execution of an application may comprise a complex set of events. For example a web application may execute hundreds of thousands of lines of code when interacting with databases web services and or various client computing devices during execution. It may be advantageous to track store analyze and or visualize such events which may provide insight into the performance of the application. For example recorded event data may be presented within an interactive timeline of a user interface. The user may scroll to various time ranges of events change zoom scale and or perform other interactions with the interactive timeline to view events. In one example events may be plotted along a time axis of a timeline. The timeline may provide the user with the ability to view the entire time span of recorded events e.g. a zoomed out view of events at a course granularity zoom in to a particular time span e.g. a zoomed in view of events at a finer granularity and or scroll to various time spans within the timeline.

Unfortunately the timeline may be associated with a large event dataset e.g. millions of events recorded over a few minutes of an application s execution which may affect responsiveness of the timeline storage overhead and or other resource utilization. Current visualization techniques may attempt to manage large event datasets by pre calculating timeline information for various zoom levels which may allow for a smooth response to user actions such as scrolling and zooming. Such pre calculated timeline information may be stored within a data structure such as a tree structure comprising one or more levels of nodes e.g. a first level may comprise a root node representing events over the entire time span of the event dataset a second level may comprise 4 nodes representing events over respective portions of the entire time span a third level may comprise 16 nodes representing events over respective 1 16 portions of the entire time span etc. . However as the tree structure becomes deeper the number of nodes exponentially grows. The depth of the tree structure may depend on the total time of the event dataset and or a maximum zoom factor at which events may be presented within the timeline. The exponential growth may render the tree structure unscalable which may limit the ability to visualize longer time ranges and or the ability to zoom. Additionally the tree structure may not take into account data density distribution over time and may use an equal amount of storage for dense and spare areas which may waste storage.

Accordingly one or more systems and or techniques for generating an adaptive tree structure based upon data density of an event dataset and one or more systems and or techniques for determining node data of events from within the adaptive tree structure are provided herein. The adaptive tree structure may comprise levels and or nodes specified based upon data density e.g. nodes covering dense event data may be split into child nodes whereas nodes covering spare data may be designated as leaf nodes as opposed to a uniform complete tree where respective levels and or nodes are uniform e.g. respective level of nodes may be uniformly split until a final level is created level 1 has 1 node level 2 has 4 nodes level 3 has 16 nodes level 4 has 64 nodes etc. . For example the adaptive tree structure may comprise more levels and or nodes for areas of concentrated raw data and may comprise fewer levels and or nodes for areas of spare raw data. In this way overhead storage of event data may be mitigated because storage space for nodes and or levels may be allocated based upon data density e.g. overhead merely where needed and not where not needed .

The adaptive tree structure may comprise one or more levels corresponding to pre calculated resolutions of events within an event dataset. For example higher levels such as level 1 or level 2 may comprise a zoomed out resolution of event data at a coarse granularity whereas lower levels such as level 5 or level 6 may comprise a zoomed in resolution of event data at a finer granularity. Thus particular levels and or nodes may be used to determine node data of events at a desired resolution. The node data may be used to populate visualization of events such as a timeline of events. In this way the user may interact with the timeline e.g. zoom scroll etc. such that visualization of events at a corresponding resolution may be populated within the timeline based upon extracting node data from particular levels and or nodes within the adaptive tree structure. In addition to mitigating storage overhead by generating the adaptive tree structure based upon data density timeline responsiveness may be enhanced because a request for event data may be satisfied for example with no more than two nodes. Additionally the nodes may comprise a number of events limited by a threshold number such that the maximum number of events processed as node data may be constrained. In this way the adaptive tree structure may comprise pre calculated resolutions of event data that may be used to provide an interactive timeline of event data to users.

One embodiment of generating an adaptive tree structure based upon data density of an event dataset comprising a plurality of raw events is illustrated by an exemplary method in . At the method starts. It may be appreciated that the plurality of raw events within the event dataset may correspond to a wide variety of data e.g. data recorded over time events associated with the execution of an application events occurring within a social network textual data spreadsheet data logistical data etc. . At a first level may be specified within the adaptive tree structure. The first level may comprise a root node. A time span of the root node may correspond to a total time span of the event dataset e.g. 120 seconds of 200 000 raw events and thus the root node may cover raw events occurring within the total time span of the event dataset e.g. the root node may cover the 200 000 raw events .

It may be appreciated that a number of events assigned to a node may be limited by a threshold number such that the node may be assigned no more than the threshold number of events. For example limiting the number of events assigned to nodes may limit the number of events processed when populating a timeline which may enhance responsiveness of the timeline such as user interface draw times e.g. events assigned to one or two nodes may be used to satisfy a request for event data to populate a timeline . The threshold number may represent a maximum number of events such as summary events and or raw events that may be assigned to a node.

It may be appreciated that if a node covers a number of raw events within the event dataset less than or equal to the threshold number e.g. a node s time span of 0 30 seconds covers 500 raw events within the event dataset which is less than a threshold number of 1 000 then the node may be designated as a raw node a leaf node without child nodes and the raw events covered by the raw node may be assigned to the raw node. However if the node covers a number of raw events within the event dataset greater than the threshold number e.g. a node s time span of 30 60 seconds covers 195 500 raw events within the event dataset which is greater than the threshold number of 1 000 then the node may be designated as a summary node a non leaf node with a predetermined number of child nodes and a number of summary events derived from the raw events may be assigned to the summary node where the number of summary events may be equal to the threshold number. In one example of deriving summary events raw events may be aggregated into summary events. In particular raw events with an appropriate time span for the resolution associated with the summary node may be selected as summary events e.g. a raw event with an appropriate time span may be a raw event having a large enough time span such that the raw event may be easily visible when displayed for example as a rectangle within a timeline at a current zoom level . Similarly raw events that do not comprise an appropriate time span for the resolution associated with the summary node may be aggregated e.g. combined into larger summary events that may be visible for example when displayed as rectangles along the timeline at the current zoom level.

The root node may be assigned a number of summary events derived from the raw events of the event dataset because the root node may cover more raw events within the event dataset than the threshold number e.g. the root node s time span of 120 seconds may cover 200 000 raw events which is greater than the threshold number of 1 000 . The number of summary events may be equal to the threshold number. In this way the root node may be designates as a summary node.

At one or more additional levels within the adaptive tree structure may be specified. In particular at for a current level of the adaptive tree structure a determination as to whether a previous level immediately before the current level comprises one or more summary nodes non leaf nodes may be made at . At if the previous level comprises one or more summary nodes then for respective summary nodes a predetermined number of child nodes may be generated for a summary node where a time span of a child node may correspond to a fraction of a time span of the summary node e.g. 4 child nodes may be generated for a summary node where a child node comprises a time span equal to a time span of the summary node at . It may be appreciated that a time span of a node may correspond to a time span of raw events within the event dataset covered by the node. For example the summary node may comprise a time span of 30 60 covering 195 500 events. A predetermined number such as 4 of child nodes may be generated for the summary node where a time span of a child node corresponds to of the 30 second time span of the summary node e.g. a first child node may comprise a time span of 30 37.5 seconds such that the first child node covers raw events over the time span of 30 37.5 seconds within the event dataset a second child node may comprise a time span of 37.5 45 seconds such that the second child node covers raw events over the time span of 37.5 45 seconds within the dataset etc. . In one example respective time spans of child nodes of the summary node may comprise equal lengths where a sum of respective time spans of the child nodes equals the time span of the summary node. In another example respective time spans of one or more child nodes may differ among different child nodes. Similarly while generating 4 child nodes for a summary node where a child node comprises a time span equal to a time span of the summary node is mentioned herein the instant application is not intended to be so limited. That is any suitable number of child nodes may be generated where a child node may comprise any suitable time span. Moreover the number of child nodes per respective summary nodes may differ between different summary nodes and or the respective timespans thereof may differ as well.

It may be appreciated that respective child nodes generated for the summary node may be designated as a summary node or a raw node based upon whether raw events covered by the node are less than or equal to the threshold number e.g. threshold number of 1 000 events . At if the number of raw events within event dataset covered by a time span of a child node is less than or equal to the threshold number e.g. the child node s time span of 30 37.5 seconds covers 447 raw events which is less than the threshold number of 1 000 events the child node may be designated as a raw node and may be assigned the raw events. However if the number of raw events within the event dataset covered by the time span of the child node is greater than the threshold number e.g. the child nodes time span of 37.5 45 seconds covers 143 006 raw events which is greater than the threshold number of 1 000 events the child node may be designated as a summary node and may be assigned a number of summary events derived from the raw events less than or equal to the threshold number. In one example of deriving summary events raw events covered by the time span may be aggregated as summary events for the summary node. Thus raw events comprising a short time span e.g. raw events that may be visually too small when displayed within a timeline may be aggregated together such that a summary event may be indicative of two or more raw events. Alternatively or in addition a number of raw events less than or equal to the threshold number may be selected as the events for the summary node e.g. those raw events that are more revealing or indicative of content covered by all of the raw events may be chosen .

In this way an adaptive tree structure comprising one or more levels of nodes may be generated based upon data density of events within the event dataset. For example areas of sparse data may result in raw nodes without child nodes e.g. a node having a time span covering 500 raw events may be designated as a raw node assigned the 500 raw events whereas areas of dense data may result in summary nodes with child nodes e.g. a node having a time span covering 195 500 raw events may result in a summary node assigned 1 000 summary events such that child nodes may be created for the summary node .

It may be appreciated that node data of events may be determined from within the adaptive tree structure. For example node data of events may be determined within the adaptive tree structure to satisfy a request to populate a timeline with event data. In particular a requested time span may be received e.g. a time span corresponding to a view action a zoom action scroll action and or other actions within the timeline . A level L corresponding to

Node data within the adaptive tree structure corresponding to the request time span may be determined based upon initially evaluating nodes at level L which may involve one or more of the following four determinations. First if the requested time span falls completely within a node of level L then the node is determined as comprising the node data e.g. a requested time span 30 35 may fall completely within a node of level 3 having a time span of 30 37.5 . Second if the requested time span falls completely within two adjacent nodes of level L then the two adjacent nodes may be determined as comprising the node data e.g. a requested time span 35 40 may fall completely within two adjacent times having time spans of 30 37.5 and 37.5 45 within level 3 . Third if a first segment of the requested time span falls completely within a first node of level L and a second segment of the requested time span does not fall within respective nodes of level L e.g. a requested time span 58 63 may comprise a first segment 58 60 that may fall completely within a first node of level 3 having a time span of 52.5 60 but a second segment 60 63 may not fall within respective nodes of level L then the first node may be determined as comprising a first portion of the node data and a second node within a different level e.g. a previous level before level L may be determined as comprising a second portion of the node data where the second segment of the requested time span falls completely within the second node. It may be appreciated that the first node may be any node within level L and that the second node may be any node within another level. Fourth if none of level L s nodes span at least a portion of the requested time span the level L may be decremented by one level to a previous level and the determining node data may be iterated using the decremented level. In one example node data may be derived from no more than two nodes.

It will be appreciated that while language such as first node second node first portion second portion first segment and or second segment or like language may be used herein that such language is not meant to be limiting. For example a first node may be any node within level L . Similarly language such as first and second is merely used as identifiers herein and not necessary to indicate an ordering of things e.g. one item coming temporally before another .

It may be appreciated that the node data may be used to derive event data for a timeline which may be presented to a user. If the node data corresponds to summary events of a summary node then the summary events may be stored with the node data e.g. the summary events may have been previously aggregated from raw events into an appropriate visual resolution when stored within the summary node . If the node data corresponds to raw events of a raw node then the raw events may be aggregated into summary events which may be stored within the node data e.g. raw events that may be visually small at a current resolution of the timeline may be aggregated into larger summary events for visual clarity of events within the timeline .

The timeline may be interactive such that a user may view zoom scroll and or perform other user input within the timeline. In one example user input corresponding to a zoom action within the timeline may be received. The user input may comprise a second requested time span. The second requested time span may be different than the requested time span corresponding to the current timeline view. Second node data corresponding to the second requested time span may be determined within the adaptive tree structure e.g. one or two nodes may be determined as comprising the second node data . In this way the timeline may be updated with events corresponding to the second node data to present a new timeline view.

In another example user input corresponding to a scroll action within the timeline may be received. The user input may comprise a second requested time span. The second requested time span may be different than the requested time span corresponding to the current timeline view. Second node data corresponding to the second requested time span may be determined within the adaptive tree structure e.g. one or two nodes may be determined as comprising the second node data . In this way the timeline may be updated with events corresponding to the second node data to present a new timeline view. At the method ends.

One embodiment of determining node data of events from within an adaptive tree structure is illustrated by an exemplary method in . At the method starts. At a requested time span may be received. For example a user may request a particular view of events within a timeline corresponding to the requested time span e.g. a request to view events occurring between 0 20 seconds . At a level L corresponding to

At node data corresponding to the requested time span may be determined within the adaptive tree structure. It may be appreciated that node data may comprise events derived from one or two nodes within the adaptive tree structure which may be used to populate a timeline with such events. In one example the determining node data may comprise one or more of the following determinations. First at if the requested time span falls completely within a node of level L then the node is determined as comprising the node data e.g. the requested time span of 0 20 seconds may fall within a node of level 2 having a time span of 0 30 seconds . Second at if the requested time span falls completely within two adjacent nodes of level L then the two adjacent nodes may be determined as comprising the node data e.g. a requested time span of 10 40 seconds may fall within a first node of level 2 having a time span of 0 30 seconds and a second node of level 2 having a time span of 30 60 seconds where the requested time span falls completely within the combination of the time spans .

Third at if a first segment of the requested time span falls completely within a first node of level L and a second segment of the requested time span does not fall within respective nodes of level L then the first node may be determined as comprising a first portion of the node data at and a second node within a different level e.g. a previous level before level L may be determined as comprising a second portion of the node data where the second segment of the requested time span falls completely within the second node at . In this way node data may be derived from the first node of level L and the second node of a different level.

Fourth at if none of level L s nodes span at least a portion of the requested time span then level L may be decremented by one level to a previous level and the determining node data may be iterated using the decremented level. In this way node data of events corresponding to the requested time span may be satisfied by one or two nodes within the adaptive tree structure.

It may be advantageous to determine node data of events at an appropriate viewing resolution for a current view of the timeline e.g. finer granularity of events for a zoomed in view coarser granularity of events for a zoomed out view etc. . That is the timeline may display events as rectangles along a time axis for example. However some events may be too short in duration to be easily viewed along the timeline. Thus certain events may be aggregated combined to create easily visible events when viewed at the resolution for the current view of the timeline. In particular if node data corresponds to summary events of a summary node then the summary events may be stored within the node data of events e.g. summary events may have been previously aggregated from raw events when assigned to the summary node . If the node data corresponds to raw events of a raw node then the raw events may or may not be aggregated into summary events which may be store within the node data e.g. raw events that may be visually small at a current zoom level within the timeline may be aggregated into visually larger summary events for visual clarity of events within the timeline .

The timeline populated with event data derived from the node data may be presented. The timeline may be an interactive timeline that may allow users to view scroll zoom and or perform other actions with the timeline. The timeline may be populated with events derived from one or two nodes within the adaptive tree structure. For example user input corresponding to a zoom action and or a scroll action within a timeline may be received. The user input may comprise a second requested time span different than the requested time span corresponding to the current timeline view. Second node data corresponding to the second requested time span may be determined within the adaptive tree structure. In this way the timeline may be populated with events in a responsive manner because merely one or two nodes may be determined as comprising the node data which may mitigate processing time. At the method ends.

The system may comprise an adaptive tree generator component a node extractor component and or a timeline presentation component . It may be appreciated that the adaptive tree generator may be associated with a threshold number . In one example the threshold number may specify a maximum number of events that may be assigned to a node e.g. the threshold number may specify that a node may comprise no more than 1 000 events . The threshold number may be used by the adaptive tree generator to determine whether a node is to be designated as a summary node or a raw node. For example a node may be associated with a time span corresponding to a time span of raw events within the event dataset . If the time span of the node covers more raw events than the threshold number e.g. a time span of 30 60 seconds of a node may cover 195 500 raw events within the event dataset then the node may be designated as a summary node and summary events derived from the raw events may be assigned to the summary node where the number of summary events may equal the threshold number e.g. 195 500 raw events may be aggregated into 1 000 summary events . However if the number of raw events within the event dataset covered by the time span of the node is less than or equal to the threshold number then the node may be designated as a raw node and the raw events may be assigned to the raw node.

The adaptive tree generator may be associated with a predetermined number . In one example the predetermined number may specify a number of child nodes to create for a summary node. The predetermined number may be used by the adaptive tree generator when specifying levels of the adaptive tree structure e.g. if a previous level comprises a summary node then the adaptive tree generator may generator a number of child nodes for the summary node equal to the predetermined number such as 4 child nodes .

In one example of generating the adaptive tree structure the adaptive tree generator may be configured to specify e.g. specify levels a first level within the adaptive tree structure . The first level may comprise a root node assigned a number of summary events equal to the threshold number . In particular a time span of the root node may correspond to a total time span of the event dataset e.g. 120 seconds which may cover more raw events within the event dataset e.g. 200 000 raw events than the threshold number . Thus the root node may be designated as a summary node.

The adaptive tree generator may be configured to specify e.g. specify levels one or more additional levels within the adaptive tree structure . In particular for a current level of the adaptive tree structure a determination may be made as to whether a previous level immediately before the current level comprises one or more summary nodes. If the previous level comprises one or more summary nodes then for respective summary nodes a number of child nodes equal to the predetermined number may be generated for a summary node. A time span of a child node may correspond to a fraction of a time span of the summary node e.g. a summary node may span 0 30 seconds such that 4 child nodes may be generate with time spans 0 7.5 7.5 15 15 22.5 and 22.5 30 seconds respectively . The respective child nodes may be designated as raw nodes assigned raw events or summary nodes assigned summary events. In particular for respective child nodes if a number of raw events within the event dataset covered by a time span of a child node is less than or equal to the threshold number then the child node may be designated as a raw node and may be assigned the raw events else the child node may be designated as a summary node and may be assigned a number of summary events derived from raw events within the event dataset covered by the time span of the child node where the number of summary events equals the threshold number . In this way the adaptive tree generator may generate the adaptive tree structure comprising one or more levels of nodes where a level corresponds to a resolution of events which may be displayed within the timeline .

The node extractor may be configured to determine node data of events within the adaptive tree structure . The node data may be used by the timeline presentation component to populate the timeline with event data . In particular the node extractor may receive a requested time span. For example the requested time span may correspond to the timeline e.g. a user may specify a desired time span of events to view within the timeline . The node extractor may calculate a level L corresponding to

The node extractor may determine node data corresponding to the requested time span within the adaptive tree structure . In one example the node extractor may be configured to determine the node data by performing one or more of the following four determinations. First if the requested time span falls completely within a node of level L then the node extractor may determine the node as comprising the node data . Second if the requested time span falls completely within two adjacent nodes of level L then the node extractor may determine the two adjacent nodes as comprising the node data. Third if a first segment of the requested time span falls completely within a first node of level L and a second segment of the requested time span does not fall within respective nodes of level L then the first node may be determined as comprising a first portion of the node data and a second node within a different level e.g. a previous level before level L may be determined as comprising a second portion of the node data where the second segment of the requested time span falls completely within the second node. It may be appreciated that the first node may be any node within level L and that the second node may be any node within another level. Fourth if none of level L s nodes span at least a portion of the requested time span then level L may be decremented by one level to a previous level and the node extractor may determine the node data using the decremented level. In this way the node extractor may determine node data derived from one or two nodes within the adaptive tree structure based upon the requested time span.

The node data may be used as event data by the timeline presentation component to populate the timeline with events corresponding to the requested time span. The node extractor may be configured to format the node data to an appropriate viewing resolution for a current view of the timeline e.g. finer granularity of events for a zoomed in view coarser granularity of events for a zoomed out view etc. . In particular if node data corresponds to summary events of a summary node then the summary events may be utilized as the node data and or the event data e.g. summary events may have been previously aggregated from raw events when assigned to summary nodes within the adaptive tree structure . If the node data corresponds to raw events of a raw node then the raw events may or may not be aggregated into summary events which may be utilized as the node data and or the event data e.g. raw events that may be visually small at a current zoom level within the timeline may be aggregated into visually larger summary events for visual clarity of events within the timeline .

The timeline presentation component may be configured to present the timeline of event data represented by the node data . The timeline presentation component may be configured to update the timeline with second event data represented by second node data determined by the node extractor in response to user input corresponding to a scroll action a zoom action and or other user input within the timeline . In this way a user may interactively view events within the timeline . It may be appreciated that the timeline presentation component may be configured to present event data derived from node data in a wide variety of formats such as a textual presentation of events a graphical representation of events a web based presentation of events a spreadsheet representation of events etc.

The adaptive tree generator may generate the adaptive tree structure comprising one or more levels of nodes where a level may correspond to a resolution of event data which may be used to populate a timeline. In particular the adaptive tree generator may specify a level 1 comprising a root node . A time span of 0 120 seconds for the root node may correspond to the total time span of 0 120 seconds for the event dataset . Thus the root node may cover the 200 000 raw events of the event dataset . However the root node may be limited to 1 000 events as specified by the threshold number 1 000. Thus 1 000 summary events derived from the 200 000 raw events may be assigned to the root node and the root node may be designated as a summary node.

The adaptive tree generator may specify one or more additional levels within the adaptive tree structure . For example the adaptive tree generator may specify a level 2 . During the specifying of level 2 a determination may be made as to whether level 1 a previous level immediately before level 2 comprises one or more summary nodes. Because root node is a summary node 4 child nodes equal to the predetermined number of 4 may be generated for the root node . That is node A node B node C and node D may be generated within level 2 . The time spans of the child nodes may be equal fractions of the time span of root node . For example a time span for node A may be 0 30 seconds a time span for node B may be 30 60 seconds a time span for node B may be 60 90 seconds and or a time span for node C may be 90 120 seconds.

Because the distribution of raw events within the event dataset may be arbitrary the number of raw events covered by the time spans of the respective nodes of level 2 may be the same or different. For example the time span 0 30 of node A may cover 500 raw events within the event dataset . Because the 500 raw events covered by node A is less than or equal to the threshold number 1 000 node A may be designated as a raw node a leaf node without child nodes within level 3 and the 500 raw events may be assigned to node A . The time span 30 60 of node B may cover 195 500 raw events within the event dataset . Because the 195 500 raw events covered by node B is greater than the threshold number 1 000 node B may be designated as a summary node a non leaf node that may have child nodes within level 3 and 1 000 summary events derived from the 195 500 raw events may be assigned to node B . The time span 60 90 of node C may cover 1 000 raw events within the event dataset . Because the 1 000 raw events covered by node C is less than or equal to the threshold number 1 000 node C may be designated as a raw node a leaf node without child nodes within level 3 and the 1 000 raw events may be assigned to node C . The time span 90 120 of node D may cover 3 000 raw events within the event dataset . Because the 3 000 raw events covered by node D is greater than the threshold number 1 000 node D may be designated as a summary node a non leaf node that may have child nodes within level 3 and 1 000 summary events derived from the 3 000 raw events may be assigned to node D .

It may be appreciated that the adaptive tree generator may specify other levels within the adaptive tree structure such as level 3 level 4 and or other levels such as level N . For example adaptive tree generator may specify within level 3 node E node F node G and or node H as child nodes of node B a summary node of level 2 . The adaptive tree generator may specify within level 3 node I node J node K and or node L as child nodes of node D a summary node of level 3 . In this way the adaptive tree generator may generate the adaptive tree structure with one or more levels of nodes where a level may correspond to a resolution of event data which may be used to populate a timeline e.g. level 1 may comprise coarse granularity of event data that may be used to provide event data for a zoomed out view of events level 3 may comprise fine granularity of event data that may be used to provide event data for a zoomed in view of events etc. .

In one example the node extractor may use the requested time span of 40 55 seconds to determine one or two nodes within the adaptive tree structure as comprising the node data . For example the node extractor may determine a level L 2 based upon

In one example the node extractor may use the requested time span of 35 40 seconds to determine one or two nodes within the adaptive tree structure as comprising the node data . For example the node extractor may determine a level L 3 based upon

In one example the node extractor may use the requested time span of 58 62 seconds to determine one or two nodes within the adaptive tree structure as comprising the node data . For example the node extractor may determine a level L 3 based upon

In one example the node extractor may use the requested time span of 28 34 seconds to determine one or two nodes within the adaptive tree structure as comprising the node data . For example the node extractor may determine a level L 3 based upon

In one example the node extractor may use the requested time span of 70 75 seconds to determine one or two nodes within the adaptive tree structure as comprising the node data . For example the node extractor may determine a level L 3 based upon

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable computer instructions may be configured to perform a method such as at least some of the exemplary method of and or at least some of exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as at least some of the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via a network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

