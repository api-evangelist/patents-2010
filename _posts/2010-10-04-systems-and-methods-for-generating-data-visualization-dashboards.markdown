---

title: Systems and methods for generating data visualization dashboards
abstract: An aspect of the technology described relates to a dashboard creation system for generating dashboards displaying key performance indicator information. The dashboard creation system includes: a business database comprising a plurality of business values; an intermediate table comprising intermediate data; and at least one key performance indicator record. In some implementations, the intermediate data includes: an intermediate value corresponding to a selected plurality of the business values; and an intermediate link identifying the corresponding selected plurality of business values. Also, the key performance indicator record may include: a key performance indicator value corresponding to the intermediate value; a key performance indicator link corresponding to the intermediate link and identifying the corresponding selected plurality of the business values; and a key performance indicator format corresponding to a desired graphical format for depicting the key performance indicator value. The intermediate value may be a summary value corresponding to an analysis of the selected plurality of business values. In such case, the intermediate link may comprise a summary link identifying analytical procedures for producing the summary value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08683370&OS=08683370&RS=08683370
owner: Dundas Data Visualization, Inc.
number: 08683370
owner_city: Toronto, Ontario
owner_country: CA
publication_date: 20101004
---
This application claims priority from U.S. provisional patent application No. 61 309 238 filed Mar. 1 2010 which is incorporated by referenced herein in its entirety.

 Dashboards present visualizations for example in graph or chart form of business values or key performance indicator KPI metrics from data stored in business databases. Such visualizations could be viewed in related business applications by executives to obtain an overview of how the business is performing. Dashboards can be implemented in many different types of applications.

The creation of a dashboard can be a complicated process. The data stored in business databases may include large amounts of detailed transactional data stored in complex formats. To generate intermediate data from the business database for a dashboard the creator of a dashboard may require expertise in database administration to execute queries on the database.

Also the creator of a dashboard may require knowledge of the business requirements of an organization so as to be able to select the appropriate data from the business database and organize them into KPIs. To perform such tasks the creator of a dashboard may need to also have training in business analysis.

Further a dashboard may need to be aesthetically and functionally laid out for it to be useful by a business executive. To accomplish this the creator of a dashboard may further require expertise in graphic design when determining the desired graphical formats for depicting the KPIs corresponding to intermediate values in the intermediate data.

The embodiments described herein relate generally to a dashboard creation and management system that may facilitate the participation of both technical and non technical users when collaborating on a dashboard development effort.

Collaboration is achieved via the use of a multi stage workflow which has clearly defined steps and different types of target users at each step. In general more technically knowledgeable users such as those skilled in information technology IT and or database administration are involved at the beginning of the workflow and less technically sophisticated users may be involved towards the end of the workflow. By using a staged approach changes can be made in the creation of a dashboard project at a later step in the development workflow without the need to re involve a business organization s technical personnel.

Since the group of non technical users may include end users e.g. business executives that are primarily interested in viewing and interacting with completed dashboards the potential number of non technical users e.g. business executives business analysts and or graphic designers of the system is in general much larger than the number of technical users e.g. software developers database administrators etc. of the system. Effectively the system may permit a much larger set of users to participate directly in the dashboard creation process.

One aspect of the technology described below relates to a dashboard creation system for generating dashboards displaying key performance indicator information. The dashboard creation system includes a business database comprising a plurality of business values an intermediate table comprising intermediate data and at least one key performance indicator record.

In some implementations the intermediate data includes an intermediate value corresponding to a selected plurality of the business values and an intermediate link identifying the corresponding selected plurality of business values. Also the key performance indicator record may include a key performance indicator value corresponding to the intermediate value a key performance indicator link corresponding to the intermediate link and identifying the corresponding selected plurality of the business values and a key performance indicator format corresponding to a desired graphical format for depicting the key performance indicator value.

The intermediate value may be a summary value corresponding to an analysis of the selected plurality of business values. In such case the intermediate link may comprise a summary link identifying at least one analytical procedure for producing the summary value.

In some embodiments the intermediate value may be determined using a database query. This database query may be a SQL query.

One aspect of the technology described below relates to a dashboard creation system for generating dashboards displaying key performance indicator information. The dashboard creation system includes a business database comprising a plurality of business values an intermediate table comprising summary data and at least one key performance indicator record.

In some implementations the summary data includes a summary value corresponding to a plurality of the business values and a summary link identifying the corresponding plurality of business values. Also the key performance indicator record may include a key performance indicator value corresponding to the summary value a key performance indicator link corresponding to the summary link and identifying the corresponding plurality of the business values and a key performance indicator format corresponding to a desired graphical format for depicting the key performance indicator value.

The dashboard creation system may in some cases be configured to render the key performance indicator value in the key performance format. Additionally or alternatively the dashboard creation system may be configured to communicate the key performance indicator value and the key performance format to a drawing application configured to render the key performance indicator value in the key performance format.

In some implementations the dashboard creation system may be implemented as part of a drawing application.

In further embodiments the dashboard creation system may include intermediate data that comprises a plurality of intermediate values and a corresponding intermediate link for each intermediate value. In other embodiments the key performance indicator record may include a plurality of key performance indicator values and a corresponding key performance indicator link for each key performance indicator value.

Another aspect of the technology described below relates to a method for generating dashboards displaying key performance indicator information the method comprising providing business data corresponding to a plurality of business values creating an intermediate table comprising intermediate data and creating a key performance indicator record.

In some embodiments the intermediate data may include an intermediate value corresponding to a selected plurality of the business values and an intermediate link identifying the corresponding selected plurality of business values. In some embodiments the intermediate value may be determined using a database query that is a SQL query.

The intermediate value may be a summary value corresponding to an analysis of the selected plurality of business values. In such case the intermediate link may comprise a summary link identifying analytical procedures for producing the summary value.

A further aspect of the technology described below relates to a method for generating dashboards displaying key performance indicator information the method comprising providing business data corresponding to a plurality of business values creating an intermediate table comprising summary data and creating a key performance indicator record.

In some embodiments the summary data may include a summary value corresponding to a plurality of the business values and a summary link identifying the corresponding plurality of business values.

The key performance indicator record may include a key performance indicator value corresponding to the intermediate value a key performance indicator link corresponding to the intermediate link and a key performance indicator format corresponding to a desired graphical format for depicting the key performance indicator value.

In some embodiments the method may include rendering the key performance indicator value in the key performance format and or communicating the key performance indicator value and the key performance format to a drawing application configured to render the at least one key performance indicator value in the key performance format.

Additionally or alternatively the method may include revising the key performance indicator record such that the intermediate data includes a second intermediate value corresponding to a second selected plurality of the business values and a second intermediate link identifying the corresponding second selected plurality of business values.

In the context of the revised key performance indicator record the method may further include determining a new key performance indicator value corresponding to the second intermediate value determining a new key performance indicator link corresponding to the second intermediate link determining a new key performance format corresponding to a desired graphical format for depicting the new key performance indicator value and storing the new key performance indicator value the new key performance indicator link and the new key performance format in the key performance indicator record.

In some embodiments the method includes rendering the new key performance indicator value in the new key performance format and or communicating the new key performance indicator value and the new key performance format to a drawing application configured to render the new key performance indicator value in the new key performance format.

Referring to a block diagram of a dashboard creation system for generating dashboards to display key performance indicator information is shown generally as . The implementation includes a database administration terminal an analyst terminal a designer terminal and an application server . Each of these components may be operatively connected to a network to facilitate communications with each other. When a dashboard is generated it may be viewed on viewer terminal . Referring momentarily to a completed dashboard design shown generally as is illustrated with graphical elements showing various key performance indicators in various graphical formats. Illustrated also is a graphical element not directly associated with a KPI e.g. a text box .

From a high level perspective the dashboard creation process involves application server providing remote software functionality to database administration terminal analyst terminal and designer terminal . Each terminal is targeted at a different role in the dashboard creation process such that users with differing areas of expertise may collectively create a dashboard .

Database administration terminal and administration application may be used to interact with business database by system administrators database administrators or database experts. In some cases software developers may also use database administration terminal if there is a need to integrate dashboards into other applications or web portals. For the purpose of simplicity the users of database administration terminal will be referred to below as database administrators . Database administration terminal can be configured to generate an intermediate table for simplicity the terms intermediate table database and intermediate table will be used interchangeably below which includes intermediate data from the business database . The intermediate table acts as a conduit for providing intermediate information to summary application on analyst terminal . This conduit allows business analysts to just refer to the intermediate table instead of requiring the technical expertise to access business database .

Analyst terminal and summary application may typically be used by business analysts business managers and or executives. These users will be referred to below generally as business analysts . Business analysts may define KPIs from the intermediate data in the intermediate table to derive key performance indicator records . Because KPI records are defined by business analysts using analyst terminal graphic designers can reference these records when designing a dashboard . That is they may not need to have knowledge of business requirements for defining useful KPIs.

Designer terminal and drawing application may typically be used by graphic designers familiar with visual design. For simplicity these users may generally be referred to below as graphic designers . The key performance indicator records may be accessible by the designer terminal when designing the visual layout of the dashboard .

When each of these terminals operate the generated intermediate table and KPI records may be stored in and accessed from databases on application server .

Database administration terminal analyst terminal designer terminal and application server comprise a number of components including microprocessors. Microprocessors typically control the overall operation of computer systems. Microprocessors interact with additional subcomponents such as memory storage which may include random access memory RAM and read only memory ROM and persistent storage such as flash memory display network adapter and input device s for example such as a keyboard mouse touchscreen which may form part of the display or touchpad. Network adapters allow connection to different types of networks for example Local Area Networks LANs as well as Wide Area Networks WANs . Operating system software used by a microprocessor is typically stored in a persistent store such as flash memory or read only memory ROM or similar storage. Those skilled in the art will appreciate that the operating system specific software components or parts thereof may be temporarily loaded into a volatile store such as RAM. Microprocessors in addition to operating system functions enable execution of software components. In the exemplary embodiment in database administration terminal executes administration application analyst terminal executes summary application designer terminal executes drawing application application server executes collaboration module and viewer terminal executes viewer application .

Since the database administration terminal the analyst terminal the designer terminal and viewer terminal may access remote software programs available on application server these terminals may collectively be referred to as client terminals in a client server system architecture known in the art. Correspondingly each of administration application summary application drawing application and viewer application may be configured to connect to and send and receive messages from application server on network . In an alternate embodiment the functionality of each of the client applications may also be divided such that they each include a client application programming interface API for managing the functionality associated with connecting to network and accessing functions on application server .

As alluded to above in the dashboard creation system of the current disclosure the workflow for creating a dashboard may be divided into three steps that employ each of the database administration terminal analyst terminal and designer terminal respectively. It will be understood that while illustrates each of these steps as being performed by separate applications executing on separate terminals the illustrated applications may be provided in a single application accessible on one or more terminals. This may be in the form of a standalone executable or a web application accessible through a web browser using methods known in the art. It will further be understood that the functionality provided by viewer application on viewer terminal need not be performed by a separate viewer application on a separate viewer terminal and may also be incorporated into one or more applications. Other system configurations and methodologies may be employed as will be understood.

The database administration terminal includes an administration application and a business database . The business database contains the business data values that are to be analyzed and visualized in the dashboard . For example the business database may be an accounting and inventory management control database that stores transactional data for sales over time in a number of geographical locations. Referring briefly to example tables named Orders and Regions are illustrated that may be stored in such a database the Orders table storing a number of sales orders for an organization and the Regions table identifying the regions that the sales geography is divided into.

In some embodiments the business database may be stored on a server computer not shown separate from the database administration terminal . In such embodiment such other computer may be operatively connected to the network so that the administration application may access the business database . In other embodiments the business database may be stored on the application server . In further embodiments the administration application may have no direct connection with the database instead the collaboration module may be connected to the database either locally on application server or remotely on a separate server computer and the administration application may connect to the database through collaboration module .

The administration application may be used to prepare the data sources that will supply the business values . This may include setting up connections i.e. a data connector record stored in data connector database to physical business databases or defining database query statements for selecting the intermediate data that is relevant for the dashboard discussed below . Administration application may also include the functionality to produce an intermediate table comprising the intermediate data that is referenced by summary application on analyst terminal . As will be described in greater detail below the intermediate data includes an intermediate link and intermediate values that correspond to the selected business values in business database . In one embodiment the intermediate data may include the execution of an SQL statement on the business database to select intermediate values . In other embodiments the intermediate values may include summary values that correspond to an analysis of the selected plurality of business values in business database . In such case the intermediate link may include a summary link identifying analytical procedures for producing the summary value. The analytical procedures may for example use SQL functions e.g. summation average count maximum minimum etc. to perform calculations on the business values . In other embodiments not using a summary link to identify analytical procedures SQL functions may still be used to sort restrict or aggregate the business data values without performing any analysis.

It will be understood that in some embodiments intermediate values may not be stored in intermediate database . Instead intermediate values may be dynamically derived generated or retrieved from the business database using the intermediate link e.g. a SQL query when required. That is a SQL query may only be executed to retrieve the intermediate values when requested without the results of the query being stored in intermediate database . In other embodiments intermediate values may be cached in intermediate database and be periodically updated.

Analyst terminal includes summary application which provides the functionality of defining key performance indicators KPIs . KPIs can be metrics for measuring different aspects of business performance and are typically based on the intermediate data in intermediate table . That is the key performance values may be a subset of the intermediate values . For example if the intermediate values included aggregated total sales figures per calendar quarter for several years a KPI may specify that the key performance indicator values corresponding to the intermediate values should only be for the current year. Also a KPI can have a key performance indicator format which indicates a visual format in which the KPI values can be depicted. Referring briefly to shown there is an example graphical element depicting a line chart for total sales for four consecutive quarters from Q 09 to Q 10.

In another example a KPI may also be a comparison of overall sales from the current quarter to the same quarter in the previous year. Other examples of KPIs include total sales amount for different regions within a geographical sales location see briefly e.g. the data for such a KPI is shown in or the number of orders per region see e.g. the data for such a KPI is shown in .

The definition of KPIs may require expertise and knowledge in the area of business analysis. Since KPIs can be based on the intermediate data in intermediate table the business analysts using summary application can define KPIs without performing the tasks associated with connecting to or querying business database typically performed by database administrators.

KPIs may be stored in KPI database as a KPI record . This KPI record may be accessed by drawing application in designer terminal . A KPI record may also specify the way in which the referenced intermediate data in the intermediate table may be visualized. Referring briefly to and as described in greater detail below there is shown an example KPI record indicating a Sales by Region KPI that is based on the intermediate table Region Sales uses Total Sales as the metric and is to be visualized as a Bar Chart . Referring briefly also to there is shown another example KPI record indicating an Orders by Region KPI that is also based on the intermediate table Region Sales . This KPI uses Number of Orders as the metric and is preferably visualized as a Pie Chart .

Designer terminal may include drawing application which allows a graphic designer to visually design the dashboard by placing the graphical elements corresponding to KPIs on the dashboard and selecting desired graphical formats for the KPIs. Drawing application may include tools to lay out the graphical elements in a desired fashion facilitating resizing and or moving them in a manner desired by the graphic designer. The selection and placement of the graphical elements on the dashboard may be performed independent of the nature of the metric the KPI corresponds to. For example the location and size of the visual representation of the KPI may be modified regardless of the key performance indicator values in the KPI or the key performance indicator format e.g. line graph bar chart etc. that has been selected for the KPI. The dashboard can also contain graphical elements that are not related to KPIs or to business data in any way. These elements are typically purely visual in nature and are used for improving the look of the dashboard. Examples include static text labels shapes and images.

In some embodiments the drawing application may include the functionality of a viewer application on viewer terminal . In such case the dashboard creation system may be configured to communicate a key performance indicator value and a key performance format to the drawing application to render the key performance indicator value in the key performance format. Referring briefly to illustrated are screenshots of dashboards containing the graphical elements for the Sales by Region and Orders by Region KPIs shown in respectively.

Designer terminal and drawing application may typically be used by individuals with knowledge of graphic design. Since the layout and appearance of graphical elements are based on a KPI record the designers using the drawing application may need little to no knowledge of how to define KPIs. That is graphic designers may not need to have the business analysis skills necessary to evaluate business requirements for selecting relevant KPIs. Further the graphic designer may not need to have knowledge of how to access business data values from business database i.e. graphic designers do not need to have the technical expertise involved in connecting to and or querying a business database . In this way individuals without the business knowledge required for the tasks of KPI definition or the technical expertise necessary for database access but with knowledge of graphical design may collaborate in the creation of a dashboard .

Application server may include a collaboration module . The collaboration module may typically be a server side component that facilitates the interaction and data flow amongst the client terminals in the creation of dashboard . The collaboration module may be operatively connected to data connector database KPI database intermediate table database and graphical elements database . Collaboration module may be configured to send and receive messages on network so as to provide remote access to software programs to the client terminals discussed above. As noted above in some embodiments the collaboration module may also be connected to business database . In such case the administration application may perform its operations through the collaboration module .

When interacting with database administration terminal to connect to and query business database collaboration module can store a data connector record in data connector database . Such data connector record may store the information required to access the business database and may be produced by a database administrator using administration application on database administration terminal . The data connector record may contain the security credentials for accessing the business database and once created the data connector record may be accessed by the collaboration module when a business analyst uses an intermediate table . To retrieve the intermediate values referenced in the intermediate link e.g. to obtain results from executing an SQL statement the intermediate table may use the information contained in the data connector record to connect to business database before retrieving the business values .

Referring briefly to shown there is an example data connector record illustrating the data connector for connecting to a business database with the provider SQLServer2008 and using Windows Integrated Security for authentication. As is described in greater detail below this data connector database may be used to retrieve the business values in business database when using or defining an intermediate table .

Also when interacting with database administration terminal collaboration module may be operable to store an intermediate link in the intermediate table database . The intermediate link may indicate the data connector record which the intermediate table is to use when selecting its data the name of the intermediate table and the tables in the business database from which to form the intermediate table . Referring briefly to illustrated there is an example of an intermediate link illustrating the creation of an intermediate table with the identifier Region Sales which is formed from the tables present in business database . The intermediate link also indicates how the intermediate table is formed from the tables in the business database . In the example record illustrated in the intermediate table with identifier Region Sales is formed by executing a SQL statement to select a plurality of business values . The SQL statement performs an inner join on the selected Orders and Regions tables in the business database as is shown in the accessor field . Further the intermediate link shown in can be a summary link because in addition to performing a join on the tables it subsequently performs the SUM and COUNT analytical operations so as to produce summary values corresponding to an analysis of the selected business values.

When interacting with summary application on analyst terminal the collaboration module may store the generated KPI records in KPI database . As indicated and referring briefly to the KPI records may store details regarding the nature of the KPI such as the intermediate table on which the KPI is based e.g. the Intermediate Table field in and or the preferred data visualization or formatting of the KPI when displayed e.g. the KPI format field in .

When interacting with drawing application on designer terminal collaboration module may store graphical elements records in graphical elements database . Graphical elements records represent a desired graphical format for depicting the KPI value referenced in the KPI record such as a pie chart or a bar graph for example. Graphical elements records may also store information relating to the visual appearance of the graphical element. For example this may include information relating to the positioning and or size of the graphical element . For the sake of simplicity the terms graphical element records and graphical elements will be used interchangeably in the discussion below. However it will be understood that graphical element records represent the stored data describing a visually depicted graphical element on a display.

After a dashboard design is complete the collaboration module may be operable to display the dashboard i.e. a collection of graphical elements in the viewer application on viewer terminal . In doing so the collaboration module may be configured to communicate a key performance indicator value e.g. field in and a key performance indicator format e.g. field in to the viewer application to render the key performance indicator value in the key performance indicator format .

As noted from a high level perspective the dashboard creation process may be seen as involving three parts or stages each using one of the earlier described client computers . For the purposes of illustration in the description below and in reference to the various figures an example implementation for a construction company performing its work across various regions of a city will be discussed.

Referring to there is a flowchart illustrating the steps of a method for creating an executive dashboard shown generally as . The various actions taken by the applications are indicated within dotted outlines for each respective application . That is blocks may be performed by database administrators using administration application on database administration terminal blocks may be performed by business analysts using summary application on analyst terminal block may be performed by graphic designers using drawing application on design terminal and block may be performed by business executives using viewer application on viewer terminal . It will be understood that the illustration of blocks inside the dotted outlines of an application are shown for example purposes only. Such blocks are not required to be executed in the indicated applications and in some embodiments any one or more of the applications may be configured to perform any one or more of the indicated blocks.

As a starting point a business database having business values storing the transactional data the construction company has stored and accumulated is provided Block .

Illustrated in are schematic diagrams of examples of this data shown generally as and respectively. Referring specifically to a subset of order records from an Orders table is shown indicating a number of orders received by the construction company. Each order record may include four fields an Order Identifier an Order Amount a Region Identifier and a Customer Identifier . The Order Identifier is a unique identifier for each order record in the Orders table . The Order Amount reflects the amount that was paid for the order. The customer identifier is an index into a customer table not shown storing records relating to and or identifying the construction company s customers. The Region Identifier provides a link to the corresponding region identifier in the Regions table . Examining the order records and for orders that were made in the region with Region Identifier R it can be seen that there are two such orders orders with Order Identifiers 10003 and 10007 for Order amounts 285.00 and 505.00 respectively.

Referring to the Regions table shown generally as illustrates the region records indicating the regions in which the city is divided into. The table may include two fields a Region Identifier and a name . In the example there are four regions a Northeast region with Region Identifier R a Southeast region with Region Identifier R a Southwest region with Region Identifier R and a Northwest region with Region Identifier R . Carrying on from the example in it can be seen that the orders made in the region with Region Identifier R were made in the Northeast region.

Once a business database has been provided a database administrator familiar with business database may access database administration terminal to define a data connector Block . As indicated above using administration application the database administrator may be able to provide the information necessary to populate a data connector record containing this information. Once created the data connector record may be stored in the data connector database by collaboration module . Referring to illustrated there is an example data connector record for business database shown generally as . A data connector record may include a data connector Identifier field a Provider field a Server Identifier field and an Authentication field . The data connector Identifier field indicates an identifier of the data connector SalesDC which is provided to allow other tables or programming modules to reference the data connector record .

The Provider field indicates the type of database provider e.g. Oracle IBM DB2 MySQL etc. the data connector record provides a connection to. In this case the business database is a SQLServer2008 database. As is known in the art the provider of a database is provided in the data connector record because different providers may connect and interact with external programmatic modules in different ways.

The Server Identifier field stores the name location and or path of a server on which the business database is running. As noted above although the business database is illustrated as residing on database administration terminal the business database may reside on other computers operatively connected to the network in . To identify such computer the Server Identifier field stores the name or path of a computer server on which the business database resides. In the example business database resides on database administration terminal and Server Identifier field stores an alias to this computer as SERVER . In some embodiments there may be multiple business databases that the intermediate table summarizes data from. In such case there may need to be additional data connector records .

The Authentication field stores the method of authentication used by the business database for procuring access to the business database . In the example the authentication field stores Windows Integrated Security as the authentication method a mechanism that allows the credentials for authentication to be reused from the username and password associated with a user profile of the Windows operating system. In other embodiments data connector record may include fields such as a username and password to allow business database to authenticate the programmatic module trying to access it.

Once a data connector record has been created a user of the database administration terminal may define an intermediate table having intermediate data Block . The intermediate data may include one or more intermediate values each corresponding to a plurality of business values stored in business database and an intermediate link corresponding to the business data values . An intermediate values may be the result of aggregate operations which may for example be performed by an SQL query on the business values present in the business database . For example this may be a grouping of records into categories so as to enable easier viewing and understanding of the business data values . Or it may just be a joining of records stored in disparate tables in the business database as is discussed below in relation to .

An intermediate link in the intermediate data allows the records present in the intermediate table to be identified with the original business data values from which the intermediate data was taken. For example this may include a SQL statement s indicating how the intermediate table records were selected from the tables of the business database . That is the SQL statement indicates the selected business values from the business database .

In another embodiment the intermediate link may be a summary link that additionally or alternatively includes analytical procedures e.g. summation averaging maximum minimum etc. that can be used to derive summary values corresponding to an analysis of the business values . As noted earlier such a summary link may include SQL functions that perform analytical procedures on numeric values in the selected business values .

A next step is to select an intermediate link to identify the business values Block . Referring to illustrated there is an example intermediate link shown generally as that can be a summary link containing analytical procedures. The data in the intermediate link may be provided by a database administrator through the use of the administration application on the database administration terminal and once specified may be stored in the intermediate table by collaboration module .

The intermediate link may include an intermediate link Identifier field a data connector field and an accessor field . The intermediate link Identifier field acts as a link to other programming modules referencing the intermediate table . In the example the intermediate link Identifier field stores Region Sales as the name of the intermediate table to which it belongs. As will be discussed below this name will be referenced by a KPI record when defining a KPI.

In the example intermediate link the data connector field stores SalesDC to indicate the method by which the intermediate table is going to access business database . SalesDC acts as a link to the data connector discussed above as shown in that encapsulates the business database access information. When accessing business database the data connector record with the data connector Identifier corresponding to SalesDC is retrieved by the collaboration module from the data connector database and used to connect to business database . As discussed above the data connector information may include authentication data such as a username and a password for allowing a connection to business database .

The accessor field indicates how data in the intermediate table corresponds to selected business values in the business database . Specifically it may dictate the intermediate values or in some cases summary values in the intermediate table and how such values are derived from the selected business values . The selected business values may be selected by the database administrator in an intelligible manner so as to assist the business analyst in deriving KPIs discussed below . In the example the indicated Structured Query Language SQL statement in accessor field is executed on the selected business values in the Orders and Regions tables shown in respectively described above after a connection to the business database has been formed by using the information in data connector record . It will be understood by those skilled in the art that the SQL statement defines an inner join relationship between the two selected tables on the Region Identifier column which they have in common. The SQL statement also specifies that the resultant records are to be grouped by the Region ID column and that an aggregation function is then to be applied to the OrderAmt column using the SUM function. Because of the presence of the SUM and COUNT analytical procedures referenced in the summary link summary values corresponding to an analysis of the selected business values will be produced. That is the SQL query will result in the calculation of a single OrderAmt value for each set of grouped order records . A new counter column Number of Orders is also added which contains the number of orders for each region.

In some embodiments the accessor field may not store the SQL statement explicitly. That is the administration application may be configured to dynamically generate the SQL statement from stored selections of a visual query definition user interface not shown provided in the administration application .

In some embodiments the intermediate data may include a plurality of intermediate values and a corresponding intermediate link for each intermediate value . Such a scenario may happen if multiple intermediate links are used to generate a plurality of intermediate values i.e. with each intermediate link containing a different SQL statement to link to the business data values in business database . This embodiment may be advantageous when for example there are multiple business databases and database administrators may need to retrieve the business values in several different ways.

Having selected the intermediate link the intermediate values corresponding to business values for the intermediate table can be retrieved Block . Referring to illustrated there is a preview of an intermediate table containing the intermediate values shown generally as that would result from executing the SQL statement referenced in the intermediate link discussed above on the data shown in . As noted above the example shown in illustrates summary values. Each record in the example preview of the intermediate table may include four fields a region Identifier linking the intermediate values to the different regions indicated in the Regions table of the name for the region as indicated in with the name of the field being renamed to Region Name a Total Sales field for storing the summation of the sales amount for a given region and a Number of Orders field for storing the number of orders for a given region. As discussed because the summary link included analytical procedures for producing summary values the Total Sales and the Number of Orders columns may be calculated by executing the SQL statement provided in the accessor field indicated in the summary link as shown in . As will be understood different implementations for other applications may store additional and or other types of data in the intermediate table .

For example examining record for the total sales for the Northeast region with Region Identifier R it can be seen that the number of orders field indicates there have been two orders and that the amount of these two sales totals 790.00 . Referring back to the two orders indicated are the order records with Order Identifiers 10003 and 10007 . It can also be seen that the sum of 790.00 can be derived from the figures in the order amounts for those two records 285.00 505.00 .

Once the intermediate table has been completed with the selection of the intermediate links and the retrieval and determination of the intermediate values corresponding to the selected business values the intermediate table may be used by business analysts to define a key performance indicator relevant for the construction company in the example. The business analyst need not know about the origins of the data stored in intermediate table and may simply access and manipulate the intermediate values or summary values that are present in the intermediate table to form a KPI.

Such abstraction may be advantageous if for example the layout of the underlying business database changes. In such case only the intermediate link or the data connector needs to be altered to produce an intermediate table in the same format and the KPI definition need not be altered.

Referring back to the intermediate table may then be used in the process of defining a KPI record Block . As discussed earlier a KPI is a metric that measures some aspect of business performance and can be formed from the data present in the intermediate table . KPIs may be defined by business analysts using analyst terminal such that when defining a KPI the summary application may be operable to generate a KPI record . The collaboration module may store the KPI record in KPI database . The KPI record stores the type of data that is to be visualized and defines how the visualization may be configured.

Illustrated in is an example KPI record derived from the intermediate table in shown generally as . A KPI record may have a KPI record Identifier field an Intermediate Table field a Metric field a Dimension field and a Format field . The KPI record Identifier field provides an identifier for the KPI record so that it may be referenced by a user and or other programmatic modules.

To define a KPI record a KPI link corresponding to the intermediate link can be selected Block . The KPI link corresponding to the intermediate link may be stored in the Intermediate Table field so as to provide a link to the Intermediate Table supplying the data for the KPI. In the example illustrated this Intermediate Table is the Region Sales intermediate table illustrated and discussed in relation to .

In some embodiments the key performance indicator record may include a plurality of key performance indicator values and a corresponding key performance link for each key performance indicator value . Such a scenario may arise if multiple KPI values are defined from multiple intermediate tables . However it should also be understood and as will be explained later that multiple KPI values can be derived from the same KPI link .

A KPI value corresponding to the intermediate value can also be selected for the KPI record Block . In the example the Metric field stores a link to the aggregate Total Sales field of reflecting the total sales in a given region for the construction company. The Metric field generally references a data field in the intermediate table that is of particular importance for the KPI and can be selected from the intermediate values generated for the intermediate table . Similarly the Dimension field indicates that it is the Region Name field of the intermediate table that the Total Sales field will be plotted against. The Dimension field is a field associated with the visual presentation of data and may be specific to the bar chart graphical format.

Next a KPI format for the KPI values may be selected Block . The Format field indicates that in the example illustrated the graphical format for depicting the KPI when it is rendered should be a Bar Chart .

It will be understood that for other KPI records with other visualization formats there may be more or less KPI record fields depending on the nature of the visualization format . For example if a KPI is defined to be a percentage change for sales in a region between the same quarter in a current year and a previous year and such figure is to be viewed as simply a text box the KPI record may not need to store the Dimension field to show how to plot two dimensional data. In some embodiments the KPI fields may be independent of the KPI visualization format . In such case if a visualization format does not require a particular field e.g. Dimension field the field may be ignored when the KPI is rendered.

Referring to illustrated there is a preview of the KPI data that would result after applying the properties of the KPI record in to the intermediate values in the intermediate table shown in shown generally as . Since the KPI has been defined as showing the amount of sales per region the resulting data has two fields a Region Name field and a Total Sales field . Examining the KPI preview record for the Northeast region it can be seen that the total sales 790.00 is indicated in the KPI preview record

Referring simultaneously to it can be seen that the unused columns of the intermediate table are not included in the KPI preview . However the KPI preview still maintains data that corresponds to an intermediate value in the intermediate table because the KPI value and the KPI link as shown in in the KPI record were selected as corresponding to the intermediate table s intermediate values and intermediate links .

It should be noted that KPI preview records i.e. the data from executing the KPI records may be dynamically generated i.e. the data is immediately retrieved when a graphical element corresponding to the KPI is displayed on viewer application on viewer terminal as shown in . In such embodiment the KPI data is not stored in a database so as not to provide stale data when displaying the dashboard . Instead data is dynamically generated and the dashboard shows an up to date snapshot of the business data values stored in business database . Nevertheless the storage of KPI preview records e.g. in KPI database for static analysis of business values on business database is also within the contemplation of the subject embodiments.

Once a KPI record is defined the placement of graphical elements corresponding to the KPIs on a dashboard may be specified by a graphic designer Block . A graphic designer may interact with designer terminal and use drawing application as shown in to organize the visual appearance of the KPI on the dashboard . For example the graphic designer may specify the size and position of each graphical element corresponding to the KPI and he may also specify the color scheme or font used on the graphical element . These details may be stored in a graphical elements database also shown in . Each graphical element may store further data not shown relating to the details of the visual appearance of the KPI as well as a link e.g. the KPI record Identifier field shown in to the KPI record for the KPI that the graphical element corresponds to. In some embodiments a graphical element can be configured to display more than one KPI. For example this may be the case if the graphical element is a stacked bar chart.

After the graphical elements have been laid out the drawing application may be configured to instruct the collaboration module to retrieve the graphical element from the graphical elements database for rendering the KPI Block . This may be viewed by a business executive using viewer application on viewer terminal . Referring to illustrated in the screenshot shown generally as of the completed dashboard is a depiction of the Sales by Region KPI discussed earlier with regards to referred to generally as . The screenshot may be displayed by viewer application on viewer terminal as shown in when the collaboration module communicates the key performance indicator values and the key performance indicator format as shown in to the viewer application configured to render the key performance indicator preview records as shown in in the key performance indicator format . As can be seen the data records from the KPI preview shown in has been plotted in a bar chart form. The graphical element corresponding to the KPI record in shows the region name plotted on the X axis and the total sales for each of those regions plotted on the y axis.

This visual representation of the business values stored in the business database may be used by a potential business executive of the construction company to quickly determine which region has been generating the most sales. For example using this visualization the business executive may be able to easily see that the sales in the Northwest region are close to 3 times that of the Northeast region.

While the formation of a dashboard has been illustrated using the general steps above the advantage of dividing the overall dashboard creation process into the described steps will further be illustrated in the context of a revision to the KPI record .

From the perspective of a business analyst the presence of an intermediate table having intermediate values may be particularly advantageous when revising a KPI record . In one embodiment the summary application on analyst terminal may contain a graphical user interface that shows intermediate values of the intermediate table e.g. as shown in in a way that is easy to manipulate and access. Such user interface not shown may allow a business analyst to drag and drop the intermediate values onto or away from a KPI record to modify it.

Continuing on with the example of the construction company described above a business analyst may now want to change the KPI record indicating total sales by region as shown in to a KPI record showing the number of orders by region. This may be done for example because the latter KPI is perceived to be a better indicator of a region s business performance.

To do so the business analyst may define another KPI record as shown in . Referring again to the intermediate data for the revised KPI may include a second intermediate value corresponding to a second set of selected business values and a second intermediate link identifying the corresponding second set of selected business values .

In the example the KPI record in may be revised to reflect the new type of data that is desired to be visualized. Referring again to the business analyst may use summary application on analyst terminal to make modifications to the KPI record and then send messages to collaboration module to store the modified KPI record into the KPI database .

It will be appreciated that although the example intermediate values shown in illustrate only four data records in other embodiments the intermediate values of the intermediate table may contain hundreds of fields that correspond to thousands of business values in a complex business database . In such scenario the task of the business analyst in defining or modifying KPI records may be greatly simplified because the business analyst may not have to refer to the granular detailed data values that may be present in business database . Instead they may be able to identify metrics from the intermediate table to define the KPI record . This is particularly the case if summary values corresponding to an analysis of the business values are employed i.e. if the analytical procedures specified in the summary link has summarized and reduced the volume of business values that needs to be reviewed by a business analyst.

Also the use of summary application on analyst terminal may provide flexibility for the business analyst in defining a KPI record . For example if summary values in the intermediate table may contain numerous and different metrics the business analyst may be able to more easily revise KPI records if their initial definitions turn out to not be as effective in meeting the business requirements of an organization.

To define a second revised KPI record only a subset of the total steps in defining a dashboard need to be repeated. Referring again to it will be seen that only blocks need to be repeated.

Referring simultaneously also to shown in is another KPI record stored in KPI database that has been modified from the KPI record illustrated in . The KPI record Identifier field has a new name Orders by Region indicating the new type of data that is to be visualized.

The selection of a new KPI link corresponding to a second intermediate link Block is a straightforward step because the intermediate table does not change. This is because the revised KPI is to be defined from the same intermediate table as was indicated in i.e. the data being the same as was illustrated in . The intermediate table field thus has not changed and still indicates Region Sales as the intermediate table . The ability to reuse the same intermediate table in the definition of another KPI record may be particularly advantageous because it saves the business analyst from re involving the database administrators to gather the business values from the business database . In doing so it allows individuals without expertise in information technology to be able to perform the KPI development step in dashboard creation and or modification . Particularly the ability to reuse intermediate values in intermediate table improves the usefulness of a dashboard because changes can be made in the creation of a dashboard project at a later step in the development workflow to adapt to feedback from business executives without the need to re involve a business organization s technical personnel.

Next a business analyst using the analysis terminal may select a new KPI value corresponding to the second intermediate value Block . The Metric field is changed to Number of Orders to reflect the second intermediate value that is to be measured. Particularly the Number of Orders field in the intermediate table of will now be used in the KPI. The Dimension field remains the same because the desired KPI is also a two dimensional KPI that can be analyzed by region.

Having selected the new KPI links and KPI values the new KPI Format can now be selected Block . The KPI Format field has been changed to indicate that a pie chart is now the preferred visualization format over the bar chart to visualize the data.

Referring to illustrated there is a preview of the KPI data that would result after applying the properties of the KPI record in to data in the intermediate table shown in shown generally as . Since the KPI has been defined as showing the number of orders per region the resulting data has two fields a Region Name field and a Number of Orders field . Examining the KPI preview record for the Northeast region it can be seen that the two orders for that region i.e. as seen in the intermediate table in is indicated in the KPI preview record

Referring to illustrated in the updated screenshot shown generally as of an updated dashboard is the graphical element depicting the Orders by Region KPI from . As with the screenshot depicted in this screenshot may be rendered by viewer application on viewer terminal as shown in with the collaboration module being configured to store and retrieve graphical element in graphical elements database to facilitate such rendering. That is the new key performance indicator value i.e. the number of orders per Region has been rendered in the new key performance indicator format i.e. the pie chart because the new key performance indicator value and the new key performance indicator format have been communicated to the viewer application in viewer terminal . The graphical element corresponding to the KPI record in shows each slice of the pie labeled with the region name with the size of the slice corresponding to the number of orders in each region. Notably the other graphical elements from have not changed because there have not been any modifications to the KPIs corresponding to those respective graphical elements .

It should be understood that in the typical case a newly defined KPI record may not be automatically shown on existing dashboards. That is in order to have the new KPI appear on an existing dashboard the new KPI may need to be added to the existing dashboard using drawing application on designer terminal . However in some embodiments a new KPI may be configured to appear on existing dashboards in a default position.

For clarity it should be noted that the intermediate link may not always perform analysis on the business data in business database so as to produce summary values. That is as discussed above in some cases the intermediate link may be configured just to select business values from business database without performing any type of analysis on the selected business values . In such case analysis such as arithmetic operations counting etc. on the selected business values may be subsequently performed by a business analyst with reference to the intermediate values on analyst terminal .

For example referring to there is shown an intermediate link and intermediate values of another example intermediate table . The intermediate link in with the identifier Region Sales Details is similar to that which is defined in except in this example the database query in the accessor field does not perform any analytical procedures on the records in the Orders or Regions tables in respectively i.e. it does not use the SQL SUM or COUNT functions . The SQL statement in accessor field only joins the Orders and Regions tables together and renames the Name column of the Regions table in to the field name Region Name without performing any analysis such as use of the SUM or COUNT functions as in the summary link and summary values in respectively.

Such an intermediate link would result in the intermediate values illustrated in . These intermediate values illustrate the records having the region name appended to the order records as a result of the INNER JOIN operation performed on the region identifier .

In such example a business analyst may have more flexibility in defining KPIs because they can select from a broader range of data. For example the business analyst may specify a KPI for the number of orders in a region over an order amount threshold.

It will be understood that the described system may be flexible to encompass both embodiments the use of intermediate values that merely collect data records corresponding to a selected plurality of business values in business database and the use of summary values in the intermediate values corresponding to an analysis of the selected business values in the business database . In the latter case the business values may be derived by at least one analytical procedure specified in an intermediate link that is a summary link. In either embodiment the resultant intermediate values in the intermediate table may be used by a business analyst to define a KPI record .

It will be understood by persons skilled in the art that variations are possible in variant implementations and embodiments of the described dashboard creation system . Such variations include but are not limited to variations in the connectivity amongst described components the sequence of execution by the described components the organization of described components as well as the data structures and types of data stored.

The steps of a method in accordance with any of the embodiments described herein may be provided as executable software instructions stored on computer readable media which may include transmission type media. Such steps may not be required to be performed in any particular order whether or not such steps are described in claims or otherwise in numbered or lettered paragraphs.

The invention has been described with regard to a number of embodiments. However it will be understood by persons skilled in the art that other variants and modifications may be made without departing from the scope of the invention as defined in the claims appended hereto.

