---

title: Method and apparatus for identifying network functions based on user data
abstract: Techniques for identifying network functions include determining first data that indicates a concept represented in content provided by a device. A function provided by a network service is determined based on the first data. In some embodiments, techniques include forming a data structure that associates each function of a plurality of functions provided by a plurality of network services with at least one identifier for a concept.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08645554&OS=08645554&RS=08645554
owner: Nokia Corporation
number: 08645554
owner_city: Espoo
owner_country: FI
publication_date: 20100527
---
Service providers and device manufacturers e.g. wireless cellular etc. are continually challenged to deliver value and convenience to consumers by for example providing compelling network services. Many device manufacturers have invited independent parties to develop software applications for the hardware platforms produced by those manufacturers for example to accelerate the number of applications that can be offered to users of the platform in a short time after the platform is introduced. Such applications often rely on backend services available over a communications network such as mapping services points of interest services telephone number lookup services exchange rate services image processing services facial recognition services music identification services among hundreds or even thousands of other backend services. These services typically are invoked using a particular application programming interface API accessed over the communication network through a particular messaging protocol. It can become very challenging for an application developer to identify the backend services appropriate for supporting the application.

Therefore there is a need for an approach for identifying network functions based on user data called content hereinafter such as sound clips and photographs on a user device or based on context such as time location and activity as determined on the user device or both.

According to one embodiment a method comprises determining first data that indicates a concept represented in content provided by a device. The method further comprises determining based on the first data a function provided by a network service.

According to another embodiment an apparatus comprises at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to determine first data that indicates a concept represented in content provided by a device. The apparatus is further caused to determine based on the first data a function provided by a network service.

According to another embodiment a method comprises facilitating access to at least one interface configured to allow access to at least one service. The at least one service is configured to perform at least determining first data that indicates a concept represented in content provided by a device. The at least one service is configured also to determine based on the first data a function provided by a different network service.

According to another embodiment a computer readable storage medium carrying one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to determine first data that indicates a concept represented in content provided by a device. The apparatus is further caused to determine based on the first data a function provided by a network service.

According to another embodiment an apparatus comprises means for determining first data that indicates a concept represented in content provided by a device. The apparatus further comprises means for determining based on the first data a function provided by a network service.

According to one embodiment a method comprises forming a data structure that associates each function of a plurality of functions provided by a plurality of network services with at least one identifier for a concept.

According to another embodiment an apparatus comprises at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to form a data structure that associates each function of a plurality of functions provided by a plurality of network services with at least one identifier for a concept.

According to another embodiment a method comprises facilitating access to at least one interface configured to allow access to at least one service. The at least one service is configured to form a data structure that associates each function of a plurality of functions provided by a plurality of network services with at least one identifier for a concept.

According to another embodiment a computer readable storage medium carrying one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to form a data structure that associates each function of a plurality of functions provided by a plurality of network services with at least one identifier for a concept.

According to another embodiment a computer program product includes one or more sequences of one or more instructions which when executed by one or more processors cause an apparatus to at least perform the steps of one or more of the above methods.

According to another embodiment an apparatus comprises means for forming a data structure that associates each function of a plurality of functions provided by a plurality of network services with at least one identifier for a concept. The apparatus also comprises means for means for forming a data structure that associates each function of the plurality of functions provided by the plurality of network services with at least one identifier for a device context.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

Examples of a method apparatus and computer program are disclosed for identifying network functions based on content or context. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.

As used herein the term content refers to refers to any digital data including data that can be presented for human perception for example digital sound songs digital images digital games digital maps point of interest information digital videos such as music videos news clips and theatrical videos documents advertisements program instructions or data objects any other digital data or any combination thereof. Content is stored in one or more data structures such as files or databases. Although various embodiments are described with respect to identifying network functions appropriate for a digital photograph it is contemplated that the approach described herein may be used with other types of content such as sound recordings video recordings game data and files retrieved from the network among others.

By way of example the communication network of system includes one or more networks such as a data network not shown a wireless network not shown a telephony network not shown or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet short range wireless network or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network and the like or any combination thereof. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. worldwide interoperability for microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi wireless LAN WLAN Bluetooth Internet Protocol IP data casting satellite mobile ad hoc network MANET and the like or any combination thereof.

The UE is any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia computer multimedia tablet Internet node communicator desktop computer laptop computer notebook computer netbook computer tablet computer Personal Digital Assistants PDAs audio video player digital camera camcorder positioning device television receiver radio broadcast receiver electronic book device game device or any combination thereof including the accessories and peripherals of these devices or any combination thereof. It is also contemplated that the UE can support any type of interface to the user such as wearable circuitry etc. .

By way of example the UE and user oriented services communicate with each other and other components of the communication network using well known new or still developing protocols. In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols the packet includes 3 trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet its destination the length of the payload and other properties used by the protocol. Often the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks such as the Internet typically include a physical layer 1 header a data link layer 2 header an internetwork layer 3 header and a transport layer 4 header and various application headers layer 5 layer 6 and layer 7 as defined by the OSI Reference Model.

The client server model of computer process interaction is widely known and used. According to the client server model a client process sends a message including a request to a server process and the server process responds by providing a service. The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices called hosts and communicate via a network using one or more protocols for network communications. The term server is conventionally used to refer to the process that provides the service or the host computer on which the process operates. Similarly the term client is conventionally used to refer to the process that makes the request or the host computer on which the process operates. As used herein the terms client and server refer to the processes rather than the host computers unless otherwise clear from the context. In addition the process performed by a server can be broken up to run as multiple processes on multiple hosts sometimes called tiers for reasons that include reliability scalability and redundancy among others. A well known client process available on most nodes connected to a communications network is a World Wide Web client called a web browser or simply browser that interacts through messages formatted according to the hypertext transfer protocol HTTP with any of a large number of servers called World Wide Web servers that provide web pages. For example in some embodiments the network services are World Wide Web servers and the UE each include the browser with which to obtain those services.

The user oriented services employ one or more backend services through collectively referenced hereinafter as backend services through corresponding application programming interfaces APIs through collectively referenced hereinafter as backend API . Many backend services publish their network addresses and APIs and message protocols in a service registry . For example a web services registry includes UDDI Universal Description Discovery and Integration which is interrogated by Simple Object Access Protocol SOAP messages to provide access to Web Services Description Language WSDL documents describing the protocol bindings and message formats required to interact with the web services listed in its directory.

In order to provide a user oriented application for UE an application developer which may be an individual or a team of individuals writes a client process such as client process to interact with the backend services either directly or indirectly through a user oriented service also written by the developer and delivers the client process to the UE . In some cases the application developer relies on the browser on the UE for a user interface and writes the user oriented network service that interacts with one or more backend services and simply delivers to the UE a link for the service . Knowledge of all the backend services and their corresponding API and corresponding protocols often requires a great deal of experience from a technical savvy developer. Invoking a large number of these backend services may also involve a lot of storage and processing on the UE or host of the service .

In addition for some user oriented applications an appropriate action by the application depends on particular content chosen by the user for operation by the application e.g. whether the user has taken a photograph of a building or a corn field or a group of persons. The backend service to be invoked often depends on what is represented by the content for example a facial recognitions service and a movie ticket reservation service are not likely appropriate for a picture of a corn field provided by a user. Anticipating all such user provided contents and programming interfaces to all appropriate backend services would render many user oriented applications exceedingly large and complicated and thus delay the development and delivery of such applications. Consequently user oriented applications would benefit from a way to uniformly or dynamically identify appropriate functions of backend services or both.

To address this problem the system of introduces the capability to identify network functions based on content and context on user equipment. In the illustrated embodiment the expanded capability includes the function lookup service and a function concept context data structure . The illustrated function lookup service includes its own API and zero or more indices and serves as a single gateway for multiple backend services . The indices if present allow the function lookup service to efficiently find in the data structure a backend service related to the user s current content or context or both. The function lookup service provides one or more backend services that can be looked up in service registry and invoked by a client or user oriented service . The new function lookup service uses features extracted from user supplied content and associated with the advanced backend services in the function concept context storage in order to suggest appropriate functions of the backend services . The client or user oriented service determines a particular backend service or function thereof based on the functions provided and determines values for any parameters required by the backend service and sends those values in accordance with the API and corresponding protocol. The function concept context data structure and function lookup service are example means to achieve the advantage of simplifying the processes in client and corresponding user oriented service if any while providing a wide range of backend services . The client process thus consumes much less memory to provide the wide range of backend services than would a client that explicitly supported each of those backend services.

In the illustrated embodiment entry includes a service identifier ID field a function identifier ID field an API identifier ID field a protocol field a parameters field a description field a media type field a relevant concepts field and a relevant contexts field .

The service ID field holds data that indicates one of the backend services . Any method to identify the backend service in field may be used such as network address for the service e.g. an Internet Protocol IP address and Transfer Control Protocol port or a protocol domain name directory filename or a key into the service registry associated with that backend service as is well known in the art. The function ID field holds data that indicates an individual function if any of a backend service indicated in field . The API ID field holds data that indicates an API for the function indicated in field such as a network address where the API is published or an identifier for the API set itself within the service. The function is part of the particular API set. The protocol field holds data that indicates a message protocol for exchanging data with the API indicated in field . In some embodiments the API or protocol or both are available at the service registry at the key indicated in field and field or field or both respectively are omitted. Including the fields or or both are example means of achieving the advantage of reducing network bandwidth to invoke a function of a backend service. Omitting field or field or both are example means of achieving the advantage of reducing the storage footprint of the function concept context data structure .

The parameters field holds data that indicates the input parameters for which values are to be provided to the function and output parameters for which values are output from the function indentified in fields and . For example the parameters field holds data that indicates input and output parameter names units and valid ranges and default values if any. In some embodiments the parameters are available at the service registry at the key indicated in field and field is omitted. Including the field is an example means of achieving the advantage of reducing network bandwidth to invoke a function of a backend service. Omitting the field is an example means of achieving the advantage of reducing the storage footprint of the function concept context data structure .

The description field holds data such as text that describes the operation performed by the function indentified in fields and which can be understood by an end user of UE . For example the description field holds text that states Determine street address corresponding to GPS coordinates Provide maps for a given location Determine celebrity in a photo showing that celebrity s face Reserve tickets for shows at a participating theater Book plane ticket to destination city Reserve table at a participating restaurant Determine title and artist of recording similar to sound sample Determine market buying and selling prices for stocks and bonds Determine market buying and selling prices for commodity Determine retail outlet for a product Provide recipes that include given ingredients Issue payment from a bank account etc. In some embodiments the description is available at the service registry at the key indicated in field and field is omitted. Including the field is an example means of achieving the advantage of reducing network bandwidth to present to a user of UE a function of a backend service. Omitting the field is an example means of achieving the advantage of reducing the storage footprint of the function concept context data structure.

The media type field holds data that indicates the types of media on which the function operates e.g. image file formats audio file formats video file formats word processing document formats spreadsheet formats mark up language formats among others. This information is used as a discriminator in some embodiments to filter out functions that do not operate on the content provided by a user. In some embodiments the media types are available at the service registry at the key indicated in field and field is omitted. Including the field is an example means of achieving the advantage of reducing network bandwidth to determine an appropriate function of a backend service. Omitting the field is an example means of achieving the advantage of reducing the storage footprint of the function concept context data structure.

The relevant concepts field holds data that indicates which concepts such as physical objects of a concept identification library are relevant to the function identified in fields and . Concept libraries of concepts that can be identified in images audio or text are known. As used herein a concept is an entry in a semantic or object library and can represent tangible objects such as persons and cars or intangible objects such as stocks and bonds or actions such as skiing swimming. Often the concepts are grouped into categories such as vehicles or buildings or aquatic or airborne etc. In some embodiments the concepts entered in the relevant concepts field are the specific concepts or concept categories that the function applies to. For example person concepts are relevant to facial recognition functions and voice recognition functions media type images or audio respectively while foodstuffs are relevant to recipes functions media type text indicating foodstuff and buildings are relevant to ticket purchase and table reservations media type text indicating building and products are relevant to retail outlet functions media type text indicating product . In some embodiments concepts are expressed in terms of an object or semantic vocabulary or both as described in more detail below. In some embodiments the concept is a concept of a semantic vocabulary such as stocks or bonds. The concepts exist outside of and independent of their digital representations in the content provided by the user. Field is an example means of achieving the advantage of associating a function of a backend system with a concept that may be represented in user content. Field may be omitted in some embodiments that select functions purely on context and not on objects or other concepts represented in content.

The relevant context field holds data that indicates temporal or spatial or activity information that is relevant to the function identified in fields and . In some embodiments context is expressed in terms of a context vocabulary as described in more detail below such as Monday 10 AM GPS position communicating operating on document idle absent etc. Often the context includes context subjects associated with certain combinations of context vocabulary words as described in more detail below such as working exercising sleeping eating recreating. For example time of day and day of week are relevant for banking functions location is relevant to retail outlet functions as well as ticket purchase and table reservations functions season of year is relevant to recipes functions. Communication activities are relevant to text to speech or speech to text conversion functions. Field is an example means of achieving the advantage of associating a function of a backend system with a context that may be associated with a user of a device such as UE . Field may be omitted in some embodiments that select functions purely on concepts represented in content and not on context.

Any method may be used to indicate the context in field . In various embodiments a context vocabulary and topology is developed that identifies words and topics related to consumers contexts. Any method known in the art may be used to generate the context vocabulary and topology. For example several documents are collected that discuss and describe consumer context such as documents that describe the significance of whether the consumer is working for pay or performing other duties or at leisure whether the current time is a weeknight or weekend whether the current season is summer or winter whether the consumer is at home or away or whether the consumer is at a destination or en route whether a document is invoking a place name or a person name whether the consumer is stationary or moving and at what speeds and directions whether it is light or dark and what applications are available on a user equipment belonging to the consumer. These documents are mined to determine words related to consumer context collections of words related to context or relative usage of those words or some combination. In some embodiments the vocabulary topology includes topics imposed on or deduced from relative occurrences of words within the documents. For example in various embodiments probabilistic latent semantic indexing pLSI or latent Dirichlet allocation LDA well known in the art are used to deduce topics from words in a set of documents. Such methods can be used to derive context words and context topics from a set of documents that are directed to the circumstances of consumers of network services. Because each topic is associated with a group of words in certain relative abundances there is a topology relating topics to words and subtopics to higher level topics. In some embodiments a context vocabulary is built manually or by relying on or extending some standard topology such as Open Directory Project ODP vocabulary. In these embodiments LDA is not used in building the context vocabulary itself but once a vocabulary is established documents can be mined using LDA to see what topics context is contained within the document. The context vocabulary topology is used in various embodiments described herein to determine UE and backend services contexts.

In some embodiments there are only two levels of categories e.g. topics and words below the root level context vocabulary. Each topic is defined by a set of words each with a particular range of occurrence percentages. In some of these embodiments a vocabulary of V words is represented by a V dimensional vector and each word is represented by a V dimensional vector with zeros in all positions but the position that corresponds to that particular word. Typically words of low meaning such as articles prepositions pronouns and commonly used words are ignored. Each of T topics is represented by a V dimensional vector with relative occurrences of each word in the topic represented by a percentage in the corresponding word positions. All topics are represented by a V T matrix.

When a word from the context vocabulary is found in a document e.g. a document describing a backend service that word is considered a mixture of the different topics that include that word with a percent probability assigned to each topic based on the percentage of words in the document for example using the well known methods of LDA. As a result the entire document can be represented by a set of topics found in the document with a probability metric assigned to each topic e.g. a T dimensional vector with varying probabilities in each position of the vector. Such a vector is called a token herein. Two documents such as a description of a backend service and a description of the current state of a UE can be compared by computing a similarity of the two T dimensional vectors tokens representing those documents such as a sum of products of corresponding terms. Alternatively or in addition a distance metric can be computed between the two documents which increases as the two tokens become less similar. Any distance metric can be used such as an order zero distance absolute value of the coordinate with the largest difference an order 1 distance a sum of the absolute values of the T differences an order two distance a sum of the squares of the T differences equivalent to the Euclidean distance an order three distance a sum of cubes of absolute values etc. The more similar are tokens from two documents or the smaller the distance between those tokens the more relevant are the documents to each other. In the following description it is assumed that a context vocabulary has been defined and is stored in a context vocabulary data structure. The context of a document or resource is represented by a context token. The more similar the context tokens of two documents e.g. the smaller the distance measure between them the more relevant one document is to the consumer context indicated by the other document.

Context is not obtained only from mining a user text base but more often directly on context data from the device. Thus in some embodiments context vocabulary is defined based on output from the context engine which reflects all context that can be inferred from the device side e.g. as user location current activity transport mode in car in bus driving etc relations social contacts abstracted locations such as home work etc.

For purposes of illustration it is assumed that there is a context vocabulary data structure not shown available to describe context. It is further assumed that there is a different whole language semantic vocabulary data structure not shown for all concepts of a language such as is used in modern search engines. It is further assumed that in some embodiments objects are also represented by an objects vocabulary and topics in an objects data structure not shown for which object tokens are defined. In some embodiments there is also a mapping between the concept vocabulary and topics and the concepts in a database relating physical objects and other concepts to features extracted from different media as described in more detail below.

Thus in some embodiments the data in the relevant contexts field is a list of one or more context tokens for the function indicated by field and . Similarly in some embodiments the data in the relevant concepts field is a list of one or more concept tokens for the function indicated by field and .

In the illustrated embodiment the data structure includes multiple indices. The first index includes a concept identifier field and a matching function IDs field for each concept or category or both in the concepts database as indicated by ellipsis. The concept identifier field holds data that indicates a concept ID or category from the database or vocabulary of concepts. The matching function IDs field holds data that lists a function ID as indicated by fields and for each function that includes the concept or category in the relevant concepts field . In some embodiment only functions in which the probability of the concept topic is greater than a threshold probability are included in the list.

Similarly a second index includes a context field and a matching function IDs field for each context word or subject or both in the context vocabulary as indicated by ellipsis. The context field holds data that indicates context vocabulary word or subject from the context vocabulary. The matching function IDs field holds data that lists a function ID as indicated by fields ad for each function that includes the context in the relevant contexts field . In some embodiment only functions in which the probability of the context topic is greater than a threshold probability are included in the list.

The GUI module presents graphical elements on a display of the UE and detects user operation of one or more input devices such as a touch screen to allow the user of UE to control the content generator and select a function identified based on the generated content. The context engine interface module interacts with the context engine to determine the temporal spatial and activity conditions of the UE . In some embodiments the GUI module comprises markup statements and forms in a web page sent to browser .

The content generator produces content to be used by the application for the UE such as a file transfer process that downloads content from a service an audio capture process to generate an audio file from sound detected on a microphone of the UE an image or video captures process to generate an image or video file from a digital camera a user input capture process to generate a text file or document file or spreadsheet or drawing file based on user operation of one or more input devices. The media type identifier module determines the type of media of the content produced by content generator module .

The user oriented service interface module interacts with a user oriented service that participates in the UE application if any. In some embodiments the user oriented service is omitted and the user oriented service modules are divided between the client and the function lookup service and the user oriented service interface module is replaced by a function lookup service interface module.

Once the user has been presented through the GUI module with a choice of one or more functions returned by the interface module and chosen which function to use the client or user oriented service will fill in missing input parameters for that function e.g. based on the current context or concept represented or both. If a parameter value cannot be determined automatically the GUI module causes the user to be prompted to fill in any remaining fields. Once all the parameters are filled the client or user oriented service passes the information for the selected function to the backend service to service the request. The results are either directly sent to client by the backend service or passed on through the user oriented service or function lookup service .

The client interface module controls interactions with the client process or browser to receive the content and context from the UE and to present one or more functions provided by the function lookup service .

The media feature extractor module uses an appropriate media engine that extracts one or more features such as statistics histograms clusters amplitudes of Fourier or wavelet or principal components or measures of texture or other properties from the media. The feature list is further processed extracting any patterns and the patterns are passed to the concept identification module .

The concept identification module relies on a concept features database and performs search and pattern analysis to identify an object or other concept from the database which most closely matches the media features list or pattern. Once the object or concept has been identified the concept identifier for that object or other concept is passed on to the function lookup service through interface . The concept identification module and concept features data structure are example means to achieve the advantage of automatically deriving a concept represented in content created in or provided to an application by a user.

The function lookup service interface module controls interactions with the function lookup service to send the context and concept identifier based on the content to the service and to receive one or more functions provided by the function lookup service . The interface is an example means to achieve the advantage of avoiding a repetition of a function selection process on every user oriented service that supports a client application.

The service registry interface module allows the user oriented service to find out from the service registry useful details of the functions provided by the function lookup service . Useful details include API protocol input and output parameters and description. In some embodiments all such details are provided by the function lookup service through the interface and module is omitted.

The API is used to receive commands to perform the functions of function identification based on user provided content or context or both. The function identifier module determines a function in the data structure associated with the concept identified by module based on the user content and in some embodiments also associated with context of the UE . The API is an example means to achieve the advantage of replacing code to interact with all APIs for all backend services with simpler code to interact only with the single API of the function lookup service . The simper code consumes less storage space on the client process or user oriented service and speeds development.

The relevance and recommendation module determines how many and which associated functions to return. For example the module uses the context of UE compared to the context structure for the supplied function and identifies the best set of functions to be passed back to client based on the context data received. In some embodiments the module also constructs context structures for each function where certain context fields may be empty or unavailable. These chosen functions along with their associated context structures are passed back to the client e.g. directly to client or indirectly to client or browser through the user oriented service . The relevance and recommendation module is an example means to achieve the advantage of sending a small set of most relevant functions to the client process for presentation to a user.

In a background process the build DB module populates the function concept context data structure as described in more detail below with reference to . In some embodiments the build DB module uses the service registry and function database to search for all functions supported by registered services for a particular concept or context concept. In some embodiments module also retrieves context or concept tokens or structures defined by the backend services that associate a particular function with appropriate contexts.

In step the function concept context data structure is built or updated. For example one or more databases or tables thereof are populated with data for the fields depicted in . More details on step are described below with reference to . Thus a data structure is formed that associates each function of a plurality of functions provided by a plurality of network services e.g. backend services with at least one identifier for a concept or at least one identifier for a device context or both. When context data is also included in the data structure step is an example means for forming the data structure that associates each function of the plurality of functions provided by the plurality of network services with at least one identifier for device context e.g. at UE associated with the content.

In step the content in use by a client process and associated context are determined. Thus step is an example means for determining first data that indicates a current content and an example means for determining second data that indicates a current context for the device e.g. UE . For example the content is determined by client to be an image with metadata provided by the digital camera as content generator and the context is determined by the client as a context token based on the metadata or output from context engine or both. When step is performed by user oriented service content and context are determined based on the image and context sent by the client. When step is performed by function lookup service content and context are determined based on the content or media features or concept identifier and context token sent by the client or user oriented service . Thus step is an example means for determining the second data that indicates the current context for the device by receiving a message that indicates the second data.

In step a concept is determined based on the content in use at the UE . In some embodiments the concept is determined by the client or user oriented service which includes the concept identification module . In these embodiments the concept is determined at the function lookup service based on the concept identifier received in a message from the client or user oriented service . In some embodiments the concept is determined by the function lookup service that includes the concept identification module based on content or media features received in a message from the client or user oriented service . In some embodiments the concept is determined based at least in part on the context also. For example based on an image it is determined that the concept is a building and based on the context that indicates an associated position or both position and orientation that the building is a particular building having a particular address such as a theater. Thus step determines first data that indicates a concept represented in content provided by a device such as UE .

In step the function lookup service determines one or more candidate functions of backend services by searching the function concept context data structure for functions that include the concept identifier in the relevant concepts field and the context in the relevant contexts field e.g. with a probability above a threshold probability. Thus step is an example means for determining the function provided by a backend network service based on the first data that indicates the concept by finding in the data structure an association between the function and an identifier for the concept. In some embodiments if no function passes the threshold the threshold is lowered until at least one function passes the threshold. Thus step determines based on the first data that indicates a concept a function provided by a network service. When context is also considered step is an example means for finding in the data structure an association between the function and an identifier for device context that includes the current context for the device e.g. UE associated with the content.

Thus step is an example means for determining the first data that indicates the concept represented in content provided by the device by receiving a message that indicates a media type feature based on the content and determining the first data that indicates the concept based on the media type feature. When only the content is sent step is an example means for determining the first data that indicates the concept represented in content provided by the device by receiving a message that indicates the content then determining a media type feature based on the content and then determining the first data that indicates the concept based on the media type feature.

When step also uses the context to find the candidate function then step is an example means for determining the function provided by the network service by determining the function based at least in part on second data that indicates a current context for the device e.g. UE .

If step is performed by the client process or user oriented service step is performed by sending the content or media feature or concept and or context to the function lookup service .

In step at least one of the candidate functions is recommended. If step is performed by the function lookup service then the candidate functions are passed to the relevance and recommendation module to determine the most relevant functions to recommend based on the concept contained in the user provided content or the context e.g. based on a similarity measure or distance metric between concept tokens or between context tokens or both. If step is performed by the client or user oriented service step is performed by sending the content or media feature or concept and or context to the function lookup service .

In step the recommended function is caused to be presented to the user. If step is performed by the function lookup service then the recommended functions is passed to the user oriented service or to the client process . If step is performed by the user oriented service step is performed by sending the recommended functions received from the function lookup service to the client process or browser . Thus step causes at least in part actions that result in transmitting a message that indicates the function. If step is performed by the client process then step is performed by the GUI module based on a recommended service received directly from the function lookup service or indirectly through the user oriented service . Thus step is an example means for causing at least in part actions that result in presenting at the device e.g. UE a description of the function.

In step the recommended function is caused to be invoked. If step is performed by the function lookup service then the recommended functions is caused to be invoked by passing the recommended function to the user oriented service or to the client process . If step is performed by the user oriented service step is performed by receiving a message indicating the user has selected one of the recommended functions and then invoking the backend service with values for the input parameters as described in more detail below with reference to . If step is performed by the client process then step is performed by invoking the backend service with values for the input parameters received via GUI module . Thus step is an example means for causing at least in part actions that result in invoking the function provided by the network service.

In step it is determined if end conditions are satisfied. If so the process ends. Otherwise control passes back to step to update the function concept context data structure and to step to determine the next content in use by a client process.

In step the content used by a client process and associated context e.g. of UE are determined. In embodiments in which step is performed by the user oriented service step is performed by receiving a message from the client that indicates the content or media features of the content and the context such as one or more context tokens. If performed by the client process step includes obtaining the content from the content generator module and the context from the context engine interface . An interface to prompt a user of UE for content and context is described in more detail below with reference to and .

In step media features or concepts represented in the content are determined. If performed by the client process in embodiments with the user oriented service then step includes obtaining the media type from the media type identifier and sending the content media type and context to the user oriented service . If performed by the client process in embodiments without the user oriented service then in some embodiments step includes obtaining the media type from the media type identifier and sending the content media type and context to the function lookup service and in other embodiments includes sending the content to the appropriate media feature extractor module and in still other embodiments includes sending the list of media features to the concept identification module .

If performed by the user oriented service then in the illustrated embodiment step includes obtaining the media type from a media type identifier module or the message from the client process in some embodiments and sending the content to the appropriate media feature extractor module . Then the list of media features is sent to the concept identifier module . In various other embodiments the user oriented service does not include the concept identification module and does not determine the concept.

In step the context and list of features or concept identifier is sent to the function lookup service e.g. from the user oriented service in some embodiments or directly from the client process in some embodiments. In some embodiments user oriented service sends the list of media features and the context to the function lookup service and lets the service determine the concept from the media features. Thus step is an example means for determining the function provided by the network service by sending a message that indicates the first data identifying a concept to a service lookup service that associates with each function of a plurality of functions provided by network services e.g. backend services data that indicates an identifier for a concept and data that indicates an identifier for context of a device e.g. in function concept context data structure .

In step one or more recommended functions of backend services are received from the function lookup service . In some embodiments the recommended functions are identified simply by the backend service ID from field and if different the function ID from field . In some embodiments the data indicating the recommended function includes one or more of the API ID from field the protocol from field the parameters from field the description from field and the media type from field . In some embodiments the information for one or more such fields are obtained during step from the service registry using the service registry interface module based on the backend service ID as a key.

In step data indicating the recommended function is caused to be presented to the user on UE e.g. based on the description of the function such as is stored in field . In embodiments in which step is performed by the client process the data indicating the recommended function is presented through GUI module . In embodiments in which step is performed by the user oriented service or the function lookup service the data indicating the recommended function is sent to the browser or client process to be presented through GUI module . Such a GUI is described in more detail below with reference to .

In step it is determined whether the user has selected one of the recommended functions e.g. by operating a pointing device as described in more detail below with reference to . If not then control passes back to step to determine the next content or context or both at UE . For purposes of illustration it is assumed that the content is an image of a corn field and that the user has selected the recommended function described as Determine market prices for commodity .

If a user selection is determined in step then in step the parameters for the selected function are determined. In some embodiments the parameters are provided by the function lookup service during step . In various other embodiments the parameters are determined from the registry based on a backend service ID as a key and if any a function ID during step or during step . For purposes of illustration it is determined that the input parameters for the selected function include commodity name geographic location and date. 

In step known values for the input parameters are determined e.g. based on the context information. For example based on the concept identifier the content is known to represent corn and from the context the GPS position of the UE when the image was captured is known and the current date is known. Thus values for all three input parameters are known. If another parameter is required that is not known a default value is used or the value is marked unknown.

In step the user is prompted to revise values for the input parameters. In embodiments in which step is performed by the client process the data indicating the input parameters and pre filled values is presented through GUI module . In embodiments in which step is performed by the user oriented service or the function lookup service the data indicating the input parameters and pre filled values are sent to the browser or client process to be presented through GUI module . Such a GUI is described in more detail below with reference to . During step the user may change one or more values of the input parameters. For example the user may provide values for parameters that were marked unknown. For purposes of illustration it is assumed that during step the date is changed by the user from the date of the picture to a future date when the corn is ready to harvest or a contract is to be signed to sell the corn.

In step the selected function is invoked. For example in some embodiments the user oriented service sends to a backend service a message in the appropriate protocol with parameters and values according to the appropriate API including indicating the selected function if any. In some embodiments the client process sends to the backend service a message in the appropriate protocol with parameters and values according to the appropriate API including indicating the selected function if any. In response during step results from the invoked function are received. For purposes of illustration it is assumed that the results include data that indicates an average price and a list of buyers of corn.

In step the results are caused to be presented to the user on UE . In embodiments in which step is performed by the client process the data indicating the results is presented through GUI module . In embodiments in which step is performed by the user oriented service or the function lookup service the data indicating the results is sent to the browser or client process to be presented through GUI module . Such a GUI is described in more detail below with reference to .

In step it is determined if end conditions are satisfied. If so the process ends. Otherwise control passes back to step to determine the next content in use by a client process and the associated context.

In step a backend service is determined to add to the function concept context storage data structure. For example in some embodiments a registry of one or more backend services is queried to obtain a list of backend services. In some embodiments a web page is made available where administrators of backend services can upload or manually input data indicating those backend services. In some embodiments individual functions APIs protocols parameters description or media types or some combination are also determined during step .

In step a service not yet added to the function concept context storage data structure is selected as the current service. For example the next service in a list of backend services retrieved from a service registry is selected as the current service.

In step a function not yet added to the function concept context storage data structure is selected as the current function. For example in some embodiments one or more parameters of an API are associated with one function of multiple functions available at the backend service. For example a service for commodity markets includes one seller function for finding a buyer and buy price for a commodity and a separate buyer function for finding a seller and sell price for a commodity. One of those functions is taken as the current function.

In step one or more concepts of the concept database or vocabulary are associated with the current function. For example a semantic analysis of the description of the function determines that the function is related to commodities. The semantic analysis further determines that commodities include certain semantic vocabulary words such as petroleum byproducts of petroleum crude oil heating oil propane natural gas coal wheat oat corn rice and soybean coffee cocoa sugar cotton and orange juice cattle pork bellies and lean hogs. Of these it is determined in step which of these words are concepts in the concepts that are included in the concept database or similar to those words such as gas tanks oranges orchards and pigs. These concepts and topics that include these concepts are determined in step . While the list may be long as for commodities it excludes many concepts such as people buildings and vehicles excluded from commodities.

In step one or more contexts of a context vocabulary and topics database are associated with the current function. For example a context semantic analysis of the description of the function and parameters determines that the function is related to place and time and the activities of buying and selling.

In step entries for the function concept context storage are generated and stored. For example a new entry is added to the function concept context data structure . The new entry includes an identifier for the current backend service in field an identifier for the current function in field and other information for the function as appropriate in fields through . The new entry also includes the list of identifiers for commodity concepts in relevant concepts field and context vocabulary tokens and words for place time buying selling in the relevant contexts field .

In step it is determined whether there is another function for the current service. If so then control passes back to step described above to determine the next function of the service to make current. If not then in step it is determined whether there is another backend service from the list. If so then control passes back to step described above to determine the next backend service to make current.

If there are not further services or functions to add then in step one or more search indices are built. For example for each word in the concept database an entry is made in the indices data structure . For example the service identifier and function identifier for the sell commodities function is added in field for each concept ID field that lists one of the commodities. Similarly for each word or topic in the context vocabulary an entry is made in the indices data structure . For example the service identifier and function identifier for the sell commodities function is added in field for each context field that lists one of the contexts time place buying or selling. In some embodiments an index is not formed and step is omitted.

In step it is determined if end conditions are satisfied. If so the process ends. Otherwise control passes back to step to determine the next service that has not yet been added to the function concept context storage data structure .

More functions may be represented than can fit in the function selection options area using a scroll bar graphical component well known in the art to slide the descriptions of recommended functions up or down in the area . Associated with each function description area is a radio button . As a user selects a function to operate on the content a solid circle is placed inside the radio button. In the illustrated GUI the functions described by function description area and are indicated as selected by the user. The selection is completed by activating the select button .

For purposes of illustration it is assumed that based on the image of the corn field in picture A described as survey owned land and the example function descriptions described above for field the process identified the concept corn and determined the recommended functions that are presented as the following descriptions including the identifier for corn in function description areas 

For purposes of further illustration it is assumed that based on the image in picture B described as Shanghai skyline and the example function descriptions described above for field the process identified the concept building and context place Shanghai and determined the recommended functions that are presented as the following descriptions including the identifier for context location in function description areas 

For purposes of further illustration it is assumed that based on the image in picture C described as electricity bill and the example function descriptions described above for field the process identified the concept letter and concept electricity and the context bill payment and determined the recommended functions that are presented as the following descriptions including the identifier for electricity in function description areas 

The processes described herein for identifying network functions based on content may be advantageously implemented via software hardware firmware or a combination of software and or firmware and or hardware. For example the processes described herein including for providing user interface navigation information associated with the availability of services may be advantageously implemented via processor s Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. Such exemplary hardware for performing the described functions is detailed below.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor or multiple processors performs a set of operations on information as specified by computer program code related to identifying network functions based on content. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or other dynamic storage device stores information including processor instructions for identifying network functions based on content. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for identifying network functions based on content is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT or a liquid crystal display LCD or plasma screen or printer for presenting text or images and a pointing device such as a mouse or a trackball or cursor direction keys or motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection to the communication network for identifying network functions based on content at the UE .

The term computer readable medium as used herein refers to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to computer readable storage medium e.g. non volatile media volatile media and transmission media. Non transitory media such as non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein for identifying network functions based on content The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of identifying network functions based on content. The display includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal for identifying network functions based on content. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

