---

title: Failure diagnostic system, electronic control unit for vehicle, failure diagnostic method
abstract: A failure diagnostic system () for a multicore CPU having installed therein a plurality of CPU cores () that is configured to be switched from a SMP mode to an AMP mode includes: load prediction means for predicting a processing load of the multicore CPU; mode switching means for switching at least one of the CPU cores () to the AMP mode when the processing load is less than a threshold; and failure diagnostic means for performing a failure diagnosis of the CPU core that has been switched to the AMP mode.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08656216&OS=08656216&RS=08656216
owner: Toyota Jidosha Kabushiki Kaisha
number: 08656216
owner_city: Aichi-ken
owner_country: JP
publication_date: 20100202
---
The invention relates to a failure diagnostic system for a multicore central processing unit CPU that is provided with a plurality of CPU cores and more particularly to a failure diagnostic system that performs a failure diagnosis of each CPU core individually an electronic control unit ECU for a vehicle and a failure diagnostic method.

Mutual abnormality detection is sometimes conducted by detecting abnormality in a LSI or microcomputer by using a configuration in which a plurality of LSI or microcomputers are installed in one system and monitoring a watchdog signal transmitted from one large scale integration LSI microcomputer to another LSI microcomputer . Further in a multicore processor in which one microcomputer carries a plurality of CPU cores an abnormality is detected by executing the same processing in a plurality of CPU and comparing the processing results. Further Japanese Patent Application Publication No. 7 230392 JP A 7 230392 discloses a method by which a CPU detects abnormality by self diagnosis.

However executing the same processing in a plurality of CPU or executing a certain instruction for abnormality detection as shown in may put pressure upon resources of the microcomputer or processor thereby affecting the execution speed of standard processing reducing the execution speed of standard processing with respect to the usual one such as control or data processing that is essentially required for the processor.

A conventional multicore processor has a processing mode that is Symmetric Multi Processing or called as SMP a processing mode that is Asymmetric Multiprocessing or called as AMP and a processing mode that is Bound Multiprocessing or called as BMP combining the SMP and AMP. Further for example Japanese Patent Application Publication No. 2008 123439 JP A 2008 123439 discloses a processor configured for the BMP mode wherein when an abnormality occurs in any CPU core the processing allocated to the CPU core in which the abnormality has occurred is allocated to another CPU core. With the operating system OS disclosed in the JP A 2008 123439 when the processing is allocated to another core the processing with a high priority order is allocated to a normal CPU and the processing with a low priority order is not performed thereby making it possible to execute the processing with a high priority order with the same efficiency as that before the abnormality has been detected.

However the OS disclosed in the JP A 2008 123439 is not different from that disclosed in JP A 7 230392 in that a pressure is put upon the resources of microcomputer or processor for example a 1 1 addition is performed by a CPU core when an abnormality is detected and therefore the execution speed of standard processing may be affected.

The invention provides a failure diagnostic system that may specify a CPU core in which an abnormality has occurred from among a plurality of CPU cores without affecting the execution speed of standard processing and also an ECU for a vehicle and a failure diagnostic method.

The first aspect of the invention relates to a failure diagnostic system for a multicore CPU having installed therein a plurality of CPU cores that is configured to be switched from a SMP mode to an AMP mode the system including load prediction means for predicting a processing load of the multicore CPU mode switching means for switching at least one of the CPU cores to the AMP mode when the processing load is less than a threshold and failure diagnostic means for performing failure diagnosis of the CPU core that has been switched to the AMP mode.

In the failure diagnostic system according to the first aspect the load prediction means may predict a processing load of the multicore CPU in a period required for the failure diagnostic means to conduct failure diagnosis.

Further in the failure diagnostic system according to the first aspect the load prediction means may establish the period that is started at a point of time in which a task executed by the CPU core to be switched to the AMP mode ends.

Further the failure diagnostic system according to the first aspect may further include a first data bus dedicated to the CPU core in the SMP mode a second data bus dedicated to the CPU core in the AMP mode and data control means for connecting the CPU core in the SMP mode to the first data bus and connecting the CPU core in the AMP mode to the second data bus.

Further in the failure diagnostic system according to the first aspect the data control means may have a plurality of multiplexor units connected to a plurality of the CPU cores respectively and the mode switching means may switch a connection destination of the multiplexor unit connected to the CPU core that has been switched to the AMP mode from the first data bus to the second data bus.

Further in the failure diagnostic system according to the first aspect the failure diagnostic means compares a processing results of test data for failure diagnosis with an expected value that has been stored in advance and conduct failure diagnosis of the CPU core that has been switched to the AMP mode based on whether the processing results and the expected value are in conformity.

Further the failure diagnostic system according to the first aspect may further include an external memory that stores the test data and the expected value wherein the failure diagnostic means may read the test data and the expected value via the second data bus.

Further in the failure diagnostic system according to the first aspect a result of the comparison between the processing result of the test data and the expected value may be stored in the external memory.

Further in the failure diagnostic system according to the first aspect the data control means may store the test data and the expected value.

Further in the failure diagnostic system according to the first aspect when the failure diagnostic means detects a failure of the CPU core the CPU core may be disconnected from the multicore CPU and tasks are distributed only to the remaining CPU cores that have not been diagnosed as having failed.

Further in the failure diagnostic system according to the first aspect the threshold of a processing load may be set to a value such that the processing capacity of standard processing in the CPU core in the SMP mode does not decrease when the CPU core switched to the AMP mode undergoes failure diagnosis.

Further in the failure diagnostic system according to the first aspect the standard processing may be a processing that requires real time execution ability.

Further the failure diagnostic system according to the first aspect may further include storage means for storing as information a time at which failure diagnosis has been performed wherein the failure diagnosis may be conducted again in a case where a time elapsed since the last failure diagnosis exceeds a predetermined time.

An ECU for a vehicle according to the second aspect of the invention includes the failure diagnostic system according to the first aspect navigation means video output means and audio output means.

The third aspect of the invention relates to a failure diagnostic method for a multicore CPU having installed therein a plurality of CPU cores that is configured to be switched from a SMP mode to an AMP mode the method including predicting a processing load of the multicore CPU switching at least one of the CPU cores to the AMP mode when the processing load is less than a threshold and performing failure diagnosis of the CPU core that has been switched to the AMP mode.

The invention may provide a failure diagnostic system that may specify a CPU core in which an abnormality has occurred from among a plurality of CPU cores without affecting the execution speed of standard processing and also an ECU for a vehicle and a failure diagnostic method.

A first embodiment will initially be explained. is an example drawing illustrating schematically failure diagnosis of a microcomputer according to the first embodiment of the invention. illustrates an example of a block diagram of the microcomputer that carries a multicore CPU according to the first and second embodiments of the invention. illustrates an example of system layout of an ECU according to the first and second embodiments of the invention. The microcomputer has a CPU core and a CPU core . As shown in in a case where the CPU core and CPU core are not distinguished this is called a CPU core while one system constituted by the CPU core and CPU core is called a multicore CPU . An OS that is installed in the microcomputer may switch the CPU core and CPU core individually between SMP Symmetric Multi Processing and AMP Asymmetric Multiprocessing processing modes the SMP processing mode and AMP processing mode will be referred to hereinbelow as SMP mode and AMP mode respectively . Thus the processing efficiency is increased where the OS and CPU cores are switched dynamically temporarily when failure diagnosis is performed from the SMP mode to a BMP processing mode instead of operating in a complete BMP process.

The SMP mode is generally a processing mode in which one OS has the CPU core CPU core and one memory and the OS dynamically allocates the tasks to the CPU core with a small processing load. Thus there is no connection between the task and CPU core and from the standpoint of OS the CPU cores are equivalent. The AMP mode is generally a processing mode in which the tasks allocated to the CPU core are determined in advance. In this mode even if the processing load of a certain CPU core is small the task that is an object of execution may not be executed by the CPU core with a small processing load unless the task that is an object of execution is the task that has been allocated to this CPU core . Further the BMP mode is a processing mode in which one OS allocates a specific task to a specific CPU core and other tasks are dynamically allocated to the remaining CPU core.

Referring to the CPU core and CPU core initially execute the standard processing in the SMP mode I in . The standard processing is control or data processing that is requested at all times for the CPU cores based on the operations conducted by the vehicle driver travel state of the vehicle or vehicle state in other words the processing other than a task of detecting a failure. The standard processing is typically constituted by a plurality of different tasks.

At a timing of failure diagnosis of the CPU core the OS checks that no effect will be produced on the execution speed of standard processing that the processing load is below the threshold even when only the CPU core will execute the standard processing before switching the CPU core from the SMP mode to the AMP mode II in . As a result the standard processing may be ensured to be executed without delays even when the CPU core is in the AMP mode and executes only a task of failure diagnosis when failure diagnosis is conducted.

The OS switches the CPU core in this case CPU core that is the object of failure diagnosis from the SMP mode to the AMP mode. The special task executed by the CPU core in the AMP mode is the failure diagnostic task. The CPU core in the AMP mode does not execute any task other than the failure diagnostic task. By contrast the CPU core remains in the SMP mode and the CPU core continues the standard processing III in .

Once the CPU core completes the failure diagnostic task the OS switches the CPU core from the AMP mode to the SMP mode IV in .

Further at a timing of failure diagnosis of the CPU core the OS switches the CPU core from the SMP mode to the AMP mode and allocates the failure diagnostic task to the CPU core in a procedure similar to the failure diagnosis of the CPU core shown in .

By installing a multicore CPU and OS that may be switched between the SMP mode and AMP mode and checking before the switching as to whether the processing load is such that the standard processing may be conducted without delays by one CPU core it is possible to conduct individual failure diagnosis of each CPU core of the multicore CPU without affecting the execution speed of standard processing.

The second embodiment will be explained below. In a microcomputer has the multicore CPU a data access controller a memory access controller and data buses . The multicore CPU has a CPU core a CPU core and a data control unit . The data access controller is connected to an external memory and the memory access controller is connected to the external memory . The multicore CPU may be installed at an LSI rather than the microcomputer .

An Electronic Control Unit ECU installed at a vehicle may be realized by the microcomputer external memory and external memory . For example in the ECU of a multimedia system the processing of displaying a road map on a display device on the basis of position information detected by a global positioning system GPS receiver and searching a route to the destination video processing of television or camera images and voice processing or radio or CD player are the examples of standard processing. In the engine ECU the standard processing is a processing of adequately controlling the fuel injection amount fuel injection timing opening closing timing of intake and exhaust valves throttle opening degree and ignition timing of an igniter. Further the installation at a body ECU brake ECU and various ECU for assisting driving is also possible. In the embodiment failure diagnosis is conducted without affecting the execution speed of these kinds of standard processing. Therefore a processing that requires real time execution ability may be also defined as the standard processing.

The data control unit controls CPU communication between the CPU core and CPU core . A function of notifying the state of CPU core at each cycle time and a function of transmitting and receiving data between the CPU core and CPU core via a shared memory may be considered as typical functions of CPU communication. For example in a case where the two CPU cores execute the same application and use the mutually obtained processing results the data control unit checks the compatibility of processing results. Further the CPU core may interrupt the CPU core from the CPU core and conversely by using the prepared Application Programming Interface API and sending a request to the data control unit .

The data bus is a bus that is used by the CPU core during standard processing. The data bus is a bus that is used by the CPU core during failure diagnosis. At a failure diagnostic timing the data control unit causes the CPU core to access the external memory via the data bus . For example because the CPU core conducts standard processing even when the CPU core executes a task of failure diagnosis by providing separately the data bus that is used during standard processing and the data bus that is used during failure diagnosis it is possible to increase a bus load of the data bus during failure diagnosis and prevent any effect on the execution speed of standard processing.

The data access controller accesses the external memory in response to a request from the data control unit during failure diagnosis and reads the below described test data and expected value.

The external memory is a memory device of a comparatively large capacity for example Hard Drive Disk HDD or Solid State Disk SSD that stores the application programs OS and files necessary for the standard processing. The data control unit sends an access request of the CPU core that is executing the standard processing to the memory access controller via the data bus .

Various kinds of Intellectual Property IP not shown in the figure are connected to the bus . These IP are an Integrated Circuit IC such as a power circuit an I O interface circuit a Control Area Network CAN communication circuit and a motor control circuit. In a case where the microcomputer is installed at the ECU of a multimedia system IC such as a radio tuner a television tuner an AV decoder a sound recognition synthesizing circuit a Bluetooth circuit and a touch panel sensor circuit are the IP. The IP of an audio system are connected to speakers via an amplifier and the IP of a video system are connected to a display.

The layer above the OS is a layer of a User Interface UI control application and a functional logic . The UI control application controls the UI that is displayed on a display by the ECU of a multimedia system. The uppermost layer as shown in the figure is a UI application for various functions that control the UI to make it visible to the user. A Human machine Interface HMI application for navigation generates a UI relating to the navigation function or generates a UI of a menu to be operated by the user. The HMI application of a video system generates a UI for video such as DVD or television or generates a UI of a menu by which the user operates this function. The HMI application of an audio system generates a UI relating to an audio function such as radio or television sound or generates a UI of a menu to be operated by the user. The vehicle related HMI application for example generates a UI for the user to operate the functions relating to vehicle control that uses position information or a UI for displaying the alarm signals or messages.

The UI control application may control the display of UT generated by the UI application of each function. For example the control may be performed such that only the UI of a predetermined function is displayed over the entire screen of the display or all the UI are divided and displayed on the display or only the UI of a predetermined function is not displayed.

An HMI API which is a layer located between the UI control application and UI application for each function represents the API for the UI application of each function to call out a functional logic . For example where the user inputs an operation with respect to a predetermined UI application the operated UI application calls out the API corresponding to the operation with respect to the HMI API and the HMI API calls out the predetermined functional logic according to the called out API.

The functional logic is a navigation logic a video system logic an audio system logic and a vehicle related logic . The logic is used for each function of the ECU . Where the UI application for each function and functional logic are thus separated the degree of freedom in development is increased. For example it is possible to change only the UI while leaving the functional logic as is.

The data control unit will be described below with reference to . The data control unit has three multiplexers MUX and a mode control unit a CPU number register and a comparison block . The CPU core is connected to the MUX and the CPU core is connected to the MUX . The MUX is connected to both the data access controller and the memory access controller . The MUX is also connected to both the data access controller and the memory access controller . The mode control unit is connected to the MUX MUX CPU core and CPU core . The MUX is connected to the CPU core and CPU core . The MUX is also connected to the comparison block .

The mode control unit switches the processing modes of the CPU core and CPU core . Thus the mode control unit switches the CPU core to the AMP mode while leaving the CPU core in the SMP mode and switches the CPU core into the AMP mode while leaving the CPU core in the SMP mode. More specifically for example a High signal is inputted in the CPU core that is to be switched to the AMP mode. In this case the internal switch of the CPU core that has been switched to the AMP mode is switched ON OFF to form a connection line or a logic circuit designated for failure diagnosis. The logic circuit for failure diagnosis may complete the failure diagnosis within a short time for example by making it possible to obtain the processing results of failure diagnosis in several blocks.

Further the CPU core that has been switched to the AMP mode outputs the processing results to the MUX and the CPU core that has been switched to the AMP mode outputs the processing results to the MUX . Thus the processing results only from the CPU core in the AMP mode are inputted in the MUX .

The mode control unit also switches the processing modes of the MUX and . The MUX and output an access request to the memory access controller in the SMP mode and output an access request to the data access controller in the AMP mode. As a result in a case where the CPU core is switched to the AMP mode the mode control unit switches the MUX to the AMP mode and leaves the MUX in the SMP mode. More specifically the mode control unit inputs for example a High signal to the MUX . Likewise in a case where the CPU core is switched to the AMP mode the mode control unit switches the MUX to the AMP mode and leaves the MUX in the SMP mode. More specifically the mode control unit inputs for example a High signal to the MUX .

The MUX inputs the processing results inputted from the CPU core in the AMP mode in the comparison block . The comparison block has a processing result storage unit that stores the processing results a comparator and an expected value storage unit . The processing result storage unit stores the processing results. The expected value storage unit stores the expected value of the processing result that is the correct processing result. The expected value is stored in advance in the external memory and where the OS switches either of the CPU cores to the AMP mode the OS reads the expected value from the external memory to the expected value storage unit . The processing result storage unit and expected value storage unit are constituted for example by a dynamic random access memory DRAM or a register and are not necessary physically separated. The comparator compares the processing result of the processing result storage unit with the expected value of the expected value storage unit and determines whether the results match. For example when the results match a High signal is outputted. It is also possible to determine whether either of the processing result and expected value is below a predetermined threshold. The determination result is a failure diagnostic result.

A CPU number register is a register that stores an identification number of the CPU core. For example the mode control unit stores in the CPU number register the identification number of the CPU core that is next to be subjected to failure diagnosis. The mode control unit increments the CPU number register each time the failure diagnosis of one CPU core is completed. Further where the NUMBER 1 of the CPU cores installed in the multicore CPU is reached the storage contents of the CPU number register returns to 0 . As a result a plurality of CPU cores may be uniformly subjected to failure diagnosis instead of conducting failure diagnosis of the same CPU core .

The load prediction unit stores a table in which the tasks are associated with Million Instructions PerSecond MIPS values. For example the task A is a program that issues 1 000 000 instructions per 1 sec and has a processing load higher than that of other tasks B and C. The processing load of the CPU core tends to be higher with the task with a high MIPS value. The load prediction unit reads the task that is being executed in the CPU core and the tasks of the task cues reads the MIPS value from the table and predicts the processing load of the multicore CPU . shows an example illustrating the prediction of temporal changes in the processing load of the CPU core . In a combination type system the application has already been known in advance and therefore the MIPS value may be specified for each task of the application.

A time in future to which a load is to be predicted an interval from the present time at which the load is predicted to the future time will be referred to hereinbelow as a period is a time necessary to execute at least the task of failure diagnosis. The task of failure diagnosis corresponds to the test data or to the execution of the test data . This is because the CPU core that has executed the task of failure diagnosis returns to standard processing without any effect being produced on the execution speed of standard processing unless the processing load of the multicore CPU exceeds the processing load of the CPU core before the execution of the task of failure diagnosis is completed. The longest period is about 1 sec and taking into account the overhead such as switching from the SMP mode to the AMP mode and reading of test data and the like the period may be assumed to be completed within less than 1 sec to several seconds.

As shown in with consideration for the completion time of each task where the processing loads of CPU cores overlap it is possible to obtain that predicts the processing load of the multicore CPU . With a typical OS such a processing load is stationary monitored and a processing is executed such that allocates the tasks preferentially to the CPU core with empty task cues . Therefore it is preferred that the prediction of load produce no effect of standard processing. Although the prediction of load may be assumed as an additional processing for the multicore CPU because such a prediction of processing load may be performed by specifying a task from the tasks that are being executed and task cues and matching the MIPS value the prediction of processing load does not become a load that affects the standard processing.

As shown in where the relationship between the processing load of the multicore CPU and time is obtained the load prediction unit determines whether the processing load of the period exceeds the processing capacity of the CPU core here the CPU core that continuously executes the standard processing in the SMP mode. Because the processing capacity of the CPU cores is already known and may be also represented by a MIPS value the comparison may be easily made.

As shown in the processing load of a period A is determined to exceed the processing load of the CPU core but the processing load of a period B is determined not to exceed the processing load of the CPU core . Therefore the task of failure diagnosis of the CPU core is executed from a point of time t in which the period A ends referred to hereinbelow as time when failure diagnosis may be started . The processing capacity of the CPU cores that is compared with the predicted processing load is a sum total of processing capacities of all the remaining CPU cores that do not undergo failure diagnosis. Therefore for example in a case where the number of CPU cores is four the sum total of processing capacities of three CPU cores is an object of comparison with the predicted processing load.

However in a case where tasks are present that have already been allocated to the task cues the failure diagnosis is supposed to be conducted after all these tasks have been executed. In this case the period is assumed to start at a time at which the tasks of the CPU cores that are the object of failure diagnosis are completed. Therefore the processing load that has to be predicted also becomes the processing load of the period. Thus in a case where the CPU core undergoes failure diagnosis the time at which the final task A of the task cue is completed in the CPU core becomes the start point of the period as shown in . More specifically it is possible that the failure diagnosis may be started each time the period elapses since the start point. The load prediction unit predicts a processing load of the task C and subsequent tasks executed by other CPU core from the time the task A is completed task C is shown in but the task that is executed by the CPU core when the CPU core ends the task A changes depending on the execution time of each task by the CPU core .

Where the task that has once been allocated to the task cue may be allocated again the load prediction unit may find a period in which the processing load of the multicore CPU does not exceed the processing capacity and may allocate again the task that has been allocated to the CPU core to the CPU core that is not the object of failure diagnosis within this period.

Where the load prediction unit finds a period in which the failure diagnosis is possible the load prediction unit notifies the mode switching unit about the time at which the failure diagnosis may be started. Where the time at which the failure diagnosis may be started is reached the mode switching unit actually the CPU core outputs a control signal to the mode control unit of the data control unit . As a result as described hereinabove the data control unit switches the processing modes of the CPU core and MUX in order to execute the task of failure diagnosis.

The CPU core switched to the AMP mode by the mode control unit executes the task of failure diagnosis. Thus the CPU core realizes the failure diagnostic unit by executing the task of failure diagnosis. illustrate one example in which the operations of the data control unit when the CPU core is switched to the AMP mode.

The test data may be appropriate data that may be inputted into the microcomputer so as to enable the failure diagnostic unit to use for failure diagnosis the instructions identical to those of the standard processing. Thus where the expected value that is the processing result obtained when the test data are executed in the normal CPU core is known any test data may be used. It is preferred that the test data be limited to minimum necessary data because the time necessary for the failure diagnosis the aforementioned period may be minimized.

The test data including instructions may be also used for the failure diagnosis. The test data in this case are instructions opcodes and minimum necessary parameters operands for determining whether the CPU core is normal. Simple instructions and parameters processed by an operational circuit for expanded function or Arithmetic and Logical Unit ALU of the CPU core are used.

The CPU core executes the standard processing during the failure diagnosis but because the data control unit accesses the external memory or IP via the data bus the increase in bus load caused by the failure diagnosis does not affect the execution speed of standard processing.

Failure diagnosis is not required to be executed that frequently. For example even if a failure may occur due to degradation with time it is suffice to conduct failure diagnosis with a frequency of about once a day. For this purpose the OS stores day time information relating to the very last failure diagnosis. The procedure shown in and is started for example when a time equal to or longer than a failure diagnostic time interval for example one day elapses since the very last failure diagnosis with reference to the day time information for each ignition ON. When the one day is taken as the failure diagnostic time interval the failure diagnosis may be conducted with at least a one day interval when the vehicle is operated. The day time information is stored in association with the CPU core in the external memory and a diagnostic interval may be set for each CPU core.

Where the ignition is switched ON and the OS is actuated the OS reads the day time information and failure diagnostic time interval from the external memory S and compares the time that has elapsed before the present point in time and the failure diagnostic time interval S . In a case where the elapsed time exceeds the failure diagnostic time interval Yes in S the load prediction unit is caused to predict the processing load S .

The load prediction unit specifies the CPU core that is the object of failure diagnosis from the value of the CPU number register . The load prediction unit predicts the end time of the very last task allocated to the task cue of the CPU core and predicts the processing load of each period from the end time S .

Whether the processing load exceeds the processing capacity of the CPU core is then determined for each period S .

In a case where the processing capacity of the CPU core exceeds the processing load No in S the execution speed of standard processing may be affected. Therefore the mode switching unit does not switch the CPU core to the AMP mode. As a result the OS disperses the load between all the CPU cores and CPU cores in the SMP mode S and continues standard processing S .

The load prediction unit waits for the passage of the period in which the processing load has been predicted S and once the period elapses returns to step S and again predicts the load.

In a case where the processing capacity of one CPU core is greater than the processing load in step S Yes in S the mode switching unit specifies the CPU core that is the object of failure diagnosis from the value of the CPU number register S . The mode switching unit receives the time at which the failure diagnosis may be started from the load prediction unit .

The mode switching unit waits till when the failure diagnosis may be started S . The CPU core that is the object of failure diagnosis executes the task that has been allocated to the task cue still in the SMP mode till when the failure diagnosis may be started S . The processing load may be predicted again immediately before the time at which the failure diagnosis may be started.

When the time comes at which the failure diagnosis may be started the mode switching unit requests that the data control unit switch the processing mode of the CPU core S . As a result the mode control unit of the data control unit switches the CPU core from the SMP mode to the AMP mode and switches the processing mode of the MUX from the SMP mode to the AMP mode.

In this case the CPU core that has been switched to the AMP mode starts failure diagnosis S . As described above the CPU core reads the test data from the external memory and realizes the failure diagnostic unit and the data access controller reads the expected value from the external memory to the expected value storage unit

The failure diagnostic unit determines whether the diagnosis has been completed S . Whether the diagnosis has been completed may be determined for example based on whether the diagnosis has been executed before the very end of test data or whether the comparator has outputted the comparison result. In a case where the failure diagnosis has not been completed No in S the failure diagnostic unit continues executing the test data in the AMP mode S .

In a case where the failure diagnosis is completed Yes in S the failure diagnostic unit requests the mode switching unit to switch the processing mode. As a result the mode switching unit requests the data control unit to switching the processing mode of the CPU core and the mode control unit of the data control unit switches the CPU core from the AMP mode to the SMP mode and switches the processing mode of the MUX from the AMP mode to the SMP mode S .

Further the mode control unit increments the value of the CPU number register S when the CPU core whose diagnosis has not been completed is present S . As a result the number of CPU core that is next to be subjected to failure diagnosis is set to 1 in the CPU number register .

The failure diagnosis of one CPU core is thus completed. Therefore the processing flow returns to step S and the OS executes failure diagnosis of the CPU core . Failure diagnosis of all the CPU cores may be executed for example for each ignition ON by repeating the above described procedure the number of times equal to the number of CPU cores in the multicore CPU .

In a case where a failure of the CPU core is detected the multicore CPU disconnects this CPU core from the multicore CPU and the standard processing may be executed only by the remaining CPU cores . In this case although the processing capacity has decreased the standard processing may be continued after the processing results of standard processing have been ensured. In this process it is preferred that an important task with a high priority order be established and that only the established task from among the standard processing tasks be executed. A failsafe mode of the microcomputer is thus possible and protection of the microcomputer from failure is increased.

The microcomputer that uses the failure diagnosis explained in the first and second embodiments will be explained below as the third embodiment shows an example of a block diagram of the microcomputer having installed therein the multicore CPU having four CPU cores to . In the components identical to those shown in are assigned with same reference numerals and explanation thereof is omitted.

Where one of two CPU cores and undergoes failure diagnosis a large load is applied to the other CPU core . Therefore the period in which the predicted processing load does not exceed the processing capacity of one CPU core may be shortened and in this case a time necessary for failure diagnosis sometimes may not be selected by contrast in a case where four CPU cores are present the period in which the processing capacity is not exceeded is comparatively long and therefore failure diagnosis is mostly possible . By contrast even if one CPU core from among the four CPU cores to undergoes failure diagnosis the OS disperses the load while the three CPU cores are still in the SMP mode. Therefore the period may be easily detected. Thus the failure diagnosis of the embodiment may be applied to any multicore CPU regardless of the number of CPU cores .

In a case where the multicore CPU has four CPU cores as shown in the CPU number register of the data control unit is used in a 2 bit configuration to make it suitable for the four CPU cores . Furthermore a total of four MUX are provided at the data access controller side of the data control unit and each MUX is connected to the respective CPU cores to . The MUX and CPU cores to are respectively connected. The mode control unit switches one of the CPU cores to and one which corresponds to the one of the CPU cores to of the four MUX alternatively from the SMP mode to the AMP mode thereby enabling the OS to execute failure diagnosis of each CPU core .

The procedure of failure diagnosis is similar to that shown in and and steps S to S may be repeated the number of times equal to the number of CPU cores . If it is possible to perform failure diagnosis of a plurality of CPU cores concurrently without affecting the execution speed of standard processing failure diagnosis of a plurality of CPU cores may be performed concurrently.

In the configuration shown in the external memory is externally attached to the microcomputer but the external memory may be also provided inside the microcomputer . shows an example of a block diagram of the microcomputer of the fourth embodiment in which the external memory is provided in the data control unit . In the components identical to those shown in are assigned with same reference numerals and explanation thereof is herein omitted. The test data may be the same regardless of the passage of time and where the test data are not changed the expected value also may be the same.

Therefore the external memory may thus be incorporated in the data control unit . In this case it is not necessary for the data access controller to read the test data and expected values from the external memory and the failure diagnostic time may be shortened. The external memory incorporated in the data control unit is in the form of Read Only Memory ROM Random Access Memory RAM electrically erasable programmable memory EEPROM or the like. In a case where a RAM is incorporated data are for example read from the external memory and stored in the RAM when the microcomputer is started.

As described hereinabove the microcomputer of the embodiment may perform failure diagnosis individually for each CPU core of the multicore CPU without affecting the standard processing by switching the CPU core that is the object of failure diagnosis from the SMP mode to the AMP mode only when the standard processing may be executed without obstacles by the CPU cores that are not the objects of failure diagnosis.

While the invention has been described with reference to example embodiments thereof it should be understood that the invention is not limited to the example embodiments or constructions. To the contrary the invention is intended to cover various modifications and equivalent arrangements. In addition while the various elements of the example embodiments are shown in various combinations and configurations which are exemplary other combinations and configurations including more less or only a single element are also within the spirit and scope of the invention.

