---

title: Apparatus and method for preventing queue overflow for hard disk drive protection in computer system
abstract: A queue overflow prevention method and apparatus for Hard Disk Drive (HDD) protection in a computer system is provided. The queue overflow prevention method includes measuring acceleration information of the system, determining if the system is in a stable status or an unstable status using the acceleration information, and, while the system is in the unstable status, restricting the generation of a disk Input/Output (I/O) request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08516168&OS=08516168&RS=08516168
owner: Samsung Electronics Co., Ltd.
number: 08516168
owner_city: Yeongtong-gu, Suwon-si, Gyeonggi-do
owner_country: KR
publication_date: 20100413
---
This application claims under 35 U.S.C. 119 a priority to and the benefit of the earlier filing date of the Korean Patent Application entitled Apparatus and Method for Preventing Queue Overflow for Hard Disk Drive Protection in Computer System filed in the Korean Intellectual Property Office on Apr. 28 2009 and assigned Serial No. 10 2009 0037014 the contents of which are herein incorporated by reference.

The present invention relates in the field of a computer system hard disk drives. More particularly the present invention relates to an apparatus and method for restricting the generation of a disk Input Output I O request to prevent a queue overflow.

In recent years products mounting computer systems have quickly changed from a fixed form such as desktop computers to a mobile form such as laptop computers. Since the mobile equipments are often used during movement the mobile equipments are highly possible to experience external impact such as vibration falling etc. Thus technologies for protecting data within the mobile equipments from the external impact are needed. Particularly among storage media constituting the computer system the hard disk drive HDD is particularly vulnerable to the external impact. Thus there is a need for a technology for protecting the HDD from the external impact.

As is known in the art an HDD is an auxiliary memory device for storing and reading data while rotating a disk type aluminum substrate coated with magnetic substance i.e. a platter. A magnetic head for reading data stored in a magnetic form is installed at a minute distance around the platter. The magnetic head moves left and right. If the magnetic head experiences high impact in any position on the platter the magnetic head may come into direct contact with the platter and do damage to the platter surface. Thus the magnetic head cannot physically read and write data onto the platter. Thus the conventional art provides a technology for preventing damages by sensing the generation of vibration or impact through an accelerometer sensor and before the impact is forwarded to HDD moving the magnetic head to a safe zone.

Referring to an HDD protection manager receives an acceleration value periodically measured by an accelerometer sensor via a sensor driver and determines if a current system is in a stable status or an unstable status. If it is determined that the current system is in the unstable status the HDD protection manager requests an HDD filter driver to move a magnetic head to a safe zone. If the system is changed from the unstable status to the stable status the HDD protection manager requests the HDD filter driver to restore the magnetic head to the original position.

If the HDD filter driver is requested to move the magnetic head to the safe zone the HDD filter driver sends a physical hard disk driver a signal requesting movement of the magnetic head to the safe zone and allows time for the magnetic head to move to the safe zone. At this time the HDD filter driver prevents all I O requests forwarded from an HDD driver from being forwarded to an I O control driver using an I O request flow controller . Thereby preventing the magnetic head of the physical hard disk driver from going back onto a platter surface and being exposed to danger. That is the HDD filter driver stores all I O requests forwarded from the HDD driver in an internal I O queue so as not to forward the I O request to the I O control driver while the unstable status is maintained thereby protecting the physical hard disk driver . On the other hand if the HDD protection manager requests the HDD filter driver restore the magnetic head to the original position the HDD filter driver can forward all I O requests which have been stored in the internal I O queue to the physical hard disk driver via the I O control driver thereby allowing the magnetic head of the physical hard disk driver to move onto the platter surface out of the safe zone and perform physical I O.

The aforementioned conventional HDD protection technique has no problem in cases where a vibration or impact time is short and during this time a limited number disk I O requests is generated. But there is a problem that a queue overflow is generated in case where the vibration or impact time is very long or a large number disk I O requests is generated within a short time and the number exceeds a capacity of the internal I O queue . If the queue overflow is generated the computer system enters a fatal state such as a hang up a halt or a Blue Screen Of Death BSOD . Also because a post process is impossible for the disk I O request exceeding the capacity of the internal I O queue a user data loss is unavoidable.

To prevent the above problems a queue may be increased in size but there is generally a limit to a size of a memory assignable to the queue. Thus there is a need for a different way to solve the above problems.

Accordingly one aspect of the present invention is to provide a queue overflow prevention apparatus and method for Hard Disk Drive HDD protection in a computer system.

Another aspect of the present invention is to provide an apparatus and method for restricting the generation of a disk Input Output I O request to prevent a queue overflow in a computer system.

A further aspect of the present invention is to provide an apparatus and method for restricting the generation of a disk I O request in the computer system in case where a computer system is in an unstable status.

A yet another aspect of the present invention is to provide an apparatus and method for reducing a processing speed of the whole system at a hardware side to restrict the generation of a disk I O request in the computer system while a computer system is in an unstable status.

A still another aspect of the present invention is to provide an apparatus and method for freezing an operation of each process or controlling priority to restrict the generation of a disk I O request in the computer system while a computer system is in an unstable status.

A still another aspect of the present invention is to provide an apparatus and method for controlling a network throughput to restrict the generation of a disk I O request in the computer system while a computer system is in an unstable status.

According to one aspect of the present invention a buffer overflow prevention method for HDD protection in a computer system is provided. The method includes measuring acceleration information of the system determining if the system is in a stable status or an unstable status using the acceleration information and while the system is in the unstable status restricting the generation of a disk I O request.

According to another aspect of the present invention a buffer overflow prevention method for HDD protection in a computer system is provided. The method includes a protection manager and an I O request controller. The protection manager determines if the system is in a stable status or an unstable status using an acceleration value of the system. The I O request controller restricts the generation of a disk I O request while the system is in the unstable status.

The following description with reference to the accompanying drawings is provided to assist in a comprehensive understanding of exemplary embodiments of the invention as defined by the claims and their equivalents. It includes various specific details to assist in that understanding but these are to be regarded as merely exemplary. Accordingly those of ordinary skill in the art will recognize that various changes and modifications of the embodiments described herein can be made without departing from the scope and spirit of the invention. Also descriptions of well known functions and constructions are omitted for clarity and conciseness.

It is to be understood that the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example reference to a component surface includes reference to one or more of such surfaces.

By the term substantially it is meant that the recited characteristic parameter or value need not be achieved exactly but that deviations or variations including for example tolerances measurement error measurement accuracy limitations and other factors known to those skilled in the art may occur in amounts that do not preclude the effect the characteristic was intended to provide.

An apparatus and method for restricting the generation of a disk Input Output I O request in the computer system while a computer system is in an unstable status according to an exemplary embodiment of the present invention are described below.

Referring to a computer system includes an HDD protection manager a sensor driver an accelerometer sensor applications using disk I O a file system an HDD driver an HDD filter driver an I O control driver a physical hard disk driver and an I O request controller . Here the HDD filter driver includes an I O request flow controller and an internal I O queue . The I O request controller includes a platform Hardware H W performance controller a process controller and a network throughput controller .

The HDD protection manager receives an acceleration value periodically measured by the accelerometer sensor via the sensor driver . On the basis of the acceleration value the HDD protection manager determines if the current system is in a stable status or an unstable status. Here the accelerometer sensor may measure accelerations of an X axis a Y axis and a Z axis and may measure the accelerations of only the X axis and Y axis.

If it is determined that the current system is in the unstable status the HDD protection manager outputs a signal requesting the movement of a magnetic head to a safe zone to the HDD filter driver and according to the present invention the HDD protection manager outputs a signal indicating that the system is in an unstable status to the I O request flow controller . On the other hand if it is determined that the system is changed from the unstable status to a stable status the HDD protection manager outputs a signal requesting restoration of the magnetic head to the original position to the HDD filter driver and according to the present invention the HDD protection manager outputs a signal indicating that the system is in the stable status to the I O request flow controller .

If the signal requesting movement of the magnetic head to the safe zone is input from the HDD protection manager the HDD filter driver provides the signal requesting movement to the safe zone to the physical hard disk driver via the I O control driver . Here the HDD filter driver prevents all I O requests forwarded from the HDD driver i.e. an upper driver from being forwarded to the I O control driver using an I O request flow controller . That is the HDD filter driver stores in an internal I O queue all I O requests forwarded from the HDD driver such that the I O requests are not forwarded to the I O control driver while the unstable status is kept. Here the I O request is generated in the applications using disk I O and is forwarded to the HDD filter driver via the file system and the HDD driver .

Furthermore according to the present invention the HDD filter driver determines status information of the internal I O queue and provides the status information to the I O request controller . Here the status information of the internal I O queue includes a size and a present usage of the internal I O queue . This is for the I O request controller to select and use a technique suitable to restricting the I O request generation depending on the status information of the internal I O queue .

On the other hand if a signal requesting restoration of the magnetic head to the original position is input from the HDD protection manager the HDD filter driver forwards all I O requests having been stored in the internal I O queue to the physical hard disk driver via the I O control driver .

If the signal requesting movement of the magnetic head to the safe zone is input through the I O control driver the physical hard disk driver moves the magnetic head to the safe zone. If I O requests are input through the I O control driver the physical hard disk driver moves the magnetic head into position near the platter surface and then performs physical I O corresponding to the inputted I O requests.

The I O request controller restricts the generation of an I O request while the system is in the unstable status according to the present invention. That is the I O request controller receives information on whether the system is in the stable status or the unstable status from the HDD protection manager and while the system is in the unstable status the I O request controller restricts the generation of an I O request within the system through a platform H W performance control a process control or a network throughput control. Here the I O request controller monitors and stores status information of the system before restricting the generation of the I O request and if the system is changed from the unstable status to the stable status the I O request controller restores the system in the order of the status information stored. Here the status information of the system monitored by the I O request controller is information on a status or value that the I O request controller controls or changes restriction of the generation of a disk I O request as described below.

While the system is in the unstable status the I O request controller restricts the generation of an I O request using the platform H W performance controller the process controller and the network throughput controller .

If the system is changed to the unstable status the platform H W performance controller acquires and stores H W status information of the current system through monitoring and change setting of platform H W. By doing so the platform H W performance controller reduces the whole hardware performance of the system and restricts the generation of an I O request. Here the platform H W refers to a processor and a platform chipset or a South Bridge Chipset . That is the platform H W performance controller changes settings of the platform H W using a technique of changing Performance States P States of all processors e.g. a single processor a multi processor and a multi core processor within a system a technique of changing on demand clock modulation duty cycles of processors or a technique of performing platform chipset thermal throttling. By doing so the platform HAN performance controller restricts the generation of an I O request. Here the P State of the processor is described in the Advanced Configuration and Power Interface ACPI standard which is well known in the art and need not be discussed in detail herein.

The P State is marked in a form of Px . In case where there are P0 to Pn the P0 means maximum performance capability and the Pn means minimum performance capability. That is the Px means low performance as an x value increases.

As illustrated in in order to change the setting of the platform H W the platform H W performance controller interfaces with a Basic Input Output System BIOS processor s a platform chipset using a System Management Interrupt SMI an ACPI driver a processor driver a chipset driver and a separate customized driver . After that if the system is changed from the unstable status to the stable status the platform H W performance controller restores system H W values on the basis of the stored status information.

However while the system is in the unstable status the platform H W performance controller uses each of the three techniques according to the queue status information or according to a preset scenario the platform H W performance controller independently uses one technique or uses a combination of one or more techniques.

If the system is changed to the unstable status the process controller acquires and stores a disk I O request usage for all processes of a current system through monitoring and change states of execution of the processes. By doing so while the system is in the unstable status the process controller restricts the generation of disk I O requests from the respective processes. That is while the system is in the unstable status the process controller restricts the generation of a disk I O request using a technique of changing each process into a software frozen state or a technique of lowering Operating System OS scheduling priority of each process. Here the frozen state means a state in which a process is suspended to perform no further operations or commands. In the process of the frozen state the disk I O usage is reduced to zero 0 . Also if the scheduling priority of the process is lowered the disk I O usage is decreased. This is because an OS gives a process of lower scheduling priority a chance to use a processor of a system while simultaneously executing several processes. Here as illustrated in by interfacing with a process manager using Application Programming Interfaces APIs provided by the system the process controller can acquire disk I O information of all processes which are in execution in the current system and can freeze one or more of the processes or change their priority. Here the APIs can be system calls native APIs provided by the kernel Wincap or WinSock Kernel WSK . If the system is changed from the unstable status to the stable status the process controller shall restore frozen processes and restore the priority of the processes to their original level

Here while the system is in the unstable status the process controller can use all or only one of the techniques of freezing the process and the technique of changing the priority depending on queue status information. Also the process controller may use a method alternately using the two techniques depending on queue status information an expected impact amount and an expected impact sustain time.

The network throughput controller monitors a network usage of the current system information on a window size for a send receive buffer of a Transmission Control Protocol Internet Protocol TCP IP protocol network adapter information and a correlation between the network usage and a disk I O request. If the system is changed to the unstable status the network throughput controller stores the monitored information controls a network throughput and restricts the generation of a disk I O request caused by network use. The network throughput controller can control a network throughput using a technique of controlling a window size for a send receive buffer of a TCP IP protocol a technique of changing a Maximum Transfer Unit MTU and a technique of changing a link speed of a network adapter H W. At this time as illustrated in the network throughput controller can interface with the TCP IP protocol using the APIs provided by the system and change a window size of a send receive buffer and an MTU size and can interface with the network adapter driver and change the link speed of the network adapter H W . Here the APIs can be system calls native APIs provided by a kernel Wincap or WinSock Kernel WSK . If the system is changed from the unstable status to the stable status the network throughput controller restores the network state of the current system to its original level according to the stored monitoring information.

Here while the system is in the unstable status depending on queue status information the network throughput controller may use at least one of the window size changing technique the MTU changing technique and the link speed changing technique independently or a combination of one or more the aforementioned techniques.

The I O request controller may restrict the generation of the I O request using all of techniques each used in the platform H W performance controller the process controller and the network throughput controller and may restrict the generation of the I O request using one or more techniques. At this time the I O request controller can select a suitable technique depending on status information of a queue provided from the HDD filter driver . For example if a usage of the queue is higher than a threshold value as a result of identifying the status information of the queue the I O request controller can increase a strength restricting the generation of an I O request using several techniques. If the usage of the queue is lower than the threshold value the I O request controller can decrease a strength restricting the generation of an I O request using one or two techniques.

The above description is made for a configuration having a separate I O request controller controlling the generation of an I O request and operating with an HDD protection manager through an interface. Although the I O controller is shown separately it would be understood by those skilled in the art that the I O request controller can be included within the HDD protection manager .

Referring to in step a computer system monitors information of the system. For example the system monitors status information of a platform H W status information on a process and status information on a network.

At step the system determines if the current system is in a stable status or an unstable status. Here the system determines if the current system is in the stable status or the unstable status capable of experiencing impact using an acceleration value periodically measured through an accelerometer sensor. If the current system is in the stable status the system returns to step and continuously monitor the status information of the system.

On the other hand if the current system is in the unstable status in step the system stores the monitored status information of the system and in step restricts the generation of a disk I O request within the system through a platform H W performance control a process control or a network throughput control.

In step the system determines if the current system is in the stable status or the unstable status. When the system is still in the unstable status the system returns to step and continuously restricts the generation of the disk I O request.

On the other hand if the current system is in the stable status the system restores the system to the original on the basis of the stored status information of the system. The system returns to step to monitor system information.

Referring to the conventional computer system may continuously generate a disk I O request even in an unstable status thus causing a phenomenon in which a queue within an HDD filter driver is overflowed. Unlike this the computer system according to the present invention waits or restricts the generation of a disk I O request between an impact start time point and an impact end time point to generate no disk I O requests or disk I O requests of a low rate during the unstable status. By doing so the computer system can prevent the phenomenon in which the queue within the HDD filter driver overflows.

As described above in an exemplary embodiment of the present invention there is an advantage in which simple application to a conventional system can be made at less cost and even in case of a malfunction restoration is easy and danger is low because it is set to restore a system to the original state on system booting without a permanent change of system setting.

An exemplary embodiment of the present invention has an effect of restricting the generation of a disk I O request while a computer system is in an unstable status thereby being able to prevent an overflow of a queue storing disk I O requests during the unstable status and through this being able to maintain system stability and prevent a loss or damage of user data.

The above described methods operable in one or more of the illustrated controllers according to the present invention can be realized in hardware or as software or computer code that can be stored in a recording medium such as a CD ROM an RAM a floppy disk a hard disk or a magneto optical disk or downloaded over a network i.e. The computer program can be provided from an external source which is electronically downloaded over a network e.g. Internet POTS so that the methods described herein can be rendered in such software using a general purpose computer or a special processor or in programmable or dedicated hardware such as an ASIC or FPGA. As would be understood in the art the computer the processor or the programmable hardware include memory components e.g. RAM ROM Flash etc. that may store or receive software or computer code that when accessed and executed by the computer processor or hardware implement the processing methods described herein. The code when loaded into a general purpose computer transformed the general purpose computer into a special purpose computer that may in part be dedicated to the processing shown herein. In addition the computer processor or dedicated hardware may be composed of at least one of a single processor a multi processor and a multi core processor.

While the invention has been shown and described with reference to certain preferred embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims.

