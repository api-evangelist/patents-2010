---

title: Method and program for initiating a second service in dependency of a first service
abstract: A method for initiating a second service in dependency of a first service using individually configured event-driven state-machines includes executing the first service in a first communication space; transmitting a first event to an operator unit in dependency of the first service; triggering a first event-driven state-machine of the operator unit by the first event; generating a second event by the first event-driven state-machine; transmitting the second event to at least one of the first communication space and a second communication space; and initiating the second service in the at least one of the first communication space and the second communication space by the second event.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09235431&OS=09235431&RS=09235431
owner: DEUTSCHE TELEKOM AG
number: 09235431
owner_city: Bonn
owner_country: DE
publication_date: 20100614
---
This patent application is a national stage entry under 35 U.S.C. 371 of International Application No. PCT EP2010 003539 filed Jun. 14 2010 claims priority to European Patent Application No. EP09008206.6 filed Jun. 23 2009 and U.S. Provisional Patent Application No. 61 219 577 filed Jun. 23 2009. The International Application was published in English on Dec. 29 2010 as WO 2010 149285.

The present invention relates to the field of providing and executing certain services in communication spaces.

There are a large number of different communications spaces e.g. telephone networks thousands of intranets heating systems a car an intelligent house millions of private computers a model railroad a computer game a net game billions of television receivers audio and video players media servers and mobile devices a virtual reality the office suites on personal computers a robot the control room of a plant a user browsing a Web page a cruise liner a further telephone network an airport a satellite a supermarket and so on. Common to all of them is that specific information are exchanged and that within each communication space the information transfer methods are optimized according certain in the main communication space specific criteria. Due to the fact that those optimization criteria differ obviously as the case arises each communication space is good at internal information transfer but ill suited when one thinks of external communication options.

Furthermore it is well known that there are examples where two communication spaces can communicate among themselves apart from Internet connections or similar but those communications are well regulated by using well defined interfaces with well defined barely extendable protocols. So e.g. a network of a mobile telephone operator is connected with networks of other operators in this vein. But these interfaces are laid out for very specific purposes in almost all cases. There is currently no universal and flexible method in order permit two or more arbitrary communication spaces to bring supplementary inter workings about.

In an embodiment the present invention provides a method for initiating a second service in dependency of a first service using individually configured event driven state machines the method comprising executing the first service in a first communication space transmitting a first event to an operator unit in dependency of the first service triggering a first event driven state machine of the operator unit by the first event generating a second event by the first event driven state machine transmitting the second event to at least one of the first communication space and a second communication space and initiating the second service in the at least one of the first communication space and the second communication space by the second event. The first event driven state machine is pushed from an internet server to the operator unit by a second event driven state machine. The first event driven state machine is individually configurable by a user for initiating the second event in dependency of the first event.

In an embodiment the present invention provides individually configurable interactions between multiple services which in a further embodiment covers multiple communication spaces in parallel and enables the implementation of customized and user configured services that does not have the drawbacks of the prior art.

In the embodiment a method is provided for initiating a second service in dependency of a first service using individually configured event driven state machines comprising the steps of executing a first service in a first communication space transmitting a first event to an operator unit in dependency of the first service triggering a first event driven state machine of the operator unit by the first event generating a second event by the first event driven state machine transmitting the second event to the first communication space and or to a second communication space and initiating a second service in the first and or in the second communication space by the second event wherein the first event driven state machine is pushed from an internet server to the operator unit by a second event driven state machine and wherein at least the first event driven state machine is individually configured by a user for initiating the second event in dependency of the first event.

The second service is initiated by the first event driven state machine which is indirectly triggered by the first service. Therefore the interaction between the first and the second service is defined by the functionality of the first event driven state machine of the operator unit. Advantageously the first event driven state machine is at least partly individually configurable by the user so that the above mentioned interaction between the first and the second services can be adapted to personal requirements of the user. Beneficially arbitrary functionalities between different services are feasible and freely programmable by the user. In an embodiment both the first and the second event driven state machine are individually configured by the user. Advantageously the user has the possibility to configure and modify the first event driven state machine on the internet server independently from the operator unit as the first event driven state machine is uploaded to the operator not until the first event driven state machine is requested by the operator unit with a corresponding initial event as this corresponding initial event causes the second event driven state machine to push the individually configured first event driven state machine to the operator unit. Therefore the user does not need to configure the operator unit directly. In an embodiment the operator unit is controlled by a communication space operator or authority like a mobile phone provider which has to activate the transmission of first and or second events between the first communication space and the internet server.

For example the connection between a mobile network as the first communication space and an internet server for initially triggering the second event driven state machine in such a manner that the second event driven state machine pushes the customer defined first event driven state event machine to the operator unit of the mobile network provider has to be activated by the mobile network provider. If the mobile network provider trusts the assigned customer ID the connection between the mobile network and the second event driven state machine of the user is initiated via the operator unit so that the second event driven state machine detects an initial event and pushes the first event driven state machine towards the operator unit. Subsequently the operator unit is capable of executing the commands of the first event driven state machine and the user is able to use his individually configured functionalities.

In an embodiment the functionality and the source code of the event driven state machines are checked by the mobile provider before storing and activating the second event driven state machine on the internet server. Therefore the mobile provider makes sure that the syntax of the first event driven state machine is correct when the first event driven state machine is pushed towards the operator unit.

The second service is executed in the first and or in the second communication space. Thus a connection between at least two fully different communication spaces could be provided by the method in an embodiment according to the present invention where a first event or a first service in the first communications space initiates an arbitrary second event or a second service in the second communication space for instance. In an embodiment the initial event is forwarded to the second event driven state machine by a first application of the operator unit wherein the first application incorporates at least partially the functionality and in particular even the source code of the first event driven state machine after the first event driven state machine has been uploaded to the operator unit by the second event driven state machine triggered by the initial event. Subsequently a first communication between the first communication space and the operator unit is controlled by the first event driven state machine which is pushed towards the operator unit and a second communication between the internet server and the internet is controlled by the second event driven state machine on the internet server for instance. In particular the first and the second event driven state machine communicate with each other directly via a TCP IP based interface. Advantageously the functionality of the first event driven state machine can be adapted to arbitrary communication space. Together with the individually configurable second event driven state machine the customer is able to configure arbitrary functionalities between any different communication spaces. The second service could be a new service which is independent of the second service. Alternatively the second service could be a certain continuation of the first service in the first communication space.

In an embodiment the second communication space is linked to the internet server via a further operator unit comprising a further first event driven state machine wherein in a further embodiment the further event driven state machine is pushed to the further operator unit by the second event driven state machine. It is a great advantage that every communication path between the internet server and a certain communication space is individually controlled by exactly one certain event driven state machine. In an embodiment the first event driven state machine is allocated to the first communication space and the further first event driven state machine is allocated to the second communication space. In an embodiment the operator unit covers a service provider for the first communication space wherein the further operator unit covers a further service provider for the second communication space. In an embodiment the modular principle is used so that the number of incorporated communication spaces and or user defined web applications and users respectively can easily be extended by incorporating further first event driven state machines and or further communication spaces. Thereby any communication space comprising an internet connection for web based interaction with the internet server can be used modularly as first further first and or second communication spaces.

In an embodiment the first communications space is a telephone network particularly a mobile network . Communication spaces include telephone networks thousands of intranets heating systems a car an intelligent house millions of private computers a model railroad a computer game a net game billions of television receivers audio and video players media servers and mobile devices a virtual reality the office suites on personal computers a robot the control room of a plant a user browsing a Web page a cruise liner a further telephone network an airport a satellite a supermarket and so on for instance. A first or second service comprises every active or passive event in the corresponding communication space. For example a service could be a telephone call a computer command a power switch adjustment a SOS signal a certain global positioning signal and so on. Furthermore a service could be a combination of such events in one or in multiple communication spaces. For example during configuration of the first event the user addresses the first and the second service or alternatively the first and the second event. In an embodiment the internet server comprises further event driven state machines. In a further embodiment each event driven state machine corresponds to every communication space. In particular the internet server comprises per user at least one event driven state machine for at least each communication space. If the internet server also comprises a setup event driven state machine the internet server features an amount of n 1 event driven state machines per user wherein the number n represents the total number of communication spaces that can be addressed by for the certain user. Advantageously the implementation and configuration of such event driven state machines is comparatively simple and requires little computing power.

In an embodiment the first communication space is linked to the operator unit via a mediator unit which transforms a data type of the first communication space into a data type applicable for the first event driven state machine and which transforms a data type of the first event driven state machine into a data type applicable for the first communication space. Advantageously the usage of such mediators provides a compatible and in an embodiment bidirectional communication between a further first state event machine and the corresponding communication space. As a result the method according to the embodiment can be operated with any arbitrary communication space.

In an embodiment the internet server transmits further events via internet connection to further internet servers wherein in a further embodiment the further events triggers further event driven state machines individually configured by further users. In an embodiment the further web applications initiate further services in the internet in the first communication space in the second communication space and or in further communication spaces. For instance a further web event of the event driven state machine is transmitted to a third communication space via a further internet server wherein the further internet server comprises a user configurable further first event driven state machine for triggering and or detecting further services in the third communication space. Advantageously a large amount of different internet servers represents a parallel and therefore a comparatively fast working network according to a neural network. In an embodiment this network comprises a large number of first and second event driven state machines whereas every first and second event driven state machine is allocated to just one certain user and in an embodiment individually configured by this user. These different second web applications become interlinked if the corresponding users configure their event driven state machines for corporate interaction with each other.

In an embodiment the first the second the further first and or the setup event driven state machines are provided by a web page on the internet server featuring a well defined Uniform Resource Identifier wherein a certain web page is allocated to a certain user and or to a certain group of users and wherein a certain user is allocated a well defined ID in the corresponding communication space. A user could be a software program a single person like a consumer or a programmer as well as an organization like a company or an association or the like. Every user can be identified in a certain communication space by a certain user ID for instance. Particularly the first the second and the setup event driven state machines are provided by a certain web page on the internet server for each case. In an embodiment this web page contains the source code of the first the second and the setup event driven state machine wherein the web page features a well defined Uniform Resource Identifier. The Uniform Resource Identifier is related to the certain user ID. The web page is also referred to as communication page.

In an embodiment the first the second the further first and or the setup event driven state machine is configured by uploading a certain algorithm to the internet server by online modification of the algorithm on the internet server and or by clearing a certain algorithm by a provider. In an embodiment the first the second the further first and or the setup event driven state machine are configured by the user with the aid of a graphical user interface and particularly the graphical user interface comprises certain templates and or a compiler which transforms graphical inputs from the user into an applicable computer language for the second application. Thus an ordinary consumer is able to configure the certain event driven state machine for personal applications and individual tasks in a self explanatory and self evident manner. Beneficially a comprehensive knowledge of programming and source code edition is not necessary. In an embodiment the algorithm comprises the source code of the web page communication page .

In another embodiment of the present invention program is provided for initiating a second service in dependency of a first service using individually configured event driven state machines wherein the program comprises at least a first and a second event driven state machine stored on an internet server wherein the second event driven state machine pushes the first event driven state machine at least partially from the internet server to an operator unit if the second event driven state machine detects an initial event from a first communication space wherein the first event driven state machine which is pushed towards the operator unit controls a first communication between the operator unit and the first communication space. The program for initiating a second service in dependency of a first service corresponds to the method as described above. Therefore this program beneficially provides individually configurable software which is capable of partially installing itself on the operator unit so that the user is capable of programming personalized functionalities and interactions between the first and the second services without configuring the operator unit directly. Furthermore the computer program provides a platform for programming arbitrary and individually configurable interactions between different communication spaces.

In another embodiment of the present invention a computer program product and or a computer network is provided that comprises a program for initiating a second service in dependency of a first service as mentioned above.

These and other characteristics features and advantages of the present invention will become apparent from the following detailed description taken in conjunction with the accompanying drawing which illustrate by way of example the principles of various exemplary embodiments of the invention. The description is given for the sake of example only without limiting the scope of the invention. The reference figures quoted below refer to the attached drawing.

The present invention will be described with respect to particular exemplary embodiments and with reference to a certain drawing but the invention is not limited thereto. The invention is limited only by the claims. The drawings are merely exemplary and are non limiting. In the drawing the size of some of the elements may be exaggerated and not drawn to scale for illustrative purposes.

A first service in the first communication space is transmitted to the mediator unit with an operator interface . The operator interface serves for the core network control purposes. The mediator unit belongs to the first communication space and translates commands and data in the command language of the core network into commands and data applicable for the operator unit and vice versa. The operator unit comprises a first application which handles first events from the mediator unit . Furthermore the first application communicates with a second event driven state machine on the internet server via an Operator server interface preferably a TCP IP based interface. The internet server is connected to a second communication space and capable of initiating second services in the second communication space like transferring data with further internet servers modifying web based data bases or the like. This interface is called Internet interface . In an optional embodiment of the present invention a further operator unit is provided between the internet server and the second communication space . This further operator unit can be included e.g. as an application programming interface API into the second event driven state machine on the internet server for instance.

The second event driven state machine is individually configurable by a certain user. An admission for the internet server as well as the connection between the internet server and the operator unit has to be activated for the certain user by the mobile provider. Afterwards the user can upload an individual configured web page to the internet server comprising a first event driven state machine the second event driven state machine and a setup event driven state machine . In an embodiment the syntax of the web page is checked by the mobile provider during uploading to the internet server so that the second web page is only accepted and activated when the first the second and the setup event driven state machines are error free. The web page is also referred to as communication page ComPg which is stored on the internet server available via a well defined URI. The first event driven state machine is called ComPg Tel and is designed to handle a first communication between the core network and the second event driven state machine wherein the second event driven state machine is called ComPg Web and is designed to handle a second communication between the first event driven state machine and the World Wide Web . The setup event driven state machine includes personal information about the user. If an initial first service in the core network is assigned to the certain user the operator unit sends a corresponding initial event called INITIAL to the internet server . The event INITIAL triggers the second event driven state machine ComPg Web in such a manner that the first event driven state machine ComPg Tel is pushed towards the operator unit . Subsequently the operator unit is capable of operating first services in accordance with the user configured first event driven state machine ComPg Tel . Particularly the processing of the first events by the operator unit is determined by the first event driven state machine . The internet server operates furthermore in accordance with the second event driven state machine ComPg Web wherein the second event driven state machine defines the processing of events from the first event driven state machine via the Operator server interface as well as second services in the World Wide Web .

The proposed method in an embodiment enables telephony users to manage their communications by means of processing commandments deposited within the Web. Those processing commandments may lie alongside of other user Web contents e.g. Web pages or arbitrary user files and have to be hosted by an Internet service provider ISP correlated with the user s telephony operator unit in such a way that a particular bipartisan mutual trust exists. Due to the facts that such commandments govern arbitrary user communications in consideration of her telephony behavior and that the commandments are located within the Web they are called communication pages .

There is at most one communication page per public user identification assigned to the user as e.g. a telephone number. Those pages are called direct communication pages Direct ComPg . A direct communication page can be addressed by means of an URI derivable from the served user s identity e.g. via an address such as http www.ComPg.T Mobile.org ComPg 49 171 6289xxx CnmPg.bxt . It is further possible to combine multiple public identities on one dedicated communication page Indirect communication pages Indirect ComPg by referencing the related URI from the direct communication pages assigned to the IDs involved. There is in principal no restriction with respect to the amount of direct communication pages referring to an indirect communication page. It is further possible that indirect communication pages refer to another indirect communication page. A communication page may be of a direct and an indirect nature at the same time.

Communication pages are built at least partly by the user. This could be done by completing prefabricated provisional communication pages simply by assigning values to variables e.g. the own telephone number by using a user friendly tool comparable with the popular tools to compile an ordinary web page or by instantaneous editing of the page content. Communication pages have to be uploaded to the ISP server subsequently. The Internet Service Provider should not accept an erroneous communication page or a communication page which is going to address telephony capabilities not granted for the page owner. The technical system under control of those pages presupposes that all communication pages available on a server of trusted ISP are free from defects and are in line with the possibilities permitted to the served user.

The content of communication pages can be seen as a description of a rather simple event driven state machine . Any external event may trigger an action or a concatenation of actions and may cause a state change in addition. Dependent on the state entered one and the same event might be treated differently. Actions can be shaped for arbitrary purposes e.g. in order to generate another event e.g. to instruct a telephony system for certain activities to call a piece of software running at the Internet Service Provider side or located anywhere within the Internet or on the user s PC as e.g. generating an E Mail to a certain addressee or multiple addressees providing a certain content or to set or modify one or multiple communication pages variables. In addition an action could interrogate variable values and could combine terms by arbitrary logical operations in order to come to a decision.

Beside the provisioning of variables with values provided along with events others variables might be accommodated with static values well declared within the communication page e.g. public telephone numbers URI s of E Mail accounts of utilizable software or of any other Web content passwords or entire data structures as e.g. a list of all contacts maintained by the user . A next type of variables in turn will be filled on per transaction basis as e.g. the actual date and time as well the identity of the current communication partner.

Aside from the declarations also referred to as setup event driven state machine see above communication pages include at least first and second event driven state machines generally In the present example the first event driven state machine is relevant for serving telephony system e.g. the mobile network and the second event driven state machine ComPg Web cares about Web interactions Whereas the Web part got the responsibility for supervision and processing of events originated from the surrounding Internet the telephony part is downloaded to the application layer of the serving telephone network operator unit when necessary and controls there the entire telephone communications of the user meant.

First the Internet Service Provider starts dedicated software which forms a Web related user specific second application by interpreting the second event driven state machine ComPg Web of the communication page Initiating machine state is W NULL . The second event driven state machine is responsive to Web events which are events either from anywhere out the Web space or from the serving telephone network. A Web event is just attended by the machine when specified on the second event driven state machine of the communication page operator or user defined . If so one or multiple actions are executed and even one or multiple outgoing events might be generated due to this.

Each user is permitted to define as many Web events and corresponding actions as necessary for her purposes. Beyond it is up to the event driven state machine how an external contact attempt first event from outside is mapped to a second event and whether which how parameters are passed thereby. There are many fitting approaches to do so. The given document assumes a specific Web application programming interface API whereby each Web event as far as defined for a communication page got a unique tag value WebEvent to be used whenever a certain event shall be addressed via the Web application programming interface.

There are two operator pre defined Web events those which are added automatically to the communication page right before storing the page and which cannot be manipulated by the user a web event which is called TELEPHONE event and a web event which is called ONHOOK event for instance.

The web event TELEPHONE WebEvent TELEPHONE is addressed by the telephone network first communication space whenever a request for a telephone transaction has been encountered for the served user. Moreover this event is linked constantly with following actions 

Action1 Check whether the maximum number of allowed parallel transactions MAXNumberOfParallelTransactions is already reached. If so refuse the request. Continue with next action otherwise. Action2 Assign a unique number to the new transaction. Action3 Update the structure CURRENTTransactions . This structure maintains a transaction nature per transaction currently processed for a certain user e.g. SOC subscriber originated call STC subscriber terminated call. WIC Web initiated call MSO message originated MST message terminated SOU subscriber originated USSD dialogue WOU Web originated USSD dialogue etc. .The structure lists transactions in the order of their invocations. So the last listed transaction is the one the telephone network is actually asking for. Action4 Push the first event driven state machine ComPg Tel of the communication page towards the telephone network This includes the provisioning of the actual structure CURRENTTransactions . .

The web event ONHOOK WebEvent ONHOOK is addressed by the telephone network first communication space whenever a telephone transaction has been completed. Also this event is linked constantly with an action Update the structure CURRENTTransactions by withdrawal the line related to the transaction terminated.

Second as soon as the first event driven state machine ComPg Tel of the communication page has been obtained from the internet server the network of the serving telephone operator also called operator unit takes care about the telephony processing commandments made by the user. For this purpose a dedicated application is running within the operator domain. This application might act as a classic IN service on top of a circuit switched based telephone network or even as a next generation network NGN application server. Common to both is the ability to control in principle arbitrary telephony transactions. The amount of control options available for such an application depends primarily on relating methods implemented within the subjacent and operator specific telephone network.

The first event driven state machine of the communication page forms partly a telephony related event driven state machine of the first application and is responsive to telephony events TELEvents which are events either from the telephone network under control or from the serving Internet Service Provider Initiating machine state is T NULL . At the beginning the application has the ability to process a reduced set of operator pre defined TELEvents only. Not until the first event driven state machine of the communication page has been received the processing capabilities of the application are expanded by user specific TELEvents and relating actions.

A TELEvent is just attended by the first application when either pre defined or specified by the user in the first event driven state machine ComPg Tel . If so one or multiple actions are executed and even one or multiple outgoing events might be generated due to this. Outgoing events which are directed towards the telephone network are translated to core network instructions appropriate to the operator capabilities and methods implemented with respect to the control interface.

As far as events from the serving Internet Service Provider are concerned each user is permitted to define as many TELEvents and corresponding actions as necessary for her purposes. Beyond it is up to the state event machine how a contact attempt from the Internet Service Provider is mapped to a TELEvent of the ComPg Tel and whether which how parameters are passed thereby. Each TELEvent as far as defined for a communication page got a unique tag value e.g. TELEvent to be used whenever a certain event shall be addressed from either direction.

There are a number of operator pre defined TELEvents those which are either known implicitly by the telephone operator application first application or which are added automatically to the communication page right before storing the page pre defined TELEvents cannot be manipulated by the user nevertheless it might be necessary that the user has to define one or multiple actions for certain pre defined events .

In an embodiment one pre defined TELEvent exists for the direction from the Internet Service Provider . From the telephone network two of those TELEvents are envisaged.

The first TELEvent PUSHComPg is addressed by the Internet Service Provider whenever the second event driven state machine has been requested to push the first event driven state machine of the communication part and additional information as e.g. the structure CURRENTransactions towards the telephone network to the operator unit . The activator for this request could reside anywhere within the Internet or could be even the telephone network itself. A user action should be defined mandatory for the given event so that following actions are performed 

Action 1 Store the first event driven state machine ComPg TEL of the communication page as well as all provided additional information The ComPg Tel enhances the first application of the operator unit for the duration of the upcoming transaction with user events and actions. . Action 2 Execution of user action s All details for the desired transaction should have been determined by the user within ComPg Tel . These details are converted by the application to operator specific core network CN instructions dependent on the general CN control interface available. The following options exist roughly for the user a INITIATETransaction Initiate a transaction in order to cause the system to initiate a call or an USSD Unstructured Supplementary Service Data dialogue. b CONTINUETransaction Continue a transaction in order to cause the system to develop an existing transaction call message or USSD dialogue anyhow further e.g. to setup a call to a certain or multiple destinations or to answer an USSD request from a mobile subscriber . c RELEASETransaction Release a transaction in order to eliminate a call party from a transaction or to end the entire transaction respectively. d PROMPTTransaction Prompt a transaction in order to prompt a call party for some input. For all these options the user could name additionally transaction progress types to be supervised by the telephone network compare to TelEvent REPORT further down . The options have to be seen in connection with the nature of the actually given transaction. Moreover there is a good deal of involved control variable as e.g. destination numbers the number to be presented at destination or identities of transaction Iegs meant. Finally it is up to the telephone operator to publish the exact syntax on all possibilities granted in this context. The present document just intends to give an approximate idea on those user capabilities. Action 3 Change state from the initiating machine state T NULL to the machine state started T STARTED .

The first state event machine embedded in the first web application is even enabled to generate parallel TELEvents. Each of these TELEvents causes a separate telephone application instance working independently from other instances created. Based on this there is e.g. the possibility to initiate multiple calls sharing the same conference room located anywhere but reachable for the telephone operator unit .

The second TelEvent INITIAL is addressed by the telephone network whenever a request for a telephone transaction has been encountered for the served user. Moreover this event is linked constantly with following action Send the Web event WebEvent TELEPHONE to the second event driven state machine on the internet server . This event includes information about the nature of transaction encountered e.g. a call or message from to a served user or a subscriber originated USSD dialogue . After this the application is awaiting the TELEvent TelEvent PUSHComPg from the ISP.

A third TelEvent REPORT is addressed by the telephone network whenever a progress has been recognized for the maintained transaction. Such a progress could be of arbitrary nature as e.g. transaction setup failure or success trigger in the middle of transaction transaction released any party or the arrival of some input from a party involved. The progress types to be attended for a transaction result from a combination of types to be supervised by default operator specific with types to be armed with respect to the user s first event driven state machine ComPg Tel received by means of the first TELEvent PUSHComPg. Default progress types are e.g. transaction setup failure and transaction released . This event might or might not be linked with a user action as follows only the progress type examples named right before are taken into account there could be types in addition line numbers in brackets 

The event types SUCCESS MIDDLE and INPUT will be armed only when corresponding user action s are defined within the first event driven state machine ComPg Tel .

Other important events The event type INITIATE is sent out in order to cause the core network to initiate a call or an USSD dialogue. The event type CONTINUE is sent out in order to cause the core network to develop the maintained transaction call message or USSD dialogue anyhow further e.g. to setup a call to a certain modified or multiple destinations or to answer an USSD request from a mobile subscriber . It is even possible to trigger the core network for a transaction continuation without modifying any transaction parameter classic continue . Furthermore the event type RELEASE is used to eliminate a call party from a transaction or to end the entire transaction respectively. The event PROMPT is sent out in order to cause the core network to prompt a call party for some input and or to play an announcement s .

The entire mechanism enables to realize amazing so far unknown features around a real telephone network . The possibilities offered go far beyond of a rather unspectacular Internet controlled telephony net. In fact it has it in oneself to add really new services to the today s and future telephony world. More the present technology allows combining telephone networks and Internet right now saving invests and future proof without impacts on perhaps already compiled migration strategies towards a NG network architecture . Telephone technologies and the method according to the present invention coalesce.

Furthermore services go individual. As soon as a user is permitted to see for her web application respectively her Communication Page she is able to create her own and personalized services. It is further possible to merge users with joint interests to constitute communities and to define communication rules appropriate to their needs. Because Communication Pages form another user content the involved operating companies will take care to protect those pages against unauthorized access attempts.

Telephone operator unit and ISP are enabled to utilize the mechanism to implement new services for the mass market. An operator ISP capable of processing the method described above will have an edge over competitors which fail to do so. Furthermore the mechanism described above offers another technical method for quite a number of known services.

These days it is rather uninspiring when a telephone network service obtains its data from the Internet and acts according these data. The same is true for Web services . But an exciting innovation is an Internet content covering both where a network of a real telephone operator unit and the Web are enabled to control them in parallel concerted by events and shaped according individual needs. Using embodiments of the present invention it is no longer solely up to a telephone operator how her users are served. In fact each single user will be permitted to adjust his personal service to a great extent. Furthermore he need not to purchase a telephone network for this purpose because it becomes possible as soon as her operator is compliant with the above mentioned technology.

The communication page of Alice is available on the internet server and comprises the first event driven state machine the second event driven state machine and a setup event driven state machine .

The setup event driven state machine also referred to as DECLARATIONS discloses the personal information about Alice like her name a file with a digital photo of her her public telephone number her permissions concerning the mobile network provider. Furthermore a private numbering scheme of the users Alice Bob and Ed is defined whereby the private number 100 and the nick name CHERUBAlice are allocated to the public telephone number 49 160 1212xxx the private number 200 and the nick name BOBTheBuck are allocated to the public telephone number 49 171 6269xxx and finally the private number 999 and the nick name Ed are allocated to the public telephone number 49 228 936 33xxx . The source code of the setup event driven state machine is provided below line numbers in brackets 

The second event driven state machine is triggered by WEBEvents received from the outer World Wide Web or from the operator unit . A first section of the second event driven state machine relates to telephony WEBEvent and pushes the first event driven state machine to the operator unit and changes the current number of transactions. A second section relates to another telephony WEBEvent which is received when the telephone connection is disconnected and which triggers again a change of the current transaction number. Each of the subsequent sections and concern to WEBEvents for writing the actual connection status of Alice s telephone extension into a web file MYFILE to compare her telephone bill with the screening list once a month . The source code of the second event driven state machine is provided below line numbers in brackets 

The first event driven state machine is pushed towards the operator unit by the second event driven state machine . The first event driven state machine is triggered by TELEvents received from the mobile network and from the mediator unit respectively. The first TELEvent is PUSHComPg for extending the first application according to the first event driven state machine and storing the current transaction numbers. Furthermore the private numbering scheme of Alice is activated and the requested private or public numbers are sent to the mobile network . Furthermore the first event driven state machine comprises the sections INITIAL REPORT SUCCESS and RELEASED for Initiating the WEBEvents and in the second event driven state machine as described above. The source code of the first event driven state machine is provided below line numbers in brackets 

In a first step Alice dials the private number 200 of Bob. This request containing the private number is transmitted from the core network first communication space to the mediator unit . In a second step the mediator unit transforms the request into a command applicable for the operator unit which features the calling party address of the serving user Alice . The operator unit addresses the request to the corresponding communication page of the served user in a third step as the first web event . It is however required that the served user is registered and trusted by the mobile network provider. Furthermore the communication page of the user has already to be uploaded to the internet server . The first web application comprises the above mentioned communication page ComPg wherein the user ID lines SEM event driven state machine of the served user and the requested numbering scheme lines to of SEM are defined in the setup event driven state machine . The first event is processed in the second event driven state machine of the communication page and the corresponding actions cp. lines to of SEM for this event are processed by the second web application . Thus in a fourth step the first event driven state machine of the communication page is pushed to the operator unit cp. line of SEM . Furthermore the current transaction number is updated line of SEM to check whether a maximum number of permitted parallel transactions is already achieved. Subsequently the PUSHComPg section of the first event driven state machine is pushed to the operator unit and integrated into the first web application . The official telephone number of Bob which corresponds to the private number 200 is derived from the setup event driven state machine and sent together with the private number of Alice command CONTINUE via the mediator unit to the core network in fifth and sixth steps lines to of SEM . The core network develops the maintained transaction call using the public telephone number of Bob 49 717 6269xxx wherein Alice s private number 100 is presented at Bob s display. In a subsequent seventh step a timestamp as well as the private and the public called telephone numbers are transmitted as the second event to the second event driven state machine as a WEBEvent called SCREEN2 line of SEM . Because of this WEBEvent the section of the second event driven state machine is activated and the timestamp is sent as the second service to a certain Web file MYFILE in the World Wide Web line of SEM in an eighth step . The World Wide Web has to been seen as the second communication space . Subsequently the core network routes the telephone extensions of Alice and Bob in a further step to enable a telephone link . In ninth and tenth steps the core network informs the operator unit via the mediator unit that the telephone link between Alice and Bob has been established successfully. As instructed in the first event driven state machine of the communication page lines and of SEM the operator unit sends a CONTINUE command to the mediator unit in a eleventh step and a U SCREEN9 command to the internet server in a twelfth step . The second event driven state machine detects the U SCREEN7 command cp. line of SEM and sends a SCREEN7 string towards the Web file called MYFILE in the Web in the course of a thirteenth step cp. line of SEM . Now a conversation via the telephone link between Alice and Bob in a common way is provided enabling the telephone link could also be seen as the second service which continues the first service call request in the first communication space wherein the CONTINUE command could be seen as the second event . After hanging up the phone the core network informs the operator unit via the mediator unit in fourteenth and fifteenth steps that the telephone link is terminated. As defined in the first event driven state machine cp. lines to of SEM the operator unit transmits again a CONTINUE command to the mediator unit sixteenth step and a U SCREEN9 command with a timestamp to the internet server seventeenth step . Furthermore the second event driven state machine is informed that the telephone link is disconnected by way of an ONHOOK sign eighteenth step line of SEM . According to line of the second event driven state machine the SCREEN9 sign with the timestamp is transmitted towards the Web file MYFILE in an nineteenth step to document the exact time of terminating the telephone link between Alice and Bob. Furthermore the current transaction list is updated increased with one as the present transaction is terminated cp. line of SEM .

The source code and the functionality of the setup event driven state machine of Bob are substantially similar to the setup event driven state machine of Alice as mentioned above. The source code of the setup event driven state machine of Bob is listed below 

Also the second event driven state machine of Bob is similar to the second event driven state machine of Alice as mentioned above. Merely the sections and are not realized in Bob s second event driven state machine . The source code of the second event driven state machine of Bob is listed below 

Also the first event driven state machine of Bob is similar to the first event driven state machine of Alice wherein Bob s first event driven state machine comprises a further section STC in his lines to of SEM . The section STC defines both a DESTNumber as known from Alice s SEM for calling his first phone and an additional DESTNumber2 for his second phone cp lines of SEM . The source code of the first event driven state machine of Bob is listed below 

The call flow illustrated in is similar to the call flow according to the third exemplary embodiment of the present invention which is described in . The communication between the operator unit and the internet server as well as between the internet server and the Web are similar. However the fifth step comprises not only one destination number but two destination numbers for each of Bob s phones DESTNumber and DESTNumber2 . This leads to more traffic between the mediator unit and the core network as the core network has to request two telephone links between Alice and Bob in parallel instead of a single telephone link as described above.

In contrast to the second event driven state machine of Bob described in the fourth exemplary embodiment of the present invention the second event driven state machine of Bob as listed below comprises an additional section called cp. lines to of SEM . Thus the second event driven state machine can be triggered by a Web event from the World Wide Web cp. line of SEM to push the first event driven state machine to the operator unit cp. line of SEM . This first web event is initialized by a further communication page of Ed for instance preferably triggered by a first service in the World Wide Web . The source code of the modified second event driven state machine of Bob is listed below 

The first event driven state machine of Bob as mentioned below comprises three additional sections compared to the first event driven state machine as described in connection with the fourth exemplary embodiment of the present invention. The first additional section features the case WIC in the of the section cp. lines to of SEM . The case WIC includes the command set PARTYToCall to 49 228 936 33xxx public number of Ed in order to use Ed s telephone extension as the calling party in Bob s account cp. line of SEM . Subsequently the new variable DORISIsCalled is set true cp. line of SEM . Furthermore the present first event driven state machine comprises the IF cases U DORISIsCalled true in the reporting sections and cp. lines to and lines to of SEM . The variable DORISIsCalled true causes the setup of the destination number to 49 222 32979xxx Doris public telephone number cp. line of SEM and a telephone link between Ed and Doris is connected with the usage of Bob s account the telephone link is enabled in the above mentioned way . The source code of the first event driven state machine of Bob is listed below 

The call flow illustrated in is similar to the call flow according to the third exemplary embodiment of the present invention which is described in . In contrast the initial event in the present flow chart comes from the World Wide Web . Ed initiates Bob s communication page on the internet server in a first step by using the command . This command causes the second event driven state machine of Bob to push the first event driven state machine to the operator unit in a second step cp. line of SEM . Subsequently the section of the first event driven state machine now included into the first application is executed on the operator unit in a third step wherein the user Bob is applied as the served user with his public number 49 717 6269xxx to the core network cp. line of SEM and Ed s telephone number 49 228 936 33xx is defined as the calling party in the core network cp. line of SEM . Afterwards the core network calls Ed s telephone extension as the calling party address in fourth steps . In a fifth step the core networks informs the first event driven state machine that the routing of Ed s telephone extension has been successful by using the command REPORT SUCCESS . Consequently the first event driven state machine is triggered cp. lines of SEM and the destination number is set to Doris public number 49 222 32978xxx cp. line of SEM which is sent to the core network in a sixth step cp. line of SEM . The core network calls Doris public number and enables a telephone link between Ed and Doris in seventh steps . After the telephone link is terminated by hanging up the phone for instance the core network sends the command REPORT RELEASED to the operator unit in a eighth step . This command triggers again the first event driven state machine cp. line of SEM and subsequently the event driven state machine answers with the event CONTINUE in a ninth step cp. of SEM . Furthermore the first event driven state machine sends the ONHOOK signal to the second event driven state machine on the internet server in a tenth step cp. line of SEM .

