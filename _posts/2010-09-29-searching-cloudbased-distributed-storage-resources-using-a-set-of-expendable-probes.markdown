---

title: Searching cloud-based distributed storage resources using a set of expendable probes
abstract: Embodiments relate to searching a cloud-based file storage system using a set of expandable probes. Platforms and techniques are provided to search for a file whose location in cloud storage resources is recorded in a consistent hash ring structure. In a hash ring, a file name can generate a hash output corresponding to a position around a circle. The closest clockwise node to that location can contain the file itself, or a link to another location containing or leading to the file. When a link has become obsolete and no longer points to the file, it may be necessary to search for that file. Embodiments perform a graduated search for the missing file, starting one node from the original node, then trying two adjacent nodes, then four adjacent nodes and so forth in expanding fashion, until the file is found or the hash structure is exhausted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09298732&OS=09298732&RS=09298732
owner: Red Hat, Inc.
number: 09298732
owner_city: Raleigh
owner_country: US
publication_date: 20100929
---
The present teachings relate to systems and methods for searching a cloud based distributed storage resources using a set of expandable probes and more particularly to platforms and techniques for performing a graduated search for missing files in a cloud based distributed file storage system using expandable sets of probes to search the nodes of a consistent hash structure.

Hash structures are used in computer systems to map identifying values or keys to their associated values or storage locations storing those values. A hash function is used to transform the key into the index of an array element where the associated value or pointer to that value is stored. When items in the hash structure are removed or deleted the hash structure usually undergoes a rehash whereby existing items in the hash structure are mapped to new locations. Hash structures can be used in cloud based networks to arrange distributed storage schemes in which mappings in the hash structure can contain or point to stored data objects such as files that can be used by applications running in the cloud.

 Consistent hashing can be implemented such that the addition or removal of one slot does not significantly change the mapping of keys to locations. In particular consistent hashing involves associating a real angle to stored items to effectively map the item to for example a point on the circumference of a circle. In addition available machines or servers are mapped to locations around the circle. The machine or server on which the item is to be stored is chosen by selecting the machine at the next highest angle along the circle after the item. If a storage location on the machine becomes unavailable then the angles mapping to the location are removed and requests for files that would have mapped to the unavailable location are now mapped to the next available storage location.

However consistent hashing can be problematic in situations in which a user or computer program requests to access a file that has been moved renamed or deleted without the user or computer program having the necessary data to determine the change. As such finding and accessing the file can take more time and can lead to system hardware or software problems faults or other errors. Further hashing in cloud based networks can be problematic when multiple entities have access to move rename or delete files stored on devices of the cloud based network.

In cases where a file has been altered in a distributed storage system using a consistent hash structure attempts can be made to locate the file by traversing the last known links pointing to that file in the hash structure. When those attempts fail to locate the requested file it becomes necessary to initiate a search for that file. In cases the removal or insertion of storage servers may have altered or offset the position of links to the file in the hash structure. In the simplest case the removal or insertion of a single storage server and or other node in the hash structure can shift the location of the hash node corresponding to the file by one position. In that case a check of the closest adjacent node in the clockwise or other direction can sometimes locate the missing file with little additional processing burden.

While unexpected or unrecorded node shifts of one position may sometimes be the most likely cause of a missing or misplaced file in cases the checking of the next closest node may not locate the requested file. In those cases it becomes necessary to search the remaining unchecked nodes of the hash structure such as the remaining nodes in a circular hash ring. In such instances it is possible to search or probe all remaining nodes of the ring at one time to be sure of locating the file as long as it remains present in the hash structure and corresponding cloud storage resources . However transmitting a significant number of simultaneous or near simultaneous probes or search requests to all remaining nodes in a hash structure can impose significant communications and processing overhead.

In other cases a user can choose to search the hash ring or other hash structure by traversing the ring one node at a time proceeding for instance from the last node that was checked in a clockwise or counter clockwise direction until the file is found as long as it remains in the hash structure and corresponding cloud storage resources . However traversing a hash ring or other hash structure one node at a time can involve performance penalties in terms of search lag and in general can not be expected to locate the requested file in a search checking any less than of the remaining nodes on average.

Therefore it may be desirable to provide systems and methods for searching a cloud based distributed storage resources using a set of expandable probes in which file searches or probes can proceed in a graduated manner where as each span checked by a current generation or set of the probes is determined not to contain the desired file the next iteration of probes will increase in size or span for instance exponentially.

Embodiments of the present teachings relate to systems and methods for searching a cloud based distributed storage resources using a set of expandable probes. In particular embodiments relate to platforms and techniques for generating and conducting search operations to locate missing files stored in a cloud based distributed storage architecture in which the locations of files or files themselves are stored in the nodes of a consistent hash structure such as a hash ring. The hash structure in combination with the cloud based network can allow for a distributed system of file storage and retrieval by one or more users of the cloud and or applications in the cloud. For example an operator of the cloud based network can insert files into available storage devices of the cloud such as storage servers RAID redundant array of inexpensive disks arrays data warehouses and or other storage resources on a dynamic and or distributed basis while using the hash structure to maintain locations of the files. In embodiments users or computer hardware or software can request access to the file whose contents and or location is mapped to the hash structure. In aspects when a file whose last known or recorded location based on the corresponding node in the hash structure can not be located at the location indicated by the hash structure a search can be undertaken to locate that file using an expandable set of search probes whose span measured by the number of nodes which are simultaneously or near simultaneously examined to attempt to find the file or other data object can increase for each generation over a set of search iterations. In aspects the span of the expandable set of probes can expand on an exponential basis and or can expand using other functions or mathematical orders.

In embodiments specifically a memory address of the file can be allocated to a storage server or other storage device that is correspondingly mapped to the hash structure. In aspects the users can be a set of end users accessing via a set of instantiated virtual machines in a cloud based network files associated with application service and or other resources provided by one or more vendors such as independent service vendors ISVs or others.

Embodiments described herein can be implemented in or supported by a cloud network architecture in which files and or other data objects requested by one or more users can be stored to various distributed storage resources of the cloud. As used herein a user can refer a person customer subscriber administrator corporation organization or other entity accessing files and or devices storing the files in the cloud based network. In embodiments the user can operate or manage computer software hardware services and or other resources that can access files and or devices storing the files in the cloud based network. Further as used herein a cloud can in regards comprise a collection of resources that can be invoked to instantiate a virtual machine process or other resource for a limited or defined duration as described herein.

As used herein the storage devices can be hardware such as for example servers device drivers storage such as hard drives virtual memory databases RAID arrays hard disks optical discs such as CD ROM DVD ROM and Blu ray discs random access memory RAM and other memory processors multimedia cards magnetic tape and or other storage media or resources hosted in the cloud based network. The storage devices can be accessed by users or by software or applications independent from or associated with resources of the cloud based network. Resources in the cloud based network can include any hardware software and or communications resources such as ports or channels provided to a virtual machine or other machine or process in the cloud. Resources can likewise include services such as Web based services deployed in the cloud for example security or identity management services and or other resources.

As used herein a hash structure can be any data structure model object and or encoding that uses a hash function to map keys or other inputs to corresponding nodes on that structure which nodes can either contain the desired data object itself and or a link or other pointer to the desired data object. In embodiments the output of the hashing process can comprise an angular value produced by hashing the name of a file that points to a location around a ring with the closest next node e.g. in a clockwise direction then storing an address link and or other location of a file or other data object stored on an associated storage device hosted in the cloud. In embodiments the closest next node pointed to by the hashed angular value can also or instead itself contain the file or other data object in memory or other storage associated with the hash structure.

One or more hash structures used herein can be implemented as a consistent hashing scheme whereby the address locations storing a desired file or other data object are mapped and allocated to mapped storage devices via a circular or ring based hash structure. One or more users or entities can access the hash structures to overwrite change delete update reformat or otherwise modify or manipulate keys or values associated with the hash structures such as file names or file versions. It should be appreciated that various hash functions known to persons skilled in the art can be employed to map keys such as requested file names to the associated angular values or other pointers to hash nodes associated with stored files. In embodiments the hash structures can be employed in one or more cloud based networks.

In embodiments the entire set of resource servers or other hardware or software resources used to support the cloud along with its instantiated virtual machines is managed by a cloud management system . The cloud management system can comprise a dedicated or centralized server and or other software hardware and network tools that communicate via network such as the Internet or other public or private network with all sets of resource servers to manage the cloud and its operation. To instantiate a new set of virtual machines a user can transmit an instantiation request to the cloud management system for the particular type of virtual machine that the user desires to invoke for its intended application. A user can for instance make a request to instantiate a set of virtual machines configured for email messaging or other applications from the cloud . The request can be received and processed by the cloud management system which identifies the type of virtual machine process or other resource being requested. The cloud management system can then identify the collection of resources necessary to instantiate that machine or resource. In embodiments the set of instantiated virtual machines or other resources can for example comprise virtual transaction servers used to support Web storefronts or other transaction sites.

In embodiments the user s instantiation request can specify a variety of parameters defining the operation of the set of virtual machines to be invoked. The instantiation request for example can specify a defined period of time for which the instantiated machine or process is needed. The period of time can be for example an hour a day or other increment of time. In embodiments the user s instantiation request can specify the instantiation of a set of virtual machines or processes on a task basis rather than for a predetermined amount of time. For instance a user could request resources until a software update is completed. The user s instantiation request can specify other parameters that define the configuration and operation of the set of virtual machines or other instantiated resources. For example the request can specify an amount of processing power or input output I O throughput the user desires to be available to each instance of the virtual machine or other resource. In embodiments the requesting user can for instance specify a service level agreement SLA acceptable for their purposes. Other parameters and settings can be used. One skilled in the art will realize that the user s request can likewise include combinations of the foregoing exemplary parameters and others.

When the request to instantiate a set of virtual machines or other resources has been received and the necessary resources to build that machine or resource have been identified the cloud management system can communicate with one or more of the set of resource servers to locate resources to supply the required components. The cloud management system can select providers from the diverse set of resource servers to assemble the various components needed to build the requested set of virtual machines or other resources. It may be noted that in some embodiments permanent storage such as hard disk arrays may not be included or located within the set of resource servers available to the cloud management system since the set of instantiated virtual machines or other resources may be intended to operate on a purely transient or temporary basis. In embodiments other hardware software or other resources not strictly located or hosted in the cloud can be leveraged as needed. For example other software services that are provided outside of the cloud and hosted by third parties can be invoked by in cloud virtual machines. For further example other non cloud hardware and or storage services can be utilized as an extension to the cloud either on an on demand or subscribed or decided basis.

With the resource requirements identified the cloud management system can extract and build the set of virtual machines or other resources on a dynamic or on demand basis. For example one set of resource servers may respond to an instantiation request for a given quantity of processor cycles with an offer to deliver that computational power immediately and guaranteed for the next hour. A further set of resource servers can offer to immediately supply communication bandwidth for example on a guaranteed minimum or best efforts basis. In other embodiments the set of virtual machines or other resources can be built on a batch basis or at a particular future time. For example a set of resource servers may respond to a request for instantiation at a programmed time with an offer to deliver the specified quantity of processor cycles within a specific amount of time such as the next 12 hours.

The cloud management system can select groups of servers in the set of resource servers that match or best match the instantiation request for each component needed to build the virtual machine or other resource. The cloud management system can then coordinate the integration of the completed group of servers from the set of resource servers to build and launch the requested set of virtual machines or other resources. The cloud management system can track the combined group of servers selected from the set of resource servers or other distributed resources that are dynamically or temporarily combined to produce and manage the requested virtual machine population or other resources.

In embodiments the cloud management system can generate a resource aggregation table that identifies the various sets of resource servers that will be used to supply the components of the virtual machine or process. The sets of resource servers can be identified by unique identifiers such as for instance Internet protocol IP addresses or other addresses. The cloud management system can register the finalized group of servers in the set of resource servers contributing to an instantiated machine or process.

The cloud management system can then set up and launch the initiation process for the virtual machines processes or other resources to be delivered from the cloud. The cloud management system can for instance transmit an instantiation command or instruction to the registered group of servers in the set of resource servers . The cloud management system can receive a confirmation message back from each participating server in the set of resource servers indicating a status regarding the provisioning of their respective resources. Various sets of resource servers may confirm for example the availability of a dedicated amount of processor cycles amounts of electronic memory communications bandwidth or applications or other software prepared to be served.

As shown for example in the cloud management system can then instantiate one or more than one set of virtual machines or other processes based on the resources supplied by the registered set of resource servers shown in . In embodiments the cloud management system can instantiate a given number for example 10 500 1000 or other numbers of virtual machines to be made available to users on a network such as the Internet or other public or private network. Each virtual machine can be assigned an instantiated machine ID that can be stored in the resource aggregation table or other record or image of the instantiated population. Additionally the cloud management system can store the duration of each virtual machine and the collection of resources utilized by the complete set of instantiated virtual machines .

In embodiments the cloud management system can further store track and manage a user s identity and associated set of rights or entitlements to software hardware and other resources. Each user that populates a set of virtual machines in the cloud can have specific rights and resources assigned and made available to them. The cloud management system can track and configure specific actions that a user can perform such as provision a set of virtual machines with software applications or other resources configure a set of virtual machines to desired specifications submit jobs to the set of virtual machines or other host manage other users of the set of instantiated virtual machines or other resources and other privileges or actions. The cloud management system can further generate records of the usage of instantiated virtual machines to permit tracking billing and auditing of the services consumed by the user. In embodiments the cloud management system can for example meter the usage and or duration of the set of instantiated virtual machines to generate subscription billing records for a user that has launched those machines. Other billing or value arrangements are possible.

The cloud management system can configure each virtual machine to be made available to users of the network via a browser interface or other interface or mechanism. Each instantiated virtual machine can communicate with the cloud management system and the underlying registered set of resource servers via a standard Web application programming interface API or via other calls or interfaces. The set of instantiated virtual machines can likewise communicate with each other as well as other sites servers locations and resources available via the Internet or other public or private networks whether within a given cloud or between clouds.

It may be noted that while a browser interface or other front end can be used to view and operate the set of instantiated virtual machines from a client or terminal the processing memory communications storage and other hardware as well as software resources required to be combined to build the virtual machines or other resources are all hosted remotely in the cloud . In embodiments the set of virtual machines or other resources may not depend on or require the user s own on premise hardware or other resources. In embodiments a user can therefore request and instantiate a set of virtual machines or other resources on a purely off premise basis for instance to build and launch a virtual storefront or other application.

Because the cloud management system in one regard specifies builds operates and manages the set of instantiated virtual machines on a logical level the user can request and receive different sets of virtual machines and other resources on a real time or near real time basis without a need to specify or install any particular hardware. The user s set of instantiated machines processes or other resources can be scaled up or down immediately or within a short period of time on an on demand basis if desired. In embodiments the various sets of resource servers that are accessed by the cloud management system to support a set of instantiated virtual machines or processes can change or be substituted over time. The type and operating characteristics of the set of instantiated virtual machines can nevertheless remain constant or almost constant since instances are assembled from abstracted resources that can be selected and maintained from diverse sources based on uniform specifications.

In terms of network management of the set of virtual machines that have been successfully configured and instantiated the cloud management system can perform various network management tasks including security maintenance and metering for billing or subscription purposes. The cloud management system of a given cloud can for example install or terminate applications or appliances on individual machines. The cloud management system can monitor operating virtual machines to detect any virus or other rogue process on individual machines and for instance terminate the infected application or virtual machine. The cloud management system can likewise manage an entire set of instantiated virtual machines or other resources on a collective basis for instance to push or deliver a software upgrade to all active virtual machines. Other management processes are possible.

In embodiments more than one set of virtual machines can be instantiated in a given cloud at the same overlapping or successive times. The cloud management system can in such implementations build launch and manage multiple sets of virtual machines based on the same or different underlying set of resource servers with populations of different instantiated virtual machines such as may be requested by different users. The cloud management system can institute and enforce security protocols in a cloud hosting multiple sets of virtual machines. Each of the individual sets of virtual machines can be hosted in a respective partition or sub cloud of the resources of the main cloud . The cloud management system of a cloud can for example deploy services specific to isolated or defined sub clouds or isolate individual workloads processes within the cloud to a specific sub cloud. The subdivision of the cloud into distinct transient sub clouds or other sub components which have assured security and isolation features can assist in establishing a multiple user or multi tenant cloud arrangement. In a multiple user scenario each of the multiple users can use the cloud platform as a common utility while retaining the assurance that their information is secure from other users of the overall cloud system. In further embodiments sub clouds can nevertheless be configured to share resources if desired.

In embodiments and as also shown in the set of instantiated virtual machines generated in a first cloud can also interact with a set of instantiated virtual machines or processes generated in a second third or further cloud . Further the cloud management system of the first cloud can interface with the cloud management system of the second cloud to coordinate those domains and operate the clouds and or virtual machines or processes on a combined basis. The cloud management system of a given cloud can track and manage individual virtual machines or other resources instantiated in that cloud as well as the set of instantiated virtual machines or other resources in other clouds.

In the foregoing and other embodiments the user making an instantiation request or otherwise accessing or utilizing the cloud network can be a person customer subscriber administrator corporation organization or other entity. In embodiments the user can be or include another virtual machine application or process. In further embodiments multiple users or entities can share the use of a set of virtual machines or other resources.

In aspects the requesting entity can comprise a file management module that can be configured to interface with a hash structure that can map keys to their associated values. In embodiments candidate storage locations of files stored on the set of storage resources can be mapped to nodes stored on or associated with the hash structure . In embodiments the hash structure can be implemented using consistent hashing such as a ring based hash structure although other hashing techniques and structures are envisioned. An operator of the cloud can insert files into any available storage resource a dynamic and or distributed basis while using the hash structure to maintain locations of the files.

It should be appreciated that the hash structure or a copy thereof can be implemented or stored on other resources of cloud such as for example the cloud management system . It should further be appreciated that the file management module can be implemented on other hardware and or software components configured to interface with the other components and entities described herein. Further it should be appreciated that the file management module can be configured to interface with additional clouds not shown in figures and associated resources such as virtual machines of the additional clouds.

In embodiments the requesting entity can be a user owner administrator company software program or application service or other entity or resource who can submit a request to access or retrieve a file stored on the set of storage resources of the cloud . For example a user can submit a file request to access or retrieve a file stored on a virtual machine in the cloud . In embodiments the file management module can determine from the file request a candidate storage address for the file that can be mapped to the hash structure and allocated to a storage device also mapped to the hash structure . The file management module can be configured to communicate with the cloud management system the set of storage resources the hash structure and or other resources of the cloud .

According to the present embodiments the file management module can track and manage location histories of files via file links mapped on the hash structure . In embodiments the file links can point to storage locations of the storage devices on which the files are stored such as for example a uniform resource locator URL . Further the storage devices themselves can be mapped to the hash structure . In embodiments hash structure node storage and associated access techniques such as those described in co pending U.S. application Ser. No. 12 893 388 entitled SYSTEMS AND METHODS FOR MONITORING FILES IN CLOUD BASED NETWORKS filed of even date herewith and having the same inventor as this application and assigned or under obligation of assignment to the same entity as this application which application is incorporated herein in its entirety by reference can be used to manage and store files in the associated hash structure .

In operation the file management module can examine a file access request from the requesting entity to determine node on the hash structure to which that file and or other data object is mapped. For example the file management module can use a hash algorithm to generate an angular value on the hash structure as a function of a name of the file. The closest node for instance in a clockwise or counterclockwise or other direction to that angular value can store an associated value for a candidate storage location in which the desired file is stored. It should be appreciated that other key generation and value determination algorithms are envisioned. In the regular course of retrieval processing the requested file and or other data object can be expected to be found directly or indirectly e.g. by following links from the corresponding node.

However in cases the file management module may be unable to locate the requested file from the expected location based on the hash structure . The cause of the missing or misplaced file can relate to a number of events such as for example the removal of one or more servers from the set of storage resources the addition of one or more servers from the set of storage resources the corruption of the hash structure itself and or other events or factors. In cases where the requested file is not located at the last known location via hash structure and associated logic it may be necessary to carry out search operations on the hash structure and or corresponding storage sites in the set of storage resources according to various embodiments as now described.

Referring to depicted is a exemplary mathematical space in which a hash structure can be encoded or constructed to allocate and store files to storage resources using consistent hashing and in which space search operations according to embodiments can be conducted. As shown in the mathematical space can be a circle with a radius of 1 however it should be appreciated that the mathematical space can comprise different spaces. The mathematical space can comprise files and a plurality of servers or other storage resources mapped to a set of nodes mapped to points on the circle using a consistent hash function. For example as shown in files F F and servers S S are mapped as points on the circle of the mathematical space . Further each of the files F F can be allocated to the closest server S S moving clockwise around the circle as indicated by arrow through the set of nodes . For example as illustrated file F is allocated to server S file F is allocated to server S and files F F are allocated to server S.

In instances where the node in set of nodes to which the hash function has directed the file management module to locate the requested file does not contain or properly point to the requested files search operations as illustrated in can be initiated and carried out by file management module and or other logic. According to embodiments in general the file management module can generate and employ an expandable set of probes which can be transmitted or communicated to one or more target nodes in the set of nodes to search probe examine and or otherwise check the set of nodes in an increasing progressive or expanding manner to locate the missing file and or other data object.

In embodiments and as for instance shown in an initial attempt at retrieving a requested file can miss or file to locate a desired file depicted merely for illustration as F. In aspects the requested file F may be missing or not located in the location indicated by the node corresponding to the file F due to the relocation of file F to a different server from the original server merely illustratively S . The movement of file F to a different server or other location can have taken place without a corresponding update to the hash structure thereby leading to an attempt to retrieve the requested file F from an address or location on the original storage resource server S .

In response to determining that the requested file F has not been located at its last known or recorded location as indicated by the hash structure the file management module can initiate file searching operations using an expandable set of probes . As illustrated for instance in the expandable set of probes can be initiated by file management module and or other logic to comprise a single or one node probe. The initial single node probe can be configured to examine the next adjacent node to the node at which the requested file F was last known or recorded to be located which in the illustration can be the node corresponding to file F. In aspects at times or under certain circumstances the shifting of a node by one place due to the deletion of a file or server can represent the most likely cause of a missing file. In aspects probing the single next closest node whether in a clockwise counter clockwise or other direction or jump can thereby represent the attempt to locate the file through the most likely node to now contain or point to the file. However in aspects the requested file F may be shifted or relocated to other locations or due to other reasons and not reside in the closest next node in the set of nodes . Since this file identifier does not match the requested file F in the illustrated search operations the file management module and or other logic can proceed to expand the expandable set of probes in an attempt to locate the requested file F using an increasing number of probes of increasing or progressive span. As shown in the next generation or iteration of the expandable set of probes can be doubled to span or encompass the next two clockwise or counterclockwise or other nodes adjacent to the last node the F node that was checked.

In aspects as shown in the event where the requested file F is likewise not found within the current generation or iteration of the expandable set of probes the file management module and or other logic can increase the expandable set of probes again as shown in for instance to double the span of the expandable set of probes to a total of four nodes. In cases where as shown the examination of that subset of the set of nodes also fails to locate the requested file the file management module as shown in can again increase the span of the expandable set of probes for instance by doubling the span of the expandable set of probes to eight nodes. In illustrative embodiments as shown that generation or iteration of the expandable set of probes can locate the requested file F in the instance shown as being hosted or located on a different server server S compared to the last known or recorded location of that file. The file management module can then retrieve the requested file F and transmit that file to the requesting entity . The file management module can also perform cleanup operations on the hash structure to insert the correct location of the located file F into the set of nodes using a consistent hashing scheme as noted.

In aspects increasing the span or number of nodes being probed or examined during search operations can increase the probability of locating the file compared to transmitting or activating a smaller number of probes. Conversely by increasing the span of the expandable set of probes in a regular progression can increase the span of nodes being searched without necessarily saturating the communications or processing bandwidth being used to carry out the searching operations. In embodiments as noted the expandable set of probes can be increased by doubling the span of the expandable set of probes after each search iteration starting on a next closest node to the node last examined. In aspects the doubling of the expandable set of probes produces an exponential increase in the span or width of the hash structure being search probed or examined. In embodiments other increases or adjustments to the expandable set of probes can be carried out. For instance in embodiments the expandable set of probes can be increased by an amount generated by a linear or algebraic function. In embodiments the function by which the expandable set of probes is increased can be a combination of linear algebraic and or exponential functions or values. In embodiments it may also be noted that the function by which the file management module causes the expandable set of probes to expand can be dynamic and change over time for instance to speed up or slow down the rate at which the expandable set of probes is growing in span. Other functions calculations iterations and adjustments to the expandable set of probes can be made. For instance in embodiments the file management module can cause the expandable set of probes to start the next iteration or generation of probes at a different point than the next closest node to the node that was last examined for example skipping to a half way point around the hash structure to align the expandable set of probes to a node on the other side of the hash structure . Other calculations progressions expressions and rules can be used to generate and update the expandable set of probes to examine the set of nodes in an increasing manner.

Processor can also communicate with computer readable storage medium the file management module the hash structure and other resources to execute control logic manage search and retrieval operations of files and or other data objects stored in the set of storage resources as described herein and control the operation of other resources in cloud . Other configurations of requesting entity associated network connections and other hardware and software resources are possible. In embodiments it may be noted that the cloud management system can comprise the same similar and or different hardware software and other computing resources as the requesting entity .

In search operations according to platforms and techniques described herein can be initiated to locate the requested file. In embodiments it may be noted that the initial attempt to locate the file in can be conducted based on or using links that are known or stored in the hash structure as having been associated with the requested file in the past. According to embodiments In search operations as initiated in the search algorithms may in regards not be based or depend or stored links or pointers to the requested file. In the file management module can file management module can generate retrieve and or otherwise access a first generation or configuration of the expandable set of probes for instance by retrieving those probes and or associated data from computer readable storage medium and or other local or remote storage. In aspects the first generation or iteration of the expandable set of probes can consist of a probe spanning or encompassing single node. In aspects the file management module can use the first generation probe to examine the node in the set of nodes that is adjacent to the node and or last or ultimate node after following any intermediate links that was deemed to contain the requested file but which did not successfully contain or point to that file. In embodiments the starting node at which the initially single probe expandable set of probes can search for the requested file can be the adjacent or closest node in a clockwise direction in the hash structure . In embodiments other starting nodes and other positions in the hash structure can be used.

In the file management module can determine whether the requested file is located within and or can be located by following direct or indirect links within the expandable set of probes . In if the requested file is not found directly or by referenced links within the first or initial set of probes in the expandable set of probes the file management module can generate one or more further generations of the expandable set of probes until the requested file is located and or verified to be found and up to date. In aspects the starting node at which the first probe of the expandable set of probes is aligned can be incremented in each generation of that expandable set of probes that is generated so that the span of each generation of those probes begins at the next unexamined or adjacent node. In aspects the starting node to which the expandable set of probes is aligned can be incremented or can progress in a clockwise direction in a consistent hashing scheme but in embodiments can traverse the hash structure in a counter clockwise direction and or can move in other ways or following other patterns.

In the file management module can extract or retrieve the requested file and or update the set of nodes to reflect the location at which the requested file was ultimately found such as by storing the file itself in a corresponding node in the set of nodes by storing a link to the file in the set of nodes and or otherwise recording the location of the requested file. In the file management module can return a notification and or take other action if the requested file is not located after exhausting the set of nodes of the hash structure and or based on other conditions as appropriate. In processing can repeat return to a prior processing point jump to a further processing point or end.

The foregoing description is illustrative and variations in configuration and implementation may occur to persons skilled in the art. For example while embodiments have been described which operate using one file management module and associated cloud management system in embodiments one or more of file management module and associated cloud management system and or other servers data stores and or other logic or resources can be used. For further example while embodiments have been described in which cloud resources and subscription plans are modified or adjusted in embodiments the subscription plans associated fees and resources associated with the plans can be modified or adjusted according to any combination and at any time or interval. Other resources described as singular or integrated can in embodiments be plural or distributed and resources described as multiple or distributed can in embodiments be combined. The scope of the present teachings is accordingly intended to be limited only by the following claims.

