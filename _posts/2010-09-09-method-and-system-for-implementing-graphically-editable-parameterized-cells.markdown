---

title: Method and system for implementing graphically editable parameterized cells
abstract: Disclosed is an improved mechanism and method for implementing electronic designs. According to some approaches, a method, mechanism, and compute program product is disclosed for implementing electronic designs that allows visual editing of complex objects with advanced editing features, which also provides for automated correspondence of the editing results to parametric values for a programmable object in the design.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08347261&OS=08347261&RS=08347261
owner: Cadence Design Systems, Inc.
number: 08347261
owner_city: San Jose
owner_country: US
publication_date: 20100909
---
The present application claims the benefit of U.S. Provisional Application 61 241 325 filed on Sep. 10 2009 which is hereby incorporated by reference in its entirety.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The invention relates to the implementation of electronic designs such as the design of Integrated Circuits ICs .

Complex structures in an electronic design are often automatically generated from a set of parameters. Guard rings are examples of complex structures that may be formed based upon a programmable set of parameters that is used to create geometric objects in an electronic layout. A guard ring is a ring like auxiliary circuit structure that is placed in a circuit to prevent negative electrical effects in the circuit. For example guard rings are often used in CMOS circuit designs to address latchup problems for the electrical design.

A common example of an approach to implement such complex designs with parameters is to use parameterized cells pcells . Pcells have been used for many years in designing full custom chip designs. The pcells are evaluated every time the design is opened. The highly dynamic nature of pcells introduces a level of variability that the design teams may want to control.

The pcell is associated with a set of parameters that may be programmed and or set with values that properly evaluated allows the pcell to be instantiated into design elements on a circuit layout. The guard ring for example may be implemented using one or more pcells that have been programmed with the appropriate parameters to generate a guard ring instance when the parameters are properly evaluated.

While powerful when properly programmed or configured the general problem with parameterized designs is that conventionally these designs may only be edited through those parameters. This approach provides a very effective programmatic way to edit the designs but is not very intuitive when it is desired to visually modify shapes in the design.

One approach that can be taken is to use ROD MPP e.g. ROD MPP guard rings. These guard rings can be edited like a shape. However the problem is that these structures are not programmable and do not support advanced editing processes such as merging.

Therefore there is a need for an advanced approach to implement electronic designs that allows for visual editing in combination with advanced editing methodologies while also allowing programmability for the design objects.

The present invention provides an improved mechanism and method for implementing electronic designs. According to some embodiments of the invention disclosed is a method mechanism and compute program product for implementing electronic designs that allows visual editing of complex objects with advanced editing features which also provides for automated correspondence of the editing results to parametric values for a programmable object in the design.

Further details of aspects objects and advantages of the invention are described below in the detailed description drawings and claims. Both the foregoing general description and the following detailed description are exemplary and explanatory and are not intended to be limiting as to the scope of the invention.

The present invention provides an improved mechanism and method for implementing electronic designs. According to some embodiments of the invention disclosed is a method mechanism and compute program product for implementing electronic designs that allows visual editing of complex objects with advanced editing features which also provides for automated correspondence of the editing results to parametric values for a programmable object in the design.

In a conventional approaches the design editing tool such as a layout editor acts upon shapes and geometries in the design without regard for or knowledge of any parameters or programs that might have been used to create those shapes or geometries. As such it is impossible for a user to interactively and visually use the layout editor to make changes to design elements that are parametric or programmatic in nature. Therefore with conventional approaches the parametric or programmatic design elements could only be edited by directly editing the parameters or programs associated with the design elements.

The approach of the present invention allows a programmable or parametric design to be defined in a way that implements a pcell submaster having a shape hereinafter referred to as either a smart shape and or fluid shape that is capable of being visually edited by a design editing tool or layout editor. An implementation function is used to specify the existence and identity of the smart shapes to the design editing tool. This function provides the layout editor with the necessary information to know about and be able to edit the smart shapes. Once the editing tool has been used by a user to edit the smart shape an editing function is employed to make and propagate the corresponding changes to the programmable or parametric design elements or cells. In this way a user can use familiar interfaces and controls in a layout editor to edit parametric shapes without requiring the layout editor to know about the specific parameters and details of those shapes.

The present invention is illustrated herein by way of examples with respect to pcells. It is noted however that the invention is applicable to any types of programmable or parameterized cells and as such is not limited to pcells unless claimed as such.

A pcell or parameterized cell has content which is dynamically created based on a set of parameters. The main attributes of a pcell are a piece of code in a given language a list of parameter types and default value and an evaluator e.g. with the language and evaluator being implemented in a programming language such as the SKILL TCL or Python languages. A pcell instance is an instance of a pcell e.g. an instance decorated with pcell parameter values. Evaluating a pcell instance means evaluating the pcell code against the instance parameters with the help of the evaluator in order to produce a new non persistent design with real data. This new design is referred to herein as a sub master. Therefore the pcell sub master is a pcell variant that contains the results of the evaluation of the pcell implementation function against pcell instance parameter values. Evaluating a pcell instance means creating a pcell sub master and filling it with the evaluation of the pcell implementation function against the pcell instance parameters.

At an instance is created for the programmable cell. In other words the pcell master is evaluated using a given set of parameter values to create an instantiation of the design element s that correspond to the pcell. This forms a set of objects geometries that exist on the layout of an electrical design. The layout editor is informed of the nature of the pcell being a smart pcell having one or more smart shapes. In this way the layout editor knows that a smart editing function needs to be called to actually implement any edits or changes to the pcell that is desired by the user.

Assume at this point that it is desired to edit the electrical design e.g. using a layout editor. A graphically based user interface may be used by the user at to manipulate the size or configuration of the pcell instance. For example the user may desire to perform any or all of the following editing functions on the pcell instance stretch one or more portions of shapes perform chopping function perform merging function perform polygon conversion perform keep out generation or tunneling perform keep out deletion or healing perform abutment.

The results of the graphical editing are saved at by automatically updating and propagating the parameters of the programmable cell based upon the results of the editing. According to some embodiments a smart editing function is called to actually implement the graphical edits changes by the layout editor to the pcell parameters. For example assume that the user has updated a smart shape e.g. by stretching the smart shape. The smart shapes within the pcell instance are shapes within a sub master which directly corresponds to a pcell parameter and which can be edited by the layout editor tool. The smart shape SKILL updating function updates a smart pcell instance parameter as a function of an editing done on a smart shape within the instance sub master. This function is automatically called by the layout editor when editing the smart shape. The updating function is registered on the smart pcell super master. The result is an entirely new pcell sub master with parameter values that correspond to the results of the visual editing.

The electronic designs may be stored in a computer readable storage device . Computer readable storage device comprises any combination of hardware and software that allows for ready access to the data that is located at the computer readable storage device . For example computer readable storage device could be implemented as computer memory operatively managed by an operating system. The computer readable storage device could also be implemented as an electronic database system having storage on persistent and or non persistent storage. According to the present embodiment the electronic design and analysis results are placed into the computer readable storage device including pcell super masters and pcell instances .

A design editing tool such as a layout editor may be used by users at a user station to create or edit electronic designs. Any suitable computer aided design CAD tool or electronic design automation EDA design tool can be used as a layout editor.

The smart shapes for the pcell super master are created with the smart implementation function . The smart implementation function is used to specify to the design tool which are the smart shapes in a pcell. This smart implementation function is accomplished according to some embodiments by tracking the smart shape information and allowing the design tool to identify which of the shapes are smart shapes using that information which permits the design tool to be able to discriminate between smart shapes and regular shapes. This in turn allows the user to select and edit the smart shapes using the layout editor. According to some embodiments the smart implementation function is implemented as a SKILL function that is called via an application programming interface API from the design tool.

After the user has edited the smart pcell one or more smart editing functions are employed to realize and propagate those changes to the pcell. Any appropriate editing functionality may be implemented by the smart editing function . For example the following editing functions may be defined for and associated with the pcell super master update function merge function chop function compacting function convert function obstruction function and abutting function . Each of these functions is described in more detail below. According to some embodiments the smart editing functions are implemented as SKILL functions which update parameters of a given pcell instance. For example the update function may be used to implement updates to the shape parameters reflect the editing performed by the user upon a smart shape within the pcell instance. As described in more detail below the merge function chop function compacting function convert function obstruction function and abutting function may be used to perform edits to selected smart pcell instances. These smart editing functions may themselves call the update function with regard to any instance edits that involve changes to smart shapes within the pcell instances.

An interface is employed to allow the layout editor to properly interact with the smart implementation function and or smart editing functions . The interface may be implemented with hooks to the smart editing functions and or creation functions that may be employed to generate pcell instances or masters. According to some embodiments standardized function prototypes and or APIs are utilized to allow the layout editor to properly interact with the smart editing function or smart implementation function .

Assume that a pcell instance is created based upon the pcell super master . The pcell instance includes a smart shape created by the implementation function that is editable using one of the smart editing functions .

System embodying the present invention allows a user at user station to use the layout editor to visually edit the smart pcell instance and or the smart shape using some form of graphical user interface as opposed or in addition to allowing the pcell instance to be programmatically edited. This allows the user to graphically manipulate either the smart pcell or its smart shape in a visual manner with immediate visual feedback of the editing results.

The visual edits that are made to the smart pcell or smart shapes are correspondingly made to the appropriate parameters within the pcell instance . The layout editor implements the edits by calling the appropriate smart editing function for the specific type of edit being performed. According to some embodiments the smart editing function that is called is a SKILL function which updates the shape parameters of the pcell instance which then causes a new pcell sub master to be created having the new shape parameters. The new shape parameters are reflected in a revised smart shape within the new pcell sub master .

At the smart shapes are tagged or named to identify the smart shapes in the pcell which allows the system to distinguish the smart shapes from non smart shapes. The tag associated with the smart shape is used to identify specific smart shapes in a pcell instance. In the case of a pcell submaster containing several smart shapes the tags allow identification of the specific parameters that correspond to the smart shape being edited.

It is noted that the tag can be used for other purposes with respect to the pcell in addition to its function with regard to naming for the pcell. For example the tag can be used for adding a property or adding an extension.

At the smart pcell editing function s are defined and configured. The type of smart editing that will be implemented for the pcell is identified at . According to some embodiments of the invention different types of smart editing may be associated with different and or separate smart editing functions and functionality. Therefore it is important to identify upfront the types of smart editing that is desired so that corresponding smart editing functions can be created for those types of desired editing.

At identification is made of the parameters that may be affected by the anticipated smart editing functionality. The smart editing updating function is then created for the pcell at . The smart editing update function is used to update the appropriate pcell parameters based upon smart editing results created by the user. These parameters are unknown to the layout editor but are manipulated based upon actions performed at the layout editor which affects these parameters. Thereafter at the new functions are associated with the pcell e.g. by registering the functions with the pcell super master.

The manipulations by the user will change the size orientation configuration or dimensions of the pcell smart and or of the smart shapes within the pcell. The layout tool will interface with the smart editing function update and propagate the changes made by the user. The updating function will at identify the pcell parameters that are affected by the user edits. Next at the updating function changes the instance parameters to conform to the editing results created by the user. Thereafter a new pcell sub master is created at which correspond to the user edits.

The next portion of the figure shows the user invoking the stretch command to partially select the smart shape at the darkened portion of the shape. Next portion shows the user stretching the smart shape in a downward direction. Finally at the layout tool calls the pcell update function such that the pcell shape parameters are updated and re evaluated to create a new pcell sub master that corresponds to the dimensions and configurations shown in .

The next portion of the figure shows the user invoking the split command to partially select a portion of an edge for the smart shape at the darkened portion of the shape. Next portion shows the user extending the selected portion of the smart shape. At the layout tool calls the pcell update function such that the pcell shape parameters are updated and re evaluated to create a new pcell sub master that corresponds to the dimensions and configurations shown in where the selected portion has been extended as shown in the figure.

The next portion of the figure shows the user invoking the re shape command to select the smart shape for editing. Next portion shows the user creating a re shaping rectangle that will be used for extending or changing the configuration or dimensions of the original shape. At the layout tool calls the pcell update function such that the pcell shape parameters are updated and re evaluated to create a new pcell sub master that corresponds to the dimensions and configurations shown in where the selected portion has been extended as shown in the figure.

At the user invokes the merge command within the layout tool which in certain tools may be in a menu structure at Edit instance merge which causes the layout tool to call the appropriate pcell update function such that the pcell instance parameters are updated and re evaluated to create a new pcell sub master that corresponds to the dimensions and configurations of the merged and combined instances from . The configuration of the new pcell sub master is shown in . This function is implemented by copying the pcell smart shapes to a top level and merging the smart shapes. Therefore it is possible that the smart update function is utilized to implement the merge function. For all the merged shapes the function creates an instance of the super master based upon the merged shape e.g. by performing a Boolean AND operation upon the shapes to merge. For the sake of clarity the figure only displays the smart shape and does not display maskable geometries.

The leftmost portion of shows an example user interface in which the user has selected an instance to chop. While the example only shows one instance being selected for chopping it is noted that an implementation of the invention may provide for any number of instances to be selected for chopping.

At the user specifies a chopping rectangle which essentially forms as a keep out bounding box that overlays upon the shapes in the selected instance s . As shown in in the chopping rectangle chops the selected instance to create two new instances. The new instances are created by updating pcell instance parameters for the pcell and re evaluating those parameters to create the new pcell sub masters that correspond to the dimensions and configurations of the two new instances that have been chopped from the previously selected single instance. For the sake of clarity the figure only displays the smart shape and does not display maskable geometries.

As shown in at the user has selected a set of one or more instances to convert. In this example a path has been selected for conversion. As shown in the user invokes the convert to polygon functionality of the layout tool which in certain tools may be in a menu structure at Edit instance convert which in turn called the convert to polygon function updating function associated with and registered to the pcell. This updating function updates the instance parameters for the pcell and re evaluating those parameters to create the new pcell sub master that correspond to the dimensions and configurations of the new polygon that corresponds to the original path as shown in .

The obstruction deletion function operates by deleting all obstruction parameters on a user specified layer list. The following is an example function prototype

For this type of function if 1 points is not defined then delete all obstructions on 1 layerPurposePair. If length 1 points 1 then delete all obstructions which would contain that point emulation of point select . If length 1 points 2 then delete all obstructions fully contained by the rectangle defined by 1 points.

According to one embodiment of the invention computer system performs specific operations by processor executing one or more sequences of one or more instructions contained in system memory . Such instructions may be read into system memory from another computer readable usable medium such as static storage device or disk drive . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and or software. In one embodiment the term logic shall mean any combination of software or hardware that is used to implement all or part of the invention.

The term computer readable medium or computer usable medium as used herein refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory .

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

In an embodiment of the invention execution of the sequences of instructions to practice the invention is performed by a single computer system . According to other embodiments of the invention two or more computer systems coupled by communication link e.g. LAN PTSN or wireless network may perform the sequence of instructions required to practice the invention in coordination with one another.

Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

In the foregoing specification the invention has been described with reference to specific embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. For example the above described process flows are described with reference to a particular ordering of process actions. However the ordering of many of the described process actions may be changed without affecting the scope or operation of the invention. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

