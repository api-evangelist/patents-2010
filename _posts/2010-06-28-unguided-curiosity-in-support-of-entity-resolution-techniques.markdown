---

title: Unguided curiosity in support of entity resolution techniques
abstract: Provided are techniques for receiving data comprising an entity having at least one feature; determining how the entity correlates with an existing entity, identifying an additional feature to increase confidence of the entity resolution, searching a data source for the additional feature to obtain an observation containing the additional feature, and performing the entity resolution using the at least one feature and the additional feature.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08620927&OS=08620927&RS=08620927
owner: International Business Machines Corporation
number: 08620927
owner_city: Armonk
owner_country: US
publication_date: 20100628
---
Embodiments of the invention relate to unguided curiosity in support of entity resolution techniques.

The terms identity resolution entity resolution semantic reconciliation generally refer to the same type of technique e.g. algorithm . More specifically such techniques frequently use either probabilistic or deterministic techniques or some combination of both to determine with a degree of confidence whether the entities e.g. persons places or things are the same or not. This decision is an entity resolution assertion. 

For example a first record containing CustID 1 Bob Jones at 123 Main Street with a Date of Birth DOB of Jun. 21 1945 is likely to represent the same entity as a second record containing CustID 2 Bob K Jones at 123 S. Main Street with a DOB of Jun. 21 1945 . Entity resolution can be used within a single data source to find duplicates across data sources to determine how disparate transactions also referred to herein as records relate to one entity or used both within and across a plurality of data sources at the same time.

Entities have features values that are collected or observed that can be more or less discriminating . For example in the area of human entities features may include one or more of name address phone DOB Social Security Number SSN Driver s License D L biometric features gender hair color and including but not limited to geospatial temporal attributes familial or other relationships patterns of life like ones movement over the course of a day . By way of example SSN s are generally very discriminating dates of birth are less discriminating and gender is not particularly discriminating at all. As another example entity resolution on objects such as a car may include one or more features of license plate number Vehicle Identification Number VIN make model year color owner and so on.

Features may be used to establish confidence a degree of certainty that two discreetly described entities are the same . For the above example of CustID 1 and CustID 2 the confirming features of name address and DOB and the lack of conflicting features e.g. features in disagreement such as a SSN number of 111 11 1111 versus 33 44 5555 probably result in a high enough confidence to assert that the first record and the second record represent the same entity e.g. person without human review.

Entity resolution is sometimes referred to by other names e.g. deduplication match merge and so on. Entity resolution systems are described further in Entity Resolution Systems vs. Match Merge Merge Purge List De duplication Systems by Jeff Jonas published Sep. 25 2007. Some entity resolution assertion systems can automatically reverse earlier assertions based on new records hence correcting earlier assertions.

Entity resolution systems can be to some degree or another imprecise. Sometimes entity resolution may resolve two entities into one when they are not one called a false positive or determine two entities are not the same when they are the same called a false negative . And other times entity resolution processes may determine two entities are quite alike yet there simply is not enough evidence available features to determine with certainty that the entities are the same. This type of uncertainty might simply be referred to as a maybe. For example just because two records share a fairly rare name and have addresses in the same city this may not cause an entity resolution engine based on its configuration to assert that these records are for the same people nonetheless it would almost certainly qualify as a maybe .

Most entity resolution systems one would expect will assert some entities as same other entities as not same and then some entities will likely fall into the category of maybe. 

The greater the number of data sources and greater the number of records the more the potential maybes and organizations ranging from banks to insurance companies find themselves overwhelmed if they have to use human capital to manually evaluate all the maybes. Furthermore organizations that make critical decisions determination of credit worthiness law enforcement investigations etc. based on entity resolution often feel compelled to not only evaluate the maybes but also the system generated assertions of same or not same. Unfortunately there are typically not enough people in an organization to manually inspect and validate these computer generated decisions either.

Thus there is a need for an improved entity resolution system capable of automatically addressing the maybes and validating assertions of same and not same in a more efficient automated manner.

Provided are a method computer program product and system for receiving data comprising an entity having at least one feature determining how the entity correlates with an existing entity identifying an additional feature to increase confidence of the entity resolution searching a data source for the additional feature to obtain an observation containing the additional feature and performing the entity resolution using the at least one feature and the additional feature.

In the following description reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the invention.

The curiosity system makes calls for data from external sources such as Data Source A and Data Source B and the curiosity system receives new entity features collected to improve entity resolution certainty. An entity is for example a person place or thing. As a more detailed example the entity may be a building which may be a place and a thing a car which may be a thing and when not moving may identify a place an object e.g. a book a protein etc. The data sources may be for example sensors or collection systems that produce records about entities.

In the data store there are records coming from transactions e.g. records being produced by sensors or collection systems . These records may have various features e.g. name and address for a person . A record representing a collection of records sometimes one sometimes more may be conjoined from time to time as entities are resolved. These conjoined resolved records are entity resolution assertions . The way multiple records are conjoined may involve these records sharing a surrogate key common unique entity identifier e.g. incrementing serial number that is assigned by the entity resolution system . Thus each entity resolution assertion is a record or a set of conjoined records and each such assertion is deemed a discrete entity.

The following Table A is an example of a conjoined record that includes two records with record identifiers 1 and 2 for a resolved entity with an assigned surrogate key of 1 

In Table A the ellipses represent that zero or more columns may be included to represent additional data names locations dates times quantities amounts etc . The above Table A represents a simplified example of how the assertion is recorded in the data store . Records are conjoined into resolved entities. Records are assigned entity identifiers to indicate which records are members or conjoined into common entities .

In certain embodiments despite previously existing records and related historical assertions the entity resolution system uses newly learned features to reevaluate and reverse earlier entity resolution assertions i.e. to split a conjoined record which is simply done by changing a record s assigned entity identifier.

Conjoined records may also be referred to as entity resolved records . In certain embodiments the conjoined records are treated as a union instead of being physically merged into one record . In certain alternative embodiments the conjoined records are physically merged into one record however this may complicate the process of reversing earlier assertions . In certain embodiments the term conjoined describes keeping records intact and loosely attached such that the entity resolution system can later separate the records should new records warrant such a correction to a previous entity resolution assertion .

The data store resides on a computing device but the data store may or may not reside on computing device . The data store may be directly coupled via direct attached disk Storage Attached Network SAN a network switch Universal Serial Bus USB firewire Inifiniband technology or indirectly via Ethernet network the Internet etc. In some embodiments the data store may be distributed across two or more storage devices such as a distributed relational database cloud data storage system etc.

In some embodiments the data store may be distributed across two or more computing devices such as a distributed relational database cloud data storage system etc.

The entity resolution system attempts to make entity resolution assertions . In certain embodiments each of the entity resolution assertions may have an associated confidence e.g. highly probably likely certainly not or may be a score like 92 .

In certain embodiments confidence is determined based on how features of a newly received record agree or disagree to the features of a known resolved entity . For example if a received record and a known entity have the same name address and phone then the likelihood these are the same entities may be high. In another embodiment deterministic rule based evaluation and probabilistic statistical frequencies may be used in any combination to determine whether an entity resolution assertion should or should not take place.

The entity resolution system determines if there could be a consequence if the entity resolution is wrong. Herein this is referred to as something worth being curious about. How consequence is determined may be implemented in either a naive manner or a sophisticated manner. In a na ve manner any entity resolution decision to match or not match with an entity flagged as critical e.g. Billy the Kid or Chairman of the Board may automatically be deemed consequential. In a more sophisticated implementation a consequential decision may be determined by computed factors such as if these two people are the same then the total transactions would exceed 10 000 and would be subject to mandatory reporting.

If the entity resolution is something worth being curious about consequence threshold met the curiosity engine is called the curiosity system determines what additional features may be needed to increase entity resolution certainty one way or the other confirming or denying . In various embodiments the consequence threshold may have different values. For example for watchlist monitoring the consequence threshold may be 100 in which case there is always curiosity to determine additional features. As another example for advertising the consequence threshold may be lower. The curiosity system defines what kinds of features are needed and the curiosity system actively searches for them out in the world without the necessity of a human explicitly defining where and how to look i.e. search .

Thus the curiosity system is an unguided curiosity service that searches for and fetches content. Then the curiosity system submits this content to the entity resolution system driving up entity resolution accuracy rates reducing human capital costs to deal with uncertainty freeing up human capital to work on the toughest ambiguity issues.

The curiosity system may learn what kinds of resources internal systems or external systems e.g. the Internet are useful and in which circumstances. The curiosity system may remember how to use these resources and discovers emerging resources over time. The curiosity system may optimize when to search where by taking into account such factors as a how reliable the source seems to be e.g. data quality recency of information etc. b the responsiveness of the interaction 200 millisecond latency versus 2 minutes c the cost per record free versus 5 and d the consequences and or ramifications of the entity resolution assertion e.g. is it worth spending 100.00 to ensure this decision is correct .

The curiosity system has an ability to search various on line resources for this data e.g. search the Internet at large for the useful data . The curiosity system may learn what kind of data is where and may optimize for efficiency and cost when needing similar features in similar circumstances scenarios in the future. For example it may be learned that a popular social media website is a great source to learn middle names.

In certain embodiments the entity resolution system determines a confidence score for an entity resolution assertion . The confidence score indicates whether the entity resolution is a yes maybe or no . A yes may be described as certainly true and a no may be described as certainly not true . A maybe may also be described as an uncertain answer. If the entity resolution system produces an uncertain answer the entity resolution system invokes the curiosity system . Moreover if the entity resolution system produces a certainly true there may still be cases in which added caution is vital e.g. someone is going to be fired or promoted over this entity resolution assertion . In such selected cases the curiosity system may be triggered to independently test this certainty by looking for contradictory features e.g. looking for features to make sure there is not a junior senior oversight . In addition if the entity resolution system produces a certainly not true there may be cases in which added caution is vital e.g. someone is going to be fired or promoted over this entity resolution assertion . In such selected cases the curiosity system may be triggered to independently test this certainty. In short if the consequence of a decision is important the entity resolution system invokes the curiosity system .

With reference to the example shown in table a job applicant may be denied employment if this job applicant was treated as a felon when the person was not a felon. Or if the records were treated as not a match when they were for the same person then a felon would be inadvertently hired e.g. against company policy .

For the sake of the example of table assume there is a hiring consequence if the entity resolution assertion was confirmed hence this is a condition in which it is worth invoking the curiosity system .

Answers to these simple questions may clear up the ambiguity. However the curiosity system also attempts to identify what else might be necessary to clear this up and what other feature expansion on one or both sides of this equation would bring more certainty to a decision. For this example the curiosity system may determine that the following features may increase scoring confidence 

This process involves knowing what kinds of entities are being compared and knowing what features are known to describe such entities. In the case of people the list of knowable features might include names addresses dates of birth places of birth federal identifiers e.g. SSN state identifiers e.g. D L place of birth height weight mother father etc. Thus in block the curiosity system based on kinds of entities being compared identifies features known to describe such entities

In block the curiosity system outputs a list of additional features worth looking for while remembering what kind of entity needs which features e.g. Felon needs an SSN .

The curiosity system prioritizes what to search for. For example learning the SSN of the felon is likely to provide more certainty than learning the middle initial of the job applicant. This means SSN is a higher priority. With reference to the example of table the curiosity system may rank features as follows 

These are values needed only for either the job application or the felon. These values may be helpful but would require more resources and information would be needed from each side.

The curiosity system prioritizes the features based on degree of difficulty and cost to acquire the data. For example the curiosity system knows or over time comes to learn that Social Security Numbers SSNs are not freely available on the Internet and are not likely to be found via a search engine on the Internet. On the other hand the curiosity system knows that address histories are readily available especially if they are historical addresses older data often being cheaper than current data .

Embodiments use various optimization techniques and there are many techniques for evaluating price and availability for best route to acquire data.

In certain embodiments the curiosity system uses a series of tables of accumulated knowledge of what to search for and where. illustrates a table of data sources in which to search for particular features in accordance with certain embodiments. In certain embodiments the data sources include Internet search sites. illustrates a table used to determine what information is needed to perform searches of the data sources in accordance with certain embodiments. illustrates a table with cost and access technique information about each data source in accordance with certain embodiments. An access technique may also be described as an Interface type. The curiosity system uses the information in table to perform prioritization.

In block the curiosity system outputs a prioritized i.e. ranked list of data sources. For example the curiosity system may output the following 

Check Federal Data Source using name and Date of Birth DOB name and address address and name and state is this four searches .

In block the curiosity system searches the external source in a prescribed manner. In block the curiosity system formats the entity features into one or more records having a common record format. For example the curiosity system places the one or more records into a standard record format upon the same structure and flow as data coming via enterprise records. In another embodiment the newly learned features are not passed through the same structure and flow rather they are passed natively and directly into the entity resolution engine. In block the curiosity system sends the one or more records to the entity resolution system .

In block the curiosity system searches the external source. In block the curiosity system performs entity extraction on unstructured data to get entity features. From block processing continues to block .

Thus the curiosity system may draw on entity extraction processing to extract and classify features e.g. from unstructured text video etc. .

The entity resolution system attributes the one or more records to the source e.g. Data Source and uses the data to re evaluate the previous ambiguous data. Due to the rules of sequence neutrality the late arriving data is used to change the confidence of the earlier records .

Thus an interfaced system has a prescribed set of techniques e.g. method of a class to return results. Conversely using a search engine e.g. the Google search engine might stumble upon an unfamiliar unstructured data source that would require some more precarious entity extraction to find the features and submit them to the entity resolution system .

In certain embodiments the first time the curiosity system is run there are no previously known pre registered in tables 6 7 and 8 data sources to find data. In alternative embodiments the first time the curiosity system is run there are some known data sources to find data. Regardless the curiosity system discovers additional data sources e.g. for obtaining addresses for a person to answer the question Did Mark the job applicant ever live on Main Street in Las Vegas .

In certain embodiments the curiosity system discovers i.e. learns new data sources. For example taking a sample of job applicant records e.g. 10 records already on file that already contain addresses the curiosity system issues queries for example to the Google search engine with the known addresses and receives a first result list illustrates a table of known records in accordance with certain embodiments. For this example the curiosity system determines from reviewing the first result list that 8 out of 10 queries were answered from a single new data source e.g. a web site with the new data source containing the known addresses. In this manner the curiosity system discovers that the new data source is a good data source for address information.

In certain embodiments the curiosity system inverts the process. For example the curiosity system issues queries with the name and year of birth for the 8 out of 10 records on the first result list and receives a second result list. For this example 7 out of the 8 queries came back with data sources e.g. web sites found in the first result list. That is the curiosity system may filter the any number of result lists e.g. the first and second result lists to identify the data sources found on both lists. Then the curiosity system may find that the data sources found on both lists are candidate data sources for future discovery of address data when only name and year of birth are known.

Thus using well understood machine learning the curiosity system without human intervention determines the structure and where to search inside of each one of these data sources e.g. Internet sites because the inputs search are known e.g. used to form the Google query and the features needed for extraction values already known a priori and hence confirming this data source contains co referenced information i.e. the name address and DOB are known then searching name and DOB the curiosity system checks if the results contain the expected address are also known and can be found. In this way the structure of each unique data source can be gleaned and remembered and used thereafter to address real curiosity requests.

In certain embodiments the curiosity system may be trying to see if the two people are the same hence the search would include both names Tim Kovak and Timothy Kovack . The Google search engine might return a page about one person of same name or may return multiple pages whereby Tim is a stock broker and Timothy is a ship captain.

Thus rather than load all the data of multiple data sources available which is cost prohibitive because for example some data requires payment for record by record embodiments automatically decide which external data sources should be queried for particular features. Also although some data sources are free a free data source may be too large to load in a reasonable period of time. Thus automatically determining which external data sources to access is cost effective.

Embodiments provide a technique for determining what data is missing that would matter. Embodiments also provide a technique for choosing an external data source in company or outside company from which to obtain data.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device solid state memory magnetic tape or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The code implementing the described operations may further be implemented in hardware logic or circuitry e.g. an integrated circuit chip Programmable Gate Array PGA Application Specific Integrated Circuit ASIC etc.

Input Output I O devices including but not limited to keyboards displays pointing devices etc. may be coupled to the system either directly or through intervening I O controllers .

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters .

The computer architecture may be coupled to storage e.g. a non volatile storage area such as magnetic disk drives optical disk drives a tape drive etc. . The storage may comprise an internal storage device or an attached or network accessible storage. Computer programs in storage may be loaded into the memory elements and executed by a processor in a manner known in the art.

The computer architecture may include fewer components than illustrated additional components not illustrated herein or some combination of the components illustrated and additional components. The computer architecture may comprise any computing device known in the art such as a mainframe server personal computer workstation laptop handheld computer telephony device network appliance virtualization device storage controller etc.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of embodiments of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

The foregoing description of embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description but rather by the claims appended hereto. The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Since many embodiments may be made without departing from the spirit and scope of the embodiments the embodiments reside in the claims hereinafter appended or any subsequently filed claims and their equivalents.

