---

title: Performing services in a network data processing system
abstract: A method, computer, and computer program product for performing a service. A processor unit identifies information about a network data processing system for performing the service. The processor unit identifies a plurality of steps used to perform the service. The processor unit identifies a set of software tools needed in each step in the plurality of steps to perform the service on the network data processing system. The set of software tools is identified based on the information identified. The information comprises at least one of a type of optimization performance system, a type of cluster, and a configuration of the cluster.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08438271&OS=08438271&RS=08438271
owner: International Business Machines Corporation
number: 08438271
owner_city: Armonk
owner_country: US
publication_date: 20100714
---
The present invention relates generally to performance of management or other services on a network data processing system. Still more particularly the present invention relates to an automated method and apparatus for selecting tools to perform management or other services on a network data processing system.

Network data processing systems are used by many organizations to perform different operations. For example a company may sell goods using a website run on a network data processing system. The website may include software to process orders receive payments provide information and or perform other suitable functions.

As another example other organizations may use network data processing systems to perform operations such as creating program code for software products performing human resource operations analyzing data and or performing other similar operations.

With network data processing systems maintenance updates and changes to hardware and software in the network data processing system may occur periodically. For example an organization may add a data center replace an old data center add transaction processing to a website replace a storage system and other changes.

These types of changes to a network data processing system are often performed by a service provider. The service provider identifies information about the current network data processing system. The service provider then adds hardware software or a combination of the two to implement the changes to the network data processing system.

The changes may require a number of different steps to be performed by personnel for the service company. These personnel are often experienced information technology employees. After the changes have been made the service provider also may include training for different people in the organization using the network data processing system.

Computer tools are currently available to assist the personnel in performing the management and other services on the data processing system. However human expertise and human analysis are often required to determine the best tools to utilize and often a tool which is not optimum is selected.

The different illustrative embodiments provide a method computer and computer program product for performing a service on a data processing system. A processor unit identifies information about the network data processing system for performing the service. The information comprises at least one of a type of optimization performance system for monitoring an operating system in the network data processing system a type of cluster used in the network data processing system and a configuration of the cluster. The processor unit identifies a plurality of steps used to perform the service. Based in part on the identified information the processor unit identifies a set of software tools needed in each of the steps to perform the service on the network data processing system.

As will be appreciated by one skilled in the art the present invention may be embodied as a system method or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present invention may take the form of a computer program product comprising computer readable program code stored on a tangible computer readable storage medium.

Any combination of one or more computer readable storage devices s may be utilized. The tangible computer readable storage device may be for example an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device. More specific examples a non exhaustive list of the computer readable storage device would include the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a portable compact disc read only memory CDROM an optical storage device or a magnetic storage device.

The computer program can be stored on a fixed or portable computer readable storage device or downloaded from the Internet via a network. In these illustrative examples the terms computer readable storage device and computer readable storage devices do not include propagation media.

Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions.

These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer program instructions may also be stored in a computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

With reference now to the figures and in particular with reference to an illustrative diagram of a data processing environment is provided in which illustrative embodiments may be implemented. It should be appreciated that is only provided as an illustration of one implementation and is not intended to imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.

In the depicted example server computer and server computer connect to network along with storage unit . In addition client computers and connect to network . Client computers and may be for example personal computers or network computers. In the depicted example server computer provides information such as boot files operating system images and applications to client computers and . Client computers and are clients to server computer in this example. Network data processing system may include additional server computers client computers and other devices not shown.

Program code located in network data processing system may be stored on a computer recordable storage medium and downloaded to a data processing system or other device for use. For example program code may be stored on a computer recordable storage medium on server computer and downloaded to client computer over network for use on client computer . One or more illustrative embodiments may be implemented to perform the changes to network data processing system . For example these changes may be to a portion or all of network data processing system .

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

Turning now to an illustration of a data processing system is depicted in accordance with an illustrative embodiment. Data processing system is an example of a data processing system that may be used to implement client computers server computers or a combination of the two in network data processing system in . In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a number of processors a multi processor core or some other type of processor depending on the particular implementation. A number as used herein with reference to an item means one or more items. Further processor unit may be implemented using a number of heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory and persistent storage are examples of storage devices . Storage devices are computer readable storage devices in these examples. A storage device is any piece of hardware that is capable of storing information such as for example without limitation data program code in functional form and or other suitable information either on a temporary basis and or a permanent basis. Storage devices may also be referred to as computer readable storage devices in these examples. Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation.

For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard a mouse and or some other suitable input device. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system applications and or programs may be located in storage devices which are in communication with processor unit through communications fabric . In these illustrative examples the instructions are in a functional form on persistent storage . These instructions may be loaded into memory or run by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory .

These instructions are referred to as program code computer usable program code or computer readable program code that may be read and run by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or computer readable storage media such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system and run by processor unit . Program code and computer readable media form computer program product in these examples. Computer readable storage media may include for example an optical or magnetic disk that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . Computer readable storage media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . In some instances computer readable storage media may not be removable from data processing system . In these illustrative examples computer readable storage media is a non transitory computer readable storage medium.

In some illustrative embodiments program code may be downloaded over a network to persistent storage from another device or data processing system for use within data processing system . For instance program code stored in a computer readable storage medium in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code may be a server computer a client computer or some other device capable of storing and transmitting program code .

A storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of storage devices in a tangible form.

In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

A service provider may have a limited number of personnel that have the experience and knowledge to perform certain changes to a network data processing system. As a result these services offered by the service provider to clients may be limited based on the availability of the personnel. In other words the service provider may not be able to provide services to all the clients needing services within the time frame desired by the clients. Some clients may have to wait until a later point in time for obtaining service from the service provider.

For example with a network storage system personnel with knowledge about network storage systems may be limited in number. As a result the ability of a service provider to install a network storage system may be limited based on the number of personnel that have the knowledge and experience with these types of systems. Further a service provider may be unable to provide this type of service to a client as quickly as desired by a client. The different illustrative embodiments recognize and take into account that it would be desirable for a service provider to be able to increase the ability to provide services to more clients without having more personnel with the currently needed knowledge and experience.

Thus the different illustrative embodiments provide a method and apparatus for providing a service. The process begins by identifying information about a network data processing system performing the service. A plurality of steps used in performing the service is identified. A set of software tools needed in each step in the plurality of steps to perform the service on the network data processing system is identified. The set of software tools is identified based on the information identified about the network data processing system and at least one of a type of optimization performance system a type of cluster and a configuration of the cluster. In identifying the set of software tools other factors also may be taken into account. These factors include for example without limitation a type of operating system a type of storage a type of volume manager and other suitable information.

With the illustrative embodiments services may be performed by personnel without the experience and or knowledge normally needed to perform the service. In these illustrative examples the service may be performed using software tools that perform the steps for the service. The different software tools needed for those steps may be identified for those modules using different illustrative embodiments. As a result the personnel performing the service may not need to know about the different software tools and the steps required for performing the service.

With reference now to an illustration of a service environment is depicted in accordance with an illustrative embodiment. In this depicted example service environment includes network data processing system server computer and client computer .

Network data processing system is a network data processing system in which changes may be made. In particular the different illustrative embodiments may perform a service to make changes in network data processing system . These changes may include changes in hardware software or a combination of the two. For example hardware may be a server computer a client computer a router a storage system and or other suitable types of hardware. Software may be a new program running on the hardware to provide services. These services may include for example software used to operate hardware as a data center a web server and other suitable types of functions.

In these illustrative examples user may operate client computer to perform changes to network data processing system to perform service . In the different illustrative examples user may not need the experience and or knowledge to make these changes with the use of service program process on server computer . User may interact with service program process using browser running on client computer . In particular user may interact with graphical user interface in browser .

In these illustrative examples user may select set of modules from modules on server computer . A set as used herein when referring to items means one or more items. For example set of modules is one or more modules. Set of modules is used by service program process to perform service for network data processing system . Set of modules also may be referred to as a set of runbooks.

In these examples each service may be associated with a set of modules in modules . Each set of modules in modules comprises a set of steps for performing a particular service. In these illustrative examples the set of steps for each set of modules is identified by for example a technical expert. As one illustrative example set of modules contains steps for performing service . The selection of set of modules may be performed in a number of different ways. For example user may select service using graphical user interface which in turn results in set of modules being selected.

After set of modules has been selected service program process identifies set of software tools for each step in steps to perform service for network data processing system . Set of software tools is identified using information about network data processing system .

Information may be about hardware software or a combination of the two within network data processing system . Information provides a description of the environment for network data processing system . Information may include information about for example without limitation the operating system for network data processing system software installed in network data processing system hardware installed in network data processing system firmware an identification of servers that are virtualized and or other types of information.

In these illustrative examples information includes at least one of type of optimization performance system type of cluster configuration of cluster and other types of information about network data processing system .

In these illustrative examples information includes at least one type of optimization performance system type of cluster and configuration of cluster .

Type of optimization performance system is an identification of a software tool or other software program for monitoring an operating system. Type of cluster identifies the type of physical range in the hardware devices in a network. For example type of cluster may provide an indication of how hardware devices are connected to each other. These hardware devices in a cluster may include for example without limitation routers server computers load balancing computers backup devices failover server computers and or other suitable types of hardware. In these examples a cluster is a group of computers that may work together. This group of computers may be viewed as a single computer by clients making requests to the computers in this group.

Configuration of cluster identifies how the cluster is configured. For example configuration of cluster may include values for parameters for various hardware components in the cluster. Additional examples of information include type of operating system type of storage type of volume manager and or other suitable information.

Information may be identified prior to user selecting set of modules . In some illustrative examples information may be identified in response to user selecting set of modules . After user selects set of modules user may generate user input to initiate steps by set of modules . In other words the user input may cause set of modules to perform steps . In these examples service program process runs set of modules .

In these illustrative examples set of modules is associated with program code for performing steps . In particular set of modules comprises program code . Further each step in steps for set of modules is associated with program code to perform the step. As one illustrative example user selects a step in steps using graphical user interface . In response to the selection of the step program code associated with the step is run to perform the step.

Additionally one or more of steps in set of modules may require set of software tools as identified by service program process using at least one of type of optimization performance system type of cluster and configuration of cluster in information and other types of information about network data processing system . Additionally other types of information in information may be used in identifying set of software tools . When program code is run for steps requiring set of software tools program code uses service program process to identify set of software tools . Program code then uses set of software tools to perform the steps.

Program code may be run on network data processing system or on a remote computer. For example program code may be run on a remote computer from data processing system . Program code may cause steps to be performed in network data processing system . The performance of steps in this example may be performed through agents or other processes that receive commands or requests from program code .

As depicted set of modules communicates with set of agents in network data processing system . Set of agents may run on a computer such as server computer in network data processing system to perform steps . In performing steps set of agents may run set of software tools for one or more steps in steps . An agent in set of agents is an agent program in these illustrative examples.

Additionally set of agents also may monitor the performance of steps to generate performance information . Performance information may be used to identify various metrics about the performance of steps . For example cost from performing the service may be identified using performance information . With this information reductions in cost may be identified and implemented in the performance of the service on other network data processing systems.

In this manner the different illustrative embodiments may be used to perform services in network data processing system . With the different illustrative embodiment these services may be performed using personnel with less experience than normally needed without using the different illustrative embodiments. Through the use of service program process to select set of modules from modules and the identification of set of software tools service may be performed with less user interaction to perform steps .

Further the use of service program process allows for an increased scalability in offering service . In other words service may be offered to more clients without the experience and or knowledge of the personnel being a limiting factor. Additionally with the use of performance information cost may be reduced for future performance of service for other network data processing systems. Also the performance of service may occur more quickly through the analysis of performance information . For example steps may be changed or altered to increase the speed and or efficiency at which service may be performed.

The illustration of service environment in is not meant to imply physical architectural limitations in a manner in which different illustrative embodiments may be implemented. Other components in addition and or in place of the ones illustrated may be used. Some components may be unnecessary in some illustrative embodiments. Also the blocks are presented to illustrate some functional components. One or more of these blocks may be combined and or divided into different blocks when implemented in different illustrative embodiments.

For example in some illustrative examples browser may run on server computer rather than on client computer . In yet other illustrative examples a program other than browser may be used to interact with service program process . In some illustrative examples service program process may provide a graphical user interface without using browser . In yet other illustrative examples different components may be located on other computers other than in the manner depicted in . For example set of software tools may be located on computers other than server computer . In some illustrative examples set of software tools may be located in network data processing system .

With reference now to an illustration of a service process is depicted in accordance with an illustrative embodiment. In this illustrative example service program process is an example of one implementation for service program process in . Service program process may be run on computer system . Computer system may be an example of one implementation for client computer and server computer in . Further computer system may be implemented using for example without limitation data processing system in .

A user may use service program process to perform a service for a network data processing system. The service may include changes to the hardware and or software in the network data processing system. As depicted in this example service program process includes discovery process and analysis program process . Discovery process identifies information about the components in the network data processing system. For example information includes hardware information and or software information for the hardware and or software components in the network data processing system. Information may be stored in database .

In this illustrative example information in database may be organized into sets of information . For example each set of information may be for a different network data processing system a different client a different client location a different country a different type of client or some other type of category.

Service program process creates project . Project is used to perform the service for the network data processing system. A project contains the information used to perform the service for the network data processing system. For example project may include without limitation roles contacts a basic schedule for performing the service and or other suitable information.

Analysis program process uses information to identify set of modules for project . Set of modules takes the form of set of runbooks in this illustrative example. A runbook is a set of extensible markup language XML definitions of steps that are performed for a service. In other words a runbook is a compilation of procedures for performing at least a portion of the service.

In this illustrative example set of runbooks includes runbook runbook and runbook . Each of these runbooks includes steps needed to perform the service for the network data processing system. For example runbook includes steps runbook includes steps and runbook includes steps .

The user may select the hardware and or software needed to perform steps and . In some illustrative examples service program process may select the hardware and or software needed to perform steps and using information identified by discovery process . The hardware and or software selected to be operated to perform steps and may form set of products for each runbook in set of runbooks . Set of products is the set of products to be operated when performing the steps for a runbook. A product is a hardware component or a software component in the network data processing system.

For example the service to be performed for the network data processing system may be migration of a storage system from the network data processing system. In this example set of products may include without limitation a server computer a set of disk arrays backup software and or other types of products.

Additionally analysis program process identifies set of software tools that is used to perform steps and . Set of software tools may be identified using information in database for example. This information may include for example without limitation a type of optimization performance a type of cluster a configuration for the cluster and or other types of information.

In this illustrative example software tool is identified for performing steps and steps . Software tool is identified for performing steps . Analysis program process also identifies the capabilities of set of software tools using capabilities information stored in database . In some illustrative examples capabilities information may be accessed by analysis program process from another database a set of files or some other suitable type of data structure or data storage.

In this illustrative example analysis program process performs validation for set of products . Validation determines whether set of products is supported by set of runbooks and by set of software tools . Further validation also uses capabilities information to confirm that set of software tools has the capabilities needed to perform steps and . Once set of products has been validated using validation the user may follow the steps for set of runbooks to perform the service for the network data processing system.

With reference now to an illustration of a service environment is depicted in accordance with an illustrative embodiment. In this illustrative example service environment is an example of one implementation for service environment in . As depicted in this example service environment includes client computer server computer and network data processing system .

Client computer has web browser running on client computer . Web browser presents graphical user interface . A user may access service process running on server computer using graphical user interface presented in web browser .

Information is exchanged between graphical user interface and service process using communications . Communications use hypertext transfer protocol HTTP in this illustrative example. In particular information is exchanged using application programming interface for web browser and web server protocol layer for service process running on server computer . For example information being processed by core processes in service process may be sent from service process to web browser using web server protocol layer . Application programming interface may be used to present this information in graphical user interface as core window .

In response to a request to perform a service for network data processing system service process may use core processes to identify information about the hardware and or software operating in network data processing system . This information may be accessed from for example without limitation database using data access layer . In particular the information in database may be accessed using wireless communications . Communications may use structured query language SQL in this illustrative example.

Additionally service process identifies module and module needed to perform the service for network data processing system . Each of these modules includes steps for performing at least a portion of the service for network data processing system . Module may be presented in graphical user interface as module window . Module may be presented in graphical user interface as module window .

In this illustrative example the user at client computer may select the hardware and or software products in network data processing system to be operated to perform the service for network data processing system . Service process selects a set of software tools to perform the steps in the modules. Agent and agent in network data processing system run the set of software tools selected to perform the steps in the modules to perform the service for network data processing system . The agents exchange information with service process using communications layer for agent communications layers for agent and communications layer for service process . This exchange of information may be performed using wireless communications and wireless communications . These wireless communications may use for example without limitation the Internet Protocol Suite TCP IP Protocol .

Agent and agent may monitor the performance of the steps in the modules by the set of software tools and generate performance information. This performance information may be sent to service process . Service process may store this performance information in database .

With reference now to an illustration of a runbook for performing a service is depicted in accordance with an illustrative embodiment. Runbook is an example of one implementation for a module in modules in . Runbook includes set of steps to perform service in . In this illustrative example service is for a replacement of a disk array in a network data processing system.

As depicted set of steps is comprised of steps and . Set of steps may be presented to a user using for example graphical user interface in . Each step in set of steps may have one or more operations or substeps that are performed to complete the step. These operations are performed using program code in these illustrative examples. Further these operations may be performed by for example user and or service program process in .

Set of steps is associated with program code . In particular the operations that make up steps in set of steps are associated with scripts in program code in this illustrative example. These associations may be made using operations table . Operations table associates a particular operation to be performed with a script in program code for performing the operation.

In one illustrative example step includes operation and operation . When a user selects step in runbook the service program process runs script to perform operation and runs script to perform operation . The service program process identifies script for operation and script for operation using operations table . In this illustrative example script may include program code that displays a link to documentation required for a user to perform operation on a graphical user interface.

In this depicted example script includes program code that uses the service program process to identify a set of software tools required to perform operation in step . The set of software tools required is identified using capabilities information for the software tools and information about the network data processing system discovered using for example discovery process in . Script also includes program code to use the set of software tools identified to perform operation . In this manner set of steps in runbook is performed with program code identifying the set of software tools required for set of steps .

With reference now to an illustration of a table for software tools for a runbook is depicted in accordance with an illustrative embodiment. In this illustrative example table is an example of information that may be found in a database such as database in . In particular table is an example of capabilities information in database in . Table includes capabilities information for software tools for performing the steps in a runbook.

The software tools available for performing the steps in this runbook are presented in table . Table presents information for software tools . This information includes name type environment requirements and capabilities . Software tools include for example redundant array of independent disks RAID configuration utility disk array manager storage manager A storage manager B network manager and application server network deployment administration tool . In this illustrative example software tools may be needed for performing at least a portion of the steps in the runbook.

With reference now to an illustration of a flowchart of a process for performing a service is depicted in accordance with an illustrative embodiment. The process illustrated in may be implemented to perform for example service for network data processing system in service environment in . This process may be implemented in program code for service program process in . This program code may be run by a processor unit in a computer system.

The processor unit begins with service program process identifying information about network data processing system for performing service step . Information may include information about hardware software or a combination of the two in network data processing system . Service program process identifies information by for example querying network data processing system for information . This querying may be performed by a discovery program which also may be referred to as a discovery engine.

Thereafter service program process identifies steps used to perform service step . Service program process identifies steps by matching steps to information identified. For example different steps may be present for performing one operation using different hardware and or software. Service program process may use information to identify steps that may be used to perform service with the hardware and or software present in network data processing system . Steps may be steps within set of modules . Set of modules is identified from modules . Each module in set of modules includes a set of steps for performing at least a portion of service .

Service program process identifies set of software tools needed for each step in steps to perform service for network data processing system step with the process terminating thereafter. Service program process identifies set of software tools based on the information identified for network data processing system . This information comprises at least one of a type of optimization performance system a type of cluster a configuration of the cluster and other types of information about network data processing system . For example service program process identifies set of software tools that have a capability to perform steps identified using information . Additionally service program process may use a table such as table in to identify set of software tools based on information and steps .

With reference now to an illustration of a flowchart of a process for performing the steps in a runbook is depicted in accordance with an illustrative embodiment. The process illustrated in may be implemented using service program process in service environment in . In particular this process is implemented using service program process to perform the steps in runbook in .

Service program process receives user input selecting service to be performed through graphical user interface step . Service program process then identifies runbook for performing service step . In some illustrative examples in step this identification may be made by receiving user input selecting runbook . Service program process presents steps in set of steps in runbook to user through graphical user interface step . Service program process then receives a selection of a step in set of steps in user input step . The user input may be generated by user through graphical user interface .

Thereafter service program process identifies a set of operations to be performed for the selected step step . Service program process then identifies program code associated with each operation in the set of operations identified using an operations table step . The operations table may be for example operations table in . Further in step a script is identified for each operation in the set of operations in this illustrative example.

Service program process runs the scripts identified step . In running the scripts service program process identifies set of software tools required to perform the operation associated with each script step . In step this identification is made using information discovered about the network data processing system for which service is being performed and information for the software tools. Further the identification in step may be that an operation requires no software tools.

Service program process then performs the set of operations identified for the step selected step . In step the set of operations may be performed using the set of software tools identified in step . Thereafter service program process determines whether service has been completed step . If service has been completed the process terminates. Otherwise service program process waits for user input selecting another step to be performed step . The process then returns to step as described above.

With reference now to an illustration of a flowchart of a process for performing a service is depicted in accordance with an illustrative embodiment. The process illustrated in may be implemented in program code for service program process running on server computer in . This process may be implemented to perform service for network data processing system in .

The process begins by service program process receiving a request to perform service for network data processing system step . The request may be received from client computer . In particular a user at client computer may enter user input through graphical user interface to form the request received in step .

Service program process then identifies information about network data processing system step . Service program process identifies information by querying network data processing system for information .

This information includes information about hardware software or a combination of the two in network data processing system . Service program process determines whether all of the hardware and or software needed to perform service are available in network data processing system using information step . In these examples service may have a set of requirements or a set of prerequisites for performing service . For example service may require that certain hardware and or software be present in network data processing system to perform service for network data processing system . In operation the determination is made by comparing information identified for network data processing system to the set of requirements for service . If all the hardware and or software needed to perform service is not available service program process generates a notification that additional hardware and or software need to be added to network data processing system step .

Thereafter service program process identifies set of modules for performing service step . Each module in set of modules includes a set of steps for performing at least a portion of service . Service program process then identifies set of software tools for performing service step . Step may be performed by identifying set of software tools that have a capability to perform steps identified using information . In some illustrative examples the identification of set of software tools may identify that no software tools are needed to perform the steps in set of modules .

Next service program process performs the steps in set of modules using set of software tools to perform service step . Service program process identifies performance information generated while performing service step with the process terminating thereafter. In step the performance information may be identified from information received by set of agents .

With reference again to operation if all of the hardware and or software needed to perform service is available the process proceeds to step as described above.

With reference now to an illustration of a flowchart of a process for performing a service is depicted in accordance with an illustrative embodiment. The process illustrated in may be implemented in program code for set of agents in . This process may be implemented to perform service for network data processing system in .

The process begins by set of agents i.e. agent programs receiving a set of commands to use set of software tools to perform steps in set of modules to perform service step . In this step the set of modules for performing service is identified in step in by service program process . Further the set of software tools is identified in step in by service program process .

Thereafter set of agents uses set of software tools to perform the steps in set of modules to perform service for network data processing system step . Set of agents generates performance information for set of software tools step . Step is performed by set of agents tracking each step performed in set of modules and identifying the amount of time taken to perform each step. In this illustrative example the performance information may be generated while set of software tools are being used to perform the steps in set of modules .

Then set of agents send the performance information to service program process step with the process terminating thereafter.

With reference now to an illustration of a flowchart of a process for performing steps in a runbook is depicted in accordance with an illustrative embodiment. The process illustrated in may be implemented for a runbook such as a runbook in set of modules in and or in set of runbooks in . A runbook is a set of extensible markup language XML definitions of steps that are used to perform a service. In this illustrative example the runbook includes steps that are to be performed to relocate clusters of application servers from a current data center to a new data center. This runbook may be an example of a runbook in for example set of modules in and or in set of runbooks in .

The process begins by service program process presenting a list of the application servers in the clusters to be relocated and the changes that will be made to the application servers by performing the relocation to the client step . In operation service program process generates the list of the application servers in the clusters to be relocated based on information identified for network data processing system . Service program process then presents a list of the volumes of data that will change by performing the relocation step . Thereafter the process obtains client approval to implement each of the changes step .

In this illustrative example service program process selects the volumes of data to be moved to the new data center for storage based on the approval received step . Service program process selects the application servers in the clusters to be moved to the new data center based on the approval received step .

Thereafter service program process prepares the new storage in the new data center step . This step may involve for example creating a new disk array. In particular this step may involve creating a new redundant array of independent disks. Step requires a disk array tool to provision and prepare the new disk array. In this illustrative example the environment for the new disk array has been identified as comprising a PowerPc running the Linux operating system.

Using table in service program process selects a compatible software tool from software tools . In this illustrative example redundant array of independent disks RAID configuration utility in is compatible and is selected by service program process . This software tool is used to perform step in the runbook before performing step in the runbook in this illustrative example.

Additionally performance information for the software tool may be generated by service program process . This performance information may be generated to confirm that step was performed by service program process correctly.

Service program process then gathers network requirements step . Performing this step requires a network monitoring tool to run remote network tests such as bandwidth tests and network quality tests to establish the capacity and quality of the current and new data center networks. These types of tests are also used to determine network latency. Based on information about the operating systems and hardware of the computers location in the current and new data centers service program process uses table to identify network manager in as a compatible network monitoring tool.

Service program process gathers the application requirements step . Application requirements are the application capacity and performance requirements for the clusters. These requirements include for example without limitation network disk space memory computer processing unit CPU and availability. Performing this step requires a cluster management tool which provides information about the type and or amount of resources being used by applications. Based on information about the operating systems and hardware of the computers location in the current and new data centers service program process uses table to identify application server network deployment administration tool in as a compatible cluster management tool.

Thereafter service program process selects a data mover tool for moving the selected volumes of data from the existing disk array to the new disk array created step . Using information about the disk arrays and about the operating systems and hardware in the current and new data centers and using table storage manager A in is selected as a compatible data mover tool.

Service program process configures the selected data mover tool step . Storage manager A in is configured in this step. Service program process analyzes the environment in the new data center to ensure that the new data center meets the current data center requirements step . In other words the environments of the current and new data centers are compared to ensure that no changes would prevent the relocation from being completed.

Next service program process performs the relocation of the selected application servers and volumes of data to the new data center step . This step is performed using storage manager A in . Service program process performs the necessary operations to discontinue use of the current storage and current servers in the current data server and use the new storage and new servers in the new data center step .

Thereafter service program process generates performance information for the service and an audit report step with the process terminating thereafter. The audit report tracks the operations that were completed in performing the relocation.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be performed substantially concurrently or the blocks may sometimes be performed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer readable medium providing program code for use by or in connection with a computer or any instruction system.

The computer readable storage medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device . Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual running of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during running of the code.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

The description of the present invention has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

