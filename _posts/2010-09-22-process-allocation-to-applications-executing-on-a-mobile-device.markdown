---

title: Process allocation to applications executing on a mobile device
abstract: An approach is provided for managing processes for enabling execution of applications within a user device. One or more characteristics of an application are determined by a process monitor module. A process management module then determines a process of the device for execution the application based, at least in part, on the one or more characteristics. A process allocation policy is executed for enabling process allocation decisions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384054&OS=09384054&RS=09384054
owner: Nokia Technologies Oy
number: 09384054
owner_city: Espoo
owner_country: FI
publication_date: 20100922
---
Manufacturers of wireless communication devices such as mobile phones Smartphone s and other portable devices are continually challenged to deliver value and convenience to consumers by for example providing compelling network services that are accessible from the device. Increasingly these network services allow users to readily access vast libraries of online and offline information resources including web pages online databases local databases services applications media content social networks etc. Typically device users may need to access multiple information resources at a time by way of a browser or web portal application installed on the device. For example the user may need to view content provided by multiple different websites requiring they launch multiple instances of a browser for accessing each site. In other instances they may launch multiple tabs within a single browser for accessing the various information sources. Once launched the user can toggle between the active browsers or tabs to review the desired information. Unfortunately memory and processing resources of the device are drained when multiple browsers or tabs are open especially when executing data and process intensive tasks such as web applications. An alternative approach is to execute several web applications in a single process e.g. parallel or concurrent processing . However when one of the many open applications crash or fail during execution of the process the other applications in execution by way of that single process are also terminated.

Therefore there is a need for an approach to managing processes for enabling execution of applications within a user device.

According to one embodiment a method comprises determining one or more characteristics of an application. The method also comprises determining a process of the device for executing the application based at least in part on the one or more characteristics.

According to another embodiment an apparatus comprises at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to determine one or more characteristics of an application. The apparatus is also caused to determine a process of the device for executing the application based at least in part on the one or more characteristics.

According to another embodiment a computer readable storage medium carries one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to determine one or more characteristics of an application. The apparatus is also caused to determine a process of the device for executing the application based at least in part on the one or more characteristics.

According to another embodiment an apparatus comprises means for determining one or more characteristics of an application. The apparatus also comprises means for determining a process of the device for executing the application based at least in part on the one or more characteristics.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

Examples of a method apparatus and computer program for managing processes for enabling execution of applications within a user device are disclosed. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention. Although various embodiments are described with respect to user devices such as mobile phones Smartphones computing devices etc. it is contemplated the approach described herein may be used with other communication devices.

The browser or web portal application facilitates the viewing execution manipulation or rendering of content by managing the various operating system OS processes that are created when the user performs various browsing actions. These actions may include by way of example typing a URL to access a specific content source location clicking an embedded link for invoking an e mail editor to send an e mail pressing the back or forward button to recall or advance content manipulating the buttons of a web or script based streaming media player etc. Each of these actions are executed as one or more processes which in certain embodiments pertains to an instance of execution of one or more instructions of a computing device or application thereof. Depending on the operating system OS a process may be made up of multiple threads of execution that execute instructions to be carried out concurrently. With respect to a browser web portal application or the like concurrently open websites are typically presented as tabs allowing the user to easily toggle between varying content within the same browser window. The browser application may decide to run each tab in its own OS process run all tabs in a single OS process etc.

Creating a new process for each website or content source increases robustness because the OS takes care of isolating respective processes. By isolating processes when one process crashes it does not affect the other processes in operation concurrently. However as a consequence each new process consumes resources especially memory of the UE . This is especially problematic for web applications because a large part of the browser application code needs to be duplicated for each process allocated by the OS. The overhead and resource taxation incurred by a typical UE for executing web technologies on a process per application basis can be in the range of 3 7 MB. Some browser applications may even consume up to 20 MB of RAM just by being launched before any URL has been specified and loaded. Hence this drain on resources is especially problematic for desktop computers and critical for mobile devices and other portable wireless communication devices having smaller resource capacity. An alternative approach is to run several applications for enabling content in a single process which leads to less overhead per application. However an application crash may result in process termination in turn effectively terminating all the other applications in the same process as well.

To address this problem system of comprises a user equipment UE having connectivity to a process management platform via a communication network . By way of example the communication network of system includes one or more networks such as a data network not shown a wireless network not shown a telephony network not shown or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet short range wireless network or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network and the like or any combination thereof. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. worldwide interoperability for microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi wireless LAN WLAN Bluetooth Internet Protocol IP data casting satellite mobile ad hoc network MANET and the like or any combination thereof.

The UE is any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia computer multimedia tablet Internet node communicator desktop computer laptop computer notebook computer netbook computer tablet computer personal communication system PCS device personal navigation device personal digital assistants PDAs audio video player digital camera camcorder positioning device television receiver radio broadcast receiver electronic book device game device or any combination thereof including the accessories and peripherals of these devices or any combination thereof. It is also contemplated that the UE can support any type of interface to the user such as wearable circuitry etc. .

In one embodiment UE includes one or more components for managing and allocating processes for executing applications. By way of example the components operate to enable management of processes of the UE based on application characteristic data that specifies the logical rules and executions e.g. policies to be engaged by the UE relative to the one or determined characteristics of the applications. Still further various components of the UE coordinate the sharing of resource usage data with a process management platform and receives feedback from the platform that enables it to apply the policies based on analysis of resource information. The resource information specifies data pertaining to the usage of various resources by the one or more UEs . For the one or more components of the UE it is contemplated their functions may be combined in one or more components or performed by other components of equivalent functionality. In one embodiment UE includes a user interface module a process management module a process monitor module and a policy update module

In certain embodiments the user interface module enables a browser application web portal application or the like to be rendered to a display of a given UE for enabling a user to access a content platform . The content platform may be any source available by way of a network or communication channel for generating maintaining or publishing content . The user interface module by way of example enables presentment and navigation of content made available by the content platform . Navigation and presentment of content is facilitated by way of a uniform resource locator URL entry field or through the accessing of various embedded links. In addition the user interface module is configured to enable execution of content as various web applications e.g. the starting and stopping of web applications scripts executable objects and the like for supporting various types of web based or network based interactions. To enable concurrent access to content the browser or web portal application supported by the user interface module may provide for the multiple frames windows or tabs to be presented to the UE display accordingly relative to particular device configurations modes of operation screen size availability etc. As will be discussed such characteristics pertaining to both the device capabilities and or the application being executed may be considered and accounted for by a processing management platform in generating customized content to be rendered to a display of the respective UE via the user interface module

In one embodiment a process management module decides which applications e.g. web applications run in which processes based on the determined characteristics of the application or the UE upon which it runs. By way of example the characteristics include one or more security properties one or more authentication properties one or more permissions frequency of use resources used importance or a combination thereof. In one embodiment the characteristics are identified and provided by one or more servers that host the respective applications. In addition or alternatively the characteristics may be determined at the UE based on for instance the resources permissions etc. requested by the applications. In addition the process management module allows process management to take place not only during web application start up but also when a web application is actively running. This is referred to as application migration which permits an application to be transferred from one process to another. Suspension support is enabled for the application by the process management module to enable a completely transparent end user experience.

By way of example the process management module operates deterministically taking the information from the user interface module application characteristic data and the process monitor module into account for executing process allocation decisions. Examples of decisions accounted for by the process management module considered for the purpose of affecting proper allocation of processes or execution of applications relative to known application characteristic data include 

By way of example when the user first navigates to an unknown website corresponding to the starting of an unknown web application process allocation policy data relative to this site application does not yet exist and a designated default action as specified in the policy data needs to be taken. An exemplary default action may be to start the application in its own process. One advantage to this approach is that running in a separate process allows the process monitor module operating in connection with the process management module to observe application behavior and memory usage e.g. using OS memory usage mechanisms . As another advantage running the application in its own process provides isolation in instances where the unknown application is malicious in nature.

In one embodiment the process monitor module gathers information about the state of the UE operating system and running web applications. System and application state interaction and functional information is immediately available to the process management module the process management module featuring various functions for interacting with the OS interacting with the application programming interface API accessing execution threads etc. By way of example system information acquired and interpreted by the process monitor module includes 

In addition to the system related information the process monitor module monitors and gathers information about any running web applications including 

It is noted that the process monitor module is configured to monitor intercept or interpret any information useful for specifying the current operational functional or statistical state of the UE or applications running thereon. Still further it is noted that to the extent multiple UE are configured with a process monitor module the process management platform is able to gather a wide set of data regarding the various operations and interactions of differing devices and applications. As will be seen later a wealth of information of this nature is useful for continually developing refined process allocation policies that are responsive to real world conditions and for enabling enhanced process allocation decisions to be made.

In one embodiment a policy update module updates both the process allocation data maintained by the UE and that maintained by the process management platform based on the information collected by the process monitor module . By way of example the policy update module is notified if new application characteristic data is available at the process management platform . The update process wherein the process management platform provides process allocation policy to the UE may be performed at a various levels of frequency e.g. once per day. It is noted that in certain implementations the communication between the UE and process management platform is piggybacked during other information exchanges that occur between them.

Of note the above described modules interact to support the UE s ability to manage applications including performing process migration relative to policy data. When executed in combination the various modules enable UEs to more effectively balance usage of resources during execution of web applications. It will be seen further with respect to the functions of the process management platform that the modules also support the execution of optimized content to the display of the UE via the user interface module

Communication is facilitated between the UE process management platform content platform via the communication network using well known new or still developing protocols. In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols the packet includes 3 trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet its destination the length of the payload and other properties used by the protocol. Often the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks such as the Internet typically include a physical layer 1 header a data link layer 2 header an internetwork layer 3 header and a transport layer 4 header and various application headers layer 5 layer 6 and layer 7 as defined by the OSI Reference Model.

In one embodiment the resource usage data aggregation module receives information about user equipment and or associated web application. This information is relayed to the resource usage data aggregation module by respective process monitor modules of UEs and includes information regarding the functional operation or statistical state of the UE or web applications operable thereon. As mentioned previously the process management platform via the resource usage data aggregation module can interact with process monitor modules of respective UEs on a periodic basis e.g. once per day for receiving such data. The interaction can also be performed during the course of normal communication between the process management platform and the process monitor modules as a piggyback process. By way of example usage data is piggybacked or packaged along with data exchanged with the process management platform during a routine diagnostic regular system status check or other communication session. Upon receipt the resource usage data aggregation module can compile the data in a usage data database or other data storage where current information can be aggregated with historical information of the same type.

It is noted that the data aggregated by module may be organized for historical recollection real time analysis or other means of interpretation for determining specific usage and operational characteristics of differing UE or applications. In one embodiment this operation is performed by the resource usage determination module . By way of example the resource usage determination module analyzes the usage data and determines the usage trends commonalities and other characteristics that define the different UE and web applications. By way of example the resource usage determination module processes the data in accordance with a developed data model that attempts to characterize the behaviour of a given web application relative to a specific moment of use may employ various statistics or metrics for specifying the usage of differing UEs etc. It is noted that once the UE base has grown over some threshold there will be information about the vast majority of used web applications. As such the resource usage determination module may rely on this vast amount data for better qualifying characterizing or determining how resources are used by respective UEs or applications.

In one embodiment a content relationship determination module determines the relationship between varying types of content as accessed from a particular content platform via a web application of a given UE . By way of example the content relationship determination module may be configured to browse the content as accessed by a given application in a methodical automated manner or in an orderly fashion. A technique for analyzing the content by module may include URL normalization or canonicalization which refers to the process of modifying and standardizing a URL for various content in a consistent manner e.g. to determine content source commonality . Under this approach it is possible for the module to determine if sites featuring content that appears to be non related based on their domain e.g. www.content source.fi and www.content source.com are related to the same organization individual which in turn makes them related. Another technique employed by the content relationship determination module may include path ascendency analysis wherein the commonality between various links between content is analyzed or content revisitation analysis where the amount of time content is actively browsed its relevancy or the frequency of access of content by the application is analyzed. Still further the content relationship determination module allows content relative to various web applications to be categorized based on various criteria such as importance origin relational affinity complexity and required permissions. It is noted that the content relationship determination module may be employed or implemented using known web crawler architectures. Moreover it is noted the content relationship determination module may be implemented or accessed as a third party web tool for performing automated content crawling.

The content relationship determination module is useful for providing additional detail regarding the various UEs and web applications. By way of example determining the relationship between different sets of content may be used for further recognizing application or UE usage respective to the execution of different content. This process may be performed in conjunction with the resource usage determination module . Having generated usage data and determined the relationship between respective content this information can be compiled by a policy update module of the process management platform into application characteristic data . In certain instances the policy update module may generate or adapt the data based on one or more data models or schemas such as maintained in storage

In one embodiment a manual policy update module also enables the generation or adaptation of usage data . By way of example the manual policy update module allows for the input of usage data that cannot be automatically determined by the resource usage determination module or informed by the content relationship determination module . For example a manual policy may call for URLs of core applications as designated by a user to be listed so that the UE can run each core application in its own process regardless of its domain information. As another example a manually entered policy may be provided for enabling a certain process allocation policy on per site or a per content basis. It is noted the process management platform accommodates both manual and automated generation of application characteristic data.

In one embodiment a personalized content generation module combines the information generated by the above described modules to produce user specific personalized web application content. User specific content as generated contains information about major web sites and sites visited by the user recently. In addition the user specific content is comprised of much smaller amounts of information than content pertaining to web sites from all users. As such this content is less tasking on the resources of the UE . It is noted that while the above described processes are presented with respect to the activities of the process management platform certain implementations contemplate execution of these processes at both the UE and process management platform or just the UE .

In one embodiment the various protocols data sharing techniques and the like required for enabling collaborative execution between UEs over the communication network is provided by way of a communication module . As the various UEs may feature different communication means the communication module allows the process management platform to adapt to these needs respective to the required protocols of the communication network . In addition the communication module may appropriately package data for effective receipt by a respective UE . By way of example the communication module packages the application characteristic data as generated by the policy update module or user customized content as generated by the personalized content generation module for transmission to respective UEs.

It is noted that application characteristic data is generated or maintained by respective UE as well as the process management platform . In an effort to maintain a level of synchronicity of policy data between the various UE and process management platform an update process is performed as described before. As a general update mechanism application characteristic data maintained by the process management platform may be downloaded by UE for inclusion with its current data set . By way of this approach the dataset maintained by a single UE may account for and be informed of application characteristic data for all UEs configured over the network . This makes for a more robust application characteristic dataset for execution at respective UE . It is noted therefore that process migration and management may be performed differently in each UE due to variations in user preferences and application use while also accounting for known operating conditions of various UEs .

As a further means of ensuring proper synchronization of application characteristic data amongst respective UEs and the process management platform the policy data is generated and defined according to a common data framework. is a diagram of a data structure representative of application characteristic data for enabling execution of applications within a user device according to one embodiment. As mentioned the application characteristic data is stored to the UE and updated as necessary using application characteristic data maintained by the process management platform . This update process is facilitated by the process management module and process monitor module as described. Data structure ensures the integrity of the dataset maintained at a respective client e.g. UE while enabling the overriding of certain data received from the server e.g. process management platform .

By way of example data structure may include an application identifier for specifying a particular application e.g. application URL permissions settings as required by the application a complexity indicator or ranking for specifying the extent of processing complexity required by the application a relational indicator for specifying other applications of the UE that are related to the specified application for enabling execution of tasks and or processes an application usage frequency for indicating how often the application is used and an application importance for ranking the importance of the application relative to other related applications or processes at hand to be performed. Other data items may also be defined by the data structure accordingly.

The permissions settings data is used to indicate and determine whether certain content e.g. specific web site is allowed to access certain data or functionality e.g. GPS sensor camera file system on the UE . Generally this data is user specific as one UE may allow a site www.somesite.com to access its GPS sensor data while another UE may be configured to deny this capability. It is noted that website permissions settings may be used to set the permissions of an OS process when the process management module creates or allocated a new process. By way of example the allocated process can never increase its set of permissions even in situations where the application in the process can be hijacked and made malicious. The permissions settings as originally granted thus limits the damage a malicious application can have on the UE .

The complexity indicator may be established based on numerous criteria including an average application loading processing or completion time typical resource usage required for the application and other factors. This data may be informed by the process management platform which compiles data for a plurality of UE 

Of the various application characteristics defined by the data structure permissions settings complexity indicator and the relational indicator may be overridden by the process management platform . This is because data elements and are common for or generalized with respect to all UE configured at a given time to the process management platform . Hence during the application characteristic data update process a respective UE may update this data with that provided by the process management platform accordingly. However usage frequency and application ranking are user UE specific criteria that pertain only to a single UE . Consequently during the update process this data is not overridden by the process management platform . It is noted that in addition to the above described application characteristic data of data structure some characteristics that affect process allocation decisions need not be stored. Rather they are runtime characteristics that are observed by the process management module or process monitor module i.e. current RAM usage by an application.

In one embodiment the application characteristics may include 1 one or more security properties e.g. the security features that are used by the application such as type of encryption public key infrastructure and the like 2 one or more authentication properties e.g. the policies for authenticating access to the application or its functions such as username passwords biometric identification etc. 3 one or more permissions e.g. the resources of the device or other components to which the application has or seeks access 4 frequency of use e.g. how often is the application executed and or used at the device 5 importance e.g. does the application relate to core functions of the device or a combination thereof.

The priority setting of a given policy is based generally upon a wide set of usage factors content relationship factors and other data as compiled and or generated by the process management platform for a plurality of UE . As an example when a given UE is associated with a particular wireless communication service provider that maintains a process management platform the priority setting is assigned according to the determined usage relationship and other characteristics of all UEs associated with the provider. Hence the process management platform sets the priority via the policy update module so as to rank policy management approaches that are best suited for the various UEs configured for communication with the process management platform . It is noted that execution of a policy by the process management module is performed in consideration of the application importance ranking as assigned to a specific application.

It is further noted that application data indicates one or more application identifiers IDs that are to be associated with a specific policy. As indicated with respect to each application ID is also defined according to various other characteristics pertaining to its use execution and relevancy with respect to a given UE . By way of this commonality application characteristic data may be associated with specific process allocation logic data to be executed for the application. It is noted that system enables the management and subsequent execution of processes within UE on the basis of individual and or real time device conditions and needs and also best practices for devices in general.

The data structure may be implemented according to various known data formats and conventions. Likewise the execution logic as specified within the data structure may be implemented in accordance with any programming language or syntax that facilitates web based execution. This includes extensible markup language XML JScript various .NET protocols e.g. ASP.NET Simple Object Access Protocol SOAP and the like. As an example the policy execution is conforms to the expression wherein IF a condition is determined e.g. two applications share a common trust domain THEN a specific logical operation is performed e.g. consolidate and run the applications in the same process OTHERWISE perform a different logical operation e.g. run the applications in separate processes .

In certain embodiments the process management module processes the data structure to enact the specified policy executions . Process allocation policies may be implemented as one or more algorithms or approaches as named below as follows 

It is noted that the above described operations in general are intended to minimize user required intervention for managing and allocating processes. By way of example the various approaches of the process management module are performed seamlessly such that no noticeable changes are incurred to running web applications browser windows tabs etc. In certain instances however a suitable notification is presented to the display of the UE when required to enable process allocation.

Process also pertains to steps performed by the UE . In step of process the process monitor module determines that a process of a particular UE is executing one or more other applications. In step the process monitor module also determines one or more other characteristics of the one or more other applications. Based on this information the process management module performs additional analysis including determining to compare the one or more characteristics with the one or more other characteristics step . This enables the process management platform to detect variations in resource usage or process allocation accordingly for enabling process allocation decisions. As such in yet another step it is determined to execute an application in the process based on the comparison. are diagrams of interactions between a client and a server utilized in data mining included in the processes of according to various embodiments. shows that data such as resource usage data monitored at the client end from mobile devices e.g. UEs may be uploaded to the server end through the Internet e.g. communication network . In one embodiment the server end may include the process management platform . At the server end the uploaded data is stored in the usage database . Once the uploaded data is processed by the server i.e. after data mining and personalization it can then be downloaded to the client. This embodiment is advantageous in that the mobile devices can reduce their computational burdens associated with the data mining to the server . It is noted that the server generally has more processing power and related resources e.g. bandwidth memory etc. than the mobile devices to handle this type of computation.

Alternatively as shown in the data retrieved downloaded by the mobile devices at the client end may be stored at storage media not shown of the respective mobile devices . The mobile devices may then locally perform the computations for generating application characteristic data . Then the result of the computation e.g. the client end application characteristic data may be uploaded to the server end including a server and application characteristic database . This embodiment is advantageous in that the data is kept within the respective mobile devices and is not uploaded to other devices or servers without the user s permission. As long as the mobile device has the data and sufficient processing power to analyze the data then the server may not be required to perform the analysis.

It is noted that the techniques and procedures presented herein enable an optimized allocation of processes for enabling the execution of web applications. In addition system presents various policies for establishing logical executions to be performed respective to determined device or application conditions. In certain embodiments the process management platform also pertains to management of processes related to web phone applications. As used herein web phone applications pertain to items such as contacts calendar gallery and email which are implemented using web technologies e.g. HTML cascading style sheets CSS Java Script . With web phone applications each application is effectively a secure web site which has wide access to device functionality such as connectivity GPS location camera etc. All third party applications are also web sites identifiable by a URL. With a web phone based application the process allocation mechanism employed by the process management module enables a more robust and effective execution experience for the user.

The processes described herein for managing processes for enabling execution of applications within a user device may be advantageously implemented via software hardware firmware or a combination of software and or firmware and or hardware. For example the processes described herein may be advantageously implemented via processor s Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. Such exemplary hardware for performing the described functions is detailed below.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor or multiple processors performs a set of operations on information as specified by computer program code related to manage processes for enabling execution of applications within a user device. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or any other dynamic storage device stores information including processor instructions for managing processes for enabling execution of applications within a user device. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or any other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for managing processes for enabling execution of applications within a user device is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT a liquid crystal display LCD a light emitting diode LED display an organic LED OLED display a plasma screen or a printer for presenting text or images and a pointing device such as a mouse a trackball cursor direction keys or a motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of ASICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection to the communication network for managing processes for enabling execution of applications within a user device to the UE .

The term computer readable medium as used herein refers to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to computer readable storage medium e.g. non volatile media volatile media and transmission media. Non transitory media such as non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example twisted pair cables coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM an EEPROM a flash memory any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or any other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to manage processes for enabling execution of applications within a user device. The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of managing processes for enabling execution of applications within a user device. The display includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like or any combination thereof.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone any other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal to manage processes for enabling execution of applications within a user device. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage magnetic disk storage flash memory storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

