---

title: Help document animated visualization
abstract: Data for performing help document animated visualization is obtained by generating operation records from a text-based help document of an application. Each of the operation records may include data for animating an operation action that is performed on a user interface (UI) element of the application. The help document is further enhanced to include controls that load the operation records. The enhanced help documents and the operation records are distributed for use.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524279&OS=09524279&RS=09524279
owner: Microsoft Technology Licensing, LLC
number: 09524279
owner_city: Redmond
owner_country: US
publication_date: 20101028
---
An application such as a word processing program may provide a help document to assist users to understand how to use the features of the application. The help document may include step by step text instructions on accessing features of the application via a user interface of the application. However users may occasionally find such help documents difficult and time consuming to follow as the locations of the features in the user interface of the application may not be readily apparent from reading the text instructions in the help document. For example a particular user interface control may reside in a drop down menu of the user interface. Accordingly the particular user interface control may not be visible to the user until the user activates the drop down menu. The inconvenience associated with following text instructions in a help document of the application may reduce the effectiveness of the help document.

Described herein is a help document animated visualization technique that provides graphical visualizations of text based application help documents. The step by step text instructions may be converted by the use of the help document animated visualization technique into corresponding animated representations that assist a user in understanding the steps for the completion of the task. Thus user confusion caused by text instructions in a help document may be reduced or eliminated while enhancing an effectiveness of the help document.

In some embodiments data for performing help document animated visualization is derived by generating operation records from a text based help document of an application. Each of the operation records may include data for animating an operation action that is performed on a user interface UI element of the application. The help document is modified to include controls that load the operation records. The enhanced help documents and the operation records are subsequently distributed for use.

In additional embodiments help document animated visualization for an application is performed by receiving an enhanced help document and one or more operation records. Each operation record includes data that denotes a hierarchic path from a main window of the application to a user interface UI element of the application as well as data that denotes an operation action to be performed on the UI element. Upon activation of a control in the enhanced help document the operation actions to be performed on the UI elements are ascertained from the operation records. Further the UI elements of the application are located based on the hierarchic paths denoted in the operation records. The operation actions specified in the operation records are sequentially performed on the located UI elements.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Help document animated visualization techniques may assist a user in understanding step by step text instructions that are in a help document of an application. The help document animated visualization techniques may initially convert the step by step text instructions in the help document into operation records. Each operation record may include data regarding a hierarchic path to a particular user interface UI element and an operation action to be performed on the particular UI element. When used a series of operation records that relate to the completion of a particular task via the UI of the application may be played by a user to generate an animated presentation of the steps that are to be performed for the completion of the particular task. In this way the help document animated visualization techniques may visually present the user with the UI elements that are used to accomplish a task as well as animate the operation actions that are performed on each UI element.

By implementing the help document animated visualization techniques described herein user confusion over text instructions or misunderstanding of text instructions in a help document may be reduced or eliminated and the effectiveness of the help document may be enhanced. Various example implementations of the help document animated visualization techniques are described below with reference to .

The computing device may be a general purpose computer such as a server a desktop computer and or the like. The computing device may includes one or more processors memory and or user controls that enable a user to interact with the device. The user controls of the computing device may include but are not limited to combinations of one or more of keypads keyboards mouse devices touch screens microphones speech recognition packages and any other suitable devices or other electronic software selection methods.

The memory may store an operating system . The operating system may include components that enable the computing device to receive data via various inputs e.g. user controls network interfaces and or memory devices and process the data using the one or more processors to generate output. The operating system may include one or more components that present the output e.g. display an image on an electronic display store data in memory transmit data to another electronic device etc. . Additionally the operating system may include other components that perform various other functions generally associated with an operating system.

The memory may also store an application . The application may include a user interface UI with various UI elements as well as a help document that provides step by step text instructions for completing tasks using the UI of the application . For example the application may be a word processing application a spreadsheet application an email application a web browser application an operating system and or the like. In other embodiments additional applications or multiple versions of the application may also be stored in the memory .

The memory may further store components that generate operation records from the step by step text instructions in the help document of the application . The components or modules may include routines programs instructions objects scripts and or data structures that perform particular tasks or implement particular abstract data types. The components may include a parsing module a publishing module a compiler module an editor module and a data cache . The components may execute in a desktop environment provided by the operating system .

The parsing module may parse the help document into operation records. An operation on a particular UI element of the user interface of the application may be broken down into two components an operating object and an operation action. The operating object corresponds to a particular UI element and the operation action corresponds to an action that is performed on the particular UI element. With respect to each task that a user may perform using the application the help document may offer step by step text instructions that describe a series of operation actions that are performed to complete the task. For example the help document may describe operation actions for copying a string of text from one document to another document.

Thus for each operation action that is described by a corresponding text instruction in the help document the parsing module may parse the text instruction and generate an operation record. The parsing of each text instruction may include two phases 1 parsing of an operating object that is a specific UI element from the text instruction and 2 parsing of the operation action from the text instruction. A generation of the operation record may include storing data on 1 a hierarchic path from a main window of the application to a particular UI element and 2 the operation action to be performed on the particular UI element.

The parsing module may parse the operation action from a text instruction in the help document by recognizing a verb in the text instruction. A text instruction usually includes a verb and a noun that are expressed using natural language. For example in the text instruction click the Help button click is the verb and Help button is the noun. The value of the verb may be a part of a limited set that can be mapped to different operation actions. In various embodiments the parsing module may use a mapping table to accomplish the mapping. For example the mapping table may include the following example verb and operation action mappings 

In some embodiments the mapping table may be modified through user intervention to accommodate new verbs in the help document . Once the operation action corresponding to a text instruction is identified using the mapping table the parsing module may store data regarding the identified operation action in an operation record such as an operation record .

In at least one embodiment if the parsing module cannot map a verb to an operation action based on the mapping table the parsing module may prompt the user to manually enter or select an operation action that corresponds to the verb via a user interface prompt.

The parsing module may also parse the operating object from a text instruction in the help document based on the syntax and or format of the text instruction. For example in the text instruction click the Help button the noun Help button follows the verb click separated by the article the . Moreover in some help documents the noun in a text instruction may be highlighted or formatted in some standardized way to distinguish it from the verb. For example the noun Help button may be formatted in bold type. Thus the parsing module may recognize such syntactic or standardized format parameters and deduced the name of the operating object i.e. targeted UI element that is present in the text instruction. Subsequently the parsing module may use the name of the operating object to locate the targeted UI element in the user interface of the application .

In some implementations the UI elements in the UI of the application may be organized into a hierarchical tree in which each UI element may be represented by a node in the hierarchical tree. For example the UI of the application may be implemented using the Microsoft Active Accessibility MSAA application program interface API that is developed by the Microsoft Corporation of Redmond Wash. Accordingly by accessing the MSAA API the parsing module may obtain properties of the UI element that correspond to the noun derived from the text instruction including name type value and or the like. Further the parsing module may also obtain the handlers for the parent and child UI elements of each UI element in the hierarchical tree. Accordingly the parsing module may derive a hierarchic path from a root of the hierarchical tree to the UI element. Once the hierarchic path is obtained the parsing module may store the hierarchic path of the UI element into the operation record as a hierarchic string structure. An example hierarchic string structure is illustrated in .

Returning to the parsing module may repeat the text parsing and operation record generation for a plurality of step by step text instructions from the help document that are related to the completion of a particular task. Subsequently the parsing module may group the set of operation records into a single file for storage in the data cache .

In some embodiments the parsing module may further insert one or more cursor move action instructions into at least some consecutive operations records in the set of operation records that are grouped into a single file. The cursor move action instructions may play a role of smoothing out the eventual animated presentation. For example the cursor move action instructions may cause a mouse cursor to transit smoothly and or gradually across a displayed UI of the application rather than simply jump from one location to another location on the displayed UI. Thus the movement of the cursor in the eventual animated visualization may more easily discerned by an observer.

The publishing module may insert one or more selectable controls into the help document to generate a corresponding enhanced help document . As further described below with respect to the client device the nature of the inserted selectable controls is such that the activation of each selectable control may provide an animated visualization of the text instructions for completing a task using corresponding operation records. In other words each selectable control may cause a script application to play a corresponding set of operation records related to the completing a task. Thus for each set of instructions for performing a particular task using the UI of the application in a document page of the help document the publishing module may insert a corresponding selectable control into the document page. Each of the selectable controls may be in the form a menu button a selectable text string a hyperlink and or the like that is clickable by the user.

The compiler module may be used by a user to decompile or re compile help documents such as the help document . In some instances the user may wish to edit the help document prior to the generation of the operation records . The user may wish to insert delete or modify one or more of the step by step text instructions in the help document . Alternatively the user may desire to create a completely new help document for the application . The compiler module may be used to decompile a help document into an editable text document as well as compile one or more editable text documents into help documents.

The editor module is a text editing application that may be used by user to edit help documents such as the help document which have been decompiled into editable text documents. Additionally or alternatively the editor module may be used to create new text documents that can be compiled into corresponding help documents. In further embodiments the editor module may be used to edit the mapping table .

The data cache may store the operation records generated by the parsing module as well as the mapping table used by the parsing module . The data cache module may further store the enhanced help documents that are generated from the help documents . The data cache may also store any additional data used by the respective modules in the memory such as various intermediate data produced during the production of record operations including data related to operation actions and or data in the form of hierarchic string structures.

The operation records and the enhanced help documents generated on the computing device may be distributed to the client devices via the network . In some embodiments an enhanced help document for an application and a set of operation records that correspond to the enhanced help document may be distributed as a single package with the application . For example a software installation program for the application may copy the enhanced help document and the corresponding operation records file onto the client device during the installation of the application .

In other embodiments an enhanced help document for an application and the corresponding operation records file may be distributed to the client device as an upgrade to an existing help document that is already on the client device . For example a software installation program may replace a help document that is on the client device with an enhanced help document and a corresponding operation records file.

In various embodiments the distribution may include a download of the appropriate files from the computing device to the client device via the network . The download may be implemented by the corresponding software installation program. However the transfers of the operation records and the enhanced help document may also be carried out via the use of data storage media e.g. memory sticks optical data storage discs and or the like .

As discussed above the environment includes the client device . The client device may be a general purpose computer such as a desktop computer a laptop computer a net book a tablet computer a mobile telephone or the like. The client device may includes one or more processors memory and or user controls that enable a user to interact with the device. The user controls of the client device may include but are not limited to combinations of one or more of keypads keyboards mouse devices touch screens microphones speech recognition packages and any other suitable devices or other electronic software selection methods.

The memory may store an operating system . The operating system may include components that enable the client device to receive data via various inputs e.g. user controls network interfaces and or memory devices and process the data using the one or more processors to generate output. The operating system may include one or more components that present the output e.g. display an image on an electronic display store data in memory transmit data to another electronic device etc. . Additionally the operating system may include other components that perform various other functions generally associated with an operating system.

The memory may also store a replay module and an application . The replay module may be implemented using routines programs instructions objects scripts and or data structures that perform particular tasks or implement particular abstract data types. In various embodiments the application may be a version of the application that includes the enhanced help document in addition to the user interface elements . Moreover files of operation records that correspond to the application such as the operation records may be further stored in the memory due to the distribution described above.

The replay module may load each operation record and perform the defined operation action on the designated operating object i.e. targeted UI element of an application . In various embodiments when a user clicks on a control in the enhanced help document the replay module may sequentially load the operation records that correspond to step by step text instructions in the enhanced help document for completing a particular task. The control to the enhanced help document may be accessible to the user when the application is executing in a desktop environment supplied by the operating system . In this way the operation actions in the operation records may be sequentially implemented on the corresponding operating objects by the replay module to provide an animated visualization of the steps for completing the particular task in the desktop environment.

Upon loading an operation record the replay module may ascertain the operation action that is to be performed based on the data in the operation record. Further based on the hierarchic string structure stored in the operation record such as the hierarchic string structure the replay module may also ascertain a location of the targeted UI element as presented on the desktop environment of the operation system . As described above the hierarchic string structure stored in an operation record may describe a hierarchic path from a main window in a UI of the application to a targeted UI element.

Accordingly the replay module may first obtain a handle of the main window of the UI of the application using the hierarchic string structure. The replay module may then traverse all the children UI elements of the UI to get to a UI element that matches a first level object e.g. Acc level object down the hierarchic path. If applicable the replay module may traverse all the children UI element of the UI element in the first level to get to a UI element e.g. Acc level object that matches a second level down the hierarchic path. In this way the replay may repeat the traverse down one or more levels of the UI until the replay module locates the targeted UI element specified in the hierarchic path. Subsequently the replay module may access a core application program interface API of the operating system to obtain the two dimensional coordinates e.g. x and y coordinates of the targeted UI element as displayed on the desktop environment.

After obtaining both the operation action and the location of the targeted UI element specified in an operation record the replay module may automatically perform the operation action on the targeted UI element in the desktop environment. Since such a performance is presented to the user via the desktop environment the replay module may provide an animated visual representation of the underlying text instruction in the enhanced help document . Further as a plurality of operation records that relate to the completion of a task are played in sequence an animated visualization of the steps for performing the task may be displayed by the replay module .

Following the animated visualization of the operation records the replay module may exit automatically. However in at least one embodiment the replay module may present an option menu in the desktop environment prior to exit that enables the user to select to retain the operations that were performed during the animated visualization or rollback that is undo the operations that were performed during the animated visualization. When a user selects the rollback option the replay module may undo all the operation actions that were performed on the corresponding UI elements during the animated visualization.

In some embodiments when controls in the enhanced help document are activated the replay module may access corresponding files of operation records that are stored in the data cache of the computing device . Such access may be accomplished via the network . The replay module may perform such access rather than access operation records that have been distributed to the client device . For example the computing device may be a web server and the controls in the enhanced help document may present hyperlinks to the web server to retrieve the appropriate operation records.

In additional embodiments the client device may also include the modules as well as the data cache . In other words the client device may independently perform the functions that are performed by the computing device and thus remove a need for the computing device . For example the additional of such functions to the client device may enable the user of the device to independently create help documents and operation records for any application that is stored on the client device .

At block the publishing module may convert the help document into an enhanced help document by inserting one or more controls into the help document . In various embodiments a control may be inserted into a document page of the help document to correspond to a set of text instructions for completing a particular task. The control may be subsequently used to access a corresponding set of operation records that provide an animated visualization of the text instructions.

At block the enhanced help document and the corresponding operation records may be distributed to one or more client devices . The distribution may be implemented via the network or one or more storage media. As described above the distribution may take place as part of an application installation or an upgrade to an existing help document of a pre installed application.

At block the replay module may receive a request to implement one or more operation records via a corresponding control that is embedded in the enhanced help document . The one or more operation records may demonstrate the completion of a particular task as outlined by a set of text instructions in the enhanced help document . Each operation record may include data on an operation action and an operating object i.e. the targeted UI element.

At block the replay module may implement the one or more operation records to present an animated visualization of the text instructions to complete a task using the UI of the application . In various embodiments the implementation of each operation record may include locating the targeted UI element specified in the operation record in a desktop environment and performing the specified operation action on the located targeted UI element. The desktop environment may be generated by the operating system that is on the client device .

In at least one configuration electronic device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of electronic device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination thereof. System memory may include an operating system one or more program modules and may include program data . The operating system includes a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API . The electronic device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but may interact with an electronic device that may have such a basic configuration.

Electronic device may have additional features or functionality. For example electronic device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by Electronic device . Any such computer storage media may be part of device . Electronic device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included.

Electronic device may also contain communication connections that allow the device to communicate with other electronic devices such as over a network. These networks may include wired networks as well as wireless networks. Communication connections are some examples of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc.

It is appreciated that the illustrated electronic device is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described. Other well known electronic devices systems environments and or configurations that may be suitable for use with the embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor base systems set top boxes game consoles programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and or the like.

The use of the help document animated visualization techniques described herein may reduce or eliminate user confusion over text instructions or misunderstanding of text instructions in a help document and the effectiveness of the help document may be enhanced

In closing although the various embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended representations is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as exemplary forms of implementing the claimed subject matter.

