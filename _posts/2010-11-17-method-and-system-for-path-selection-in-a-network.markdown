---

title: Method and system for path selection in a network
abstract: Method and system for handling error events on a current path for processing an I/O request for reading information from and writing information to a storage space is provided. A system is able to communicate with the storage space via more than one path. If the current path reports an error event, then an alternate path quality is determined to ascertain whether the alternate path will generate an error similar to the current path. The alternate path quality is determined based on a plurality of factors which are assigned certain weights. The weights are determined based on a likely contribution of each factor to a repetition of the error reported by the current path. If the alternate path quality is equal to or exceeds a programmable threshold value, then the alternate path is selected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08619555&OS=08619555&RS=08619555
owner: Netapp, Inc.
number: 08619555
owner_city: Sunnyvale
owner_country: US
publication_date: 20101117
---
Various forms of storage systems are used today. These forms include network attached storage NAS systems storage area networks SANs and others. SANs typically use a network of storage devices for storing information. The storage devices appear as local storage to computing systems that operate within the SAN.

Typically a SAN uses a plurality of components for providing access to storage. For example a plurality of fabric switches a plurality of adapters and other components may be used for processing input output I O requests. An I O request is typically generated by one or more computing systems to read and write information to and from a storage device. Some of these components may generate errors while I O requests are being processed. Continuous efforts are being made to handle errors and failure events for efficiently processing I O requests.

In one embodiment a method and system for handling error events on a current path used by a storage system for processing an input output I O request for reading information from and writing information to a storage array is provided. The storage system is able to communicate with the storage array via more than one path.

If the current path reports an error event then an alternate path quality is determined to ascertain whether the alternate path is likely to generate an error similar to the current path. The alternate path quality is determined based on a plurality of factors which are assigned certain weights. The weights are based on a likely contribution of each factor to a repetition of the error reported by the current path. If the alternate path quality is equal to or exceeds a programmable threshold value then the alternate path is selected.

If the alternate path quality is less than the threshold value then other paths if available are evaluated. Once all the paths are analyzed and if none of their path quality is equal to or exceed the threshold value then the path with the highest quality is selected.

In another embodiment a machine implemented method for transmitting an input output I O request between a storage system and a storage array is provided. The method includes assigning a weight to a plurality of factors for determining a path quality of a plurality of paths between the storage system and the storage array. A value of each weight is based on a likely contribution of each factor to a repetition of an error reported by a current path used for transmitting the I O request. The path quality provides a likelihood of reporting an error on an alternate path similar to the error reported on the current path.

The method further includes assigning a threshold value for a path quality of each alternate path available to transmit the I O request when the current path reports an error where the threshold value is a minimum path quality for selecting a path for transmitting the I O request without having to evaluate other available alternate paths and determining if an alternate path is available for transmitting the I O request after an error is reported by the current path.

A path quality of the alternate path is determined based on the weights assigned to the plurality of factors and the alternate path is selected if the path quality of the alternate path is equal to or exceeds the threshold value.

In yet another embodiment a machine implemented method is provided. The method includes generating a data structure comprising a weight assigned to a factor for determining a path quality of a path between a system and a storage space detecting an error associated with transmitting an input output I O request through a first path and accessing the data structure to determine an alternate path for transmitting the I O request based on the weight assigned to the factor.

In another embodiment a machine implemented method for transmitting an input output I O request between a storage system and a storage array is provided. The method includes determining if an alternate path is available for transmitting the I O request when an error is reported by a current path used for transmitting the I O request determining a path quality of the alternate path where the path quality is based on a weight assigned to a plurality of factors associated with a plurality of components between the storage system and the storage array and a value of each weight is based on a likely contribution of each factor to a repetition of the error reported by the current path.

The method further includes selecting the alternate path if the path quality is equal to or exceeds a threshold value where the threshold value is a minimum path quality used for selecting the alternate path for transmitting the I O request without having to evaluate other available alternate paths determining a path quality of other available alternate paths if the path quality of the alternate path is less than the threshold value and selecting an alternate path from among the other alternate paths with a highest path quality.

In yet another embodiment a system is provided. The system includes a storage system and a storage array using a current path having a plurality of components for processing an input output I O request and a processor for the storage system executing instructions for determining if an alternate path is available for transmitting the I O request after an error is reported by the current path and determining a path quality of the alternate path.

The path quality is based on a weight assigned to a plurality of factors associated with the plurality of components between the storage system and the storage array and a value of each weight is based on a likely contribution of each factor to a repetition of the error reported by the current path and the alternate path is selected if the path quality is equal to or exceeds a threshold value which is a minimum path quality for selecting the alternate path for transmitting the I O request without having to evaluate other available paths.

This brief summary has been provided so that the nature of this disclosure may be understood quickly. A more complete understanding of the disclosure can be obtained by reference to the following detailed description of the various embodiments thereof in connection with the attached drawings.

As a preliminary note the terms component module system and the like as used in this disclosure are intended to refer to a computer related entity either software executing general purpose processor hardware firmware and a combination thereof. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer.

By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also these components can execute from various computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal .

Computer executable components can be stored for example on computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory memory stick flash memory device or any other non volatile memory device or any other storage device in accordance with the claimed subject matter.

In one embodiment a method and system for handling error events on a current path used by a storage system for processing an input output I O request for reading information from and writing information to a storage array is provided. The storage system is able to communicate with the storage array via more than one path. If the current path reports an error event then an alternate path quality is determined to ascertain whether the alternate path will generate an error similar to the current path. The alternate path quality is determined based on a plurality of factors which are assigned certain weights. The weights are based on a likely contribution of each factor to a repetition of the error reported by the current path. If the alternate path quality is equal to or exceeds a programmable threshold value then the alternate path is selected.

If the alternate path quality is less than the threshold value then other paths if available are evaluated. Once all the paths are analyzed and if none of their path quality is equal to or exceed the threshold value then the path with the highest quality is selected.

Storage system may use one or more adapters and to access storage array via switch and . Adapters and are configured to initiate an I O operation to read information from storage array or write information to storage array . Adapter and may include logic and circuitry for sending and receiving information in compliance with certain standard protocols for example Fibre Channel Fibre Channel over Ethernet and others.

Storage array includes a plurality of mass storage devices A D for storing information and may be configured to operate in different configurations for example RAID configurations. The mass storage devices A D may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage flash memory storage device or any other type of non volatile storage devices suitable for storing data. The examples disclosed herein may reference a storage device as a disk but the adaptive embodiments disclosed herein are not limited to disks or any particular type of storage media device.

The storage devices A D are accessible through one or more target ports also shown as target port also shown as target port also shown as target port and also shown as target port . The term target as used herein means a storage device a portion of a storage device or any module component used for accessing a storage device or a portion thereof. The term port as used herein means a module that includes logic and circuitry for communicating with other components. Typically a port is identified by a unique identifier for example by using a world wide port number WWPN . Ports may be included in adapters switches or any other components. For example the target ports and of may be a part of adapters not shown in storage array that are used for communicating with switches and for processing I O requests or for any other reason.

The target ports and may be a part of a target port group for example and . Each target port group is uniquely identified. In the example of target port group includes target port and target port . Target port group includes target port and target port .

Target port groups may include a controller for managing target ports and presenting storage space may also be referred to as storage object as logical space or logical units. The term logical space or unit as used herein means an externally addressable storage unit that can be used to store information. A logical unit may be identified by a unique logical unit number LUN .

Referring back to target port group may include a controller that manages target ports and . Controller also presents physical storage from storage devices A D as logical units A D via target port and logical units A D via target port . Similar to target group target group may also include a controller that controls target ports and . Controller presents logical units A D via target port and logical units A D via target port .

Switch and include a plurality of ports that operationally couple storage system with storage array for sending and receiving I O requests. For example switch may include a plurality of ports A H. Port A may be operationally coupled to adapter while port D may be operationally coupled to adapter . Port E may be operationally coupled to target port and port H may be operationally coupled to target port . Ports A H include logic and circuitry to handle information for example frames and packets complying with certain standard protocols for example Fibre Channel Fibre Channel over Ethernet and others.

Switch includes a plurality of ports A H. Port A may be operationally coupled to adapter and port D is operationally coupled to adapter . Port F may be operationally coupled to target port while port H may be coupled to target port . Ports A H may also include logic and circuitry to handle information for example frames and packets complying with certain standard protocols for example Fibre Channel Fibre Channel over Ethernet and others.

As shown in storage system may access storage array through different paths using switch and . When an I O request is being processed one or more component for example a switch a port an adapter or any other component may report an error. Different error types may be reported for example a network link may be down an adapter may be over utilized and hence may report an error and since different protocol layers are used for communication there may be protocol related errors. The embodiments disclosed herein are not limited to any particular error types.

In conventional systems when an error is reported on a current path that is processing an I O request the I O request is often retried using the same path that includes one or more components that may have generated the original error in the first place. Retrying the I O request using the same path may not be successful which delays I O processing and wastes computing resources. The embodiments described below in detail efficiently select an alternate path if one is available.

The storage system may be operationally coupled to a plurality of clients through a network . Each client may be for example a conventional personal computer PC workstation or the like. The network may be for example a local area network LAN a wide area network WAN a storage area network SAN or any other type of network or a combination of networks. Storage system receives and responds to various read and write requests from clients directed to data stored in or to be stored at storage array .

Also connected to the network is a management console that may store and execute a management application may also be referred to as a storage management application . The management console may be for example a conventional PC a workstation or the like.

The processor executable management application may be used by a storage network administrator to manage a pool of storage devices and various components of system for example switch switch adapters and . The management application includes a graphical user interface GUI module to generate a GUI e.g. for use by an administrator. In another embodiment the management application may provide a command line interface CLI for use by an administrator for managing and configuring various components of system .

Management application is configured to collect various parameters and data from the operating system and different components of system . To obtain such information communication between the management application clients and storage system may be accomplished using any of the various conventional communication protocols and or application programming interfaces APIs the details of which are not germane to the technique being introduced here. This communication can be done through the network or it can be via a direct link not shown between the management console and storage system .

Path selection module is used to select an alternate path if available when a current path processing an I O request reports an error. As described below in more detail the alternate path is selected based on a path quality which reduces the likelihood of repeating the same error reported by the current path.

For selecting the alternate path path selection module generates and maintains a path selection data structure may also be referred to as data structure according to one embodiment. Data structure may include various sub structures for example path data A path selection weights B shown as Path Weights B path quality C threshold values D and an event log E that are all described in detail below.

Path data A includes information regarding different paths between storage system and storage array and uses various sub data structures A D. For example a first path may be from adapter to port A and then from port E to target port . A second path may be from adapter to port D and then from port H to target port . A third path may be from adapter to port A and then from port F to target port . A fourth path may be from adapter to port D and then from port H to target port .

The various paths may be identified by a path identifier A. Since different paths have different components the various path components may also be identified by sub data structure B. An indicator C may be used to indicate that a path is a current path for transmitting an I O request while an alternate path to a current path maybe identified by an indicator D. The sub data structures A D allow path selection module to identify one or more alternate paths quickly.

The various paths identified by A and the components identified by B may be discovered by different mechanisms defined by standard protocols operating systems and other mechanisms. In one embodiment the various paths and components may be discovered by sending out initialization packets to various components for example switch and and target ports and . The packets may be sent by different components of storage system for example adapters and . The different components for example switch and and target ports and respond to the initialization packets. The response may be reported to operating system for storing path data A. The path data A is then used by path selection module for selecting an alternate path as described below in more detail.

The type and format of the initialization packets depends on the protocol used for communication in system . For example if Fibre Channel Fibre Channel over Ethernet protocol InfiniBand or any other protocol type is being used for communication then the initialization packet complying with the protocol is sent to all communicating ports within system . The embodiments herein are not limited to any particular protocol operating system or any packet format.

Path selection weights B may be designated as W Wn. The weights may be designated by an administrator using management console or any other computing system within system .

Weights W Wn are assigned to each of a plurality of factors F Fn for determining the quality of a path referred to herein as path quality used for processing an I O request. The value of each weight W Wn is based on the importance of a factor and how the factor impacts overall path quality. For example if F is the most important factor then W has the highest value and if Fn is the least important factor then Wn has the least value.

The importance of each factor may vary for different operating environments and hence are configurable. For example factor F may be the most important factor for an operating environment of a high traffic data center. Another factor F may be the most important factor in a smaller SAN. The embodiments disclosed herein are not limited to assigning any specific importance to a factor for determining path quality. Examples of some of factors F Fn are provided below in more detail.

The term path quality as used herein means a path s ability to transmit an I O request from a source to a destination with a less likelihood of replicating an error that may have occurred in another path. For example if a first path may also be referred to as the current or original path reports any error event and an alternate path is available to send the I O request then the alternate path s quality is an estimate that provides the likelihood of repeating the same or different error than the first path. A higher path quality denotes a less likelihood of reporting the same error and a low path quality denotes a high likelihood of reporting a similar error.

In Equation I W is the weight assigned to Factor F W is the weight assigned to factor F and Wn is assigned to Fn.

Each factor F Fn may have a value of 1 or 0. A value of 1 denotes that the factor is true and hence impacts path quality. Hence when a factor is true its associated weight is considered in determining the overall path quality.

When a factor value is 0 it denotes that the factor is false and does not impact path quality. In such a case the weight associated with the factor is not considered in determining path quality.

As an example the value of weights W Wn may be based on a set of hierarchical numbers ranging between 2 n to 1. A weight Wx may be determined by 2 II 

For example if x 1 and n 5 i.e. there are 5 factors then W for F may be determined by 2 5 1 . In this example W is equal to 16. Using the same relational ship when n 5 and x 5 W 1.

It is noteworthy that the embodiments disclosed herein are not limited to determining weights using equation II. Weights may be assigned using other techniques.

The foregoing approach has advantages because as networks evolve and new factors emanate one can add a new factor to the path weight B without having to add new logic to handle the new factor.

The following now provides an example of some of the factors F Fn that are assigned weights W Wn to ascertain path quality using Equation I 

F may be a factor that is based on a number of errors that may have been received on an alternate path within a certain duration. This may be referred to as an error rate. In one embodiment a weight of W is assigned to F based on Equation II described above.

F may be a factor that is based on whether the alternate path uses a same target port group for example 46 or 47 as a current path for processing the I O request. In one embodiment a weight of W is assigned to F based on Equation II described above.

F may be a factor that is based on whether the alternate path uses the same target port for example 42 44 50 and 52 as the current path for processing the I O request. In one embodiment a weight of W is assigned to F based on Equation II described above.

Factor F may be based on whether the alternate path uses a same switch for example or as the current path for processing the I O request. In one embodiment a weight of W is assigned to F based on Equation II described above.

Factor F may be based on whether the alternate path uses a same adapter as the current path for processing the I O request. In one embodiment a weight of W is assigned to F based on Equation II described above.

In one embodiment path quality determined by Equation I is stored as path quality data structure C also referred to as path quality C . The path quality C is stored for each path that may be used by storage system to transmit an I O request. For example as described above with respect to path data A path quality values for each path may be stored in path quality data structure C. Path selection module uses the path quality data structure C to select an alternate path as described below in more detail.

Before an alternate path is selected to transmit an I O request its path quality is compared to a threshold value. The threshold values are programmable and stored as D. The threshold values may be set by an administrator using management application . The use of threshold value D is described below in more detail with respect to .

Event log E is maintained to track different error events that occur while an I O request is being processed. Event log E may include a plurality of entries. For example event log E may store the identity of a component that generates an error during I O transmission for example a switch port of switch . Event log E may also store a code indicating the type of error event when the event occurred and historical error related data regarding the component.

Event log E may be used by an administrator using management application to evaluate error conditions and assign importance to factors F Fn. For example by evaluating event log E an administrator may conclude that F a factor based on error rate described above is not the most important factor and instead F a factor based on using the same switch is the most important factor in selecting the alternate path.

In one embodiment although data structure is shown to have multiple components segments for example A E they may be included in an integrated single data structure. In a distributed architecture different components of data structure may be stored in different memory locations and may be accessible to operating system and path selection module via network . The memory location may be local or remote to the operating system .

The path information may be stored by storage operating system and or management application as path data A with sub data structures A D as described above with respect to . In one embodiment path information may be collected when system components are initialized. Operating system and or management application may collect the path information by sending initialization packets to the various components for example adapters switches and target ports. In another embodiment the components send connection information upon being powered up to operating system and or management application .

Once the path information is gathered in block S a plurality of weights W Wn for a plurality of factors F Fn are assigned certain values for determining path quality of a path that can be used for processing an I O request. As described above factors F Fn are based on how they impact transmission of an I O request between storage system and storage array and their possible contribution to a repetition of an error reported by a current path. The number and nature of factors F Fn may vary from one operating environment to another. An administrator using management application may add new factors and rearrange previous factors.

In block S threshold values are assigned. A threshold value is a value that may be used to select an alternate path without having to check path quality of all available alternate paths. The weights and threshold values are then stored in block S. In one embodiment the weights may be stored as path weights B and threshold values are stored as D as described above with respect to .

The overall weighting scheme examples of different factor types and how they are used to select an alternate path when a current path reports an error event is now described below in more detail with respect to that shows a process for selecting an alternate path for transmitting an I O request according to one embodiment.

The process begins in block S when an error is received on a current communication path that is processing an I O request. The error may be received by the operating system that may be responding to an I O request and or management application . The error event is stored as part of event log E. The event log E identifies the type of error and the time the error occurred.

In block S the process determines if an alternate path is available to transmit the I O request. An alternate path may be ascertained by path selection module by evaluating path data A in general and using data structure D that identifies an alternate path in particular. Referring to the example of assume that the first path using adapter port A port E and target port is a current path for accessing storage array as identified by C . There may be three other alternate paths to access storage array . For example alternate path may use adapter port D port H and target port . Alternate path may use adapter port A port F and target port . Alternate path may use adapter port D port H and target port . Any one of the alternate path may be chosen for further evaluation.

In block S an alternate path quality Pxq for the alternate path is determined. As described above the path quality is a measure for predicting the likelihood that an I O request will be serviced promptly using an alternate path without the alternate path repeating an error similar to the error reported by current path. In one embodiment as described above the path quality may be ascertained by 112233 

As described above W is the weight assigned to Factor F W is the weight assigned to factor F and Wn is assigned to Fn. Each factor F Fn may have a value of 1 or 0. A particular weight is used when a factor is true for example having a value of 1 otherwise the weight for factor is ignored. When a weight is ignored it lowers the overall path quality for an alternate path.

In one embodiment as described above the value of weights W Wn may be based on a set of hierarchical numbers ranging between 2 n to 1 for example Wx 2 n x where n is the total number of factors and x may range from 1 to n. The following provides an example of different factors F Fn having weights W Wn for determining alternate path quality according to one embodiment.

F may be factor that is based on an error rate for the alternate path. Event log E is used to ascertain error rate information for the alternate path.

F may be assigned a weight of W. If the alternate path quality is higher than the current path then Factor F may be assigned a value of 0 and weight W is ignored. This results in lower path quality. If the alternate path error rate is lower than the error rate of the current path then weight W is used to determine the path quality.

F may be a factor that is based on whether the alternate path uses the same target port group for example or as the current path. This information is available from path data A.

A weight of W is assigned to F. If the same target port group is not used then W is used to determine the alternate path quality. When the same target port group is used then W is ignored resulting in lower overall path quality. W is ignored because if the same target port group is used in the alternate path then there may be a higher chance of repeating the same error as the current path.

F may be a factor that is based on whether the alternate path uses the same target port for example and . This information is available from path data A.

A weight of W is assigned to F. If the same target port is not used in the current path then W is used to determine path quality. When the same target port is used then W is ignored resulting in lower overall path quality. W is ignored because if the same target port is used in the alternate path then there may be a higher chance of repeating the same error as the current path.

Factor F may be based on whether a same switch for example or is used by the current path and the alternate path. This information is available from path data A.

A weight of W is assigned to F. If a different switch is used by the alternate path then W is used for determining alternate path quality. When the same switch is used then W is ignored resulting in lower overall path quality. W is ignored because if the same switch is used in the alternate path then there may be a higher chance of repeating the same error as the current path.

Factor F may be based on whether a same adapter is being used in the alternate path. This information is available from path data A.

A weight of W is assigned to F. If the same adapter is not used in the current path then W is used to determine path quality. When the same adapter is used then W is ignored resulting in lower overall path quality. W is ignored because if the same adapter is used in the alternate path then there may be a higher chance of repeating the same error as the current path.

It is noteworthy that the foregoing factors are only shown as examples. One can customize the number and type of factors based on network needs and preference.

Once the alternate path quality is determined it is stored as C and then compared with a stored threshold value D in block S. If the determined path quality is greater than the threshold value then the process moves to block S where the I O request from block S is processed via the alternate path.

If the alternate path quality is less than the threshold value then in block S the process determines if all available alternate paths have been checked. If all the alternate paths have not been checked then the process reverts back to block S when a next alternate path quality is determined and analyzed as described above.

If all the alternate paths have been checked then the process moves to block S where the path with the highest quality is selected. The highest path quality is selected from stored path quality C.

In one embodiment the alternate path is selected based on the likelihood of not repeating an error similar to the current path. This process saves time and resources because one does not have to retry transmitting an I O request using the same current path that may generate the same error. Instead one selects a path based on the analysis described above such that the I O request is processed promptly by an alternate path that has less likelihood of repeating the same error.

It is noteworthy that although the examples described above are described with respect to a storage system communicating with a storage array the embodiments disclosed herein are not limited to system in general and storage arrays in particular. The data structures and the processes described above are applicable in any environment used for processing an I O request and where multiple paths are used between communicating nodes. The path selection module and data structure may be maintained by any operating system application or device.

The embodiments disclosed herein are especially useful in a cluster environment where various nodes are interconnected using multiple paths. A brief description of a cluster environment is now provided.

Nodes comprise various functional components that cooperate to provide distributed storage system architecture of cluster . Each node is generally organized as a network element N module and a disk element D module . N module includes functionality that enables node to connect to clients over a computer network and to management application while each D module connects to one or more storage devices may generically be referred to as disks or storage array similar to storage array via an adapter having at least one port A. Each N module and D module may also include their own adapters logic for interfacing with each other and storage devices. described below provide examples of such adapters logic.

It should be noted that while there is shown an equal number of N and D modules in the illustrative cluster there may be differing numbers of N and or D modules in accordance with various embodiments of the present disclosure. For example there may be a plurality of N modules and or D modules interconnected in a cluster configuration that does not reflect a one to one correspondence between the N and D modules. As such the description of a node comprising one N module and one D module should be taken as illustrative only.

Nodes may be interconnected by a cluster switching fabric with ports A D which in the illustrative embodiment may be embodied as a Gigabit Ethernet switch. Switch may be similar to switch of . Switch with ports A D may be used for alternate paths similar to switch of 

Clients similar to clients may be configured to interact with a node in accordance with a client server model of information delivery. That is each client may request the services of the node and the node may return the results for the services requested by the client by exchanging packets over the network .

For a SAN based configuration client may issue I O requests using application complying with block based access protocols such as the Small Computer Systems Interface SCSI protocol encapsulated over TCP iSCSI and SCSI encapsulated over FCP. Alternatively client may issue packets using application including file based access protocols such as the CIFS protocol or the NFS protocol over TCP IP when accessing information in the form of certain data containers. Data container in this context means a block a file a logical unit of data or any other information. CIFS means the Common Internet File System Protocol an access protocol that client systems use to request file access services from storage systems over a network. NFS means Network File System a protocol that allows a user to access storage over a network.

The cluster access adapter comprises a plurality of ports adapted to couple node to other nodes of cluster . Cluster adapter may be categorized as a component that is monitored and managed using the process flow diagrams described above with respect to .

In the illustrative embodiment Ethernet may be used as the clustering protocol and interconnect media although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate embodiments where the N modules and D modules are implemented on separate storage systems or computers the cluster access adapter is utilized by the N D module for communicating with other N D modules in the cluster .

Each node is illustratively embodied as a dual processor storage system executing a storage operating system that preferably implements a high level module such as a file system to logically organize the information as a hierarchical structure of named directories files and special types of files called virtual disks hereinafter generally blocks on storage devices . However it will be apparent to those of ordinary skill in the art that the node may alternatively comprise a single or more than two processor systems. Illustratively one processor A executes the functions of the N module on the node while the other processor B executes the functions of the D module .

The memory illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may in turn comprise processing elements and or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the disclosure disclosed herein.

The storage operating system similar to operating system portions of which is typically resident in memory and executed by the processing elements functionally organizes the node by inter alia invoking storage operations in support of the storage service implemented by the node. An example of operating system is the DATA ONTAP Registered trademark of NetApp Inc. operating system available from NetApp Inc. However it is expressly contemplated that any operating system for example Solaris HPUX and others may use the inventive principles described herein. As such where the term ONTAP or storage operating system is employed it should be taken broadly to refer to any operating system or executable instructions that are otherwise adaptable to the teachings of this disclosure.

The network adapter comprises a plurality of ports adapted to couple the node to one or more clients over point to point links wide area networks virtual private networks implemented over a public network Internet or a shared local area network. The network adapter thus may comprise the mechanical electrical and signaling circuitry needed to connect the node to the network. Illustratively the computer network may be embodied as an Ethernet network or a FC network. Each client may communicate with the node over network by exchanging discrete frames or packets of data according to pre defined protocols such as TCP IP.

The storage adapter cooperates with the storage operating system executing on the node to access information requested by the clients and management application . The information may be stored on any type of attached array of writable storage device media such as video tape optical DVD magnetic tape bubble memory electronic random access memory flash memory devices micro electro mechanical and any other similar media adapted to store information including data and parity information. However as illustratively described herein the information is preferably stored on the disks of storage array . The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the disks over an I O interconnect arrangement such as a conventional high performance FC link topology.

In one example operating system may include several modules or layers executed by one or both of N Module and D Module . These layers include a file system manager that keeps track of a directory structure hierarchy of the data stored in storage devices and manages read write operations i.e. executes read write operations on disks in response to client requests.

Operating system may also include a protocol layer and an associated network access layer to allow node to communicate over a network with other systems such as clients and management application . Protocol layer may implement one or more of various higher level network protocols such as NFS CIFS Hypertext Transfer Protocol HTTP TCP IP and others as described below.

Network access layer may include one or more drivers which implement one or more lower level protocols to communicate over the network such as Ethernet. Interactions between clients and mass storage devices are illustrated schematically as a path which illustrates the flow of data through operating system .

The operating system may also include a storage access layer and an associated storage driver layer to allow D module to communicate with a storage device. The storage access layer may implement a higher level disk storage protocol such as RAID redundant array of inexpensive disks while the storage driver layer may implement a lower level storage device access protocol such as FC or SCSI.

In one embodiment path selection module may be located between layers and . The embodiments disclosed herein are not limited to any particular location of path selection module .

It should be noted that the software path through the operating system layers described above needed to perform data storage access for a client request received at node may alternatively be implemented in hardware. That is in an alternate embodiment of the disclosure the storage access request data path may be implemented as logic circuitry embodied within a field programmable gate array FPGA or an ASIC.

As used herein the term storage operating system generally refers to the computer executable code operable on a computer to perform a storage function that manages data access and may in the case of a node implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel an application program operating over a general purpose operating system such as UNIX or Windows XP or as a general purpose operating system with configurable functionality.

In addition it will be understood to those skilled in the art that the processes and systems described herein may apply to any type of special purpose e.g. file server filer or storage serving appliance or a general purpose computer including a standalone computer or portion thereof embodied as or including a storage system. Moreover the teachings of this disclosure can be adapted to a variety of storage system architectures including but not limited to a network attached storage environment a storage area network and a disk assembly directly attached to a client or a host computer. The term storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems.

The processing system includes one or more processors and memory coupled to a bus system . The bus system shown in is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor are the central processing units CPUs of the processing system and thus control its overall operation. In certain embodiments the processors accomplish this by executing programmable instructions stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory includes the main memory of the processing system . Instructions which implements the techniques introduced above e.g. the path selection module in may reside in and may be executed by processors from memory .

Also connected to the processors through the bus system are one or more internal mass storage devices and a network adapter . Internal mass storage devices may be or may include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The network adapter provides the processing system with the ability to communicate with remote devices e.g. storage servers over a network and may be for example an Ethernet adapter a FC adapter or the like. The processing system also includes one or more input output I O devices coupled to the bus system . The I O devices may include for example a display device a keyboard a mouse etc.

The system and techniques described above are applicable and useful in the upcoming cloud computing environment. Cloud computing means computing capability that provides an abstraction between the computing resource and its underlying technical architecture e.g. servers storage networks enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. The term cloud is intended to refer to the Internet and cloud computing allows shared resources for example software and information to be available on demand like a public utility.

Typical cloud computing providers deliver common business applications online which are accessed from another web service or software like a web browser while the software and data are stored remotely on servers. The cloud computing architecture uses a layered approach for providing application services. A first layer is an application layer that is executed at client computers. In this example the application allows a client to access storage via a cloud.

After the application layer is a cloud platform and cloud infrastructure followed by a server layer that includes hardware and computer software designed for cloud specific services. Details regarding these layers are not germane to the inventive embodiments.

The storage systems described above can be a part of the server layer for providing storage services. Path selection may be executed at any system that is coupled to the cloud. Data structure may stored at a storage device coupled to the cloud. The process steps of may be executed using path selection module and other programming instructions that may be adapted for the cloud computing environment.

Thus a method and apparatus for managing errors in a system for accessing storage have been described. Note that references throughout this specification to one embodiment or an embodiment mean that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present disclosure. Therefore it is emphasized and should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more embodiments of the present disclosure as will be recognized by those of ordinary skill in the art.

While the present disclosure is described above with respect to what is currently considered its preferred embodiments it is to be understood that the disclosure is not limited to that described above. To the contrary the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims.

