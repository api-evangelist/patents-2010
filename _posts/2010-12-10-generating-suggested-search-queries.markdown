---

title: Generating suggested search queries
abstract: A user supplied search query is received. Historical search queries are identified that are relevant and/or similar to the user supplied search query. The identified historical queries are then ranked according to various factors. Suggested search queries that are relevant to the user supplied query are identified.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098569&OS=09098569&RS=09098569
owner: Amazon Technologies, Inc.
number: 09098569
owner_city: Seattle
owner_country: US
publication_date: 20101210
---
Search systems can be employed in various settings including in a general purpose setting or in an electronic commerce system. Search systems can surface various items in a data store based on keyword matching relevance similarity and other measures. Some search queries submitted by users may not surface any items in a data store regardless of the matching. In an electronic commerce system additional information is known about search results e.g. products in a catalog in a data store.

The various embodiments described herein related to generating suggested search terms that can be employed to locate one or more items in a data store. In some embodiments the suggested search terms can be employed to locate products in an electronic commerce system. During the interactions of a user with an electronic commerce system for example search queries submitted by a user to a search engine may yield few and or no search results. In some scenarios search queries submitted by a user may yield search results that do not result in a high rate of conversion or product purchases. Other scenarios can be appreciated in which it may be desired to provide higher quality search results to a user of an electronic commerce system. Accordingly embodiments of the disclosure described herein relate to systems and methods of generating suggested queries based at least upon historical search queries submitted by other users as well as various metrics and other data about the historical search queries that are housed in a data store.

With reference to shown is a networked environment according to various embodiments. The networked environment includes at least one computing device a data store and at least one client in communication with the computing device via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing device may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise for example a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be dispersed among many different geographical locations. In one embodiment the computing device represents a virtualized computer system executing on one or more physical computing systems. For purposes of convenience the computing device is referred to herein in the singular. Even though the computing device is referred to in the singular it is understood that a plurality of computing devices may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data and or items are stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores that can be geographically disparate and accessible to the computing device via a network as can be appreciated. As a non limiting example applications facilitating embodiments of this disclosure can be executed on the computing device and other devices dedicated to providing the functionality of a data store or data store can be located in a separate installation accessible to the computing device . Additionally the items and or data stored in the data store for example are associated with the operation of the various applications and or functional entities described below.

The data store in the non limiting example of an electronic commerce system facilitated by the computing device can include items that are associated with products available in the electronic commerce system. The data store can also include other data relevant to products such as but not limited to the following product category title keywords description price weight shipping methods related images reviews similar items meta data hidden text a list of merchants selling the item stock number other associated categories page view history etc. The data store can also include other data related to products as can be appreciated but are not necessary to discuss herein for an understanding of the various embodiments of the disclosure. Additionally in the case of a computing device facilitating a content delivery system other than an electronic commerce system e.g. a general purpose search engine etc. the data store can store other data associated with items for which the content delivery system is suited.

The data store can also include information about users of the system. User data can include a user profile associated with the various users of for example an electronic commerce system facilitated by the computing device . Such a user profile can include data about the user browsing history purchase history product interests demographic information location a product wish list etc. Additionally user data can store information about various user sessions that describe the interactions of a user with the computing device . By way of illustration purchase history in a user profile can identify each of the purchases made by users via an electronic commerce system. As another example browse history data sets forth the browsing activity of customers when they visit an electronic commerce system. The browse history data can include data indicating how a user has navigated through an electronic commerce system and the products or communities in which a user has viewed and or expressed an interest.

The data store can also include data about historical search queries . Historical search queries can include search queries submitted by users in the past that have yielded search results. Accordingly query terms that describe the search terms associated with the historical query . Query associations can also be stored in the data store for each historical search query . A query association can include meta data associated with the historical search query that can be used to determine relevance and or similarity to a search query submitted by a user to the search application as will be described in further detail herein. One example of a query association can be a geographic location associated with the users who have submitted the historical search query in the past. Another non limiting example of a query association can include a product category or marketplace within an electronic commerce system in which the historical search query was submitted by a user. In some embodiments a query association can include another search query with which a particular search query should be associated. As one example the search application may determine that a percentage of users above a predefined threshold have entered two different queries in a single session. Accordingly the search application can designate these two queries as related. Therefore a historical search query entry associated with these queries can have a query association that points to the other.

Historical search queries can also be associated with various other metrics which can be stored in the data store . Metrics associated with a historical query can include a number of search results with which the query is associated a popularity of the historical search query a conversion rate associated with the query and other metrics as can be appreciated. In one embodiment a conversion rate associated with a historical query can be based at least upon a percentage of users in an electronic commerce system that purchase a product that is a search result associated with the historical query.

Various other behavioral data can also be stored as metrics associated with the query. In some embodiments the search application or other application can track user behavior in a session relate this behavior to search terms entered by the user during the session and store the data as a metric . As one example the search application can track an amount of time a user spends browsing search results after a search query is submitted to the search application and search results returned to the user. In one example if a user spends more time browsing search results relative to other search queries it may be deduced that the search query returned relevant results that held the user s attention. As another example the search application can track whether a user adds a search result that is a product to a virtual shopping cart in an electronic commerce system. The search application can deduce from this behavior that the search query provided relevant search results.

The computing device is configured to execute various applications such as for example an application server and a search application and potentially other applications. In one embodiment an application server is executed to provide for interaction between the applications on the computing device and clients and or mobile devices as will be described. To this end the application server may also include for example a web server application or similar application as can be appreciated. Other systems and or applications facilitated or executed by an application server may also include but are not limited to order fulfillment systems dynamic network or web page servers inventory systems or other systems as can be appreciated. However such systems are not described herein in detail.

Users of the search application whether in the context of an electronic commerce system a general purpose search engine or other system may attempt to use search terms or search phrases to locate one or more items in the data store . In the depicted non limiting embodiment users of the search application may submit search queries to the search application to attempt to locate products available via an electronic commerce system facilitated by the computing device .

The client and mobile device are representative of a plurality of devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer a personal digital assistant a cellular telephone set top box music players web pads tablet computer systems or other devices with like capability.

The client may be configured to execute various applications such as a browser and or other applications. The browser may be executed in a client for example to access and render network pages such as web pages or other content served up by the computing device and or other servers. The client may be configured to execute applications beyond a browser such as for example email applications instant message applications and or other applications. Accordingly in some embodiments a user can manipulate a user interface presented in the form of network pages shown on a display device via the browser or other application that causes interaction with the application server executed by the computing device . The application server executed on the computing device can facilitate the generation of user interfaces on a client by transmitting data to the client that can be rendered by a browser or other application to create the various user interfaces.

Another example of a device that can interact with the search application includes a mobile device which can execute a mobile application such as a browser that can render network pages generated by the search application . In another embodiment the mobile application can be tailored to access data provided by the search application and can include client side code that generates a user interface on a display device of the mobile device . Accordingly a user can submit questions to the search application as well as browse and or submit responses to questions published by the search application via the mobile application . The mobile device may comprise a mobile device including cellular telephone and data access location detection hardware and other hardware and software components. The mobile device can detect the location of a user using global positioning system GPS or other location detection functionality which can be submitted by the mobile application to the search application . In one example global positioning system GPS functionality provided by the mobile device can provide a location of the client to the mobile application which can in turn transmit a location of the client to the search application . In one embodiment the search application can utilize location based services and applications executed on the mobile device to determine a location of the user which can in some embodiments be employed to assist with generating suggested search queries.

It should also be appreciated that a client of the search application can be another software module that facilitates communication with a client or mobile device . As one example the search application can provide an application programming interface API through which another software application can access the functionality of the search application . In one embodiment a presentation layer module may interact with the search application by submitting a search request to a search application API which can respond with a search response that includes various search results. Other variations should be appreciated by a person of ordinary skill in the art.

Therefore in the context of the non limiting exemplary framework presented above in order to facilitate embodiments of the present disclosure the search application is executed to collect and process information relating to user search queries regarding related products product categories and or other data accessible to the computing device . To this end the search application can facilitate the generating of a search term user interface element that allows a user to submit search terms for items the user wishes the locate in the data store . In addition the search application can provide suggested search terms to a user based at least upon characters entered in a search term user interface provided by the search application on a client or mobile device.

The search application can employ various algorithms that take into account various factors and data to generate search query suggestions in response to a search query received from a client. Additionally there are numerous practical applications of the generating of suggested search queries as will be described herein. In one embodiment upon receiving a search query from a client or mobile device the search application can determine whether the search query is associated with any search results in the data store . In the case of an electronic commerce system facilitated by the at least one computing device the search application can determine whether the search query is associated with any products in the data store . As can be appreciated to make such a determination the search application can execute a similarity and or relevance algorithm against a search index that indexes various data regarding the products .

If in the above example there are no products associated with the search query in the data store the search application can identify whether there are historical search queries that are relevant and or similar to the search query that are associated with search results and or products in the data store . If there are historical search queries that are relevant and or similar to the search query the search application can generate a user interface such as a network page that includes one or more of these historical search queries as well as one or more of their associated search results.

In one embodiment of this disclosure in order to identify similar and or relevant historical search queries the search application can determine if there are historical search queries that are associated with search results in the data store by removing one or more search term from the search query. The search application can examine the various permutations of resultant queries that result from the removal of search terms from the search query and determine if they match search terms of a historical search query that is associated with search results. If the resultant search queries are associated with search results they can be identified as potentially similar and or relevant historical search queries relative to the original search query. The search application can then rank the historical search queries according to a number of search results associated therewith. As one example a historical search query so identified that is associated with the most search results can be designated as the highest ranked historical search query relative to the user supplied search query.

In some embodiments as described above the search application can remove search terms from a user supplied search query until an exact match is found as a historical search query that is associated with search results in the data store. In one embodiment of such a function the search application can be limited to only remove one search term from the user supplied search query. For example if a user supplied four term search query that yields no products when a search of the data store is executed using the search query the search application can determine whether there are three term historical search queries using any three of the four terms that are associated with at least one search result. In this way the likelihood that search application yields search results that are not relevant to the search query is reduced.

In another embodiment the search application can identify historical queries similar and or relevant historical search queries by calculating a phrase level edit distance of the search query relative to historical search queries . A phrase level edit distance as can be implemented in embodiments of the disclosure by determining a number of phrase or word substitutions or word additions and or deletions required to transform a search query submitted by a user into a historical query in the data store . Accordingly a historical query requiring the fewest number of word substitutions to arrive at the search query entered by a user can be ranked as the most similar and or relevant historical search query.

The search application can also identify relevant and or similar historical search queries in the data store by performing various text similarity functions. The search application can determine relevance and or similarity by calculating a cosine similarity jaccad similarity dice similarity and other textual similarity functions as can be appreciated. Accordingly in the case of a search query submitted by a user that yields no search results the search application can employ one or more textual similarity functions to identify the most similar historical search query that is associated with a search result and generate a user interface with one or more of the most similar historical search queries .

The search application can also identify the importance of words in a user supplied search query and assign a weight to each of the words according to its importance. Accordingly the search application can then identify a similar and or relevant historical search query using a vector based similarity function. In one embodiment in the case of a multi word user supplied search query the search application can determine whether the individual words in the search query constitute a historical query in the data store that is associated with one or more search results. The search application can then assign a higher weight to a word in the search query that is associated with a fewer number of search results greater than one. In this way common words that may be associated with a large number of search results are weighted less as it can be deduced that those search terms that are associated with fewer search results are more likely to yield a search result that is relevant to the user supplied search query.

The search application can also rank the identified historical search queries in various other ways independent of textual similarity that can facilitate the identification of a historical search query that can be provided to a user particularly in the case of a user supplied search query that yields no search results. As described above historical search queries that are identified as relevant and or similar to a user supplied search query can be ranked according to a number of search results with which they are associated. Historical search queries that are identified by the search application can also be ranked according to a conversion rate of the historical search query. In other words the search application can rank a historical search query in an electronic commerce system that yields in the highest number of purchases profits revenue or other metrics.

Historical search queries that are identified by the search application can also be ranked by popularity. In other words the search application can rank a historical search query submitted by the number of users who submitted the query the number of times the query was executed or other aggregate metrics. Historical search queries that are identified by the search application can also be ranked according to their query associations . For example if a user supplied search query is submitted with a filter the search application can rank a historical search query associated with the same filter higher than other historical search queries. In the case of an electronic commerce system facilitating multiple marketplaces as well as multiple product categories one example of a filter can be the marketplace and or product category filter supplied by the user when submitting the search query.

The search application can identify relevant and or similar historical search queries relative to a user supplied search query by applying one of the above methods. Additionally the search application can also apply any combination of the above factors and weight the factors in various ways. As one example the search application can identify relevant historical queries by removing search terms until an exact match of a historical query yielding search results is found. As noted above because the search application can perform such a process on the various permutations of queries that would result from removing one search term from a multi term search query this may result in multiple historical search queries that yield search results. Accordingly in one example the search application can generate a ranking of the historical search queries according to popularity conversion rate a marketplace association and any other factor as can be appreciated.

Additionally the search application can restrict the historical search queries that are analyzed to a particular time period. As one non limiting example the search application can analyze historical search queries in the data store that were submitted by other users in the thirty days previous to the time the user supplied search query is received.

Having described various ways that historical search queries that are similar and or relevant to a user supplied search query can be identified reference is now made to which depicts a user interface that can be facilitated by the search application in various embodiments of the disclosure. The user interfaces shown in can be generated by the search application or other software module in association with the search application . As one non limiting example a presentation layer can generate a network page in a presentation language and encodes for display search results and other data regarding search queries generated by the search application .

The non limiting user interface example shown in shows one application of the way in which historical search queries identified by the search application can be employed to generate search results for a user. In the depicted example a search query received by the search application in a search term user interface element yields no search results. In the context of an electronic commerce system facilitated by a computing device executing the search application the search query is not associated with any products available via the electronic commerce system.

Accordingly in response to a search query that does not yield any product search results the search application can identify similar and or relevant historical search queries in a data store . In the depicted example the search application removes a search term from the user supplied search query and determines whether the various permutations of the resultant query are stored in the data store as a historical search query that is in turn associated with product search results. In the search application also ranks the historical queries according to a number of product search results with which the historical search query is associated. Accordingly the search application facilitates generation of a user interface that includes the historical search queries displayed in a ranked order according to the number of product search results with which they are associated. The search application can also facilitate generation of a user interface that displays a subset of search results with each of the historical queries identified by the search application .

Reference is now made to which depicts an alternative example of a user interface facilitated by the search application . In a user supplied query is associated with a number of search results and the search application can identify historical search queries that are relevant and or similar to the user supplied search query to supplement the user interface with additional search results . In the depicted example the search application identifies related historical search queries by removing a search term from the user supplied search query and determining whether the resultant query corresponds to a historical search query . In the depicted example the search application can facilitate generation of a user interface that displays search results corresponding to the highest ranked historical search queries . As described above a historical search query that is related to a user supplied search query can be ranked according to various factors such as popularity conversion rate of associated search results profitability of a product search result and other factors as can be appreciated.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the search application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the search application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

Beginning with box the search application receives a user supplied search query having at least one search term. In box the search application identifies at least one historical search query that is similar and or relevant to the user supplied search query and in box the search application ranks the identified historical search queries according to various factors and or metrics that yield search results that are relevant and or similar to the user supplied search query. As described above the search application can determine relevance and or similarity by executing a textual similarity function to identify historical queries that have the most textual similarity to the user supplied search query.

As one example the search application can also remove a search term from the user supplied search query and determine whether a historical search query is associated with the resultant search query. The search application can also determine a phrase level edit distance of historical search queries from the user supplied search query or any other textual similarity function described above. The search application can rank search results according to various factors and or metrics as described above. The search application can identify a marketplace or other filter applied to the user supplied search and rank historical search queries performed in associated with the same filter higher than those that are not. The search application can also rank the historical search queries identified as relevant and or similar to the search query according to other metrics and or factors including but not limited to popularity conversion rate click through rate and other factors as described above. Additionally the historical search queries can be ranked based on a combination of various factors where each factor can be weighted to generate such a ranking.

With reference to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the application server search application and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java Javascript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the search application and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowchart of shows the functionality and operation of an implementation of portions of the search application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowchart of shows a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the search application that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

