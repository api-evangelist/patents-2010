---

title: Method and apparatus for controlling remote user interface client through the third remote user interface client
abstract: A method and apparatus are provided for controlling a Remote User Interface Client (RUIC), on which a remote user interface is displayed, through another RUIC. A message including control information that indicates a control action corresponding to a user input at the other RUIC is received at the RUIC from the other RUIC. The RUIC determines whether the control information is predefined information or undefined information. When the control information is predefined information, the control information is delivered from a web server of the RUIC to an application of the RUIC, and a control operation corresponding to the control information is executed by the application. When the control information is undefined information, the received control information is delivered from the web server to the application through a remote control plug-in in the RUIC to execute the control operation corresponding to the control information by the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08836482&OS=08836482&RS=08836482
owner: Samsung Electronics Co., Ltd.
number: 08836482
owner_city: 
owner_country: KR
publication_date: 20100901
---
This application is a National Phase Entry of PCT International Application No. PCT KR2010 005916 which was filed on Sep. 1 2010 and claims priority to a Korean Patent Application filed in the Korean Intellectual Property Office on Sep. 1 2009 and assigned Serial No. 10 2009 0082236 and a Korean Patent Application filed in the Korean Intellectual Property Office on Aug. 31 2010 and assigned Serial No. 10 2010 0084747 the entire disclosures of which are incorporated herein by reference.

The present invention relates generally to a method and apparatus for controlling a remote User Interface UI screen represented on a remote UI device and more particularly to a method and apparatus for transmitting undefined control information while maintaining the predefined control information in controlling the remote UE screen.

Studies to improve home network technologies have been conducted by many industry standards organizations such as Digital Living Network Alliance DLNA Home Audio Video Interoperability HAVi and Universal Plug and Play UPnP .

In home networks Remote User Interface RUI technology may be used to allow one device to control the functions of other devices. Briefly the RUI technology which is based on a client server architecture enables an RUI client to fetch a UI s from an RUI server so that a user may control the RUI server through the UI that is on the RUI client.

In this RUI technology in order for the third RUI device which is capable of remotely controlling a remote UI device to control the remote UI device or a remote UI screen represented in the remote UI device a protocol and method for transmitting control information is required.

The present invention has been made to address at least the above problems and or disadvantages and to provide at least the advantages described below. Accordingly an aspect of the present invention is to provide a method and apparatus for allowing a control UI represented in the third device which is capable of remotely controlling a remote UI device to transmit and process predefined control information and undefined control information on the remote UI device or a remote UI screen represented in the remote UI device.

In accordance with one aspect of the present invention a method is provided for controlling a Remote User Interface Client RUIC on which a remote user interface is displayed through another RUIC. A message including control information that indicates a control action corresponding to a user input at the other RUIC is received at the RUIC from the other RUIC. The RUIC determines whether the control information is predefined information or undefined information. When the control information is predefined information the control information is delivered from a web server of the RUIC to an application of the RUIC and a control operation corresponding to the control information is executed by the application. When the control information is undefined information the received control information is delivered from the web server to the application through a remote control plug in in the RUIC to execute the control operation corresponding to the control information by the application.

In accordance with another aspect of the present invention an RUIC is provided on which a remote user interface is displayed that is controlled by a user on another RUIC. The RUIC includes a web server for receiving from the other RUIC a message including control information that indicates a control action corresponding to a user input at the other RUIC determining whether the control information is predefined information or undefined information and transmitting the control information based on the determination. The RUIC also includes an application for receiving the control information from the web server when the control information is predefined information and for executing a control operation corresponding to the control information. The RUIC further includes a remote control plug in for when the control information is undefined information receiving the control information from the web server generating a specific event corresponding to the control information and transmitting the control information to the application.

Embodiments of the present invention are described in detail with reference to the accompanying drawings. The same or similar components may be designated by the same or similar reference numerals although they are illustrated in different drawings. Detailed descriptions of constructions or processes known in the art may be omitted to avoid obscuring the subject matter of the present invention.

In embodiments of the present invention an RUIC refers to a device that transmits an RUI and control information to a client in a client server architecture system. An RUIC receives from an RUIS a UI represented in the RUIC and one or more control UIs capable of controlling the UI represented in the RUIC. The RUIC and or an RUI rendered in the RUIC are controlled by the control UI. The third device which is an RUIC device controls an RUIC using an UI and may receive the UI from the RUIC or the RUIS. The third device may be a mobile device such as for example a mobile phone or a portable device such as for example a small display device with a communication function. In the following description the term RUIC device may be construed to refer to the third device.

Referring to an RUIC receives an RUI and control information from an RUIS through an interface which is now in use. As stated herein the control information may include not only the control information capable of controlling an RUI represented in an RUIC but also a UI. In the RUIC the received control information is separated by a control UI manager and a control UI is delivered to the third device for controlling the RUIC through the control UI manager . The control UI delivered through the control UI manager is represented or rendered on the third device and a user may control the RUIC using the control UI delivered through the control UI manager . The control UI manager which is a logical entity may exist inside or outside the RUIC .

Referring to the RUIC shown in is represented as a device that includes an RUIS and an RUIC and the RUIC has a Remote Control RC plug in .

Referring to the RUIC shown in is represented as an OITF that includes a Declarative Application Environment DAE entity which serves as an RUIC and a Digital Living Network Alliance DLNA RUIS entity . The third device of is represented as a remote device which includes a DLNA RUIC entity .

As illustrated in the control UI manager may be the DLNA RUIS or the RUIS of Consumer Electronics Association CEA 2014 and an embedded server functional entity not shown existing in the OITF for communication with mobile portable devices. In addition the control UI manager may function as the remote control plug in in the RUIC . Also the control UI manager may control an RUIC or an RUI being represented in the RUIC by means of a control UI represented in the third device through an interface between the RUIC and the third device of using UPnP or HTTP.

Upon receiving an RUI and a control UI from an RUIS an RUIC represents the RUI on its screen and transmits the control UI to the third device . The third device represents the received control UI on its screen and a user controls the RUIC or the RUI being represented in the RUIC through the control UI being represented on the screen of the third device . In addition the user transmits predefined control information to the RUIC using a conventional remote controller .

In this scheme when transmitting control information to the RUIC the third device or the remote controller generally sends control information predefined between the two devices and or and . For example when a STOP command is issued for the RUI being represented in the RUIC a single command STOP is transmitted from the third device to the RUIC . However in this scheme it is impossible to perform complex functions of stopping the RUI presently being represented in the RUIC representing on a screen a list of dramas having a high correlation with the RUI shifting the focus to the item most preferred by the user in the list and delivering information about the item to the control UI in the third device .

Furthermore with the addition of a new personalized channel function even in the case where the user intends to transmit fragmentary control information instructing to change the screen to a personalized channel because a key associated with the function is not predefined the user should map the function to a predefined button or should move to a personalized channel button represented on the screen of the RUIC using a navigation key to select the function. In particular in the former case where the function is mapped to a predefined button such mapping information should be predetermined between the RUIC and the third device . In this case however the RUIC may not be compatible when operating in conjunction with other RUICs or other third devices. In addition in the latter case where the navigation key is used the user is required to press click a number of buttons to select the personalized channel function. Embodiments of the present invention provide a method and an apparatus for transmitting control information undefined in another RUIC and delivering the undefined control information to the other RUIC or an RUI represented on the other RUIC so that the control information may actually control a control target.

Referring to if an RUI provided from an RUIS is transmitted to an RUIC the RUI is represented in a browser of the RUIC . The RUIC receives from the RUIS a control UI capable of controlling the RUI represented in the browser and transmits the received control UI to the third device through an embedded server . The third device represents the control UI on a browser so that the user may use it.

In bold lines indicate paths through which control information is delivered which includes the control UI and the RUI represented in the browser . For an interface between the browser and the embedded server protocol information about all predefined or undefined control information is defined. In addition an interface between the embedded server and the browser indicates an interface that transmits exiting control information when the control information transmitted from the third device is the same as the existing control information. An interface between the embedded server and an RC plug in indicates an interface for transmitting undefined control information.

Referring to interfaces and are the same as those illustrated in and an interface indicates an interface capable of delivering the control information which is delivered to the RC plug in to the RUI running in the browser .

If a user invokes a control action through a third device in step associated control information is transmitted to an embedded web server of an RUIC in the form of an HTTP message in step . The embedded web server includes a control handler application capable of handling an HTTP message transmitted from the third device . The control information is represented in the form of a Uniform Resource Identifier URI existing in a form tag or an a tag in a Hypertext Markup Language HTML message in a control UI rendered in the third device . Such URI forms may be represented as shown in .

Regarding the transmitted control information the control handler application in the embedded web server determines whether the control information is predefined control information in step . More specifically upon receiving an HTTP Request message from the third device the embedded web server determines whether a predefined parameter s key value e.g. a keychar is included in the HTTP message. If the key value of a predefined parameter is included in the HTTP message the control handler application in the embedded web server extracts a Value corresponding to the key value generates a predefined event inserts the extracted Value value in a parameter of the event and delivers it to an application in step . Based on the Value delivered through the parameter along with the event an operation corresponding to the key is performed in the application through a javascript function.

If the parameter key value delivered to the embedded web server is not a predefined parameter key values the control handler application in the embedded web server extracts a Value corresponding to a relevant parameter key value and transmits control information with the extracted Value to an RC plug in in step . The Value may be delivered from the embedded web server to the RC plug in in various different ways such as for example through internal socket communication.

Upon receiving the extracted Value the RC plug in delivers the extracted Value to the application presently connected to the RC plug in in the form of a Document Object Model DOM event such as on ReceivingMsg in step .

If the HTTP Request message is delivered from the third device into the embedded web server using the POST method with an HTTP Request Body including XML and Java Script Object Notation JSON contents the control handler application in the embedded web server extracts intact the HTTP Request Body and delivers it to the RC plug in in step . In step by generating an on ReceivingMsg event the RC plug in inserts the contents of the HTTP Request Body in a parameter of the event and delivers it to the application . The application can process the control information provided from the third device through a function for processing a parameter in the event.

In another method for processing Body contents of an HTTP Request if the contents e.g. extracted based on a keyword for controlling the RUIC are contained in the Body of the HTTP Request provided from the third device the control handler application in the embedded web server controls the RUIC by extracting the contents. If contents to be delivered to the application are contained the control handler application extracts only the related part and delivers control information to the application in the manner described above.

In short if control information transmitted from the third device is predefined control information the control information is directly transmitted from the embedded web server to a browser in the RUIC and the transmitted control information is transmitted to the application running in the browser in the RUIC on an event basis in step . The event refers to predefined events such as on KeyDown on KeyPress and on KeyUp. However if the control information is not predefined control information the control information is transmitted from the embedded web server to the RC plug in in step and the RC plug in commands the browser in the RUIC to generate an event and deliver undefined control information to the application in step . For example the event may be delivered in the name of on ReceivingMsg and a Device Handle value for the connected third device and control information may be delivered as a parameter. Regarding the control information Header and or Body information of the HTTP message may be delivered through the event parameter.

Referring to if a user presses a PLAY button for video on a third device PLAY information predefined between the third device and an RUIC may be delivered from the third device to the RUIC through an HTTP message . In in order to receive notification of the transmission of the predefined PLAY information the RUIC uses keychar as a key value and the keychar is transmitted to the RUIC after being matched with its associated information e.g. VK PLAY . Upon receiving control information the RUIC delivers the control information to a remote UI on an event basis. The RUIC may use predefined events such as on KeyDown on KeyUp and on KeyPress. In addition when sending an HTTP message to the RUIC the third device may instruct to deliver control information to the application using a specific event among the predefined events by inserting the control information into a URL parameter or the Body of the HTTP message.

Generally predefined information such as characters or numbers should be transmitted one by one. However as shown in if the third device uses an HTTP message in transmitting control information to the RUIC it is possible to deliver several letters or numbers at the same time. By writing a multi character number message e.g. Hello he or she desires to deliver through a control UI represented in the third device and then pressing a SEND button the user may send the message through the HTTP message in a collective manner. A key value may be msg and message information that the user desires to send may be inserted into a value corresponding to the key value.

In the third device may define a form action for an HTTP message insert a desired message into an HTTP BODY in the form of XML JSON or Plain Text and send it to the RUIC . For example as shown in the third device may represent the function described in in the form of XML insert it into an HTTP BODY and send it to the RUIC .

If an undefined command e.g. XML JSON URI or Plain Text is transmitted from the third device to an OITF terminal a remote control plug in in the OITF terminal sends an associated command to a DAE entity on an event basis. A first parameter of an on ReceivingMsg event function is a Device Handle value for the third device that sent the command and through the parameter value a return value for the third device that sent the command or an additional message may be transmitted. A second parameter thereof is a message value transmitted from the third device to the DAE entity.

As shown in the transmission step roughly includes three steps. In a first step an HTTP message is sent to the OITF terminal by a control UI running in the third device. The HTTP message may be sent in different ways for one case where a predefined key code value is sent and another case where an undefined command or message is sent.

In the former case where a predefined key code value is sent as defined in HTTP Request Header of Step URI rcf send keycode and a parameter key value are predefined and sent to the OITF terminal using a GET or POST method. Even in the latter case where an undefined command or message is sent as shown in Step a command or message may be inserted into an HTTP Body and sent through a predefined URI rcf send message using the POST method. In this manner for the two cases it is possible to define an independent protocol by dividing a URI or it is possible to integrate two different URIs into one URI and additionally use a parameter value indicating whether a command is a predefined one or an undefined one.

In a second step the control UI waits until it receives a response after sending the HTTP message in the first step.

In a third step if the command sending is successful the OITF terminal sends a 200 OK HTTP message to the third device. A proper message that the OITF terminal sends to the third device may be inserted into a Body of the HTTP message or the Body of the HTTP message may be empty.

As shown in if a user invokes a control command or control action to DLNA Functions of an OITF terminal through a control UI running in a DLNA Device in steps and the DLNA Functions checks a command type in step . If the command is a predefined key code value the DLNA Functions commands a DAE browser to deliver the key code value to a DAE application through an event e.g. on KeyDown on KeyPress on KeyUp etc. in step . However if the command is not a predefined key code value the DLNA Functions sends its associated command or message to a remote control plug in in step . In step the remote control plug in generates an on ReceivingMsg event function and sends a command or message to the DAE application allowing the DAE application to process the command with an RUIS in step .

As is apparent from the foregoing description according to embodiments of the present invention a control UI associated with an RUI being rendered in a third device can arbitrarily create control information without the need to consider control information predefined between devices thereby easily delivering undefined control information to the RUI. By doing so it is not necessary to realize an extended control function with limited control information making it possible to provide a more improved user experience.

While the invention has been shown and described with reference to certain embodiments thereof it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention as defined by the appended claims and their equivalents.

