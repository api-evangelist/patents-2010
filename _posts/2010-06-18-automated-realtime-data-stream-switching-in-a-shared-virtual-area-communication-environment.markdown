---

title: Automated real-time data stream switching in a shared virtual area communication environment
abstract: Switching real-time data stream connections between network nodes sharing a virtual area is described. In one aspect, the switching involves storing a virtual area specification. The virtual area specification includes a description of one or more switching rules each defining a respective connection between sources of a respective real-time data stream type and sinks of the real-time data stream type in terms of positions in the virtual area. Real-time data stream connections are established between network nodes associated with respective objects each of which is associated with at least one of a source and a sink of one or more of the real-time data stream types. The real-time data stream connections are established based on the one or more switching rules, the respective sources and sinks associated with the objects, and respective positions of the objects in the virtual area.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08578044&OS=08578044&RS=08578044
owner: Social Communications Company
number: 08578044
owner_city: Santa Clara
owner_country: US
publication_date: 20100618
---
This application is a continuation of prior U.S. patent application Ser. No. 11 923 629 filed Oct. 24 2007 now U.S. Pat. No. 7 769 806 the entirety of which is incorporated herein by reference.

When face to face communications are not practical people often rely on one or more technological solutions to meet their communications needs. These solutions typically are designed to simulate one or more aspects of face to face communications. Traditional telephony systems enable voice communications between callers. Instant messaging also referred to as chat communications systems enable users to communicate text messages in real time through instant to message computer clients that are interconnected by an instant message server. Some instant messaging systems additionally allow users to be represented in a virtual environment by user controllable graphic objects referred to as avatars . Interactive virtual reality communication systems enable users in remote locations to communicate over multiple real time channels and to interact with each other by manipulating their respective avatars in a shared three dimensional virtual space.

Interest in avatar based virtual reality communications systems has grown with the increased availability of computing systems that have high processing power and high bandwidth network connections. A primary goal of such a virtual reality system is to create a virtual space in which users can interact and communicate using real time data streams such as audio video and text chat streams. The virtual space typically is defined by a computer graphics specification that describes the visual geometry of the space the colors and textures that are mapped onto the visual geometry the collision properties that control how users maneuver within the space and auditory properties such as reverberation and sound absorption properties of the space.

In a typical virtual reality system each of the users communicates through an interface that is a source a sink or both a source and a sink of one or more of the real time data streams that are supported by the system. By default the virtual reality system typically connects each source represented in the virtual space to every sink represented in the virtual space subject to conditions specified in global switching rules local user preferences and the properties of objects within the virtual space. These conditions typically are specified in terms of relative distances between objects. For example some systems are configured so that real time data stream connections are not established if the separation distance between avatars exceeds a maximum threshold distance. In addition some objects have been designed to affect how data streams are rendered. For example a screen object obstructs views and sounds from a particular direction. Other objects are designed to affect the areas of interaction that are associated with a user s avatar when the user s avatar is within the interaction areas of these objects. For example a podium to adapter object increases the size of the audio interaction space of avatars within the interaction space of a virtual podium and a table adapter object folds the interaction spaces of all of the avatars seated at a virtual table into a common interaction space that spans the virtual table.

In one aspect the invention features a method of switching real time data stream connections between network nodes sharing a virtual area. In accordance with this method a virtual area specification is stored. The virtual area specification includes a description of one or more switching rules each defining a respective connection between sources of a respective real time data stream type and sinks of the real time data stream type in terms of positions in the virtual area. One or more real time data stream connections are established between network nodes associated with respective objects each of which is associated with at least one of a source and a sink of one or more of the real time data stream types. The real time data stream connections are established based on the one or more switching rules the respective sources and sinks associated with the objects and respective positions of the objects in the virtual area.

The invention also features apparatus operable to implement the method described above and computer readable media storing computer readable instructions causing a computer to implement the method described above.

In another aspect the invention features a computer implemented method of constructing a virtual area. In response to user input a model of the virtual area is created in a display monitor. The model includes geometric elements of the virtual area that are presented in the display monitor. In response to user input one or more switching rules are associated with the model of the virtual area. Each of the switching rules defines a respective connection between sources of a respective real time data stream type and sinks of the real time data stream type in terms of positions in the virtual area. A virtual area specification that describes the model of the virtual area and the one or more associated switching rules is generated. The virtual area specification is stored in a computer readable storage medium.

In another aspect the invention features a network switch for switching real time data stream connections between network nodes sharing a virtual area. The network switch includes a computer readable memory and a processing unit. The computer readable memory is operable to store a virtual area specification that includes a description of one or more switching rules each defining a respective connection between sources of a respective real time data stream type and sinks of the real time data stream type in terms of positions in the virtual area. The computer readable memory also is operable to store a table that includes network topology information describing routes to network destinations. The processing unit is operable to forward real time data stream packets between network nodes each of which is associated with a respective position in the virtual area and at least one of a source and a sink of one or more of the real time data stream types. The processing unit forwards the one or more real time data stream packets based on the network topology information and the one or more switching rules.

Other features and advantages of the invention will become apparent from the following description including the drawings and the claims.

In the following description like reference numbers are used to identify like elements. Furthermore the drawings are intended to illustrate major features of exemplary embodiments in a diagrammatic manner. The drawings are not intended to depict every feature of actual embodiments nor relative dimensions of the depicted elements and are not drawn to scale.

The embodiments that are described herein provide systems and methods of switching real time data stream connections in a shared virtual area communication to environment. These embodiments enable switching rules for connecting real time data streams between network nodes communicating through a shared virtual area to be tied explicitly to the specification of the virtual area.

These embodiments allow a designer of the virtual area to control not only the shape and appearance of the virtual area but also the way in which communicants connect to one another through real time data streams. In this way the area designer is able to optimize the real time data stream connections that are made between communicants sharing a virtual area for a particular communication purpose or for a particular communication environment e.g. personal space art gallery concert hall auditorium conference room and club house .

In addition by tying automatic switching rules to locations in the virtual area these embodiments reduce the complexity involved in connecting and disconnecting communicant nodes and increases the scalability of the system as compared to systems that establish and terminate connections based on attributes and properties of objects within a virtual space and systems that intertwine signal processing functions with stream routing connection and disconnection functions.

A virtual area is a representation of a computer managed space or scene. Virtual areas may be two dimensional or three dimensional representations. Oftentimes a virtual area is designed to simulate a physical real world space. For example using a traditional computer monitor a virtual area may be visualized as a two dimensional graphic of a three dimensional computer generated space. However virtual areas do not require an associated visualization to implement switching rules.

A virtual area specification is a virtual area description that is used in creating a shared virtual area communication environment.

A zone is a region of a virtual area that is associated with at least one rule for switching e.g. routing connecting and disconnecting real time data streams to between network nodes communicating through a shared virtual area.

A communicant is a person who communicates or otherwise participates in a shared virtual area communication session.

An object is any type of discrete element in a virtual area that is separate from the geometry of the virtual area. An object typically has attributes or properties that are separate and distinct from the attributes and properties of the virtual area.

A position in a virtual area refers to a location of a point or an area or a volume in the virtual area. A point typically is represented by a single set of two dimensional or three dimensional coordinates e.g. x y z that define a spot in the virtual area. An area typically is represented by the three dimensional coordinates of three or more coplanar vertices that define a boundary of a closed two dimensional shape in the virtual area. A volume typically is represented by the three dimensional coordinates of four or more non coplanar vertices that define a closed boundary of a three dimensional shape in the virtual area.

A network node is a junction or connection point in a communications network. Exemplary network nodes include but not limited to a terminal a computer and a network switch.

A computer is a machine that processes data according to machine readable instructions e.g. software that are stored on a machine readable medium either temporarily or permanently. A set of such instructions that performs a particular task is referred to as a program or software program.

A real time data stream is data that is structured and processed in a continuous flow and is designed to be received with no delay or only imperceptible delay real time data streams include digital representations of voice video user movements facial expressions and other physical phenomena as well as data within the computing environment that may benefit from rapid transmission rapid execution or both rapid transmission and rapid execution including for example avatar movement instructions text chat real time data feeds e.g. sensor data machine control instructions transaction streams and stock quote information feeds and file transfers.

A data source referred to herein simply as a source is any of a device part of a device e.g. a computer or software that originates data.

A data sink referred to herein simply as a sink is any of a device part of a device e.g. a computer or software that receives data.

A switching rule is an instruction that specifies one or more conditions that must be satisfied in order to connect or disconnect one or more real time data sources and one or more real time data sinks.

A stream mix is a combination of two or more real time data streams of the same type e.g. audio video chat and motion data .

A transceiver switch is a network device that cross connects network nodes e.g. clients servers and network devices by receiving analog or digital signals from a network node and transmitting the received signals or copies of the received signals to one or more other network nodes.

A stream handling topology is the organization of network routes over which real time data streams each of which may be a mixed stream or an unmixed stream are delivered to one or more network nodes.

The embodiments that are described herein provide systems and methods of switching real time data streams in a shared virtual area communication environment. Communicants typically access such an environment from respective network nodes that execute respective copies of a communications software program with two dimensional and three dimensional visualization capabilities. The communications software program controls client processes that present a respective view of the virtual area at a respective network node and establishes real time data stream connections with other network nodes. The communicants typically are represented in the virtual area by respective avatars which move about the virtual area in response to input commands that are input by the communicants at their respective network nodes. The communicant s view of the virtual area typically is presented from the perspective of the communicant s avatar which increases the level of immersion experienced by the communicant. Each communicant typically is able to view any part of the virtual area around his or her avatar.

As explained in detail below the virtual area includes zones that are associated with respective rules governing switching of real time data streams between the network nodes that are represented by the avatars in the virtual area . During a typical communication session the dashed lines demarcating the zones in are not visible to the communicants although there may be visual cues associated with such zone boundaries. The switching rules dictate how local connection processes executing on each of the network nodes establishes communications with the other network nodes based on the locations of the communicants avatars in the zones of the virtual area .

During a communication session each of the communicant network nodes generates a respective set of real time data streams e.g. motion data streams audio data streams chat data streams file transfer data streams and video data streams . For example each communicant manipulates one or more input devices e.g. the computer mouse and the keyboard that generate motion data streams which control the movement of his or her avatar in the virtual area . In addition the communicant s voice and other sounds that are generated locally in the vicinity of the network node are captured by the microphone . The microphone generates audio signals that are converted into a real time audio stream. Respective copies of the audio stream are transmitted to the other network nodes that are represented by avatars in the virtual area . The sounds generated locally at these other network nodes are converted into real time audio signals and transmitted to the network node . The network node converts the received locally generated audio streams into audio signals that are rendered by the speakers . The motion data streams and audio streams may be transmitted from each of the communicant nodes to the other communicant network nodes either directly or indirectly. In some stream handling topologies each of the communicant network nodes receives copies of the real time data streams that are transmitted by the other communicant network nodes. In other stream handling topologies one or more of the communicant network nodes receives one or more stream mixes that are derived from real time data streams that are sourced or originated from other ones of the network nodes.

In this architecture each of the network nodes transmits state changes such as avatar movements in the virtual area to each of the other network nodes. One of the network nodes typically the network node that initiates a communication session operates as an area server. In the illustrated embodiment the network node has assumed the role of the area server. The area server network node maintains global state information and serves as a data server for the other network nodes . The global state information includes a list of all of the objects that are to in the virtual area and their respective locations in the virtual area. The area server network node periodically sends the global state information to the other network nodes . The area server network node also registers and transmits initialization information to other network nodes that request to join the communication session. In this process the area server network node transmits to each joining network node a copy of a virtual area specification which may be stored in a local or remote database. The area server network node also ensures that other network nodes can synchronize to a global state if a communications fault occurs.

As explained in detail below the virtual area specification includes a description of geometric elements of the virtual area and one or more switching rules governing real time stream connections between the network nodes. The description of the geometric elements allows respective communications applications operating on the network nodes to present respective views of the virtual area to the communicants on respective display monitors. The switching rules dictate how connection processes executing on each of the network nodes establish communications with the other network nodes based on the locations of the communicants avatars in the virtual area.

As exemplified by the network node embodiment shown in each of the network nodes potentially has available a wide variety of sources and sinks. By enabling an area designer to control how the connections are established between the sources and sinks the embodiments that are described herein provide the area designer with much control over the sensory experiences of the communicants as they communicate and otherwise interact in the virtual area. In this way the area designer is able to optimize the virtual area for a particular communication purpose or for a particular communication environment e.g. art gallery concert hall auditorium conference room and club house .

A shared virtual area is defined by a specification that includes a description of geometric elements of the virtual area and one or more switching rules governing real time stream connections between the network nodes.

The geometric elements of the virtual area typically include physical geometry and collision geometry of the virtual area. The physical geometry describes the shape of the virtual area. The physical geometry typically is formed from surfaces of triangles quadrilaterals or polygons. Colors and textures are mapped onto the physical geometry to create a more realistic appearance for the virtual area. Lighting effects may be provided for example by painting lights onto the visual geometry and modifying the texture color or intensity near the lights. The collision geometry describes invisible surfaces that determine the ways in which objects can move in the virtual area. The collision geometry may coincide with the visual geometry correspond to a simpler approximation of the visual geometry or relate to application specific requirements of a designer.

The switching rules typically include a description of conditions for connecting sources and sinks of real time data streams in terms of positions in the virtual area. Each rule typically includes attributes that define the real time data stream type to which the rule applies and the location or locations in the virtual area where the rule applies. In some embodiments each of the rules optionally may include one or more attributes that specify a required role of the source a required role of the sink a priority level of the stream and a requested stream handling topology. In some embodiments if there are no explicit switching rules defined for a particular part of the virtual area one or more implicit or default switching rules may apply to that part of the virtual area. One exemplary default switching rule is a rule that connects every source to every compatible sink within an area subject to policy rules. Policy rules may apply globally to all connections between the area clients or only to respective connections with individual area clients. An example of a policy rule is a proximity policy rule that only allows connections of sources with compatible sinks that are associated with respective objects that are within a prescribed distance or radius of each other in the virtual area.

A wide variety of different three dimensional graphics design tools and game level design editors may be used to specify the geometric elements of a virtual area. In general the specification of the geometric elements of a virtual area can be described in any type of three dimensional description language including but not limited to VRML see e.g. http www.web3d.org x3d specifications vrml X3D see e.g. http www.web3d.org x3d specifications x3d COLLADA see e.g. http www.COLLADA.org and U3D see e.g. http www.w3.org .

In some embodiments the virtual area specification describes the geometric elements of the virtual area in accordance with COLLADA which is an XML based digital asset exchange schema that includes tags or elements i.e. words bracketed by and attributes i.e. attribute name value . In some of these embodiments the COLLADA description of the geometric elements of the virtual area is created using a three dimensional graphics tool such as SketchUp available from Google Inc. of Mountain View Calif. USA Maya or ads Max both available from Autodesk of San Rafael Calif. USA .

In some embodiments the virtual area specification describes the switching rules that are associated with the virtual area in accordance with the following XML based extension of the COLLADA schema. The model presented below is described as a proposed extension to the COLLADA Digital Asset Schema Release 1.4.1 Apr. 2006 specification available from http www.khronos.org collada . This extension is referred to herein as the COLLADA Streams Reference. 

The switching rules that are defined in accordance with the COLLADA Streams Reference refer to sources and sinks which typically are defined at the system level. In some embodiments extensibility features of the XML system underlying COLLADA are used to describe application specific stream types. In other embodiments the supported stream types are updated in the system. The COLLADA Streams Reference allows an area developer to define new stream types for a given area. In these cases if a communicant s system encounters an unknown stream type when entering an area the system activates a developer specified method to update the system with necessary information to handle the stream type and to configure appropriate stream handling within the communicant s system.

Typically there is a connection between a stream source type such as voice and the actual local stream source e.g. a particular microphone and any signal processing or other stream handling plug ins that are associated with that source e.g. a compressor limiter or a motion data stream source that generates avatar movement based on voice . The type voice typically is defined by the system so that any area designer can use it rather than requiring each designer to define that type on their own. Specifying particular plug ins that are either preferred or required on the other hand are common parts of application design. The COLLADA Streams Reference enables communicants to assign a stream source type like voice to a microphone a recording or a music source as well as define plug ins within a handler.

A similar situation affects sinks. Sinks for stream types like voice typically are established at the system level e.g. a headset or speakers . There may be additional plug ins specified by either the communicant or the area designer e.g. distance based fader levels and stereo pan based on relative location .

The elements of the COLLADA Streams Reference that describe zones and rules for connecting stream sources and sinks in terms of the zones are defined below.

The definition of is identical to except that instead of a complete description and so on it may simply point to another to derive its shape. The latter case typically means that the convex hull of that should be computed for use as a zone boundary indicated by the optional convex hull of attribute .

This is very useful because it allows for reusing a e.g. one used for rendering for stream handling to minimize the document size and to maintain a link to the original . In this sense a is analogous to the COLLADA element that is used for physics engines.

The required volume attribute indicates whether the zone is the interior or exterior of the mesh volume.

The minimal way to describe a is to specify its vertices via a element and its corresponding source and let the importer compute the convex hull of that point cloud.

Child elements must appear in the following order if present primitive elements where primitive elements is any combination of or .

In this example the element is a COLLADA element that describes the shape of a volume in a scene e.g. a virtual room . The element is a COLLADA Streams Reference element as defined above that establishes the relationship between a zone boundary and an existing mesh. The element declares a set of elements that contains the zones zonename1 and zonename2 .

The boundary of zonename1 corresponds to the interior volume of a convex hull that is computed by the referenced by the URI myArbitraryMesh . The boundary of zonename2 corresponds to the geometric mesh defined by anotherMesh .

The first switching rule that is associated with zonename1 specifies that one copy of each voice data stream that is sourced from zonename1 is sent to each object in zonename1 that is capable of sinking a voice data stream and having a participant role attribute. The first switching rule also specifies that a copy of each voice data stream that is sourced from zonename1 is sent to each object in zonename2 that is capable of sinking a voice data stream and has a moderator role attribute. The second switching rule that is associated with zonename1 specifies that one copy of each chat data stream that is sourced from zonename1 is sent to each object in zonename1 that is capable of sinking a chat data stream. The third switching rule that is associated with zonename1 specifies that one copy of each audio data stream that is sourced from zonename1 and associated with a moderator role attribute is sent to each object in zonename1 that is capable of sinking an audio data stream and is not associated with the moderator role attribute.

Here is an example of a COLLADA Streams Reference description of a virtual area that models a concert hall that contains two zones StageZone and AudienceZone.

In this example the boundary of StageZone corresponds to the geometric mesh defined by StageMesh . The boundary of AudienceZone corresponds to the geometric mesh defined by RoomMesh .

The switching rule that is associated with StageZone specifies that one copy of each voice data stream that is sourced from StageZone and associated with the lead singer attribute is sent to each object in AudienceZone that is capable of sinking a voice data stream and having an audience role attribute. The copies of the voice data stream are to be sent with a priority level of 1 and with a preference for a direct stream handling topology. The switching rule also specifies that a copy of each voice data stream that is sourced from StageZone and associated with the lead singer attribute is sent to each object in StageZone that is capable of sinking a voice data stream and having a all performers role attribute.

The first switching rule that is associated with AudienceZone specifies that one copy of each voice data stream that is sourced from AudienceZone is sent with a priority level of 2 to each object in AudienceZone that is capable of sinking a voice data stream. The second switching rule that is associated with AudienceZone specifies that one copy of each chat data stream that is sourced from AudienceZone is sent to each object in AudienceZone that is capable of sinking a chat data stream with a preference for a server mix.

The menus provide access to drawing tools commands and settings. The exemplary set of menus shown in include File Edit View Viewpoint Draw Tools Windows and Help. The set of menus also includes a Sococo Zones menu which provides access to tools for defining zones and stream connections in a virtual area. These tools may be integral components of the three dimensional to graphic design tool or may be provided as part of a plug in extension to a three dimensional graphics tool such as SketchUp available from Google Inc. of Mountain View Calif. USA Maya or 3ds Max both available from Autodesk of San Rafael Calif. USA .

The toolbars contain a user definable set of tools and controls. The exemplary set of toolbars shown in corresponds to tools and commands that typically are found in three dimensional graphic design tools such as the SketchUp 6 three dimensional graphics design software application program.

The drawing area is where an area designer creates a three dimensional model of a virtual area. In the drawing area of the graphical user interface shows a perspective view of a three dimensional virtual area . In the drawing area of the graphical user interface shows a plan view of the virtual area . The geometric elements e.g. the walls ceilings floors columns bench and light fixtures of the virtual area typically are defined using standard tools and commands that typically are found in three dimensional graphic design tools such as the SketchUp 6 three dimensional graphics design software application program.

As shown in in addition to geometric elements the virtual area additionally includes zones which are demarcated by dashed line boundaries. Each of the zones is associated with one or more respective real time data stream switching rules. The zones are specified using the tools and commands that are accessible through the Sococo Zones menu . In some embodiments the area designer may specify the boundaries of each of the zones using standard three dimensional graphics design tools and then select one or more of the Sococo Zones design tools to associate the boundary with a respective tag and to specify the attributes of that tag. In some of these embodiments the Sococo Zones design tools guide the user through the process of defining each zone such that it can be represented using the COLLADA Streams Reference specification described above e.g. and tags .

Communicants typically access a shared virtual area communication environment from respective network nodes. Each of these network nodes typically is implemented by a general purpose computer system or a dedicated communications computer system or console . Each network node executes communications processes that present a respective view of the virtual area at each network node and establish real time data stream connections with other network nodes.

As shown in the area client network node is implemented by a computer system that includes a processing unit a system memory and a system bus that couples the processing unit to the various components of the computer system. The processing unit may include one or more data processors each of which may be in the form of any one of various commercially available computer processors. The system memory may include a read only memory ROM that stores a basic input output system BIOS that contains start up routines for the computer system and a random access memory RAM . The system bus may be a memory bus a peripheral bus or a local bus and may be compatible with any of a variety of bus protocols including PCI VESA Microchannel ISA and EISA. The computer system also includes a persistent storage memory e.g. a hard drive a floppy drive a CD ROM drive magnetic to tape drives flash memory devices and digital video disks that is connected to the system bus and contains one or more computer readable media disks that provide non volatile or persistent storage for data data structures and computer executable instructions. A communicant may interact e.g. input commands or data with the computer system using one or more input devices e.g. one or more keyboards computer mice microphones cameras joysticks physical motion sensors such Wii devices and touch pads . Information may be presented through any of a two dimensional graphical user interface GUI or a three dimensional GUI that is presented to the communicant on a display monitor which is controlled by a display controller . The computer system also may include peripheral output devices such as speakers and a printer. The computer system connects to other area client network nodes and the area server through a network adapter also referred to as a network interface card or NIC .

A number of program modules may be stored in the system memory including but not limited to an operating system e.g. the Windows XP operating system available from Microsoft Corporation of Redmond Wash. U.S.A. a communications application a GUI driver and data . Exemplary types of data include input data output data and program data such as a registry or configuration database .

The operating system includes an executive that provides the base operating system services e.g. memory management process and thread management security input output and interprocess communication for creating a run time execution environment on the computer system. The registry typically contains the following information parameters needed to boot and configure the system system wide software settings that control the operation of operating system a security database and per user profile settings. A native operating system OS application programming interface API exposes the base operating system services of the executive to the communications application and other user applications. As used herein the term service or service module refers to a component of an operating system that provides a set of one or more functions.

In some embodiments the communications application includes processes that control the presentation of a respective view of a virtual area and objects in the virtual area on the display monitor and processes that control the switching of real time data streams between the area client network node and the other area client network nodes and the area server . The communications application interfaces with the GUI driver and the user input to present the views of the virtual area and to allow the communicant to control the operation of the communications application .

Embodiments of the communications application may be implemented by one or more discrete modules or data processing components that are not limited to any particular hardware firmware or software configuration. In general these modules may be implemented in any computing or data processing environment including in digital electronic circuitry e.g. an application specific integrated circuit such as a digital signal processor DSP or in computer hardware firmware device driver or software. In some embodiments the functionalities of the modules are combined into a single data processing component. In some embodiments the respective functionalities of each of one or more of the modules are performed by a respective set of multiple data processing components. In some implementations process instructions e.g. machine readable code such as computer software for implementing the methods that are executed by the embodiments of the communications application as well as the data it generates are stored in one or more machine readable media. Storage devices suitable for tangibly embodying these instructions and data include all forms of non volatile computer readable memory including for example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable hard disks magneto optical disks DVD ROM RAM and CD ROM RAM. Embodiments of the communications application may be implemented in any one of a wide variety of electronic devices including personal computing devices e.g. desktop computers mobile computers and communications devices network devices e.g. server computers routers switches and hubs game consoles cable TV and hybrid set top boxes and modems.

The execution environment stored in the system memory also includes a set of network transport protocols for transmitting and receiving real time data streams.

In some embodiments communications over the network are conducted in accordance with the Transmission Control Protocol Internet Protocol TCP IP . The TCP portion of the protocol provides the transport function by breaking a message into smaller packets reassembling the packets at the other end of the communication network and re sending any packets that get lost along the way. The IP portion of the protocol provides the routing function by assigning to the data packets addresses for the destination network and the target node at the destination network. Each data packet that is communicated using the TCP IP protocol includes a header portion that contains the TCP and IP information. The IP protocol provides no guarantee of packet delivery to the upper layers of the communications stack. The TCP protocol on the other hand provides a connection oriented end to end transport service with guaranteed in sequence packet delivery. In this way the TCP protocol provides a reliable transport layer connection.

In other embodiments communications over the network may be conducted in accordance with the User Datagram Protocol Internet Protocol UDP IP . UDP may be used in place of TCP in conditions when a reliable delivery is not required. For example UDP IP may be used for real time audio and video traffic where lost data packets are simply ignored because of any of the following reasons there is no time to retransmit or any degradation of overall data quality is acceptable.

Some embodiments may use the Java Media Framework JMF which supports device capture encoding decoding rendering and the Real Time Transport Protocol RTP . A variety of network protocols may be used in transmitting and receiving RTP data between the area client network nodes including peer to peer networking frameworks a centralized server using TCP sockets alone or in combination with UDP or multicast protocols.

The execution environment also includes hardware link level and access protocols which may correspond to the Data link and Physical layers of the Open System Interconnection OSI reference model.

In the illustrated embodiments communications between the area client network nodes and the area server are conducted in accordance with the TCP IP protocol. In these embodiments the computer system determines an IP address for each of its network interfaces before it communicates using TCP IP. This process may involve contacting a server to dynamically obtain an IP address for one or more of its network interfaces. The computer system may use a Dynamic Host Configuration Protocol DHCP to issue a request for an IP address to a DHCP server. In this regard the computer system broadcasts a DHCP request packet at system start up requesting allocation of an IP address for an indicated network interface. Upon receiving the DHCP request packet the DHCP server allocates an IP address to the computer system for use with the indicated network interface. The computer system then stores the IP address in the response from the server as the IP address to associate with that network interface when communicating using an IP protocol.

The area server maintains global state information and serves as a data server for the area client network nodes . Among the global state information that is maintained by the area server are a current specification of the virtual area a current register of the objects that are in the virtual area and a list of any stream mixes that currently are being generated by the area server .

As explained above the virtual area specification includes a description of geometric elements of the virtual area and one or more switching rules. Each of the switching rules defines a respective connection between sources of a respective real time data stream type and sinks of the real time data stream type in terms of to positions in the virtual area. In some embodiments the geometric elements of the virtual area are described in accordance with the COLLADA Digital Asset Schema Release 1.4.1 specification and the switching rules are described in accordance with the proposed COLLADA Streams Reference specification described above.

The objects register typically includes for each object in the virtual area a respective object identifier e.g. a label that uniquely identifies the object connection data e.g. an IP address enabling a network connection to be established with a network node that is associated with the object and interface data identifying the real time data sources and sinks that are associated with the object e.g. the sources and sinks of the network node that is associated with the object . The objects register also typically includes for each object one or more optional role identifiers which may be assigned explicitly to the objects by either the communicants or the area server or may be inferred from other attributes of the objects. In some embodiments the objects register also includes the current position of each of the objects in the virtual area as determined by the area server from an analysis of the real time motion data streams received from the area client network nodes . In this regard the area server receives real time motion data streams from the area client nodes tracks the communicants avatars and other objects that enter leave and move around in the virtual area based on the motion data. The area server updates the objects register in accordance with the current locations of the tracked objects.

In the embodiment shown in the area client network node includes an embodiment of the communications application see that includes a communications module a three dimensional visualization engine a chat engine and an audio processing engine . Each of the other network nodes typically includes an embodiment of a communication application that is that the same or similar to the one described in connection with area client network node .

The communications module controls the switching of real time data streams between the area client network node and the other area client network nodes and the area server . The communications module includes a stream switching manager and a bandwidth monitor . The stream switching manager handles the entry and exit of avatars and other objects associated with the area client network node to and from a virtual area. The stream switching manager also automatically determines how to switch e.g. route connect and disconnect real time data streams between the area client network node and the other area client network nodes and the area server . The steam switching manager makes these determinations based on the switching rules contained in the virtual area specification the current locations of the avatars and other objects in the virtual area and the real time data stream types that are associated with the avatars and other objects in the virtual area. In some embodiments the stream switching manager also factors into these determinations upload and download bandwidth constraints of any of the area client network node other network nodes or the area server . In addition the stream switching manager re evaluates the current set of connections either in response to events e.g. upload or download bandwidth faults and requests to enter or exit a virtual area periodically or both in response to events and periodically. As a result of the re evaluation of the current connections the stream switching manager may for example take any of the following actions request stream mixes from the area server drop stream mixes from the area server break one or more direct links with one or more of the other area client network nodes or form one or more direct links with one or more of the other area client network nodes .

In the course of managing the switching of real time data stream connections the stream switching manager maintains a set of configuration data including interface data a zone list and the positions of the objects that currently are in the virtual area. The interface data includes for each object associated with the area client network node a respective list of all the sources and sinks of real time data stream types that are associated with the object. The zone list is a register of all the zones in the virtual area that currently are occupied by the avatar to associated with the area client network node . When the communicant first enters a virtual area the stream switching manager typically initializes the current object positions database with position initialization information that is downloaded from the area server . Thereafter the stream switching manager updates the current object positions database with the current positions of the objects in the virtual area as determined from an analysis of the real time motion data streams received from for example one or more of the computer mouse the area client network nodes and the area server . In some embodiments the object positions are incorporated into the objects register . The configuration data that are maintained by the stream switching manager also includes copies of the objects register the stream mix list and the virtual area specification respectively these copies and typically are downloaded from the area server and represent a local cache of these data.

The three dimensional visualization engine presents on the display monitor a view of the virtual area and any objects that are in the virtual area. In this process the three dimensional visualization engine reads the virtual area specification data the objects register and the current object positions database . In some embodiments the three dimensional visualization engine also reads a communicant avatar database that contains images needed for rendering the communicant s avatar in the virtual area. Based on this information the three dimensional visualization engine generates a perspective representation i.e. an image of the virtual area and the objects in the virtual area from the point of view position and orientation of the communicant s avatar in the virtual area. The three dimensional visualization engine then renders the perspective representation of the virtual area on the display monitor . In some embodiments three dimensional visualization engine determines the visibility of the communicant s avatar in order to limit the amount of data that has to be exchanged processed and rendered to the portion of the virtual area that is visible on the display monitor .

In some embodiments the three dimensional visualization engine additionally is operable generate a plan view representation of the virtual area. In these embodiments the communicant may direct the three dimensional visualization engine to render one or both of the perspective representation of the virtual area and the plan view representation of the virtual area on the display monitor .

The communicant can control the presented view of the virtual area or the position of the avatar in the virtual area by transmitting commands to the communications module from an input device e.g. the computer mouse . The three dimensional visualization engine updates the view of the virtual area and the positions of the objects in the virtual area in accordance with updated positions in the current object positions database and re renders an updated version of the graphic representation of the virtual area on the display monitor . The three dimensional visualization engine may update the rendered image periodically or only in response to movement of one or more of the objects in the virtual area.

The chat engine provides an interface for outgoing chat text messages that are received from a local text input device e.g. a keyboard of the area client network node and incoming chat streams that are received from the other area client network nodes . The chat engine converts the chat text messages that are input by the communicant through the text input device into real time chat streams that can be transmitted to the other network nodes . The chat engine also converts the incoming chat streams into text signals that can be rendered on the display monitor .

The audio processing engine generates audio signals which are rendered by the speakers in the communicant s headset and converts the audio signals that are generated by the microphone in the headset into real time audio streams that can be sent to the other area client network nodes .

As explained above a shared virtual area is defined by a specification that includes a description of geometric elements of the virtual area and one or more switching rules governing real time stream connections between the network nodes. The switching rules typically include a description of conditions for connecting sources and sinks of real time data streams in terms of positions in the virtual area. Each rule typically includes attributes that define the real time data stream type to which the rule applies and the location or locations in the virtual area where the rule applies. In some embodiments each of the rules optionally may include one or more attributes that specify a required role of the source a required role of the sink a required priority level of the stream and a required or preferred stream topology.

The switching rules are implicated upon object entry into a virtual area movement of an object within the virtual area and object exit from the virtual area.

A communicant begins a communication session by starting the communications application see on an area client network node block . The communications application presents the communicant with a graphical user interface through which the communicant can interact with the application . The graphical user interface typically provides the communicant with an option to log in to a shared virtual area.

In response to receipt of a command to log in to a shared virtual area the communications application sends a login message to the area server block . The log in message typically includes log in information for identifying and authenticating the communicant.

The area server authenticates the log in information contained in the log in message block and notifies the area client of the result block .

If the authentication succeeds block the communications application transmits interface data to the area server block . The interface data includes for each object that will be entering the area and an identification of all real time data stream source types and sink types that respectively are associated with the object. If the authentication fails block the communications application stops the log in session and notifies the communicant of the failed log in attempt block .

The area server updates the objects register see to include the objects that are associated with the entering area client and the real time data stream source types and sink types that are associated with these objects block . The area server transmits configuration data to the entering area client block . The configuration data includes a copy of the virtual area specification see and a copy of the updated objects register see . In some embodiments the configuration data additionally includes a copy of the stream mix list see which identifies the mixes or combinations of the area client real time data streams that currently are being generated by the area server . The area server also transmits respective copies of the updated objects register to other area clients that are associated with objects in the virtual area block . As explained above the area server receives real time motion data streams from the area client nodes tracks the communicants avatars and other objects that enter and leave the virtual area based on the motion data and updates the objects register in accordance with the current locations of the tracked objects. The area server periodically transmits the updated objects register to the area clients that are associated with objects that are in the virtual area.

The communications application executing on the entering area client network node processes the virtual area specification and the objects register as described in detail below block . The communications application then establishes one or more real time data stream connections between the entering area client network node and one or more of the other area clients listed in the objects register based on the switching rules that are defined in the virtual area to specification the respective sources and sinks that are associated with the objects that are listed in the received copy of the objects register and respective the positions of the objects in the virtual area block . In the process of establishing these connections the communications application initiates and configures component modules that enable capture playback streaming and transcoding of that real time data streams that are available on the entering area client network node. These components typically include the chat engine the audio processing engine and other components e.g. a video processing engine for encoding video data received from a local video capture device and decoding real time video stream packets received from remote network nodes .

The stream switching manager initializes the local objects register see with the copy of the objects register received from the area server block . The stream switching manager also initializes the local stream mix list see with the copy of the stream mix list received from the area server block . The stream switching manager additionally initializes the local virtual area specification cache see with the copy of the virtual area specification that is received from the area server to block .

The stream switching manager builds a list see of occupied zones from the virtual area specification and the location of the communicant s avatar in the virtual area block . In this process the stream switching manager retrieves the current position of the communicant s avatar in the virtual area from the current object positions database which contains the coordinates of the avatar s current position in the virtual area. These coordinates are determined from the real time motion data stream received from an input device such as the computer mouse . The stream switching manager then compares the current position of the communicant s avatar with the zone definitions in the virtual area specification . The stream switching manager compiles the occupied zones list from all the zones in the virtual area specification that coincide with the current position of the communicant s avatar. For example in some embodiments the occupied zones list consists of all the zones whose meshes contain the current position of the communicant s avatar.

The stream switching manager determines a set of target real time data stream types that are defined for the zones in the occupied zones list block . The stream switching manager then determines a set of required real time data stream data from the set of target real time data stream types the positions of the objects in the virtual area and the switching rules defined in the virtual area specification block .

In some exemplary embodiments the stream switching manager ascertains ones of the objects excluding the given object that are contained in one or more of the zones from which ones of the real time data stream types in the target set are sourced and into which ones of the real time data stream types in the target set are sunk as defined by the one or more switching rules. The stream switching manager determines a connectable set of real time data streams based on the ascertained objects. Each of the connectable streams is at least one of i sourced from one or more of the network nodes that are associated with the ascertained objects and ii sunk into one or more of the network nodes that are associated with the ascertained objects. The stream switching manager then determines the set of required real time data stream data based on a matching of the sources and sinks that are associated with the connectable set of real time data streams.

In some of these embodiments the set of required real time data stream data corresponds to the real time data streams that can be sunk into the zones occupied by the communicant s avatar in accordance with the switching rules and the sinks that are available on the area client network node. In these embodiments the stream switching manager determines the ones of the sinks that are defined for the occupied zones that the associated network node is capable of sinking and then determines all of the sources of those sinks based on the positions of other objects in the virtual area and the switching rules. In this process the stream switching manager compiles the set of target real time data stream types from all the real time sink types e.g. audio chat video motion data that are associated with the communicant s avatar and are defined as sink types for any of the zones that are occupied by the communicant s avatar. The stream switching manager then determines from the switching rules all the target source zones from which each of the target real time data stream types can be sourced. The stream switching manager identifies from the objects register and the current object positions database all of the objects in the target source zones that are capable of sourcing one or more of the target real time data stream types from their current positions in accordance with the switching rules. The stream switching manager compiles the set of the required real time data stream data from the connection data that are associated with the identified objects in the objects register .

In one illustrative example shows a plan view of the virtual art gallery area see e.g. at a time when it is populated with the four avatar objects A B C and D. The avatars A and B are positioned in the zone and the avatars C and D are positioned in the zone . For the purpose of this illustrative example 

In this example the zone switching rules and the proximity policy rule provide respective switching conditions that determine how the connections between the avatars A B C and D are established.

In operation the instance of the stream switching manager operating on the area client node that is associated with avatar A would request to be connected to the real time voice video and chat streams that are sourced from the area client node that is associated with avatar B whenever avatar B is positioned within a proximity zone which defined by the prescribed distance r around avatar A. Likewise the instances of the stream switching manager operating on the area client node that is associated with avatar B would request to be connected to the real time voice video and chat streams that are sourced from the area client node that is associated with avatar A whenever avatar A is positioned within the prescribed distance rof avatar B. Since avatar B currently is outside the proximity zone of avatar A and vice versa the nodes associated with avatars A and B would not be connected to each other in the current exemplary state shown in .

Since zone only allows voice connections the instance of the stream switching manager operating on the area client node that is associated with avatar C would request to be connected to only the real time voice stream that is sourced from the area client node that is associated with avatar D assuming the proximity condition specified in the proximity policy rule is satisfied . Similarly the instance of the stream switching manager operating on the area client node that is associated with avatar D would request to be connected to only the real time voice stream that is sourced from the area client node that is associated with avatar C assuming the proximity condition specified in the proximity policy rule is satisfied .

Since the switching rules for zones and do not allow connections between zones and the sources and sinks that are associated with avatars A and B would not be connected to any of the sources and sinks that are associated with avatars C and D even if the proximity condition specified in the proximity policy rule is satisfied.

In some embodiments at least one of the area clients includes a network adapter e.g. an Ethernet interface card that provides connectivity to the network and is further configured to perform one or more of the functions of the area client stream switching manager including the functions needed to perform the method of .

In some exemplary embodiments after the stream switching manager has determined the set of real time data stream data that enables the network node to participate in a collaborative communication session with other network nodes in the shared virtual area block the stream switching manager determines the real time data stream connections that will result in the delivery of the required data stream data to the area client network node .

In some of these embodiments the stream switching manager determines a real time data stream handling topology that delivers the set of real time data streams to the given network node based at least in part on bandwidth capabilities of the given network node. In this process the stream switching manager determines a respective form in which to receive each of the real time data streams from an unmixed real time data stream and a stream mix derived from a combination of real time data streams. The stream switching manager also determines a network route over which each of the real time streams is received from a direct peer to peer network route and a network route mediated by one or more of the other network nodes. After the stream handling topology has been determined the stream switching manager establishes real time data stream connections between the given network node and other ones of the network nodes in accordance with the determined stream handling topology.

In accordance with this method the stream switching manager determines if the area client network node has sufficient bandwidth to receive the set of required real time data stream data directly from the other area client network nodes block . In this process the other area client network nodes transmit links requests to the area client network node . The link requests indicate the respective bandwidth requirements for transmitting the respective sets of real time data streams needed by the area client network node see V.D.2 below . The stream switching manager compares the overall bandwidth that is needed to establish the required direct connections with the download bandwidth that is available currently to the area client network node as reported by the bandwidth monitor see .

If the available bandwidth is at least equal to the overall required bandwidth the stream switching manager establishes direct connections with the other area client nodes that provide the required real time data stream data block . In this process the communications application and its associated run time environment creates sockets e.g. TCP sockets or specialized real time sockets optimized for performance between the area client network node and one or more of the other area client network nodes and the area server . The sockets that are created typically include for each real time data stream type one socket that carries the real time data stream and one socket for carrying control information e.g. quality of service information that is associated with transmission and reception of the associated real time data stream packets. The communications application handles and encodes real time data streams including recording them and rendering them into the client user interface. For example locally generated audio data video data and chat data typically are captured encoded and packetized into packets e.g. RTP packets which are sent out to the network .

If the available bandwidth is less than the required bandwidth block the stream switching manager checks the stream mix list see to determine if a stream mix that provides the required real time data stream data currently is being generated by the area server block . If the needed stream mix is available the stream switching manager establishes with the area server a connection over which a copy of the needed real time data stream mix is transmitted from the area server to the area client network node block . If the needed stream mix is not available the stream switching manager sends a stream mix request to the area server block .

In some embodiments the area server performs one or more of the functions of the area client stream switching manager . In these embodiments the area server establishes one or more real time data stream connections between the network nodes where the network nodes are associated with respective objects each of which is associated with at least one of a source and a sink of one or more of the real time data stream types. The area server establishes the one or more real time data stream connections based on the one or more switching rules the respective sources and sinks associated with the objects and respective positions of the objects in the virtual area in accordance with one or both of the methods of .

In some embodiments the connections between network nodes are established in two layers links and channels.

A link is established between two network nodes anytime there is at least one stream for transmission directly from one node to another. Links typically are one way and requested by the transmitter and accepted or rejected by the receiver. If rejected communication may still be possible through links up and down respectively with an area server either mixed or transceived as described herein . The link represents the full bandwidth allocated by the two nodes for real time communication. This allocation is dynamically determined based on overall network bandwidth available the quantity of bandwidth desired at any given time and the number of links. Adding and dropping links is an ongoing dynamic process. Movements within a complex area or from area to area are examples of when link connection and disconnection plays an important role in ongoing system behavior.

Each link is divided into channels that carry respective real time data streams. Channels are allocated to particular streams within the overall bandwidth that has been allocated to the link. Channel bandwidth can be changed dynamically based on changes in overall link bandwidth and the number and priority of channels within the link. The activation or deactivation of channels provides information that may be used by the link layer of a network node to change the desired bandwidth between two nodes. This information may also be shared between nodes to establish the level of bandwidth allocated to the link.

The connection framework provided by these embodiments enables the transmitting and recipient network nodes to make dynamic decisions about how to use the available bandwidth for the set of streams that are needed at any given time between two nodes in the context of the requirements for bandwidth amongst all of the links for each node. Reducing or increasing the bit rate for a voice channel while to increasing or decreasing the amount of bandwidth dedicated to a simultaneous file transfer or a video feed are examples of this allocation decision making process. The connection framework also enables recipient network nodes to make decisions regarding server mixes versus individual stream transmission based on available channel bandwidth within a link.

System settings as optionally modified by the virtual area specification provide parameters for determining relative bandwidth allocations for links and channels and the priorities of stream types and topologies. Because of these variable and dynamic requirements the up and down links between a network node and an area server or other high bandwidth intermediary node typically have high priority for local bandwidth because these links may be needed to transmit links and channels between various nodes. It is possible for a virtual area designer to create an virtual area that cannot be run by a given node because of bandwidth limitations at that node for links channels or both.

Bandwidth is often the scarce resource versus CPU time hard disk space graphic rendering capabilities and so forth . The layering of node connections into links and channels within links enables virtual area designers as well as system administrators to have control over how any given node that is involved in one or more real time sessions will respond when bandwidth is saturated. The layering allows individual links to be actively managed for minimum and maximum bandwidth. The layering also provides control over the selection of which nodes will receive a link versus requiring a connection through an area server .

In one illustrative example assume that a first network node and a second network node are communicating via a shared virtual area. Each of the first and second nodes requires a voice stream and a motion data stream from the other. To satisfy this need each of the first and second nodes establishes with an area server a respective up link which is divided into a voice channel and a motion data channel. The area server tranceives the voice streams that it receives from the first and second network nodes and mixes the motion data streams that it receives from the first and second network nodes. The area server establishes respective down links with the first and second network nodes and transmits the voice and motion data streams in voice and motion data channels allocated in the respective down links. While the first and second nodes are connected they may engage in file transfer which would then require a new channel in the link. If insufficient bandwidth is available for a reasonable data transfer rate the sender could drop its bit rate down for a lower quality voice conversation transceive the file transfer stream through the area server links or otherwise adjust channels and links in accordance with either the logic in the respective system settings of the first and second network nodes or the behavior specified by the virtual area specification.

If a third network node requests entry into the virtual area each of the first and second network nodes will require voice and motion data streams from the third network node and the third network node will require voice and motion data streams from each of the first and second network nodes bandwidth permitting. If a minimum amount of bandwidth is not available to receive the required streams from the third network node directly the first and second network nodes will either increase the up link bandwidth to the area server the down link bandwidth from the server or both. Alternatively the first and second network nodes will need one or more server mixes. If there still is insufficient bandwidth to make all of the connections required by the virtual area specification the third network node may be blocked from entering the virtual area or one or both of the first and second nodes may be dropped from the real time session in which case the dropped network nodes may need to retry or connect via faster network connections.

Later when the third network node leaves the virtual area each of the first second and third network nodes need to disconnect and release links and bandwidth allocated to connections with the first network node which may cause the first and second network nodes to reallocate the available bandwidth to the links between themselves.

In some embodiments the first and second network nodes have the ability to prioritize the links they have established with each other before allocating any to bandwidth to the third network node. In some embodiments the switching rules in the virtual area specification prioritize the connections. For example in some virtual area designs network nodes associated with certain role attributes e.g. moderator will have higher connection priority than other network nodes and therefore will always by allowed to link to the virtual area. In other virtual area designs connections are ranked by their respective ages with older connections ranked higher than younger connections. In these virtual areas the nodes associated with the oldest connections will be the last to be dropped from the communication session.

For each of one or more recipient network nodes the stream switching manager determines a respective link over which to transmit a respective transmission set of one or more real time data streams where each of the links has a respective link bandwidth block . Each of the links typically is a respective one way link from a respective one of the transmitting network nodes to a respective one of the recipient network nodes. In some embodiments however one or more of the links may be two way e.g. half duplex or full duplex links.

For each of the links the stream switching manager apportions the respective link bandwidth between one or more channels respectively allocated to the one or more real time data streams in the respective transmission set and transmits the one or more real time data streams in the respective transmission set to the respective recipient network node over the respectively allocated channels block . In some embodiments the stream switching manager allocates the respective bandwidth in an amount determined based on at least one attribute that is associated with the respective recipient network node. The attribute may correspond to any of the following exemplary attributes a position in virtual area occupied by an avatar associated with the recipient network node a link priority level associated with the recipient network node and a role identifier assigned to an avatar associated with the recipient network node. In some embodiments the apportioning of the respective link bandwidth is based on one or more stream priority levels respectively associated with the one or more real time data streams in the respective transmission set.

In some embodiments for each of the links the stream switching manager ascertains for each of the one or more real time data streams in the respective transmission set one or more respective bandwidth levels and allocates the respective link bandwidth to the link based on the ascertained bandwidth levels. In some embodiments the stream switching manager ascertains these bandwidth levels by checking the system level settings of the transmitting network node and checking the virtual area specification for any bandwidth levels that are assigned to any stream types within any of the zones of the shared virtual area. Each real time data stream type typically is associated with at least one system level bandwidth level. For example each of the area client network nodes typically includes a voice codec that provides different compression levels for voice streams and a video codec that provides different compression levels for video streams. Each of these codecs typically may be set to provide a respective range of compression levels from a default low e.g. preferred or target compression level to a high compression level. The virtual area specification may specify one or more area specific bandwidth levels for each of one or more real time data stream types. These levels may include a preferred bandwidth level a minimum bandwidth level and one or more bandwidth levels between the preferred and minimum bandwidth levels.

In some embodiments for each of the links the stream switching manager identifies a respective minimum bandwidth level for each of the real time data streams in the respective transmission set and calculates a respective minimum link to bandwidth level from the one or more identified respective minimum bandwidth levels. The stream switching manager typically drops any of the links in response to a determination that bandwidth available to the link fails to meet the respective minimum link bandwidth level for a defined period of time.

In some embodiments for each of the links the stream switching manager identifies at least two respective bandwidth levels in a respective preference hierarchy ordered from a respective first preferred bandwidth level e.g. a default bandwidth level to a respective second preferred bandwidth level e.g. a minimum bandwidth level for each of one or more of the real time data streams in the respective transmission set. The stream switching manager calculates a respective target link bandwidth level based at least in part on the identified first preferred bandwidth levels and calculates a respective fallback link bandwidth level based at least in part on the identified second preferred bandwidth levels. For each of the recipient network nodes the stream switching manager tries to establish the respective link to the recipient network node at the target link bandwidth level. In this process the stream switching manager compares the target link bandwidth level to a current amount of bandwidth that is available to transmit the respective transmission set the recipient network node also compares the target link bandwidth level to a current amount of bandwidth available to the receive the respective transmission set. In response to a failure to establish the respective link to the recipient network node at the target link bandwidth level the stream switching manager tries to establish the respective link to the recipient network node at the fallback link bandwidth level.

In response to the failure to establish any of the links the recipient network nodes to which those links were directed may attempt to drop at least one optional real time data stream in the transmission data set in an effort to accommodate existing bandwidth constraints. Alternatively such recipient network nodes may attempt to establish links that provide the required real time data stream data over respective network routes that are mediated by one or more of the other network nodes. For example a recipient network node may request a link from the area server that provides the required real time data stream data in either an unmixed format or a mixed format.

In some embodiments links may be secure. Secure links may have one or more of the following security properties authentication integrity and secrecy. Authenticated links use authentication techniques such as evaluating certificates that are distributed as part of a public key infrastructure such as the one provided by Verisign to help insure that each node is actually connecting to a known other node rather than an imposter node. Integrity techniques such as using secure hashing processes associated with the SHA algorithm are employed to insure that any changes made to link contents between transmission and reception can be detected. Secrecy techniques such as encrypting link contents with the AES encryption algorithm before transmission and decrypting link contents before use based on a shared key help insure that the contents of a link cannot be readily understood by an eavesdropper. These techniques may be selectively combined to achieve the desired security properties for particular communication sessions. When secure links are employed system settings and application design parameters may be adjusted to account for the additional overhead associated with establishing secure links. For example a link may be held at low or even zero bandwidth for a longer time in order to avoid the need to reestablish the link if bandwidth becomes available.

The enhanced link management functionalities of the stream switching manager that are described in V.D.2 may be implemented in any computing or data processing environment including in digital electronic circuitry e.g. an application specific integrated circuit such as a digital signal processor DSP or in computer hardware firmware device driver or software. In some embodiments these functionalities are implemented in a dedicated hardware module such as a network adapter and a network switch. Embodiments of such modules may be configured to provide accelerated performance of any of the following enhanced link management functions link creation link routing bandwidth allocation between multiple links transmitted from a given network node and management of bandwidth between channels within a given link.

Each of the host system and the other network nodes may be any type of device or system that connects to a network e.g. a personal computer a computer workstation a network switch a network hub and a network repeater . The host communications controller enables the host system to share access to the network medium . The MAC interface connects the communications controller to the network adapter . One exemplary type of MAC interface is the media independent interface MII which provides a parallel interface supporting communications with a parallel communications controller . Another exemplary type of MAC interface is the IEEE 802.03 compliant general purpose serial interface GPSI which supports serial communications with a serial communications controller .

The processing unit typically is a MAC processing unit that performs MAC layer functions including but are not limited to ensuring that the host system and the one or more other network nodes communicate with the correct frame format and protocol. In addition the processing unit is operable to perform the link and channel management functions that are described in V.D.2. To assist in the performance of these functions the processing unit stores in the memory a copy of the virtual area specification a link table and a channel table . As explained herein the virtual area specification may contain any of the following parameter values that influence the management of links and channels preferred minimum and intermediate bandwidth levels by stream type stream type priorities stream handling topology priorities and role identifiers assigned to objects e.g. avatars that are associated with the network nodes sharing a virtual area. The link table contains a list of the current links that are established with the other network nodes as well as the allocation of bandwidth between the current links. The channel table contains for each of the current links a list of the respective channels that are allocated to the real time data streams transmitted over the link as well as the allocation of bandwidth between the respective channels within the link.

The area server manages the connections between the area client network nodes in accordance with the current stream handling topology block . In this regard the area server maintains global state data including a definition of the virtual area and current object state data for all avatars and other objects in the virtual area. In this process the area server tracks the objects in the virtual area and in some embodiments the area server maintains recent history data cache which is used for real time synchronization of the area client network nodes. The area server also reevaluates connections in response to object entry into the virtual area object exit from the virtual area and bandwidth fault.

In response to receipt of a request for real time data stream data from a requesting area client network node block the area server discovers the bandwidth capabilities of the area client network nodes that are associated with objects in the objects register see block . In some embodiments each of the area client network nodes either dynamically or periodically transmits its current upload bandwidth capacity and its current download bandwidth capacity to the area server .

The area server selects a real time data stream handling topology that delivers the real time data stream data to the requesting area client network node to block . The area server typically selects a topology based on the discovered bandwidth capabilities of the area client network nodes. In some embodiments the area server selects a stream handling topology in which the requesting network node and the other network nodes receive a maximal number of unmixed real time data streams. Such unmixed real time data streams enable the area client network nodes to render the streams with higher quality and with the option of applying local processing e.g. one or both of audio stereo pan processing or fader envelope processing to more realistically place avatars in a stereo soundscape to the streams to achieve a more immersive experience or particular application objective e.g. 5.1 audio handling or specialized avatar motions .

In some embodiments the virtual area specification specifies stream attribute values for one or more real time data stream types in one or more zones of the virtual area. In these embodiments the area server selects a stream handling topology based on the one or more stream attribute values specified by the virtual area specification. In some exemplary virtual area designs the virtual area specification assigns a first stream priority attribute value to a first real time data stream type and assigns to a second real time data stream type a second stream priority attribute value different from the first stream priority attribute value. For example in the second COLLADA Streams Reference example described above the voice streams sourced from the StageZone and associated with the lead singer role attribute are assigned a priority level of 1 whereas voice streams sourced from the AudienceZone are associated with a priority level of 2. With respect to these types of virtual area design specifications the area server attempts to select stream handling topologies that prioritize the first and second real time data stream types differently in accordance with the different first and second stream priority attribute values. For example with respect to the second COLLADA Streams Reference example faced with bandwidth availability constraints the area server would create and transmit stream mixes for the voice streams sourced from the Audience Zone before creating and transmitting stream mixes for the lead singer voice streams sourced from the StageZone.

In some exemplary area designs the virtual area specification assigns a first stream topology attribute value to a first real time data stream type and assigns to a second real time data stream type a second stream topology attribute value different from the first stream topology attribute value. For example in the second COLLADA Streams Reference example described above the voice streams sourced from the StageZone and associated with the lead singer role attribute are assigned a topology attribute value of direct whereas the chat streams sourced from the AudienceZone are associated with a topology attribute value of server mix . With respect to these types of virtual area design specifications the area server attempts to select different stream handling topologies for the first and second real time data stream types in accordance with the different first and second stream topology attribute values. For example in some cases the area server selects for the first real time data stream type a stream handling topology that delivers ones of the real time data streams of the first type to one or more of the given network node and the other network nodes in a mixed stream format e.g. the chat streams sourced from the AudienceZone in the second COLLADA Streams Reference example and selects for the second real time data stream type a stream handling topology that delivers ones of the real time data streams of the second type to one or more of the given network node and the other network nodes in an unmixed stream format e.g. the voice streams sourced from the StageZone and associated with the lead singer role attribute in the second COLLADA Streams Reference example .

The area server negotiates with the area clients to reconfigure the stream handling topology into the selected topology block . In this process the area server negotiates with the area clients to establish a set of connections between the area clients and optionally the area server that deliver the required data stream data to the requesting area client network node. In some cases the area server sends respective requests to the area clients for one or more real time data streams that will either be relayed to the requesting area client node or combined with other real time data streams into a stream mix that will be delivered the required real time data stream data to the requesting area client network node.

If the selected topology does not require a stream from the area server block the area server manages the connections between the area client network nodes in accordance with the current stream handling topology block . For example in some cases see e.g. the selected topology delivers the required real time data stream data to the requesting area client network node directly from one or more of the area client network nodes obviating the need for the area server to transmit that data.

If the selected topology does require a stream from the area server block the area determines from the stream mix list see whether the required server stream is available i.e. currently is being generated block . The required server stream may be in the form of a copy of a real time data stream that is sourced by one of the other area client network nodes or in the form of a stream mix that currently is being produced from two or more real time data streams that the area server is receiving from ones of the area client network nodes other than the requesting area client network node. If the required stream is available block the area server transmits a copy of the required server stream to the requesting area client network node block and manages the area client connections in accordance with the current stream handling topology block .

If the required stream is not available block the area server obtains the required server stream block . In this process the area server may generate a copy of a real time data stream that is received from one of the other area client network nodes or it may generate a stream mix from two or more real time data streams that are received from ones of the area client network nodes other than the requesting area client network node. If a new stream mix is generated block the area server updates the stream mix list block transmits the required server stream to the requesting area client block and manages the area client connections in accordance with the current stream handling topology block . If a new stream mix is not generated block the area server transmits the required server stream to the requesting area client block and manages the area client connections in accordance with the current stream handling topology block .

This section describes exemplary ones of the stream handling topologies that are selectable by the area server in block of the method shown in .

The area server generates from the received data stream sets respective sets of stream mixes where each set includes the real time data stream types e.g. audio video chat and motion data that are required by a respective one of the area client nodes . In this process the area server separates the incoming real time data stream packets by type e.g. video audio chat motion data and control and by the source identifier and reassembles the packets by sequence number. The area server then combines the streams of the same type into a respective one of the stream mixes and transmits the respective sets of stream mixes to a respective one of the area client network nodes .

As compared to the peer to peer topology shown in the topology reduces the number of network connections that are required for each area client thereby reducing the load on each area client and their network the load on the area to server however is increased.

Each of the area client network nodes generates a respective stream mix from the real time data streams that are received from the other area client network nodes for each required real time data stream type e.g. audio video chat and motion data . In this process each area client separates the incoming real time data stream packets by type e.g. video audio chat motion data and control and by the source identifier and reassembles the packets by sequence number. Each area client then sequences the reassembled packet stream by correlated timestamps and source ID to maintain synchronization between the real time data streams during rendering.

The scalability of the topology is constrained by the heavy upload requirements on the area client network nodes. The topology also places a heavy load on the network when unicast transmissions are used to send the required real time data stream as shown in . In some embodiments the local network load is lightened by configuring each of the area client network nodes to send a single respective multicast transmission of each of the required data streams to one or more switches that distribute copies of the multicast stream to the other network nodes.

Each of the area client network nodes generates a respective stream mix from the real time data streams that are received from the other area client network nodes for each required real time data stream type e.g. audio video chat and motion data . In this process each area client separates the incoming real time data stream packets by type e.g. video audio chat motion data and control and by the source identifier and reassembles the packets by sequence number. Each area client then sequences the reassembled packet stream by correlated timestamps and source ID to maintain synchronization between the real time data streams during rendering.

The scalability of the topology is constrained by the heavy upload requirements on the area client network nodes. The topology also places a heavy load on the network when unicast transmissions are used to send the required real time data stream as shown in . In some embodiments the local network load is reduced by configuring each of the area client network nodes to send a single respective multicast transmission of each of the duplicated required data streams to one or more switches that distribute copies of the multicast stream to the other network nodes.

Each of the area client network nodes generates a respective stream mix from the real time data streams that are received from the area server network node for each required real time data stream type e.g. audio video chat and motion data . In this process each area client separates the incoming real time data stream packets by type e.g. video audio chat motion data and control and by the source identifier and reassembles the packets by sequence number. Each area client then sequences the reassembled packet stream by correlated timestamps and source ID to maintain synchronization between the real time data streams during rendering.

In some embodiments the area server dynamically determines a real time data stream handling topology that delivers a specified set of real time data streams to a given network node. In this process the area server selects as the stream handling topology a topology that involves switching real time data streams between ones of the network nodes in a first set through a central network node and switching real time data streams over direct peer to peer network connections between ones of the network nodes in a second set. The first set of nodes may be different from the second set of nodes. As explained above each of the network nodes has at least one object associated with a respective position in the virtual area and at least one of a source and a sink of one or more of the real time data stream types. The area server forwards real time data stream packets between the network nodes in the first set based on the one or more switching rules and the determined real time data stream handling topology.

In the topology each of the area client network nodes uploads a respective set of required real time data streams to the area server . In the example illustrated in the area server relays a copy of the stream set that was uploaded by the area client to the area client the area server relays a respective copy of the stream set that was uploaded by area client to each of the other area clients and the area server relays a copy of the stream set that was uploaded by the area client to the area client . In addition the area client receives the required stream set directly from the area client and the area client receives the required stream set directly from the area client . The stream sets include all the real time data streams that are required to connect the objects in the shared virtual area in accordance with the virtual area specification and their positions. Each of these streams is packetized into packets each of which includes a header that contains a source identifier field that identifies the source of the packet a sequencing number and other information.

Each of the area client network nodes generates a respective stream mix from the real time data streams that are received from the other area client network nodes for each required real time data stream type e.g. audio video chat and motion data . In this process each area client separates the incoming real time data stream packets by type e.g. video audio chat motion data and control and by the source identifier and reassembles the packets by sequence number. Each area client then sequences the reassembled packet stream by correlated timestamps and source ID to maintain synchronization between the real time data streams during rendering.

The topology enables the bandwidth that is available on the area client network nodes to be optimized so that the area client network nodes receive a maximal number of unmixed real time data streams.

The network switch is a computer networking device that includes a memory a processing unit that includes at least one computer processor and a network adapter through which the network switch connects to the area client network nodes and the area server . In operation the network switch connects network segments by inspecting data packets determining the source of the packets and forwarding the packets to their respective destinations. For each packet the network switch compares the destination and source hardware addresses to a table of network segments and addresses. If the segments are the same the packet is dropped otherwise the network switch forwards the packet to the proper segment. The network switch typically determines the network destination to which the packet is forwarded based on a forwarding table which contains preferred routes for packet forwarding. The network switch typically generates the forwarding table by applying a routing algorithm to a routing table which contains routes to network destinations in the vicinity of the network switch . The routes in the forwarding table and the routing table typically are specified by information describing the network topology between the network switch and the network destinations. The network switch does not forward bad or misaligned packets. The network switch may operate at one or more of the OSI layers including the physical layer the data link layer the network layer and the transport layer. Exemplary implementations of the network switch include but are not limited to network switches network routers and network hubs.

In some embodiments the network switch switches real time data stream connections between network nodes sharing a virtual area. The network adapter receives a virtual area specification from the area server . The virtual area specification includes a description of one or more switching rules each defining a respective connection between sources of a respective real time data stream type and sinks of the real time data stream type in terms of positions in the virtual area. The computer readable memory stores the virtual area specification and one or both of the routing table and the forwarding table where each of the tables includes network topology information describing routes to network destinations. The processing unit forwards real time data stream packets between two or more of the network nodes where each of the network nodes is associated with a respective position in the virtual area and at least one of a source and a sink of one or more of the real time data stream types. The processing unit forwards the one or more real time data stream packets based on the network topology information and the one or more switching rules.

In some embodiments the network switch performs one or more of the functions of the area client stream switching manager . In these embodiments the processing unit establishes one or more real time data stream connections between the network nodes where the network nodes are associated with respective objects each of which is associated with at least one of a source and a sink of one or more of the real time data stream types. The processing unit establishes the one or more real time data stream connections based on the one or to more switching rules the respective sources and sinks associated with the objects and respective positions of the objects in the virtual area in accordance with one or both of the methods of FIGS. and .

In some embodiments the network switch performs one or more of the functions of an area server network node. In particular the network switch performs some or all of the real time data stream switching functions of the area server see e.g. . In this regard the network switch receives configuration data from the area server . The configuration data includes a copy of the virtual area specification see and a copy of the objects register see . The network switch initializes a local virtual area specification cache with the copy of the virtual area specification and initializes a local objects register with the copy of the objects register . Periodically in response to events e.g. avatar movement or both periodically and in response to events the network switch updates the local objects register with information obtained from tracking the communicants avatars and other objects that enter leave and move around in the virtual area based on motion data received from the area clients . The network switch determines the real time data stream connections that deliver the required data stream data to the area client network nodes in accordance with the method of . This process includes determining an optimal stream handling topology that provides the required real time data stream data to the area client network nodes .

In some embodiments the network switch dynamically determines a real time data stream handling topology that delivers a specified set of real time data streams to a given network node. In this process the processing unit selects as the stream handling topology a topology that involves switching real time data streams between ones of the network nodes in a first set through a central network node and switching real time data streams over direct peer to peer network connections between ones of the network nodes in a second set which typically is different from the first set . As explained above each of the network nodes is associated with a respective position in the virtual area and at least one of a source and a sink of one or more of the real time data stream types. The processing unit forwards real time data stream packets between the network nodes in the first set based on the one or more switching rules and the determined real time data stream handling topology.

The embodiments that are described herein provide systems and methods of switching real time data stream connections in a shared virtual area communication environment. These embodiments enable switching rules for connecting real time data streams between network nodes communicating through a shared virtual area to be tied explicitly to the specification of the virtual area. These embodiments allow a designer of the virtual area to control not only the shape and appearance of the virtual area but also the way in which communicants connect to one another through real time data streams. In addition by tying automatic switching rules to locations in the virtual area these embodiments reduce the complexity involved in connecting and disconnecting communicant nodes and increases the scalability of the system as compared to systems that establish and terminate connections based on attributes and properties of objects within a virtual space and systems that intertwine signal processing functions with stream routing connection and disconnection functions.

