---

title: Database query resource management using select statement condition
abstract: A resource allocation system for a database environment. In a specific embodiment, the resource allocation system is adapted to implement a method that includes receiving a first signal from a user input device to identify a SQL SELECT statement to be used in a future database query. The system receives a second signal from the user input device to determine a resource to be used when the SELECT statement is executed. The system then stores, in a storage device, an indication of the resource in association with the SELECT statement so that when the SELECT statement is executed the resource is used.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08661024&OS=08661024&RS=08661024
owner: Oracle International Corporation
number: 08661024
owner_city: Redwood Shores
owner_country: US
publication_date: 20100121
---
Databases are employed in various demanding applications including Customer Relationship Management CRM search engines corporate billing applications and so on. Desired database performance characteristics may depend upon how computing resources are allocated to given tasks. In general it is desirable to improve the speed or efficiency of a database search or query.

A database may be any collection of data. Computing resources may be any devices or mechanisms used to perform a computation or task involving one or more software or hardware instructions. Examples of computing resources include central processing unit CPU time or cycles allotted to a given computing task memory such as disc storage space or Random Access Memory RAM network bandwidth or transfer mechanisms etc.

Resource management is particularly important in database computing environments that include substantial amounts of old rarely used data in addition to recent and or frequently used data. To facilitate managing data storage resources tools products such as Oracle s Information Management Lifecycle ILM software and or Oracle s Automatic Storage Management ASM may be employed. Such applications may facilitate organizing and separating relatively recent data from older rarely used accessed or modified data. Data management policies may be assigned to different groups of data.

An example resource allocation system includes a user interface that is adapted to receive input corresponding to a database query a database a database server in communication with the database and the user interface functionality such as hardware and or program code in a first module adapted to monitor one or more characteristics of the database query and provide a signal in response thereto and second functionality such as hardware and or program code in second module adapted to automatically selectively adjust computing resources used by the query statement based on the signal.

In a more specific embodiment the resource allocation system is adapted to receive a signal from a user input device to identify a SQL SELECT statement to be used in a future database query receive a signal from the user input device to determine a resource to be used when the SELECT statement is executed and store in the storage device an indication of the resource in association with the SELECT statement so that when the SELECT statement is executed the resource is used.

Certain embodiments disclosed herein may facilitate preventing ad hoc queries from accessing historical data or using CPU and or I O resources to prevent reduction in overall data base performance. Furthermore embodiments disclosed herein may be particularly useful in applications where older data is not in a partitioned table and where it is not possible to move data to less expensive archival discs. Furthermore in packaged applications where a database administrator does not wish to manually archive data to slower or more cost effective discs or other hardware certain embodiments disclosed herein are particularly desirable. In addition in database environments such as Oracle DBMachine where use of different disk groups spanning beyond the exadata cells is prohibitive and where storage of historical data in expensive cells is impractical certain embodiments disclosed herein are particularly useful for facilitating resource management. Furthermore in environments where disk space is considered inexpensive and where all the data in the database resides in a single disk group certain embodiments disclosed herein provide an alternative mechanism for resource management.

A further understanding of the nature and the advantages of particular embodiments disclosed herein may be realized by reference of the remaining portions of the specification and the attached drawings.

Although the description has been described with respect to particular embodiments thereof these particular embodiments are merely illustrative and not restrictive.

While the present application is discussed with respect to allocating computing resources such as Central Processing Unit CPU time and or IO request queues to be processed by data subsystem. for execution of a Data Manipulation Language statement DML such as an Structured Query Language SQL query statement based on analysis of contents of the statement such as the contents of a SQL WHERE clause embodiments are not limited thereto. For example computer executable statements or instructions other than DML statements may be allocated computing resources in accordance with the present teachings without departing from the scope thereof.

For clarity certain well known components such as hard drives processors operating systems power supplies and so on have been omitted from the figures. However those skilled in the art with access to the present teachings will know which components to implement and how to implement them to meet the needs of a given application.

For the purposes of the present discussion a statement such as a SQL statement may be any instruction implemented in computer code or machine readable syntax. A statement typically represents a specific instruction and may be included among a group of instructions comprising a given software application or module. A SQL statement is considered a type of DML statement. For the purposes of the present discussion a DML may be any language or specification of computer readable instructions that may be used to access modify and or add or delete data in a database. Note that this definition departs from the notion that a DML is restricted to languages that are used to modify add or delete data in a database since a DML as defined herein may further include a language or computer readable syntax used only to access data. A DML statement such as a SQL query statement may be any computer readable instruction adapted to access data in a database and or to select modify delete insert or perform other input output operations on a database.

The example system includes a database server in communication with a resource manager which is coupled to a database . The resource manager is adapted to control allocation of various computing resources to a given database task such as execution of a SQL query statement. A user interface which includes a user input device such as a keyboard and or mouse and a display device such as a computer monitor is coupled to the database server . The user interface allows user access to and use of an application running on the server . Note that while various modules are shown in separate blocks the various modules may be implemented in a single block such as the database without departing from the scope of the present teachings.

For illustrative purposes the application is shown including a SQL module coupled to a select trigger . The SQL module includes requisite computer code for supporting execution of SQL statements. For the purposes of the present discussion a module may be any grouping of functionality such as a set of computer readable instructions. The functionality need not be physically co located and may be implemented in hardware and or software.

SQL statements may be entered by or otherwise initiated via the user interface . SQL statements may be used to access select insert modify delete etc. data in the database . The application may include additional functionality other than that shown by the constituent modules . For example the SQL module and the select trigger may be implemented in or via various applications such as Oracle s Information Management Lifecycle IML Automatic Storage Management ASM and so on. Applications such as Virtual Private Database VPD Application Programming Interface API and or Oracle s Fine Grain Auditing software may be employed by those skilled in the art to implement the select trigger without undue experimentation.

The select trigger communicates with the SQL module and the resource manager . In the present specific embodiment database queries and other I O database operations initiated via the database server and user interface are shown routed through a resource manager . However functionality of the resource manager may instead be distributed among other modules such as the application database or via an underlying operating system.

For illustrative purposes the resource manager is shown including a first resource group specification and a second resource group specification . Each group specification includes instructions specifying which resources are to be used by a query statement associated with or assigned to that specific group specification. For example the first resource group specification may limit CPU time allocated to execute a query associated with or assigned to that group specification.

The select trigger includes computer code also called instructions for monitoring SQL query statements and triggering a particular resource management policy based on one or more predetermined conditions also called criteria. In a specific implementation the select trigger employs information in a SQL WHERE clause and compares the information to the predetermined condition. An example condition includes an indication in the WHERE clause that data being queried was entered in the database over two years ago or that the data being queried has not been used for 1 year. For the purposes of the present discussion a SQL WHERE clause may be any portion of a SQL query statement occurring after the word WHERE. A SELECT statement may be any computer language construct defining or partially defining a query. A query may be any request for information or access to data e.g. from a database. A SQL query statement typically includes a WHERE clause specifying what data to select from a database. For some queries and indication of the age of the data being accessed may readily be determined with reference to the WHERE clause. The select trigger facilitates associating resources with a given SELECT statement based on whether the contents of the WHERE clause meet one or more desired conditions i.e. criteria.

The select trigger includes an event handler in communication with a trigger policy . The event handler may include computer code also called instructions for identifying or indicating results derived from activation of the trigger policy . The trigger policy may include instructions for determining if a given SQL query statement includes a WHERE clause meeting a predetermined condition and then associating a resource management policy to the query statement.

In the previous example wherein the data being accessed is over two years old and has not been accessed within a year the trigger policy may identify and or assign a resource management policy to the associated query statement where the policy limits CPU allocation time for implementation of the query. For example the select trigger may associate a query statement with the first resource group specification in the resource manager . Another example policy might specify that the query statement must wait for execution if other query statements are currently being executed or waiting for execution.

Any combination of the example computing resources or portions thereof may be selectively allocated for execution of a given SQL query statement when the WHERE clause thereof meets a desired condition as determined by the select trigger . For example a given SQL query statement may be allocated less RAM for a given task and may be relegated to use a specific I O level resource or group thereof.

In an example operative scenario a user employs the user interface to configure the select trigger to trigger upon certain SQL query statements as desired. The user may specify any trigger criteria or conditions such as conditions pertaining to the age of the data being accessed and so on. The conditions may be maintained via the trigger policy module .

In the present example the user then enters a SQL query by entering a SQL SELECT statement also called a query statement where the statement specifies data to be retrieved from the database . If the SQL query statement contains a WHERE clause meeting the predetermined criteria or conditions then the trigger policy is said to be fired. When fired the trigger policy triggers allocation of resources via the resource manager for execution of the SQL query statement. Upon execution of the SQL query statement the event handler may return an indication to the user interface indicating how the SQL query statement was handled what resources where used what percentage of resources were used and so on. The exact behavior of the event handler and the trigger policy are application specific. For example the event handler need not return all information pertaining to how a given SQL query was executed.

An example method that may be implemented by the system includes monitoring one or more statements used to access or modify data in a database determining when a monitored statement includes a clause meeting a predetermined criterion and providing a signal in response thereto and selectively allocating computing resources to implement the statement in response to the signal.

In an example implementation where the select trigger is implemented via Oracle Fine Grain Auditing with conditional auditing and using dynamic resources policy management the select trigger determines if rows to be returned from a query statement satisfy a column condition. If the column condition is satisfied then the query statement is executed via a default resource management group specification. Otherwise the query statement is executed via an Oracle Information Management Lifecycle resource management specification i.e. configuration.

A second step includes using select trigger to monitor database queries for queries satisfying one or more of the specific conditions.

In a third step upon detection of a query satisfying one or more of the specific conditions computing resources are allocated for execution of the query based on the contents of the WHERE clause. For example the select trigger of may increase or decrease CPU resources such as CPU time I O prioritization for execution of a SQL query statement based on whether a WHERE clause thereof meets one or more predetermined criteria. Note that the trigger policy is not limited to just criteria from the where clause. It can include additional conditions such as which named user is executing the query or DML operation the time of day the query is executed etc.

A fourth step includes execution of the query using the computing resources previously allocated therefor.

The system includes a user interface coupled to a database . The database includes a DML module in communication with the user interface and a DML statement analyzer . The DML statement analyzer is coupled to a database control module which includes a resource allocator adapted to allocate computing resources for execution of a DML statement. The database control module interfaces the database tables with the user interface via the DML module and the DML statement analyzer .

In operation a user such as a DataBase Administrator DBA may employ a DML such as SQL to enter various DML statements including but not limited to queries. The DML module includes instructions for handling and enabling use of DML statements to query and perform I O operations on the database tables .

The user entered DML statement is analyzed by the DML statement analyzer for predetermined characteristics of the DML statement. The predetermined criteria or conditions with which to compare the predetermined characteristics may be configured by a user via the user interface . An example of a DML statement characteristic and corresponding criterion includes a DML statement that includes a statement to write new data to an important table. The importance of the table represents the criterion and may be predetermined by the user. In an example scenario where the DML analyzer determines that the DML statement seeks to write data to a table with an importance score greater than a predetermined threshold execution of the corresponding DML statement may be assigned a high priority.

The priority value assigned to the DML statement is then used by the resource allocator to ensure that the DML statement is allocated more resources than statements not writing to tables that are as important. Alternatively or in addition the execution of the DML statement may be moved ahead in a queue of DML statements waiting to be executed. Note that these examples are merely illustrative and various types of DML statements and contents may be prioritized based on various criteria. Furthermore exact details specifying how resources are allocated to a given DML statement based on its assigned priority are application specific and may vary among implementations and applications.

Execution of the DML statement to write to a high priority table may be controlled in accordance with the allocated resources via appropriate computer code or instructions included in the database control module . Such details may be programmed by those ordinarily skilled in the art without undue experimentation.

Note that implementations whereby a given DML statement is prioritized via information other than the contents of the DML statement are also possible. For example the identity of the user may be required to log on to the database . Different users may be associated with different priorities rights or privileges. For example a high priority user such as a corporate president might cause the DML statement analyzer to default all DML statements entered by the high priority user to high priority. Execution of corresponding DML statements may then be afforded maximum available computing resources for execution of the DML statements.

A subsequent determining step determines when a received DML I O statement or corresponding operation meets a given criterion. An example criterion includes a condition that data to be accessed by a SQL query statement as specified by the WHERE clause thereof is older or more recent that a predetermined date.

Next a prioritizing step includes prioritizing one or more DML statements meeting the given criterion or criteria based on the age or type of data that is subject of the I O operation corresponding to the one or more DML statements. Alternatively or in addition an identification of a user that initiated one or more DML statements is used to facilitate prioritization of DML the DML statements. The given criterion is said to include the condition that the user initiating the query statement has been assigned a particular privilege. Prioritization may be realized by assigning a number to a DML statement where the number is indicative of the relative priority of the DML statement.

In a subsequent allocating step the availability of one or more computing resources or amounts or quantities thereof for execution of the one or more DML statements is are adjusted in accordance with any specified priority values associated therewith or assigned thereto. Note that resource allocation could involve queuing the one or more DML statements for execution ahead of other statements assigning a resource group for execution of the one or more DML statements and so on.

Finally an executing step includes executing the received DML statements in accordance with the allocated resources.

A second receiving step includes receiving a second signal from the user input device where the second signal facilitates determining a resource to be used when the identified SELECT statement is executed. The second signal may also or alternatively facilitate determining how much of a given resource such as percentage of CPU time within a given time interval to allocate for execution of the SELECT statement.

The resource may include a rate of processor cycles amount of processor time an amount of random access memory transmission bandwidth a type of storage media such as a magnetic disk drive and so on. Each of these resources may be further classified into identifiable categories. For example processor cycles may be classified as those cycles use to perform database operations storage sub system operations etc.

Subsequently a storing step includes storing in a storage device an indication of the resource in association with the SELECT statement so that when the SELECT statement is executed the resource is used. The storage device may correspond for example to request for small and large I O for the select trigger shown in .

The method is illustrative and more or fewer steps than those shown may be implemented without departing from the scope of the present teachings. For example the method may further include the step of designating a specific table e.g. one of the tables of to be used with the SELECT statement.

The various methods described herein may be adapted to run on various processing systems such as the first system of or the system of . A data storage device such as hard drive may accommodate storage of data in the databases and or storage of computer readable instructions for implementing various functionality described herein.

Any suitable programming language can be used to implement the routines of particular embodiments including C C Java assembly language etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single processing device or multiple processors. Although the steps operations or computations may be presented in a specific order this order may be changed in different particular embodiments. In some particular embodiments multiple steps shown as sequential in this specification can be performed at the same time.

Particular embodiments may be implemented in a computer readable storage medium for use by or in connection with the instruction execution system apparatus system or device. Particular embodiments can be implemented in the form of control logic in software or hardware or a combination of both. The control logic when executed by one or more processors may be operable to perform that which is described in particular embodiments.

Particular embodiments may be implemented by using a programmed general purpose digital computer by using application specific integrated circuits programmable logic devices field programmable gate arrays optical chemical biological quantum or nanoengineered systems components and mechanisms may be used. In general the functions of particular embodiments can be achieved by any means as is known in the art. Distributed networked systems components and or circuits can be used. Communication or transfer of data may be wired wireless or by any other means.

It will also be appreciated that one or more of the elements depicted in the drawings figures can also be implemented in a more separated or integrated manner or even removed or rendered as inoperable in certain cases as is useful in accordance with a particular application. It is also within the spirit and scope to implement a program or code that can be stored in a machine readable medium to permit a computer to perform any of the methods described above.

As used in the description herein and throughout the claims that follow a an and the includes plural references unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise.

Thus while particular embodiments have been described herein latitudes of modification various changes and substitutions are intended in the foregoing disclosures and it will be appreciated that in some instances some features of particular embodiments will be employed without a corresponding use of other features without departing from the scope and spirit as set forth. Therefore many modifications may be made to adapt a particular situation or material to the essential scope and spirit.

