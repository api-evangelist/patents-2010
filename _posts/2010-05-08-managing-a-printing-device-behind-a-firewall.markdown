---

title: Managing a printing device behind a firewall
abstract: One embodiment is method that receives, at a computer, a request to manage a printing device located behind a firewall that blocks the request. The request is executed with an agent authorized to communicate through the firewall and with the computer and the printing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436414&OS=09436414&RS=09436414
owner: Hewlett-Packard Development Company, L.P.
number: 09436414
owner_city: Houston
owner_country: US
publication_date: 20100508
---
Printing across a network is complicated since firewalls can restrict or prevent a user from accessing a printer. Firewalls can also prevent monitoring print status and controlling the printer across the network.

Example embodiments are systems methods and apparatus that monitor and manage a cloud printing device over the internet through a firewall. The cloud printing device is monitored and controlled with one or more agents and REST API representational state transfer application program interface calls. Functions of the printing device are managed through a web browser interface on a mobile handheld device that communicates with the printing device through a cloud.

In one embodiment a user manages the printing device during a print operation or during non printing times for a specific device management operation. By way of example a portable or handheld electronic device of the user can communicate with the printing device in real time i.e. as an event occurs and determine the status of different operations at the printing device or manage control functions of the printing device. Management of the printing device occurs regardless of whether the printing device is located behind a firewall since communication with the printing device occurs through an agent using REST API calls. The services for monitoring and managing the operations and control functions of the printing devices are exposed as REST API and accessible through internet protocols technologies such as HTTP hypertext markup language and XML extensible markup language .

A cloud server or internet print service and agent enable a user with an electronic device to manage printing copying scanning services of the printing device. For example one or more agents determine a status of each printing device registered with the cloud and then post this status information to a cloud web server. The printing device is located behind a firewall which blocks incoming communications e.g. communications originating with the electronic device of the user . The agent however is located within the firewall or authorized to communicate with the printing device. When a user logs into the cloud this status information is provided from the agent to the electronic device of the user. In this manner the user is able to receive status information through a firewall which otherwise prohibits an electronic device from making requests directly to the printer since the firewall blocks such requests.

In one embodiment an agent of the printing device periodically communicates or reports a status of the printing device using REST API. Agent software is embedded inside the printing device as a firmware component or is exposed as an agent running on a computer or server in the cloud or computer network. In one embodiment the agent functions as a bridge between the internet print service or cloud server which operates outside of the firewall and the printing device which operates inside the firewall . As explained below the agent gathers printer information and transmits or posts this information to a logical or virtual device which in turn provides the information to an electronic device outside of the firewall where the printing device is located.

The cloud server or electronic device of the user is not able to make requests directly to the printing device since the printing device is located inside a firewall. Instead communication between the printing device and the user s electronic device initiates from the agent. The electronic device is able to communicate indirectly with the printing device through the agent. For example the user on an electronic device transmits a request to change or monitor a function or parameter of the printing device. This request is stored in the virtual device in the cloud and not sent directly to the printing device since the firewall would block the request. Subsequently the agent for the printing device periodically polls or communicates with the virtual device and or cloud server to determine if any requests are pending for execution by the agent. For example the agent polls the cloud server or virtual device at regular intervals such as the agent polling the device every 15 seconds or less . The virtual device notifies the agent of the request when the agent initiates a communication or the agent discovers this request at the virtual device and then acts upon the request e.g. retrieves the requested information or performs the requested function . The agents are able to listen for GET requests from the user and or actively post information i.e. non requested information to the virtual device. GET requests retrieve information identified in the request.

A status of the printing device such as busy out of paper toner low etc. is propagated by the agent to the internet print service or cloud server using a REST API call. The status information is persisted in the abstracted printer device on the cloud server or web server. A user of an electronic device can view this status information using corresponding REST API calls or any such interface provided by an application. The user and electronic device can also manage or change control functions such as operating parameters of the printing device using REST API calls in conjunction with one or more agents that are able to communicate inside the firewall and with the printing device.

With example embodiments control of the printing device occurs through two separate cases 1 installing a hardware component inside the printing device or 2 enabling disabling components of printing device.

Regarding the first case i.e. installing a hardware component inside the printing device a user installs a duplexing unit in a printing device. The printer agent propagates configuration changes to the internet print service or cloud server and such changes are reflected in the print copy scan capabilities of the printing device. The information is further applied to the jobs destined to this printing device.

Regarding the second case i.e. enabling disabling components of printing device a user desiring to cancel a print job currently in execution issues a REST API request to an abstracted device of the web server or cloud server. The agent such as a printer agent installed in the printing device polls and acquires the user request through REST API calls and reacts to the users request.

As used herein and in the claims representational state transfer or REST is software architecture for distributed hypermedia systems such as the internet and World Wide Web web . In REST architectures clients initiate requests to servers that process the requests and return responses. These requests and corresponding responses are built around the transfer of representations of resources such as a document that captures the current or intended state of a resource. The client is generally in a rest state or transitioning between different application states. While in the rest state the client interacts with the device but creates no load and consumes no per client storage on the set of servers or on the network. The client begins sending requests when it is ready to transition to a new state. While a request is outstanding the client is in a transitioning state. The representation of each application state contains links that are used the next time the client chooses to initiate a new state transition.

REST architecture uses resources i.e. sources of specific information that are referenced with a global identifier such as a uniform resource identifier URI string of characters that identify a resource on the internet in hypertext transfer protocol HTTP . To manage such resources components on the network e.g. agents and servers communicate through a standardized interface such as HTTP and exchange representations of the resource. Devices on the network servers clients tunnels etc. can make a request and an application can communicate with a resource by knowing 1 the identifier of the resource and 2 the action of the resource. The application is not required to know whether devices exist between itself and the server or the device holding the information i.e. the application does not need to know whether there are caches proxies gateways firewalls tunnels etc. between it and the device storing the requested information . The application is able to understand the format of the information representation returned which is typically an HTML document extended markup language XML document an image plain text or any other content.

As used herein and in the claims application program interface or API is an interface that a software program uses to enable other software to communicate with the software program. Applications use API to define how other software programs can make calls to and request services from the application.

In one example embodiment the API is language independent and can be called from different programming languages. In other words the API is not bound to a given process or system and can be provided as remote procedure calls and web services.

In one embodiment the API is defined as a set of HTTP request messages along with a definition of the structure of response messages such as being expressed in XML.

In one embodiment REST web service or REST web API is a web service that uses HTTP and principles of REST. By way of example such a web service is a collection of resources that include the base URI for the web service the type of data supported by the web service such as XML or other MIME type and the operation supported by the web service using HTTP methods such as POST GET PUT DELETE etc. .

With example embodiments a user can print copy scan to the printing device from a remote electronic device. Users are able to print emails documents photos web pages etc. from a variety of different portable devices running different operating systems. Mobile users can print copy scan to one or more printing devices from any worldwide location that provides internet access regardless of whether the user is located at home in the office on the road in a foreign country etc. and regardless of whether the printing device is located within or behind a firewall.

The cloud print system provides printing services to users who connect to the cloud through the internet. Users are able to print copy scan to their printing devices from different geographical locations around the world upon installing a printing device and establishing ownership or user rights with the printing device.

Generally a print job work item is performed with the following operations handling user requests creating a job list and processing the job list. The print job request handler acts on user requests. The job list creator creates job steps and the job list processor executes the job steps according to the assigned priorities. These tasks are more fully discussed in U.S. patent application having Ser. No. 12 544 223 entitled Web Printing which was filed 20 Aug. 2009 and incorporated herein by reference.

Some of the printing devices are located behind or within one or more firewalls. For example printing device A is located behind firewall A and printing device P is located behind firewall P. Printing device B is not located behind a firewall.

As used herein and in the claims a firewall is part of a computer system or network that is designated to block unauthorized access while permitting authorized communications. For example firewalls which can be implemented in hardware and or software prevent unauthorized network users such as internet users from accessing private networks or private devices connected to the network such as printing devices connected to cloud servers . All messages entering or leaving pass through the firewall which examines each message and blocks those messages that do not meet a specified security criteria.

According to block an agent monitors the status of a cloud printing device to obtain status or information. The agent can be embedded in the cloud server the printing device or located in another location in the computer system . For example cloud server M includes one or more agents M printing device B not within a firewall includes one or more agents B and printing device P within a firewall P includes one or more agents P.

As used herein and in the claims an agent is a software program that acts or functions for a user electronic device or other program in order to accomplish a task and or perform a designated function.

The agents shown generally at include one or more of POST agents and GET agents that are authorized to pass through the firewall. A POST agent passes through the firewall and automatically posts information to the logical or virtual device without receiving a request for such information e.g. the POST agent posts paper tray out of paper printing device has paper jam printing device is busy processing a print copy scan request etc. . is an example method executed by a POST agent. By contrast GET agents actively retrieve information from the printing device upon receiving a request for the information e.g. a user utilizes a GET agent to manage a control function or change a printing parameter of the printing device . is an example method executed by a GET agent.

By using agents a remote electronic device located outside of the firewall can manage obtain or observe operational status information or parameters of the printing device that include but are not limited to determine status of a current print copy scan job e.g. pending in a queue currently executing print copy scan complete etc. determine health of the printing device e.g. online and ready for print copy scan offline error jam etc. determine general status of a parameter or control function e.g. list print copy scan jobs in queue determine estimated time to complete print copy scan determine level of ink or paper quantity available for printing etc. Further examples of such parameters include but are not limited to characteristics desired by the user such as printing with a certain color level of security geographical location print quality time frame to complete print job number of copies single or double sided printing scaling to paper size selected pages to print orientation selection of font location to store the document e.g. store on cloud server etc. Such functions may require remote operations that are supported apart from controls physically located on the console of the printing device. The user or electronic device is able to view manage and change such control functions.

According to block the agent communicates through a firewall with REST API the status or information of the printing device to the logical or virtual device located outside of a firewall in which the printing device is located. For example a POST agent B P or M posts status or information to virtual device .

According to block the virtual device communicates the status or information to a cloud server which communicates the status to an electronic device. The logical or virtual device can store the status information e.g. until a subsequent request is made for the information or while the user is offline and or forward the status information to the cloud server. For example when a user of electronic device A logs onto the cloud server A the status information stored in virtual device is provided to the user such as information informing the user that the printer is out of paper is busy has a paper jam has low toner etc. . The printing device can be shared among multiple users. While a first user is printing to the device one or more additional users are notified that the printing device is temporarily busy.

According to block an electronic device requests status or information of a printing device and the request is queued at a virtual device. For example electronic device A requests information about printing device P. This request is stored or queued at virtual device . The request is not transmitted to the printing device P since firewall P would block such a transmission. As explained above the request can be a query and or change or alter a parameter or function of the printing device or manage obtain or observe operational status information or parameters of the printing device.

According to block the agent periodically queries or polls the virtual device for requests and discovers the pending request from the user electronic device.

According to block the agent executes the request for the electronic device and provides the status or information to the virtual device.

With example embodiments the electronic device can manage and change various control functions and or operation parameters of the printing device with the agent authorized to pass through the firewall and execute requests. These control functions include but are not limited to cancelling or restarting a print copy scan job on the printing device enabling or disabling or change print copy scan features of the printing device e.g. change between portrait and landscape printing changing between one or two sided printing changing a number of copies to print copy scan changing image or resolution quality of print copy scan changing between color or black and white print copy scan reorganizing or re prioritizing print jobs in queue etc. .

According to block the virtual device and or cloud server notifies and provides the status or information per the request to the electronic device.

For example electronic device A transmits a request to change a printing parameter of printing device P e.g. change default tray from tray 1 to tray 2 . The request is transmitted from a web browser A of electronic device A through the internet to cloud server A which in turn transmits the request to the virtual device . The GET agent B P or M polls the virtual device and discovers the pending request. The agent then executes the request at the printing device and transmits a message to the virtual device stating that the request was successfully executed. The virtual device and or cloud server A then transmits the message to the electronic device A which can display the status information to the user. Communication between the agent and the virtual device and or cloud server occurs using REST API.

According to block the state of the printing device is set to idle. Then the printing device defaults are obtained e.g. in bitmap format according to block . According to block the states of the various printing device components are obtained e.g. toner level tray indicator paper jam job processing etc. . The component state values are assigned to the printing device e.g. as a bitmap according to block . REST API is constructed along with printing device state information and printing device defaults according to block . The printing device state information is reported using REST API to a logical or virtual device on a web or cloud server according to block . Blocks through can be executed periodically or on a change of event.

According to block the component list and defaults settings are displayed e.g. displayed to a user on a remote electronic device settings of the printing device such as color or black and white default paper tray paper size one or two side printing etc. . The user then assigns new default values to one or more of these components according to block . These new default values are transmitted to and stored as uncommitted in a logical or virtual device according to block . The new default values are constructed as information to report over REST API according to block and then reported to the printing device over a response channel using REST API according to block . The new default values are committed into the logical or virtual device according to block .

According to block a printing device is selected e.g. a user selects a printing device for which the user is authorized to use . According to block an identity of the printing device is obtained. Next REST API is constructed for the selected printing device according to block . A query is then made on the logical or virtual device to get printing device and job status according to block . The logical or virtual device on the web or cloud server responds to the requesting electronic device with the status information according to block . The structured contents are parsed according to block and the information is displayed to the user on the electronic device according to block .

The term cloud is a computer network accessible over the internet and or web that is dynamically scalable with virtualized resources such as printing resources. Users are not required to have knowledge or expertise in the infrastructure of the cloud that relies on the internet to satisfy the computing or printing needs of users. The cloud provides computer and or printing device services with business applications that are accessible from a web browser while software and data are stored on servers in the cloud. For example a printing cloud system supports infrastructure for printing device services platform for the printing device services and software for the printing device services.

The term printing device is an electronic device that performs one or more functions of printing scanning and copying. In one embodiment a printing device is a printer. A printing device however is not limited to printers but includes other devices such as a scanner a copier a machine with facsimile operations and or a multi functional device that performs two or more functions of printing scanning copying and faxing.

The term web enabled printing device is a printing device that is accessed to print copy scan documents over the web.

The term world wide web or web is a system of linked hypertext documents access through the internet. Using a web browser a user can view web pages that include text images video and other media and navigate between these pages with hyperlinks.

Example embodiments are discussed in connection with a printer. Example embodiments however are not limited to a printer but include various other types of electronic devices that perform one or more functions such as printing scanning or copying.

In one example embodiment one or more blocks or steps discussed herein are automated. In other words apparatus systems and methods occur automatically. The terms automated or automatically and like variations thereof mean controlled operation of an apparatus system and or process using computers and or mechanical electrical devices without the necessity of human intervention observation effort and or decision.

The methods in accordance with example embodiments of the present invention are provided as examples and should not be construed to limit other embodiments within the scope of the invention. Further methods or steps discussed within different figures can be added to or exchanged with methods of steps in other figures. Further yet specific numerical data values such as specific quantities numbers categories etc. or other specific information should be interpreted as illustrative for discussing example embodiments. Such specific information is not provided to limit the invention.

In some example embodiments the methods illustrated herein and data and instructions associated therewith are stored in respective storage devices which are implemented as one or more computer readable or computer usable storage media or mediums. The storage media include different forms of memory including semiconductor memory devices such as DRAM or SRAM Erasable and Programmable Read Only Memories EPROMs Electrically Erasable and Programmable Read Only Memories EEPROMs and flash memories magnetic disks such as fixed floppy and removable disks other magnetic media including tape and optical media such as Compact Disks CDs or Digital Versatile Disks DVDs . Note that the instructions of the software discussed above can be provided on one computer readable or computer usable storage medium or alternatively can be provided on multiple computer readable or computer usable storage media distributed in a large system having possibly plural nodes. Such computer readable or computer usable storage medium or media is are considered to be part of an article or article of manufacture . An article or article of manufacture can refer to any manufactured single component or multiple components.

In the various embodiments in accordance with the present invention embodiments are implemented as a method system and or apparatus. As one example example embodiments and steps associated therewith are implemented as one or more computer software programs to implement the methods described herein. The software is implemented as one or more modules also referred to as code subroutines or objects in object oriented programming . The location of the software will differ for the various alternative embodiments. The software programming code for example is accessed by a processor or processors of the computer or server from long term storage media of some type such as a CD ROM drive or hard drive. The software programming code is embodied or stored on any of a variety of known physical and tangible media for use with a data processing system or in any memory device such as semiconductor magnetic and optical devices including a disk hard drive CD ROM ROM etc. The code is distributed on such media or is distributed to users from the memory or storage of one computer system over a network of some type to other computer systems for use by users of such other systems. Alternatively the programming code is embodied in the memory and accessed by the processor using the bus. The techniques and methods for embodying software programming code in memory on physical media and or distributing software code via networks are well known and will not be further discussed herein.

The above discussion is meant to be illustrative of the principles and various embodiments of the present invention. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

