---

title: Trend analysis in content identification based on fingerprinting
abstract: Fingerprint-based content identification is described. Bin-counting detects linear trends based on data points that are generated from a set of query fingerprints, which are extracted from a query content item and a matching set of corresponding reference content items that are extracted from a reference content item. RANSAC may detect trends based on confidence scores that are computed for multiple candidate content items. The trends detected for the candidate content items are compared against a threshold in order of decreasing confidence score until a trend that satisfies the threshold is found. A ranking-based mechanism for fingerprint-based content identification may use a bin-counting or RANSAC-based trend detection mechanism to identify duplicate or multiple reference content items that all match the same query content item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08635211&OS=08635211&RS=08635211
owner: Dolby Laboratories Licensing Corporation
number: 08635211
owner_city: San Francisco
owner_country: US
publication_date: 20100610
---
This application claims priority to U.S. Patent Provisional No. 61 186 353 filed 11 Jun. 2009 hereby incorporated by reference in its entirety.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

As a result of widespread and growing use vast quantities of media content exist nowadays. Given the sheer quantity and variety of audio and video content that exists in various formats and encodings and the expanding growth of that content over time the ability to correctly identify media content is of particular value. One type of approaches for identifying media content is based on the use of media fingerprints.

Media fingerprints are identifiers of the media content from which the media fingerprints are derived extracted or generated. For example acoustic fingerprints may be derived or otherwise generated from a particular audio waveform as code that uniquely corresponds thereto and video fingerprints may be derived or otherwise generated from a particular video sequence based on video content characteristics such as luminance chrominance and motion descriptors. Media fingerprints may be stored in repositories in association with various metadata information that describe and identify the media content items from which the individual fingerprints are generated. The stored media fingerprints may be accessed to identify categorize or otherwise classify an item or a sample of media content such as music or other audio content and a video sequence or other video content. Such identification categorization and classification of media content may be useful in a variety of contexts such as copyright management validation of authorized uses of content and detection of unauthorized use of various versions copies and other items of content.

Techniques are provided for linear trend analysis in content identification based on fingerprints. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

This section provides a conceptual prelude to techniques that are described in more detail in the sections that follow. Therefore this section should not be read as a summary of the techniques described herein and is to be considered in an illustrative rather than a restrictive sense.

As used herein fingerprint relates to a concatenation of signatures which may also be referred to as codewords sub fingerprints and hash values that are extracted derived or otherwise generated from a consecutive sequence of media frames. Each signature is a short data string that is a high level representation of its corresponding media frame or sequence of frames. The signatures may be extracted or derived from the media frames at a nominal rate e.g. 12 frames per second or fps in order to account for frame rate changes. Content item relates to a unit of media content. Reference fingerprint relates to a fingerprint that is extracted derived or otherwise generated from a known and identified content item and query fingerprint relates to a fingerprint that is extracted derived or otherwise generated from a content item also referred to as query content item that needs to be identified.

In general fingerprint based media content identification involves searching for the best matches between reference fingerprints stored in a repository and query fingerprints generated from a query content item that needs to be identified. In the repository each reference fingerprint is associated with various metadata information that describes and identifies the reference content item from which that reference fingerprint was generated. Examples of such metadata information include but are not limited to a content identifier e.g. a filename a stream ID etc. a content description and a time location or offset of the fingerprint within the content item from which fingerprint was generated.

As used herein fingerprint query relates to a query or other request that is performed on the unit of a fingerprint where the unit corresponds to a short time window of content e.g. a 3 second window . A fingerprint query typically specifies a certain fingerprint and when executed or otherwise performed against a repository of reference fingerprints returns at least the metadata information associated with those reference fingerprint s from the repository which best match the certain fingerprint.

The query result from an individual fingerprint query may include the content identifier of a reference content item and the time location or offset of the matching reference fingerprint within the reference content item. Thus the query results from multiple queries which respectively specify multiple query fingerprints that are spaced apart at some time intervals in the underlying query content item can include a set of time locations for the correspondingly matching reference fingerprints. This set of time locations would exhibit a linear trend with respect to the time locations of the multiple query fingerprints when the matching reference fingerprints come from a content item that correctly matches the query content item. Therefore identifying a linear trend for multiple spaced apart query fingerprints and their corresponding matching reference fingerprints can improve the accuracy of the identification of the query content item especially when the query content item has been severely modified and or when the query results include many irrelevant or incorrect matches.

As used herein linear trend relates to a positioning of data points in a region along a line that is characterized by a slope value and an intercept value. A data point is represented by a pair of time values where the first value in the pair is the time location of a query fingerprint within a query content item and the second value in the pair is the time location of a matching reference fingerprint within a reference content item.

One approach for improving fingerprint search accuracy uses a combination of majority voting and linear trend detection. In this approach a linear trend is detected by computing for all matches that return the same content identifier the offset difference between the time location of a query fingerprint and the time location of the matched reference fingerprint. The pair of reference fingerprints that produces the smallest offset difference is then considered to exhibit the best linear trend if this smallest offset difference is smaller than some threshold then the reference content item corresponding to that linear trend is considered the correct answer. This approach assumes that a linear trend has a slope of 1.0 . This means that all values of the offset difference are supposed to be the same value e.g. some constant and therefore choosing the pair of reference fingerprints with the smallest offset difference is a good indicator of linear trend. Embodiments of the techniques described herein may increase the fingerprint search accuracy in relation to accuracy that may be achieved with an approach that uses a combination of majority voting and linear trend detection. For example embodiments of the techniques described herein are more accurate when detecting linear trends with slopes different than 1.0 which can happen if the frame rate in the query content item is modified intentionally e.g. when a video clip is played at 50 faster rate or when a 24 fps clip is converted to a PAL format at 25 fps without inserting duplicate or interpolating frames. In another example embodiments of the techniques described herein are more robust when detecting linear trends from only a small portion of data points out of many data points that have the correct content identifiers and exhibit the correct linear trend.

The techniques described herein provide several mechanisms for trend detection in fingerprint based content identification where different embodiments may use different combinations of these mechanisms. In one embodiment according to the techniques described herein trends may be detected based on bin counting of data points on a RANSAC RANdom SAmple Consensus derived confidence scores on ranking content identifications based on at least one of bin counting of data points and RANSAC derived confidence scores and or on any combination thereof. In this embodiment a method comprises one or more of the steps of detecting linear trends based on bin counting of data points that are generated from a set of query fingerprints which are extracted from a query content item and a set of correspondingly matching reference content items which are extracted from a reference content item detecting trends based on a RANSAC derived confidence scores that are computed for multiple candidate content items where the trends detected for the candidate content items are compared against a threshold in order of decreasing confidence score until a trend that satisfies the threshold is found or ranking fingerprint derived content identifications based on at least one of the bin counting based detecting step or the RANSAC based detecting step where duplicate or multiple reference content items are identified which all match the same query content item and computing an identity of the query content item based on one or more of the detected trends or the ranked identifications.

In one embodiment according to the techniques described herein a bin counting linear trend detection mechanism may be implemented to identify a query content item. Multiple data points are obtained from query fingerprints and respectively matching reference fingerprints where each data point is represented by a pair of time values that includes a time location of a query fingerprint and a time location of the respectively matching reference fingerprint. A slope value for the data points is then determined. Detection of a linear trend is then performed for the data points where if found the linear trend would indicate a reference content item that matches the query content item from which the query fingerprints are derived. To detect the linear trend multiple time offsets that respectively correspond to the multiple data points are first determined. The time offset for each data point is computed by subtracting from the time location of a reference fingerprint included in that data point the multiplicative product of the slope value and the time location of the corresponding query fingerprint included in that data point. The data points are then grouped into multiple bins based on the computed time offsets where the bins have the same bin size and each bin represents a particular time offset span that does not overlap with any other time offset spans of any other bins. The data points in each bin are counted in order to determine the bin having the maximum number of data points. One or more metrics for the maximum bin are determined and then compared to a current threshold. When the one or more metrics exceed the current threshold a determination is made that the data points exhibit a linear trend that has the current slope value and therefore the reference content item corresponding to the data points is identified as a matching content item. When the one or more metrics do not exceed the current threshold a linear regression is applied to the data points included in the bin with the maximum count in order to determine a new slope value. A more restrictive threshold is also determined and the bin counting mechanism is applied again to all data points with the new slope value and the new threshold.

In one embodiment according to the techniques described herein a RANSAC based trend detection mechanism may be implemented to identify a query content item. The RANSAC based mechanism may use a linear model or a non linear model to determine a trend that is exhibited by multiple query results that are obtained from a fingerprint database for query fingerprints extracted from the query content item. A time window is determined for the query content item. The query results are grouped into multiple groups corresponding to the content identifiers returned in the query results where the content identifiers respectively indicate candidate content items. A RANSAC algorithm is then applied for each candidate content item in order to determine a trend exhibited by the data points associated with that candidate content item. A confidence score is then computed for each candidate content item where the confidence score is based on the values of one or more coefficients and the number of in lier data points of the trend determined according to the underlying model for that candidate content item. The candidate content items are then sorted by their confidence scores. Starting with the candidate content item having the highest confidence score the trends for the candidate content items are checked against a threshold one by one until a trend that satisfies the threshold is found or until all trends are checked against the threshold. The candidate content item associated with the first trend that satisfies the threshold is identified as a reference content item that matches the query content item being identified.

In one embodiment according to the techniques described herein a ranking based mechanism may be implemented to identify duplicate or multiple reference content items that all match a given query content item. A number of multiple different query results from among a set of query results are returned for the same fingerprint query of a set of fingerprint queries that are performed for a given query content item. The set of query results including the multiple different query results are grouped into multiple groups corresponding to the content identifiers returned in the query results where the content identifiers respectively indicate candidate content items. A trend detection mechanism such as for example a bin counting or RANSAC based mechanism is applied for each candidate content item in order to determine a trend that fits the data points associated with that candidate content item. Based on the trends determined for the candidate content items multiple matching content items are identified where the number of the multiple matching content items is greater than or equal to the number of the multiple different query results.

Typical approaches to identifying media content based on media fingerprints have used some form of pattern matching search between reference fingerprints stored in a repository and query fingerprints derived from a query content item that needs to be identified. Embodiments of the techniques described herein may increase the accuracy of content identification in relation to accuracy that may be achieved with such pattern matching searches. For example embodiments of the techniques described herein are less sensitive to the possibility of distortions in the audio video signal from which the query content item is captured the possibility of accidental or deliberate changes or edits to the query content item the possibility of fingerprint variations due to differences in formats and encodings and or the possibility of mismatched time alignment between the reference fingerprints and the query fingerprints which may affect the accuracy achievable with pattern matching searches.

Fingerprint database is communicatively or operatively coupled to search engine . Fingerprint database is configured to store reference fingerprints and may be organized as any suitable data repository including but not limited to a relational database an object relational database and a file or files in one or more file systems.

Search engine comprises fingerprint generator logic fingerprint matching logic and trend detection logic . In various embodiments fingerprint generator logic fingerprint matching logic and trend detection logic may be implemented as separate components or as one integrated components that may perform additional functionalities. As used herein logic relates to a set of instructions which when executed by one or more processors are operable to perform one or more functionalities. In various embodiments and implementations any such logic may be implemented as one or more software components that are executable by one or more processors as one or more hardware components such as Application Specific Integrated Circuits ASICs or other programmable Integrated Circuits ICs or as any combination of software and hardware components. For example any particular logic may be implemented without limitation as one or more software modules as one or more libraries of functions as one or more dynamically linked libraries as a standalone or a client server software application and as a browser plug in. In various embodiments and implementations search engine may be configured to execute in one or more special purpose computing devices which may operate under control of instructions that are encoded in various storage media. For example search engine may be a standalone or distributed application or module that may be configured in various computing environments including but not limited to a network capable media player a content encoder and or decoder a web search server an indexing server and a web browser.

Fingerprint generator logic is operable to derive query fingerprints from media content such as for example content input streams and query content items and to pass the derived query fingerprints to the fingerprint matching logic . Fingerprint matching logic is operable to compare a query fingerprint to reference fingerprints stored in fingerprint database and to return any reference fingerprint s that match the query fingerprint. Fingerprint matching logic may be operable to generate fingerprint queries and to execute or cause the execution of the fingerprint queries against fingerprint database . For example fingerprint matching logic may be operable to execute fingerprint queries by making calls to database drivers e.g. ODBC or JDBC drivers to application programming interfaces APIs that can access information in fingerprint databases and or directly to various database servers that manage the fingerprint databases. In some embodiments a fingerprint generator may not be included within the search engine as a separate component but the fingerprint matching logic itself may include a component that is operable to generate the query fingerprints from query content items.

According to the techniques described herein fingerprint matching logic and or another component of search engine may be operable to generate data points based on the query fingerprints being processed and their correspondingly matching reference fingerprints. For example when fingerprint matching logic finds a reference fingerprint that matches a given query fingerprint the fingerprint matching logic may be operable to determine and pair with each other the time location of the query fingerprint within the query content item and the time location of the matching reference fingerprint that is retrieved from fingerprint database .

According to the techniques described herein fingerprint matching logic is operable to pass any generated data points to trend detection logic . In some embodiments fingerprint matching logic is also operable to pass to trend detection logic any content identifiers that are retrieved from fingerprint database and that identify the reference content items that include the matching reference fingerprints.

Trend detection logic is operable to perform trend detection in accordance with one or more of the mechanisms for trend detection and content identification described herein. For example based on data points received from fingerprint matching logic in one embodiment trend detection logic may be operable to perform the bin counting mechanism described herein in order to detect linear trends among the received data points. In one embodiment trend detection logic may be operable to perform the RANSAC based mechanism that is described herein for detecting linear or non linear trends among the received data points. In one embodiment trend detection logic may be operable to perform the ranking based mechanism for content identification described herein. In yet another embodiment trend detection logic may be operable to perform any combination of some or all of the bin counting RANSAC based and ranking based mechanisms described herein.

In operation search engine is operable to receive media content and to process the media content in order to identify matching reference content. For example search engine may be configured to operate on line and to perform content identification based on trends over content input streams that may carry various digital content items. In addition or instead of search engine may be configured to operate off line and to perform content identification over discrete content items that are received from clients or other system processes.

For example search engine may be operable to receive query content item in off line operation or to extract as a query content item a portion of content input stream in on line operation . In response to search engine receiving or extracting a particular query content item fingerprint generator logic generates a set of query fingerprints from the query content item. The set of query fingerprints are then passed to fingerprint matching logic . Fingerprint matching logic then generates a set of fingerprint queries and executes or causes the execution of the fingerprint queries against fingerprint database . The results which are returned from fingerprint database in response to the fingerprint queries include a set of reference fingerprints that match the query fingerprints generated from the query content item. The results also include in respective association with the set of reference fingerprints a set of content identifiers e.g. filenames or stream IDs of those reference content items from which the set of reference fingerprints are generated. Fingerprint matching logic then generates data points from the query fingerprints and the reference fingerprints and passes these data points to trend detection logic . In response to receiving data points trend detection logic performs one or more of the bin counting RANSAC based and ranking based mechanisms in accordance with the techniques described herein. The results of performing the trend detection mechanism s are then used by search engine to determine and output one or more content item identifications that indicate one or more content items that match the query content item being processed.

The techniques described herein are not limited to being implemented for any particular type of digital content. For example the trend detection mechanisms described herein may be applied equally to video content and audio content. Examples of audio content include but are not limited to music speech and sounds. Audio content may be stored on compact disks CD or other types of storage media transmitted with analog and digital electromagnetic signals or streamed over one or more networks as digital files between servers and client devices such as various types of computer systems cellular phones personal digital assistants PDA and handheld computers. Examples of video content include but are not limited to movies and other recorded performances presentations animations and any portions thereof which may sometimes be called clips . Video content may be stored on Digital Versatile Disks DVD or other storage media transmitted with analog and digital electromagnetic signals or streamed over one or more networks as digital files between servers and various types of client devices.

Audio content is identifiable with acoustic fingerprints. An acoustic fingerprint is generated from a particular audio waveform as code that uniquely corresponds thereto. Upon generating an acoustic fingerprint the corresponding waveform from which the fingerprint was generated may thereafter be identified by reference to its fingerprint. Acoustic fingerprints may be used to identify categorize or otherwise classify an audio sample. Acoustic fingerprints are thus useful in identifying music or other recorded streamed or otherwise transmitted audio media being played by a user managing sound libraries monitoring broadcasts network activities and advertising and identifying video content such as a movie from audio content such as a soundtrack associated therewith.

Analogous to identifying audio content by comparison with acoustic fingerprints is the ability to identify video content with video fingerprints. Video fingerprints are generated from the video content to which they correspond. A sequence of video information e.g. a video stream or clip is accessed and analyzed. Components characteristic of the video sequence are identified and derived therefrom. Characteristic components may include luminance chrominance motion descriptors and or other features that may be perceived by the human psychovisual system. The derived characteristic components may be compressed into a readily storable and retrievable format. Video fingerprints may be used for comparison to a sample of a video sequence which allows accurate identification of the video content in the sequence. Video fingerprints are thus useful for accurately identifying video content for a user as the content is viewed as well as in authoritatively managing copyrights and in validating authorized and detecting unauthorized versions and items of content being stored streamed or otherwise used.

According to the techniques described herein a bin counting mechanism for detecting linear trends relies on data points that are derived from the time locations of query fingerprints in a query content item and the time locations of reference fingerprints in reference content items. While a linear regression method e.g. a least square error optimization method may use data points to detect linear trends in the context of fingerprint content identification such method would only work when most of the data points are in liers. If there are many out liers or a few out liers that significantly deviate from the actual trend line the slope derived by such linear regression method may be far off from the actual slope value.

As used herein in lier and in lier data point relate to a data point that is close to a trend line as determined by some metric out lier and out lier data point relate to a data point that is not close to a trend line as determined by some metric. As used herein slope and slope value and intercept and intercept value relate to standard mathematical terms that are used to define a line that is plotted on a two dimensional x y graph. For example slope and slope value relate to the rate at which the line rises above the horizontal x axis and intercept and intercept value relate to the perpendicular distance from the x axis to the point at which the line crosses the vertical y axis.

In the context of fingerprint content identification a linear trend exhibited by a set of data points is due to a one to one mapping of time locations between a query content item being identified and a matching reference content item. Therefore the slope value of the linear trend is usually close to 1.0 . Thus according to the bin counting mechanism described herein if the difference denoted tbetween the time locations of the query fingerprints and the corresponding reference fingerprints is plotted on a two dimensional graph along the vertical y axis and the time locations of the query fingerprints are plotted along the horizontal x axis the scatter plot is supposed to exhibit a flat line with a slope close to 0 . Such flat line would not indicate what the intercept is but the y values of the in lier data points will be close to the intercept. Thus if the value range spanning the y values e.g. value range of talong the y axis is divided into a sequence of bins that represent equal non overlapping time offset spans and a count is determined of how many data points associated with the same content identifier fall into the same bin then the bin representing the correct intercept should have the highest count of data points. This is because while the out lier data points by nature are scattered and random and could indicate any intercept the in lier data points by definition are close to the correct intercept. In turn this leads to a high concentration of data points in the bin associated with a value that is the correct or close to the correct intercept.

Referring to in step a search engine obtains a plurality of data points from a plurality of query fingerprints and a plurality of correspondingly matching reference fingerprints. For example the search engine or a component thereof may receive a query content item for which identification needs to be performed. The search engine or the component thereof extracts the query fingerprints from the query content item and searches a fingerprint database to find reference fingerprints which match the extracted query fingerprints and which are associated with the same content identifier that identifies the same reference content item. If the found reference fingerprints are associated with different content identifiers and thus indicate different reference content items the reference fingerprints are first sorted into groups by their content identifiers and the steps of the method in are performed separately for each group in order to determine whether the data points in that group exhibit a linear trend and therefore indicate a reference content item that matches the query content item.

In step the search engine or a component thereof determines a first slope value and sets the determined slope value as the current slope value for a first pass at detecting a linear trend. For example the search engine may initially select a slope value that is substantially equal of 1.0 . In some embodiments the search engine or the component thereof may apply a RANSAC algorithm to the plurality of data points in order to determine the initial slope value.

In step the search engine detects a linear trend based on the current slope value and the obtained data points. It is noted that in some embodiments steps through may be performed as sub steps of step . Further step through step may be performed in several passes where each pass may use different current parameters such as thresholds metrics slope values and bin sizes. According to the bin counting mechanism described herein the goal in performing multiple passes at detecting a linear trend among the data points is to determine a more accurate linear trend. If after a predetermined number of passes the specified thresholds have not been met then it can be determined that the data points do not exhibit a linear trend and therefore the reference content item associated with the data points does not match the query content item.

In step the search engine or a component thereof performs a data transformation over the obtained data points to determine a plurality of time offsets that respectively correspond to the obtained data points. For example a time offset corresponding to a data point is computed by subtracting from the time location of the reference fingerprint for that data point the multiplicative product of the current slope value and the time location of the query fingerprint for that data point. Empirically such data transformation may be represented by the linear equation where k is the current slope value and tis the computed time offset for a data point which includes the time location tof a query fingerprint in the query content item and the time location tof a matching reference fingerprint in a reference content item.

In step the search engine or a component thereof groups the data points into non overlapping bins based on the computed time offsets. Each bin represents a time offset span that does not overlap with any other time offset span for any other bin. In some embodiments all bins may be set to have the same bin size. The bin size may be determined by first computing the time interval between the minimum time offset and the maximum time offset of all computed time offsets and then dividing this time interval by a fixed number.

In step the search engine or a component thereof counts the data points in each bin in order to determine the bin having the maximum count of data points also referred to as the maximum bin . For example the search engine or a component thereof may count the data points in each particular bin by comparing the time offsets associated with the data points to the time offset spans represented by each bin and by counting how many time offsets fall within each time offset span.

Referring to in step the search engine or a component thereof determines one or more metrics for the maximum bin. The one or more metrics may include an absolute metric and or a relative metric that may be used to determine the accuracy of the linear trend exhibited by the data points in the maximum bin. For example in some embodiments the absolute metric may be the count of data points in the maximum bin and the relative metric may be the ratio between the count of data points in the maximum bin and the total number of data points across all bins.

In step the search engine or a component thereof determines whether the metrics determined in step exceed a current threshold. The current threshold may include one or more threshold values which may be pre configured as constants or which may be dynamically computed or otherwise determined for each separate linear trend detection pass that is performed for the same set of data points. For example in various implementations a threshold value may be determined by multiplying a constant value to one of an average count of data points in the bins a total number of data points in the bins and an average count of data points in those bins that include at least one data point. In embodiments that compute an absolute metric and a relative metric for the maximum bin the threshold in step may include an absolute threshold value and a relative threshold value. In these embodiments to determine whether the linear trend exhibited by the data points in the maximum bin is accurate in step the absolute metric may be compared to the absolute threshold value and the relative metric may be compared to the relative threshold value.

If in step the search engine or the component thereof determines that the one or more metrics computed for the maximum bin exceed the current threshold then in step the search engine and the component thereof determine that the data points obtained for the query content item being processed exhibit a linear trend that has the current slope value. Thereafter based on the current slope value and on the data points the search engine or the component thereof may determine the intercept value for the linear trend.

If in step the search engine or the component thereof determines that the one or more metrics computed for the maximum bin do not exceed the current threshold then in step the search engine or the component thereof determine whether the one or more metrics meet a minimum required threshold value. If in step it is determined that the one or more metrics do not meet the minimum required threshold value then in step the search engine determines that no linear trend is detected among the plurality of data points and stops the search. If in step it is determined that the one or more metrics meet the required threshold value then in step the search engine or the component thereof applies a linear regression to the data points in the maximum bin to determine a new slope value. In some embodiments out lier data points may be identified and removed prior to applying the linear regression and thus the linear regression would be applied only on in lier data points. The linear regression applied in step may use any known or later developed regression algorithm that can determine the slope of a straight line by analyzing the relationship between the time locations of the reference fingerprints modeled as dependent variable in the regression and the time locations of the query fingerprints modeled as independent variable in the regression .

In step the search engine or the component thereof sets the new slope value as the current slope value and repeats step through step in a second or additional pass over all data points. In addition in step the search engine or the component thereof may also set a new current threshold that is more restrictive than the previously used threshold.

In this manner the bin counting mechanism for detecting linear trends may be performed on a set of data points in multiple passes in order to determine more accurate parameters e.g. slope and intercept for any linear trend that is exhibited by the set of data points. When a predetermined number of passes have been performed but no threshold has been satisfied the bin counting mechanism may generate a result indicating that the set of data points do not exhibit a linear trend and therefore the reference content item associated with the data points does not match the query content item.

The horizontal axis of the graph in represents the time locations tof the query fingerprints that comprise the data points and the vertical axis of the graph represents the time offsets tthat are computed for data points based on equation . Bins include six bins of equal size that are determined based on the computed time offsets t. As illustrated in bin includes the highest count of data points of all bins and therefore bin would be determined by the bin counting mechanism as the maximum bin.

In some embodiments the bin counting mechanism described herein may be implemented in several detection passes where at each pass a different slope value may be used to detect a linear trend. In these embodiments the selected on the first pass or determined e.g. by a linear regression on subsequent passes slope value kmay be checked whether it is within the range of real values between 0.5 and 2.5 . The range 0.5 2.5 is a suitable value range for the slope value kbecause normally a query content item would not play back content that is very slow e.g. to yield a line having slope less than 0.5 or very fast e.g. to yield a line having slope greater than 2.5 . Further on detection passes subsequent to the first pass the slope value kgenerated by applying a linear regression would typically be between 0.9 and 1.1 . It is noted that checking whether a selected or determined slope value kis within an expected range e.g. such as the range 0.9 1.1 may improve the overall accuracy when there are a lot of noisy data points and therefore the bin counting mechanism described herein may need to apply more detection passes.

According to the bin counting mechanism described herein the choice of bin size may determine the robustness and accuracy of the mechanism.

If the bin size is too small the in lier data points will be spread to many bins instead of being concentrated preferably in one bin. This will make it more difficult to distinguish between a bin containing in lier data points and a bin containing out lier data points. Further if the slope of the actual linear trend is different from 1.0 then the slope of twill not be exactly 0 and the in lier data points could spread to many bins.

On the other hand if the bin size is too big a bin may include the out lier data points unexpectedly. For example if the data points being examined actually do not exhibit any linear trend then none of them are in lier data points and the bin size should be chosen small enough to avoid producing any bin that contains a concentrated number of such data points.

In some embodiments the bin size may be determined based on two parameters a linear parameter and an absolute parameter. The linear parameter is used to adjust the bin size to the length of the time interval during which the query fingerprints are extracted from the query content item. For example the linear parameter would ensure that the longer the length of the time interval during which query fingerprints are extracted the larger bin size would be selected. The absolute parameter is used to ensure that the selected bin size is not too small regardless of the length of the time interval during which query fingerprints are extracted from the query content item. For example the absolute parameter would ensure that even if the length of the time interval during which query fingerprints are extracted is very small the selected bin size would be of at least a certain size.

In one embodiment the bin size is expressed in seconds and is selected as follows. Let tdenote the length in seconds of the time interval during which the query fingerprints are extracted from the query content item. Then a linear parameter may be computed as 0.004 where 0.004 was determined to be a coefficient that produces a good linear parameter according to this embodiment. This linear parameter indicates that the selected bin size would be at least 0.4 of large time intervals during which query fingerprints are extracted. The absolute parameter may be computed as

After the bin size has been selected in one embodiment the data points may be quantized and counted according to the pseudo code illustrated in Table 1.

In the pseudo code of Table 1 t i denotes the time offset computed for the idata point. The quantizing of the data points into discrete bins and the data point counting are performed as follows. Each t i is first divided by the bin size and the integer portion of the result is obtained by performing the INT operation on the result of the division. The obtained integer portion is then used as an index into the freg at array to increment the count for the bin indicated by that integer portion. In this way every data point is quantized into a unique discrete integer that indicates a unique discrete bin and the count for each bin is incremented when a data point is quantized. Then the position of the maximum value in the freg at array would indicate the maximum bin that contains the maximum number of data points.

To determine whether there is linear trend among a set of data points the bin counting mechanism described herein can test whether metrics determined based on the bin count in some bin exceeds a certain threshold. If so this would indicate a high concentration of data points in that bin and therefore it would be a good indicator of a linear trend. Thus the determination of the threshold may govern the accuracy of the bin counting mechanism. If the threshold is too small it would lead to false positives in the linear trend detection if the threshold is too large it could cause the rejection of what may otherwise be a good linear trend.

In some embodiments the threshold used in the bin counting mechanism may include a relative threshold value that is used to test the ratio of maximum count of data points found in a bin to the average count of data points across all bins. In these embodiments the threshold value may be set to 3.0 and if the ratio of the maximum bin count to the average bin count exceeds 3.0 the bin counting mechanism may consider that a good linear trend has been detected provided that there are enough data points in the sample for example at least 5 total data points and at least 3 data points in the maximum bin .

In addition or instead of the threshold used in the bin counting mechanism may also include both an absolute threshold value and a relative threshold value. The purpose of using both an absolute threshold value and a relative threshold value is to ensure that there is a high concentration of data points in the maximum bin which may thereafter be used in a subsequent detection pass to determine a more accurate slope. The absolute threshold value may be used to ensure that the detection of linear trend is performed based on at least a certain number of data points. For example in one embodiment a good value for the absolute threshold has been determined to be at least 5 e.g. a total number of data points 5 . The relative threshold value may be used to increase the accuracy of any detected linear trend by ensuring that at least a certain number of the total data points are located in the maximum bin. For example in one embodiment a good value for this relative threshold has been determined to be at least 0.15 this embodiment may test whether the ratio of the maximum count of data points in a bin to the total number of data points exceeds this value e.g. whether

In some embodiments the one or more relative and or absolute threshold values included in a threshold may be determined using empirical data and or probabilistic analysis to ensure a good trade off between low false negative rate and low false positive rate. Further in some embodiments the threshold values included in a threshold may be determined by taking into account the characteristics of the query content item being identified. Examples of such characteristics include but are not limited to the type of content being identified e.g. audio video etc. the length of the query content item being identified and the frequency of generating query fingerprints from the query content item.

In various embodiments the bin counting mechanism described herein may use various combinations of bin size selection and threshold determination in order to perform more efficiently and or to more accurately determine the parameters e.g. slope and intercept of the detected linear trends.

For example in some embodiments instead of applying a linear regression to determine a new slope only when one or more of the determined bin counting metrics is below a certain threshold the linear regression may always be performed over the data points in the maximum bin. In these embodiments after applying the linear regression the bin counting mechanism may check whether some data points in the maximum bin are out liers because for example they are located too far from the detected line. The out lier data points may then be filtered out and the linear regression may be applied again only on the remaining in lier data points. Once a better estimate of the slope of the linear trend is determined a smaller bin size and or a more conservative set of threshold values may be used because a higher concentration of data points and respectively higher bin count should be expected in the correct bin which in turn would lead to a better estimate of the slope value of the actual lienar trend. Doing so would lower the false positive rate while not increasing the false negative rate.

A traditional RANSAC RANdom SAmple Consensus algorithm randomly picks two sample points and forms a line using these points. If other data points are within a certain distance threshold denoted D to the formed line they are considered as in lier data points. If the number of the in lier data points exceeds some threshold then the line indicated by the in lier data points is considered a good linear trend. The traditional RANSAC algorithm repeats this process a certain number of times while keeping the best fit result at each iteration where the best fit result maximizes the number of in lier data points within the current data set. The advantage of the traditional RANSAC algorithm over a least square based linear regression is its robustness against out lier data points. Even with only a small fraction of points being in liers the RANSAC algorithm would still be able to determine a good linear trend. It is noted however that a traditional RANSAC algorithm cannot be readily applied in the context of fingerprinting based content identification because such content identification may produce very large data sets with a lot of out lier data points which in turn would cause a traditional RANSAC algorithm to use a lot of computing resources e.g. CPU time memory etc. in order to determine the best fitting linear trend.

To apply a RANSAC algorithm efficiently in the context of fingerprinting based content identification the techniques described herein provide a RANSAC based mechanism for detecting trends that includes several novel customizations for the traditional RANSAC algorithm. The RANSAC based mechanism described herein may detect both linear and non linear trends. The linear trends detected through the RANSAC based mechanism are assumed to have an intercept. Such linear trends are sometimes referred to as affine trends that can be fitted to an affine model.

According to the techniques described herein a RANSAC based mechanism may use all determined in lier data points to determine a more accurate trend as in some traditional RANSAC algorithms. For example after determining a best fit line that is associated with a maximum number of in lier data points from multiple lines that are identified during multiple iterations of the RANSAC algorithm the RANSAC based mechanism described herein may use all of the in lier data points for the best fit line in order to determine a more accurate slope for the line. For example the RANSAC based mechanism may apply a linear regression or some other type of regression on the group of in lier data points for the best fit line in order to obtain the most accurate slope for the line that fits these in lier data points.

According to the techniques described herein a RANSAC based mechanism may augment a traditional RANSAC algorithm to perform one or more post algorithm steps such as for example sorting candidate results by confidence score and or verifying the final results. To sort the candidate results produced by a traditional RANSAC algorithm some embodiments provide for computing a confidence value for each detected trend and then multiplying the number of in lier data points for this trend to the computed confidence value in order to obtain a confidence score. Then the candidate trends are sorted by their confidence scores which allows the techniques described herein to efficiently process the candidates by starting with the most likely candidates first. Verification of final results may also be performed in some operational contexts where a wrong result may be obtained when the RANSAC algorithm detects a lot of in lier data points within a certain small time interval. The techniques described herein provide for final verification of such results because a small query window even with a high concentration of data points may not be indicative of a correct result.

In some embodiments the RANSAC based mechanism described herein may provide for constraining the distance threshold D that is used by a RANSAC algorithm to determine whether data points are close to a certain formed line or curve. In these embodiments the distance threshold D may be set to be 1 12 seconds which is a good threshold value because normally fingerprints are extracted from the underlying content items at 12 fps rate. Thus 1 12 seconds is a good choice for the distance threshold D because it is about the same as any timing error that a fingerprint extraction can introduce.

In some embodiments that are configured to detect linear trends the RANSAC based mechanism described herein may provide for constraining any slope value detected by a RANSAC algorithm to be within a certain range. For example a range of 0.5 2.5 may be internally built into a traditional RANSAC algorithm. If the RANSAC algorithm detects a slope value outside this range the slope value is discarded because it almost certainly indicates a wrong identification result. This is because normally a query content item would not play back content that is very slow e.g. to yield a line having slope less than 0.5 or very fast e.g. to yield a line having slope greater than 2.5 . Thus in these embodiments the RANSAC based mechanism described herein uses a slope range to prevent recognition of certain false linear trends. For example sometimes the same reference fingerprint may be returned as a match to many different query fingerprints when the overall Bit Error Rate BER is high. This produces a linear trend of slope 0 . However in the context of fingerprinting based content identification such linear trend does not indicate an accurate identification result. In accordance with the techniques described herein the use of a slope range to constrain any detected slope values avoids this problem and improves the accuracy of the RANSAC based mechanism. In some embodiments during each iteration the RANSAC based mechanism described herein may first determine whether the slope value for two randomly selected data points is within a certain slope range but without determining how many other data points are in lier data points with respect to the line having the determined slope value. Then if the determined slope value is not within the certain slope range the RANSAC based mechanism foregoes any processing based on that slope value such as determining any potential in lier data points. In this way the RANSAC based mechanism described herein can perform a lot faster than traditional RANSAC processing especially when the underlying data includes a lot of noise. It is noted that in embodiments that provide for detecting non linear trends the RANSAC based mechanism described herein may provide for constraining the coefficients of the underlying non linear models within certain coefficient ranges in a manner that is similar to the above described use of the slope range to constrain the slope value obtained for a linear trend that is detected based on a linear model.

It is noted that different embodiments may use different ranges to constrain the coefficient values detected by a RANSAC algorithm for linear or non linear trends and such coefficient ranges may be determined based on various parameters including but not limited to the type of content being searched e.g. audio or video content the length of the query content item being identified and the play back rate of the query content item. For example in some embodiments the parameters determining the coefficient range s may indicate how the query content is anticipated to have been changed and these parameters may be dynamically configured by a user.

As used herein model refers to a type of a trend against which query results for a query content item are to be matched. According to the techniques described herein in some embodiments the RANSAC based mechanism is operable to fit the underlying query results to several different models. Examples of such models include without limitation linear models that are assumed to have an intercept e.g. affine models and non linear models that represent a curved line of some kind. Thus if a linear model is selected then the RANSAC based mechanism will try to match the underlying query results against a line in order to determine whether the query results exhibit a linear trend. If a non linear model is selected then the RANSAC based mechanism will try to match the underlying query results against a non linear curve in order to determine whether the query results exhibit a non linear trend.

A model is associated with and prescribes one or more coefficients. The values of the coefficients of a model are determined when query results of fingerprint queries for a query content item are fitted to the model by applying the RANSAC based mechanism described herein. For example one of the coefficients in a linear model is a slope when the RANSAC based mechanism is applied to detect a linear trend the value of the slope of the linear trend is determined. In another example a non linear model may be associated with multiple coefficients depending on the particular type of the model when the RANSAC based mechanism is applied to detect a non linear trend the values of these coefficients are determined.

In some embodiments the RANSAC based mechanism described herein allows a user to select a particular model e.g. a linear model or some specific non linear model against which the underlying query results are going to be matched. The RANSAC based algorithm then examines and tries to match the underlying query results against the selected model. For example a search engine or a component thereof may provide a user interface through which a user can enter or select one of multiple available models against which the search engine can match the results returned from fingerprint queries that are generated from a query content item. After the user provides input selecting a particular model the search engine or a component thereof applies a RANSAC algorithm to fit the query results against the selected model in accordance with the RANSAC based mechanism described herein.

In some embodiments the RANSAC based mechanism described herein may automatically select a particular model against which the underlying query results are going to be matched. For example a search engine or a component thereof may use some heuristics or other selection techniques to select a model from multiple models that are configured for the search engine and may then examine and try to match the query results against the selected model.

In some embodiments the RANSAC based mechanism described herein may allow a user to select a default model that will be applied against query content items that come from a particular source. For example a search engine may provide the user with an interface through which the user may initially select a default model. The search engine may then apply the RANSAC based mechanism by using the default model to initially match the underlying query results for a particular query content item. If the RANSAC based mechanism does not detect any trends e.g. linear trends if default model is linear in the underlying query results then the search engine may prompt the user to select some other model e.g. one of multiple available non linear models against which to attempt to match the query results. In this manner these embodiments allow a user to select and test various models against the query results for the query content item. This may be particularly useful when query content items coming from a particular source e.g. a repository of potentially copyright infringing videos are encoded according to some encoding that is not initially known to the user of the search engine. Thus by selecting from multiple available models the user may use the search engine to determine a model that corresponds to the encoding and may then set this model as a default when trying to match content items coming from that repository.

In some embodiments the RANSAC based mechanism described herein may automatically select and use a default model against which the underlying query results are going to be matched. If the selected default model does not match the query results then a user may be presented with a set of choices from which to select another model different from the default against which to try to match the query results. For example a search engine may by default apply the RANSAC based mechanism by using a linear model to initially match the underlying query results. If the RANSAC based mechanism does not detect any linear trends in the underlying query results then the search engine may prompt the user to select some other model e.g. one of multiple available non linear models against which to attempt to match the query results. In these embodiments the use of a default model in combination with user selectable models would speed up the identification of a matching content item especially when the user has initially no idea of the exact type of modification that may have been performed on the query content item that needs to be identified.

In some embodiments the RANSAC based mechanism described herein is operable to match the results of fingerprint queries for a query content item against a non linear model that represents a two dimensional curve other than a straight line.

In the context of fingerprint identification a set of query results exhibiting a non linear trend means that the playback speed of the query content item being identified is not constant but is fluctuating e.g. some portions of the content item would play faster than other portions . For example an encoding of the query content item may deliberately use a fluctuating playback speed in accordance with a non linear model and the inverse non linear model known to the infringer but not to the search engine user may be applied during decoding playback in order to make the identification of the content item mode difficult.

In some embodiments the RANSAC based mechanism described herein may be operable to fit query results for query content items against non linear models that represent various non linear curves. For example the non linear models may be expressed as polynomials of different orders with the order 1 where a polynomial is an empirical representation of a two dimensional curved line. For instance a polynomial of the 2order represents parabola. In another example a non linear model may represent a curve that is created by modulating a periodic non linear curve on top of a linear model. Such curve may look like a sine wave except that it would have an overall linear trend that is pointing upward. It is noted that the techniques described herein are not limited to using non linear trends of any particular kind or any particular order. Rather different embodiments may use as non linear models polynomials of various orders for achieving greater content identification accuracy where the order of the selected polynomial may be adjusted e.g. dynamically or in response to user input in order to account for noise in the underlying data and or for faster processing.

The RANSAC based mechanism may be implemented by a variety of software components and in a variety of operational contexts. For example in one operational context the steps of the method in may be performed by one or more modules of a search engine such as search engine in . For illustration purposes only the steps of the method illustrated in are described hereinafter as being performed by a search engine however it is noted that in various embodiments and operational contexts the steps of the method in may be performed by software and or hardware components other than a search engine.

Referring to in step a search engine or a component thereof determines a time window for a query content item. As used herein time window relates to a time interval during which fingerprints are extracted or otherwise generated from a query content item. For example if the search engine operates offline to identify discrete query content items against a fingerprint database the search engine or the component thereof may select as the time window the entire length of a query content item that is being identified. If the search engine operates online to process a stream that contains the query content item the search engine may use an adaptive algorithm to incrementally update the time window for the query content item until a matching reference content item is found or until processing of the stream is completed.

In step the search engine or a component thereof accesses a plurality of query results that are obtained in response to a plurality of fingerprint queries that specify query fingerprints that are extracted within the time window from a query content item.

In step the search engine or a component thereof groups the query results into multiple groups by content identifier where the subset of query results within a given group indicate the same content identifier for the same candidate content item. As used herein candidate content item relates to a reference content item that is associated with one or more reference fingerprints and that may potentially be an accurate match to a given query content item. A query result may include a matching reference fingerprint and a content identifier associated with the reference fingerprint where the content identifier identifies a reference content item that is considered by the RANSAC based mechanism described herein as a candidate content item for the purposes of further processing.

In step to step the search engine or a component thereof processes the query results in each separate group to determine a linear trend that fits a set of data points generated for that group. For example in step the search engine or a component thereof selects the query results included in a particular group and generates a set of data points based on the query fingerprints and the matching reference fingerprints included in the query results. In step a RANSAC algorithm is applied to the set of generated data points. When applied the RANSAC algorithm returns the parameters of a linear trend e.g. a slope a number of in lier data points and or an intercept that best fits the set of data points. In some embodiments the RANSAC based mechanism described herein may constrain the distance threshold D that is used by the RANSAC algorithm to determine the in lier data points that are close to the detected line for example the distance threshold D may be set to 1 12 seconds. In some embodiments the RANSAC based mechanism described herein may constrain any slope value detected by the RANSAC algorithm to be within a certain range for example the range of 0.5 2.5 . In these embodiments if the slope value determined from a pair of data points is outside the slope range the RANSAC based mechanism would discard the iteration involving this pair of data points and would continue with a next iteration by selecting another pair of points from the current set of data points. If the data points in the current set of data points do not yield a slope value within the slope range the RANSAC based mechanism would forego any further processing of the candidate content item associated with that set of data points. In step the search engine or the component thereof determines whether there are any more candidate content items to process. If there are more candidate content items to process the search engine or the component thereof proceeds with step to process the next candidate content item. If in step the search engine or the component thereof determines that the RANSAC algorithm has been applied to the data points associated with each candidate content item the search engine proceeds with step to compute a confidence score for each candidate content item.

In step the search engine or a component thereof computes a confidence score for each individual candidate content item based on the slope value of the linear trend detected for that individual content item and the number of in lier data points that fit the detected linear trend. As used herein confidence score relates to a metric that indicates the likelihood of a linear trend of indicating that a candidate content item which is associated with the linear trend correctly identifies a given query content item.

In step the search engine or a component thereof sorts the candidate content items according to their respective confidence scores and in step through step the candidate content items are processed one by one starting with the candidate content item that has the highest confidence score. The sorting and processing of candidate content items by confidence score allows the RANSAC based mechanism described herein to process the candidate content items in order from the most likely to the least likely candidate content item. This confidence score based processing is markedly different from prior approaches which use a majority operation to determine the candidate content item that is most frequently found in the query results and use that candidate content item as the final result. In such prior approaches the use of a majority operation may yield a wrong result especially if there is a lot of noise and a lot of out liers in the query results.

In contrast according to the RANSAC based mechanism described herein in step the search engine or a component thereof selects for processing the candidate content item with the highest confidence score first and in step of the search engine or the component thereof verifies the linear trend for that candidate content item against a threshold.

Referring to if in step the search engine or the component thereof determines that the linear trend for the current candidate content item satisfies the threshold then in step the search engine determines that the current candidate content item is a matching content item and in step the search engine stops the identification process and foregoes the processing of the remaining candidate content items.

If in step the search engine or the component thereof determines that the linear trend for the current candidate content item does not satisfy the threshold then in step the search engine or the component thereof determines whether there are any linear trends of candidate content items remaining for verification. If in step the search engine or the component thereof determines that no linear trends remain for verification then in step the search engine or the component thereof determines that no linear trends have been verified and thus no matching content item has been found and in step the search engine stops the identification process. If in step the search engine or the component thereof determines that the linear trends of one or more candidate content items remain for verification then in step the search engine or the component thereof select for processing the candidate content item having the next highest confidence score and repeats step through step for that candidate content item.

In this manner the RANSAC based mechanism described herein processes the candidate content items in order of decreasing confidence score and foregoes the processing of any remaining candidate content items once it finds a candidate content item that is associated with a linear trend that satisfies the pre set threshold.

The RANSAC based mechanism described herein may be implemented to operate in offline mode as well as in online mode. In offline mode the time window during which fingerprints are extracted from a query content item may be selected as the time length of the entire query content item or as the time length of one or more portions thereof.

In online mode the RANSAC based mechanism described herein may use an adaptive algorithm to dynamically determine the time window for a query content item that is provided or accessed in a streaming manner. For example in one embodiment the following adaptive algorithm may be used to dynamically determine the time window for a query content item that is being streamed. Let Tbe the length of the query content item Tbe the current time window from which query fingerprints are extracted Tbe the step or increment to T and Tbe the base window size e.g. the time duration of a fingerprint . In addition let MAX N n be the maximum number of in lier data points among all candidate content items in the npass of linear trend detection and let MAX N 0 0. Initially T T and Tare set to equal the same value e.g. T T T. The pseudo code of the adaptive algorithm for determining the time window is illustrated in Table 2.

According to the RANSAC based mechanism described herein query fingerprints are extracted or otherwise generated from a query content item for which identification needs to be performed. A fingerprint database is then searched to find reference fingerprints that match the extracted query fingerprints where the reference fingerprints may be associated with different content identifiers e.g. filenames content item titles etc. that identify different reference content items. For example a set of fingerprint queries may be generated for the query fingerprints and the set of fingerprint queries may be executed against the fingerprint database. A query result may include a matching reference fingerprint and a content identifier associated with the reference fingerprint where the content identifier identifies a reference content item that may be considered by the RANSAC based mechanism described herein as a candidate content item for the purposes of further processing.

The returned query results are then grouped into separate groups by content identifier where the subset of query results within each group indicate the same content identifier for the same candidate content item. In some embodiments the groups may be further sorted by the frequency with which the candidate content items are present in each group.

To improve the processing efficiency in some embodiments only some of the candidate content items but not all may be selected for further processing based on their frequency of appearance in the query results. For example if MAX F is used to denote the highest matching frequency among all candidate content items then only candidate content items with matching frequency bigger than

According to the RANSAC based mechanism described herein a set of data points is generated for the candidate content item in each group. For example a set of data points may be generated based on the time locations of the query fingerprints in the query content item and the time locations of the correspondingly matching reference fingerprints in the candidate content item represented in each group.

A RANSAC algorithm is then applied separately to the set of data points in each group to determine a linear trend that is associated with the candidate content item represented in that group. illustrates a graph of an example linear trend that may be determined by applying a RANSAC algorithm in accordance with the techniques described herein.

In various embodiments the RANSAC algorithm being applied may be modified in accordance with the techniques described herein in order to perform efficiently in the context of fingerprinting based content identification. For example a traditional RANSAC algorithm may be customized by modifying various parameters including but not limited to parameters defining with the linear model parameters determining the number of iterations and parameters defining the tolerance for in lier data points.

When applied a RANSAC algorithm would find a linear trend with the maximum number of in lier data points. However in the context of fingerprinting based content identification only linear trends having a slope within a certain range need to be considered. In some embodiments the slope range may be set as 0.5 2.5 and a RANSAC algorithm may be modified to find only linear trends that have slope values within this range and that have the maximum number of in lier data points respective to these trends.

Let p denote the proportion of the in lier data points against the total number of data points and n denote the number of iterations e.g. the number of times the RANSAC algorithm picks two data points at random and fits a line through them. After n iterations the probability P that a good linear trend is never determined is 1 and thus

When a non linear model represented by an order m polynomial is selected for use in the RANSAC algorithm it would take m 1 data points to fit a trend during each iteration of the algorithm. Thus after n iterations the probability P that a good non linear trend is never determined is 1 and thus

For a linear model when the RANSAC algorithm picks a line through two randomly selected data points the RANSAC algorithm needs to count the number of in lier data points that support e.g. are close to that line. To determine whether a data point is an in lier or an out lier with respect to a line distance measurement from the data point to the line is required. The distance measurement for a data point is computed as follows. Let 0 be the line given by two data points in a certain iteration. Then for each of the remaining data points x y in the set of data point on which the RANSAC algorithm is applied the distance measurement d is computed as

When the RANSAC based mechanism described herein is applied for a linear model a confidence score may be computed for each candidate content item after the linear trend for each candidate content item is determined. For example the confidence score for a candidate content item may computed as the multiplicative product of the number of in lier data points for the linear trend determined for that candidate content item and a confidence value based on the slope of the determined linear trend.

After a RANSAC algorithm is applied to the set of data points in each group a linear trend is determined for each candidate content item and is characterized by a slope value and a number of in liers data points that fit that linear trend. In some embodiments a confidence score for each candidate content item may be determined as follows. Let k be the slope determined for a linear trend and Nbe the number of in lier data points that fit that linear trend. Then the following empirical formula may be used to determine the confidence score max where S is the computed confidence score for the candidate content item and max e e is a confidence value function that ranges from a maximum of about 1.0 and a minimum of about 0.23 depending on the slope k of the determined linear trend. illustrates a graph of this confidence value function according to these embodiments. It is noted that a modified RANSAC algorithm may be used in some embodiments in which during each RANSAC iteration the modified RANSAC algorithm may compute the confidence score along with the slope k and may then consider the computed confidence score in determining whether the slope k is likely to be accurate. This gives more precedence to a slope closer to 1.0 if there are multiple linear trends with different slopes for a given candidate content item.

After the confidence score for each candidate content item is computed the candidate content items are sorted based on their confidence score for the purpose of performing a final verification.

When the RANSAC based mechanism described herein is applied for a linear model a final verification is performed for the candidate content items one by one in order of decreasing confidence score. If the linear trend for one candidate content item satisfies a certain pre set threshold that candidate content item is considered as a matching result and the linear trends for the remaining candidate content items are not verified.

The final verification of each linear trend includes comparing to one or more threshold values one or more metrics that are derived from parameters associated with that linear trend. The final verification of each linear trend may be needed because a wrong result e.g. the wrong reference content item being identified as a matching content item may be obtained when a small time interval includes a lot of data points even when the modified RANSAC algorithm described herein indicates a lot of in lier data points. This is because a small query time interval even with a high concentration of data points may not be indicative of a correct result. In general a larger query time interval is more reliable and the final verification described herein deals with the problem posed by small query intervals.

In some embodiments the final verification may be based on the normalized number of in lier data points for the linear trend determined for each candidate content item. To perform the final verification the RANSAC based mechanism described herein may first divide the query time interval into multiple time segments. Then for a given candidate content item the RANSAC based mechanism determines whether there is at least one in lier data point within each time segment. A time segment with at least one in lier data point is marked as in lier segment. Then the normalized number of in lier data points indicates how many time segments have in lier data points and this result is compared to a pre set threshold in order to determine whether the linear trend indicates a matching content item with the accuracy indicated in the threshold.

For example let Tbe the length of the underlying query content item. Tis first quantized into time segments each of which is 5 12 seconds long e.g. includes 5 codewords . Then a search is performed at least once every 5 12 seconds for segments that are 5 12 seconds long. Then a count is taken of how many time segments have at least one in lier data point that falls into them. If this count of in lier time segments for a given candidate content item is higher than a pre set threshold value denoted Threshold Inliers and the density of the in lier data points e.g. in lier data points per second is also higher than another pre set threshold value denoted Threshold Density then the candidate content item is determined to pass the final verification.

In some embodiments the threshold values in the final verification may be selected as follows Threshold Inliers 6 Threshold Density 3 10 In these embodiments the threshold density may be set so low in order to detect very weak linear trends. It is noted however that the threshold density may be adjusted to suit different data sets and different operational contexts. For example in order to better deal with short query content items in some embodiments the threshold values in the final verification may be selected as follows Threshold Inliers 4 Threshold Density 1 In these embodiments the threshold density may be computed by using the time length of the query content item and may thus be stricter.

According to the techniques described herein using a RANSAC algorithm to fit the results of fingerprint queries against non linear models is performed in a manner similar to using a RANSAC algorithm to fit query results against linear models. For example the RANSAC based mechanism described herein is operable to use a confidence score in order to determine the best non linear trend that fits the underlying query results and correspondingly identifies a matching content item where the confidence score is driven by the number of in lier data points and how close the obtained coefficients of the model are to their most commonly occurring values just like how close the obtained slope value is to its most common value of 1.0 for a linear model. Similarly the RANSAC based mechanism described herein is operable to use range s for the values of one or more coefficients of a non linear model to restrict the non linear curves that are identified during each iteration of the RANSAC algorithm thus increasing the accuracy and processing speed of the mechanism in identifying the best matching content item. The RANSAC based mechanism described herein is also operable to use thresholds of absolute and or relative density of in lier data points for non linear curves in a similar manner as the thresholds described herein for linear trends.

The techniques described herein provide a ranking based mechanism that is operable to identify duplicate or multiple reference content items that all match a given query content item. Generally fingerprinting based content identification approaches return for each query fingerprint a best match that the search algorithm can find within a reasonable amount of time where the best match is that one reference fingerprint from across the entire fingerprint database which most closely matches the query fingerprint. Then the results from a number of query fingerprint searches are combined by content identifier e.g. a filename or content title and additional algorithms are applied to determine the most accurately matching reference content item.

However a difficulty remains when duplicate content items are represented by reference fingerprints in the fingerprint database. For example if a fingerprint database stores reference fingerprints for two different instances of the same movie and the two instances are nearly the same with respect to ratio letter box size picture quality etc. then the best match for a query content item from this movie may either return the first instance e.g. if the reference fingerprints from the first instance have a higher priority in the fingerprint database or return one of the two instances in an arbitrary and unpredictable manner. In the first case the user would not be aware of the existence of a duplicate or nearly duplicate instance of the movie in the fingerprint database. In the second case the user would get arbitrary results e.g. the returned results are said to oscillate .

Duplicate or nearly duplicate instances of the same content sometimes occur because the same content may be released as separate versions and or in separate releases. For example the same song in case of audio fingerprinting can appear as slightly different versions in various album releases or it could appear in an original album and then re appear as part of a Greatest Hits album. Further in some operational contexts there may be additional reasons to keep duplicate content represented in the same fingerprint database. For example a short scene from one episode of a TV series may be replayed as a re cap from another episode. In such cases it may be desirable to keep both versions represented in the fingerprint database when the database is used to detect unauthorized use.

To address the difficulties posed by duplicate content that is represented in the same fingerprint database the techniques described herein provide a ranking based mechanism that may employ the bin counting or RANSAC based trend detection mechanism described herein.

Instead of returning a best match the ranking based mechanism described herein returns up to the top K best reference fingerprint matches for each query fingerprint where K can be a fixed constant e.g. 3 . If there are less than K matches returned for a particular query fingerprint then all available reference fingerprints that match may be returned. Then all K reference fingerprints that match as opposed to a single best match are used to generate the set of data points that are provided to a trend detection mechanism. During trend detection the set of data points may be sorted by their associated content identifiers e.g. filenames or content titles and then a trend detection mechanism e.g. a bin counting or a RANSAC based mechanism may be applied to each subset of data points that are associated with the same content identifier.

It is noted that according to the ranking based mechanism described herein the trend detection is not stopped as soon as an acceptable reference content item is determined. Rather since the goal is to identify the existence of duplicate reference content items the ranking based mechanism described herein would continue to detect trends for at least some of the remaining reference content items. If many candidate content items are identified in the fingerprint search results the ranking based mechanism may stop after detecting the trends for all remaining candidate content items but for best performance it should not stop before detecting some number e.g. K of acceptable reference content items. The rationale is that since the ranking based mechanism returns up to the top K matches per query fingerprint search it is likely that only up to K instances of duplicate reference content items can be detected.

In step a search engine or a component thereof obtains or otherwise accesses a plurality of query results that are returned in response to a plurality of fingerprint queries that are generated for a query content item. The query results include a first fixed number e.g. K where K 1 of multiple different query results that are returned for at least one of the fingerprint queries. For example for the same query fingerprint the query results may include K different reference fingerprints that are associated with K different content identifiers that identify K different candidate content items.

In step the search engine or a component thereof groups the query results including the multiple different query results for the same fingerprint query into multiple groups by content identifier where the subset of query results within a given group indicate the same content identifier for the same candidate content item. For example all query results in group 1 indicate content identifier 1 all query results in group 2 indicate content identifier 2 etc. Thus the multiple different query results for the same fingerprint query would be included in separate and different groups which may or may not include query results for other fingerprint queries.

In step to step the search engine or a component thereof applies a trend detection mechanism separately to each candidate content item that is identified in the separate groups. The trend detection mechanism may be the bin counting or RANSAC based mechanism described herein or it may be any other now known or later developed trend detection mechanism. For example in step the search engine or the component thereof may select a candidate content item from the candidate content items that are identified in the groups. The search engine or the component thereof may select the query results included in a particular group and may generate a set of data points based on the query fingerprints and the matching reference fingerprints included in the query results. In step a trend detection mechanism is applied to the set of generated data points. When applied the trend detection mechanism returns the parameters of a trend e.g. a slope for a linear trend a number of in lier data points and or an intercept that best fits the set of data points.

In step the search engine or the component thereof determines whether there are any more candidate content items to process. If there are more candidate content items to process the search engine or the component thereof proceeds with step to select and process the next candidate content item. If in step the search engine or the component thereof determines that there are no more candidate content items that should be processed the search engine proceeds with step .

In step based on the trends determined for the candidate content items the search engine or a component thereof identifies matching content items that match the query content item from up to a number e.g. N of candidate content items. The number of candidate content items that can potentially match the query content item is greater than or equal to the number of multiple different query results that can be returned for the same fingerprint query in other words N K where N is the number of the candidate content items from which matching content items are identified and K is the number of multiple different query results that can be returned for same fingerprint query. It is noted that in different embodiments and in different operational contexts the parameters N and K may be set to any suitable values. For example the parameters N and K may be determined based on various parameters including but not limited to the type e.g. audio or video of content that is being identified the type and or size of the fingerprint database and the anticipated number and or format of the duplicate content in the fingerprint database. Further in some embodiments the parameters N and K may be dynamically set by a user e.g. for each individual query content item or for each type of query content item while in other embodiments the parameters N and K may be pre configured for or automatically determined by the search engine.

According to the ranking based mechanism for content identification described herein if reference fingerprints for two nearly identical reference content items are stored in a fingerprint database then both reference content items will be identified and returned as acceptable results after a trend detection mechanism is applied. The two nearly identical reference content items may have similar final scores which may be based on the degree of trend fit for in liers and or all data points on the average BER for in liers and or all data points etc. For example if two copies of a video clip one with high quality and one with low quality are represented in a fingerprint database then a high quality query video will be more likely to match the high quality copy of the video clip and a low quality query video will be more likely to match the low quality copy of the video clip. In either case however the ranking based mechanism described herein will be able to find and return the other copy after performing the trend detection albeit with a different probably lower final score .

When performing linear trend detection e.g. by using a RANSAC based mechanism two data points with the same query time location should not be picked together for determining the slope of the initial line because such data points would indicate a vertical line or a slope of infinity which in turn may result in a floating point error in some implementations of the ranking based mechanism described herein.

It is noted that returning a best match sorting by content identifiers and performing trend detection may in and of itself may be sufficient to detect duplicate reference content items when the best match tends to oscillate between two nearly identical reference content items. However depending on how the best match oscillates it may take more fingerprint searches and a longer duration of the query content item to reliably detect the duplicates when compared to returning top K matches as utilized by the ranking based mechanism described herein. If there is no oscillation then using the best match will not be able to detect duplicates in the fingerprint database at all. In comparison the ranking based mechanism described herein achieves faster and more reliable detection of duplicate reference content items. If the best match oscillates some but not a lot the ranking based mechanism described herein would require a shorter query duration that is less query fingerprints would be needed to obtain the same accuracy.

According to one embodiment the techniques for fingerprinting based content identification described herein are implemented by one or more special purpose computing devices. The special purpose computing devices may be hard wired to perform the techniques or may include digital electronic devices such as one or more application specific integrated circuits ASICs or field programmable gate arrays FPGAs that are persistently programmed to perform the techniques or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware memory other storage or a combination. Such special purpose computing devices may also combine custom hard wired logic ASICs or FPGAs with custom programming to accomplish the techniques. The special purpose computing devices may be desktop computer systems portable computer systems handheld devices networking devices or any other device that incorporates hard wired and or program logic to implement the techniques.

For example is a block diagram that illustrates a computer system upon which a possible embodiment of the techniques described herein may be implemented. Computer system includes a bus or other communication mechanism for communicating information and a hardware processor coupled with bus for processing information. Hardware processor may be for example a general purpose microprocessor.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Such instructions when stored in storage media accessible to processor render computer system into a special purpose machine that is customized to perform the operations specified in the instructions.

Computer system further includes a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor . A storage device such as a magnetic disk or optical disk is provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT or a liquid crystal display LCD for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. According to one embodiment the techniques herein are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term storage media as used herein relates to any media that store data and or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non volatile media and or volatile media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory . Common forms of storage media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card cable modem satellite modem or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification embodiments have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is the invention and is intended by the applicants to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

Thus an embodiment of the invention may relate to one or more of the example embodiments which are enumerated below.

