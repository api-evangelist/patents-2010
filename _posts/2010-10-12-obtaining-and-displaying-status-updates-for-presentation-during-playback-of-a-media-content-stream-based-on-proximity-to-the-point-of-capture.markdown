---

title: Obtaining and displaying status updates for presentation during playback of a media content stream based on proximity to the point of capture
abstract: Systems and methods are provided for obtaining status updates relevant to a segment of a media content stream for presentation during playback. In general, a status updating service collects status updates sent by users via corresponding mobile devices of the users. A media playback device of a user receives a media content stream and obtains data defining a time of capture and, in some embodiments, a location of capture of a segment of the media content stream. Either prior to or during playback of the media content stream, the media playback device obtains status updates that are relevant to the segment of the media content stream directly or indirectly from the status updating service. The media playback device then presents the relevant status updates, or at least a subset thereof, during playback of the media content stream and preferably during playback of the segment of the media content stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08122142&OS=08122142&RS=08122142
owner: Lemi Technology, LLC
number: 08122142
owner_city: Wilmington
owner_country: US
publication_date: 20101012
---
The present disclosure relates to status updates sent by users and more specifically relates to obtaining and displaying relevant status updates for presentation during playback of a media content stream.

Status updating services such as the Twitter micro blogging and social networking service are becoming prolific in today s society. Oftentimes users provide such status updates while being present at live events such as for example sporting events. There is a need for a system and method that leverages such status updates to provide an improved media playback experience for live or pre recorded events.

Systems and methods are provided for obtaining status updates relevant to a segment of a media content stream for presentation during playback of the media content stream. In general a status updating service collects status updates sent by users via corresponding mobile devices of the users. A media playback device of a user receives a media content stream and obtains data defining a time of capture and in some embodiments a location of capture of a segment of the media content. Either prior to or during playback of the media content stream the media playback device obtains status updates that are relevant to the segment of the media content directly or indirectly from the status updating service. The media playback device then presents the relevant status updates or at least a subset thereof during playback of the media content and preferably during playback of the segment of the media content.

In one embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from users in one or more crowds of users. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from users in one or more crowds of users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the media content stream. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from users in one or more crowds of users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the media content stream and that match a user profile of a user of the media playback device to a predefined threshold degree. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from users in one or more crowds of users that match a user profile of the user of the media playback device to at least a predefined threshold degree.

In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream and that have user profiles that match a user profile of a user of the media playback device to at least a predefined threshold degree.

In another embodiment a computer readable medium stores software for instructing a controller of a media playback device to receive a media content stream obtain a time of capture and a location of capture of a segment of the media content stream obtain one or more relevant status updates comprising one or more status updates sent in temporal proximity to the time of capture of the segment of the media content stream by users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream and effect presentation of the one or more relevant status updates during playback of the segment of the media content stream.

Those skilled in the art will appreciate the scope of the present disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

Systems and methods are provided for obtaining status updates relevant to a segment of a media content stream for presentation during playback of the media content stream. The media content stream may be delivered over a terrestrial or satellite broadcast network an Internet connection or a Local Area Network LAN connection. For example the media content stream may be streaming video content for a live or pre recorded event e.g. a television broadcast of a live event such as a sporting event or a streaming Internet video broadcast of a live event such as a sporting event . As another example the media content stream may be streaming audio content for a live or pre recorded event e.g. a radio broadcast of a live or pre recorded sporting event or a streaming Internet audio broadcast of a live or pre recorded sporting event . Also as used herein a status update is a message provided by a user as an indicator of a current status of the user. The status update may include text based status updates an audio status update a video status update an image status update or any combination thereof. As an example a status update may be a tweet provided by a user of the Twitter micro blogging and social networking service which is referred to herein as one example of a status updating service.

The status updating service is preferably implemented in software and hosted by a physical server or a number of physical servers operating in a collaborative manner for purposes of load sharing or redundancy. In this embodiment the status updating service includes a status update processing function a real time search engine a user accounts repository and a status updates repository . The status update processing function operates to enable users such as the users through N to register with the status updating service . In response corresponding user accounts are created in the user accounts repository . In this embodiment the user accounts repository includes a user account for each of the users . The user account of each of the users may include a user identifier ID of the user such as a screen name or username of the user for the status updating service and in some embodiments an indicator such as a flag that indicates whether status updates from the user are to be shared with the crowd server . In some embodiments the user account of the user may also include a user profile of the user that defines one or more interests of the user .

As discussed below in detail the status update processing function also operates to receive status updates from the users via the mobile devices of the users over the network . Each status update preferably includes the user ID of the user from which the status update originated a body of the status update a timestamp defining a time and date on which the status update was sent from the mobile device of the user to the status updating service and in some embodiments a location of the user at the time the status update was sent from the mobile device to the status updating service . Upon receiving status updates from the mobile devices of the users the status update processing function stores the status updates in the status updates repository . In some embodiments the status update processing function also operates to send the status updates or the status updates from some of the users to the crowd server either as they are received or in a batch process. The real time search engine generally enables third parties and in some embodiments the users to access status updates from the status updates repository . In this embodiment the real time search engine includes a Geographic Searching Application Programming Interface GEO API and a search function that operate together to enable geographic based searching of the status updates stored in the status updates repository .

The mobile devices are portable devices having network capabilities. For example each of the mobile devices may be a mobile smart phone e.g. an Apple iPhone device a smart phone using the Google Android Operating System such as the Motorola Droid phone or the like a portable media player or gaming device having network capabilities e.g. an Apple iPod Touch device a tablet computer e.g. an Apple iPad device a notebook or laptop computer or the like. In this embodiment the mobile devices through N include crowd clients through N also generally referred to herein collectively as crowd clients and individually as crowd client status updating applications through N also generally referred to herein collectively as status updating applications and individually as status updating application clocks through N also generally referred to herein collectively as clocks and individually as clock and location functions through N also generally referred to herein collectively as location functions and individually as location function respectively.

The crowd client is preferably but not necessarily implemented in software and generally operates to provide location updates for the user of the mobile device to the crowd server . The location updates received from the mobile devices of the users are used by the crowd server to form and track crowds of users. The crowd client may provide additional features such as for example querying the crowd server for information regarding crowds of users and presenting the resulting information received from the crowd server to the user . While not essential for the present disclosure the interested reader may find additional information regarding features that may additionally be provided by the crowd client and the crowd server in U.S. patent application Ser. No. 12 645 532 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 539 entitled ANONYMOUS CROWD TRACKING which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 535 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 546 entitled CROWD FORMATION FOR MOBILE DEVICE USERS which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 556 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 U.S. patent application Ser. No. 12 645 560 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS which was filed Dec. 23 2009 and U.S. patent application Ser. No. 12 645 544 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS which was filed Dec. 23 2009 all of which are commonly owned and assigned and are hereby incorporated herein by reference in their entireties.

The status updating application is also preferably but not necessarily implemented in software. For example if the mobile device is an Apple iPhone device the status updating application may be an iPhone application. The status updating application enables the user to submit status updates to the status updating service . For example the status updating application may enable the user to create text messages and submit the text messages as status updates to the status updating service . As a specific example the status updating service may be the Twitter micro blogging and social networking service and the status updating application may be a Twitter client application that enables the user to create and submit tweets to the Twitter micro blogging and social networking service. However while Twitter is provided as an example the present disclosure is not limited thereto. Other types of status updating services whether they are stand alone services or services that are incorporated into larger services may be used.

Each status update sent by the status updating application for the user is tagged or otherwise associated with a timestamp that defines the time and date that the status update was sent by the status updating application . Further in some embodiments each status update is also tagged with a geographic location hereinafter location of the mobile device and thus the user at the time that the status update was sent by the status updating application . The status updating application obtains the timestamps for the status updates sent for the user from the clock . The clock may be implemented in software hardware or a combination thereof and operates to provide the current time of day and date. In one embodiment the clock is a network assisted clock to ensure synchronization between the clock and a clock of the media capture system . Similarly the status updating application obtains the location of the mobile device and thus the location of the user from the location function . The location function may be implemented in hardware software or a combination thereof and generally operates to determine or otherwise obtain the current location of the mobile device . For example the location function may be or include a Global Positioning System GPS receiver.

The crowd server is implemented as a physical server or a number of physical servers that operate in a collaborative manner for purposes of load sharing or redundancy. While the details of the crowd server are discussed below in detail the crowd server generally operates to receive location updates for the users from the mobile devices of the users . Based on the location updates the crowd server forms and tracks crowds of users. In addition in some embodiments the crowd server operates to serve requests for status updates by identifying crowds of users that are relevant to the requests and obtaining status updates from users in the relevant crowds.

The system also includes a media capture system that operates to capture media content and transmit the media content to a broadcast Network Operations Center NOC which in turn broadcasts the media content to a number of media playback devices such as media playback device . Note however that the media content captured by the media capture system may be delivered or otherwise communicated to the media playback device by other means.

The media capture system includes a media capture device an encoder a clock a location function and a transmitter . The media capture device is implemented in hardware or a combination of hardware and software and operates to capture a media content stream. In one embodiment the media capture device is a video recording device such as a video camera that operates to capture live video content. In another embodiment the media capture device is an audio recording device that operates to capture live audio content. The encoder operates to encode the media content stream captured by the media capture device with a time of capture and in some embodiments a location of capture for segments of the media content stream. The time of capture of a segment of the media content stream is the time at which the segment of the media content stream was captured and recorded by the media capture device . The location of capture of a segment of the media content stream is the location of the media capture device at the time of capture of the segment of the media content stream. For example if the media content stream is a video stream then the video stream may include a number of scenes that are the segments of the video stream. Each of at least a subset of the scenes of the video stream and preferably all of the scenes of the video stream is encoded with a time of capture of the scene obtained from the clock and in some embodiments a location of capture of the scene obtained from the location function .

The clock may be implemented in software hardware or a combination thereof and operates to provide the current time of day and date. The location function may be implemented in hardware software or a combination thereof and generally operates to determine or otherwise obtain the current location of the mobile device . For example the location function may be or include a GPS receiver. The transmitter may be implemented in software hardware or a combination thereof. In this embodiment the transmitter operates to transmit the media content stream captured by the media capture device and encoded with the times and in some embodiment locations of capture of the segments of the media content stream to the broadcast NOC via a wireless network . The wireless network may be a terrestrial wireless network a satellite network or a combination thereof.

It should be noted that while the media capture system is illustrated as having only one media capture device the present disclosure is not limited thereto. The media capture system may alternatively include multiple media capture devices . Multiple media capture devices may be desired for example at live sporting events such as college or professional football games or the like. In one embodiment each of the media capture devices has its own encoder clock and location function and the encoded media content streams from the multiple media capture devices are combined by the transmitter to provide the media content stream for transmission to the broadcast NOC . Alternatively the encoded media content streams may be transmitted by the transmitter or separate transmitters where the encoded media content streams are subsequently combined by the broadcast NOC to provide the media content stream to be delivered to the media playback device . In another embodiment the multiple media capture devices share the same encoder clock and location function and the captured media content from the multiple media capture devices is combined prior to encoding by the encoder and transmission by the transmitter .

The broadcast NOC includes a receiver and a transmit engine . In this embodiment the receiver receives the media content stream from the media capture system . The transmit engine then broadcasts the media content stream to one or more media playback devices including the media playback device . The media content stream is broadcast over an existing terrestrial or satellite television network an existing terrestrial or satellite radio network or the like.

The media playback device is a device having media playback capabilities such as but not limited to a set top box a television a computer an audio playback device or the like. The media playback device includes a network interface a broadcast reception and playback function and a status update display function . The network interface is implemented in hardware or a combination of hardware and software and operates to communicatively couple the media playback device to the network . The network interface is either a wired network interface such as for example an Ethernet network interface or a wireless network interface such as for example an IEEE 802.11x wireless network interface. The broadcast reception and playback function may be implemented in hardware software or a combination thereof and generally operates to receive the broadcast of the media content stream from the broadcast NOC and provide playback of the media content stream. In this embodiment the broadcast reception and playback function also includes a network interface communicatively coupling the media playback device to the broadcast NOC over a corresponding network. The media playback device outputs or presents the played media content stream via an internal display or speaker s or via an external display and or speaker s depending on the particular embodiment. For example the media playback device may be a television with a built in digital television tuner or a set top box that displays played media content via a connected television or display. In addition to playback of the media content the broadcast reception and playback function extracts the time of capture and location of capture data from the media content and provides the extracted time of capture and location of capture data to the status update display function .

The status update display function is preferably implemented in software but is not limited thereto. For example the status update display function may be implemented as a widget. As discussed below in detail the status update display function uses the time of capture and in some embodiments the location of capture data for one or more segments of the media content stream received by the broadcast reception and playback function to obtain relevant status updates. The status update display function then displays or otherwise presents the relevant status updates during playback of the media content and preferably during playback of corresponding segments of the media content. It should be noted that in an alternative embodiment the status update display function may be incorporated into the broadcast reception and playback function rather than being a separate application.

In another embodiment the contents of the widget are shown on a secondary device. The secondary device may be for example a smartphone a Personal Digital Assistant PDA a laptop computer a desktop computer or similar device. In one embodiment the secondary device is any device having the ability to show content in a web browser. In this embodiment the user would obtain a Uniform Resource Locator URL shown on the display attached to the media playback device and enter this URL into the secondary device. By entering this URL into the secondary device the user is able to receive the status updates. For example the URL may be a URL that enables the secondary device to request the status updates or to register for the status updates to be sent to the secondary device. Note that in this embodiment the status updates may be tailored to that specific user since the secondary device is inherently a single user device.

For each segment of the media content stream for which relevant status updates are obtained in one embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users in one or more crowds of users. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users in one or more crowds of users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the media content stream. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users in one or more crowds of users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the media content stream and that match a user profile of a user of the media playback device to a predefined threshold degree. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users in one or more crowds of users that match the user profile of the user of the media playback device to at least a predefined threshold degree.

In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream. In another embodiment the relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream and that have user profiles that match the user profile of the user of the media playback device to at least a predefined threshold degree.

Before discussing the operation of the system of in more detail a description of the operation of the crowd server to form and track crowds of users according to one embodiment of the present disclosure is beneficial. This description of the crowd server is provided with respect to . is a block diagram of the crowd server of according to one embodiment of the present disclosure. As illustrated the crowd server includes an application layer a business logic layer and a persistence layer . The application layer includes a user web application a mobile client server protocol component and one or more data APIs . The user web application is preferably implemented in software and operates to provide a web interface for users such as the users to access the crowd server via web browsers. As an example the users may initially access the crowd server via the user web application to register with the crowd server and to download the crowd clients to their mobile devices . The mobile client server protocol component is preferably implemented in software and operates to provide an interface between the crowd server and the crowd clients hosted by the mobile devices . The data APIs enable third party devices and or services such as the media playback device to access the crowd server .

The business logic layer includes a profile manager a location manager a status update processor a crowd analyzer and an aggregation engine each of which is preferably implemented in software. The profile manager generally operates to obtain user profiles of the users and store the user profiles of the users in the persistence layer . The profile manager may obtain the user profiles of the users from the users via corresponding user input at the mobile devices obtain the user profiles of the users from a social networking service such as for example the Facebook social networking service or the like. The location manager operates to obtain location updates for the users . In this embodiment the location manager receives the location updates directly from the mobile devices of the users . However in another embodiment the mobile devices may first provide the location updates for the users to a location service such as for example Yahoo s FireEagle service where the location manager then obtains the location updates from the location service. The status update processor generally operates to obtain status updates made by the users from the status updating service . The crowd analyzer operates to form and track crowds of users. In one embodiment the crowd analyzer utilizes a spatial crowd formation algorithm. However the present disclosure is not limited thereto. The aggregation engine generally operates to generate aggregate profile data for crowds of users.

The persistence layer includes an object mapping layer and a datastore . The object mapping layer is preferably implemented in software. The datastore is preferably a relational database which is implemented in a combination of hardware i.e. physical data storage hardware and software i.e. relational database software . In this embodiment the business logic layer is implemented in an object oriented programming language such as for example Java. As such the object mapping layer operates to map objects used in the business logic layer to relational database entities stored in the datastore . Note that in one embodiment data is stored in the datastore in a Resource Description Framework RDF compatible format.

In an alternative embodiment rather than being a relational database the datastore may be implemented as an RDF datastore. More specifically the RDF datastore may be compatible with RDF technology adopted by Semantic Web activities. Namely the RDF datastore may use the Friend Of A Friend FOAF vocabulary for describing people their social networks and their interests. In this embodiment the crowd server may be designed to accept raw FOAF files describing persons their friends and their interests. These FOAF files are currently output by some social networking services such as Livejournal and Facebook. The crowd server may then persist RDF descriptions of the users as a proprietary extension of the FOAF vocabulary that includes additional properties desired for the system .

The snapshots field stores a list of crowd snapshot records corresponding to crowd snapshots captured for the crowd over time. The split from field may be used to store a reference to a crowd record corresponding to another crowd from which the crowd split and the merged into field may be used to store a reference to a crowd record corresponding to another crowd into which the crowd has been merged. The active field stores a Boolean value that represents whether or not the crowd is an active crowd

The user record includes a name field a user ID field a location field a profile field an active interests field an updates field a crowd field and a previous crowd field. The name field stores a string that is the name of the user for which the user record is stored which may be the birth name of the user a username or screen name of the user or the like. The user ID field stores a user ID of the user . The location field stores the current location of the user which may be defined by latitude and longitude coordinates and optionally an altitude. The profile field stores the user profile of the user . In this embodiment the user profile of the user is stored as a list of interest records . The active interests field stores a reference to the interest record or a list of interest records that identify one or more interests from the user profile of the user that the user has selected as active interests. The active interest s of the user may be used when comparing the user profile of the user to other users to for example generate aggregate profile data for crowds of users. The updates field stores a list of status update records for status updates received from the user . The crowd field stores a reference to a crowd record of the crowd of which the user is currently a member. The previous crowd field may be used to store a reference to a crowd record of a crowd of which the user was previously a member.

The interest record includes a keyword field and a Globally Unique Identifier GUID field. The keyword field stores a string that is a keyword that corresponds to the interest stored by the interest record . The GUID field stores an identifier assigned to the interest. The status update record includes a user field a screen name field a GUID field a crowd field a body field a timestamp field and a location field. The user field stores a reference to the user record of the user that provided the status update. The screen name field stores a username or screen name of the user that provided the status update. The GUID field stores an identifier assigned to the status update. The crowd field stores a reference to the crowd in which the user that provided the status update was a member at the time of providing the status update. The body field stores the body of the status update which in this embodiment is a text string. The timestamp field stores a timestamp that identifies the time and date on which the status update was sent by the user . The location field stores a location at which the user was located when the status update was sent.

The crowd snapshot record includes an anonymous users field a center field a North East corner field a South West corner field and a sample time field. The anonymous users field stores a set or list of anonymous user records which are anonymized versions of the user records for the users that are in the crowd at a time the crowd snapshot was created. The center field stores a location corresponding to a center of the crowd at the time of creating the crowd snapshot i.e. the sample time . The North East corner field stores a location corresponding to a North East corner of a bounding box for the crowd at the time the crowd snapshot was created. Similarly the South West corner field stores a location of a South West corner of the bounding box for the crowd at the time the crowd snapshot was created. Together the North East corner the South West corner and the center of the crowd form spatial information defining the location of the crowd at the time the crowd snapshot was created. Note however that the spatial information defining the location of the crowd at the time the crowd snapshot was created may include additional or alternative information depending on the particular implementation. The sample time field stores a timestamp indicating a time at which the crowd snapshot was created. The timestamp preferably includes a date and a time of day at which the crowd snapshot was created.

The anonymous user record includes an anonymous ID field a profile field and an updates field. The anonymous ID field stores an anonymous user ID which is preferably a unique user ID that is not tied or linked back to any of the users and particularly not tied back to the user or the user record for which the anonymous user record has been created. In one embodiment the anonymous user records for the crowd snapshot record are anonymized versions of the user records of the users in the crowd at the time the crowd snapshot was created. The profile field stores a user profile of the anonymous user which in this embodiment is a list of interest records . In this embodiment the user profile of the anonymous user record is the same as the user profile of the corresponding user record of which the anonymous user record is an anonymized version. However other anonymization techniques may be used. For example the interests of all of the users in the crowd may be randomly distributed across the anonymous user records generated for the corresponding user records of the users in the crowd at the time that the crowd snapshot was created. The updates field stores a list of simple status update records where the simple status update records are anonymized versions of the status update records of the users in the crowd for status updates sent by the users in the crowd during the time period for which the crowd snapshot was created. The simple status update record includes a body field and a timestamp field. The body field stores the body from the body field of the corresponding status update record . The timestamp field stores the timestamp from the timestamp field of the corresponding status update record .

Next the crowd analyzer determines whether the new and old bounding boxes overlap step . If so the crowd analyzer creates a bounding box encompassing the new and old bounding boxes step . For example if the new and old bounding boxes are 40 40 meter regions and a 1 1 meter square at the North East corner of the new bounding box overlaps a 1 1 meter square at the South West corner of the old bounding box the crowd analyzer may create a 79 79 meter square bounding box encompassing both the new and old bounding boxes.

The crowd analyzer then determines individual users and crowds relevant to the bounding box created in step step . Note that the crowds relevant to the bounding box are pre existing crowds resulting from previous iterations of the spatial crowd formation process. In this embodiment the crowds relevant to the bounding box are crowds having crowd bounding boxes that are within or overlap the bounding box established in step . In order to determine the relevant crowds the crowd analyzer queries the datastore of the crowd server to obtain crowd records for crowds that are within or overlap the bounding box established in step . The individual users relevant to the bounding box are the users that are currently located within the bounding box and are not already members of a crowd. In order to identify the individual users that are relevant to the bounding box the crowd analyzer queries the datastore of the crowd server for the user records of the users that are currently located in the bounding box created in step and are not already members of a crowd. Next the crowd analyzer computes an optimal inclusion distance for the individual users based on user density within the bounding box step . More specifically in one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is set according to the following equation 

The crowd analyzer then creates a crowd of one user for each individual user within the bounding box established in step that is not already included in a crowd and sets the optimal inclusion distance for those crowds to the initial optimal inclusion distance step . The crowds created for the individual users are temporary crowds created for purposes of performing the crowd formation process. At this point the process proceeds to where the crowd analyzer analyzes the crowds in the bounding box established in step to determine whether any of the crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd and the previous crowd fields in the corresponding user records are set step . More specifically in this embodiment a user that is a member of a crowd is removed from the crowd by removing the user record of the user from the set or list of user records in the crowd record of the crowd and setting the previous crowd stored in the user record of the user to the crowd from which the user has been removed. The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds in the bounding box step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds which are stored in the crowd records for the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two crowds.

If the distance between the two closest crowds is greater than the optimal inclusion distance the process proceeds to step . However if the distance between the two closest crowds is less than the optimal inclusion distance the two crowds are merged step . The manner in which the two crowds are merged differs depending on whether the two crowds are pre existing crowds or temporary crowds created for the spatial crowd formation process. If both crowds are pre existing crowds one of the two crowds is selected as a non surviving crowd and the other is selected as a surviving crowd. If one crowd is larger than the other the smaller crowd is selected as the non surviving crowd and the larger crowd is selected as a surviving crowd. If the two crowds are of the same size one of the crowds is selected as the surviving crowd and the other crowd is selected as the non surviving crowd using any desired technique. The non surviving crowd is then merged into the surviving crowd by adding the set or list of user records for the non surviving crowd to the set or list of user records for the surviving crowd and setting the merged into field of the non surviving crowd to a reference to the crowd record of the surviving crowd. In addition the crowd analyzer sets the previous crowd fields of the user records in the set or list of user records from the non surviving crowd to a reference to the crowd record of the non surviving crowd.

If one of the crowds is a temporary crowd and the other crowd is a pre existing crowd the temporary crowd is selected as the non surviving crowd and the pre existing crowd is selected as the surviving crowd. The non surviving crowd is then merged into the surviving crowd by adding the set or list of user records from the crowd record of the non surviving crowd to the set or list of user records in the crowd record of the surviving crowd. However since the non surviving crowd is a temporary crowd the previous crowd field s of the user record s of the user s in the non surviving crowd are not set to a reference to the crowd record of the non surviving crowd. Similarly the crowd record of the temporary crowd may not have a merged into field but if it does the merged into field is not set to a reference to the surviving crowd.

If both the crowds are temporary crowds one of the two crowds is selected as a non surviving crowd and the other is selected as a surviving crowd. If one crowd is larger than the other the smaller crowd is selected as the non surviving crowd and the larger crowd is selected as the surviving crowd. If the two crowds are of the same size one of the crowds is selected as the surviving crowd and the other crowd is selected as the non surviving crowd using any desired technique. The non surviving crowd is then merged into the surviving crowd by adding the set or list of user records for the non surviving crowd to the set or list of user records for the surviving crowd. However since the non surviving crowd is a temporary crowd the previous crowd field s of the user record s of the user s in the non surviving crowd are not set to a reference to the crowd record of the non surviving crowd. Similarly the crowd record of the temporary crowd may not have a merged into field but if it does the merged into field is not set to a reference to the surviving crowd.

Next the crowd analyzer removes the non surviving crowd step . In this embodiment the manner in which the non surviving crowd is removed depends on whether the non surviving crowd is a pre existing crowd or a temporary crowd. If the non surviving crowd is a pre existing crowd the removal process is performed by removing or nulling the users field the North East corner field the South West corner field and the center field of the crowd record of the non surviving crowd. In this manner the spatial information for the non surviving crowd is removed from the corresponding crowd record such that the non surviving or removed crowd will no longer be found in response to spatial based queries on the datastore . However the crowd snapshots for the non surviving crowd are still available via the crowd record for the non surviving crowd. In contrast if the non surviving crowd is a temporary crowd the crowd analyzer may remove the crowd by deleting the corresponding crowd record .

The crowd analyzer also computes a new crowd center for the surviving crowd step . A center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the surviving crowd is computed step . In one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . The maximum number of iterations is a predefined number that ensures that the crowd formation process does not indefinitely loop over steps through or loop over steps through more than a desired maximum number of times. If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer removes crowds with less than three users or members step and the process ends. As discussed above in this embodiment the manner in which a crowd is removed depends on whether the crowd is a pre existing crowd or a temporary crowd. If the crowd is a pre existing crowd a removal process is performed by removing or nulling the users field the North East corner field the South West corner field and the center field of the crowd record of the crowd. In this manner the spatial information for the crowd is removed from the corresponding crowd record such that the crowd will no longer be found in response to spatial based queries on the datastore . However the crowd snapshots for the crowd are still available via the crowd record for the crowd. In contrast if the crowd is a temporary crowd the crowd analyzer may remove the crowd by deleting the corresponding crowd record . In this manner crowds having less than three members are removed in order to maintain privacy of individuals as well as groups of two users e.g. a couple . Note that while the minimum number of users in a crowd is preferably three the present disclosure is not limited thereto. The minimum number of users in a crowd may alternatively be any desired number greater than or equal to two.

Returning to step in if the new and old bounding boxes do not overlap the process proceeds to and the bounding box to be processed is set to the old bounding box step . In general the crowd analyzer then processes the old bounding box in much that same manner as described above with respect to steps through . More specifically the crowd analyzer determines the individual users and crowds relevant to the bounding box step . Again note that the crowds relevant to the bounding box are pre existing crowds resulting from previous iterations of the spatial crowd formation process. In this embodiment the crowds relevant to the bounding box are crowds having crowd bounding boxes that are within or overlap the bounding box. The individual users relevant to the bounding box are users that are currently located within the bounding box and are not already members of a crowd. Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density within the bounding box step . The optimal inclusion distance may be computed as described above with respect to step of .

The crowd analyzer then creates a crowd of one user for each individual user within the bounding box that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . The crowds created for the individual users are temporary crowds created for purposes of performing the crowd formation process. At this point the crowd analyzer analyzes the crowds in the bounding box to determine whether any crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd and the previous crowd fields in the corresponding user records are set step . More specifically in this embodiment a user that is a member of a crowd is removed from the crowd by removing the user record of the user from the set or list of user records in the crowd record of the crowd and setting the previous crowd stored in the user record of the user to the crowd from which the user has been removed. The crowd analyzer then creates a crowd for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds in the bounding box step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is greater than the optimal inclusion distance the process proceeds to step . However if the distance between the two closest crowds is less than the optimal inclusion distance the two crowds are merged step . The manner in which the two crowds are merged differs depending on whether the two crowds are pre existing crowds or temporary crowds created for the spatial crowd formation process. If both crowds are pre existing crowds one of the two crowds is selected as a non surviving crowd and the other is selected as a surviving crowd. If one crowd is larger than the other the smaller crowd is selected as the non surviving crowd and the larger crowd is selected as the surviving crowd. If the two crowds are of the same size one of the crowds is selected as the surviving crowd and the other crowd is selected as the non surviving crowd using any desired technique. The non surviving crowd is then merged into the surviving crowd by adding the set or list of user records for the non surviving crowd to the set or list of user records for the surviving crowd and setting the merged into field of the non surviving crowd to a reference to the crowd record of the surviving crowd. In addition the crowd analyzer sets the previous crowd fields of the set or list of user records from the non surviving crowd to a reference to the crowd record of the non surviving crowd.

If one of the crowds is a temporary crowd and the other crowd is a pre existing crowd the temporary crowd is selected as the non surviving crowd and the pre existing crowd is selected as the surviving crowd. The non surviving crowd is then merged into the surviving crowd by adding the user records from the set or list of user records from the crowd record of the non surviving crowd to the set or list of user records in the crowd record of the surviving crowd. However since the non surviving crowd is a temporary crowd the previous crowd field s of the user record s of the user s in the non surviving crowd are not set to a reference to the crowd record of the non surviving crowd. Similarly the crowd record of the temporary crowd may not have a merged into field but if it does the merged into field is not set to a reference to the surviving crowd.

If both the crowds are temporary crowds one of the two crowds is selected as a non surviving crowd and the other is selected as a surviving crowd. If one crowd is larger than the other the smaller crowd is selected as the non surviving crowd and the larger crowd is selected as the surviving crowd. If the two crowds are of the same size one of the crowds is selected as the surviving crowd and the other crowd is selected as the non surviving crowd using any desired technique. The non surviving crowd is then merged into the surviving crowd by adding the set or list of user records for the non surviving crowd to the set or list of user records for the surviving crowd. However since the non surviving crowd is a temporary crowd the previous crowd field s of the user record s of the user s in the non surviving crowd are not set to a reference to the crowd record of the non surviving crowd. Similarly the crowd record of the temporary crowd may not have a merged into field but if it does the merged into field is not set to a reference to the surviving crowd.

Next the crowd analyzer removes the non surviving crowd step . In this embodiment the manner in which the non surviving crowd is removed depends on whether the non surviving crowd is a pre existing crowd or a temporary crowd. If the non surviving crowd is a pre existing crowd the removal process is performed by removing or nulling the users field the North East corner field the South West corner field and the center field of the crowd record of the non surviving crowd. In this manner the spatial information for the non surviving crowd is removed from the corresponding crowd record such that the non surviving or removed crowd will no longer be found in response to spatial based queries on the datastore . However the crowd snapshots for the non surviving crowd are still available via the crowd record for the non surviving crowd. In contrast if the non surviving crowd is a temporary crowd the crowd analyzer may remove the crowd by deleting the corresponding crowd record .

The crowd analyzer also computes a new crowd center for the surviving crowd step . Again a center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the surviving crowd is computed step . In one embodiment the new optimal inclusion distance for the surviving crowd is computed in the manner described above with respect to step of .

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer removes crowds with less than three users or members step . As discussed above in this embodiment the manner in which a crowd is removed depends on whether the crowd is a pre existing crowd or a temporary crowd. If the crowd is a pre existing crowd a removal process is performed by removing or nulling the users field the North East corner field the South West corner field and the center field of the crowd record of the crowd. In this manner the spatial information for the crowd is removed from the corresponding crowd record such that the crowd will no longer be found in response to spatial based queries on the datastore . However the crowd snapshots for the crowd are still available via the crowd record for the crowd. In contrast if the crowd is a temporary crowd the crowd analyzer may remove the crowd by deleting the corresponding crowd record . In this manner crowds having less than three members are removed in order to maintain privacy of individuals as well as groups of two users e.g. a couple . Again note that a minimum number of users is the crowd may alternatively be any desired number greater than or equal to two.

The crowd analyzer then determines whether the crowd formation process for the new and old bounding boxes is done step . In other words the crowd analyzer determines whether both the new and old bounding boxes have been processed. If not the bounding box is set to the new bounding box step and the process returns to step and is repeated for the new bounding box. Once both the new and old bounding boxes have been processed the crowd formation process ends.

Next the crowd analyzer determines whether there are any crowd change events step . If not the process ends. Otherwise the crowd analyzer gets the next crowd change event step and generates a crowd snapshot for a corresponding crowd step . More specifically the crowd change event identifies the crowd record stored for the crowd for which the crowd change event was detected. A crowd snapshot is then created for that crowd by creating a new crowd snapshot record for the crowd and adding the new crowd snapshot record to the list of crowd snapshots stored in the crowd record for the crowd. As discussed above the crowd snapshot record includes a set or list of anonymous user records which are anonymized versions of the user records for the users in the crowd at the current time. In addition the crowd snapshot record includes the North East corner the South West corner and the center of the crowd at the current time as well as a timestamp defining the current time as the sample time at which the crowd snapshot record was created. In some embodiments the anonymous user records include corresponding lists of simple status update records . The simple status update records store anonymized versions of the status update records sent by the users in the crowd at the time of creating the crowd snapshot during a period of time between the creation of the immediately preceding crowd snapshot for the crowd and the current time. After creating the crowd snapshot the crowd analyzer determines whether there are any more crowd change events step . If so the process returns to step and is repeated for the next crowd change event. Once all of the crowd change events are processed the process ends.

Next the crowd analyzer determines whether the user represented by the user record has sent any status updates since the immediately preceding crowd snapshot for the crowd was created step . If not the process proceeds to step . Otherwise the crowd analyzer gets the next status update for the user represented by the user record step and creates a corresponding simple status update record in the list of updates stored in the anonymous user record step . The crowd analyzer then determines whether there are more status updates to be processed for the user step . If so the process returns to step and is repeated for the next status update for the user . Otherwise the crowd analyzer determines whether the last user record in the list of user records for the crowd has been processed step . If not the process returns to step and is repeated for the next user record in the list of user records for the crowd. Once all of the user records in the list of user records for the crowd have been processed the process ends. Before proceeding it should be noted that while the discussion of the crowd server above focuses on embodiments where anonymization is performed the present disclosure is not limited thereto. In another embodiment the crowd server forms and tracks crowds of users without anonymizing the user records and or status updates stored in association with the crowd snapshots.

Now the discussion turns to the operation of the system of . illustrates the operation of the system of according to a first embodiment of the present disclosure. As illustrated the crowd server forms and tracks crowds of users step . For this discussion it is assumed that the crowd formation and tracking process described above with respect to is used. However the present disclosure is not limited thereto. Other crowd formation and tracking processes may be used. It should also be noted that the crowd formation and tracking process is an iterative and continual process that is performed by the crowd server .

The status updating service collects status updates from the users step . In this embodiment the status updating service sends the status updates for the users to the crowd server step . More specifically the users that desire for their status updates to be sent to the crowd server may configure their user accounts at the status updating service to instruct the status updating service to forward their status updates to the crowd server . Note that not all of the users may desire for their status updates to be sent to the crowd server . It should also be noted that the collection of status updates from the users by the status updating service and the subsequent sending of the status updates from the status updating service to the crowd server is an iterative and continual process. Upon receiving the status updates of the users from the status updating service the crowd server stores the status updates in corresponding status update records in the datastore of the crowd server step .

The media capture system captures a media content stream step . The media content stream is encoded with times of capture of corresponding segments of the media content stream and in some embodiments locations of capture of corresponding segments of the media content stream. In addition as discussed below the media content stream may be encoded with one or more anchors. illustrate a portion of an exemplary media content stream captured and encoded by the media capture system . As illustrated in the media content stream is a video content stream and includes a number of segments which in this embodiment are scenes. For each scene the media content stream includes a location of capture and a time of capture i.e. time code . The time of capture may identify a time at which capture of the corresponding segment began a time period over which the corresponding segment was captured or the like. In addition in this embodiment the media content stream also includes a number of anchors which are denoted by A s in . The anchors define locations other than the location of capture that are relevant to the corresponding segments of the media content stream . These locations are also referred to herein as location anchors. For example if the media content stream is a video stream the anchors may define locations associated with persons appearing in the media content stream e.g. hometown of an athlete appearing in the media content stream . The anchors may also include anchor times which are times that are different than the time of capture.

The anchors may be automatically inserted by for example the media capture system by analyzing the audio content of the media content stream for references to locations and then inserting corresponding anchors. Alternatively the anchors may be manually inserted by a person operating or otherwise associated with the media capture system . As illustrated in adjacent segments of the media content stream may have the same time of capture and location of capture information. This may be beneficial where two adjacent segments in the media content stream are captured at the same location. Before returning to it should be noted that the time and location of capture and the anchors are not necessarily encoded into the media content stream . Alternatively the time and location of capture and the anchors may be provided separately via the same or a separate communication channel.

Returning to the captured media content stream is transmitted directly or indirectly to the media playback device step . The broadcast reception and playback function of the media playback device extracts the time of capture and in some embodiments the location of capture of a segment of the media content stream step . In addition any anchors for the segments of the media content stream may be extracted. The time of capture and in some embodiments the location of capture and or anchors extracted for the segment of the media content stream are then provided to the status update display function of the media playback device . The status update display function of the media playback device then sends a request for status updates to the crowd server step . The request includes the time of capture of the segment of the media content stream and in some embodiments the location of capture and or any anchors extracted for the segment of the media content stream. In some embodiments the request also includes a user profile of the user of the media playback device .

Upon receiving the request for status updates the crowd server identifies one or more relevant crowds step . In one embodiment the one or more relevant crowds include one or more crowds located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream. In one embodiment a crowd is in proximity to the location of capture if the center of the crowd is located within a predefined distance from the location of capture. Further if the time of capture is defined as a single point in time e.g. Jun. 12 2010 at 12 17 pm EST a crowd is located in proximity to the location of capture at the time of capture if the crowd was located in proximity to the location of capture at the defined single point in time. This may be determined based on in this embodiment the location of the crowd recorded for the crowd at a time closest to the time of capture of the segment of the media content stream. Alternatively if the time of capture is defined as a period of time a crowd is located in proximity to the location of capture at the time of capture if the crowd was located in proximity to the location of capture during that period of time.

In addition or alternatively the one or more relevant crowds may include one or more crowds located in proximity to the location of capture of the segment of the media content stream at the time of capture of the media content stream and that sufficiently match the user profile of the user of the media playback device . As used herein a crowd sufficiently matches the user profile of the user if the crowd matches the user profile of the user to at least a predefined threshold degree. More specifically in one embodiment the aggregation engine compares the user profiles of the users in a crowd to the user profile of the user of the media playback device to determine a number of matching interests or keywords. The number of matching interests which may also be referred to herein as a number of user matches may then be compared to a predetermined threshold. If the number of matching interests is greater than the predetermined threshold then the crowd matches the user profile of the user to at least the predefined threshold degree. In another embodiment the aggregation engine may determine the number of user matches in the crowd for each interest or keyword in the user profile of the user . The crowd may then be determined to sufficiently match the user profile of the user if for example a weighted average of the number of user matches for the interests in the user profile of the user is greater than a predefined threshold. In yet another embodiment rather than using the number of matching interests or the number of user matches in the aggregate or for each individual interest in the user profile of the user the aggregation engine may determine whether the crowd sufficiently matches the user profile of the user based on a ratio of the number of users in the crowd that have at least one interest in common with the user to a total number of users in the crowd or a ratio of the number of matching users to a total number of users in the crowd for each interest in the user profile of the user .

The one or more relevant crowds may additionally or alternatively include one or more crowds that sufficiently match the user profile of the user of the media playback device regardless of the location of the crowds. Still further for each anchor defined for the segment if any the one or more relevant crowd may additionally or alternatively include one or more crowds that were located in proximity to the anchor location defined by the anchor at either the time of capture of the media content stream or if defined the anchor time for the anchor.

The crowd server then obtains relevant status updates that were sent from the users in the one or more relevant crowds step . The relevant status updates include status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users in the one or more relevant crowds. In one embodiment the time of capture is defined as a particular point in time and a status update is sent in temporal proximity to the time of capture if the status update was sent within a time window having a predefined duration e.g. two minutes encompassing the particular point in time e.g. centered at the particular point in time starting at the particular point in time or ending at the particular point in time . In another embodiment the time of capture is defined as a period of time and a status update is sent in temporal proximity to the time of capture if the status update was sent during the period of time. In addition if anchors that identify an anchor location and anchor time have been defined for the segment of the media content stream for each relevant crowd identified for those anchors the relevant status updates include status updates sent in temporal proximity to the anchor time from the users in the relevant crowd s located in proximity to the anchor location at the anchor time.

In this embodiment the relevant status updates are obtained from the datastore of the crowd server . Depending on the time of capture of the segment of the media content stream the status updates may be stored in the status update records of the users currently in the one or more relevant crowds or in the simple status update records of the anonymous user records for crowd snapshots captured for the one or more relevant crowds at or near the time of capture of the segment of the media content stream. The crowd server returns the relevant status updates obtained in step to the media playback device step . The crowd server may return only the bodies of the status updates from the corresponding status update or simple status update records or . Alternatively the crowd server may return the bodies of the status updates plus additional information from the corresponding status update or simple status update records or . For example if the names of the users that sent the status updates are available the status updates returned by the crowd server may include both the names of the users and the status update bodies and optionally the locations of the users or the corresponding crowds at the time that the status updates were sent by the users .

The media playback device then presents the relevant status updates during playback of the media content stream and preferably during playback of the corresponding segment of the media content stream step . In one embodiment the status updates may be prioritized based on for example the users that sent the status updates the location of the users at the time of sending the status updates e.g. prioritized based on closeness to the location of capture the time at which the status updates were sent by the users e.g. prioritize based on temporal proximity to the time of capture degree of similarity between the user profile of the user of the media playback device and the user profiles of the users that sent the status updates or the user profiles of the crowds from which the status updates originated status update type e.g. text image video or audio feedback from the user maturity rating e.g. PG R etc. subject matter of the status updates which may be indicated by tags associated with the status updates or the like. Higher priority status updates may be given priority during presentation by for example positioning the higher priority status updates at the top of a list of the status updates presented by the media playback device . Further lower priority status updates may not be presented at all. At this point in this embodiment steps through are repeated to obtain and present status updates for additional segments of the media content stream step .

When presenting the relevant status updates for multiple segments of the media content stream the relevant status updates may be sorted based on one or more criteria. The criteria used for sorting may be for example media content stream segment location of capture boundaries in the media content stream or time of capture boundaries in the media content stream. Thus for example when presenting the relevant status updates the relevant status updates may be presented by segment. Alternatively if the same location of capture and or time of capture is applied to multiple segments of the media content stream e.g. the relevant status updates may be stored by location of capture boundaries or time of capture boundaries. Thus for example if a location of capture encoded into the media content stream applies to two adjacent segments of the media content stream then the relevant status updates obtained for both of those segments may be presented together. Note that sorting may naturally occur in the embodiment where the relevant status updates are obtained on a segment by segment basis as described above. However in an alternative embodiment the request for status updates may include the time of capture location of capture and any anchors for multiple segments and possibly all segments of the media content stream. The relevant status updates returned in response to this request may be sorted by segment time of capture boundaries or location of capture boundaries.

In the embodiment of the media playback device extracts the time and location of capture and any anchors from the media content stream in real time as the media content stream is received and played by the media playback device . As such buffering of the media content stream may be desired in order to delay playback of the media content stream by an amount of time that is sufficient to allow the media playback device to obtain the relevant status updates from the crowd server for presentation during the corresponding segments of the media content stream. The amount of delay provided by the buffering may be statically defined or dynamically controlled by the media playback device .

Note that while the embodiment of is an embodiment where the status updates are obtained and presented in real time as the media content stream is received and played the present disclosure is not limited thereto. In another embodiment the media playback device may be a Digital Video Recorder DVR or similar device that operates to receive and record the media content stream for subsequent playback. In this case the media playback device may store the media content stream prior to or after extracting the time and location of capture and any anchors for the segments of the media content stream. The media playback device may then request status updates for the segments of the media content stream during playback. Alternatively the media playback device may obtain status updates in real time as the segments of the media content stream are received and store the status updates such that the status updates are available for presentation during subsequent playback s of the media content stream. As another alternative the media playback device may receive the media content stream and extract the time of capture location of capture and any anchors either as the media content stream is received or at some time after receiving and storing the media content stream. The media playback device may then obtain the status updates relevant to the segments of the media content stream sometime before playback of the media content stream.

In another embodiment the user of the media playback device is able to zoom in and out on the map area . Zooming in may act to limit the status updates displayed to those status updates originating from the zoom area. The zoom area is a portion of the map area that is zoomed in upon. This may be accomplished by for example filtering the status updates received from the status updating service such that only those status updates originating within the zoom area are displayed. Alternatively only those status updates originating from the zoom area may be requested from the status updating service . The map area may also be configured to contain a number of predefined user selectable interest areas. Interest areas are defined by geographic boundaries and are intended to define geographic areas of common interest. In our example of the basketball arena interest areas may include the home and away benches where the players and coaches sit for example. Once the user has selected one or more of the predefined user selectable interest areas the status updates received from the status updating service may be filtered such that only those status updates originating from the selected interest area s are displayed. Alternatively only those status updates originating from the selected interest area s may be requested from the status updating service .

The media capture system captures a media content stream step . The media content stream is encoded with times of capture of corresponding segments of the media content stream and in some embodiments locations of capture of corresponding segments of the media content stream. In addition the media content stream may be encoded with one or more anchors as described above. Again it should be noted that the time and location of capture and the anchors are not necessarily encoded into the media content stream. Alternatively the time and location of capture and the anchors may be provided separately via the same or a separate communication channel.

The media capture system transmits the captured media content stream directly or indirectly to the media playback device step . The broadcast reception and playback function of the media playback device extracts the time of capture and in some embodiments the location of capture of a segment of the media content stream step . In addition any anchors for the segments of the media content stream may be extracted. The time of capture and in some embodiments the location of capture and or anchors extracted for the segment of the media content stream are then provided to the status update display function of the media playback device . The status update display function of the media playback device then sends a request for status updates to the crowd server step . The request includes the time of capture of the segment of the media content stream and in some embodiments the location of capture and or any anchors extracted for the segment of the media content stream. In some embodiments the request also includes the user profile of the user of the media playback device .

Upon receiving the request for status updates the crowd server identifies one or more relevant crowds step . In one embodiment the one or more relevant crowds include one or more crowds located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream. In one embodiment a crowd is in proximity to the location of capture if the center of the crowd is located within a predefined distance from the location of capture. Further if the time of capture is defined as a single point in time e.g. Jun. 12 2010 at 12 17 pm EST a crowd is located in proximity to the location of capture at the time of capture if the crowd was located in proximity to the location of capture at the defined single point in time. This may be determined based on in this embodiment the location of the crowd recorded for the crowd at a time closest to the time of capture of the segment of the media content stream. Alternatively if the time of capture is defined as a period of time a crowd is located in proximity to the location of capture at or near the time of capture if the crowd was located in proximity to the location of capture during that period of time.

In addition or alternatively the one or more relevant crowds may include one or more crowds located in proximity to the location of capture of the segment of the media content stream at the time of capture of the media content stream and that sufficiently match the user profile of the user of the media playback device . As used herein a crowd sufficiently matches the user profile of the user if the crowd matches the user profile of the user to at least predefined threshold degree. More specifically in one embodiment the aggregation engine compares the user profiles of the users in a crowd to the user profile of the user of the media playback device to determine a number of matching interests or keywords. The number of matching interests which may also be referred to herein as a number of user matches may then be compared to a predetermined threshold. If the number of matching interests is greater than the predetermined threshold then the crowd matches the user profile of the user to at least the predefined threshold degree. In another embodiment the aggregation engine may determine the number of user matches in the crowd for each interest or keyword in the user profile of the user . The crowd may then be determined to sufficiently match the user profile of the user if for example a weighted average of the number of user matches for the interest in the user profile of the user is greater than a predefined threshold. In yet another embodiment rather than using the number of matching interests or the number of user matches in the aggregate or for each individual interest in the user profile of the user the aggregation engine may determine whether the crowd sufficiently matches the user profile of the user based on a ratio of the number of users in the crowd that have at least one interest in common with the user to a total number of users in the crowd or a ratio of the number of matching users to a total number of users in the crowd for each interest in the user profile of the user .

The one or more relevant crowds may additionally or alternatively include one or more crowds that sufficiently match the user profile of the user of the media playback device regardless of the location of the crowds. Still further if an anchor is defined for the segment the one or more relevant crowd may additionally or alternatively include one or more crowds that were located in proximity to the anchor location defined by the anchor for the segment of the media content stream at the time of capture of the media content stream or if defined at the anchor time defined by the anchor.

The crowd server then sends a request to the status updating service for relevant status updates step . The status updating service then processes the request to obtain the relevant status updates step . In one embodiment the request includes information identifying the users in the one or more relevant crowds located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream and the time of capture. As such in this embodiment the status updating service obtains status updates received from the users identified in the request in temporal proximity to the time of capture of the segment of the media content stream. Similarly if an anchor identifying both an anchor location and anchor time is defined for the segment the request may include information identifying the users in the one or more relevant crowds located in proximity to the anchor location at the anchor time and the anchor time. The relevant status updates may then include status updates sent by the users in these relevant crowds in temporal proximity to the anchor time.

In another embodiment the crowd information included in the request sent to the status updating service includes the locations of the one or more relevant crowds e.g. the crowd centers the North East corners and or the South West corners of the one or more relevant crowds at the time of capture of the segment of the media content stream. This may be the case in embodiments where for example identifying the users in the one or more relevant crowds at the time of capture of the segment of the media content stream may not be available due to anonymization. In this embodiment the request is received via the GEO API of the real time search engine of the status updating service . Upon receiving the request the real time search engine of the status updating service obtains from the status updates repository status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users located in proximity to the locations of the one or more relevant crowds at the time of capture of the segment of the media content stream.

The users located in proximity to the locations of the one or more relevant crowds at the time of capture of the segment of the media content stream may be identified differently depending on the particular information used to define the locations the one or more relevant crowds. If the locations of the one or more relevant crowds are defined as the centers of the one or more relevant crowds then the users located in proximity to the one or more relevant crowds at the time of capture of the segment of the media content stream are the users that are located within predefined bounding regions centered at or otherwise encompassing the centers of the one or more relevant crowds e.g. the users that are located within a predefined distance from the centers of the one or more relevant crowds at the time of capture of the segment of the media content stream. If the location identifying the locations of the crowds is information defining bounding boxes or regions for the crowds then the users located in proximity to the locations of the crowds at the time of capture of the segment of the media content stream are the users located within the bounding boxes or regions for the one or more relevant crowds at the time of capture of the segment of the media content stream.

In a similar manner relevant status updates may be obtained for relevant crowds identified for anchors that identify both anchor locations and anchor times. More specifically the crowd information included in the request sent to the status updating service may include for each anchor the location s of relevant crowd s e.g. the crowd centers the North East corners and or the South West corners of the one or more relevant crowds identified for the anchor location at the time of capture of the segment of the media content stream or if defined the anchor time for the anchor. In this embodiment the request is received via the GEO API of the real time search engine of the status updating service . Upon receiving the request the real time search engine of the status updating service obtains from the status updates repository status updates sent in temporal proximity to the time of capture of the segment of the media content stream or if defined the anchor time of the anchor from the users located in proximity to the location s of the relevant crowd s identified for the anchor at the time of capture of the segment of the media content stream or if defined the anchor time defined by the anchor.

The status updating service returns the relevant status updates obtained in step to the crowd server step which in turn returns the relevant status updates to the media playback device step . The media playback device then presents the relevant status updates during playback of the media content stream and preferably during playback of the corresponding segment of the media content stream step . In one embodiment the relevant status updates may be prioritized based on for example the users that sent the relevant status updates the location of the users at the time of sending the relevant status updates e.g. prioritized based on closeness to the location of capture the time at which the relevant status updates were sent by the users e.g. prioritize based on temporal proximity to the time of capture degree of similarity between the user profile of the user of the media playback device and the user profiles of the users that sent the relevant status updates or the user profiles of the crowds from which the relevant status updates originated status update type e.g. text image video or audio feedback from the user maturity rating e.g. PG R etc. subject matter of the relevant status updates which may be indicated by tags associated with the relevant status updates or the like. Higher priority status updates may be given priority during presentation by for example positioning the higher priority status updates at the top of a list of the relevant status updates presented by the media playback device . Further lower priority status updates may not be presented at all. At this point in this embodiment steps through are repeated to obtain and present relevant status updates for additional segments of the media content stream step .

When presenting the relevant status updates for multiple segments of the media content stream the relevant status updates may be sorted based on one or more criteria. The criteria used for sorting may be for example media content stream segment location of capture boundaries in the media content stream or time of capture boundaries in the media content stream. Thus for example when presenting the relevant status updates the relevant status updates may be presented by segment. Alternatively if the same location of capture and or time of capture is applied to multiple segments of the media content stream e.g. the relevant status updates may be stored by location of capture boundaries or time of capture boundaries. Thus for example if a location of capture encoded into the media content stream applies to two adjacent segments of the media content stream then the relevant status updates obtained for both of those segments may be presented together. Note that sorting may naturally occur in the embodiment where the relevant status updates are obtained on a segment by segment basis as described above. However in an alternative embodiment the request for status updates may include the time of capture location of capture and any anchors for multiple segments and possibly all segments of the media content stream. The relevant status updates returned in response to this request may be sorted by segment time of capture boundaries or location of capture boundaries.

In the embodiment of the media playback device extracts the time and location of capture and any anchors from the media content stream in real time as the media content stream is received and played by the media playback device . As such buffering of the media content stream may be desired in order to delay playback of the media content stream by an amount of time that is sufficient to allow the media playback device to obtain the relevant status updates from the crowd server for presentation during the corresponding segments of the media content stream. The amount of delay provided by the buffering may be statically defined or dynamically controlled by the media playback device .

Note that while the embodiment of is an embodiment where the status updates are obtained and presented in real time as the media content stream is received and played the present disclosure is not limited thereto. In another embodiment the media playback device may be a DVR or similar device that operates to receive and record the media content stream for subsequent playback. In this case the media playback device may store the media content stream prior to or after extracting the time and location of capture and any anchors for the segments of the media content stream. The media playback device may then request status updates for the segments of the media content stream during playback. Alternatively the media playback device may obtain status updates in real time as the segments of the media content stream are received and store the status updates such that the status updates are available for presentation during subsequent playback s of the media content stream. As another alternative the media playback device may receive the media content stream and extract the time of capture location of capture and any anchors either as the media content stream is received or at some time after receiving and storing the media content stream. The media playback device may then obtain the status updates relevant to the segments of the media content stream sometime before playback of the media content stream.

The status update display function of the media playback device then sends a request for status updates to the status updating service step . The request includes the crowd information received from the crowd server . In response to receiving the request the status updating service obtains relevant status updates step . In one embodiment the request includes information identifying the users in the one or more relevant crowds located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream. As such in this embodiment the status updating service obtains status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users identified in the request. In addition for each anchor defined for the segment if any the request may include information identifying the users in the one or more relevant crowds located in proximity to the anchor location at either the time of capture of the segment of the media content stream or the anchor time defined by the anchor depending on the particular implementation of the anchor. The status updating service may then obtain status updates sent from the users identified in the request that were sent in temporal proximity to the time of capture or the anchor time as appropriate.

In another embodiment the crowd information included in the request sent to the status updating service includes the locations of the one or more relevant crowds e.g. the crowd centers the North East corners and or the South West corners of the one or more relevant crowds at the time of capture of the segment of the media content stream. This may be the case in embodiments where for example identifying the users in the one or more relevant crowds at the time of capture of the segment of the media content stream may not be available due to anonymization. In this embodiment the request is received via the GEO API of the real time search engine of the status updating service . Upon receiving the request the real time search engine of the status updating service obtains from the status updates repository status updates sent in temporal proximity to the time of capture of the segment of the media content stream from the users located in proximity to the locations of the one or more relevant crowds at the time of capture of the segment of the media content stream. In a similar manner relevant status updates may be obtained for relevant crowds identified for anchors that identify both an anchor location and an anchor time.

The status updating service returns the relevant status updates obtained in step to the media playback device step . The status update display function of the media playback device then presents the relevant status updates during playback of the media content stream and preferably during playback of the corresponding segment of the media content stream step . In one embodiment the relevant status updates may be prioritized based on for example the users that sent the relevant status updates the location of the users at the time of sending the relevant status updates e.g. prioritized based on closeness to the location of capture the time at which the relevant status updates were sent by the users e.g. prioritize based on temporal proximity to the time of capture degree of similarity between the user profile of the user of the media playback device and the user profiles of the users that sent the relevant status updates or the user profiles of the crowds from which the relevant status updates originated status update type e.g. text image video or audio feedback from the user maturity rating e.g. PG R etc. subject matter of the relevant status updates which may be indicated by tags associated with the relevant status updates or the like. Higher priority status updates may be given priority during presentation by for example positioning the higher priority status updates at the top of a list of the status updates presented by the media playback device . Further lower priority status updates may not be presented at all. At this point in this embodiment steps through are repeated to obtain and present relevant status updates for additional segments of the media content stream step .

When presenting the relevant status updates for multiple segments of the media content stream the relevant status updates may be sorted based on one or more criteria. The criteria used for sorting may be for example media content stream segment location of capture boundaries in the media content stream or time of capture boundaries in the media content stream. Thus for example when presenting the relevant status updates the relevant status updates may be presented by segment. Alternatively if the same location of capture and or time of capture is applied to multiple segments of the media content stream e.g. the relevant status updates may be stored by location of capture boundaries or time of capture boundaries. Thus for example if a location of capture encoded into the media content stream applies to two adjacent segments of the media content stream then the relevant status updates obtained for both of those segments may be presented together. Note that sorting may naturally occur in the embodiment where the relevant status updates are obtained on a segment by segment basis as described above. However in an alternative embodiment the request for status updates may include the time of capture location of capture and any anchors for multiple segments and possibly all segments of the media content stream. The relevant status updates returned in response to this request may be sorted by segment time of capture boundaries or location of capture boundaries.

In the embodiment of the media playback device extracts the time and location of capture and any anchors from the media content stream in real time as the media content stream is received and played by the media playback device . As such buffering of the media content stream may be desired in order to delay playback of the media content stream by an amount of time that is sufficient to allow the media playback device to obtain the relevant status updates for presentation during the corresponding segments of the media content stream. The amount of delay provided by the buffering may be statically defined or dynamically controlled by the media playback device .

Note that while the embodiment of is an embodiment where the status updates are obtained and presented in real time as the media content stream is received and played the present disclosure is not limited thereto. In another embodiment the media playback device may be a DVR or similar device that operates to receive and record the media content stream for subsequent playback. In this case the media playback device may store the media content stream prior to or after extracting the time and location of capture and any anchors for the segments of the media content stream. The media playback device may then obtain status updates for the segments of the media content stream during playback. Alternatively the media playback device may obtain status updates in real time as the segments of the media content stream are received and store the status updates such that the status updates are available for presentation during subsequent playback s of the media content stream. As another alternative the media playback device may receive the media content stream and extract the time of capture location of capture and any anchors either as the media content stream is received or at some time after receiving and storing the media content stream. The media playback device may then obtain the status updates relevant to the segments of the media content stream sometime before playback of the media content stream.

The media capture system captures a media content stream step . The media content stream is encoded with times of capture of corresponding segments of the media content stream and in some embodiments locations of capture of corresponding segments of the media content stream. In addition the media content stream may be encoded with one or more anchors as described above. Again it should be noted that the time and location of capture and the anchors are not necessarily encoded into the media content stream. Alternatively the time and location of capture and the anchors may be provided separately via the same or a separate communication channel.

The media capture system transmits the captured media content stream directly or indirectly to the media playback device step . The broadcast reception and playback function of the media playback device extracts the time of capture and in some embodiments the location of capture of a segment of the media content stream step . In addition any anchors for the segments of the media content stream may be extracted. The time of capture and in some embodiments the location of capture and or anchors extracted for the segment of the media content stream are then provided to the status update display function of the media playback device . The status update display function of the media playback device then sends a request for status updates to the status updating service step . The request includes the time of capture of the segment of the media content stream and in some embodiments the location of capture and or any anchors extracted for the segment of the media content stream. In some embodiments the request also includes a profile of the user of the media playback device .

Upon receiving the request for status updates the status updating service obtains relevant status updates step . In one embodiment the relevant status updates include one or more status updates sent to the status updating service in temporal proximity to the time of capture of the segment of the media content stream from one or more of the users located in proximity to the location of capture of the segment of the media content stream at the time of capture of the segment of the media content stream. Thus in other words the one or more relevant status updates may include status updates sent from locations in proximity to the location of capture of the segment of the media content stream in temporal proximity to the time of capture of the segment of the media content stream. In one embodiment a status update is determined to be sent from a location that is in proximity to the location of capture if the status update was sent from a location that is within a predefined distance from the location of capture. Further if the time of capture is defined as a single point in time e.g. Jun. 12 2010 at 12 17 pm EST a status update may be determined to be sent in temporal proximity to the time of capture if for example the status update was sent within a defined amount of time from the time of capture. Alternatively if the time of capture is defined as a period of time a status update is determined to have been sent in temporal proximity to the time of capture if for example the status update was sent during that period of time.

In addition or alternatively the one or more relevant status updates may include one or more status updates sent in temporal proximity to the time of capture of the segment of the media content stream by one or more of the users having user profiles that sufficiently match the user profile of the user of the media playback device . As used herein the user profile of a user sufficiently matches the user profile of the user if the user profile of the user matches the user profile of the user to at least predefined threshold degree. The predetermined threshold degree may be for example a threshold number of matching interests in the user profiles of the users and or a threshold ratio of the number of matching user interests to the total number of interests in the user profiles of the users and . The relevant status updates may additionally or alternatively include one or more status updates sent in temporal proximity to the time of capture of the segment of the media content stream from one or more of the users having user profiles that sufficiently match the user profile of the user of the media playback device and from locations in proximity to the location of capture of the segment of the media content stream.

Still further for each anchor for the segment if any the one or more relevant status updates may additionally or alternatively include status updates sent in temporal proximity to the time of capture or if defined the anchor time defined by the anchor from users located in proximity to the anchor location at the time of sending the status updates. Similarly for each anchor for the segment if any the one or more relevant status updates may additionally or alternatively include status updates sent in temporal proximity to the time of capture or if defined the anchor time defined by the anchor from users having user profiles that sufficiently match the user profile of the user of the media playback device located in proximity to the anchor location at the time of sending the status updates.

The status updating service then returns the relevant status updates obtained in step to the media playback device step . The media playback device then presents the relevant status updates during playback of the media content stream and preferably during playback of the corresponding segment of the media content stream step . In one embodiment the relevant status updates may be prioritized based on for example the users that sent the relevant status updates the location of the users at the time of sending the relevant status updates e.g. prioritized based on closeness to the location of capture the time at which the relevant status updates were sent by the users e.g. prioritize based on temporal proximity to the time of capture degree of similarity between the user profile of the user of the media playback device and the user profiles of the users that sent the relevant status updates status update type e.g. text image video or audio feedback from the user maturity rating e.g. PG R etc. subject matter of the relevant status updates which may be indicated by tags associated with the status updates or the like. Higher priority status updates may be given priority during presentation by for example positioning the higher priority status updates at the top of a list of the status updates presented by the media playback device . Further lower priority status updates may not be presented at all. At this point in this embodiment steps through are repeated to obtain and present relevant status updates for additional segments of the media content stream step .

Again when presenting status updates for multiple segments of the media content stream the status updates may be sorted based on one or more criteria. The criteria used for sorting may be for example media content stream segment location of capture boundaries in the media content stream or time of capture boundaries in the media content stream. Thus for example when presenting the relevant status updates the relevant status updates may be presented by segment. Alternatively if the same location of capture and or time of capture may apply to multiple segments of the media content stream e.g. the status updates may be stored by location of capture boundaries or time of capture boundaries. Thus for example if a location of capture encoded into the media content stream applies to two adjacent segments of the media content stream then the status updates obtained for both of those segments may be presented together. Note that sorting may naturally occur in the embodiment where the relevant status updates are obtained on a segment by segment basis as described above. However in an alternative embodiment the request for status updates may the time of capture location of capture and any anchors for multiple segments and possibly all segments of the media content stream. The relevant status updates returned in response to this request may be sorted by segment time of capture boundaries or location of capture boundaries.

In the embodiment of the media playback device extracts the time and location of capture and any anchors from the media content stream in real time as the media content stream is received and played by the media playback device . As such buffering of the media content stream may be desired in order to delay playback of the media content stream by an amount of time that is sufficient to allow the media playback device to obtain the relevant status updates for presentation during the corresponding segments of the media content stream. The amount of delay provided by the buffering may be statically defined or dynamically controlled by the media playback device .

Note that while the embodiment of is an embodiment where the status updates are obtained and presented in real time as the media content stream is received and played the present disclosure is not limited thereto. In another embodiment the media playback device may be a DVR or similar device that operates to receive and record the media content stream for subsequent playback. In this case the media playback device may store the media content stream prior to or after extracting the time and location of capture and any anchors for the segments of the media content stream. The media playback device may then request status updates for the segments of the media content stream during playback. Alternatively the media playback device may obtain status updates in real time as the segments of the media content stream are received and store the status updates such that the status updates are available for presentation during subsequent playback s of the media content stream. As another alternative the media playback device may receive the media content stream and extract the time of capture location of capture and any anchors either as the media content stream is received or at some time after receiving and storing the media content stream. The media playback device may then obtain the status updates relevant to the segments of the media content stream sometime before playback of the media content stream.

The following is an exemplary and non limiting use case that illustrates some but not necessarily all of the features described above.

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

