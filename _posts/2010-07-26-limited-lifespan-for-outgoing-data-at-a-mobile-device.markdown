---

title: Limited lifespan for outgoing data at a mobile device
abstract: An outgoing message may be generated, at a mobile communication device, based on a received application definition document, which indicates a lifespan for the message. In conjunction with generating a message in accordance with a format provided in the application definition document, a message expiry time may be generated. The message may be stored in a queue for transmission. Additionally, an indication of the expiry time may be stored in the queue in association with the message. The expiry time of the message may periodically be compared to the current time to determine whether the message has expired. Upon expiry, a user of the mobile communication device may be presented with the option to cancel transmission of the message or re-attempt transmission.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08185141&OS=08185141&RS=08185141
owner: Research In Motion Limited
number: 08185141
owner_city: Waterloo
owner_country: CA
publication_date: 20100726
---
This application is a continuation of application Ser. No. 12 622 908 filed Nov. 20 2009 now U.S. Pat. No. 7 764 970 which is a continuation of application Ser. No. 11 460 744 filed Jul. 28 2006 now issued as U.S. Pat. No. 7 623 877 the contents of both of which are hereby incorporated by reference.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by any one of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present disclosure relates to queuing of a message before transmission from a mobile communication device and more particularly to associating a lifespan with a message.

A mobile communication device typically maintains a queue of outbound data to be sent to a destination. The data stored in the queue may for instance be messages destined for a server. Such messages may include messages that are formed as requests for information from the server and messages that are formed as updates to information previously stored on the server. Broadly the messages may be considered elements of a data transaction between the server and the mobile device. Typically the queue is used only in a transient manner while the mobile device is in coverage range. The queue is of particular use when the mobile device is not in communication with the server. That is when the mobile device is not within a coverage range of any suitable wireless communications base stations. Typically after being out of coverage range when the mobile device enters a coverage range the mobile device automatically sends the queued messages to the server.

Unfortunately queuing may be required for extended periods. For instance the mobile device may be out of coverage for the extent of a long journey aboard an airplane. By the time a given queued message is sent the given queued message may be out of date.

An outgoing message may be generated at a mobile communication device based on a portion of a received application definition document which indicates a lifespan for the message. In conjunction with generating a message in accordance with a format provided in the application definition document a message expiry time may be generated. The message may be stored in a queue for transmission. Additionally an indication of the expiry time may stored in the queue in association with the message. The expiry time of the message may be periodically compared to the current time to determine whether the message has expired. At the point at which the message is determined to have expired a user of the mobile communication device may be presented with the option to cancel transmission of the message or re attempt transmission.

In accordance with an aspect of the present disclosure there is provided a method of handling outgoing messages. The method includes receiving defining a format for messages generating according to the format a message to be transmitted generating an indication of an expiry time for the message based on information provided in the document storing the message in a queue storing the indication of the expiry time in the queue in association with the message determining that the message remains in the queue after the expiry time and further processing the message. In other aspects of the application a mobile communication apparatus is provided to carry out the method and a computer readable medium is provided to allow a processor in a mobile communication device to carry out the method.

Other aspects and features of the present disclosure will become apparent to those of ordinary skill in the art upon review of the following description of specific embodiments of the application in conjunction with the accompanying figures.

The base station subsystem communicates with the wireless core network subsystem . In an exemplary Global System for Mobile communications GSM implementation the wireless core network subsystem includes among other components a mobile services switching center a home location register a visitor location register and a Short Messaging Service Center. As illustrated in the wireless core network subsystem may be connected to the data communication network and to a Public Switched Telephone Network PSTN .

The mobile device may be associated with an enterprise that is in communication with the data communication network . The enterprise may for instance include a firewall or proxy server connecting to the data communication network and to a local area network LAN . The LAN may allow communication between a mobile device server an enterprise server and a transaction server within the enterprise.

The housing may be elongated vertically or may take on other sizes and shapes including clamshell housing structures . The keyboard may include a mode selection key or other hardware or software for switching between text entry and telephony entry.

In addition to the microprocessor other parts of the mobile device are shown schematically in . These include a communications subsystem a short range communications subsystem the keyboard and the display along with other input output devices including a set of auxiliary I O devices a serial port a speaker and a microphone as well as memory devices including a persistent flash memory and a Random Access Memory RAM and various other device subsystems . The mobile device is preferably a two way radio frequency RF communication device having voice and data communication capabilities. In addition the mobile device preferably has the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor is preferably stored in a computer readable medium such as the flash memory but may be stored in other types of memory devices such as a read only memory ROM or similar storage element. In addition system software specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Communication signals received by the mobile device may also be stored to the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the mobile device . A predetermined set of software applications that control basic device operations such as a voice communications module A and a data communications module B may be installed on the mobile device during manufacture. An application client subsystem module C may also be installed on the mobile device during manufacture to implement aspects of the application. In particular the application client subsystem module C may include virtual machine software.

Additional software modules illustrated as an other software module N which may be for instance a personal information manager PIM application may be installed during manufacture. The PIM application is preferably capable of organizing and managing data items such as e mail messages calendar events voice mail messages appointments and task items. The PIM application is also preferably capable of sending and receiving data items via a wireless carrier network represented in by the base station antenna . Preferably the data items managed by the PIM application are seamlessly integrated synchronized and updated via the wireless carrier network with the mobile device user s corresponding data items stored at or associated with the enterprise server .

Communication functions including data and voice communications may be performed through the communication subsystem and possibly through the short range communications subsystem . The communication subsystem includes a receiver a transmitter and one or more antennas illustrated as a receive antenna and a transmit antenna . In addition the communication subsystem also includes a processing module such as a digital signal processor DSP and local oscillators LOs . The specific design and implementation of the communication subsystem is dependent upon the communication network in which the mobile device is intended to operate. For example the communication subsystem of the mobile device may be designed to operate with the Mobitex DataTAC or General Packet Radio Service GPRS mobile data communication networks and may also be designed to operate with any of a variety of voice communication networks such as Advanced Mobile Phone Service AMPS Time Division Multiple Access TDMA Code Division Multiple Access CDMA Personal Communications Service PCS GSM etc. Other types of data and voice networks both separate and integrated may also be utilized with the mobile device .

When the required network registration or activation procedures have been completed the mobile device may send and receive communication signals over the wireless carrier network. Signals received from the base station antenna by the receive antenna are routed to the receiver which provides for signal amplification frequency down conversion filtering channel selection etc. and may also provide analog to digital conversion. Analog to digital conversion of the received signal allows the DSP to perform more complex communication functions such as demodulation and decoding. In a similar manner signals to be transmitted to the base station antenna are processed e.g. modulated and encoded by the DSP and are then provided to the transmitter for digital to analog conversion frequency up conversion filtering amplification and transmission to the base station antenna via the transmit antenna .

In addition to processing communication signals the DSP provides for control of the receiver and the transmitter . For example gains applied to communication signals in the receiver and the transmitter may be adaptively controlled through automatic gain control algorithms implemented in the DSP .

In a data communication mode a received signal such as an SMS message or web page download is processed by the communication subsystem and is input to the microprocessor . The received signal is then further processed by the microprocessor in preparation for output to the display or alternatively to some of the auxiliary I O devices . A device user may also compose data items such as e mail messages or SMS messages using the keyboard and or some other auxiliary I O device such as a touchpad a rocker switch a thumb wheel or some other type of input device. The composed data items may then be transmitted to the base station antenna via the communication subsystem .

In a voice communication mode overall operation of the mobile device is substantially similar to the data communication mode except that received signals may be output to the speaker and signals for transmission may be generated by the microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on the mobile device . In addition the display may also be utilized in voice communication mode for example to display the identity of a calling party the duration of a voice call or other voice call related information.

The short range communications subsystem enables communication between the mobile device and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include an infrared device and associated circuits and components or a Bluetooth communication module to provide for communication with similarly enabled systems and devices.

The virtual machine software of the application client subsystem module C may include conventional Extensible Markup Language XML parser software event handler software screen generation engine software and object classes. The software when executed leads to a virtual machine which as illustrated in includes an XML parser an event handler a screen generation engine and instances of the object classes. The object class instances correspond to XML elements supported by the virtual machine software and possibly other XML elements contained within an application definition document. Supported XML elements are detailed in Appendix A hereto attached. A person of ordinary skill will readily appreciate that those XML elements identified in Appendix A are exemplary only and may be extended or modified as desired.

From the perspective of the mobile device the transaction server is positioned behind the firewall . In operation the transaction server may exchange data traffic with the enterprise server . Additionally the transaction server may exchange data traffic with the backend application server . In an exemplary case the virtual machine executing on the microprocessor of the mobile device generates a request message and stores the request message in a queue of outbound messages. A message transmission object then transmits the request message to the transaction server via the base station subsystem the wireless network subsystem the data communication network the firewall and the local area network . Responsive to receiving the request message the transaction server may execute a database query on a database. The response to the database query may for instance be an indication of server side applications that are available to the mobile device . Data representative of the indication may then be transmitted by the transaction server in a response message to the mobile device .

Upon receipt of the response message at the mobile device the screen generation engine of the virtual machine may present a list of available server side applications in a user interface on the display of the mobile device . In response to being presented with the list of available server side applications a user at the mobile device may select a given server side application for which to register. Responsive to the user selecting the given server side application the virtual machine generates a registration request message containing a registration request for the given server side application and stores the registration request message in the outbound message queue. The message transmission object then transmits the registration request message to the transaction server . The transaction server in response to receiving the registration request message queries the server database for a user interface definition associated with the given server side application and the mobile device . Thereafter the transaction server creates an application definition document which includes the user interface definition and transmits a message that includes the application definition document to the mobile device .

At the mobile device the application definition document carrying message is received step . After receiving the application definition document carrying message the XML parser of the virtual machine may parse the text of the application definition document and the screen generation engine may generate according to the user interface definition a user interface for presentation on the display of the mobile device . Some time after receipt of the application definition document and using the user interface a user could trigger the transmission by the mobile device of a login request to transaction server . The login request is received by the transaction server and subsequently transmitted to the server hosting the given server side application e.g. the enterprise server or the backend application server . The server hosting the given server side application according to the logic embedded within the given server side application returns a login response to the transaction server which login response the transaction server transmits to the mobile device . Subsequent traffic related to the given server side application for instance messages to be transmitted from the mobile device to the server hosting the given server side application also flows through the transaction server .

As may be understood from the preceding the transaction server may be considered to manage the flow of data between an application executed at a server and an interface to that application presented at the mobile device . Among other operating systems the transaction server may be implemented on Microsoft Windows 2000 or Windows 2003 server. The collection of functions executed at the transaction server may be considered to include application management access control event monitoring session control transaction queuing data routing user management and network connectivity monitoring.

In overview the application client subsystem module C may provide instructions to allow the microprocessor to generate a message for transmission to the transaction server . In conjunction with storing the generated message in the outbound message queue the microprocessor may also store a message expiry time stamp i.e. an indication of an expiry time. If the time represented by the message expiry time stamp occurs before the message is transmitted from the outbound message queue an event callback may be arranged to occur.

As is known in the art the outbound message queue may be implemented as a queue table in a relational database say in the persistent flash memory . Relational databases may be structured to include tables which contain records. As such an outbound message may be stored in a Message field of a message record in the queue table. Advantageously a new field a Message Expiry Time Stamp field may be defined for the message record where the Message Expiry Time Stamp field is arranged for storage of a time stamp to be associated with the message stored in the Message field of the message record.

Advantageously due to the persistence of the flash memory in which the queue table is stored the mobile device may be powered off and yet maintain the messages in the outbound queue for transmission when the device is powered on. Persistent memory is a common feature of mobile communication devices. For example PocketPC devices provide persistent memory control of which is provided through a Microsoft application called Pocket Access . Palm devices have persistent memory in the form of a built in data store.

Message expiry is generally known in other message handling protocols to occur at a location away from the source of the message. For instance it is known to insert a Time To Live TTL value in an Internet Protocol IP packet to indicate to a IP network router whether a given IP packet has been handled by a predetermined number of IP routers. If the predetermined number is exceeded the given IP packet may be discarded and a message may be sent to the source of the given IP packet. The TTL is not in fact a time. Instead the TTL is a count. The count is initialized to the predetermined number of IP routers by the source of the given IP packet. Each router that receives the given IP packet and transmits the given IP packet also decrements the count by one. When the count reaches zero the predetermined number is considered to have been exceeded.

Message expiry is also known in the Push Access Protocol PAP for the Wireless Application Protocol WAP as described in Push Access Protocol version 29 Apr. 2001 Wireless Application Protocol WAP 247 PAP 20010429 a available from www.wapforum.org. A push initiator may generate a message for a mobile client. The push initiator may include a field in the message that specifies a precise date and time at which the message should be considered to have expired. A push proxy gateway that receives the message for transmission to the mobile client may successfully transmit the message to the mobile client may receive a confirmation from the mobile client and responsive to receiving the confirmation transmit a delivery confirmation to the push initiator. Where the precise date and time specified in the message passes without the message having been transmitted to the mobile client the push proxy gateway may transmit an expiry notification to the push initiator.

In contrast to the above mentioned protocols which may be seen to implement message expiry rules in a location remote from the source of the message it is proposed herein to implement message expiry rules directly at the source of the message. Advantageously it is the source of the message that can best determine a time period such that the relevance of the message after the expiry of the time period has been reduced to the point that the message is preferably not sent.

As discussed above an application definition document provides a user interface definition. Overall the application definition document may define for a particular server side application a user interface for controlling application functionality and display format including display flow the format of data to be exchanged over the data communications network and the format of data to be stored locally at the mobile device . The virtual machine may use the operating system software also executed by the microprocessor and associated application programming interfaces APIs to interact with elements of the mobile device in accordance with the received application definition document. In this way the mobile device may present interfaces for a variety of applications executed at a variety of remote application servers.

While creating an application definition document a developer may have an opportunity to define a number of types of messages to be sent by the mobile device to the transaction server some of which may be destined for the backend application server or the enterprise server . To implement aspects of the present disclosure at design time a developer may specify for a specific type of message a lifespan.

As presented in the previously cited US Patent Application Publication 2003 0060896 an exemplary application definition document may be formed using a markup language such as the known XML or a variant thereof. In accordance with an embodiment of the present disclosure defined XML elements are interpreted by the virtual machine and may be used as building blocks to present at the mobile device an interface to server side applications.

Instances of object classes allow the mobile device to process each XML element of a set of supported XML elements. Each of the object classes may be defined to include for each supported XML element attributes which may be used to store parameters defined by the application definition document and functions which allow the XML element to be processed at the mobile device . As such the developer may specify a lifespan as an attribute of a XML element in an application definition document.

Appendix B provides an exemplary application definition document whose format should be familiar to those skilled in the art of developing markup language documents. At line a definition of a screen named GETQUOTE begins. As part of the screen definition and further as part of a definition of a MENU element beginning at line for a menu with a NAME attribute of mnuMainMenu a MENUITEM element with NAME attribute GetQuote is defined beginning at line . The MENUITEM element with NAME attribute GetQuote includes an EVENT element with a TYPE attribute MENUITEMSELECTED . The EVENT element with a TYPE attribute MENUITEMSELECTED is associated with three ACTION elements having TYPE attributes of OPEN SAVE and ARML . The ACTION element of the type ARML see line includes an attribute TTL whose value is provided as 5 

The TTL attribute may be considered a lifespan attribute. The value given to the TTL attribute may be considered to be representative of a number of Ticks. For a given virtual machine a tick may be defined as representative of for example a millisecond a second or a minute.

The format provided by the exemplary application definition document of Appendix B also includes some variable fields that are to be filled dynamically based on placeholders in the variable fields. Such dynamic filling may for instance be based upon data provided by the user in response to a screen presented on the display of the mobile device . The variable fields are delimited by square brackets i.e. and . These placeholders reference a data source from which data for filling the variable field should be obtained. A suitable data source might be a user interface field on a current screen a user interface field on a previous screen or a table in a device based logical database. The virtual machine after reading the data source name searches for the field corresponding to the referenced data source and replaces the placeholder with data contained within the named field.

In operation the virtual machine executed on the microprocessor may control the presentation on the display of the mobile device of a screen named GETQUOTE according to the exemplary application definition document of Appendix B. The user of the mobile device may select the GetQuote menu item such that an event of the type MENUITEMSELECTED is detected by the operating system of the mobile device . The operating system may indicate the detected event to the event handler of the virtual machine . The event handler may based on the definition of the MENUITEM element in the application definition document arrange for the performance of three actions each of the three actions defined by a distinct ACTION element by the virtual machine .

According to the ACTION element of type ARML the event handler instantiates an object from an object class of the virtual machine software where the object class corresponds to the ACTION element of type ARML. The instantiated object then calls a message generation method to generate a message step for transmission to the transaction server .

The exemplary application definition document of Appendix B includes a format at lines according to which format the message generation method may generate the message. The message format provided by the exemplary application definition document of Appendix B is delimited by tags. The tag has an attribute named TYPE . Wrapped by the tags the message payload is a tag pair. The SYMBOL element defined by the tag pair has an attribute named E . The attribute E of the SYMBOL element references a placeholder as does the content of the SYMBOL element itself.

The message generation method may based on the provided format add text to a string variable. As mentioned above elements of the application definition document including elements of the action have been parsed by the XML parser . The message generation method adds successive portions of the message to the string variable such as then . Before adding the next portion the message generation method resolves the placeholder GETQUOTE.edtSymbol and adds the text to which the placeholder resolves to the string variable. The message generation method may finish the message by adding to the string variable.

The GETQUOTE screen includes an edit box EB element with a NAME attribute edtSymbol and further attributes including SAVE YES and SAVENAME edtSymbol . The GETQUOTE screen also includes a CHOICE element with a NAME attribute chExchange and further attributes including SAVE YES and SAVENAME chExch .

Above the ACTION element of TYPE ARML there is an ACTION element of TYPE SAVE . When the virtual machine executes the ACTION element of TYPE SAVE the virtual machine saves the contents of the edtSymbol EB element and the chExchange CHOICE element into the variables defined in the SAVENAME attributes of the edtSymbol EB element and the chExchange CHOICE element respectively because the SAVE attributes of the edtSymbol EB element and the chExchange CHOICE element are set to TRUE. The virtual machine stores the variables locally in association with the screen GetQuote so that the variables may be accessed by using GETQUOTE.edtSymbol and GETQUOTE.chExch as the syntax to retrieve these values.

In an exemplary resolution of a placeholder the message generation method after reading the data source name searches for the variable and replaces the placeholder with value of the variable. For example the user may have selected the choice TSE on the GETQUOTE screen. Similarly the user may have inserted the text RIMM in the edtSymbol edit box on the GETQUOTE screen. Upon executing the ACTION element of TYPE SAVE virtual machine assigns the value TSE to the variable chExch assigns the value RIMM to the variable edtSymbol and stores the variables. Upon executing the ACTION element of TYPE ARML the message generation method may while generating a message according to the provided message format determine the value of the variable chExch and insert the text TSE in place of the GETQUOTE.chExch placeholder and determine the value of the variable edtSymbol and insert the text RIMM in place of the GETQUOTE.edtSymbol placeholder.

An exemplary message generated according to message format provided in the exemplary application definition document of Appendix B may appear as follows RIMM

When the string variable contains the entire message that is the message generation method has added the text to the string variable the virtual machine may then call a message expiry time stamp generation method to generate step a message expiry time stamp. The message expiry time stamp may be generated by determining the current time and adding a time span based on the value of the TTL attribute to the current time. For example where the value of the TTL attribute of the ARML action element is 5 and a tick is considered to be a minute the message expiry time stamp may be generated by adding five minutes to the current time.

The virtual machine may then call a message record creation method to create step a message record. The message record may include the generated message and the message expiry time stamp among other data. The other data may for instance include an time stamp representative of the time of creation of the message record and an indication of the value of the TTL attribute. The virtual machine may then call a message record storage method to store step the message record in the queue table.

Concurrently a message transmission object may be arranging the transmission of the message portion of the oldest message record in the queue table to the transaction server . The message transmission object may for instance determine which message record is the oldest in the queue table by considering a time added time stamp stored in each message record in the queue table. As such the queue table may be considered to act as a First In First Out FIFO queue in that the message transmission object attempts to transmit the message at the top of the queue i.e. the message portion of the oldest message record first.

Where the transmission of the message is successful the message transmission object deletes the message record from the queue table and arranges the transmission of the message portion of the oldest message record in the queue table given that the former oldest message record has been deleted from the queue table.

Where the transmission of the message is unsuccessful the message transmission object may delay re attempting transmission of the message portion of the oldest message record in the queue table for a predetermined waiting time. Additionally the message transmission object may store the time of the last attempt to transmit the message in a Last Attempt Time field associated with the Message field. The message transmission object may also read a value from a Transmission Attempt Number field associated with the Message field increment the value by one and store the incremented value in the Transmission Attempt Number field.

Rather than delaying re attempting transmission for a predetermined waiting time the message transmission object may wait for a signal from the operating system of the mobile device where the signal indicates that communications to the network have been re established.

According to a message expiry queue management method exemplary steps of which are illustrated in a queue management object may select step a message record for considering message expiry. The queue management object may then compare step the time stored in the Message Expiry Time Stamp field of the selected message record to the current time. Where the current time is determined step to be less than the time stored in the Message Expiry Time Stamp field of the selected message record the queue management object may determine step whether there are message records in the queue table that have not yet been considered. If all message records have been considered the method of is complete. If not all message records have been considered the queue management object may select step another message record for considering message expiry and the method of repeats.

Where the current time is determined step to be greater than the time stored in the Message Expiry Time Stamp field of the selected message record the queue management object may pass an indication of the message expiry to the event handler so that an event callback step may be arranged to indicate to the user the expiry of the lifespan of the message record. As will be apparent to a person of ordinary skill in an exemplary event callback the screen generation engine may arrange for the presentation on the display of the mobile device of a dialog that indicates The lifespan of this message has expired. Do you wish to re attempt transmission of the message or cancel transmission .

Responsive to determining step that the user has indicated that transmission of the message portion of the selected message record should be cancelled the event handler may trigger execution of a message record deletion method to delete step the selected message record from the queue table.

Where the mobile device is a PocketPC the relational database of which the queue table is a part may be managed by the known Pocket Access application. Deletion of a message record as required by step may be accomplished using a DELETE FROM TBLOUTBOUNDQUEUE statement supplying the primary key of the message record. A similar mechanism may be used for the deletion of a message record in a queue table managed by a database application executed on a Palm operating system.

After deleting the selected message record the queue management object may determine step whether there are message records in the queue table that have not yet been considered. If all message records have been considered the method of is complete. If not all message records have been considered the queue management object may select step another message record for considering message expiry and the method of repeats.

Responsive to determining step that the user has indicated that transmission of the message portion of the selected message record should be re attempted the event handler may trigger the virtual machine to call the message generation method to generate step a new message expiry time stamp. The new message expiry time stamp may be generated by determining the current time and adding to the current time a time span based on the value of the TTL attribute stored as part of the message record to the current time. In the case in which the value of the TTL attribute has not been stored as part of the message record a time span to add to the current time to generate step a new message expiry time stamp may be determined for instance as a difference between the current time and an indication of the time of creation of the message record.

The virtual machine may then call the message record storage method to update step the selected message record in the queue table. That is the message record storage method writes the new message expiry time stamp to the Message Expiry Time Stamp field of the selected message record and by doing so replaces the old message expiry time stamp. Advantageously the rest of the selected message record remains unchanged by the message record storage method.

After updating the selected message record in the queue table the queue management object may determine step whether there are message records in the queue table that have not yet been considered. If all message records have been considered the method of is complete. If not all message records have been considered the queue management object may select step another message record for considering message expiry and the method of repeats.

Notably in an alternative message expiry queue management method the queue management object may not interact with the user. Instead where the current time is determined step to be greater than the time stored in the Message Expiry Time Stamp field of the selected message record the queue management object may delete step the selected message record from the queue table. After deleting the selected message record the queue management object may determine step whether there are message records in the queue table that have not yet been considered. If all message records have been considered the method of is complete. If not all message records have been considered the queue management object may select step another message record for considering message expiry and the method of repeats.

Advantageously messages generated according to unique ACTION elements types may be configured to each have a unique lifespan. That is the unique ACTION elements may have unique TTL attributes. The lifespan may be for example based on priority and message content.

Other modifications will be apparent to those skilled in the art and therefore the invention is defined in the claims.

