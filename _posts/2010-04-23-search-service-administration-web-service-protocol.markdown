---

title: Search service administration web service protocol
abstract: The embodiments described herein generally relate to a method and system for enabling a client to configure and control the crawling function available through a crawl configuration Web service. A client is able to configure and control the crawling function by defining the URL space of the crawl. Such space may be defined by configuring the starting point(s) and other properties of the crawl. The client further configures the crawling function by creating and configuring a content source and/or a crawl rule. Further, a client defines authentication information applicable to the crawl to enable the discovery and retrieval of electronic documents requiring authentication and/or authorization information for access thereof. A protocol governs the format, structure and syntax (using a Web Services Description Language schema) of messages for communicating to and from the Web crawler through an application programming interface on a server hosting the crawler application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08364795&OS=08364795&RS=08364795
owner: Microsoft Corporation
number: 08364795
owner_city: Redmond
owner_country: US
publication_date: 20100423
---
This application claims the benefit of U.S. Provisional Application Ser. No. 61 285 931 filed on Dec. 11 2009 and entitled SEARCH ADMIN WEB SERVICE PROTOCOL. The entirety of the aforementioned application is incorporated herein by reference.

A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document Copyright.COPYRGT. 2010 Microsoft Corp.

Computer users access networks such as the Internet on a frequent basis for the discovery and retrieval of information and data. For example particular types of content and data are searched for and accessed on the World Wide Web the Web in which the Web is a system on the Internet of interlinked electronic documents. The Web provides access to a multitude of Web sites in which a Web site is a collection of related Web pages or other digital resources associated with a common Uniform Resource Locator URL . Each Web site typically has multiple files and related resources that are held by a Web server and may be accessed through a network including the Internet and or a local area network LAN . A Web server stores and distributes electronic documents associated with the particular Web site hosted by the Web server. These electronic documents may also include embedded hyperlinks or other links that reference other electronic documents data Web pages Web sites etc. Electronic documents are distributed in a format such as Hypertext Markup Language HTML for example.

With the plethora of data available on the Web computer applications have been developed to crawl the multitude of Web documents stored on the numerous Web servers connected to the Web to search for particular documents and or data for retrieval. A crawl process thus includes traversing the URL space in which links in the electronic documents are discovered and followed as well. Given the vast amounts of data available on the Web such Web crawling may be nearly boundless and time consuming. As a result an exorbitant number of documents may be retrieved causing network bandwidth to be consumed unnecessarily while hampering resource efficiency. Further if the number of documents retrieved with regard to a particular search is particularly large a user may not have the time or resources to carefully filter through such documents to find meaningful information. Further yet some data may not be retrieved at all if authentication or authorization requirements at particular Web sites prevent the crawling of related Web documents. Consequently electronic documents with valuable information to the user may be missed altogether.

Although specific problems have been addressed in this Background this disclosure is not intended in any way to be limited to solving those specific problems.

Embodiments generally relate to enabling a client such as a client computer to configure and control the Web crawling function provided by a crawling application of a search service application in which such crawling application is referred to herein generally as a Web search service. For example in embodiments a client configures and controls the crawling function of the index server provided by the Search Services of MICROSOFT OFFICE SHAREPOINT SERVER 2007 produced by MICROSOFT CORPORATION of Redmond Wash. An index server is a server having the task of crawling among other tasks. Configuring and controlling the Web crawling function allows a client to define the space crawled by the index server such as by defining the Uniform Resource Locator URL space of the crawl. The URL space is defined for example by configuring the starting point s and restriction rule s or crawl rule s for the crawl. In particular embodiments a content source is defined in which a content source specifies the type of content to be crawled and the start addresses e.g. URL addresses for the content. A crawl rule is defined in embodiments as a set of preferences applicable to a specific URL or range of URLs and is used to include or exclude items in the crawl and or to specify the content access account to use when crawling the URL or range of URLs. The configuration and control of the Web crawling function is also accomplished in embodiments by allowing the client to define authentication information e.g. credentials for use during a crawl to allow access to certain electronic documents for example or other data. Configuring a crawl also enables the client to control such features as when the crawl occurs the duration of the crawl etc.

The configuration and control of the Web search service by the client is enabled in embodiments by providing an application programming interface for receiving specific method calls and providing responses thereto for invoking the functionality of the Web search service to create specific parameters for the URL spaces crawl rules and credential data for example. The format and procedures governing the transmittal and receipt of data at such application programming interface is provided by a protocol such as the Search Service Administration Web Service protocol in accordance with embodiments disclosed herein. Inputs are received from a client for such method calls to the Web search service. The Web search service processes such inputs to configure the crawl function and sends a response to the client.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used in any way as to limit the scope of the claimed subject matter.

This disclosure will now more fully describe example embodiments with reference to the accompanying drawings in which specific embodiments are shown. Other aspects may however be embodied in many different forms and the inclusion of specific embodiments in this disclosure should not be construed as limiting such aspects to the embodiments set forth herein. Rather the embodiments depicted in the drawings are included to provide a disclosure that is thorough and complete and which fully conveys the intended scope to those skilled in the art. Dashed lines may be used to show optional components or operations.

Embodiments generally relate to enabling a client to configure and thus control the crawling function of a search service application server having crawl functionality. A crawl process involves traversing a URL space for example for content in electronic documents associated with the URL space that satisfies search criteria. Links such as hyperlinks embedded in the electronic documents are also discovered and followed. However according to embodiments a given crawl is configured to prevent it from following links outside of desired boundaries of the URL space. Such control is accomplished by defining restriction rules or crawl rules to restrict the boundaries of the crawl. In other embodiments a crawl is configured not to restrict its reach but rather to allow it to access content by providing it with necessary authentication and or authorization information applicable to such content.

In accordance with embodiments the noted configuration and control of the Web search service by a client is enabled by providing an application programming interface API on the protocol server hosting the Web search service or crawler application. The API processes request messages and response messages such as messages related to configuration changes of the crawler function of the Web search service so as to facilitate interaction between a protocol client for example and the Web search service. In embodiments the API processes request messages to put such messages in the proper format structure and syntax for calling the functionality of the Web search service. Such format structure and syntax are governed by a protocol such as the Search Service Administration Web Service protocol according to embodiments disclosed herein. Specific methods and rules are thus defined in accordance with the Search Service Administration Web Service protocol for creating specific parameters for the URL spaces crawl rules content sources and credential data for example. The Search Service Administration Web Service protocol thus provides the formatting and syntax to use for defining the specific methods and rules for calling the functionality of the Web search service providing responses thereto and or otherwise generally handling communications between the protocol client and a protocol server hosting the Web search service. The Search Service Administration Web Service protocol is offered for example purposes as a type of protocol to be used in accordance with embodiments disclosed herein. Other types and names of protocols providing the same or similar functionality may be used without departing from the spirit and scope of the present disclosure.

In an embodiment the protocol client is a software module with functionality for example for presenting a user interface UI for receiving configuration requests and input and displaying configuration response messages receiving inputs for a configuration request formatting the received input data into a request message transmitting the message to the Web server hosting the Web search service and receiving and processing any received responses from the Web search service for example. In accordance with embodiments disclosed herein the protocol client is stored on the client computer and is executed by the client computer s processor. In another embodiment the protocol client is downloaded at the client computer through a Web browser such as MICROSOFT INTERNET EXPLORER produced by MICROSOFT CORPORATION of Redmond Wash. Various types of browsers can be used in accordance with embodiments disclosed herein. Further while embodiments disclosed herein relate to crawls of Web sites for example the content to be crawled can also include specific systems such as MICROSOFT SHAREPOINT sites file systems and internal and external Web sites.

In an embodiment the protocol client presents a user interface for allowing a user to enter inputs for configuring a crawl function. For example in an embodiment a user indicates that for a given crawl the crawl rule is case sensitive meaning that only URLs of matching links matching uppercase and lowercase letters are crawled. In an embodiment the user interface for receiving configuration inputs from a user is obtained through a Web search service Web site that is identified by a URL known by the protocol client. Authentication and authorization for accessing the Web search service Web site is performed through the protocol client and the use of any number of types of authentication and authorization protocols can be used in accordance with embodiments disclosed herein. In another embodiment the user interface for receiving configuration inputs from a user is stored in memory on the client computer itself or removable storage means and is retrieved by clicking an icon box etc. to launch a Web crawl.

Upon receiving the user inputs the protocol client formats the message in accordance with the Search Service Administration Web Service protocol for example with the proper format and syntax for communicating to the Web crawler. The protocol client also uses other protocols for formatting the message for transmittal to the Web service. For example an appropriate messaging protocol and an appropriate transport protocol are used for transmitting the message to the Web service. An example of a messaging protocol for formatting a request for transmittal to the Web search service is the Simple Object Access Protocol SOAP messaging protocol. An example of a transport protocol for transmitting the formatted request is the Hypertext Transfer Protocol Secure HTTPS protocol. These protocols are offered by way of example only. Any number of types of messaging and transport protocols can be used in embodiments disclosed herein.

In accordance with embodiments disclosed herein upon receipt of a message requesting configuration of the crawl function the Web search service processes the message and determines whether the configuration request is allowable. If allowable the Web search service makes the appropriate configuration to the crawl function and sends a response message in accordance with the Search Service Administration Web Service protocol and through the application programming interface to the protocol client indicating the configuration change for example. If the configuration request is not allowable for example by specifying a restriction rule that already exists or conflicts with another rule the Web search service sends a response message to the protocol client indicating a fault message or other error or indication that the requested configuration was not made or is not available.

An example logical environment or system for enabling a protocol client to configure and control a crawl function of a crawler application hosted by a protocol server or Web server is shown in in accordance with embodiments disclosed herein. A protocol server hosting a search service application with a crawler application a Web search service is connected to network for enabling the crawler application to search the content e.g. Web sites held by Web servers and . In embodiments any number of Web servers and can be used as shown by ellipses . Each Web site typically has multiple files and resources held by a Web server such as Web servers and . Web servers and distribute electronic documents associated with the particular Web sites. Storage capabilities for storing such electronic documents are shown by the databases adjacent to or attached to Web servers and . In embodiments such storage means are housed within the Web servers. Protocol server hosting the Web search service is also connected to client computer through network . Client computer is thus able to send configuration requests for controlling the crawling function of the Web search service through network and is able to receive response messages regarding such configuration requests through network as well. Any type of client computer can be used in accordance with embodiments disclosed herein.

Logical environment is not limited to any particular implementation and instead embodies any computing environment upon which the functionality of the environment described herein may be practiced. Further networks and although shown as individual single networks may be any types of networks conventionally understood by those of ordinary skill in the art. In accordance with an example embodiment the network may be the global network e.g. the Internet or World Wide Web i.e. Web for short . It may also be a local area network e.g. intranet or a wide area network. In accordance with embodiments communications over networks and occur according to one or more standard packet based formats e.g. H.323 IP Ethernet and or ATM.

Further any type of environment or system can be used in accordance with embodiments of the present disclosure. is offered as an example only for purposes of understanding the teachings of the embodiments disclosed herein. For example shows servers and . However embodiments also cover any type of server separate servers server farm or other message server. Further yet shows client computer . However any type of small computer device can be used without departing from the spirit and scope of the embodiments disclosed herein. Indeed environment or system represents a valid way of practicing embodiments disclosed herein but is in no way intended to limit the scope of the present disclosure. Further the example network environment may be considered in terms of the specific components described e.g. protocol server client computer etc. or alternatively may be considered in terms of the analogous modules corresponding to such units.

Although only one client computer is shown for example another embodiment provides for multiple small computer devices to communicate with Web server . In an embodiment each small computer device communicates with the network or in other embodiments multiple and separate networks communicate with the small computer devices. In yet another embodiment each small computer device communicates with a separate network.

While shows example environment or system for configuring a crawl function on the Web search service illustrates example software functional modules corresponding to such computing units for enabling such configuration by a protocol client in accordance with embodiments disclosed herein. Storage means are also depicted in . These storage means and functional modules are offered by way of example only. Numerous types of modules components or storage means can be used in accordance with embodiments disclosed herein. At client computer browser retrieves protocol client . For example in an embodiment protocol client is downloaded at client computer through a Web browser such as MICROSOFT INTERNET EXPLORER produced by MICROSOFT CORPORATION of Redmond Wash. Any type of browser can be used in accordance with embodiments disclosed herein. In other embodiments the protocol client is already downloaded or otherwise available in non removable or removable memory associated with client computer . Protocol client receives input data from a user in accordance with embodiments. In other embodiments protocol client receives input data from another computing device s and or computer program s . Upon receiving input data indicating the configuration desired protocol client formats such data into a request message for Web search service . Configuration request message is transmitted across network to protocol server .

Protocol server which may also be referred to as an index server Web server or server in general hosts Web search service . As discussed above Web search service is a crawler application in embodiments disclosed herein. In further embodiments the crawler application is part of a general search application. While configuration request message is transmitted to Web search service hosted by protocol server a general search request not shown is transmitted to search engine in protocol server in other embodiments disclosed herein. For example specific search criteria are provided in a search request to protocol server and search engine uses index to determine if any electronic documents in index satisfy the specified search criteria. Electronic documents are cataloged in index during a crawl in which the protocol server or index server produces data structures including an index catalog not shown and metadata index not shown with regard to retrieved electronic document s . In an embodiment where an index catalog already exists index server produces entries in the index catalog not shown to reflect information regarding the retrieved electronic document s . The index catalog and metadata index are then used in later search requests to efficiently respond to such search queries. In other embodiments where electronic documents are not found in index Web search service is invoked to crawl the Web for example in search of electronic documents satisfying the search criteria.

In embodiments where a configuration request message is sent from protocol client API on protocol server acts as the interface between protocol client and protocol server . API thus processes the configuration request message determines that is a type of message that is appropriate for the Web search service e.g. a request to perform a crawl or configuration of a crawl function in accordance with the Search Service Administration Web Service protocol for example and according to embodiments puts it into a format understandable by the Web search service . Upon receipt of configuration request message Web search service determines whether the configuration request is allowable and configures the crawl function if the request is allowable. Web search service uses API to facilitate communication of a response message in accordance with the Search Service Administration Web Service protocol to protocol client and produces a response message to the configuration request. Configuration response message is then transmitted over network to protocol client . In embodiments such configuration response message includes the configuration information made to the crawl function. In other embodiments configuration response message includes fault information indicating for example that an authorization has failed or the configuration request could not be otherwise performed.

While shows Web search service depicts object hierarchy maintained by protocol server and representing the state of the protocol such as the Search Administration Web Service protocol for Web search service . As discussed above the Search Service Administration Web Service protocol governs the format structure and syntax of messages to communicate to the Web crawler. Properties of the objects shown in object hierarchy affect the behavior of protocol server during crawl processes. The top level of object hierarchy is crawler application . As noted crawler application may also be referred to as Web search service labeled as such in . In embodiments one instance of crawler application exists per search service application. An example embodiment disclosed herein provides for the following properties of crawler application as illustrated in in accordance with the Search Service Administration Web Service protocol 

In addition depicts Content Source . A content source is a set of options for specifying the type of content to be crawled and the start addresses e.g. URL addresses for the content to be indexed. A content source thus includes a plurality of start addresses from which to start a crawl in accordance with embodiments disclosed herein. In an embodiment crawler application depicted in includes content source objects . In another embodiment crawler application includes zero content source objects. The content source objects represent content sources used to start a crawl. The following example properties apply to Content Source in accordance with embodiments disclosed herein 

In further embodiments crawler application includes an ordered collection of zero or more crawl rule objects . Crawl rules define the URL space of the crawl. For example crawl rules are used to restrict the URL space of the crawl in certain embodiments. When a link is discovered in a crawl the crawl rule s is checked to determine if the item should be included or excluded from the crawl. In embodiments crawl rules in crawl rule object contain one or more wildcard expressions for determining matches against the URLs of discovered links. In such determinations all characters in a discovered link are matched exactly against the crawl rule expression with the exception of the wildcard characters. According to embodiments disclosed herein the and wildcard characters are allowed in defining crawl rules with wildcards. Where wildcard characters and expressions are used embodiments provide for determining the crawl behavior of a link according to the first rule found to match the link. In further embodiments a crawl rule specifies authentication parameters for accessing items matching certain URLs. The following example properties apply to crawl rule object according to embodiments of the present disclosure 

In embodiments disclosed herein crawler application also includes an anchor content source which represents the status of an anchor crawl. An anchor crawl according to an embodiment is the process of adding the text that is included with a hyperlink to a full text index catalog. The text included with a hyperlink describes the target content of the hyperlink in embodiments. This text is referred to as anchor text for example. Further a full text index catalog is defined in embodiments as a collection of full text index components and other files organized in a specific directory structure and containing the data needed to perform queries. In turn a full text index component is defined in an embodiment as a set of files that contain all of the index keys extracted from a set of items in which an index key is a key referencing a record in a content index file or a scope index file and consisting of an index key string and a property identifier. Properties of the anchor content source include the following according to embodiments of the present disclosure 

Anchor content source object thus allows crawler application to track the start and end times of an anchor crawl according to embodiments described herein.

According to the embodiment depicted in crawler application also includes zero or more crawl mapping objects . In an embodiment a crawl mapping is a mapping of an access URL and a display URL of an item. Protocol server uses the access URL of a crawled item to obtain the item from a content source including an item repository for example. Further protocol server uses the display URL as a URL of the item to store in a metadata index. The display URL is the address of the item according to embodiments. Protocol server returns the display URL of the item to a client e.g. a user in response to a search query requesting such item. During a crawl process each item s access URL and display URL are checked against the crawl mapping objects which contain a Source property and a Target property. A match occurs if any prefix of the URL covering complete path segments equals the Source property or Target property of the mapping. If more than one mapping matches the URL the mapping that matches the longest prefix is used. As an example http site pathseg1 pathseg2 file.htm matches http site or http site pathseg1 or http site pathseg1 pathseg2 but does not match http site pathse or http saite pathseg1 path. If the access URL matches the Source property of the mapping the matching prefix is replaced by the Target property to construct the display URL while preserving the suffix of the URL. In embodiments the crawl mappings collection does not allow mappings with duplicate Source or Target properties 

Returning to crawler application Web search service receives configuration request messages from and transmits configuration response messages including fault messages to protocol client . Examples of these configuration messages include the following which are communicated in operations such as Web Services Description Language WSDL operations for example according to embodiments of the present disclosure and in accordance with the format and syntax of messages communicated to the Web crawler as governed by the Search Service Administration Web Service protocol 

While the above messages are included in WSDL operations in embodiments described herein such is offered by way of example. Other language can be used for such operations in accordance with other embodiments disclosed herein and without departing from the spirit and scope of the present disclosure. WSDL operations are offered by way of example only.

The messages transmitted between protocol client and protocol server thus allow for configuring the crawling function of Web search service in accordance with embodiments described herein. In embodiments these messages comprise a structure format and syntax consistent with the Search Service Administration Web Service protocol. For example the AddAdvancedCrawlRule operation allows protocol client to create a new crawl rule including specifying parameters for the rule for crawler application . With the AddAdvancedCrawlRule operation protocol client sends an ISearchApplicationAdminWebService AddAdvancedCrawlRule InputMessage request message . Protocol server responds with an ISearchApplicationAdminWebService AddAdvancedCrawlRule OutputMessage response message as follows 

Before responding protocol server determines whether the request message is allowable. For example the path specified in embodiments is not a valid regular expression. Or in other embodiments the length of the path exceeds a maximum number of characters. The following response message applies in embodiments 

Examples of the request or input message for configuring the crawl function with the AddAdvancedCrawlRule operation include 

The result data for the response message for the AddAdvancedCrawlRuleResponse operation includes for example 

In another embodiment the configuration request involves retrieving a previously stored value from a propertyBag collection of crawler application through the use of the GetConnector message operation. As shown in the propertyBag is a property of crawler application and includes a collection of name value pairs for storing arbitrary values. The propertyBag property thus allows a value to be retrieved using the name with which it was stored. An example configuration request message for this operation includes ISearchApplicationAdminWebService GetConnectorProperty InputMessage. An example configuration response message includes ISearchApplicationAdminWebService GetConnectorProperty OutputMessage. An example input output operation is as follows 

The following response messages e.g. fault messages are provided by protocol server in accordance with embodiments disclosed herein 

Output data for the configuration response message includes in embodiments the following for the GetConnectorProperty message operation 

Further the action values for the GetConnectorProperty operation using the SOAP protocol for example include in embodiments 

In other embodiments configuration request message includes an IncrementRegistryVersion message for increasing the registry version of crawler application by a value such as by one for example. Request message includes for example ISearchApplicationAdminWebService IncreaseRegistryVersion InputMessage. Response message includes for example ISearchApplicationAdminWebService IncreaseRegistryVersion OutputMessage. An example input output operation is as follows 

With this type of configuration request protocol server in embodiments increases the registryVersion of crawler application by one for example. If an error exists in incrementing the registryVersion protocol server sends a FaultException message to protocol client . The following input and output message and input output data are examples of operations for this configuration type 

Embodiments also provide for the IncrementVersion message operation in which the configuration version of crawler application is increased by a value such as by one for example. Request message for such an operation includes for example ISearchApplicationAdminWebService IncrementVersion InputMessage. Protocol server responds with response message ISearchApplicationAdminWebService IncrementVersion OutputMessage. An example input output operation is as follows 

The following input and output messages and input output data are examples of operations for this IncrementVersion configuration of crawler application in accordance with embodiments herein 

In other embodiments a configuration request is made to store a value in the propertyBag collection of crawler application . For example the SetConnectorProperty message operation allows for such storage with a configuration request message of ISearchApplicationAdminWebService SetConnectorProperty InputMessage. In turn a configuration response message for example is ISearchApplicationAdminWebService SetConnectorProperty OutputMessage. An example input output operation is as follows 

The following input and output message and input output data are examples of operations for this type of configuring of crawler application by setting connector properties as described in embodiments herein 

Further embodiments provide for configuring the crawler function of crawler application by defining credentials for authentication purposes for the crawl rule. For example the SetCrawlRuleCredentials2 message operation is used in accordance with embodiments disclosed herein to configure the authentication method and crawl account for a crawl rule. A crawl account is a user account having access to the content traversed by a crawl component according to embodiments. For such an authentication configuration request message the following request message is used in embodiments ISearchApplicationAdminWebService SetCrawlRuleCredentials2 InputMessage. A configuration response message includes the following in embodiments ISearchApplicationAdminWebService SetCrawlRuleCredentials2 OutputMessage. An example input output operation for this configuration request and response is as follows 

Further the following messages are sent and or actions taken based on the request message received in accordance with embodiments disclosed herein 

The following input and output message and input output data are examples of operations for this configuring of crawler application by setting credentials to configure the authentication method and crawl account for a crawl rule as described in embodiments herein 

A further message operation in embodiments includes the IsCaseSensitiveURL operation for checking if the crawler application treats the URL specified for the crawl in a case sensitive manner. Configuration request message includes the following example input message ISearchApplicationAdminWebService IsCaseSensitiveURL InputMessage. The following configuration response message applies in an embodiment ISearchApplicationAdminWebService IsCaseSensitiveURL OutputMessage. Protocol server returns the following response messages for example depending on the success of the particular configuration request for case sensitivity 

The following input and output message and input output data are examples of operations for this case sensitivity configuring of crawler application as described in embodiments herein 

In further embodiments configuration request message WaitForInProgressAnchorCrawlToComplete is used to configure the crawl function of crawler application to wait until no anchor crawl is in progress before proceeding with another crawl. An example input output operation for WaitForInProgressAnchorCrawlToComplete is as follows 

Embodiments also provide for determining whether an anchor crawl in crawler application is in progress. Input request message for such a determination includes for example ISearchApplicationAdminWebService IsAnchorCrawlIdle InputMessage. An example response message includes ISearchApplicationAdminWebService IsAnchorCrawlIdle OutputMessage. An example input output operation is as follows 

Further embodiments also provide for SetProperty and GetProperty configuration request operations in which a particular property of a crawl is set and retrieved. For example such input and output messages are used in embodiments for such configuration operations 

In further embodiments configuration operations and are used to set and retrieve one or more properties of the content source. For example SetContentSourceProperty and GetContentSourceProperty messages are used to set and retrieve respectively properties of the content source for a particular crawl. In embodiments request and response messages for such configuration operations include 

While the above describes and defines the format and syntax of the messages for communicating with the Web crawler according to embodiments governed by the Search Service Administration Web Service protocol Appendix A herein entitled Embodiment of Web Services Description Language WSDL Schema includes a full example WSDL schema illustrating the structure format and syntax of the messages including those described above for communicating to the Web crawler. As shown the syntax of the structures uses example Extensible Markup Language XML schema as well as WSDL. Appendix A is incorporated herein in full.

While shows the configuration request and response messages for configuring the crawl function of crawler application illustrates an example user interface for allowing a user to enter inputs for the configuration requests illustrated in in accordance with embodiments disclosed herein. In an embodiment protocol client presents user interface for allowing a user to enter data for configuring the crawl function of crawler application . User interface is displayed on the user interface of client computer for example. Configuration options are displayed to the user in user interface . While a single user interface is shown in multiple user interfaces can be used in accordance with embodiments disclosed herein. User interface prompts a user to create a new crawl rule by allowing the user to mark checkbox . Further a user configures the crawl function by marking checkbox to indicate that only URLs of matching links including case sensitive considerations should be crawled according to embodiments disclosed herein. In an embodiment user interface allows a user to configure the crawl function by defining authentication information for the crawl by marking checkbox to indicate that the user desires to provide credentials for the crawl rule. For example the user is prompted to enter credentials such as a password by way of example only in data entry field . User interface is offered for purposes of illustration only. Any type of user interfaces can be used in accordance with embodiments disclosed herein. In other embodiments no user interface is used and configuration requests and input data are instead provided directly by another computing device a computer program etc.

While shows an example user interface for allowing a user to provide input data for configuring the crawl function of crawler application depicts the operational steps for requesting a search for a specific type of information and determining whether a configuration request applies to a Web crawl. Start operation is initiated and process proceeds to obtain the current configuration version of crawler application operation in which the crawler application is launched in response to an indication by a user protocol client etc. For example a protocol client obtains the current configuration version of the Web search service. Next a request is made to search for an electronic document . This search requests a specific type of information and or provides specific search criteria. A search engine such as search engine in receives the search request and determines whether any electronic documents satisfying the request are indexed in an index catalog such as index in . Such indexing allows for fast search responses and is based on previous Web crawling results. If the index contains an item s matching the search criteria process branches YES to receive list of documents content sources in which a list of electronic documents content sources matching the search criteria is provided to and received by the protocol client for example. Next the user or client determines whether any documents content sources should be requested from the list received of indexed documents at operation . If no indexed documents are desired process branches NO to end operation and process terminates. If an indexed document s content source s from the list is desired process branches YES to request document operation . In response to request operation the electronic document s is then received at operation . Process then terminates at end operation .

Returning to operation if no electronic documents satisfying the search request are indexed in index for example process branches NO to request to start crawl operation . In initiating the Web crawl the user is prompted to determine whether to configure the crawl function . If NO the crawl proceeds and the client or user for example receives results of the crawl at receive operation . If the client desires to configure the crawl function process branches YES to provide input data . The crawl then proceeds and the client receives the results of the crawl at operation . Process then terminates at end operation . Although depicts the prompting of a user to configure a crawl function it should be noted that this illustration is offered by way of example only in accordance with an embodiment disclosed herein. In other embodiments no prompt is given and the client instead initiates a configuration request. In still other embodiments such configuration request occurs before any Web crawling begins for a particular search. Further while separates the steps for determining whether an index includes a document content source satisfying search criteria from the steps for starting a Web crawl if no document content source satisfying the search criteria is indexed in other embodiments a request to start a crawl operation also applies to retrieving documents content sources from an index. In other words a Web crawl is initiated to discover both documents content sources in the index of the protocol server and external Web sites in accordance with other embodiments disclosed herein. is merely an example of possible operational characteristics for requesting a search and configuring a crawl function in accordance with embodiments disclosed herein. Operational steps depicted may be combined into other steps or additional steps may be added for example.

While depicts the operational steps for prompting a client as to whether configuration of a crawl function is desired illustrates the operational steps for sending a configuration request from a protocol client such as protocol client in to a protocol server such as protocol server in in accordance with embodiments disclosed herein. Start operation is initiated and process proceeds to a protocol client obtaining the current configuration version of a Web search service or crawler application. For example a Web site for the Web search service is accessed in accordance with an embodiment. The protocol client knows the address of the Web site for the Web search service in one embodiment and accesses such Web site upon an indication to invoke or launch the Web search service. As an example a user clicks on a box icon or other component indicating that the Web search service should be launched. This box icon or other component in embodiments is on a user s desktop within another application etc. Numerous types of ways to launch the Web search service can be used in accordance with embodiments of the present disclosure. In an embodiment the protocol client accesses the Web search service by connecting to it by its network address in which any authentication and or authorization methods are automatically executed for access by the protocol client. Upon obtaining the current configuration version of the Web search service or crawler application the protocol client presents a user interface for initiating a crawl by the Web search service or configuring a crawl . It should be noted that steps and are offered by way of example only. For example in other embodiments the protocol client automatically displays the user interface or other interface mechanism for enabling configuration of the crawl function. The protocol client thus presents the user interface for requesting Web crawling prior to any received indication to launch the Web search service. In still other embodiments the protocol client does not display such user interface. Rather the user interface is displayed by other software running in conjunction with the protocol client. In yet further embodiments the protocol client displays the user interface for requesting Web crawling and or configuring of the crawl function in response to a user launching the Web search service by directly accessing a Web site for such service.

Next the user interface such as user interface prompts the user to determine whether the user would like to configure the crawl function . If the user or other client such as computing device or computer program desires to configure the crawl function process branches YES to receive input data for configuring the crawl function . Examples of such input data are shown with respect to the sample message operations discussed above. Upon receiving the input data the protocol client formats the input data into a configuration request for communication to the API on the protocol server and sends the request for configuring the crawl function to the protocol server. After the protocol server through the Web search service for example depicted in processes the configuration request the protocol client receives a response from the protocol server. The protocol client parses the response to determine whether it indicates a fault exception or other error . If an error is detected process branches YES to indicate to the user for example that revised input data is needed to make the configuration request allowable. Process then proceeds to receive input data operation. If no error is indicated process terminates at end operation . Returning to operation if it is not desired to configure the crawl function process proceeds to crawl or search index operation in which a crawl process or other search process is conducted by the crawler application or search engine respectively. is merely an example of possible operational characteristics for requesting a search and configuring a crawl function in accordance with embodiments disclosed herein. Operational steps depicted may be combined into other steps or additional steps may be added for example.

While depicts the operational steps for sending a configuration request from a protocol client to a protocol server illustrates the operational steps for creating and configuring a content source in accordance with embodiments disclosed herein. Start operation is initiated and process proceeds to obtain the current configuration version of the crawler application . In an embodiment the protocol client obtains the current configuration version of the crawler application in response to an indication by a user to perform a crawl or configure an existing crawl function by using the GetVersion operation for example. After obtaining the crawler application process proceeds to request the list of existing content sources in which indexed content sources for example are compiled into a list according to embodiments. In other embodiments the list of content sources already exists and no compilation is required. In accordance with an embodiment disclosed herein the list of content sources is obtained by using the GetContentSources operation. Next the protocol client receives the list of existing content sources and adds a new content source such as through an AddContentSource input message. After adding a new content source the content source properties are updated in embodiments at update operation . For example the protocol client requests to edit the content source and an EditContentSource input message is relayed to the crawler application through the use of an API on the protocol server. The protocol client then receives a response message to the configuration request for updating the content source properties at receive operation and process terminates at end operation . is merely an example of possible operational characteristics for creating and configuring a content source in accordance with embodiments disclosed herein. Operational steps depicted may be combined into other steps or additional steps may be added for example.

Further while illustrates the operational steps for creating and configuring a content source depicts the operational steps for configuring a crawl rule such as by setting credentials for an authentication method using message SetCredentials2 as disclosed herein in accordance with embodiments of the present disclosure. Process is initiated at start operation and proceeds to obtain the current configuration version of the crawler application such as by GetVersion operation according to an embodiment. To configure a crawl rule the protocol client next requests the current list of crawl rules such as by GetCrawlRuleList operation and receives the list at operation . After obtaining the current list of crawl rules process proceeds to create a new crawl rule such as through AddAdvancedCrawlRule operation according to embodiments. The client or user then updates one or more properties of the new crawl rule such as through the UpdateCrawlRule operation and process proceeds to set crawl rule credentials for defining an authentication method for the crawl. In an embodiment the SetCrawlRuleCredentials2 operation is used to configure the authentication method and crawl account for the new crawl rule. Process then terminates at end operation . is merely an example of possible operational characteristics for configuring a crawl rule in accordance with embodiments disclosed herein. Operational steps depicted may be combined into other steps or additional steps may be added for example.

Finally illustrates an example computing system upon which embodiments disclosed herein may be implemented. A computer system such as client computer server or other computing device which has at least one processor and a system memory is depicted in accordance with embodiments disclosed herein such as to configure a crawl function as shown in . For example according to embodiments memory comprises an index existing content sources and or current crawl rules. In its most basic configuration computing system is illustrated in by dashed line . System may include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . By way of example and not limitation computer readable media may comprise computer storage media and communication media.

Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media i.e. memory storage . Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store information and which can be accessed by system . Any such computer storage media may be part of system . Depending on the configuration and type of computing device memory may be volatile non volatile or some combination of the two. The illustration in is intended in no way to limit the scope of the present disclosure.

Communication media may be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media in accordance with an embodiment includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

System may also contain communications connection s that allow the device to communicate with other devices. Additionally to input content into the fields of the UI on client computer as provided by a corresponding UI module not shown on client computer for example in accordance with an embodiment of the present disclosure system may have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included in which such devices may be used to display the UI for viewing configuration options receiving input data for a crawl or configuration request etc. in accordance with embodiments. All of these devices are well known in the art and need not be discussed at length here.

Having described embodiments of the present disclosure with reference to the figures above it should be appreciated that numerous modifications may be made to the embodiments that will readily suggest themselves to those skilled in the art and which are encompassed within the scope and spirit of the present disclosure and as defined in the appended claims. Indeed while embodiments have been described for purposes of this disclosure various changes and modifications may be made which are well within the scope of the present disclosure.

Similarly although this disclosure has used language specific to structural features methodological acts and computer readable media containing such acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific structure acts features or media described herein. Rather the specific structures features acts and or media described above are disclosed as example forms of implementing the claims. Aspects of embodiments allow for multiple client computers multiple protocol servers multiple networks etc. Or in other embodiments a single client computer with a single protocol server and single network are used. One skilled in the art will recognize other embodiments or improvements that are within the scope and spirit of the present disclosure. Therefore the specific structure acts or media are disclosed as example embodiments of implementing the present disclosure. The disclosure is defined by the appended claims.

