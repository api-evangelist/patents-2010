---

title: Computer-implemented system and method for facilitating conversation within a group through heterogeneous message delivery
abstract: A computer-implemented system and method for facilitating conversation within a group through heterogeneous message delivery is provided. A conversation thread including messages shared by recipients collectively formed into a group is identified. The messages from one recipient are queued in an intermediate format pending delivery through type-specific message interfaces to the other recipients. A message type corresponding to each other recipient is determined. An identifier is formatted and each message's content is structured from the intermediate format into the message type for the other recipients. The delivery of each message within the group is managed. First, the message is sent to the other recipients via the message interface corresponding to the message type of the other recipient. The delivery of the message is tracked by monitoring an acknowledgement of a receipt of the message. Last, an alternate message type is selected upon non-acknowledgment of message receipt by the other recipient.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08316095&OS=08316095&RS=08316095
owner: 
number: 08316095
owner_city: 
owner_country: 
publication_date: 20100607
---
This patent application is a continuation of U.S. patent application Ser. No. 11 524 722 filed Sep. 20 2006 now U.S. Pat. No. 7 734 705 issued Jun. 8 2010 which claims priority from U.S. Provisional Patent Application Ser. No. 60 815 792 filed Jun. 21 2006 expired the priority filing dates of which are claimed and the disclosures of which are incorporated by reference.

The invention relates in general to electronic messaging and specifically to a computer implemented system and method for facilitating conversation within a group through heterogeneous message delivery.

Currently a wide range of communications platforms and messaging options provide an increasing number of ways to stay in touch. Communications platforms run the gamut from conventional desktop personal computers to Web browser enabled third generation 3G mobile telephones which offer an equally broad range of messaging options including email instant messaging text messaging Web logs Blogs and digital voice to name a few. New communications platforms and messaging options continue to evolve.

In particular wireless devices have redefined interpersonal communications by providing a new plateau of availability and immediacy for message exchange. Mobile telephones for instance are widely used in place of conventional wired telephones. Additionally in addition to providing basic voice communications the capabilities of mobile telephones as well as other types of wireless devices have expanded to textual visual and other forms of digital data.

Nonetheless wireless devices are only effective when service is available to subscribers. Physical limits can constrain coverage area including range and signal strength. As well practical limits such as having a valid subscriber account personal security needs and social norms can further restrict availability such as in a movie theater where mobile telephone usage is strongly discouraged. Moreover even where service is available wireless devices fail if the subscriber does not answer.

Unanswered communications present a dilemma if immediate acknowledgement of the receipt of a message is needed. A caller must decide between trying to contact the recipient by another means of communication and risk further unanswered calls or trying again at a later time. Thus knowing message delivery status can be helpful for instance when the message is sent via an alternate means due to a failure or extended delay of the primary message delivery means to avoid further time wasted on re attempts at delivery.

In addition to tracking message delivery a single thread of conversation could conceivably take on different forms of messaging such as voice text and email. While the conversation thread reflects a single communicative exchange the divergence of messaging options can lead to a lack of synchrony. For example a voice message sent in reply to a text message may be lost or not properly noted leading to lost contacts or duplicative replies. Conventional approaches to providing multiple messaging means fail to satisfactorily queue track and synchronize message delivery.

For instance U.S. Pat. Nos. 6 430 604 and 6 654 790 teach an Instant Messaging System IMS that allows users to register one or more alternative message delivery mechanisms such as pagers cellular telephones and email. The alternative message delivery mechanisms can include constraints. If a user is not currently logged on to the system the IMS can deliver a message using a suitable alternative provided all constraints are satisfied. The IMS also allows a sender to determine a message recipient s availability. However undelivered messages are not enqueued and the sender is only notified if the message cannot be delivered through the IMS or one of the alternative mechanisms.

U.S. Pat. No. 6 912 564 teaches a communications system that includes an instant messaging network IMN and an email gateway that are interconnected via a configuring network. The IMN can determine a user s availability. The configuring network is dedicated to automatically configuring instant messaging communication between email senders and recipients. The configuring network can send redirection commands to a recipient based on the capability of a sender to receive an instant message or the capability of another recipient of the email to receive an instant message.

U.S. Pat. No. 6 993 555 teaches interactively responding to queries from instant messaging users. Each query is processed and an answer is generated which is formatted and returned to the user as an instant message or via another route specified by the user. Instant messaging query responses originate with a query response system rather than from a user to another user.

Finally U.S. Pat. No. 6 549 937 teaches a user interface coupled to a conversion platform via an API which allows multi protocol messaging communication. The conversion platform translates messages and commands from a standard protocol into individual service provider messaging formats and protocols. Delivered messages are neither threaded nor updated.

Therefore there is a need for providing a versatile communications platform with multiple message type support and transparent interoperability. Preferably such a platform would provide generic message composition translatable into one of several available messaging formats and the platform will monitor and automatically deliver the message in those messaging types that the recipient accepts.

A shadowbox framework transparently operates within a set of intermediate network protocol layers to enable heterogeneous messaging between subscribing users. Incoming messages are converted through a messaging format specific interface and aggregated into an intermediate protocol pending message delivery. Communications are proxied through the shadowbox framework which exports an application programming interface API that communicates with end user applications such as Web browsers and email clients. A set of handling rules specify alternate means of message delivery. Pending messages remain enqueued until delivery is complete with continued tracking and synchronization. Reply messages and other messages that are part of an active communication thread are parlayed through the shadowbox framework which converts the messages into the intermediate protocol and recipient specified messaging formats.

One embodiment provides a system and method for facilitating conversation within a group through heterogeneous message delivery. A message is queued. The message includes an identifier and content in intermediate format pending delivery through type specific message interfaces. The delivery of the message to a recipient is managed with the message cast into one of a plurality of message types. The identifier is formatted and the content of the message is structured from the intermediate format into one such message type for the recipient. The message is sent to the recipient via the message interface corresponding to the selected message type. The delivery of the message is tracked by monitoring an acknowledgement of a receipt of the message by the recipient. An alternate message type available is selected upon non acknowledgment of message receipt.

A further embodiment provides a computer implemented system and method for facilitating conversation within a group through heterogeneous message delivery. A conversation thread that includes a plurality of messages and that is shared by a plurality of recipients who are collectively formed into a group is identified. For each recipient in the group the messages from one such recipient are queued in an intermediate format pending delivery through type specific message interfaces to each of the other recipients of the conversation thread. A message type corresponding to each of the other recipients is determined. An identifier is formatted and the content of each message are structured from the intermediate format into the message type for each of the other recipients. The delivery of each message within the group is managed. First the message is sent to each of the other recipients via the message interface corresponding to the message type of the other such recipient. The delivery of the message is tracked by monitoring an acknowledgement of a receipt of the message by the other such recipient. Last an alternate message type is selected upon non acknowledgment of message receipt by the other such recipient.

Still other embodiments will become readily apparent to those skilled in the art from the following detailed description wherein are described embodiments of the invention by way of illustrating the best mode contemplated for carrying out the invention. As will be realized the invention is capable of other and different embodiments and its several details are capable of modifications in various obvious respects all without departing from the spirit and the scope of the present invention. Accordingly the drawings and detailed description are to be regarded as illustrative in nature and not as restrictive.

Interpersonal communications are as much challenged by the type of communications device used as by the particular type of messaging employed. The continually increasing number of messaging options has outpaced the interoperability of the communications devices and message types leaving the onus on the sender to find an appropriate solution for contacting a recipient.

The communications devices include individual computing systems communication devices and consumer grade equipment such as gaming consoles and other personal electronic devices that provide communications interfaces and capabilities. For example a personal computer system which includes a user interface with input and output means can offer email instant messaging text messaging Blog Real Simple Syndication RSS audio data and video data messaging types. A notebook computer with a similar user interface can provide the same types of messaging options but in a portable and mobile package. Increasingly mobile telephones and personal data assistants PDAs respectively having more limited user interfaces offer a growing range of messaging type support as well as a new generation of personal and business communications devices . Similarly communications consoles such as the WebTV and gaming consoles such as the Xbox both licensed by Microsoft Corporation Redmond Wash. use existing infrastructure such as television sets to present a hybrid user interface and can offer a further platform for exchanging messages. Receive only devices such as pagers and facsimile machines respectively allow unidirectional message communication which requires replies to be sent via a different communications device and messaging format. Finally legacy devices such as conventional telephones can interface into the electronic data communications environment by converting analog data into digital data that can be exchanged over an internetwork . Other types of physical communication devices and messaging types are possible.

The various communications devices are logically integrated through a centralized server that stages pending and undelivered messages in a queue and actively manages the messages through a shadowbox framework as further described below with reference to . The shadowbox framework enables a sender and one or more recipients to transact a conversation using a messaging type of their own choosing and without having to know the particular messaging type preferred by the other party. Equivalent server functionality can also be provided by a personal computer system notebook computer communications console and gaming console through a shadowbox framework not shown .

Preferably the centralized server is a server grade computing platform configured as a uni multi or distributed processing system. Additionally the server personal computer and notebook computer are programmable computing devices that respectively execute software programs and include components conventionally found in computing devices such as for example a central processing unit memory network interface persistent storage and interconnection components.

Fundamentally the shadowbox framework transparently manages disparate messaging types between communicating parties. The particular hardware necessary to support the shadowbox framework will depend upon message volume available individual computing systems and communication devices system capabilities and interfaces and similar factors. In one embodiment the shadowbox framework can be made available to users through a centralized server to provide a widely available and centralized communications hub. In further embodiments local or personal versions of the shadowbox framework can be implemented on consumer grade equipment such as described above with reference to .

Generically each system that provides a shadowbox framework provides a common set of functional components. is a functional block diagram showing a system by way of example for facilitating conversation within a group through heterogeneous message delivery in accordance with one embodiment. A system executes a sequence of programmed process steps such as described below beginning with reference to implemented for instance on a programmed digital computer or communications device.

The system includes a queue and database . Staged messages that are in transit and yet to be delivered are temporarily stored in the queue . Delivered messages are stored in the database but can be deleted if a receiving application declines delivered message storage.

Structurally the system includes applications and the shadowbox framework . The applications include system utilities and end user operable programs not shown . The shadowbox framework includes an application programming interface API message aggregator and message interfaces . Other server modules and components are possible

The shadowbox framework manages the processing of messages including message queuing tracking and synchronization. The API provides an exportable interface of the messages between the applications and the shadowbox framework . The message aggregator receives incoming messages and other incoming data through a corresponding message interface that converts each incoming message into an intermediate protocol for management by the shadowbox framework as further described below with reference to .

To manage messages the shadowbox framework references a set of individual user accounts which stores user preferences handling rules and other data such as calendar and schedule information. The preferences define user identifier data and program options. The handling rules specify the order of application of successive messaging types in the event of a condition occurrence such as message non delivery encountered when message delivery is unsuccessfully attempted. In turn the shadowbox framework manages the sending of outgoing messages and other outgoing data that is similarly processed by the message aggregator through the corresponding message interfaces . In a further embodiment the delivery and if necessary handling of message exchange is chronicled in a log maintained by the shadowbox framework .

The shadowbox framework also provides acknowledgement or non acknowledgement of message delivery from a recipient to a sender. The sender and recipient are generally the communications device to which the message is relayed. However the acknowledgment or non acknowledgement can be the result of manual user action or an automated response generated by the device to signify that the message was perceived. Other server functions are possible.

To facilitate the conversion of messages between different messaging formats each message is converted into an intermediate protocol format that is system independent. is a block diagram showing by way of example heterogeneous protocol layers for use in the environment of . The underlying network can be implemented in accordance with the Internet Protocol IP such as described in W. R. Stevens TCP IP Illustrated Vol. 1 Ch. 1 et seq. Addison Wesley 1994 the disclosure of which is incorporated by reference. Other network infrastructures are possible. The intermediate protocol layer logically overlays the network and transport layers of a standard network protocol stack implementation. Accordingly the intermediate protocol layer interfaces with yet transparent to the adjoining data link and application network protocol layers.

Messages are received into and sent out of the intermediate protocol layer through a standard Internet Protocol IP interface . The corresponding data link interface communicates with a media access controller to effect the physical transport of data packets to and from a destination network node. Similarly the intermediate protocol layer interfaces to applications through standard Transmission Control Protocol TCP and User Datagram Protocol UDP interfaces. The intermediate protocol layer enables each message to be converted into an appropriate transport format for use by application protocol layer programs. For instance Internet Messaging Protocol IMP File Transport Protocol FTP Simple Mail Transport Protocol SMTP and Hypertext Transport Protocol HTTP messages are converted into TCP packets whereas Voice over IP VoIP and RealAudio Protocol data streams are converted into UDP datagrams to respectively enable connection oriented and connectionless communications even where the original message is of a different messaging type.

In addition the application protocol layer can include support for interactive user sessions such as Internet telephony video instant messaging online gaming and virtual reality. For example the Session Initiated Protocol SIP provides call setup and signaling and the Real Time Transport Protocol RTP provides streaming data support. SIP can be used to assist with morphing conversations between formats. For instance a conversation that began as a voice to voice exchange could be subsequently converted into a video to video exchange provided that both parties switched to video. The switch to video would be effected through the shadowbox framework which would create SIP connections for each party and make the necessary media and formatting conversions. Other application protocol layers and data conversions are possible.

Messages can be exchanged freely between users and subscribers to shadowbox framework services through a number of supported messaging formats. is a data flow diagram showing by way of example heterogeneous electronic messaging formats used with the system of . Messages are converted from and into the supported formats by the shadowbox framework . The formats include conventional email such as POP3 and SMTP as well as Internet messaging text messaging and Short Message Service SMS messaging. Email Internet messaging and text messaging are examples of connectionless protocols identified through network addresses or handles. Conversely connection oriented protocols such as HTTP are supported through Blog and RSS message formats which rely on standard Web content hyperlinks identified through Uniform Resource Locators URLs operating in conjunction with active server content. Finally legacy messaging formats such as voice and facsimile identified through telephone numbers must be in a digital format. Similarly streaming data such as live audio or video or voice over IP VoIP can be provided through a connectionless protocol such as the RealAudio Protocol. In a further embodiment network addresses are handles URLs and telephone numbers can be represented by proxies. Other types of protocols are supportable.

Functionality within the shadowbox framework can be customized through the use of micro applications. is a data flow diagram showing by way of example micro applications used with the system of . The micro applications include both stand alone and plug in programs. Other types of micro applications are possible.

Each micro application provides a specific type of service within the shadowbox framework . Fundamentally queuing temporarily stages pending and undelivered messages to provide a virtual desktop to users and subscribers. Conversion translates messages into and from the intermediate protocol to enable system independent message exchange. Some types of message translations require simple changes in form. For instance converting an email into a Blog may only require posting the email header information and message body into a Web page format suitable for a Blog. On the other hand converting a streaming audio message into a text message may require converting the audio stream from speech into text then formatting the text into a series of one or more discrete text messages. Handling allows a user to specify a set of handling rules that enumerate alternate message delivery means. The handling rules implement a message processing grammar that specifies how a message should be processed for instance should a message delivery attempt succeed fail or be preferred. The handling rules can be executed sequentially or in tandem and need not be followed in a linear order. For example a user could specify that certain handling rules be conditionally executed or skipped in order or out of sequence. Other forms of handling are possible. Similarly tracking dynamically traces the progress of message delivery and active conversation threads. Synchronization reflects substantive changes in a conversation thread independent of messaging format. For example a reply to an email would be reflected and carried forward to subsequent messages in a conversation thread even though those messages are in a format other than email such as a Blog or facsimile.

In addition to tracking the shadowbox framework can also provide reporting and logging which respectively generate a summary of a conversation thread and archival of messages delivered. To ensure privacy security encrypts messages in the intermediate protocol layer using for instance public key encryption. Although message exchange will frequently involve conversation threads between individual parties a message can be broadcast to a plurality of recipients which can each have a different messaging format specified.

Finally preceding or following message delivery the shadowbox framework can respectively support pre processing and post processing such as remote procedure execution through a compatible application provided for instance as a further micro application. Other miscellaneous micro applications are possible.

The shadowbox framework provides a transparent message management and delivery mechanism that automatically selects converts and relays messages in plurality of messaging formats. is a functional block diagram showing software modules used in the shadowbox framework implemented in the system of . The shadowbox framework manages message receipt and delivery as a form of logical intermediate network layer between the data link and application network layers.

The shadowbox framework interfaces to the data link network layer through a message aggregator and a set of message format specific message interfaces and . Through each of the message interfaces the message aggregator converts an inbound or outbound message into an intermediate protocol representation that is used internally by the shadowbox framework . A set of micro applications provides specialized functionality at the intermediate protocol layer and with the application network layer . A management API enables end user applications such as Web email SMS voice and Internet messaging to access messages directly from the user or subscriber. Similarly account management message delivery rules and message log functions respectively allow a user to manage the shadowbox framework preferences handling rules and message archival conventions. Calendar and scheduler micro applications for example provide access to other forms of non messaging data. Finally message synchronization micro application reflects message delivery progress such as reply and forwarded messages independent of messaging format. Other software modules are possible.

Message processing involves conversion tracking and delivery. is a process flow diagram showing message processing using the shadowbox framework of . Initially each message is converted into an intermediate protocol operation . At a minimum the intermediate protocol represents each message with a recipient identifier and content although additional information can also be maintained depending upon the message type and delivery details.

Once received the shadowbox framework will look up a profile of the user or subscriber that is identified as the recipient of the message operation and the sender is notified operation . The message is enqueued operation . In addition information about the conversation is determined including the conversation link and contact status. The message is tagged with a conversation tag and archived before a contact sequence is built based on the user or subscriber profile. The shadowbox framework can operate as a proxy for the user or subscriber which will appear as a system and messaging format independent recipient. For example a single telephone number can be used for digital voice or facsimile communications and a single email or network address or handle for other forms of addressable data.

The shadowbox framework negotiates with the subscriber operation when required to transact a message delivery. For instance negotiation is necessary for session based communications such as a Blog RSS audio or video streaming data delivery. Upon the successful completion of subscriber negotiation the message is converted into the negotiated destination protocol operation . A proxy for the subscriber can optionally be established operation . The message is then delivered operation . If subscriber negotiation fails or the delivery attempt times out the sender is notified operation . The sender is notified following successful message delivery operation . However if message delivery fails the sender is notified operation and the delivery is handled operation by selecting the next handling rule and specifying an alternate messaging format. Other operations are possible.

A user generally refers to the sender of a message while a subscriber generally refers to a message recipient who is enrolled in services offered by a shadowbox framework. is a process flow diagram showing processing for an original message using the shadowbox framework of . An original message is received and converted into the intermediate protocol used by the shadowbox framework operation . If available the profile for the user is retrieved operation and the original message is converted operation using an appropriate conversion message interface . A communication proxy is assigned block and the message is queued for delivery operation . Other original message processing operations are possible.

A subscriber generally has a set of handling rules in place that specify alternate means of message delivery should a communications device or messaging channel be unavailable or unsuccessful or simply preferred. is a process flow diagram showing processing for a reply message using the shadowbox framework of . A response message received from a subscriber is converted into the intermediate protocol used by the shadowbox framework operation . The profile for the subscriber is looked up operation and the response message is converted operation into a specific messaging format for the recipient user using the corresponding message interface . The response message is then delivered operation . Other reply message processing operations are possible.

The type of processing performed depends upon the formats used by the original and delivered messages. are flow diagrams showing inbound text message processing . For example an inbound text message can be delivered as a digital voice message for playback as streaming audio data.

Initially the inbound text message is internalized by conversion into the intermediate format and queued block . The profile for the sending user is looked up block and tracking of the message delivery status is started block . If the message cannot be forwarded as a digital voice message block the delivery is handled block by applying the next applicable handling rule. Otherwise the inbound text message is converted from the intermediate format into a digital voice message block and the recipient subscriber is located block . If the recipient subscriber is not found block the message delivery is handled block . Otherwise the tracking status of the message delivery is updated block and message delivery is negotiated with the recipient subscriber block . If the subscriber can receive voice playback block the message is played as streaming audio data block . Otherwise other forms of playback are processed block for instance as a form of scrolling text message. The tracking status is again updated block . If the recipient subscriber chooses to reply block a reply message from the recipient subscriber is recorded block . The reply message is converted into a text message block and delivery with the sending user is negotiated block . The sender is accessed block and provided a timeout does not occur block the message is delivered block . The tracking status is again updated block . If delivery is pending the shadowbox framework continues waiting block . Finally if the user profile indicates message storage block the message is stored block and the log is updated block .

In a further embodiment telephone messages can be proxied by assigning a system independent network or communication address for the purpose of a particular conversation thread user or subscriber. is a flow diagram showing proxied telephone message processing . Initially an available communication address is selected block and a timeout value is set block . The contact information timeout value and communication address are recorded block and the telephone message is sent to the communication address block .

Similarly a telephone response can be proxied on behalf of a recipient subscriber. is a flow diagram showing proxied telephoned message processing . Initially the record for the subscriber is looked up using the communication address for the telephone conversation block and the availability and timeout values are checked block . If the communication address is still available and the timeout unexpired block the telephone response is sent with received information returned to the communication address block . Otherwise an exception is processed block .

In a still further embodiment messages can be sent as a form of RSS feed by notifying the recipient subscriber. is a flow diagram showing RSS notification processing . Conventionally an RSS feed relies on polling performed by the RSS subscriber to determine when an update to the feed is available. However to conserve network resources and lower network traffic volume an RSS subscription server can provide notifications to subscribers. Initially the RSS feed object is updated block and if users are subscribing to the RSS feed block an Internet messaging notification is sent block . An appropriate RSS feed response is then processed block based on the messaging format specified by the subscriber.

In a still further embodiment voice communications can be exchanged between subscribers. are flow diagrams showing inbound voice communication processing . For example an inbound voice communication can be delivered as a text message.

Initially the inbound text message is internalized by conversion into the intermediate format and queued block . The profile for the sending user is looked up block and tracking of the message delivery status is started block . A proxy is determined by assigning a system independent network or communication address block . If the message cannot be forwarded as a text message block the delivery is handled block by applying the next applicable handling rule. Otherwise message delivery is negotiated with the sender block and the recipient subscriber is located block . If the recipient subscriber is found block the tracking status is again updated block and the voice communication is converted from the intermediate format into a text message block . The text message is then delivered block . Otherwise if the recipient subscriber is not found block the message delivery is handled block .

A recipient subscriber can chose to reply block by first writing a reply message block which is converted into a voice communication block . If the sender is on the telephone block the reply is delivered as voice content block . Otherwise the shadowbox framework will attempt contact block until contact is made block . If attempts at contacting the sender fail block the recipient subscriber is notified block . The tracking status is again updated block . Finally if the user profile indicates message storage block the message is stored block .

While the invention has been particularly shown and described as referenced to the embodiments thereof those skilled in the art will understand that the foregoing and other changes in form and detail may be made therein without departing from the spirit and scope of the invention.

