---

title: Latency reduction associated with a response to a request in a storage system
abstract: A method includes segmenting a virtual volume into an active area configured to map to a first type of storage and a non-active area configured to map to a second type of storage through a storage virtualization engine. The second type of storage includes data associated with a host device and the first type of storage includes point-in-time images corresponding to the data associated with the host device. The first type of storage offers a higher performance than that of the second type of storage. The method also includes allocating a portion of space in the first type of storage to serve as a cache memory during a write operation and/or a read operation, and reducing a latency associated with the response to a write request and/or a read request through performing the corresponding write operation and/or the read operation through the first type of storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08782335&OS=08782335&RS=08782335
owner: LSI Corporation
number: 08782335
owner_city: Milpitas
owner_country: US
publication_date: 20101108
---
This disclosure relates generally to storage systems and more particularly to a method an apparatus and or a system of reducing latency associated with a response to a write request and or a read request in a storage system.

A storage system may include data associated with one or more users belonging to an entity e.g. an organization stored in storage pools therein. A portion of the data may be accessed frequently by the one or more users and another portion of the data may be accessed less frequently by the one or more users. Additionally the storage system may be configured to back up data associated with the one or more users therein.

When data to be frequently accessed is stored on hardware offering low performance read write requests thereto may be addressed with an increased response time. Moreover when the hardware offering low performance includes data stored close to a maximum capacity thereof the response time may be even further increased. In an example scenario when the hardware is associated with remote storage offered as a service in a cloud storage environment the one or more users may encounter read write timeouts leading to wastage of human effort and or loss of productivity.

Disclosed are a method an apparatus and or a system of reducing latency associated with a response to a write request and or a read request in a storage system.

In one aspect a method includes segmenting a virtual volume into an active area configured to map to a first type of storage and a non active area configured to map to a second type of storage through a storage virtualization engine. The second type of storage is configured to include data associated with a host device and the first type of storage is configured to include point in time images corresponding to the data associated with the host device. The first type of storage offers a higher performance than that of the second type of storage and the storage virtualization engine is configured to map the virtual volume to storage locations in the first type of storage and the second type of storage.

The method also includes allocating a portion of space in the first type of storage to serve as a cache memory during a write operation and or a read operation in response to a corresponding write request and or a read request through the host device and reducing a latency associated with the response to the write request and or the read request through performing the corresponding write operation and or the read operation through the first type of storage. The write operation includes caching data to be written to the second type of storage at the first type of storage and the read operation includes fetching a portion of a recently written data cached at the first type of storage or the data from the second type of storage to an appropriate cache location in the first type of storage to be read therefrom.

In another aspect a method includes storing point in time images corresponding to data associated with a host device at a first type of storage and storing the data associated with the host device at a second type of storage. The second type of storage offers a lower performance compared to the first type of storage. The method also includes resynchronizing or migrating one or more point in time image s corresponding to a least recently accessed data associated with the host device to the second type of storage when a memory occupied by the point in time images exceeds a threshold value and segmenting a virtual volume into an active area configured to map to the first type of storage and a non active area configured to map to the second type of storage through a storage virtualization engine.

The storage virtualization engine is configured to map the virtual volume to storage locations in the first type of storage and the second type of storage. Further the method includes allocating a portion of space in the first type of storage to serve as a cache memory during a write operation and or a read operation in response to a corresponding write request and or a read request through the host device and performing the write operation and or the read operation through the first type of storage. The write operation includes caching data to be written to the second type of storage at the first type of storage and the read operation includes fetching a portion of a recently written data cached at the first type of storage or the data from the second type of storage to an appropriate cache location in the first type of storage to be read therefrom.

In yet another aspect a storage system includes a host device configured to generate a write request and or a read request a first type of storage associated with the host device and a second type of storage associated with the host device. The second type of storage offers a lower performance than that of the first type of storage. The storage system also includes a storage virtualization engine associated with storage management in the storage system configured to perform virtual volume segmentation of the first type storage and the second type of storage into an active area configured to map to the first type of storage and a non active area configured to map to the second type of storage. The second type of storage is configured to include data associated with the host device and the first type of storage is configured to include point in time images corresponding to the data associated with the host device.

A user at the host device is configured to allocate a portion of space in the first type of storage to serve as a cache memory during a write operation and or a read operation in response to the corresponding write request and or the read request through the host device. The storage virtualization engine is configured to enable performing the write operation and or the read operation through the first type of storage to reduce a latency associated with the response to the corresponding write request and or the read request. During the write operation data to be written to the second type of storage is cached at the first type of storage. During the read operation a portion of a recently written data cached at the first type of storage or the data from the second type of storage is fetched to an appropriate cache location in the first type of storage to be read therefrom.

The methods and systems disclosed herein may be implemented in any means for achieving various aspects and may be executed in a form of a machine readable medium embodying a set of instructions that when executed by a machine cause the machine to perform any of the operations disclosed herein. Other features will be apparent from the accompanying drawings and from the detailed description that follows.

Other features of the present embodiments will be apparent from the accompanying drawings and from the detailed description that follows.

Disclosed are a method an apparatus and or a system of reducing latency associated with a response to a write request and or a read request in a storage system. Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments.

In one or more embodiments the one or more host devices e.g. host devices may be configured to communicate with remote storage associated therewith e.g. remote iSCSI volumes remote object storage through a computer network . In one or more embodiments computer network may be a Storage Area Network SAN a Local Area Network LAN a Wide Area Network WAN a Virtual Private Network VPN using communication links for example the Internet or any combination thereof. In one or more embodiments storage e.g. direct attached disks local storage array associated with the one or more host devices e.g. host devices may directly communicate with the one or more host devices e.g. host devices as a Network Attached Storage NAS device or a Direct Attached Storage DAS device.

In the example embodiment of a storage virtualized engine may be coupled to computer network and may be configured to flexibly allocate storage associated with the one or more host devices e.g. host devices to direct attached disks local storage array remote iSCSI volumes and remote object storage and or storage applications. LSI Storage Virtualization Manager SVM may be an example of storage virtualization engine . In one or more embodiments storage virtualization engine may enable centralized management of storage pooling in storage system and virtual volume allocations therein. In one or more embodiments storage virtualization engine may be capable of monitoring a physical device coupled to computer network . In one or more embodiments the physical device may be a host device e.g. the one or more host devices and or storages e.g. direct attached disks local storage array remote iSCSI volumes and or remote object storage configured as one or more storage pools. Storage virtualization engine as used herein may refer to hardware or software.

Thus in the example embodiment of storage virtualization engine may be configured to monitor the one or more host devices e.g. host devices direct attached disks local storage array remote iSCSI volumes and or remote object storage coupled to computer network through an agent associated therewith. In one example embodiment the agent associated with storage virtualization engine may be a Graphical User Interface GUI tool installed at the one or more host devices e.g. host devices . In one or more embodiments the agent may be installed at a number of host devices but not at all of the host devices e.g. host devices . In another example the agent may solely be installed at a host device e.g. host device configured to be associated with an administrator of storage system . In yet another example the agent may be installed at one or more host devices e.g. host devices configured to be customer s of storage services associated with a cloud computing environment of which storage system is a part of.

In one or more embodiments storage virtualization engine may be configured to enable centralized management of storage pooling and or virtual volume allocation associated with storage system . Further in one or more embodiments storage virtualization engine may be configured to enable retrieval of volume information from a host device e.g. host device associated therewith and routing of Input Output I O from the one or more host devices e.g. host device directly to storage devices associated therewith in response to read write requests.

In one or more embodiments the one or more host devices e.g. host device may support data sets associated with protocols including but not limited to Network File System NFS protocol Common Internet File System CIFS protocol and the iSCSI protocol. In the example embodiment of computer network may have appropriate controllers compatible with direct attached disks local storage array remote iSCSI volumes and remote object storage . For example a Peripheral Component Interconnect PCI Redundant Array of Independent Disks RAID controller may be compatible with direct attached disks and an FC iSCSI controller may be compatible with local storage array and or remote iSCSI volumes .

As discussed above remote object storage may have an emulation driver associated therewith. In one example embodiment a local block device may be emulated using the emulation driver and an Application Programming Interface API associated with a cloud including remote object storage . In another example embodiment where conventional block storage is associated with the cloud a vendor associated with the cloud may enable an iSCSI Logical Unit Number LUN and then may install an appropriate software therefor.

It is obvious that storage virtualization engine may also be configured to execute on storage array controllers associated with direct attached disks local storage array remote iSCSI volumes and remote object storage . The aforementioned modification is well within the scope of the exemplary embodiments.

In one or more embodiments virtual volume segmentation of a storage array associated with the one or more storage pools e.g. direct attached disks local storage array remote iSCSI volumes remote object storage may be done through storage virtualization engine . In one or more embodiments virtual volumes may be derived from a capacity of one or more constituent elements of the storage pools e.g. direct attached disks local storage array remote iSCSI volumes remote object storage . In one or more embodiments following the virtual volume segmentation mapping of virtual volumes to storage locations of the one or more constituent elements of the storage pools e.g. direct attached disks local storage array remote iSCSI volumes remote object storage may be done.

In one or more embodiments storage virtualization engine may be configured to divide virtual volumes into an active area configured to map to a first type of storage associated with the storage pools and a non active area configured to map to second type of storage associated with the storage pools. In one or more embodiments storage virtualization engine may be configured to split a data volume associated with the storage pool such that a base data volume may reside on a constituent element of the storage pools and an image data volume may reside on another constituent element of the storage pools. In one or more embodiments a user users at the one or more host devices e.g. host device having the agent installed thereat may select the constituent element and or the another constituent element of the storage pools. In one or more embodiments the image data volume may include point in time images e.g. Snapshots associated with the base data volume.

As mentioned above in one or more embodiments active area may be mapped to first type of storage and non active area may be mapped to second type of storage . In one or more embodiments storage virtualization engine may be configured to enable storage of image data volume on first type of storage and base data volume on second type of storage of the storage pools. In one or more embodiments image data volume resident on first type of storage may be configured to store point in time images associated with the data volume. In one or more embodiments as discussed above the aforementioned storage locations may be user accessible.

In one or more embodiments a user at a host device e.g. host device may allocate some space in local storage associated therewith for caching purposes. Remote storage may be provided as a cloud service to the user. Thus in one or more embodiments first type of storage including image data volume may include some space allocated for caching purposes and second type of storage may be remote storage. In one or more embodiments the user may initiate a data write request from the host device e.g. host device associated therewith. illustrates the data write process according to one or more embodiments. In one or more embodiments as shown in as the data write request e.g. write request originating at the host device e.g. host device may be associated with active area the write operation may be performed on first type of storage . In one or more embodiments when first type of storage is associated with higher performance than second type of storage the cache allocated therein e.g. by user may be utilized as a write back cache.

As shown in in one or more embodiments write operations e.g. write may be performed on first type of storage having higher performance. Therefore in one or more embodiments all write requests e.g. write request may be addressed quickly due to write operations e.g. write being performed on fast storage e.g. first type of storage . In one or more embodiments recently written data may be readily accessible through user allocation of space on fast storage for caching purposes.

In one or more embodiments as discussed above first type of storage now may include a write back cache. In one or more embodiments recently written data may be stored in the write back cache and may be accessed therethrough. In one or more embodiments during the idle cycles of the host device e.g. host device the recently written data may be written to second type of storage e.g. to base data volume . In one or more embodiments when second type of storage is a remote storage where the host device is configured to communicate therewith through computer network the recently written data may be written to second type of storage also taking into account conditions associated with computer network e.g. during optimum conditions such as high bandwidth availability less traffic . In one or more embodiments point in time image s of the recently written data in the write back cache may be taken through storage virtualization engine prior to writing to second type of storage . shows the writing of data from the write back cache to second type of storage .

In one or more embodiments as discussed above a user at a host device e.g. host device may allocate some space in local storage associated therewith for caching purposes. Remote storage may be a cloud service provided to the user. Thus in one or more embodiments again first type of storage including image data volume may include some space allocated for caching purposes and second type of storage may be remote storage. In one or more embodiments the user may initiate a data read request from the host device e.g. host device associated therewith.

In one or more embodiments the space in base data volume or image data volume from which the appropriate portion of data is copied may then be marked as unused. Therefore in one or more embodiments if the appropriate portion of data is copied from base data volume the appropriate portion of data may be fetched to the cache location in first type of storage from base data volume . In one or more embodiments if the appropriate portion of data is copied from image data volume the appropriate portion of data may be fetched to the appropriate cache location in first type of storage from image data volume . In one or more embodiments point in time images may be arranged from top to bottom in image data volume in an order of recency of creation data access through storage virtualization engine . The most recently accessed data corresponds to the top location in image data volume and the least recently accessed data corresponds to the bottom location in image data volume .

In one or more embodiments thus the location allocated for caching may be utilized as a read cache. In one or more embodiments regardless of the location e.g. base data volume lower portions of image data volume of the data to be read the data may be brought on top of image data volume to be read therein. Thus in one or more embodiments recently read areas e.g. portions of data on the storage pools may be accessed with the performance of first type of storage which may have higher performance compared to second type of storage . In one or more embodiments repeated access to the same areas may further enhance performance due to the read cache. In one or more embodiments the portion of the recently written data cached at first type of storage or the data from second type of storage may be released to the original location therein after successful completion of the read operation.

Thus in one or more embodiments recently accessed areas in the storage pools may be mapped to first type of storage regardless of the locations therein. In one or more embodiments when point in time images are frequently e.g. periodically created the bottom location of image data volume may hold the point in time image s of the least recently used data and top location of image data volume may hold the point in time image s of the most recently used data. Therefore in one or more embodiments deletion or resynchronization associated with the bottom point in time image s may discard the least recent data from image data volume . In one or more embodiments data associated with the discarded point in time image s in image data volume may be resynchronized to the original data corresponding thereto at base data volume .

In one or more embodiments the least recent point in time image s may be migrated to base data volume instead of being deleted at image data volume . shows a flowchart detailing the operations involved in implementing a Least Recently Used LRU cache associated with image data volume according to one or more embodiments. In one or more embodiments operation may involve creating point in time images of data frequently e.g. periodically in image data volume . In one or more embodiments operation may involve checking as to whether the cache memory associated with image data volume exceeds a threshold value. In one or more embodiments if yes operation may involve resynchronizing migrating the bottom point in time image s to free space in base data volume . In one or more embodiments if no control may pass to operation .

Thus in one or more embodiments volume on two storage pools may be allocated e.g. through a user at a host device e.g. host device such that a fast storage capacity e.g. first type of storage may be utilized for cache purposes and a slow storage capacity e.g. second type of storage may be utilized to store most of the data. In one or more embodiments latency associated with read requests and write requests in storage system incorporating the abovementioned technique may be reduced. In one or more embodiments virtual volume may be defined through storage virtualization engine on a certain storage space with the point in time images being stored on a different storage space having better performance. Thus in one or more embodiments storage associated with the point in time images may be utilized as a cache to the rest of the data. In one or more embodiments storage virtualization engine may manage transfer of data in and out of the aforementioned cache to provide for improved performance.

In one or more embodiments operation may include allocating a portion of space in first type of storage to serve as a cache memory during a write operation and or a read operation in response to a corresponding write request and or a read request through the host device. In one or more embodiments operation may include reducing a latency associated with the response to the write request and or the read request through performing the corresponding write operation and or the read operation through first type of storage . In one or more embodiments the write operation includes caching data to be written to second type of storage at first type of storage and the read operation includes fetching a portion of a recently written data cached at first type of storage or the data from second type of storage to an appropriate cache location in first type of storage to be read therefrom.

In one or more embodiments operation may involve resynchronizing or migrating one or more point in time image s corresponding to a least recently accessed data associated with the host device to second type of storage when a memory occupied by the point in time images exceeds a threshold value. In one or more embodiments operation may involve segmenting virtual volume into active area configured to map to first type of storage and non active area configured to map to second type of storage through storage virtualization engine . In one or more embodiments storage virtualization engine may be configured to map virtual volume to storage locations in first type of storage and second type of storage .

In one or more embodiments operation may involve allocating a portion of space in first type of storage to serve as a cache memory during the write operation and or the read operation in response to a corresponding write request and or a read request through the host device. In one or more embodiments operation may then involve performing the write operation and or the read operation through first type of storage . In one or more embodiments the write operation includes caching data to be written to second type of storage at first type of storage and the read operation includes fetching a portion of a recently written data cached at first type of storage or the data from second type of storage to an appropriate cache location in first type of storage to be read therefrom.

Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. Also for example the various devices and modules described herein may be enabled and operated using hardware circuitry e.g. CMOS based logic circuitry firmware software or any combination of hardware firmware and software e.g. embodied in a machine readable medium .

In addition it will be appreciated that the various operations processes and methods disclosed herein may be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer devices and may be performed in any order e.g. including using means for achieving the various operations . Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

