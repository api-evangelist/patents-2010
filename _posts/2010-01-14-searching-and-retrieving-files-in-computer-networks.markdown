---

title: Searching and retrieving files in computer networks
abstract: The specification and drawings present a new method, apparatus and software related product (e.g., computer readable medium) presented for: reading all multi-application files stored in network devices (i.e., in servers, workstations, archives, backup repositories, etc.) comprised in a computer network or reading selected multi-application files comprising one or more predefined features and stored in said network devices using a generic application programming interface (GAPI), followed by creating and/or updating (e.g., periodically) meta-data for the files read by using the GAPI, and/or followed by retrieving requested files out of the multi-application files using the meta-data for the requested files (if the meta-data is created and properly updated).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137307&OS=09137307&RS=09137307
owner: AddOnMail
number: 09137307
owner_city: Issy-les-Moulineaux
owner_country: FR
publication_date: 20100114
---
This application discloses subject matter which is also disclosed and which may be claimed in co pending co owned application Ser. No. 12 687 667 filed Jan. 14 2010 on even date herewith.

The present invention relates generally to computer networks and more specifically to searching and retrieving files stored in network devices of the computer networks.

Currently there is no universal method for reading searching and retrieving files in computer networks e.g. to perform e discovery . Accessing reading data stored in different network devices e.g. servers workstations archives backup repositories etc. is a complicated lengthy and application dependent process based on existing art. The challenges which are currently not addressed by existing technologies include but are not limited to a reading retrieving files created by different software applications b quickly retrieving and creating database out of files having desired properties c processing erased files d simultaneous searching and retrieving desired files etc.

According to a first aspect of the present invention a method comprises reading in a computer network by an access network computer all files or selected files comprising one or more predefined features out of a plurality of files created using two or more applications and stored in a plurality of network devices comprised in the computer network using a generic application programming interface configured to read the plurality of files using the two or more applications the generic application programming interface being comprised in the access network computer for further performing using the access network computer one or more of creating or updating meta data for the all files or the selected files comprising one or more predefined features retrieving the all files or the selected files comprising one or more predefined features and viewing on a display one or more files out of the all files or the selected files comprising one or more predefined features or the meta data if created.

In further accord with the first aspect of the invention the retrieving the all files or the selected files comprising one or more predefined features may be performed by using the meta data if the meta data is already created and updated within a predetermined time period or by creating or updating the meta data if the meta data is not created or not updated within a predetermined time period.

Still according to the first aspect of the invention the method may further comprise storing the meta data in the access network computer wherein the reading creating or updating are performed by the access network computer if the meta data for the all files or the selected files was not previously created or updated within a predetermined time period. Still further the predetermined time period may be 24 hours.

According still further to the first aspect of the invention the reading the all or the selected files and the creating or updating meta data for the read files may be performed by the access network computer in response to a request to create or update the meta data for the all or the selected files comprising one or more predefined features communicated to the access network computer through a user interface.

Still further according to the first aspect of the invention the reading the all or the selected files and the creating or updating meta data for the read files may be performed as a default without any request wherein the updating may be performed periodically with a predetermined time period.

Further still according to the first aspect of the invention the access network computer may be configured to process erased files.

In further accordance with the first aspect of the invention the network devices comprised in the computer network may be one or more of workstations servers archiving storage devices and backup storage devices.

Yet further still according to the first aspect of the invention the meta data may comprise one or more characterization records of the all files or the selected files indicating for each file of the all files or the selected files one or more of a location of a file a content an author and further indicating for the each file if the each file is an e mail one or more of an originator address a recipient address having attachment or not and wherein the characterization records comprise one or more of at least one index of content of the each file one or more summaries using selected characteristics and at least one aggregated summary combining the one or more summaries.

According still further to the first aspect of the invention the method may further comprise receiving a request to retrieve the selected files comprising one or more predefined features communicated the request being communicated to the access network computer through a user interface and retrieving the selected files by the access network computer in response to the request based on the meta data which is created and updated within a predetermined period of time and using the generic application programming interface to perform one or both of to store the selected files in a memory comprised in the access network computer and send the selected files to a requested destination in the computer network or to an outside computer network.

According yet further to the first aspect of the invention the method may further comprise receiving a request to retrieve the selected files comprising the one or more predefined features for backup or archiving and communicated to the access network computer through a user interface retrieving the selected files by the access network computer in response to the request based on the meta data which is created and updated within a predetermined period of time and using the generic application programming interface storing the selected files in repositories comprised in the computer network and updating the meta data for the selected files.

Further still according to the first aspect of the invention the two or more applications may be MICROSOFT OUTLOOK EUDORA MOZILLA THUNDERBIRD and IBM LOTUS NOTES.

According to a second aspect of the invention an access network computer comprises a generic application programming interface configured to provide reading in a computer network all files or selected files comprising one or more predefined features out of a plurality of files created using two or more applications and stored in a plurality of network devices comprised in the computer network the generic application programming interface being configured to read the plurality of files using the two or more applications for further performing by the access network computer using the reading one or more of creating or updating meta data for the all files or the selected files comprising one or more predefined features retrieving the all files or the selected files comprising one or more predefined features and viewing one or more files out of the all files or the selected files comprising one or more predefined features.

According further to the second aspect of the invention the access network computer may further comprise a meta data creating and updating module configured to create or update meta data for files out of the all or selected files which are read using the application programming interface if the meta data for the files was not previously created or if the meta data for the files was not updated within a predetermined time period and a meta data memory configured to store the meta data. Still further the predetermined period of time may be 24 hours.

Still further according to the second aspect of the invention the access network computer may further comprise a user interface configured to receive a request to create or update the meta data for the all files or the selected files comprising one or more predefined features a search and detect module responsive to the request configured to determine if the meta data for the selected files was not previously created or was not updated within a predetermined time period and if the meta data for the selected files was not previously created or updated within the predetermined time period configured to provide the request further to the generic application programming interface for reading the all files or the selected files to create or update the meta data for the all or selected files.

Further still in accordance with the second aspect of the invention the access network computer may be configured to create the meta data for all files or selected files comprising one or more predefined features out of the plurality of files or update the meta data for the all files or the selected files comprising one or more predefined features periodically every predetermined time period using reading by the generic application programming interface the all files or selected files comprising one or more predefined features as a default without any request.

In further accordance with the second aspect of the invention the access network computer may be configured to process erased files.

Yet further still according to the second aspect of the invention the network devices comprised in the computer network may be one or more of workstations servers archiving storage devices and backup storage devices.

According further to the second aspect of the invention the meta data may comprise one or more characterization records of the all files or the selected files indicating for each file of the all files or the selected files one or more of a location of a file a content an author and further indicating for the each file if the each file is an e mail one or more of an originator address a recipient address having attachment or not and wherein the characterization records comprise one or more of at least one index of content of the each file one or more summaries using selected characteristics and at least one aggregated summary combining the one or more summaries.

According yet further to the second aspect of the invention the access network computer may further comprise a retrieve module responsive to a request to retrieve the selected files comprising the one or more predefined features communicated to the access network computer through a user interface configured to provide retrieving of the selected files by the access network computer in response to the request based on the meta data which is created and updated within a predetermined period of time and using the generic application programming interface and further configured to send the selected files after being retrieved to a further destination and a retrieved files storage memory configured to store the selected files after being retrieved.

Further still according to the second aspect of the invention the access network computer may further comprise a backup and archive module responsive to a request to retrieve the selected files comprising the one or more predefined features for backup or archiving and communicated to the access network computer through a user interface and configured to provide retrieving of the selected files by the access network computer in response to the request based on the meta data which is created and updated within a predetermined period of time and using the generic application programming interface for providing the selected files for storing to an archive and backup repositories located in the computer network but outside of the access network computer.

Yet still further according to the second aspect of the invention the two or more applications may be MICROSOFT OUTLOOK EUDORA MOZILLA THUNDERBIRD and IBM LOTUS NOTES.

According to a third aspect of the present invention a computer readable medium encoded with a computer program comprising computer readable instructions recorded thereon for execution a method comprising reading in a computer network by an access network computer all files or selected files comprising one or more predefined features out of a plurality of files created using two or more applications and stored in a plurality of network devices comprised in the computer network using a generic application programming interface configured to read the plurality of files using the two or more applications the generic application programming interface being comprised in the access network computer for further performing by the access network computer using the reading one or more of creating or updating meta data for the all files or the selected files comprising one or more predefined features retrieving the all files or the selected files comprising one or more predefined features and viewing on a display one or more files out of the all files or the selected files comprising one or more predefined features or the meta data if created.

In further accord with the third aspect of the invention the method may further comprise storing the meta data in the access network computer wherein the reading creating or updating are performed if the meta data for the all files or the selected files was not previously created or updated within a predetermined time period.

A new method apparatus and software related product e.g. computer readable medium are presented for reading all multi application files i.e. files created by two or more applications stored in network devices i.e. in servers workstations archives backup repositories etc. comprised in a computer network or reading selected multi application files i.e. selected from the all files comprising one or more predefined features and stored in said network devices using a generic application programming interface GAPI followed by creating and or updating e.g. periodically meta data for the files read by using the GAPI and or followed by retrieving requested files out of the multi application files using the meta data for the requested files if the meta data is created and properly updated through GAPI. Also one or more of the read files out of the multi application files and the meta data may be viewed on a display if requested. The reading of the multi application files creating and updating meta data and retrieving requested files and viewing the one or more files may be performed using one or more dedicated computers e.g. access network computer s comprised in the computer network and comprising the GAPI. The multi application files i.e. files created by two or more applications may be created using a plurality known applications which may include but are not limited to e.g. MICROSOFT OUTLOOK EUDORA MOZILLA THUNDERBIRD IBM LOTUS NOTES MAIL FOR MAC OS X any software for e mail that uses MBOX formats to store local e mails etc.

According to one embodiment of the present invention the reading of the multi application all or selected files in the network devices may be performed by the access network computer for example in response to a request for creating or updating the meta data for the all files or for the selected files comprising one or more predefined features wherein this request may be communicated to the access network computer e.g. through a user interface. Then the created or updated meta data may be created or updated by the access network computer and stored in the access network computer wherein the steps of reading creating or updating may be performed by the access network computer if the meta data for the all files or the selected files was not previously created or updated within a predetermined time period e.g. 24 hours period .

Alternatively according to another embodiment the reading of the all or the selected files comprising one or more predefined features and creating or updating meta data for the read files may be performed as a default without any request wherein steps of reading the files and updating the meta data for these files may be performed periodically with a predetermined time period.

According to a further embodiment the GAPI may provide a variety of options for reading detecting the desired files. For example in a fast search option the e mail files may be detected by the GAPI without even opening the e mail files and may provide relevant information for creating the meta data. In a more advanced search the files may be opened by the GAPI to read its content. Moreover the GAPI may be able to detect e mail files whose extensions have been changed thus these files cannot be read using original e mal application used for creating the file . Furthermore the access network computer may be configured to process erased files using generic application programming interface as further described herein.

Moreover according to a further embodiment the created or updated meta data may comprise one or more characterization records of the all files or of the selected files stored in the network devices possibly indicating for each of the all or of selected files e.g. a location of a file a content an author etc. The characterization record may further indicate for e mail files an originator address an addressee address having attachment or not etc. Furthermore characterization records may comprise at least one index of content of files one or more summaries using selected characteristics and at least one aggregated summary combining said one or more summaries. The selected characteristics may be for example messages containing AddOnMail in the subject line messages having an attachment or and an attachment with a specific name messages received from a specified e mail address etc.

Furthermore according to one more embodiment retrieving upon request the all files or the selected files comprising one or more predefined features from the network devices may be performed using the meta data if it is already created and updated within a predetermined time period for the files requested to be retrieved. Alternatively if the meta data is not created or not updated within a predetermined time period before the request then said meta data for the requested files may be created or updated. The retrieving of the requested files may be implemented then using the meta data available created or updated for the requested files.

According to another embodiment the selected files comprising one or more predefined features in a response to a request to retrieve the selected files from the network devices communicated to said access network computer through a user interface may be retrieved using the GAPI based on the meta data which is properly updated within a predetermined period of time to subsequently store the retrieved files in a memory comprised in the access network computer and or to send the retrieved selected files to a requested destination in the computer network or to an outside computer network and to update the meta data for the retrieved files if necessary.

According to a further embodiment the selected files comprising the one or more predefined features in a response to a request to retrieve the selected files from the network devices for backup or archiving communicated to the access network computer through a user interface may be retrieved using the GAPI based on the meta data which is properly updated within a predetermined period of time to subsequently store the retrieved files in one or more repositories comprised in the computer network and to update the meta data for the retrieved files if necessary.

The access network computer may also comprise a user interface and or display which may be used for entering user s commands e.g. command to search for all files or selected filed comprising one or more predefined features in the network devices and to create or update meta data for these files command for retrieving selected files e.g. comprising one or more predefined features from the network devices or command to backup and or archive files e.g. comprising one or more predefined features from the network devices which are forwarded as corresponding signals or to the search and detect module and or for possible viewing e.g. displaying on the display user interface retrieved files and created meta data files e.g. stored in a retrieved files storage memory or in a meta data memory it is noted that in general a user interface and display may be implemented as two different modules .

Moreover the search and detect module in response to corresponding request signal or may determine whether the meta data for the requested files comprising one or more predefined features is already exist i.e. stored in the meta data memory and properly updated e.g. within a predetermined time period . If this is the case i.e. the meta data exists and properly updated for the requested files the module may stop the process in response to the command signal or in response to the command signal or the module may provide meta data information about the location of requested files see signals and to corresponding modules for retrieving or for backup and archive which may forward corresponding instruction messages see signals and to the GAPI module for retrieving see signals or of these files.

However if the meta data does not exist or not properly updated for all or some of the requested files comprising one or more predefined features then the module in response to the signal may provide corresponding searching instruction signal e.g. specifying the one or more predefined features of files to search for creating meta data to the GAPI module which may provide then a search signal for reading the requested files as disclosed herein optionally the module may also provide instructions signal for creating corresponding meta data with corresponding characteristics to a meta data creating and updating module e.g. these instructions may be comprised in the original searching command . Also the search and detect module in response to the command signal or may provide instruction signals or comprising an indication that meta data for the requested or some of the requested files does not exist to corresponding modules for retrieving or for backup and archive which then may forward corresponding signals or to the GAPI module for retrieving see signals or and creating updating see signals or the meta data for the retrieved files comprising one or more predefined features.

According to a further embodiment the meta data creating and updating module in response to received corresponding information signal or from the GAPI module which comprise information read or retrieved by the GAPI module in response to corresponding signals or may create a desired meta data and store it in the meta data memory as described herein. Moreover the requested files retrieved by the GAPI in response to the corresponding signals or may be forwarded by the GAPI module to the corresponding modules or respectively wherein the module may send the retrieved files to a retrieved file storage memory and or to a requested destination in the computer network or outside of the computer network and the module may send the retrieved files to archive and backup repositories .

According to another embodiment the meta data can be created by the access network computer by default without any request e.g. the module may initiate meta data creation and periodic updating e.g. within 24 hours of this meta data using for all or selected files stored in the network devices of the computer network reading the corresponding files by the GAPI module creating meta data by using the meta data creating and updating module and storing the created meta data in the meta data memory as disclosed herein.

According to an embodiment of the present invention the modules or may be implemented as a software or a hardware module or a combination thereof. Furthermore the modules and may be implemented as a separate block or may be combined with any other module block of the access network computer or it may be split into several blocks according to their functionality. Moreover it is noted that all or selected modules of the access network computer may be implemented using an integrated circuit.

According to another embodiment the access network computer may be configured to process erased files. For example the search and detect module may receive in response to the signal an update list of network device and files scanned. Then the module may use this new list of content to compare to the current information comprised in the meta data memory to determine whether a description of a particular device or a particular file exists in the meta data memory but doesn t exist in the received update list. If such device or file is found the module may update the meta data memory indicating for this found description of the device or file that it device or file has been erased. Then when the module may process signal or signal for retrieving backup or archiving it may look in the meta data memory and determine if the description of the requested device or file is indicated as being erased and if the description of the requested device or file is being erased to further determine if this description of the erased device or file has been backed up or archived previously. Then if this is the case the module may retrieve the desired content in regard to the requested device or file from the archive or backup repositories such that this desired content may be sent e.g. to a requested destination e.g. see signal in .

A request signal which may correspond to the signal or in comprising a request for reading one or more files of a plurality of files for implementing a predetermined task e.g. to search to retrieve to backup and or archive information create meta data etc. may be provided e.g. to an API application programming interface managing module comprised in the GAPI wherein the plurality of the files e.g. e mails may be created using a plurality of applications and the request or a part of the request does not comprise application specific information. As disclosed herein the multi application files i.e. files created by two or more applications which may be read by the GAPI may be created using a plurality of known applications e.g. MICROSOFT OUTLOOK EUDORA MOZILLA THUNDERBIRD IBM LOTUS NOTES MAIL FOR MAC OS X any software for e mail that uses MBOX formats to store local e mails etc.

It is noted that for the purposes of the present invention the term application specific information means that the request signal received by the GAPI would comprise information formulated using a specific application see examples presented in co pending co owned application having Ser. No. 12 687 667 and filed Jan. 14 2010 on even date herewith . If the request signal does not comprise such application specific information but comprise additional information e.g. meta data regarding certain applications then this information is defined as application related information for the purposes of the present invention.

It is further noted that the API management module may be configured to generate in response to said request signal an application independent request signal corresponding to the request or to the part of the request not comprising the application specific information and to provide said application independent request signal to an abstract object conversion module . Then the abstract object conversion module may convert the application independent request signal not comprising the application specific information into one or more application command signals . . . N wherein N is an integer of a value of one or more comprising the application specific information wherein each signal of these one or more application command signals . . . N may define a corresponding command for one application of the plurality of the applications.

The application switch may be configured to provide each of the one or more application command signals . . . N comprising the application specific information to one of corresponding one or more application connectors of a plurality of application connectors . . . M wherein M is an integer of two or more and is larger than or equal to N comprised in the GAPI for reading all or selected files of the one or more files of said plurality of files to fully or partially implement the predetermined task as described herein wherein each application connector of the plurality of the application connectors . . . N may be configured to read files created using one of the plurality of the applications . . . N. As described herein the applications may include but are not limited to e.g. MICROSOFT OUTLOOK EUDORA MOZILLA THUNDERBIRD IBM LOTUS NOTES MAIL FOR MAC OS X any software for e mail that uses MBOX formats to store local e mails etc

Then these corresponding one or more application connectors of the plurality of application connectors . . . N comprised in the GAPI in response to the corresponding one or more application command signals . . . N may be configured to provide corresponding one or more reading signals for reading the all or selected files of the one or more files of the plurality of files and collect a raw information signal comprising application specific raw information for objects stored in the all or selected files of the one or more files of the plurality of files in response to one or more reading signals signals and may corresponds to signals or in . The raw information collected by the GAPI typically defines a property which is known by one of the application connectors . . . M. Objects stored in the files may be e mails contacts calendaring items. If the object is an email the raw information may be an originator address one or more recipients addresses a subject or any other property stored with the email. If the object is a contact the raw information may be the name of the contact the email of any other property stored with the email. If the object is a calendaring item the raw information may be the date and time of the event the originator address the attendees addresses or any other property stored with the calendaring item.

Once the raw information is collected by one or more application connectors of the plurality of application connectors . . . M each of these one or more application connectors may be configured to create a response comprising the collected raw information and forward it to the application switch which may combine all responses . . . Nr and further forward them to the abstract object conversion module which may convert the raw information signals into an information signal not comprising the application specific raw information which then may be forwarded as a result signal or a part of the result signal which may correspond to the signal or in to a sender e.g. to the module or in of the request signal according to an embodiment of the present invention.

In addition the abstract object module may be configured to generate a meta data signal not comprising the application specific information e.g. meta data may be requested e.g. in the request signal or in the part of the request signal or performed as a default for creating or updating meta data using this application specific raw information and forward the meta data signal e.g. to a meta data collector which may further forward it to a meta data creating and updating module e.g. module in or in general e.g. to a host computer comprising the GAPI .

In another embodiment r if only the part of the request signal does not comprise the application specific information but a remaining part of the request comprises the application specific information for one or more applications of the plurality of the applications then the API managing module may be configured to generate one or more further application command signals . . . K wherein K is an integer of a value of one or more and less than M in response to this remaining part of the request signal and to provide these one or more further application command signals . . . K to the application switch which may be configured to provide the one or more further application command signals . . . K to corresponding one or more further application connectors which may be different than the corresponding one or more application connectors disclosed herein of the plurality of application connectors . . . M for reading all or further selected files of the one or more files of the plurality of files to fully implement the predetermined task.

Further processing of the one or more further application command signals . . . K is similar to the processing of the one or more application command signals . . . N. The corresponding one or more application connectors of the plurality of application connectors . . . N comprised in the GAPI in response to the one or more further application command signals . . . K may be configured to provide corresponding one or more reading signals for reading the all or selected files of the one or more files of the plurality of files and to collect a further raw information signal comprising a further application specific raw information for further objects which are similar to objects defined herein stored in the all or selected files of the one or more files of the plurality of files in response to one or more further reading signals signals and may corresponds to signals or in . This further raw information collected by the GAPI typically defines a property which is known by one of the application connectors . . . M. Further objects stored in files may be e mails contacts calendaring items as described herein. If the object is an email the raw information may be an originator address one or more recipients addresses a subject or any other property stored with the email. If the object is a contact the raw information may be the name of the contact the email of any other property stored with the email. If the object is a calendaring item the raw information may be the date and time of the event the originator address the attendees addresses or any other property stored with the calendaring item.

Once the further raw information is collected by one or more further application connectors of the plurality of application connectors . . . M each of these one or more further application connectors may be configured to create a response comprising the collected raw information and forward it to the application switch which may combine all responses . . . Kr and further send them to the API managing module which then may forward these responses as a part of the result signal which may correspond to the signal or in to a sender e.g. the module or in of the request signal according to the embodiment of the present invention disclosed herein.

In addition the application switch may be configured to generate a further meta data signal e.g. meta data may be requested e.g. in the request signal or in the part of the request signal or performed as a default for creating or updating the further meta data using this further application specific raw information and forward it e.g. to a meta data collector which may further forward it to the meta data creating and updating module e.g. module in or in general e.g. to a host computer comprising the GAPI .

According to an embodiment of the present invention the module . . . or M of the GAPI may be implemented as a software module. However other implementations using hardware e.g. module may include a small memory for temporary storing the collected meta data before combining or the GAPI may comprise a small processing storing memory for facilitating some steps performed by the GAPI and a combination of software and hardware are conceivable as well. Furthermore the module . . . or M may be implemented as a separate block or may be combined with any other modules blocks of the GAPI for example modules and may be combined or modules and may be combined or it may be split into several blocks according to their functionality. If modules and are combined then additional generating of the application independent request signal may not be necessary.

In a method according to the embodiment of the present invention in a first step a request see searching command in for creating and or updating meta data for files e.g. e mails containing one or more predefined features out of a plurality of files created using two or more applications and stored in the network devices e.g. servers workstations archives etc. of the computer network e.g. the computer network shown in is received by the access network computer e.g. searching command may be communicated to the access network computer e.g. through a user interface e.g. display as shown in .

In a next step it may be determined e.g. by the access network computer shown in whether the requested meta data for the files e.g. e mails containing one or more predefined features already created and stored in the meta data memory and whether the last update was performed within a time period less than a predetermined time period e.g. 24 hours . If that is the case the process may stop. However if it is determined that the requested meta data for the files e.g. e mails containing one or more predefined features is not created or the last update was not performed within a predetermined time period e.g. 24 hours in a next step the files containing one or more predefined features out of the plurality of files stored in the computer network are read using the GAPI e.g. module shown in which may be configured to read this plurality of files using the two or more applications.

In a next step meta data for the read files may be created or updated e.g. using the modules and shown in and stored e.g. in the memory shown in . It is further noted that periodic updating of the meta data may be performed in response to the search command e.g. searching command shown in i.e. the searching command may comprise the request for periodic updating and the predefined time period or interval to perform the updating. Alternatively each updating of the meta data may require a special request from the user. In yet another alternative the updating may be pertained by the access network computer by default e.g. without a special request for updating the meta data in the searching command shown in as a build in feature which is related to the next example shown in .

In a method according to the embodiment of the present invention in a first step all files or selected files comprising one or more predefined features of the plurality of files created using two or more applications and stored in network devices e.g. servers workstations archives etc. of the computer network e.g. the computer network shown in may be read using GAPI e.g. module shown in which may be configured to read this plurality of files using these two or more applications this step may be performed by the by module and in .

In a next step meta data for the read files may be created or updated e.g. using the module shown in and stored e.g. in the memory shown in . It is further noted that reading files and creating and or updating periodic updating the meta data may be performed in step and by default without any request from the user.

In a next step it is determined whether the creation of the meta data was performed and the last update of the meta data was performed within a predetermined period of time. If that is the case the process may keep repeating step . However if it is determined that the creation of the meta data was not performed and or the last update of the meta data was not performed within a predetermined time period the process goes back to step to repeat reading searching the files and subsequently updating the meta data for the read files.

In a method according to the embodiment of the present invention in a first step a retrieving request see a retrieving command in e.g. e discovery for a specified group of files e.g. e mails out of the plurality of files created using two or more applications and stored in network devices e.g. servers workstations archives etc. is made e.g. to the access network computer of the computer network as shown in .

In a next step it may be determined e.g. by the access network computer whether the meta data for the requested files e.g. e mails containing one or more predefined features already created and stored in the meta data memory and whether the last update was performed within a time period less than a predetermined time period e.g. 24 hours . If that is the case the process goes to step . However if it is determined that the meta data for the requested files e.g. e mails or for some of the requested files containing one or more predefined features is not created or the last update was not performed within a predetermined time period e.g. 24 hours in a next step meta data may be updated for these requested files or for some of the requested files e.g. using modules and shown in as disclosed herein in reference to step in .

In a next step the specified group of files e.g. e mails is retrieved using the current meta data existed created or updated for the specified group of files e.g. using the module with assistance of the module and the GAPI module as disclosed herein.

In a next e.g. final step the retrieved group of files e.g. e mails may be stored in a retrieved files storage memory e.g. in memory shown in and or may be exported in a generic and readable format to a requested destination within or outside of the computer network shown in . It is further noted that after storing the retrieved group of files in the retrieved files storage memory the meta data for this retrieved group of files may be further updated e.g. using modules and shown in to include a new location of the files stored in the retrieved files storage memory .

In a method according to the embodiment of the present invention in a first step a backup and or archiving request see backup and or archiving command in of a specified group of files e.g. e mails from previously founded files out of plurality of files created using two or more applications and stored in network devices e.g. servers workstations archives etc. may be received e.g. by the access network computer of the computer network as shown in .

In a next step the specified group of files e.g. e mails may be retrieved from the founded files using current meta data e.g. using the module with assistance of the module and the GAPI module as disclosed herein. It this example it is assumed that the meta data for the requested specified group of files exists and properly update e.g. within 24 hours . It is further noted that in the example of the meta data may provide all needed information for retrieving the specified group of files but if this meta data does not exist for all requested files or not properly updated e.g. not with a predetermined time period then additional steps like steps and in may be used for creating updating the meta data for this specified group of files.

Then in next e.g. final step the retrieved group of files e.g. e mails may be stored backup or archived in external repositories such as archives and backup repositories e.g. shown as module in . It is further noted that after storing the specified group of files in the in external repositories the meta data for this specified group of files may be further updated e.g. using modules and shown in to include a new location of the files stored in these external repositories .

As explained above the invention provides both a method and corresponding equipment consisting of various modules providing the functionality for performing the steps of the method. The modules may be implemented as hardware or may be implemented as software or firmware for execution by a computer processor. In particular in the case of firmware or software the invention may be provided as a computer program product comprising a computer readable medium or a computer readable storage structure embodying a computer program code i.e. the software or firmware thereon for execution by a computer processor.

It is noted that various embodiments of the present invention recited herein may be used separately combined or selectively combined for specific applications.

It is to be understood that the above described arrangements are only illustrative of the application of the principles of the present invention. Numerous modifications and alternative arrangements may be devised by those skilled in the art without departing from the scope of the present invention and the appended claims are intended to cover such modifications and arrangements.

