---

title: Multi-layer graphics painting for mobile devices
abstract: A mobile device may efficiently update a multi-layer graphic display by storing a background image representing an image of a graphic user interface displayed by the device but not including graphic elements that are in an active layer of the graphic user interface. The device may determine regions in the graphic user interface that previously corresponded to locations of the graphic elements and that no longer correspond to locations of the graphic elements; and issue one or more graphic commands to set the determined regions to be equal to corresponding regions from the background image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09092241&OS=09092241&RS=09092241
owner: VERIZON PATENT AND LICENSING INC.
number: 09092241
owner_city: Basking Ridge
owner_country: US
publication_date: 20100929
---
In an increasingly networked world more and more traffic such as data voice and video is transmitted over public and proprietary networks. Wireless networks in particular are becoming increasingly popular as networks through which subscribers obtain both voice services e.g. telephone calls and data services e.g. email and web surfing .

One class of mobile wireless devices known as smartphones may include mobile communication devices that are designed to provide additional functionality such as the ability to execute a variety of general purpose computing applications. Although the computing performance of mobile devices such as smartphones continues to increase the small physical size of a mobile device limits the resources such as the processor speed memory resources and battery life of the mobile device. Accordingly in order to conserve mobile device resources it is desirable that a mobile device implement applications and other processes in a manner that is as efficient as possible.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings identify the same or similar elements. Also the following detailed description does not limit the invention.

Systems and methods described herein relate to an efficient technique for updating a multi layer graphic display on a mobile device. A snapshot image background image of the non active elements of the display may be saved. Visual changes in the active elements of the display may be processed by a paint operation that is limited to regions of the display corresponding to the new locations of the active elements and the old dirty regions corresponding to the active elements. A dirty region may refer to a region in a graphic interface that was previously e.g. after a previous graphic update covered by an active element but is no longer covered. The dirty regions may be updated from the snapshot image. Advantageously the entire background may not need to be repainted after each update.

Wireless network may wirelessly connect mobile devices to one another and to servers . Wireless network may include access networks which may provide the radio interfaces to mobile devices and a core network portion which may generally provide high capacity communication facilities that connect and manage the connectivity of mobile devices . In one implementation wireless network may include a number of possible access networks such as the Universal Mobile Telecommunications System UMTS Terrestrial Radio Access Network and or the evolved UMTS Terrestrial Radio Access Network eUMTS . The core portion of wireless network may be based on for instance the 3GPPP Long Term Evolution LTE standard.

Wireless network may also include connections such as via a gateway device to IP network . Mobile devices may thus connect through wireless network to IP network .

IP network may include one or more networks or sub networks such as a public IP packet based network e.g. the Internet a private IP network etc. In some implementations mobile devices may connect to and access resources associated with IP network . For example mobile devices may run a web browser application that may contact servers associated with IP network to view web content through the web browser application.

Mobile devices may include devices designed to connect wirelessly to wireless network . Mobile devices may include devices such as mobile telephones smartphones electronic notepads and or personal digital assistants PDAs . Mobile devices may establish wireless communication sessions with radio interface nodes in wireless network . The wireless communication sessions may be used for voice e.g. telephone calls and or data sessions.

Server devices may include devices that provide services to mobile devices and or other devices. Server device may implement for example web servers or application servers with which mobile devices may interact.

Although shows example components of system in other implementations system may include fewer components different components differently arranged components or additional components than depicted in . Additionally or alternatively one or more components of system may perform the tasks described as being performed by one or more other components of system .

Complex applications implemented at mobile devices can provide unique challenges for the designers of the mobile applications. These challenges may be particularly due to mobility of the device limited mobile device screen size limited wireless bandwidth unstable network connections e.g. signal strength changes as the device is moved limited mobile device memory resources limited mobile device processing resources different development platforms for different mobile device manufacturers etc. Mobile application platform by using a three tier design that includes mobile service layer may assist in standardizing the backend interface seen by application developers across multiple different mobile device types.

Device layer may include mobile devices . Mobile devices may include devices manufactured by different manufacturers. From the standpoint of the application developer it is desirable that a consistent application interface be presented for accessing remote data and or services such as those provided by back end server layer . Mobile service layer may generally provide such services and may particularly provide services relating to for example mobile device specific formatting services relating to making network requests bandwidth efficient and or services relating to the handling of various types and models of mobile devices .

Mobile service layer may particularly include mobile server format transcode server and authentication server . Mobile server may include a proxy server that is accessed by mobile devices . Mobile server may control the functionality provided by mobile service layer . Mobile server may contact authentication server and format transcode server to assist in performing the various functions provided by mobile server . Authentication server may include logic to provide authentication services for mobile devices . Mobile server may pass the credentials of a mobile device that is attempting to authenticate itself to authentication server . Mobile server may use the response from authentication server to determine whether to authenticate the mobile device. Format transcode server may particularly provide formatting and transcoding services. For example format transcode server may extract or translate content between different formats or protocols. Format transcode server may be particularly used to perform formatting transcoding when a corresponding format transcoding function is not available on mobile device .

As mentioned mobile server with the assistance of authentication server and or format transcode server may act as a proxy server and may provide a number of different functions and or services for mobile devices . For example mobile server may provide formatting services relating to the extraction transcoding of content into formats suitable for different mobile devices . The formatting may relate to formatting suitable for a particular display device and display size. Mobile server may also provide bandwidth optimization services. For example a mobile device may make multiple data calls when rendering a web page. Mobile server may aggregate the data calls into a format that is efficient for the network and may perform data caching aggregation and compression to increase the perceived performance of mobile device . Mobile server may additionally perform functions relating to the normalization of protocols or standards used by different types or different models of mobile devices . For example mobile server may convert content appropriate for different screen sizes media formats etc.

Back end server layer may include one or more server devices that may be accessed through mobile server by mobile devices . As shown these servers may include an advertisement AD server a database a billing server and a profile server .

Advertisement server may include a server that stores advertisements that may be presented by mobile devices . An application running on a mobile device may for instance request a new advertisement. Advertisement server may send an appropriate advertisement to mobile device which may present the advertisement to the user.

Database may include one or more databases that may be accessed by mobile devices . Certain applications on mobile devices may be implemented as applications that store and or retrieve information using a remote database. For example database may be used by applications to provide remote storage of pictures or videos or may be used in a social media application.

Billing server may provide billing services to mobile devices . Mobile devices may use billing server to track and charge for services provided to the user of the mobile device.

Profile server may store user profiles for mobile devices . Mobile devices may for instance access profile server to obtain information relating to the user of the mobile device.

Although shows example components of mobile application platform in other implementations mobile application platform may include fewer components different components differently arranged components or additional components than depicted in . Additionally or alternatively one or more components of mobile application platform may perform the tasks described as being performed by one or more other components of mobile application platform .

Bus may include a path that permits communication among the components of device . Processor may include a processor a microprocessor or processing logic e.g. an application specific integrated circuit ASIC or a field programmable gate array FPGA that may interpret and execute instructions. Main memory may include a random access memory RAM or another type of dynamic storage device that may store information and instructions for execution by processor . ROM may include a ROM device or another type of static storage device that may store static information and instructions for use by processor . Storage device may include a magnetic and or optical recording medium and its corresponding drive or a removable form of memory such as a flash memory.

Input device may include a mechanism that permits an operator to input information to device such as a keyboard a mouse a button a pen a touch screen voice recognition and or biometric mechanisms etc. Output device may include a mechanism that outputs information to the operator including a display a light emitting diode LED a speaker etc. When device corresponds to a mobile device output device may particularly include a display . Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems. For example communication interface may include mechanisms for communicating with another network device.

As will be described in detail below device may perform certain operations relating to updating a display of a mobile device. Device may perform these and other operations in response to processor executing software instructions contained in a computer readable medium such as main memory . A computer readable medium may be defined as a non transitory memory device. The software instructions may be read into main memory from another computer readable medium such as storage device or from another device via communication interface . The software instructions contained in main memory may cause processor to perform processes described herein. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although illustrates example components of device in other implementations device may include additional fewer different or differently arranged components than those illustrated in and described herein.

Device firmware layer may include logic to implement and control the low level functionality of mobile device . Device firmware layer may for example include logic to control at a low level graphics network communication security and or other aspects of mobile device . Device firmware layer may particularly include a graphics controller.

Mobile framework layer may include logic to encapsulate the application framework and business logic of mobile device . Separating the application framework and business logic from the application and user interface layer may enable a more flexible development environment. Mobile framework layer may provide common functions for providing for example advertisements form handling profile settings notifications network services and thread pooling.

Application tools layer may provide a number of services for application layer including authentication services purchasing and account balance management services and or other services that may be required to be present for applications installed in mobile device . Application tools layer may also include business logic implementation components that provide business rules or content that may be displayed by UI layer such as content relating to standardized interfaces for authentication settings profile management catalog search browse or purchasing. In general application tools layer may provide the services required to be provided by applications .

UI layer may provide services relating to user interface updating. Application layer may transmit UI update requests to UI layer which may communicate with device firmware layer to update display of mobile device e.g. an LCD display implemented as part of output device . Consistent with aspects described in more detail below UI layer may implement an efficient multi layer graphics repainting technique to enable fast and resource efficient repainting of display .

Application layer may include one or more applications . Applications may be applications with which users of mobile devices may interact. Applications may include for example an email application a music player application a photo viewer application a text editor application etc. Applications may be applications that are installed by the manufacturer of mobile device or applications that may be developed by third party developers and downloaded to mobile device by users. Applications may communicate with mobile framework API which may present a common API through which application developers may create applications .

Although illustrates an example a software architecture in other implementations software architecture may include additional fewer different or differently arranged components than those illustrated in and described herein.

As mentioned above UI layer may implement a multi layer graphics repainting technique to enable fast and resource efficient repainting of display of mobile device . is a diagram illustrating an example of functional components in a multi layer graphics repainting operation.

Functional components may include core application display update component and low level graphics control component . Core application may include the software instructions that implement the end user application. In the context of core application may correspond to application . In some implementations core application may represent an application and mobile framework API .

As part of the user interface presented by core application core application may maintain a number of graphic elements. The graphic elements may include user interface widgets such as windows panels check boxes drop down lists scrolling panels etc. The graphic elements may be implemented using a container and component design pattern in which certain graphic elements may be contained within other graphic elements. For example an application window may contain a panel arranged in the lower half of the window. The panel may itself include other graphic elements such as a picture box or list box. Core application may update these graphic elements to implement the user interface for core application .

Display update component may process graphic element updates received from core application . In the context of display update component may correspond to for example UI layer . In alternative implementations display update component may be implemented in other logical layers such as within mobile framework API or device firmware layer . Display update component may generally operate to process the graphic element updates received from core application and convert the updates into a format compatible with the lower level graphics hardware of mobile device . Display update component may particularly convert the graphic element updates into paint requests understandable by the lower level graphics hardware of mobile device . Display update component may additionally apply optimizations to increase the efficiency with which graphic element updates are handled by the hardware of mobile device . As described in more detail below display update component may implement a multi layer graphics painting technique to enable fast and resource efficient repainting of display of a mobile device.

In an alternative implementation the graphics paint techniques described herein as being performed by display update component may alternatively be performed by core application . In this implementation functional components may include only core application and low level graphics control component .

Low level graphics control component may handle the paint requests from display update component and in response update display as appropriate. In one implementation low level graphics control component may correspond to logic in device firmware such as a specialized graphic processor.

As mentioned the graphic elements maintained by core application may conform to a container and component design pattern. Graphic elements that are contained within another graphic element may be conceptualized as being in a higher graphical layer. When updating the display the lowest graphical layer i.e. the background layer may be painted first followed by each higher layer. In this manner higher graphical layers may appear on top of lower graphical layers.

Six layers are particularly shown in labeled as layers through . Layers through are shown positioned in a non overlapping manner in graphical user interface . Layer however is contained by layer . In other words layer should be painted on top of layer . In this example assume layer is a list that includes three items. Based on user selection the items of layer may scroll relative to layer .

Process may include storing a background image of the layers in the graphical user interface excluding the active graphic elements from the background image block . The background image may be a snapshot of all of the layers except those that include active graphical elements i.e. the layer being updated or that contain graphic elements that are being updated by the application . In the example of assume that the graphic elements in layer are being manipulated by the application. Layer may thus be a layer that includes active graphical elements. The other layers layers may be considered the background layers. An image corresponding to the image rendered based on layers may be stored as the background image. The active layer layer when it is updated may be updated on top of the background image.

At some point the active application i.e. core application may update the graphic elements under its control i.e. the active graphical elements . For example the active application may modify a visual property of one or more active graphical elements. For example during a scroll operation on a list the displayed list items may change. Display update component may receive or intercept the updates corresponding to the graphic elements block .

Process may further include determining based on the update of the active graphic elements dirty regions and regions corresponding to the updated active graphic elements block . A dirty region may refer to a region on display that was previously e.g. after the previous graphic update covered by an active graphic element but that is now part of the background layer i.e. a region no longer covered by an active graphical element . A dirty region may be exposed when an active graphic element moves on display . The regions corresponding to the updated active graphic elements may include the region s associated with the new locations of the active graphic elements i.e. regions covered by the updated graphic elements .

Process may further include painting the dirty regions with the corresponding portions of the background image block . By painting the dirty regions the background may be effectively restored to its correct state. The paint operation may be implemented by display update component using for example an API graphic call operation or another type of graphic call operation. For example the paint operation may be submitted as a paint request to low level graphics control component . In general a paint operation may refer to any request from one component to another to update or refresh a portion of a graphic interface.

Process may further include painting the new active regions of display based on the updated active graphic elements block . The updated active graphic elements may thus be painted to update their most recent state. The paint operation may be implemented by display update component using for example an API graphic call operation or another type of graphic call operation. For example the paint operation may be submitted as a paint request to low level graphics control component . In one implementation block may correspond to issuing an update or repaint operation for the active graphical elements. In some implementations the paint operations performed in blocks and may be combined and performed in a single operation.

In one implementation the dirty regions such as those corresponding to hatched rectangles and may be identified as minimum sized rectangles that bound the dirty regions of the graphic user interface. In this implementation the updating of the dirty regions may correspond to paint operations that copy rectangular regions of the background image to the active layer.

The techniques discussed previously to perform a multi layer graphics painting may be used to update display in response to the list scroll operation illustrated in . In for example the background presented behind list items may remain constant. Accordingly when updating display portions of display may be updated based on the previous position i.e. before the scroll operation and the current position i.e. after the scroll operation of list items . The previous position of the list items may correspond to the dirty regions and the current position may correspond to the new active regions. The background presented behind list items may correspond to the background image. Instead of needing to update in response to an update of list items the whole display including the entire background image only the dirty and active regions may need to be painted.

As particularly described above a graphics display update operation is described in which instead of redrawing an entire screen for each update refresh operation only affected regions may be updated. Advantageously fewer resources of mobile device may be used in updating the display than may otherwise be used. The techniques described herein may be particularly applicable to certain graphic effects such as a scrolling list or other graphic effects e.g. an object drag and drop operation .

It will also be apparent that aspects described herein may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects described herein is not intended to limit the scope of the invention. Thus the operation and behavior of the aspects were described without reference to the specific software code it being understood that software and control hardware can be designed to implement the aspects based on the description herein.

While series of blocks have been described in the order of the blocks may vary in other implementations. Also non dependent blocks may be performed in parallel.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the invention. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification.

Further certain aspects described herein may be implemented as logic or as a component that performs one or more functions. This logic or component may include hardware such as an application specific integrated circuit or a field programmable gate array or a combination of hardware and software.

No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise. The scope of the invention is defined by the claims and their equivalents.

