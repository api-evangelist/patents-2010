---

title: Methods and apparatus to display localized process control objects
abstract: Example methods and apparatus to display localized process control objects. A disclosed example method includes receiving a request to view a process control object associated with a process control system, selecting a device description file based on the process control object, the device description file including a tag, selecting a set of locale templates based on a locale associated with the request, selecting a locale template from the set of locale templates based on the process control object, and processing the process control object for display by inserting portions of the selected locale template into the tag in the device description file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09207666&OS=09207666&RS=09207666
owner: Fisher-Rosemount Systems, Inc.
number: 09207666
owner_city: Round Rock
owner_country: US
publication_date: 20100831
---
The present disclosure relates generally to process control systems and more particularly to methods and apparatus to display localized process control objects.

Process control systems like those used in chemical petroleum or other processes typically include one or more process controllers and input output I O devices communicatively coupled to at least one host or operator workstation and to one or more field devices via analog digital or combined analog digital buses. The field devices which may be for example valves valve positioners switches and transmitters e.g. temperature pressure and flow rate sensors perform process control functions within the process such as opening or closing valves and measuring process control parameters. The controllers receive signals indicative of process measurements made by the field devices process this information to implement a control routine and generate control signals that are sent over the buses or other communication lines to the field devices to control the operation of the process. In this manner the controllers may execute and coordinate control strategies or routines using the field devices via the buses and or other communication links communicatively coupling the field devices.

Information from the field devices and the controllers may be made available to one or more applications i.e. routines programs etc. executed by the operator workstation e.g. a processor based system to enable an operator to perform desired functions with respect to the process such as viewing the current state of the process e.g. via a graphical user interface evaluating the process modifying an operation of the process e.g. via a visual object diagram etc. Many process control systems also include one or more application stations. Typically these application stations are implemented using a personal computer workstation or the like that is communicatively coupled to the controllers operator workstations and other systems within the process control system via a local area network LAN . Each application station may execute one or more strategies routines or applications that perform campaign management functions maintenance management functions virtual control functions diagnostic functions real time monitoring functions safety related functions configuration functions etc. within the process control system.

Additionally the application stations and or the operator workstations may implement applications that are configured e.g. localized for a language of the operator. As part of a language build procedure for an application a process control designer or an application designer typically adds translated phrases e.g. English language phrases and or formats data fields based a numerical format associated with a locale. In other examples a designer may configure an application with a resource file by updating localization information within the application.

Furthermore controllers and databases that manage process control information are generally configured with regional settings e.g. a language setting for a process control system. In many instances these controllers and or databases are only able to use one regional setting. The controllers and the databases with resource files may need to be reconfigured to support other language settings. In other words controllers and or databases may only be able to handle requests from applications within a single process control system for one locale at a time and may require complete reconfiguration to be updated for different locales.

Controllers and or databases are generally associated with a single locale and an application accessing information generated by a controller may only display the information in a language associated with a locale assigned to the controller. Thus if an application accesses multiple controllers distributed among multiple locales multiple languages may be involved. Updating controllers to support language releases may be inefficient and or time consuming because controllers may include relatively large amounts of control routines that reinitialize upon a language update or change. Further updating controllers may include stopping a process control system.

Example methods and apparatus to display localized process control objects are described. In one example a method includes receiving a request to view a process control object associated with a process control system and selecting a device description file based on the process control object the device description file including a tag. The example method also includes selecting a set of locale templates based on a locale associated with the request and selecting a locale template from the set of locale templates based on the process control object. The example method further includes processing the process control object for display by inserting portions of the selected locale template into the tag in the device description file.

An example apparatus includes a device description file processor to select a device description file based on a request to view a process control object the device description file including a tag. The example apparatus also includes a template processor to select a set of locale templates based on a locale associated with the request and select a locale template from the set of locale templates based on the received process control object. The example apparatus further includes an object manager to process the process control object for display by combining the selected locale template with the tag in the device description file.

Although the following describes example methods and apparatus including among other components software and or firmware executed on hardware it should be noted that these examples are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of the hardware software and firmware components could be embodied exclusively in hardware exclusively in software or in any combination of hardware and software. Accordingly while the following describes example methods and apparatus persons of ordinary skill in the art will readily appreciate that the examples provided are not the only way to implement such methods and apparatus. For example while the example methods and apparatus are described in connection with displaying localized process control objects the example methods and apparatus are more generally applicable and may be implemented to display localized process control objects associated with any automation system batch processing system manufacturing system industrial control system safety instrumented system etc.

Process control systems generally include controllers to perform routines control strategies and or algorithms that manage field devices located in the control system. The field devices may be for example valves valve positioners switches and transmitters and may perform process control functions such as opening or closing valves and measuring process control parameters. In addition to managing field devices controllers may generate process control information based on data received from the field devices. The process control information e.g. resources may include process statistics alarms monitoring information process trend information diagnostic information field device status information and or messages from the field devices. Process control information field devices portions of a process control system and or components of field devices are collectively referred to as process control objects.

Controllers transmit process control information to applications operating on workstations so that operators may manage the process control system. Typically applications display process control objects as at least one graphical data representation in a user interface. Data representations are helpful to operators by displaying process control objects graphically in the form of charts graphs data tables list boxes graphical symbols text etc. The data representations and corresponding text within the user interface are generally displayed in a format and or language associated with a locale of an operator viewing the information. A locale of an operator may include a country a language a numeric format a time zone a geographic region a cultural region a dialect an ethnic region etc.

Process control systems may be used in facilities throughout the world. For each country and or region personnel prefer to work in a familiar language e.g. French German Japanese Polish etc. and or regional setting. Generally for any process control system there may be a variety of personnel with different levels of training and or experience which may be affected by a language used by the process control system. Additionally a language preferred by these different personnel may not always be the same even within the same facility. For example an engineer may prefer to analyze a process in English while an operator may prefer to monitor a process in Chinese.

Further process control systems may be configured and or diagnosed from remote locations. For example a process control system in Japan may include applications and control routines designed in the United States. In this example United States personnel responsible for configuring or diagnosing issues within the system may be proficient in English while process control personnel in Japan may be proficient in Japanese. As a result of the language differences the Japanese control system may be restricted from using diagnostic and configuration support in the United States. Additionally sharing configuration information between the two languages may be difficult and inefficient. In many instances the system may not be reconfigured to another language due to the time required to configure a process control system once a system is configured. Thus any innovations developed on a new system may not be easily incorporated into the configuration of the original system.

Process control systems in different parts of the world may share common resources and or system configuration information. However these process control systems may be configured with different regional settings e.g. localized . Sharing information between control systems with different regional settings may be relatively difficult and time consuming. In some examples information transmitted to a control system with a different regional setting may be converted prior to utilizing the information within the system. Further converting information between different regional settings may result in issues from improperly converted information. For example a value of 75.000 in a United States regional setting may be 75 where the period is the decimal number separator and the comma is the thousands separator . In France the same value may be represented as 75 000 where the comma is the decimal number separator and the period is the thousands separator . The number 75.000 may not be converted to the corresponding proper value of 75 000. Without this conversion the receiving control system may utilize a value that is 1000 times greater than expected.

To account for conversion issues the text in many process control systems may be configured to be language neutral. In other words many known process control systems may use pointers e.g. variable names instead of natural language words. In some examples pointers may be more difficult to maintain than words. Further only a portion of a process control system may be configured to be language neutral due to configuration complexity. However other portions of the process control system may be designed for a single language. Thus these language neutral portions of a process control system may need to be translated for different languages.

In addition to process control systems generally field devices within process control systems may be localized for a region and or language. In some known systems a process control application displays process control information from field devices via corresponding device description files e.g. electronic device description language EDDL files . Device description files are files that may be stored within a field device or alternatively stored within a controller and or a workstation. The files provide instructions relating to how an application is to display information generated by the field devices. In this manner the device description files enable applications to display graphical representations of process control objects including process control information generated from corresponding field devices. For example an application may use a device description file to determine a field device outputs process control information in millivolts e.g. a type of unit and a magnitude of the unit . The device description file may also define a graphical representation for the millivolt output to be for example a gauge a chart a numerical value field a micro chart a bar graph a grid and or an image.

Device description files also describe functionality of field devices. This functionality may include menu system descriptions general device information diagnostics performance analysis information operational statistics parameterization information range setup information simulation parameters override information calibration trim information monitoring information device security protocols and or reset information. In some examples the device description files are text based files readable via a word processing application.

To localize a field device text and or numeric fields within the device description file are modified to reflect a desired locale. Additionally applications that display process control objects via user interfaces have to be updated to reflect the localized device description file. In this manner process control objects are formatted for a locale and displayed within an application configured for the same locale. If any portions of the device description file are modified corresponding applications that display process control objects have to be appropriately updated by process control personnel. Updating these applications can be time consuming and relatively inefficient.

The information and or data that is localized for an application and or a device description file is referred to as localized information. The localized information may include translated text strings that may describe a condition instruction command an event a status a value and or any other text displayed within an application. Additionally localized information may include numeric formatting information.

Currently many field device manufacturers include device description files test scripts and or device specific components within a toolkit provided with the field device to distributors. The distributors then localize the device description file and associated applications based on their locale. Additionally the distributors may validate the localized device description file with associated applications to ensure the localization did not alter the functionality of the field device and or the device description file. Upon validating the translated file the distributors convey the field device the translated device description file and or the corresponding application to process control system managers for use within process control systems.

In many instances a controller and or a database that uses device description files may need to be re initialized every time a language or locale is changed so that controller instructions may be updated. Additionally controllers and or databases may need to be re initialized as localizable phrases and translated text files e.g. localized information within the device description files are modified and or expanded. Re initialization of a controller may require stopping a process control system which may cause lost revenue from stoppages in production. Further a controller configured for one locale may not be capable of supporting multiple applications that may require displaying process control objects in multiple languages e.g. for operators and associated applications located in different parts of the world .

The example methods and apparatus described herein display process control objects in applications by utilizing tags within device description files that enable localized information to be managed in separate databases. In other words the example methods and apparatus described herein separate process control objects and device description files from localizable information thereby enabling process control objects to be displayed in localized contexts without modifying device description files and or process control information. In this manner the example methods and apparatus described herein are implemented as an interface layer between a device layer that generates process control information and a host application layer that displays the process control information within applications.

The tags within device description files replace localized text formats and or values e.g. localized information . The tags reference localized information within locale templates. A database may include locale templates for different locales e.g. Japan United States Germany etc. . A locale template may be a locale specific resource file that includes text strings numeric field definitions and or data graphical representation definitions. The locale specific resource file may also include references to process control information generated by corresponding field devices that may be used to appropriately display process control information. Alternatively a locale template may include an Extensible Stylesheet Language Transformation XSLT file and or an Extensible Markup Language XML file that includes localized information. The XSLT and or the XML file may be converted by the example methods and apparatus described herein into a HyperText Markup Language HTML file to display process control objects within a web browser. In some examples the locale template may include an XML file that includes tags that reference corresponding tags in an XML device description file.

To utilize a device description file for a specific locale the example methods and apparatus described herein enable process control personnel to select a locale. The example methods and apparatus described herein then use the specified locale and a requested process control object to display the process control objects via applications in the selected localized format. Because the localized information is separate from device description files a single device description file can be used concurrently for multiple locales. For example an operator may view on a workstation process control objects in Japanese while an engineer on a different workstation within the same area views the same process control objects in English. Additionally the example methods and apparatus described herein enable an operator to switch a locale and or language of an application relatively quickly without having to re initialize a controller and or device description file in a database.

Further because the device description files and localized information are separate field device manufacturers can release device description files for a field device and specify tags associated with localized information. Distributors and or process control personnel then create locale template s with localized information instead of modifying and potentially corrupting the device description file. Further the distributors and or the process control personnel may only have to validate the locale template instead of a translated device description file.

By separating device description files from locale temples updates and or modifications to locale templates may be made without stopping a controller and or a field device. Thus language updates may be applied without affecting productivity efficiency and or revenue generated from the operation of a control system. Additionally because the locale templates include text strings and or numeric fields the locale templates may be relatively easily modified by any text editing application. While the example methods and apparatus are described and shown throughout this disclose implementing locale templates associated with Latin based languages the locale templates may also include other languages and or dialects e.g. Indian Japanese Chinese Arabic etc. .

The example methods and apparatus described herein also reduce design time for graphical representations of process control objects within applications. For example locale templates may specify how process control objects are displayed within an application for a specific locale. In this manner applications are not hardcoded with localized information for a locale. Instead the methods and apparatus described herein transmit a rendered locale template to an application for display.

The example methods and apparatus described herein also display process control objects based on a type of display. For example many process control personnel view process control objects on a workstation laptop and or other computing device. Additionally with advances in mobile devices process control personnel may also view process control objects on a smartphone a netpad a field communicator a personal digital assistant and or any other wireless mobile device. However because screen sizes may vary between the different devices many known process control systems have different applications for different device types. Further some of the applications for mobile devices may not include some of the functionality of applications for workstations. For example to access some process control information via a smartphone a user may have to use a process control mobile application.

The example methods and apparatus described herein utilize different locale templates based on a type of a device that transmitted a request for process control objects. In this manner process control designers may specify localized layout information within locale templates for different screen sizes while maintaining common functionality among the templates. The example methods and apparatus select an appropriate locale template based on a device of a user to display process control objects formatted for a locale of the user and formatted based on the device of the user. In this manner the example methods and apparatus described herein enable process control objects to be accessed via web browsers regardless of device type.

The example workstation of may include any computing device such as a personal computer a laptop a server a controller a personal digital assistant PDA a micro computer etc. The example wireless device may include any mobile computing device such as for example a cell phone a smartphone a PDA a netpad a field communicator a laptop etc. The workstation and or the wireless device may be implemented using any suitable computer system or processing system e.g. the processor system P of . For example the workstation and or the wireless device could be implemented using a single processor personal computer single or multi processor workstations etc.

The example process control system may include any type of manufacturing facility process facility automation facility safety instrumented facility and or any other type of process control structure or system. In some examples the process control system may include multiple facilities located at different locations. Additionally the example process control environment may include other process control systems not shown that may be included within the same facility and or located at a different facility.

The example process control system includes a controller that may be communicatively coupled to the wireless device via a wireless network and communicatively coupled to the workstation via a local area network LAN . The LAN and or the wireless network may be implemented using any communication medium and or protocol. For example the LAN may be based on a hardwired or wireless Ethernet communication scheme. However any other suitable communication medium and protocol could be used. Furthermore although the wireless network and the LAN are shown more than one LAN and or wireless network and appropriate communication hardware may be used to provide redundant communication paths.

Additionally the process control environment of includes a router to communicatively couple the wireless device to the LAN via the wireless network . The router may also communicatively couple other workstations not shown to the controller and or to communicatively couple the workstation to controllers not shown within other process control systems. Further the process control environment may include a firewall not shown to provide remote workstations e.g. workstations outside of the process control environment access to resources within the process control environment .

The process control system also includes field devices e.g. input and or output devices . The field devices may include any type s of process control component s capable of receiving inputs generating outputs and or controlling a process. The field devices may include control devices such as for example valves pumps fans heaters coolers and or mixers to control a process. Additionally the field devices may include measurement or monitoring devices such as for example temperature sensors pressure gauges concentration gauges fluid level meters flow meters and or vapor sensors to measure portions of a process. The field devices receive instructions from the controller via inputs to execute a specified command and cause a change to the process implemented and or controlled by the field devices . Furthermore the field devices measure process data environmental data and or input device data and transmit the measured data via outputs to the controller as process control information. This process control information may include the values of variables corresponding to a measured output from each field device.

The process control system also includes an I O device e.g. one or more I O cards to receive data from the field devices and convert the data into communications capable of being processed by the example controller . Likewise the I O device may convert data or communications from the controller into a data format capable of being processed by the corresponding field devices .

The example controller of operates one or more control routines e.g. process control algorithms functions and or instructions to manage the field devices within the process control system . The control routines may include process monitoring applications alarm management applications process trending and or history applications diagnostic applications batch processing and or campaign management applications statistical applications streaming video applications advanced control applications safety instrumented applications etc. The example controller transmits process control information e.g. resources to the workstation and or the wireless device . The resources transmitted by the controller may include process control values data values alarm information text status information diagnostic information error messages parameters events and or device identifiers. In other examples the controller may forward process control information from the field devices to a database not shown .

The example workstation the example wireless device and or other workstations with access to the process control system may be configured to view modify and or correct one or more processes within the process control system via one or more applications. In the illustrated example an application is displayed via a user interface . Applications may include an enterprise view application a graphics studio application an explorer application and or any other type of process control based application. These applications display information within the workstation via the user interface . The user interface may include a graphical window e.g. an application programming interface API that may be displayed within the workstation to show one or more resources displayed as graphical representation s e.g. functional block diagrams and or schematics . The workstation may be capable of displaying more than one user interface that may be communicatively coupled to the localization interface . In a similar manner the wireless device includes an application displayed via a user interface .

The example process control system of also includes a device description database and a template database . The databases and may be implemented by Electronically Erasable Programmable Read Only Memory EEPROM Random Access Memory RAM Read Only Memory ROM and or any other type of memory. The example device description database stores device description files associated with the field devices . The device description files may include text based files that describe functions features and or components of the field devices . In some examples the device description files may be EDDL based files.

The device description files are stored to the database by process control personnel when a corresponding field device is added to the field devices within the process control system . In some examples the device description file may be included within a field device and stored to the database via the controller upon adding the field device to the field devices . While the device description database is shown as being separate from the controller in some process control environments the database may be included within the controller the workstation and or the wireless device . In these examples the controller may locally access device description files to operate a control routine and or algorithm. Alternatively the workstation and or the wireless device may locally access device description files to display corresponding process control information.

In the example of the device description files include tags e.g. cross reference identifiers to localized information within locale templates stored within the template database . The locale templates may be stored within sets associated with a particular locale. Each of the sets may include locale templates for different process control objects device display types and or process control information types. For example the template database may include a set of locale templates associated with a German locale a set of locale templates associated with a French locale and a set of locale templates associated with a Mexican locale. Each of the sets may include locale templates for displaying process control objects on the wireless device and locale templates for displaying process control objects on the workstation . Further each of the sets may include locale templates associated with different types of process control objects and or corresponding process control information generated by the controller .

The locale templates may be stored to the template database by process control personnel who may create the locale templates based on specified tags within device description files. In other examples distributors and or regional process control managers may generate the locale templates. By storing locale templates that include localization information process control personnel may build translation files into the process control system separate from relatively core components defined within the controller and or device description files within the database . Further by separating localization information from core process control functionality translation information may be modified and or updated without having to take the process control system offline.

In some examples the locale templates may be text based resource files that include tags that correspond to tags within device description files. In other examples the locale templates may include XML and or XSLT files for displaying process control objects in web browsers. The tags within the locale templates may reference translated text numeric formats and or any other localized information. The locale templates may also include graphical formatting information to display the localized information within an application.

The example template database of may also include default information. For example the template database may include a locale neutral set of locale templates. In examples where a locale cannot be matched the localization interface may use a default locale template. In other examples the localization interface may select a default locale template and use a translator to convert default text into a locale specified by a user to display within an application.

To display localized process control objects within the application the user interface may transmit a request from a user to view one or more process control objects. The user interface transmits the request to the localization interface . The localization interface then determines a locale associated with the request. The locale may be identified by locale information included within the request including for example a language type a numeric format an Internet Protocol address a data format a country a region and or a dialect. In other examples the request may include metadata that identifies a locale. In yet other examples a user may select a locale upon logging into the workstation .

Upon determining a locale the example localization interface determines a process control object type requested by the user. The process control object type may be determined based on an identifier of the process control object and or a name extension of the process control object. For example a field device process control object may include an identifier of FD and or a name extension of .device while a functional block process control object may include an identifier of FB and or a name extension of block. The example localization interface accesses the device description database to search for device description file s associated with the requested object. The localization interface may then access the template database to select a set of locale templates associated with the locale of the user. Within the set the localization interface selects one or more locale templates that include tags that correspond to tags within the device description file s . The localization interface may also select locale templates based on the process control object type and or any process control information generated by the controller associated with the selected process control object.

The example localization interface displays the selected process control object via the user interface by rendering the selected locale templates in combination with and or inserted within the device description file s to generate the display. Combining and or inserting locale templates with a device description file s includes identifying tags within the device description file s identifying corresponding tags within locale templates and processing and or compiling the device description file s with the tagged portions of the locale templates that reference localized information. Rendering may also include identifying references to process control information within the device description file s and or the locale templates and accessing the corresponding information within the controller . In this manner the localization interface displays newly generated process control information within the application in a locale context of the user.

The example localization interface of enables a user of the workstation to view process control objects via the user interface in a format associated with a first locale while a second user of the wireless device concurrently views the same process control objects via the user interface in a format associated with a second locale. For example the first locale could be associated with the Polish language while the second locale is associated with the Italian language. In this manner the localization interface within the workstation and the localization interface not shown within the wireless device display language neutral process control information generated by the controller and display localized process control objects for each of the respective users in the appropriate locale context.

To receive a request to view one or more process control objects the example localization interface includes a workstation interface . The example workstation interface receives the request from a user via the workstation and or the user interface . A user selects a process control object by entering an identifier associated with the object into a request and or search field. In other examples a user selects a process control object by browsing to the desired object within a data directory. For example a user may utilize an open function and navigate a directory to the desired process control object. In yet other examples a user may view information associated with a process control object by selecting a graphical representation and or an identifier associated with the object. Alternatively a user may enter a website address that includes and or lists process control objects. A user may then select the desired process control object listed within the displayed webpage. In some examples a user may select multiple process control objects. In these examples the process control objects may be included within a single request or alternatively multiple requests.

In addition to identifying one or more process control objects to view the requests may also include location information identifying a locale of a user. In some instances a user may select a locale upon logging into the workstation and or an application. In other instances the request may include location information metadata identifying a locale based on configured regional settings within the workstation . In yet other instances a user may select a desired locale while requesting a process control object. In further instances the request may include an IP address of the workstation . In these instances the workstation interface may user a geographic IP address database to determine a locale associated with the IP address.

Additionally a request may include information identifying a device type from which the request was transmitted. The device type information may be included within metadata associated with the request. In other examples the workstation interface may determine a device type based on a Media Access Control MAC address associated with a device that transmitted a request. For example the MAC address may indicate if a device is a workstation and or a handheld device. Alternatively the workstation interface may query a device for device type information.

Upon receiving a request to view a process control object the example workstation interface forwards the request to a device description file processor . In some examples the workstation interface may utilize security protocols prior to forwarding the request. For example the workstation interface may prompt a user for identification and or a password to determine if the user is authorized to view the requested process control object. In other examples the request may include metadata identifying a user that the workstation interface may use to authenticate the user.

To select one or more device description files based on the requested process control object s the example localization interface of includes the device description file processor . After receiving a request the example device description file processor determines a type for each of the process control objects. The type may be determined by an identifier used to identify the process control object a file name of the process control object and or metadata included within the request.

The example device description file processor then accesses the device description database to search for device description file s that match the requested process control object s . To match a process control object to a device description file the device description file processor may locate files that include a type and or an identifier of the process control object. For example the request for a process control object may include a Rosemount field device pressure sensor type and a PRS02 identifier. The device description file processor searches for device description files that define functionality for a Rosemount field device pressure sensor. The device description file processor may also search device description files that include definitions specifically for the PRS02 device. In some instances a title and or a file name of the device description file may include the type and or the identifier. In other instances metadata associated with the device description file may include the type and or the identifier. In yet other instances the device description file processor may have to search text within the file for a matching type and or identifier.

After selecting at least one device description file the example device description file processor transmits the file to an object manager . Additionally the device description file processor forwards the request to the object manager . The example object manager processes device description file s for display within an application. To process a device description file the example object manager reads the file to determine any menu display and or format information. The information may be used to format a template and or format the process control object for display. The menu information may also include menu functions and or options that are available to be displayed with the requested process control object. The menu functions may include functions to perform and or information to view associated with the process control object.

The example object manager also reads device description file s for tags. The tags reference localized information within locale templates that the object manager uses to add translated text and or formatted numeric values to a template for display. To obtain the appropriate locale templates the example object manager sends a message to a template processor to search for locale templates. The message may include the request message from the user identifying the requested process control object s and or the device description file s received from the device description file processor .

The example template processor receives the message from the object manager and accesses the template database to search for locale templates. The example template processor searches the template database based on an organization of locale templates. In some examples the locale templates may be organized within sets and or groups based on locale. In these examples the template processor identifies a set of locale templates that matches a locale included within the request. The example template processor then searches within the selected set for one or more locale templates that match the requested process control object device type and or device description file s . To select a set of locale templates based on locale the template processor uses location information e.g. locale information identified by the workstation interface . For example the workstation interface may determine that a request is associated with a German locale. The template processor may then search for a set of locale templates corresponding to German translated text formatting associated with German standards and or any other localized information associated with the German locale.

In other examples the locale templates may be organized by sets and or groups within the template database based on a requesting device type and or a process control object type. In these examples the template processor selects a set that matches the device type included within the request and or a set that matches the requested process control object. Within the selected set the template processor may then select a locale template that matches a locale associated with the request.

The example template processor selects a locale template by matching tags within one or more device description files to corresponding tags within locale templates. For example a device description file may include a High Alarm Value tag. In this example the template processor searches for locale templates that include a corresponding High Alarm Value tag. The tags may be identified based on special and or unique programming characters within a text file. Alternatively the template processor and or the object manager may identify tags based on a predefined code and or variable identifier.

In some examples the template processor may select locale templates based on an identifier associated with a process control object. For example a locale template may be created for a PUMP01 process control object. The template processor may search for locale templates that have PUMP01 within a file name metadata and or included within the template as text. In other examples the template processor may use a type of the process control object to select corresponding locale templates. In these examples a locale template may include an indicator e.g. metadata and or file comments that specifies that the locale template is configured to display localized information for a certain type of process control object.

The example template processor may also select a locale template based on a device type that is to display the requested process control object. The locale templates may include information identifying which templates may be used for different device types. In some examples the locale templates may indicate a list of acceptable devices. Alternatively the locale templates may be identified based a device type with a relatively large display area e.g. a computer monitor and device type with a relatively small display area e.g. a wireless phone display . In these examples the template processor selects the locale template that best matches a device that is to display the process control object using device type information from the workstation interface .

In some examples the template processor may not locate a locale template based on a process control object a locale tags and or a device type. In these examples the template processor may select a default locale template. For example the template processor may find locale templates that match a process control object but may not find a locale template specifically for a Canadian locale. In this example the template processor may select a default e.g. English locale template that matches the process control object.

After selecting one or more locale templates the example template processor transmits the locale template s to the object manager . The example object manager processes the requested process control object s for display by executing compiling and or operating the device description file s received from the device description file processor with the received locale template s . The object manager processes a device description file with a locale template by inserting translated text and or formatted data fields e.g. localized information tagged within the locale template to corresponding tag s within the device description file. In other words the object manager references tagged portions of the locale template to compile and or execute corresponding tagged portions of the device description file to generate a display of a process control object. In other examples the device description file may include a function call to the locale template. In these other examples the object manager executes the instructions within the locale template referenced by the device description file to generate the display of a process control object.

Additionally the object manager may use references to process control information e.g. resources generated by the controller to display a requested object. In some examples portions of a locale template may include a link a file directory and or an identifier that corresponds to process control information. For example a locale template may include a pump speed data field that is formatted to the European numbering convention. The locale template also includes a link to a pump speed parameter and or variable calculated by the controller . The example object manager uses the link to request the pump speed value from the controller . The object manager then formats the value received from the controller within the data field for the European format. The object manager may then insert the formatted data field and pump speed value into a corresponding device description file to generate a process control object display that includes the pump speed shown in the European numbering convention. In this manner a user may request a process control object to view the most recent data output from the object. In other examples the object manager may use links references data locations and or identifiers within a device description file to access corresponding process control information from the controller .

The example object manager uses device description file s and or associated locale templates to generate a display file e.g. an HTML file . The display file specifies locations of process control information graphical representations of requested process objects and data fields. The display file also includes translated text for display and or any other localized information that may be specified within a locale template. The object manager transmits the display file to a renderer . The example renderer processes e.g. renders the display file into a format that is viewable by a user via for example the user interface . The example renderer generates a display also based on a display size specified by locale templates within the display file. For example the renderer may generate a display for a relatively small viewing area for process control object s to be displayed by the wireless device and a display for a relatively large viewing area for the same process control object s to be displayed by the workstation .

The example renderer transmits the rendered display to an application within for example the workstation to display the requested object s . In some examples transmitting the display may include sending the display information across the Internet to a web browsing application. In these examples the web browsing application may also include the renderer to generate the display within the user interface . In other examples such as the example of the renderer transmits the rendered process control object s to the user interface within the workstation .

To communicatively couple the renderer to applications the example localization interface includes an application interface . The application interface may receive a message from the renderer indicating a target application user interface and or workstation. The target information may be based on address information received in the request message by the workstation interface and propagated through the localization interface . The application interface uses the target information to initiate a viewing session within a target application. To initiate a viewing session the application interface may transmit request to connect messages to the target application user interface and or workstation. Upon establishing a connection the application interface forwards the rendered process control object s from the renderer .

To translate default locale templates and or to translate text sting information the example localization processor of includes a translator . The example object manager may use the translator in instances when a locale template cannot be identified for a specified locale. The translator may receive the default template from the object manager translate text strings based on a specified locale and transmit the translated text strings to the object manager . In this manner the translator may be used when locale templates for a locale have not been created. The example translator may also convert data fields to a format based on the specified locale. For example the translator may include a library that identifies which numeric and or data formats are associated with which locales.

The example localization interface of the illustrated example also includes a database manager . The example database manager manages locale templates within the template database and device description files within the device description database . The database manager manages locale templates by organizing locale templates into sets based on locale device type process control object type etc. The database manager may also update and or modify locale templates when new localization information is available. The database manager manages device description files by storing files to the database . A user may update add and or remove device description files via the database manager . Alternatively the database manager may receive updates to device description files from the process control devices via the controller .

In some examples the database manager may function as an interface for a user to manage the databases and . In these examples a user may access the databases and or via the database manager which provides a navigation interface to view the stored information. The database manager may also provide a user an ability to read and or write to the locale templates and or the device description files.

While the example localization interface has been illustrated in one or more of the servers platforms interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any way. Further the example workstation interface the example device description file processor the example object manager the example template processor the example renderer the example application interface the example translator the example database manager and or more generally the example localization interface may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example workstation interface the example device description file processor the example object manager the example template processor the example renderer the example application interface the example translator the example database manager and or more generally the example localization interface could be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc.

When any apparatus claim of this patent is read to cover a purely software and or firmware implementation at least one of the example workstation interface the example device description file processor the example object manager the example template processor the example renderer the example application interface the example translator and or the example database manager are hereby expressly defined to include a computer readable medium such as a memory DVD CD etc. storing the software and or firmware. Further still the example localization interface may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

The example also includes the template database with four sets of locale templates. In particular the set includes locale templates associated with an English locale the set includes locale templates associated with a German locale the set includes locale templates associated with a French locale and the set includes locale templates associated with a Spanish locale. In other examples the template database may include fewer or additional locale sets.

In this example the English locale set includes locale templates . The locale templates are shown as text based resource files. A portion of the locale template is highlighted within the text box . The locale templates may each be associated with a different field device. Additionally or alternatively the locale templates may be associated with a device type for displaying process control objects. Further each of the locale templates may include different tags. While only the three locale templates are shown the set may include fewer or additional locale templates.

In the example of a portion of the device description file is displayed within the text box . The example text box includes parameters that define conditions to display a High Alarm warning system for a field device. Each of the parameters is referenced to a tag that corresponds to a tag within the locale templates . For example the text box includes a Description parameter that is associated with a High Alarm tag. In this example the example localization interface searches for locale templates with the High Alarm tag. The text box also includes a Message parameter which includes a High Alarm Value tag.

In the illustrated example a user provides the localization interface with a request to view a process control object. The request may include an identifier of the process control object. In response to the request the localization interface determines that the device description file is associated with the requested process control object. To display the process control object the localization interface determines that the request is associated with the English locale selects the English locale set and determines that tags within the device description file correspond to the locale templates .

To display for example the Message parameter within the text box the localization interface uses the High Alarm Value tag to identify the corresponding High Alarm Value tag within the text box . The localization interface then incorporates e.g. inserts the localization information e.g. from alarmtypes.fhx alarm description High Alarm Value within the text box into the High Alarm Value tag location adjacent to the Message parameter. The localization information includes a reference e.g. alarmtypes.fhx that the localization interface uses to locate the process control information within the controller and or within other portions of the process control system . This process control information may include a value of the High Alarm. Additionally the localization information includes translated text e.g. High Alarm value that is displayed by the localization interface adjacent to the High Alarm Value. In this manner the localization interface uses the locale templates to insert localized information into the device description file to display the requested process control object within the application .

In another example while the localization interface is displaying the requested process control object in an English context the localization interface may receive a second request from another user to view the same process control object in the German locale. In this other example the localization interface accesses the German set for locale templates and uses the same device description file to display the tagged localization information in a German context. Thus the example localization interface enables the display of process control objects in different locale contexts concurrently using the same device description files.

The example localization interface matches the tags within the text box to corresponding tags within the set . Specifically the localization interface matches the Message parameter to a portion of the locale template . The portion is shown within a text box . In this illustrated example the localization interface determines that the locale template is formatted for an XML file based on a format line e.g. . Additionally the localization interface determines that the locale template is associated with the French locale based on a localization line e.g. .

The example localization interface uses the information that the locale template is an XML file to match the High Alarm Value tag associated with the Message parameter to the XML formatted tag. The example localization interface may then incorporate the text e.g. Haut alarme haute valuer associated with the XML formatted tag into the Message parameter. The localization interface may also access the controller for process control information associated with the P1 variable. In this manner the localization interface displays the process control object specified by the request within the application including the Haut alarme haute valuer High Alarm message in the French language and a value of the High Alarm corresponding to the P1 variable. Additionally the examples in show that the localization interface may concurrently display the same process control objects in different locale contexts based on the same device description file using different locale templates e.g. the resource based locale template and the XML formatted locale template .

The Layer 1 is a network application layer that includes runtime services and database services . The runtime services process received data from the field devices within an algorithm and or routine to generate process control information. The runtime services may also include network messages for transmitting the process control information within the process control system . The Layer 1 also includes the database services to store the generated process control information. The database services may store the process control information within workstations e.g. the workstation and or other servers within the process control system . The database services may also store the process control information by an assigned identifier e.g. a variable name . The data base services may assign a data type to the process control information.

The Layer 2 is a translation layer that includes the localization interface device description files and locale templates . The Layer 2 e.g. via the localization interface accesses the process control information from the Layer 1 based on a specified request from a user. The localization interface uses the device description files to determine how the process control information is to be displayed e.g. within a chart text fields bar graphs etc. . The localization interface uses the locale templates to access localized information including display format information to display the process control information in a specified locale context. The localization interface renders the process control information for display. In this manner the localization interface operates as an application facade by implementing localized process control operations and or network components as graphical representations requested by a user.

Functionally above the Layer 2 the Layer 3 includes applications for displaying the process control objects localized and rendered by the localization interface . In the illustrated example the applications include the enterprise view application the graphic studio application and the explorer application . The enterprise view application displays process control information within a monitoring context so that a user may view and or modify an operational state of for example the field devices and or the process control system . The graphic studio application is a design and simulation application that a user may utilize to configure for example the field devices and or the process control system . The explorer application enables a user to search for and or view process control objects and or process control information.

The applications transmit requests to the localization interface in the Layer 2 for process control objects selected by a user. The localization interface then uses the context of the request e.g. a locale a device type and or an application type and the associated device description files to select the appropriate locale templates for displaying process control information associated with the requested process control object. The localization interface transmits rendered process control information to the requesting application within the Layer 3 for display.

The example device description XML file shown above lists the manufacturer device type and version of the three devices under the line. To display this information in the user interface the example localization interface accesses the template database for locale templates that match the locale associated with the request and include tags e.g. that correspond to tags within the device description file. Within the device description file the tags include process control information e.g. Rosemount 3051MV 5 to be displayed as a list of devices associated with the Device Collection process control object. In this example the localization interface determines that the user is associated with an English locale and selects a set of English locale templates. Additionally because the request was transmitted by a web browser the localization interface searches for XML and or XSLT locale template files. An English locale XSLT locale template may include 

This XSLT locale template defines a table including column headers e.g. Manufacturer Device Type and Version and instructions e.g. and for formatting the process control information into data fields. The localization interface uses the XSLT template with the XML device description file to generate an HTML file displayable via the user interface . The example user interface uses the HTML file to render and display the table in .

Using this XSLT locale template the localization interface generates a table defined by HTML instructions and transmits these instructions to the user interface in . The user interface then renders the HTML instructions to display the table . In this example the French locale template changes the language of the table headers e.g. Fabricant Type de P riph riques and Version and the title e.g. Collection de P riph riques of the table . As shown in two users may concurrently view the same process control information associated with the Device Collection process control object in a locale context associated with each for the users.

The example user interface of is shown in the English language and includes the data fields . The example user interface of is shown in the French language and includes the data fields . The data fields and specify a name of the valve the data fields and specify a closure percentage of the valve the data fields and specify a fluid flow rate through the valve the data fields and specify a description of the valve and the data fields and specify a file location of the process control information associated with the valve.

In the example of the example localization interface determines that a user requested process control information associated with the Valve 01C process control object and displays localization information in an English context. The localization interface locates a device description file associated with the Valve 01C process control object. The localization interface then uses tags referenced to text strings within corresponding English locale templates e.g. NAME VALVE 01C CLOSE FLOW RATE DESCRIPTION INFLOW VALVE TO TANK 1W3 CANCEL REPLACE and or DONE that provide descriptions of corresponding process control information generated by the VALVE01C field device. The English locale templates also includes the file location e.g. PID01 PR01 WR.VALVE01C that points to a location of corresponding process control information processed by the controller . In this example the process control information may include the values 0.35 and 2.52 transmitted by the Valve 01C field device. Additionally because the user interface may be associated with an enterprise application e.g. a process control software application the localization interface may search for locale templates that have a resource file format.

In the example of the localization interface determines that a user is associated with a French locale. As a result the localization interface displays the process control information formatted to conform to the European numbering standard within the data fields and and includes localized text information within the data field . However the localization interface utilizes the same device description file for the user interface used to display the Valve 01C process control object in the English language in . Additionally the localization interface in accesses the process control information displayed within the data fields from the controller and formats the data based on information within the French locale templates. The localization interface may also use the translator of to translate the text within the field . Alternatively the translated text may be included within a French locale template. Further the localization interface uses translated text within French locale templates for the text e.g. Nom Fermer Taux Flux and Description adjacent to the data fields .

In some examples the layout of the localized information displayed via the user interfaces and may be based on relative positioning and or automatic sizing of the data fields and specified within the respective locale templates. Further the layout of the data fields and may include extra space so that longer localizable phrases are not obscured. Moreover the layout of the data fields and may include text wrapping to prevent clipping. Additionally an XML language attribute may be set for the user interfaces and of so that hyphenation spell checking number substitution script shaping and or font fallback are associated with a specified locale. Also each of the user interfaces and may specify a composite font and a text flow direction for displaying the text strings.

The example user interface of sends target display information included within a request to view process control information associated with the TT101 field device to the localization interface . The localization interface locates the device description file associated with the TT101 field device and locates corresponding English locale templates. The localization interface uses the target display information e.g. device type information to search for locale templates that specify which process control information associated with the TT101 field device is to be displayed within a web browser on a workstation or laptop. Also the localization interface uses the target display information to identify English locale templates that are configured for display on a workstation and or laptop. Because the request was transmitted via a web browser the localization interface may select XML and or XSLT formatted locale templates to display the process control information in an HTML format.

Additionally the example localization interface uses the TT101 process control object to search for process control information and or properties e.g. information to display within data panels and as outputs from the TT101 field device. The data panels and include the data fields for analog input AI Range Units Lower Range Upper Rage Tag Date and Descriptor of the TT101 field device. The example localization interface insets this process control information into the appropriate data fields based on formatting information and references e.g. tags paths and or links to the process control information within the locale templates. The localization interface may then transmit to the user interface instructions for rendering and displaying the process control information within the data panels and .

The localization interface uses the TT101 process control object to locate a corresponding device description file locale template s and or process control information. Also the example localization interface uses the target display information to select one or more locale templates formatted for display on the relatively small screen of the wireless device . Further the localization interface may select locale template s that match an English locale associated with the wireless device . In the illustrated example the localization interface receives the same TT101 field device identifier as described in conjunction with . However because the request is from the wireless device in with a relatively small screen compared to the web browser user interface in the localization interface generates a display formatted for the relatively smaller screen of the user interface .

Flowcharts representative of example processes and for implementing the localization interface of are shown in B and . In this example the processes may be implemented using the machine readable instructions in the form of a program for execution by a processor such as the processor P shown in the example processor system P discussed below in connection with . The program may be embodied in software stored on a computer readable medium such as a CD ROM a floppy disk a hard drive a digital versatile disk DVD or a memory associated with the processor P but the entire program and or parts thereof could alternatively be executed by a device other than the processor P and or embodied in firmware or dedicated hardware. Further although the example program is described with reference to the flowcharts illustrated in B and many other methods of implementing the example localization interface may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

As mentioned above the example processes of B and may be implemented using coded instructions e.g. computer readable instructions stored on a tangible computer readable medium such as a hard disk drive a flash memory a read only memory ROM a compact disk CD a digital versatile disk DVD a cache a random access memory RAM and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . As used herein the term tangible computer readable medium is expressly defined to include any type of computer readable storage and to exclude propagating signals. Additionally or alternatively the example processes of B and may be implemented using coded instructions e.g. computer readable instructions stored on a non transitory computer readable medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporary buffering and or for caching of the information . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable medium and to exclude propagating signals.

The example process of displays a process control object and or displays process control information requested by a user. The example process of begins by receiving a request to view a process control object from an application displayed via a user interface e.g. via the workstation interface of block . The example process then locates a device description file that corresponds to the requested process control object e.g. via the device description file processor block . The example process next determines a locale and a device type associated with the request e.g. via the object manager and or the template processor blocks and . The locale and or the device type may be determined based on metadata included within the request.

The example process uses the determined locale to select a set of locale templates associated with the determined locale e.g. via the template processor block . The example process then determines if the request is from a web browser e.g. via the workstation interface and or the object manager block . In other examples the process may determine if the request is from a web browser upon receiving the request. If the request is from a web browser the example process selects XML and or XSLT locale template s that include at least one tag that corresponds to tag s within the determined device description file e.g. via the template processor block . By selecting XML and or XSLT formatted locale templates the example processor may generate an HTML file to display the requested process control object. The example process then selects locale template s from with the selected XML and or XSLT locale templates that correspond to the determined device type e.g. via the template processor block . The example process of continues by checking if there is at least one locale template to display localized information e.g. via the template processor block .

However if the request is not from a web browser block the example process of selects resource based locale template s that include at least one tag that corresponds to tag s within the determined device description file e.g. via the template processor block . The example process then selects locale template s from within the selected resource based locale templates that correspond to the determined device type e.g. via the template processor block . The example process of then determines if there is at least one locale template to display localized information e.g. via the template processor block .

If there are no matching locale templates to the device type locale and or tag s of the device description file the example process selects a default locale template e.g. via the template processor block . The example process then retrieves process control information referenced within the selected locale template s and or the device description file e.g. via the object manager block . The example process next processes the device description file the locale template s and or the retrieved process control information for display as the requested process control object e.g. via the object manager and or the renderer block . Processing may include rendering the device description file the locale template s and or the retrieved process control information for display. In other examples a target user interface may render the processed display information from the example process .

The example process continues by transmitting the processed and or rendered display to a user interface to view within an application e.g. via the application interface block . The example process may then return to receiving a request to view a process control object. In other examples the example process may execute multiple requests concurrently.

The example process of generates a device description file and locale template s to support a newly added field device. The example process begins by receiving information that a field device has been added to a process control system e.g. via the database manager block . The information may be entered by process control personnel or alternatively the example process may detect the addition of the field device. The example process next stores a device description file associated with the field device to the device description database of e.g. via the database manager block . In some examples the process may receive the device description file from the field device via the controller . In other examples process control personnel may provide the device description file.

The example process of the illustrated example then creates set s of locale templates for the device description file for different locales e.g. via the database manager block . In some examples a set of locale templates may be created for a default locale. The example process may then generate sets for other locales using a translator. In other examples process control personnel may create sets for each of the desired locales. The example process may create the set s of locale templates by adding tags with localized information to the locale templates that reference tags within the device description file e.g. via the database manager block . The example process may also create set s of locale templates by adding references and or links to process control information e.g. via the database manager block .

Additionally the example process creates for each of the set s locale templates that are configured and or formatted for display on different device types e.g. via the database manager block . Further the example process may create locale templates for each of the set s that are formatted for XML files XSLT files and or resource based files e.g. via the database manager block . The example process then stores the created locale templates to the template database e.g. via the database manager block . The example process next returns to receiving information that another field device has been added to the process control system. In other examples the process may terminate if there are no additional field devices to add to the process control system.

As shown in the processor system P includes a processor P that is coupled to an interconnection bus P. The processor P includes a register set or register space P which is depicted in as being entirely on chip but which could alternatively be located entirely or partially off chip and directly coupled to the processor P via dedicated electrical connections and or via the interconnection bus P. The processor P may be any suitable processor processing unit or microprocessor. Although not shown in the system P may be a multi processor system and thus may include one or more additional processors that are identical or similar to the processor P and that are communicatively coupled to the interconnection bus P.

The processor P of is coupled to a chipset P which includes a memory controller P and a peripheral input output I O controller P. As is well known a chipset typically provides I O and memory management functions as well as a plurality of general purpose and or special purpose registers timers etc. that are accessible or used by one or more processors coupled to the chipset P. The memory controller P performs functions that enable the processor P or processors if there are multiple processors to access a system memory P and a mass storage memory P.

The system memory P may include any desired type of volatile and or non volatile memory such as for example static random access memory SRAM dynamic random access memory DRAM flash memory read only memory ROM etc. The mass storage memory P may include any desired type of mass storage device. For example if the example processor system P is used to implement device description database and or the template database the mass storage memory P may include a hard disk drive an optical drive a tape storage device etc. Alternatively if the example processor system P is used to implement the device description database and or the template database the mass storage memory P may include a solid state memory e.g. a flash memory a RAM memory etc. a magnetic memory e.g. a hard drive or any other memory suitable for mass storage in the device description database and or the template database .

The peripheral I O controller P performs functions that enable the processor P to communicate with peripheral input output I O devices P and P and a network interface P via a peripheral I O bus P. The I O devices P and P may be any desired type of I O device such as for example a keyboard a display e.g. a liquid crystal display LCD a cathode ray tube CRT display etc. a navigation device e.g. a mouse a trackball a capacitive touch pad a joystick etc. etc. The network interface P may be for example an Ethernet device an asynchronous transfer mode ATM device an 802.11 device a DSL modem a cable modem a cellular modem etc. that enables the processor system P to communicate with another processor system.

While the memory controller P and the I O controller P are depicted in as separate functional blocks within the chipset P the functions performed by these blocks may be integrated within a single semiconductor circuit or may be implemented using two or more separate integrated circuits.

At least some of the above described example methods and or apparatus are implemented by one or more software and or firmware programs running on a computer processor. However dedicated hardware implementations including but not limited to application specific integrated circuits programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and or apparatus described herein either in whole or in part. Furthermore alternative software implementations including but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the example methods and or systems described herein.

It should also be noted that the example software and or firmware implementations described herein are stored on a tangible storage medium such as a magnetic medium e.g. a magnetic disk or tape a magneto optical or optical medium such as an optical disk or a solid state medium such as a memory card or other package that houses one or more read only non volatile memories random access memories or other re writable volatile memories. Accordingly the example software and or firmware described herein can be stored on a tangible storage medium such as those described above or successor storage media. To the extent the above specification describes example components and functions with reference to particular standards and protocols it is understood that the scope of this patent is not limited to such standards and protocols.

Additionally although this patent discloses example methods and apparatus including software or firmware executed on hardware it should be noted that such systems are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software. Accordingly while the above specification described example methods systems and machine accessible medium the examples are not the only way to implement such systems methods and machine accessible medium. Therefore although certain example methods systems and machine accessible medium have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods systems and machine accessible medium fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

