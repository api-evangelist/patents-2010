---

title: Visual previews
abstract: Visual animation platforms may allow users to develop visual media projects, such as movies. Many visual animation platforms may provide animation effects that may be applied to visual elements of a visual media project. Unfortunately, current techniques for providing a preview of an animation effect may be limited. Accordingly, one or more systems and/or techniques for presenting a visual preview are disclosed herein. In particular, a snapshot of an original state of a selected visual element may be stored. A referenced animation effect may be applied to the selected visual element to generate an updated visual element that may be used to generate a visual preview of how the referenced animation effect may look as applied to the selected visual element. The snapshot may be applied to the updated visual element to non-destructively revert the updated visual element to the original state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208599&OS=09208599&RS=09208599
owner: Microsoft Technology Licensing, LLC
number: 09208599
owner_city: Redmond
owner_country: US
publication_date: 20100617
---
Visual animation platforms may allow users to develop visual media projects comprising videos and or other visual content. For example a user may develop a movie comprising visual elements e.g. sets of animation frames . The movie may be enhanced by applying animation effects such as transitions and visual effects to the visual elements. In one example a user may apply a fadeout animation effect to a visual element comprising the last set of frames within the movie thus giving the end of the movie a fadeout effect. In addition the user may create new animation effects such as a blur effect that may be applied to visual elements within the movie. In this way the user may generate a customized movie using the visual animation platform.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for presenting a visual preview are disclosed herein. It may be appreciated that a visual animation platform may allow users to develop a visual media project comprising one or more visual elements. For example a visual media project may correspond to a movie comprising visual elements representing sets of animation frames. The visual animation platform may provide one or more animation effects that may be applied to visual elements e.g. a black and white animation effect may be applied to a visual element such that animation frames within the visual element may appear black and white .

Accordingly a first user input comprising a referenced animation effect and a selected visual element may be received e.g. after selecting the visual element a user may hover over the animation effect within a ribbon menu . A snapshot of the selected visual element may be stored. That is the snapshot may represent information e.g. location data existing animation effects time data and or other properties of the visual element corresponding to an original state of the selected visual element e.g. a state of the selected visual element before the referenced animation effect is applied . It may be appreciated that the snapshot may be utilized to non destructively revert the selected visual element back to its original state.

The referenced animation effect may be applied to the selected visual element to generate an updated visual element. For example a fadeout animation effect may be applied to a sequence of animation frames to generate updated animation frames having a fadeout effect. It may be appreciated that the referenced animation effect may be selectively applied to a portion of the selected visual element to which the referenced animation effect is applicable where the portion may comprise all or less than all of the selected visual element. For example a fadeout animation effect may affect a final sequence of animation frames within a selected visual element. In order to reduce processing the fadeout animation effect may be applied merely to the final sequence of animation frames to generate the updated visual element.

A visual preview may be generated based upon the updated visual element. In particular the visual preview may be generated by selectively including a desired portion of the updated visual element e.g. an interesting portion of the updated visual element that may be representative of how the visual effect looks within the visual preview where the desired portion may comprise all or less than all of the updated visual element. For example the updated visual element may comprise a 30 minutes sequence of animation frames having a fadeout animation effect applied to the final 30 seconds. It may be advantageous to provide the user with a visual preview comprising the last 15 seconds of the updated visual element because the last 15 seconds may be a short and concise representation of how the fadeout animation effect looks. It may be appreciated that the visual preview may be derived from user content the updated visual element as opposed to a generic canned video. In this way the visual preview may provide the user with a quick and relevant preview of how a referenced animation effect may look as applied to a selected visual element without having to process an entire visual media project.

Second user input unreferencing the referenced animation effect may be received. For example the user may hover off a user interface element corresponding to the referenced animation effect. The updated visual element may be reverted to the original state e.g. the original state of the selected visual element before the referenced animation effect was applied by applying the snapshot to the updated visual element. That is the updated visual element may be non destructively reverted back to the original state of the visual element. It may be appreciated that subsequent user input selecting various animation effects may be received. In this way the user may quickly and easily view various visual previews of how referenced animation effects may look as applied to a selected animation element without losing the original state of the selected animation element.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

A visual animation platform may allow users to quickly and easily organize visual elements into a visual media project such as a movie. Users may enhance their visual media project by applying animation effects such as transitions and effects to visual elements. For example a visual animation platform may provide many e.g. a hundred preconfigured transitions and effects that may be applied to visual elements. Additionally some visual animation platforms may allow users to generate their own animation effects.

Many visual animation platforms may attempt to provide a quick easy and intuitive experience for users to design and share movies with others. Unfortunately applying animation effects to visual elements may be time consuming and complex due to a lack of a visual preview option. Current visual animation platforms may attempt to reduce the time lag by providing canned videos e.g. generic content unrelated to the user s content illustrating how the animation effect may look. However the canned video may not quickly and effectively show the user how the animation effect may look on the user s content.

In another example of a current visual animation platform the entire visual media project e.g. a movie may be processed updated and run in order for a user to visualize an animation effect. For example the user may select a visual element. The user may invoke the visual animation platform to apply the animation effect to the visual element. It may be common for the user to wait a significant amount of time for the animation effect to be applied to the visual element due to the amount of processing performed by the visual animation platform. Once applied the user may invoke the visual animation platform to play the movie. In this way the user may finally see how the animation effect looks. Next the user may select a second animation effect. The user may invoke the visual animation platform to apply the second animation effect to the visual element. Yet again the user may wait a significant amount of time for the animation effect to be applied to the visual element due to the amount of processing performed by the visual animation platform. Again the user may invoke the animation platform to play the movie so that the user may see how the second animation effect looks. Without visual previews the user may spend a significant amount of time repeatedly applying animation effects and running the movie to see how various animation effects look. Additionally an applied animation effect may not be able to be reverted back to an original form. Thus the user may have to perform a computationally expensive intensive undo operation after the application of every animation effect.

Accordingly among other things one or more systems and or techniques for presenting a visual preview are provided herein. That is a user may quickly scan through visual previews of how various animation effects may look on visual elements user content without undesirably long time lags associated with processing a visual media project. In generating a visual preview the original state of the visual element may be preserved so that the visual element may be quickly reverted back to its original state after the visual preview is shown. This allows the user to non destructively preview animation effects on visual elements without committing to an update of the visual media project. In one example a user may select a visual element comprising a sequence of animation frames. The user may hover over a fadeout effect user interface element. A visual preview of how the animation effect may look on the visual element may be presented to the user. It may be appreciated that the visual preview may comprise the entire updated visual element or merely an interesting portion of the updated visual element e.g. a portion of the updated visual element representative of how the selected animation looks . Next the user may hover off the fadeout effect button. The visual element may be non destructively reverted back to its original state without the fadeout effect. In this way the user may quickly preview animation effects on the visual element without committing to the animation effects.

It may be appreciated that referencing or unreferencing an animation effect for the purpose of viewing a visual preview may be different than selecting or unselecting an animation effect for the purposes of applying the animation effect to a visual element within a visual media project. For example a visual element may have a previously selected animation effect already applied to the visual element. However a user may want to see how an additional animation effect may look on the visual element. Thus the user may merely reference the additional animation effect e.g. a hover over action which may be used to generate a visual preview of the additional animation effect applied to the visual element already comprising the selected animation effect.

It may be appreciated that a user may work with more than one visual element in a visual animation platform but that a visual preview of an applied animation effect as provided herein is generally applied to a particular visual element e.g. video in a preview window or mode. That is a user can have more than one visual element selected e.g. to work within the platform but when a user hovers over for example an animation effect the effect is merely applied to the particular visual element in a preview pane for example. Once a user selects an animation effect e.g. is satisfied after viewing the preview the effect may however be applied to all of the selected visual elements or at least more than just the previewed one that the user is working with in the platform.

One embodiment of presenting a visual preview is illustrated by an exemplary method in . At the method starts. At a first user input comprising a referenced animation effect and a selected visual element may be received. For example after selecting the visual element a hover over action of a user interface element corresponding to the referenced animation effect may be received as the first user input. It may be appreciated that a visual element may comprise a still image a set of sequential animation frames a textual overlay and or other visual content that may be utilized in generating a visual media project. The animation effect may comprise transitions and or other effects that may be utilized in generating a visual media project.

At a snapshot of the selected visual element may be stored. It may be appreciated that a snapshot may represent information e.g. location data existing animation effects time data and or other properties of the visual element corresponding to an original state of the selected visual element e.g. a state of the selected visual element before the referenced animation effect is applied . At the referenced animation effect may be applied to the selected visual element to generate an updated visual element. It may be appreciated that the selected visual element is processed updated with the referenced animation effect as opposed to other less relevant portions of a visual media project comprising the selected visual element which may reduce processing time. Additionally the referenced animation effect may be selectively applied to a portion of the selected visual element to which the animation effect is applicable which may reduce processing time. For example the selected visual element may comprise 40 minutes of video. However the selected animation affect may be applicable to the first 10 seconds of the video e.g. a fade in effect . Thus the referenced animation effect may be selectively applied to the first 10 seconds of the video as opposed to the entire 40 minutes.

At a visual preview may be generated based upon the updated visual element. In one example the visual preview may comprise a video clip corresponding to a pertinent portion of the updated visual element. That is the visual preview may comprise a desired portion of the updated visual element which may or may not comprise the entire updated visual element e.g. the visual preview may comprise the first 10 seconds illustrating a fade in effect as opposed to the entire 40 minutes of the updated visual element . At the visual preview may be presented. The visual preview may provide the user with some control of the playback of the visual preview e.g. pause fast forward etc. and or may allow the user to commit to applying the referenced animation effect to some or all of the selected visual elements.

At a second user input unreferencing the referenced animation effect may be received. For example a hover off action of the user interface element corresponding to the referenced animation effect may be received as the second user input. In response to the second user input the snapshot may be applied to the updated visual element to revert the updated visual element to the original state e.g. an original state of the visual element before the application of the referenced animation effect where the original state may however comprise one or more effects applied to the visual element before the referenced animation effect is selected and applied . It may be appreciated that in one example the snapshot may not be applied to the updated visual element until the user is done referencing animation effects . For example the user may subsequently select other animation effects for preview before leaving a ribbon menu of animation effects. It may be advantageous to simply remove the previously applied animation effect corresponding to the previous visual preview and apply the newly referenced animation effect corresponding to the new visual preview without completely reverting the visual element back to the original state per the snapshot.

It may be appreciated that the user may subsequently select other animation effects for preview. For example a third user input comprising a new referenced animation effect may be received. In one example the new referenced animation effect may be applied to the selected visual element in the original state e.g. the visual element after the snapshot was applied to the updated visual element to revert the updated visual element to the original state to generate a new updated visual element. In another example the previously applied animation effect may be removed from the selected visual element and the new referenced animation effect may be applied to the selected visual element without first reverting the selected visual element back to the originate state per the snapshot. This may occur for example where a user stays within an animation effect ribbon and merely mouses from one effect to another thus allowing the user to preview different animation effects before selecting a desired animation effect to apply to the visual element. In any event a new visual preview may be generated based upon the new updated visual element. The new visual preview may be presented. A fourth user input unreferencing e.g. mousing off or hovering off the new referenced animation effect may be received for example. In response to the fourth user input the snapshot may be applied to the new updated visual element to revert the new updated visual element to the original state e.g. an original state of the visual element before the application of the referenced animation effect . At the method ends.

In one example the user action interpreter component may be configured to receive a first user input comprising a selected visual element and a selected visual effect. For example a hover over action of a user interface element corresponding to the referenced animation effect may be received as the first user input . The user action interpreter component may be configured to notify the animation integrator component of the first user input .

The animation integrator component may be configured to store a snapshot of the selected visual element. The snapshot may comprise an original state of the selected visual element. For example the snapshot may comprise existing animation effects properties location data time data and or other information relating to the selected visual element. The animation integrator component may be configured to apply the referenced animation effect to the selected visual element to generate an updated visual element. In one example the animation integrator component may be configured to selectively apply the referenced animation effect to a portion of the selected visual element to which the animation effect is applicable. In this way the animation integrator component may generate the visual preview based upon the updated visual element. In one example the animation integrator component may selectively include a desired portion of the updated visual element within the visual preview . For example the visual preview may comprise a 10 second video clip of an interesting portion of the updated visual element which may illustrate how the referenced animation effect may appear where the updated visual element may comprise a video clip much longer than 10 seconds. The animation integrator component may present the visual preview .

The user action interpreter component may be configured to receive a second user input unreferencing the selected visual element. For example a hover off action of the user interface element corresponding to the referenced animation effect may be received as the second user input . The user action interpreter component may be configured to notify the animation integrator component of the second user input .

The animation integrator component may be configured to retrieve the snapshot . The animation integrator component may be configured to apply the snapshot to the updated visual element to revert the updated visual element to the original state. It may be appreciated that the application of the snapshot may be accomplished in a non destructive manner such that the updated visual element may be returned to the original state as if the referenced animation effect was never applied to the selected visual element. Thus the updated visual element reverted to its original state may be presented within the visual media project.

In one example while the visual preview is presented e.g. before the hover off action is received the animation integrator component may receive user confirmation of the updated visual element. For example the presentation of the visual preview may be confirmed by a user. In response to the user confirmation the animation integrator component may update the visual media project with the updated visual element. In this way the user may non destructively preview animation effects applied to user content visual elements and or selectively apply desired animation effects to the user content.

In one example a user may select frames as a selected visual element . In addition the user may hover over a fadeout referenced animation effect using a cursor. In this way a first user input comprising the selected visual element and the fadeout referenced animation effect may be received for example by a user action interpreter. It may be appreciated that the first user input may be utilized in non destructively generating a visual preview of how the fadeout effect may look as applied to frames .

The animation integrator component may be configured to apply the fadeout referenced animation effect to the selected visual element to generate an updated visual element . For example the fadeout effect may be applied to frames because frames are unaffected by the fadeout e.g. the fadeout effect is an effect that fades out the last few frames of a visual element . The updated visual element may comprise frames in an original state and frames with the fadeout effect applied. In this way the fadeout referenced animation effect is selectively applied to a portion frames of the selected visual element to which the fadeout referenced animation effect is applicable.

The animation integrator component may generate the visual preview based upon the updated visual element . For example a desired portion e.g. an interesting set of frames illustrating how a referenced animation effect may look of the updated visual element may be selectively included within the visual preview . It may be appreciated that frames may be interesting because the fadeout referenced animation effect was applied to frames . However frames may account for several minutes of video content which may be more video content than desired for a visual preview. Thus frames may be selectively included within the visual preview because such frames are representative of how the fadeout referenced animation effect may look when applied to the selected visual element . It may be appreciated that the visual preview in some instances may comprise the entire updated visual element based upon various conditions such as the type of animation effect applied a time span of the updated visual element etc.

In one example a second user input may be received by a user action interpreter component . The second user input may correspond to user input unreferencing a referenced animation effect. For example a user may hover off a cursor from a fadeout animation effect within a ribbon menu. The user action interpreter component may be configured to notify an animation integrator component of the second user input . The animation integrator component may be configured to retrieve the snapshot . The animation integrator component may apply the snapshot to the updated visual element to revert the updated visual element to the original state e.g. selected visual element reverted to original state . It may be appreciated that the application of the snapshot may be non destructive. That is the original state may be achieved without information or data loss as if the referenced animation effect was never applied to the selected visual element. In this way a visual element may be reverted back to an original state after a video preview is presented.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable computer instructions may be configured to perform a method such as the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via a network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

