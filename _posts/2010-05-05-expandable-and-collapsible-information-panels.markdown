---

title: Expandable and collapsible information panels
abstract: Methods and apparatus for displaying information content in a user interface. The content includes an information panel that contains at least one information element. Information indicating a position within the user interface is used to automatically determine whether to display the information panel in its expanded or collapsed state. The title of the information panel is displayed. The title of the information element is displayed beneath the information panel title when the information panel is displayed in its expanded state. The title of the information element is not displayed when the information panel is displayed in its collapsed state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09063645&OS=09063645&RS=09063645
owner: Google Inc.
number: 09063645
owner_city: Mountain View
owner_country: US
publication_date: 20100505
---
This application claims the benefit of U.S. Provisional Application No. 61 251 289 filed Oct. 13 2009 and titled A Browser Based Cloud Optimized Computer Platform and U.S. Provisional Application No. 61 251 292 filed Oct. 13 2009 and titled Account and Boot Management in a Cloud Computing Platform both of which are herein incorporated by reference in their entirety.

This document relates to methods and apparatus for displaying and manipulating information in a web browser.

With the creation of the world wide web and high speed computer networks the paradigm for personal computer usage has dramatically shifted. In the past users would primarily use their personal computers to run programs and store and manipulate data that was located on their local hard drive. Only rarely would users store or manipulate data located on a networked drive or run a program that was provided as a network service and even then the programs and data were usually restricted to a local area network. Today more and more users are storing more and more data on remote data servers and using remotely provided web based applications e.g. SaaS or Software as a Service programs to manipulate and organize that data. For example many users today store their personal email and contact information and even pictures videos and music archives on remote servers and access that data using third party applications that are provided through and controlled by a web browser.

Cloud computing is a style of computing in which computing resources such as application programs and file storage are remotely provided over the Internet typically through a web browser. Many web browsers are capable of running applications e.g. Java applets which can themselves be application programming interfaces API s to more sophisticated applications running on remote servers. In the cloud computing paradigm a web browser interfaces with and controls an application program that is running on a remote server. Through the browser the user can create edit save and delete files on the remote server via the remote application program.

Due to this shift in computer usage today s computer users are unlikely to want or need many of the bells and whistles provided by modern operating systems. They do not need to worry about file structures or organizing or backing up their data because much of their data is stored organized and backed up for them on the cloud. They do not need to worry about loading and updating software because most of the software they use is provided to them when needed as a cloud based service. Instead today s computer users are more interested in quickly logging onto their computer launching a web browser and accessing data and programs of interest to them which are accessible through the world wide web.

This document describes systems and techniques to manage and display information in a user interface.

In one aspect computer implemented methods and apparatus for displaying information content in a user interface is disclosed. The content to be displayed in the user interface which includes an information panel that contains at least one information element is received. The title of the information panel is displayed in the user interface. Information indicating a position within the user interface is also received. This information is used to determine if the at least one information element within the information panel is displayable within the user interface. If the at least one information element is displayable within the user interface the title of the at least one information element is displayed in the user interface at a second display position that is beneath a first display position of the information panel.

In another aspect computer implemented methods and apparatus for automatically expanding an information panel in a user interface is disclosed. The information panel can be displayed in its collapsed state within the user interface. When displayed in its collapsed state at least one information element that is contained within the information panel is not displayed in the user interface. Information indicating a position within the user interface is received. This information is used to determine whether the at least one information element is displayable within the user interface. If the at least one information element is displayable within the user interface the information panel is automatically displayed in its expanded state within the user interface. When the information panel is displayed in its expanded state the at least one information element is displayed in a second display position that is beneath a first display position of the information panel within the user interface.

In another aspect computer implemented methods and apparatus for automatically collapsing an information panel in a user interface is disclosed. The information panel can be displayed in its expanded state at a first position within the user interface. When the information panel is displayed in its expanded state at least one information element that is contained within the information panel is displayed in the user interface at a second position that is beneath the first position. Information indicating a position within the user interface is received. The information is used to determine whether the at least one information element is no longer displayable within the user interface. If the at least one information element is no longer displayable within the user interface the information panel is automatically displayed in its collapsed state in the user interface. When the information panel is displayed in its collapsed state the at least one information element contained within the information panel is not displayed in the user interface.

Features and advantages of the disclosed methods and apparatus comprise one or more of the following. The user interface can be a web browser user interface or a computer desktop user interface. When the user interface is a web browser interface the content to be displayed is the content of a web based application. The position within the user interface can be determined by a position of a pointing device within the user interface. The position within the user interface can also be determined by a position of a scroll bar within the user interface.

In many web based applications for example in a web based e mail application the left hand side of the display can contain a number of Graphical User Interface GUI objects hereafter referred to as information panels which organize information such as emails or contact lists that are displayed to a user. For example in a web based email application Inbox Draft Sent or Spam information panels can be provided to organize a user s emails. To facilitate navigation of the information contained within these information panels the panels can be made expandable and collapsible. For example when a user is looking for a particular email he or she has sent the Sent folder can be expanded and the remaining folders collapsed e.g. by clicking on the panels . These information panels however can also be automatically expanded or collapsed based on the user s actions within the web browser or user interface.

In one implementation in order to view the information contained within a collapsed information panel such as the Tasks panel the user can manually collapse one or more of the currently expanded information panels and and manually expand the Tasks information panel . The user can do this for example by clicking on the Tasks information panel to manually toggle its display state from a collapsed to an expanded state and by clicking on the Inbox information panel to manually toggle its display state from an expanded to a collapsed state. Alternatively as disclosed herein when a user manually expands an information panel the operating system and or browser can automatically collapse other information panels that are displayed in their expanded state. For example when the user clicks on the Tasks information panel to manually expand it the operating system and or browser can automatically collapse the Contacts and Inbox information panels and to maximize the screen area in the window that can be used to display the information elements under the Tasks information panel . Moreover as the user scrolls down the window the operating system and or browser can receive information about the user s movement within the user interface and or browser window and can use that information to automatically expand and collapse one or more of the information panels .

As shown in as a user scrolls through the items in an expanded Contacts information panel the operating system and or web browser can move the items under the Contacts information panel upward and can eventually move them off screen. When the user has scrolled through all of the items under the Contacts information panel the operating system and or browser can automatically collapse the information panel but continue to display its title. When the operating system and or browser automatically collapses the Contacts information panel as described above it can display the Inbox information panel directly beneath the Contacts information panel . As the user scrolls through the information elements under the expanded Inbox information panel the operating system and or browser can similarly move the information elements in the Inbox information panel upward and eventually off screen. As with the information elements under the Contacts information panel when the user has scrolled through all of the information elements under the Inbox information panel the operating system and or browser can automatically collapse the Inbox information panel but continue to display its title.

In addition to automatically collapsing information panels based on the user s actions within the user interface the operating system and or browser can automatically expand information panels. For example as the user scrolls down through the Contact and Inbox information panels the operating system and or browser can use information regarding the position of the scroll bar within the window to determine whether any information elements under the Tasks information panel have become displayable. When at least one such information element becomes displayable the operating system and or browser can automatically expand the Tasks information panel to display that information element beneath the title of the Tasks information panel. In one implementation when determining which information elements under an information panel are currently displayable within the window the operating system and or browser can reserve screen space to display the titles of the other information panels. For example when determining which information elements under the Tasks information panel are currently displayable the operating system and or browser can reserve screen space to display at least the titles of the Contacts Inbox and Drafts information panels.

The operating system and or browser can also automatically expand the Tasks information panel whenever the user has scrolled past the title of that information panel. For example when the operating system and or browser determines that the user has scrolled past the title of the Tasks information panel the operating system and or browser can automatically expand the Tasks information panel to reveal one or more information elements under the information panel. In one implementation the operating system and or browser can automatically expand the Tasks information panel to reveal as many information elements under the Tasks information panel as possible beginning with the first information element.

The process described above i.e. of automatically expanding and contracting an application s information panels to facilitate a user s view of information stored in an application is not limited to application based information panels such as the web based email application s information panels described above. Instead the process can be used to automatically expand and contract other types of information panels that can be displayed within any user interface such as a desktop display. In the context of a desktop user interface as opposed to an application user interface as described above an information panel is a GUI element that can be docked to an edge of the desktop display. Desktop user interface information panels can contain applications notifications browser histories document lists music play lists chat histories and user generated content such as pop up windows. For example the Talk application available from Google Inc. can be docked as an information panel in a desktop user interface on a computer display. When expanded the Talk information panel can reveal a list of chats the user has had with other users using the Google Talk application as well as metadata about the chats e.g. with whom they were conducted and the content of the chats themselves. Similarly the Docs application available from Google Inc. can be docked as an information panel to the side of a desktop user interface on a computer display. When expanded the Docs information panel can reveal a list of documents the user has created reviewed or edited using the Google Docs application or any other document creation and viewing application. The documents in the list can be stored locally on the user s computer or remotely on a network or cloud based server.

In general the operating system and or browser can automatically expand and collapse desktop user interface information panels based on a user s activity within or movement through the desktop user interface. For example as explained above the operating system and or browser can determine whether to automatically expand or collapse an information panel based on the position and movement of a scroll bar within the user interface or based on the position and movement of a cursor representing a pointing device e.g. a mouse within the user interface. The operating system and or browser can receive information about the current position of a scroll bar or cursor within the user interface and can automatically expand one or more information panels to reveal the information elements that are contained within those information panels as described above. For example if a user selects e.g. clicks on an information panel with a pointing device the operating system and or browser can expand that information panel to reveal its information elements to the user. In doing so the operating system and or browser can automatically collapse other information panels to reveal more content from the information panel selected by the user. Similarly as a user scrolls through the desktop user interface the operating system and or browser can determine from the position of the scroll bar when at least one information element within an information panel becomes displayable and can automatically expand the information panel when such a determination is made.

The operating system and or browser can also automatically collapse one or more information panels based on the position and movement of a scroll bar or cursor representing a pointing device within the user interface. For example the operating system and or browser can automatically collapse all information panels except for an information panel the user selects e.g. clicks on with a pointing device. The operating system and or browser can also determine based on the position of a scroll bar within the user interface when none of the information elements within an information panel are currently displayable within the user interface and can automatically collapse the information panel when such a determination is made. Similarly as described above the operating system and or browser can automatically collapse an information panel when a user has scrolled through all of the information elements that are contained within that information panel.

As shown in the Google Gmail Google Talk and Google Docs applications can be vertically stacked as a series of information panels in a vertical Panel Bar of a desktop user interface . Vertical Panel Bar can be displayed at the left edge of user interface as shown in the figures or along the right edge of user interface not shown . As with the information panels in an application user interface the information panels in a desktop user interface can be automatically expanded and collapsed by an operating system based on a user s activity within the user interface. The automatic expansion and collapse of information panels within a desktop user interface can occur in the same manner as the automatic expansion and collapse of information panels within an application user interface e.g. the Inbox Contacts Tasks and Drafts information panels in the web based email application as described above. As the user scrolls through the user interface the operating system can use information about the current position and movement of a scroll bar or cursor representing a pointing device to automatically expand an information panel in the Panel Bar . For example the operating system can expand an information panel when a user selects it e.g. clicks on it and can automatically collapse other information panels within the desktop user interface in order to provide the user with a deeper view into the selected information panel. Moreover the operating system can expand an information panel when the user scrolls past the title of the information panel or when the operating system and or browser determines that at least one information element within the information panel becomes displayable within the user interface. Similarly the operating system can automatically collapse an information panel in the Panel Bar when the user has scrolled past the last information element in the information panel or when the operating system and or browser determines that none of the information elements within the information panel are currently displayable.

As shown in when the operating system automatically expands an information panel such as the Talk information panel the individual information elements that are contained within that information panel are revealed. For example when a user scrolls past the Talk information panel the operating system can automatically expand the Talk information panel to reveal a number of recent chats the user has had with other users. The information revealed can include for example the person with whom the user chatted and the date and time not shown of the chat. Other information could also be revealed of course such as the duration of the chat and the content of the chat itself. Of course when different information panels are expanded different information elements can be revealed. For example if the operating system and or browser automatically expanded the Docs information panel the expanded information panel could reveal a list of documents the user has recently opened saved created edited copied renamed or viewed. And as discussed above were the user to scroll up and through all of the information elements in the Talk information panel the operating system could automatically collapse the Talk information panel and expand the Gmail information panel . Once expanded the Gmail information panel could reveal a list of email messages the user has recently sent or received.

In another implementation as shown in the Google Gmail Google Talk and Google Docs applications can be horizontally displayed as a series of information panels in a horizontal panel bar of desktop user interface . The horizontal panel bar can be displayed at the bottom edge of user interface as shown in the figures or along the top edge of user interface not shown . The Gmail Talk and Docs information panels can be automatically expanded and collapsed when displayed in horizontal panel bar in the same manner as described above when they are displayed in a vertical panel bar . As the user moves through the user interface the operating system can use information about the current position and movement of a horizontal scroll bar or cursor representing a pointing device to automatically expand and collapse the horizontally displayed Gmail Talk and Docs information panels in the horizontal panel bar . For example the operating system can expand an information panel when a user selects it or when the user scrolls past its title. Similarly the operating system can automatically collapse an expanded information panel in the horizontal panel bar when the user has scrolled past the title of the information panel.

As shown in when the operating system automatically expands an information panel such as the Talk information panel the individual information elements that are contained within that information panel are revealed. For example when a user scrolls past the Talk information panel the operating system can automatically expand the Talk information panel to reveal a number of recent chats the user has had with other users. Of course when different information panels are expanded different information elements can be revealed. And were the user to scroll past the Talk information panel the operating system could automatically collapse the Talk information panel and automatically expand the DOCS information panel . Once expanded the DOCS information panel could reveal a list of documents the user has recently opened saved created edited copied renamed or viewed.

The operating system and or browser can loop through the received information panels and can determine for each information panel whether the information panel is currently displayable and or should currently be displayed within the user interface . To make this determination the operating system can use information about the current size of the user interface or browser window and information about the user s current position within the user interface or browser window. The user s current position within the user interface or browser window can be determined from the position of a cursor or from the current position of a scroll bar within the user interface. If the information panel is not currently displayable within the user interface the operating system and or browser can select the next information panel in the list if one exists otherwise the process terminates.

However if the information panel is currently displayable within the user interface the operating system and or browser can determine if any of the information elements within the information panel is currently displayable and or should currently be displayed within the user interface . As before the operating system and or browser can use information about the current size of the user interface or browser window and information about the user s current position within the user interface or browser window to make this determination. For example as discussed above the operating system and or browser can determine that an information element within an information panel is currently displayable and should be displayed whenever the information about the current size of the user interface or browser window and the user s current position within the user interface or browser window indicates that the user has selected e.g. clicked on the information panel has scrolled past the title of the information panel or that the information elements within the information panel have become displayable.

If the operating system and or browser determines that no information elements are currently displayable in the user interface the operating system and or browser can display the title of the information panel in the user interface . By displaying only the title of the information panel the panel will appear to be in its collapsed state within the user interface. However if the operating system and or browser determines that at least one information element within the information panel is currently displayable in the user interface the operating system and or browser can display the title of the information panel and the title of the at least one currently displayable information element within the information panel in the user interface . The title of the at least one currently displayable information element can be displayed beneath the title of the information panel in the user interface. By displaying both the title of the information panel and the title of the at least one information element within the information panel the information panel will appear to be in its expanded state within the user interface. After displaying either the title of the information panel or the title of the information panel and the titles of all currently displayable information elements within the information panel the operating system and or browser can select the next information panel in the list of information panels if one exists otherwise the process terminates.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smart phone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations of the invention have been described above. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example the logic flows depicted in the figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or eliminated from the described flows and other components may be added to or removed from the described systems without departing from the scope of the invention. Accordingly other implementations are within the scope of the following claims.

