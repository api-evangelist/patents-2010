---

title: Testing of a battery of a computing device
abstract: Example embodiments relate to testing of a battery of a computing device. In example embodiments, a battery test may include determining whether charge control is available for a battery and reading battery data from the battery based on whether charge control is available for the battery. In addition, in example embodiments, the battery test may include determining whether the battery should be replaced based on the battery data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08498830&OS=08498830&RS=08498830
owner: Hewlett-Packard Development Company, L.P.
number: 08498830
owner_city: Houston
owner_country: US
publication_date: 20100831
---
Notebook computers and other portable computing devices generally include one or more batteries for providing power to the device in the absence of an Alternating Current AC power source. As the long term viability of other components has increased batteries have become one of the more common sources of problems in computing devices and are therefore commonly replaced under warranty.

To aid the manufacturer of the computing device or battery in troubleshooting problems encountered by customers many systems include a battery test procedure for determining whether a battery is faulty and requires replacement. The reliability of these testing procedures is of significant importance as reliable tests allow a manufacturer to avoid unnecessary expenses in replacing batteries that are not defective. In addition to reducing costs of the manufacturer a reliable battery testing method also reduces false positives thereby avoiding unnecessary inconvenience to the customer in replacing a properly functioning battery.

As detailed above the reliability of battery test procedures is of significant interest in reducing costs to a manufacturer and improving a customer s level of satisfaction by properly diagnosing system problems. Accordingly various embodiments disclosed herein relate to highly reliable battery test methods.

In particular example embodiments disclosed herein relate to testing of a battery of a computing device. In example embodiments a battery test may include determining whether charge control is available for a battery and reading battery data from the battery based on whether charge control is available for the battery. In addition in example embodiments the battery test may include determining whether the battery should be replaced based on the battery data.

In this manner by using a charge control feature example embodiments disclosed herein reliably diagnose each battery even when multiple batteries are installed in the system. Furthermore when it is determined that a battery should be replaced example embodiments reliably determine whether the battery is under warranty and if so generate a failure identifier to be provided to the manufacturer in fulfilling a warranty claim. In addition in some embodiments the requirement for a calibration procedure may be determined and if required the appropriate calibration type may be determined and automatically executed or schedule for automatic execution. Additional embodiments and applications of such embodiments will be apparent to those of skill in the art upon reading and understanding the following description.

Referring now to the drawings is a block diagram of an example computing device including instructions for testing a battery of computing device . Computing device may be for example a notebook computer a slate computing device a portable reading device a wireless email device a mobile phone or any other computing device powered at least in part by one or more internal or external batteries. In the embodiment of computing device includes processor and machine readable storage medium .

Processor may be one or more central processing units CPUs semiconductor based microprocessors and or other hardware devices suitable for retrieval and execution of instructions stored in machine readable storage medium . Processor may fetch decode and execute instructions to implement the battery testing procedure described in detail below. As an alternative or in addition to retrieving and executing instructions processor may include one or more integrated circuits ICs or other electronic circuits that include a number of electronic components for performing the functionality of one or more of instructions .

Machine readable storage medium may be any electronic magnetic optical or other physical storage device that contains or stores executable instructions. Thus machine readable storage medium may be for example Random Access Memory RAM an Electrically Erasable Programmable Read Only Memory EEPROM a storage drive a Compact Disc Read Only Memory CD ROM and the like. As described in detail below machine readable storage medium may be encoded with a series of executable instructions for testing each battery that provides power to computing device to determine whether each battery is functioning properly or should be replaced.

To implement the battery test procedure machine readable storage medium may include charge control determining instructions . Determining instructions may determine whether charge control is enabled for controlling a charging state of one or more batteries used to provide power to computing device . In other words determining instructions may determine whether computing device has the capability of selectively toggling each installed battery between a charging and discharging state. In some computing devices the charge control capability is provided by circuitry that enables selective application of charge to each battery using a keyboard controller or other hardware device. As detailed below when a charge control feature is enabled for computing device the battery test procedure may take advantage of this feature to more accurately read test data from the installed batteries even when computing device has access to multiple batteries.

The procedure for determining whether a charge control feature is enabled may vary depending on the particular implementation. In some embodiments determining instructions may first determine whether computing device is currently coupled to AC power. If not instructions may determine that charge control is not currently enabled as AC power may be required to take advantage of this feature. When AC power is available and only one battery is installed determining instructions may determine that charge control is available by switching AC power on and off. When AC power is available and multiple batteries are installed determining instructions may execute a query to determine whether computing device includes a charge control feature. For example when executing in an operating system OS environment instructions may issue a query to the Basic Input Output System BIOS of computing device via a Windows Management Instrumentation WMI command or a similar command in another operating system. Alternatively when executing in a Unified Extensible Firmware Interface uEFI environment instructions may issue the query directly to the BIOS. In response the BIOS may return a code or other value indicating whether a hardware charge control feature is available.

Machine readable storage medium may also include battery data reading instructions which may read battery data from each battery to be tested based on whether charge control is enabled. For example reading instructions may receive an indication from charge control determining instructions specifying whether charge control is supported and select a read procedure based on the received indication.

When charge control is not enabled reading instructions may simply read the test data from each battery. On the other hand when charge control is supported by computing device reading instructions may use a read procedure designed to improve the accuracy of the data obtained from each battery. For example reading instructions may first reset each of the batteries that provide power to computing device and in some embodiments may then confirm that each battery is in the reset state. Next reading instructions may set the battery to be tested to a charging state and confirm that the battery is in the charging state. Finally reading instructions may read the battery data from the battery to be tested while the battery is in the charging state. In order to read the battery data instructions may issue a command to the battery via for example the BIOS and or keyboard controller of computing device and in response receive data representing describing the battery. Reading instructions may then repeat this procedure for each additional battery to be tested. By setting each battery to the charging state prior to reading the battery data reading instructions may improve the accuracy of the data returned by the battery.

The particular commands used by reading instructions to change the state of the batteries may vary depending on the implementation. It should be noted that the commands detailed below are presented as examples of possible commands. The particular command types opcodes input data output data and return codes may vary depending on the application environment e.g. Windows Linux uEFI etc. battery type and a number of other parameters.

In some embodiments battery data reading instructions may utilize a series of WMI commands to set the charging state and subsequently read the battery data . For example in some embodiments a WMI command for setting the charging state of each battery may be implemented according to the format specified in the following table 

In addition a WMI command for determining the charging state of each battery may be implemented according to the format specified in the following table 

The command for reading the battery data may specify a battery number and may trigger return of a number of fields regarding the battery s design parameters e.g. design capacity design voltage etc. operating status e.g. cell voltages a terminal voltage etc. and other predetermined data fields e.g. a manufacturer serial number etc. . As a specific example when the battery complies with the Smart Battery System specification published by the Smart Battery System Implementers Forum SBS IF a WMI command for retrieving the battery data may be implemented according to the format specified in the following table 

To give a specific example using the example commands detailed above the commands for setting the charging state and reading the battery data for two batteries may be as follows assuming that charge control is enabled 

Machine readable storage medium may also include battery data analyzing instructions which may analyze the battery data received for each battery to determine whether each battery is functioning properly or should instead be replaced. In determining whether the battery is functioning properly analyzing instructions may consider a number of properties of the battery using the fields included in the battery data retrieved by reading instructions .

For example in testing a particular battery analyzing instructions may first determine the design voltage of the battery using the battery data and verify that the design voltage is within a predetermined range e.g. between 7200 mV and 14400 mV or is one of a number of predetermined values e.g. 7200 mV 7400 mV etc. . When the design voltage is outside of the predetermined range or is not one of the predetermined values instructions may determine that the battery is faulty and should be replaced.

After checking the design voltage instructions may determine the number of cells in the battery based on the design voltage and a predetermined voltage per cell. Analyzing instructions may then determine an operating voltage of each cell and determine a difference between the voltage of the cell with a minimum voltage and the voltage of the cell with a maximum voltage. When this difference exceeds a predetermined voltage e.g. 500 mV analyzing instructions may determine that one or more of the cells of the battery are faulty and that the battery should therefore be replaced.

Analyzing instructions may also consider the operating temperature of the battery in determining whether the battery should be replaced. For example analyzing instructions may read the current temperature of the battery from the battery data and determine whether the temperature value is within a predetermined threshold temperature range e.g. between 0 C. and 80 C. . If the temperature value is not within the predetermined threshold range instructions may determine that the battery is defective due to for example a faulty thermistor.

Analyzing instructions may also compare a design capacity of the battery and a value representing a charge capacity of the battery when it last reached full capacity. When the last full charge capacity exceeds the design capacity of the battery analyzing instructions may determine that the battery should be replaced.

When charge control is available for the battery analyzing instructions may also verify that the battery is charging properly. For example instructions may first verify that the current at the power supply terminal of the battery is greater than 0 and if not determine that a fuse in the battery is blown. Instructions may then verify that the voltage level at the power supply terminal of the battery exceeds a predetermined voltage provided that the current at the power supply terminal is greater than a predetermined amperage i.e. the battery is charging . This predetermined voltage may be selected based on the design voltage of the battery. To give a specific example if the design voltage is between 1.4 V and 1.5 V instructions may verify that the terminal voltage is greater than or equal to 1 V when the current at the power supply terminal is at least 0.5 A. When the terminal voltage does not exceed the predetermined voltage when the battery is receiving the predetermined level of current analyzing instructions may determine that the battery is not properly charging and therefore determine that the battery should be replaced.

Alternatively when AC power is unavailable or multiple batteries are installed and charge control is unavailable analyzing instructions may partially check the battery. In such cases analyzing instructions may omit the charging test and return a code indicating that the battery was not tested completely. For example when AC power is unavailable analyzing instructions may return a code indicating that computing device should be coupled to AC power and that the battery test should be repeated. Similarly when multiple batteries are installed and charge control is unavailable analyzing instructions may return a code indicating that the user should remove all but one battery run the test again and repeat this procedure for each battery.

In some embodiments analyzing instructions may also include logic for reducing the likelihood of a false positive by testing for various fringe cases. For example in some embodiments analyzing instructions may consider the temperature of the battery when the battery test indicates that the battery is not charging properly. For example if the battery is operating outside of a normal temperature range analyzing instructions may return a code indicating that the battery should be tested again when it returns to a normal temperature. As another example of a fringe case when the battery is in a state of very low charge or deep discharge e.g. when any cell has a voltage of less than 3V the results of the test may be inaccurate. Accordingly in such cases analyzing instructions may return a code indicating that the battery has not been charged recently and should therefore be charged completely using AC power.

Additional details regarding example analyzing instructions are provided in U.S. Pre Grant Publication No. 2007 0096689 Battery Analysis System and Method to John A. Wozniak incorporated by reference herein in its entirety. Furthermore other factors and tests for consideration by analyzing instructions in determining whether the battery is faulty will be apparent to those of skill in the art.

As with computing device of computing device may be a notebook computer a slate computing device a portable reading device a wireless email device a mobile phone or any other computing device powered at least in part by one or more internal or external batteries such as battery . As with processor processor may be a CPU or microprocessor suitable for retrieval and execution of instructions and or one or more electronic circuits configured to perform the functionality of one or more of the modules described below.

Basic Input Output System BIOS may include a series of instructions stored on a machine readable storage medium e.g. a Read Only Memory ROM chip or a flash memory device for managing the hardware included in computing device . In addition to identifying testing and initializing hardware devices included in or coupled to computing device BIOS may also provide an interface for accessing these hardware devices to an operating system or uEFI environment running in computing device . For example BIOS may support a Windows Management Instrumentation WMI command set for receiving commands from the Windows OS environment or a similar command set for an operating system other than Windows . Similarly BIOS may support a uEFI command set for receiving commands from an application running in a uEFI environment. In this manner battery test module may provide battery access commands to BIOS and in response BIOS may forward these commands to battery via keyboard controller or another hardware component of computing device .

Keyboard controller may be a hardware device for receiving keyboard input that in some embodiments may also be in communication with a controller of battery . For example keyboard controller may receive commands from battery test module via BIOS and in response emulate a smart battery selector to access battery via controller . These commands may be for example commands to read battery data or to control the charging state of battery . It should be noted that in some embodiments rather than using a keyboard controller computing device may issue commands to battery via another hardware component of computing device such as a dedicated microcontroller or other integrated circuit in communication with battery .

As detailed below computing device may include a series of modules for testing the functionality of battery . Each of the modules may include for example one or more hardware devices including electronic circuitry for implementing the functionality described below. In addition or as an alternative each module may be implemented as a series of instructions encoded on a machine readable storage medium of computing device and executable by processor . It should be noted that in some embodiments some modules are implemented as hardware devices while other modules are implemented as executable instructions.

Battery test module may manage the process of testing battery and any other batteries that provide power to computing device . Thus in some embodiments battery test module may execute as an application running in an operating system of computing device . Alternatively battery test module may execute as an application running in a Unified Extensible Firmware Interface uEFI environment of computing device . Regardless of the particular implementation battery test module may include a series of modules each for executing a portion of the battery test.

Test control module may control the procedure for detecting batteries available to computing device and reading the battery data for each battery based on whether charge control is available. Thus test control module may include charge detection module which may determine whether the computing device is currently coupled to an Alternating Current AC power source for charging battery . In making this determination test control module may for example use an Application Programming Interface API command provided by an operating system of computing device to determine whether AC power is available. As another example charge detection module may determine whether AC power is available based on a query sent to BIOS via a WMI or uEFI command.

Charge control module may determine whether charge control is available for battery and any other batteries available to computing device . In some embodiments charge control module may initially rely on the determination by charge detection module . For example charge control module may determine that charge control is unavailable when computing device is not currently coupled to an AC power source. On the other hand when computing device is currently coupled to an AC power source charge control module may determine whether there are multiple batteries currently coupled to computing device or alternatively whether battery is the only battery coupled to computing device . When battery is the only battery and AC power is available charge control module may determine that charge control is available as computing device may toggle battery between a charging and discharging state based on selective application of AC power to battery .

Alternatively when there are multiple batteries coupled to computing device charge control module may execute a query to determine whether a hardware charge control feature for controlling a charging state of each battery is available in computing device . Charge control module may determine whether this feature is available by for example transmitting a query to BIOS . Additional details for one implementation of charge control module are provided above in connection with charge control determining instructions of .

Data reading module may read battery data from battery based on whether charge control is available for battery . When charge control module determines that charge control is not available data reading module may simply read data from battery based for example on transmission of a command to BIOS . Alternatively when charge control module determines that charge control is available the read procedure may include resetting battery setting battery to a charging state and reading battery data after setting battery to the charging state.

After data reading module reads battery data test logic module may determine whether battery should be replaced based on battery data . Test logic module may consider for example the design voltage voltage levels in each cell terminal voltages and currents the battery temperature and a number of other factors. Test logic module may also determine whether calibration is required. For example test logic module may read a maximum error field from battery data which may represent an estimated error rate for the other operational values provided in battery data . When test logic module determines that the maximum error value is greater than a predetermined value e.g. 5 percent test logic module may determine that battery should be calibrated.

In response to execution of the above described analysis of battery data test logic module may return one or more result codes each corresponding to a particular condition of the battery e.g. functioning properly requires replacement requires calibration etc. . Additional details of an example implementation of test logic module are provided above in connection with battery data analyzing instructions of .

Battery test module may trigger execution of warranty module when test logic module determines that battery should be replaced. Warranty module may determine whether battery is under warranty by determining a warranty length of battery comparing the warranty length to an age value of battery and determining that battery is supported under warranty and should therefore be replaced under warranty when the warranty length is greater than the age value.

In determining the length of the warranty warranty module may in some embodiments extract a warranty type from a predetermined warranty field or alternatively from another field in battery data such as manufacturer name field . For example the manufacturer name field may be encoded such that the warranty type is separated from the manufacturer name using a delimiter e.g. a colon comma slash etc. . Warranty module may then determine a warranty length corresponding to the particular warranty type e.g. type 0 may correspond to 6 months type 1 may correspond to 1 year etc. . Alternatively warranty module may extract the warranty length directly from the manufacturer name field or another field in battery data . In such instances the warranty length may be encoded in battery data as a number of months e.g. 6 12 36 etc. or years e.g. 0.5 1 3 etc. .

To determine the age of the battery warranty module may in some embodiments calculate the age value as the lesser of an age of the computing device and an age of the battery . To determine the age of computing device warranty module may for example access a record on computing device or query a remote server using an identifier of computing device e.g. a serial number . To determine the age of battery warranty module may for example determine the value based on a manufacturing date of the battery obtained from battery data .

When warranty module determines that the battery should be replaced under warranty warranty module may then generate and output a failure identifier which may be a string of alphanumeric characters an integer or any other data type. In generating the failure identifier warranty module may encode various fields that may be used by a support agent in identifying computing device and the customer s entitlement to a replacement of the battery under warranty. For example warranty module may receive as input a system serial number a date the battery test executed a system warranty start date and or a test failure code outputted by test logic module . In response warranty module may output a value that encodes a product identifier e.g. a model number the failure code the warranty start date and or an indication that the battery is supported under warranty. Upon receipt of a failure identifier from a customer the support agent may trigger parsing of the failure identifier to start the battery replacement process.

Alternatively when the battery should be replaced but warranty module determines that the battery is no longer covered by the warranty warranty module may output a message to this effect. In some embodiments warranty module may also output a selectable element for purchasing a replacement battery. For example warranty module may identify the battery type and display a Uniform Resource Locator URL directing the customer to a website where he or she may purchase a new battery.

Calibration module may be triggered to manage a calibration process when test logic module determines that calibration of battery should be performed. Upon return of a calibration code by test logic module calibration module may first identify a calibration type of battery using battery data . For example some batteries may be calibrated by fully charging the battery then fully discharging the battery. Other batteries may require an additional full charge and or a wait period after charging the battery.

To identify the calibration type for battery calibration module may for example attempt to access a predetermined field included in battery data listing the type e.g. Type Type etc. . The calibration type may be a separate field in battery data or alternatively may be encoded in another field in battery data such as the manufacturer name field . When calibration module fails to read the calibration type from battery data calibration module may determine the calibration type using other information from battery data . For example calibration type may access a table or other similar data structure to determine the calibration type based on the manufacturer name of battery and or a model identifier of computing device .

After identifying the appropriate calibration type calibration module may determine whether an automatic calibration procedure is supported for battery for the particular calibration type. For example calibration module may support an automatic procedure for a predefined group of calibration types while requiring manual calibration by a user for other types. When calibration module determines that automatic calibration is supported calibration module may immediately start the calibration procedure for the identified calibration type or alternatively schedule the calibration procedure for a future time. The automatic calibration procedure may be executed by for example a uEFI application running in computing device . On the other hand when automatic calibration is not supported calibration module may output a series of steps of the manual calibration procedure for the identified calibration type such that the user of computing device may manually execute the calibration procedure.

Reporting module may be in communication with a support framework server for communication of the results of the test of battery . For example upon completion of test logic module reporting module may prepare and transmit a message identifying various parameters of the test such as the execution date battery type battery count test result code test duration battery data and the like. In this manner the manufacturers of computing device and or battery may gather and analyze data regarding the batteries installed in customer devices.

Battery may be any type of battery suitable for provision of power to computing device . Thus battery may be for example a Lithium Ion Li ion battery a Nickel Metal Hydride Ni MH battery a Nickel Cadmium Ni Cd battery or any other battery type. In some embodiments battery may be implemented in accordance with the Smart Battery System specification published by the SBS IF.

Controller may include electrical circuitry that executes logic for managing battery . For example controller may be a semiconductor based microprocessor a microcontroller or any other hardware device suitable for receiving and processing requests or commands from computing device managing charging and discharging of cells maintaining battery data and executing other procedures required for the proper operation of battery .

Battery cells may include one or more battery cells that store chemical energy suitable for conversion into electrical energy. Thus as mentioned above each battery cell may be a Li ion cell Ni MH cell NiCd cell or other type of battery cell. In operation chemical reactions in each of the cells may generate energy which in turn may be converted into electrical energy for powering computing device .

Battery data may include data describing various properties of battery . Battery data may be maintained in battery in one or more memory registers. Alternatively battery data may be maintained in a machine readable storage medium such as an Electrically Erasable Programmable Read Only Memory EEPROM . In operation battery data may be maintained by controller based on monitoring of the operation of battery .

In some embodiments battery data may include design parameters operational parameters manufacturer name warranty type and calibration type . Design parameters may maintain data regarding characteristics of the battery as designed such as a design capacity design voltage and serial number. Operational parameters may maintain data regarding characteristics of the battery as currently operating such as a last full charge capacity a remaining capacity an estimated error rate a cycle count an operating temperature a terminal voltage and current and voltages of each cell. Manufacturer name may identify the manufacturer of battery which as described above may be used in identifying the warranty length and calibration type. Warranty type and calibration type may be encoded in separate fields or alternatively may be included in another field such as manufacturer name . An example of the various fields included in battery data is presented above in Table 3.

Method may start in block and proceed to block where computing device may determine whether charge control is enabled for controlling a charging state of each battery that provides power to computing device . For example computing device may determine that charge control is enabled when AC power is present and either one battery is installed or multiple batteries are installed with a charge control feature present. Otherwise computing device may determine that charge control is not enabled.

Method may then proceed to block where computing device may read the battery data from the battery using a read procedure selected based on whether charge control is enabled. For example when charge control is not enabled computing device may simply read the battery data from each battery. Alternatively when charge control is enabled computing device may for each battery reset the battery set the battery to a charging state and read the battery data after setting the battery to the charging state. As detailed above following this procedure may provide for more accurate test data from the battery.

After computing device reads the battery data method may proceed to block where computing device may analyze the battery data to determine whether the battery should be replaced. Computing device may for example analyze the design voltage voltage levels in each cell terminal voltages and currents battery temperature and a number of other factors for various signs of battery failure. Additional implementation details are provided above in connection with battery data analyzing instructions of .

When computing device determines that the battery should be replaced method may proceed to block . In block computing device may determine whether the battery should be replaced under warranty by first determining a warranty length and a battery age using the battery data. For example computing device may extract the warranty length from a field in the battery data which may be a separate field or a field holding data for another element e.g. a manufacturer name . Computing device may then determine the battery age by for example determining the time difference between the current date and a manufacturing date of the battery obtained from the battery data. In some embodiments computing device may then set the battery age to the lesser of the age determined using the manufacturing date and an age of computing device .

After determining the warranty length and age value computing device may compare the two values. When the warranty length is greater than the battery age computing device may determine that the battery should be replaced under warranty and in some embodiments may output a failure identifier containing details regarding the test results. Method may then proceed to block where method may stop.

Method may start in block and proceed to block where battery test module may trigger test control module to manage the test of battery . An example method executed by test control module is described below in connection with . As detailed below test control module may manage the test process and return a result code to battery test module . Thus in block battery test module may receive the result code from test control module .

Method may then proceed to block where battery test module may determine whether the result code indicates a test failure. If so method may proceed to block where battery test module may trigger execution of warranty module to determine whether the customer is entitled to replacement of the battery under warranty. An example method executed by warranty module is described below in connection with . After execution of warranty module method may proceed to block . Alternatively when it is determined in block that the result code does not indicate a battery failure method may proceed directly to block .

In block battery test module may determine whether the result code indicates that battery should be calibrated. If so method may proceed to block where battery test module may trigger execution of calibration module to manage the calibration procedure. An example method executed by calibration module is described below in connection with . After execution of calibration module method may proceed to block . Alternatively when it is determined in block that calibration is not required method may proceed directly to block .

In block battery test module may display the results of the test indicating for example whether battery is functioning properly and if not details on obtaining a new battery. In some embodiments battery test module may also trigger reporting module for transmission of the results to a remote server such as support framework server . Method may then proceed to block where method may stop.

Method may start in block and proceed to block where test control module may detect the number of batteries available to computing device . Test control module may for example retrieve battery information for each battery up to a total number of supported batteries of computing device . Based on whether one or more fields in the battery data include actual data test control module may determine a count of the batteries available to provide power to computing device . For example test control module may determine that a particular battery is available when either a manufacturer name field or serial number is not empty or null and that the battery is not available when both fields are empty or null.

After test control module determines the number of batteries method may proceed to block where test control module may utilize charge detection module to determine whether computing device is currently coupled to AC power. If not method may proceed to block where test control module may determine that charge control is not available. Method may then proceed to block of . Alternatively when test control module determines that computing device is currently coupled to AC power method may proceed to block .

In block test control module may determine whether more than one battery is available based on the battery count determined in block . If only one battery is available test control module may proceed to block where module may determine that charge control is available as the battery may be toggled between charging and discharging by switching AC power on and off. Method may then proceed to block of . Alternatively when test control module determines that multiple batteries are installed method may proceed to block .

In block test control module may utilize charge control module to call a charge control query function provided by BIOS of computing device . In response test control module may receive an indication as to whether a hardware charge control feature is available in computing device . If this feature is available method may proceed to block where module may determine that charge control is available. Alternatively if a hardware charge control feature is not available method may proceed to block where module may determine that charge control is not available. After either block or block method may proceed to block of .

Referring now to in block test control module may determine whether charge control is available based on the determination in either block or block . If charge control is available method may proceed to block where test control module may execute a read procedure that takes advantage of the availability of charge control. For example module may for each available battery to be tested reset all batteries set the battery to be tested to charging and then read the battery data while the battery is charging. As detailed above use of this procedure may improve the accuracy of the battery data returned by the battery. Alternatively when it is determined in block that charge control is not available method may proceed to block where test control module may simply read the battery data from each available battery.

After execution of either block or block method may proceed to block where test control module may trigger execution of test logic module . As detailed above in connection with test logic module may analyze a plurality of data items included in battery data to determine whether the battery should be replaced and or whether the battery requires calibration.

After test control module triggers test logic module and receives a test code representing the results of the test method may proceed to block . In block test control module may determine whether the results of the test indicate a failure. If so method may proceed to block where test control module may re read the battery data and trigger the test logic up to a predetermined number of times e.g. 3 times . In this manner test control module may confirm that the test results are due to a faulty battery and are not a false failure due to for example a battery communication issue. Method may then proceed to block . Alternatively when it is determined in block that the test results did not indicate a failure method may skip directly to block .

In block test control module may return the result code received from test logic module to battery test module . Method may then proceed to block where method may stop.

Method may start in block and proceed to block where warranty module may determine the battery manufacturing date and the warranty date of computing device . To determine the battery manufacturing date module may for example read the date from battery data returned by the battery . To determine the warranty date of computing device module may for example read the date from a predetermined location in a storage device of computing device or alternatively contact a remote server to determine the date based on a serial number or other system identifier.

Method may then proceed to block where warranty module may determine whether the manufacturing date of the battery is after the system date. If so warranty module may infer that the battery was purchased after the original purchase date of computing device . Method may therefore proceed to block where warranty module may calculate an age value as the current date minus the sum of the battery manufacturing date and a predetermined grace period e.g. 90 days . This value represents the age of the battery as calculated with reference to the manufacturing date of the battery. After determining this value method may proceed to block described in detail below.

On the other hand when it is determined in block that the system date is on or after the battery manufacturing date method may proceed to block . In block warranty module may calculate the age value as the current date minus the system warranty date. Method may then proceed to block .

In block warranty module may determine the warranty length using battery data of the battery. For example warranty module may access a predetermined field in battery data that stores the warranty type which may correspond to a warranty length. Alternatively warranty module may directly determine the warranty length using battery data .

After determining the warranty length method may proceed to block where warranty module may determine whether the warranty length is greater than the determined age value. If so warranty module may determine that the battery is still under warranty. Accordingly method may proceed to block where warranty module may generate and return a failure identifier that encodes information regarding the battery and the circumstances of the battery failure.

Alternatively when it is determined in block that the warranty length is not greater than the age value warranty module may determine that the battery is no longer covered under warranty. Accordingly method may proceed to block where warranty module may return a value indicating that the battery is no longer covered under warranty. In some embodiments warranty module may also provide a URL or other information that may be used by the consumer to purchase a new battery. After execution of either block or method may proceed to block where method may stop.

Method may start in block and proceed to block where calibration module may determine the calibration type using battery data . Calibration module may for example attempt to read the calibration type from a calibration type field or another field in battery data .

Method may then proceed to block where calibration module may determine whether the calibration type was located in battery data . If so method may skip directly to block described in detail below. Alternatively if the calibration type was not located in battery data method may proceed to block where calibration module may look up the calibration type using the battery manufacturer and or an identifier of computing device . Method may then proceed to block .

In block computing device may determine whether automatic calibration is available for the determined calibration type and if so whether the user has enabled automatic calibration. If so method may proceed to block where calibration module may immediately start the automatic calibration procedure or alternatively schedule the automatic calibration procedure for a future time. Method may then proceed to block where method may stop.

Alternatively if automatic calibration is unavailable for the determined calibration type or is disabled method may proceed to block . In block calibration module may retrieve and return manual calibration instructions for the determined calibration type. Method may then proceed to block where method may stop.

According to the foregoing example embodiments disclosed herein relate to a reliable battery test that thoroughly diagnoses each battery available in a system. For example embodiments disclosed herein utilize a charge control feature to more reliably diagnose each battery of a computing device even when multiple batteries are available. Furthermore when it is determined that a battery should be replaced example embodiments reliably determine whether the battery is supported under warranty. In addition in some embodiments the requirement for a calibration procedure may be determined and if calibration is required the appropriate calibration type may be determined and automatically executed or scheduled for automatic execution.

