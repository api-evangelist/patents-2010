---

title: Method and system for protocol embedded automated test control
abstract: A method and system of an embodiment may include executing a first test case using a user record provisioned on a network, the first test case comprising transmitting at least a first portion of the data to a network element being tested and receiving a response from the network element being tested in the first test case based at least in part on the configuration data for the first test case contained in the transmitted first portion of the data, executing a second test case using the user record provisioned on the network, the second test case comprising transmitting at least a second portion of the data to a network element being tested and receiving a response from the network element being tested in the second test case based at least in part on configuration data for the second test case contained in the transmitted second portion of the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08027435&OS=08027435&RS=08027435
owner: Verizon Patent and Licensing Inc.
number: 08027435
owner_city: Basking Ridge
owner_country: US
publication_date: 20100701
---
The present application is a continuation of U.S. patent application Ser. No. 11 956 091 filed Dec. 13 2007 entitled METHOD AND SYSTEM FOR PROTOCOL EMBEDDED AUTOMATED TEST CONTROL the disclosure of which is hereby incorporated by reference in its entirety.

Automated testing of complex networks can involve numerous network elements which may work independently. For complex testing scenarios it is frequently necessary to coordinate activities on two or more network elements involved in a test. Typically this may involve the provisioning of user records or subscriber records on the network for each individual test case. For complex networks the number of test cases can be in the hundreds or even thousands. This quickly results in a large number of subscriber or user records required to be provisioned on a network for testing. The provisioning of these records can be difficult to manage time consuming and expensive.

An exemplary embodiment provides a system for protocol embedded automated test control. The system enables a user to test a complex network utilizing configuration data or protocols contained within test data to reduce the number of user or subscriber records required to be provisioned on a network.

Referring to a system for protocol embedded automated test control utilizing a programmable network element as a test responder in accordance with an exemplary embodiment is illustrated. is a simplified view of system and may include additional elements that are not depicted. As illustrated test driver may be communicatively coupled to network . Network may be communicatively coupled to additional network elements including tested network element and network element . One or more databases may be communicatively coupled to network including testing database .

Tested network element network element test driver and testing database may transmit and or receive testing data for one or more test cases to and or from network . The testing data may be transmitted and or received utilizing a standard telecommunications protocol or a standard networking protocol. For example one embodiment may utilize Session Initiation Protocol SIP . In other embodiments the testing data may be transmitted and or received utilizing other Voice Over IP VOIP protocols. For example testing data may also be transmitted and or received using Wireless Application Protocol WAP Multimedia Messaging Service MMS Enhanced Messaging Service EMS Short Message Service SMS Global System for Mobile Communications GSM based systems Code Division Multiple Access CDMA based systems Transmission Control Protocol Internet TCP IP Protocols or other protocols and or systems suitable for transmitting and receiving testing data. Testing data may be transmitted and or received wirelessly or may utilize cabled network connections or telecom connections such as an Ethernet RJ45 Category 5 Ethernet connection a fiber connection a traditional phone wireline connection a cable connection or other wired network connection. Tested network element network element test driver and testing database may use standard wireless protocols including IEEE 802.11a 802.11b and 802.11g. Tested network element network element test driver and testing database may also be connected to network via protocols for a wired connection such as an IEEE Ethernet 802.3.

Network may be a local area network LAN a wide area network WAN the Internet cellular networks satellite networks an advanced intelligent network or other networks that permit the transfer and or reception of data to and or from tested network element network element test driver and testing database . Network may utilize one or more protocols of tested network element network element test driver and testing database . Network may translate to or from other protocols to one or more protocols of tested network element network element test driver and testing database . Network may be a network utilized for testing and integrating one or more network components into a network such as an advanced intelligent network.

Tested network element and network element may be one or more servers or server like devices such as Session Initiation Protocol SIP servers. Tested network element and network element may include one or more processors not shown for recording transmitting receiving and or storing data. Although tested network element and network element are depicted as single servers it should be appreciated that the contents of tested network element and network element may be combined into fewer or greater numbers of servers or server like devices and may be connected to one or more data storage systems. Furthermore tested network element and network element may be local remote or a combination thereof to each other.

Test driver may be a desktop a laptop a server or other computer capable of utilizing testing automation software. Test driver may read one or more test records to transmit test data to one or more network elements being tested. Test driver may generate phone calls or other data transmissions to one or more network elements such as tested network element as part of a test case. Test driver may transmit test data having embedded configuration information. The configuration information may enable a test responder such as network element to identify a test case as well as the appropriate response to a test case. In one or more embodiments test driver may use a portion of a phone number such as the last four digits of a calling party phone number transmitted in the test data to identify a test case. For example test driver may call tested network element the network element being tested and may call provisioned number 301 123 1234 from a calling party number of 202 123 0001. Tested network element may receive the call and may query network element for information on how to respond to the call. Network element may be programmed to parse the test data according to a predetermined protocol and extract the test case identifier. Network element may then follow preprogrammed logic to respond to the appropriate test case. In this example the last four digits of the calling party s number 0001 is interpreted by network element to equate to test case number . Network element may use stored logic or may query one or more network resources to determine that a call for test case number one is to be routed to 301 987 6543. A second test case may involve test driver calling tested network element on the same provisioned number 301 123 1234 from a calling party number of 202 123 0002. Tested network element the system being tested may query network element for information on how to respond to the call. Network element may parse the last four digits of the calling party s number 0002 and may determine that the logic for test case number should be utilized. Network element may forward the call to 202 234 5678. Network driver and network element may provide a variety of embedded test case identifiers in one or more fields and may additionally pass numbers or other identifiers which may correspond to an appropriate network action to take for a test case. Other additional test cases may be run over the same provisioned number and may thus enable one or more network testers to run multiple test cases requiring only the subscriber records for 301 123 1234 already provisioned on the network

In another example test driver may embed a test identifier in a subscriber identifier or a user identifier. Test driver may embed other configuration data or control codes in the test data which may specify desired actions responses or characteristics for a test case. For example a test driver testing a system providing data connections to one or more users may embed control codes specifying a quality of service to be provided for the test connection a bandwidth to be provided for the test connection one or more network addresses to be assigned and or other characteristics to be set for a test case. Tested network element being tested by test driver may receive data properly formatted and data which falls within acceptable testing constraints. The tested network element may be unaware of embedded configuration information. The tested network element may therefore be tested under proper conditions e.g. as if it were on the actual production network receiving live data corresponding to the situation a particular test case was designed to test. Other network elements or test responders which interact with tested network element the network element being tested may however parse the embedded configuration information and may produce a desired response to tested network element . The embedding of configuration information in the test data and its interpretation by test driver or test responders such as network element may enable the testing of a complex network requiring a significantly reduced amount of subscriber or user information to be provisioned on the network. The number of provisioned records may reflect the number required for a single test case the number of different types of service to be tested or the number of different types of equipment to be tested or other test dependent factors. The number of provisioned records for test dependent factors may thus be closer to provisioning one set of records per type of test which may be a significant reduction from provisioning a set of records for each test. In some embodiments provisioned records may be reused for different types of tests and may further reduce the need for provisioning additional subscriber or user records on a test network.

Test driver may read one or more test records from local storage from testing database or from other storage to which it is communicatively coupled. Test driver may utilize only a portion of the one or more test records for a single test case and may transmit that portion for the running of the test case. In some embodiments test driver may read data providing a template for a test case and may automatically increment or modify one or more portions of the data to represent data for a particular test case. Test driver may combine one or more portions of data from separate sources to generate one or more test cases. Test driver may communicate with a network element or a test responder to provide logic or data for parsing configuration data for one or more test cases.

Network element may be a test responder for one or more test cases involving tested network element . Network element may be a service switching point a signaling gateway a service control point a service data point an intelligent peripheral an application server a session initiation protocol server or a network node capable of being programmed to parse embedded configuration data from testing data and producing a desired response. Network element may parse one or more portions of data received from tested network element such as a calling party identifier or calling party number a dialed number a called party number or a called party identifier to determine an appropriate response to a network element currently being tested such as tested network element . Network element may be programmed with logic mapping an appropriate response to configuration data embedded in received test data. The programmed logic may be compatible with logic which may be used to embed appropriate test configuration data by test driver . Network element may also query one or more network elements or network resources to determine an appropriate response. For example network element may query testing database or test driver using a parsed test case identifier in order to obtain the appropriate response to return to a network element currently being tested.

Network element may provide application programming interfaces APIs interface tables remote procedure calls rpcs web services Extensible Markup Language XML based interfaces Simple Object Access Protocol SOAP based interfaces and other interfaces for sending or receiving test information. Network element may receive data from test driver database or other network resources. Network element may store test case parsing logic and rules locally or may utilize testing database or other storage to which it is communicatively coupled. The APIs or interfaces of network element may enable test driver or another element to load test case data or logic on network element . Network element may also contain a user interface for entering viewing or editing testing logic and data.

Testing database may be a relational database an object oriented database one or more flat files a service data point networked storage or other storage communicatively coupled to network . Testing database may be utilized to store test cases test records subscriber records user records test results program logic provisioning data and other testing related data.

Tested network element may be a network element currently being tested. Tested network element may be a service switching point a signaling gateway a service control point a service data point an intelligent peripheral an application server a session initiation protocol server or a network node. Tested network element may receive test data from one or more test drivers such as test driver . Tested network element may process the test data as part of a desired test operation without interpreting the embedded configuration data. The embedded configuration data may enable a second network element interacting with tested network element to provide a response desired for a specified test case to tested network element . For example tested network element may be a service switching point of an advanced intelligent network. Tested network element may receive a phone call from test driver . Tested network element may send a query to network element which may be a service control point to determine how to handle the call. The query may contain one or more portions of data received from test driver such as a calling party identifier calling party number a dialed number a called party number or a called party identifier. Network element may parse the last four numbers of a calling party number which may provide a first test case identifier. Network element may lookup the first test case identifier or may apply predetermined logic to the first test case identifier to determine the routing of the call. A second query received by network element from tested network element may be parsed to provide a second test case identifier. Network element may lookup the second test case identifier or may apply predetermined logic to the second test case identifier to determine that the call is to be routed to a second destination number to be terminated to be transferred to voicemail or to have another action performed in accordance with the specified test case. Both test cases may utilize a single provisioned number on the network and may thus reduce the need for additional subscriber records for multiple test cases. This example may be extended to accommodate additional test cases also utilizing the single subscriber number. In some embodiments or for some test cases it may be necessary to provision additional user or subscriber records. However the programmability of network element and the use of embedded test case configuration information in test data may enable the reduction of user or subscriber records required to be provisioned on a network.

The various components of system as shown in may be further duplicated combined and or integrated to support various applications and platforms. Additional elements may also be implemented in the systems described above to support various applications.

Referring to a system for protocol embedded automated test control utilizing a computer with test automation software as a test responder in accordance with an exemplary embodiment. is a simplified view of system and may include additional elements that are not depicted. As illustrated may contain many of the same elements as discussed in reference to including test driver tested network element network and testing database . may include test responder .

Test responder may be utilized to provide interaction with a system under test to interpret embedded configuration data and to provide appropriate responses to test data for one or more test cases. Test responder may be a laptop desktop server personal digital assistant PDA or other computer capable of interpreting embedded configuration data and providing appropriate responses to test data for one or more test cases. Test responder may utilize testing automation software. Test responder may be used to emulate one or more pieces of network equipment interacting with a system under test such as tested network element . Test responder may be useful when it is easier to emulate the response provided by network equipment rather than programming the equivalent network equipment to parse embedded configuration data and to respond appropriately. Test responder may also accommodate multiple network addresses and may emulate multiple network elements.

Test responder may be programmed with logic mapping an appropriate response to configuration data embedded in received test data. The programmed logic may be compatible with logic which may be used to embed the appropriate test configuration data by test driver . Test responder may also query one or more network elements or network resources to determine an appropriate response. For example test responder may query testing database or test driver using a parsed test case identifier to obtain the appropriate response to return to a network element currently being tested. Test responder may provide additional options for testing including test diagnostic information logging reporting the ability to retry a response the ability to roll back or undo a testing transaction and other testing options.

Test responder may provide application programming interfaces APIs interface tables remote procedure calls rpcs web services Extensible Markup Language XML based interfaces Simple Object Access Protocol SOAP based interfaces and other interfaces for sending or receiving test information. Test responder may receive data from test driver database or other network resources. Test responder may store test case parsing logic and rules locally or may utilize testing database or other storage to which it is communicatively coupled. The APIs or interfaces of test responder may enable test driver or another network element to load test case data or logic on test responder . Test responder may also contain a user interface for entering viewing and or editing testing logic and data.

In one or more embodiments test responder may be used to emulate an application server interacting with a system under test such as tested network element . Test responder may receive a service request such as a web service request from tested network element . Test responder may parse the service request and may retrieve a test case identifier from a subscriber identification field. The test case identifier may correspond to a first test case requiring a simple extensible markup language XML response. Test responder may provide a simple XML response to tested network element . Test responder may receive a second service request from tested network element and may parse it to retrieve a second test case identifier from a subscriber identification field. Test responder may query one or more network elements or may use programmed logic to determine an appropriate response. The second test case identifier may correspond to a test case requiring a complex XML response from the emulated application server. Test responder may respond accordingly.

The various components of system as shown in may be further duplicated combined and or integrated to support various applications and platforms. Additional elements may also be implemented in the systems described above to support various applications.

Referring to a system for protocol embedded automated test control testing multiple network elements is illustrated in accordance with an exemplary embodiment. is a simplified view of system and may include additional elements that are not depicted. As illustrated may contain test driver network paths network elements and test responder .

Test driver may be a desktop a laptop a server or other computer capable of utilizing testing automation software. Test driver may read one or more test records to transmit test data to one or more network elements being tested. Test driver may generate phone calls or other data transmissions to one or more network elements as part of a test case. Test driver may transmit test data containing configuration information embedded in the test data enabling the identification of a response to a test case. Test driver may contain one or more of the capabilities or characteristics of test driver of . Test driver may also test one or more network elements depending on the embedded test configuration data. For example depending on a calling party area code test driver may transmit data to network element utilizing network path to network element utilizing network path or to network element utilizing network path .

Network elements and may represent network elements being tested. Network elements and may be service switching points signaling gateways service control points service data points intelligent peripherals application servers session initiation protocol servers or network nodes. Network elements and may contain one or more of the capabilities or characteristics of tested network element . Network elements and may send one or more requests utilizing corresponding network paths and to test responder .

Test responder may contain one or more of the capabilities or characteristics of test responder . Test responder may parse configuration information from a request from a network element to determine a test case identifier or other indicators which may be used to lookup or generate an appropriate response. Test responder may also parse additional configuration or control information to determine which network element to respond to. For example test responder may receive a request from network element on network path . Test responder may parse the request and extract a calling party number. The area code may have been parsed by test driver to send a transmission to network element . However test responder may parse the last four digits of the calling party number to obtain a test case identifier. Test responder may also parse the first three digits of the local number which may map to network element . Thus test responder may send a response to network element . By parsing one or more portions of one or more fields of test data a test responder or test driver may provide additional flexibility in handling test cases. This may enable a test responder or a test driver to test multiple network elements under multiple test cases while reducing the number of provisioned user or subscriber records required on a network.

The various components of system as shown in may be further duplicated combined and or integrated to support various applications and platforms. Additional elements may also be implemented in the systems described above to support various applications.

At block the test cases may be designed. The design of the test cases may include the provisioning of one or more user or subscriber records and the design of the logic to be utilized by test drivers test responders and or programmable network elements to parse embedded control or configuration data from data records. The design of the test cases may include the design of the protocol or format of any embedded control or configuration data. The design of test cases may include which fields or portions of fields in the transmitted data to embed one or more control codes in which control codes may be embedded in those fields the appropriate response to the control codes test case identifiers and other embedded control or configuration data details. The design of the test cases may include planning for lookups APIs or services which may provide an appropriate response when queried using a test case identifier or a control code. The design of the test cases may include planning for one or more call generators or emulators.

At block the data records may be setup. This may include one or more sets of test data which may correspond to provisioned subscriber or user records. The data records may be setup for every test case planned or template data records may be used and variables may be looked up and substituted into a template to create a data record for a test case as test cases are run.

At block the test drivers test responders and or programmable network elements may be programmed to parse and interpret embedded control and or configuration data from data records. The test drivers test responders and or programmable network elements may be programmed to lookup appropriate transmissions responses or emulations from local storage or storage to which they are communicatively coupled. Test drivers and test responders or programmable network elements may be tested to test compatibility between the embedding of control codes and the parsing of and response to such control codes.

At block a test case may be initiated. This may include a test driver such as test driver or initiating a transmission to a network element such as tested network element or network elements or . A network element being tested such as tested network element or network elements or may send a request to a test responder or a programmable network element.

At block a test responder or a programmable network element such as test responders and or network element may receive the request. The test responder or network element may parse the request and interpret embedded data.

At block the test responder or programmable network element may identify the test case or may use another identifier to determine the appropriate response to the request. The test responder may generate a response and send a response to one or more network elements being tested. The response may be sent to the network element from which the transmission was received or the response may be sent to one or more additional network elements which may be under test. The recipient of the response may be identified as part of the configuration data sent in the transmission the recipient may looked up in a query by a responder or the recipient may be set to a default value. In one or more embodiments no response may be sent.

At block the test driver such as test driver or may determine if additional test cases need to be run. If there are no additional test cases the method may proceed to block . If there are additional test cases the method may continue at block .

At block the test driver or a separate system may modify the test data to contain embedded control data corresponding to an additional test case. In one or more embodiments data may not be modified and new data for a subsequent test case may simply be fetched or retrieved from storage communicatively coupled to a test driver. The method may then return to block to initiate a subsequent test case. Method is not limited to a set number of iterations and may be repeated for one or more test cases. Iterations may occur automatically and may be controlled by a test driver. A test driver such as test driver may repeat method to perform one or more test cases specified in data records stored on in storage communicatively coupled to test driver .

In the preceding specification various preferred embodiments have been described with reference to the accompanying drawings. It will however be evident that various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

