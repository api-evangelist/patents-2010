---

title: Initiation of storage device scans
abstract: Example embodiments relate to initiation of storage device scans based on a record of existing scans of the storage device. In particular, example embodiments include a mechanism that maintains a record of existing scans of the storage device including an entry for each scan initiated by one of a plurality of scanning processes. In some embodiments, the record of existing scans may then be accessed in determining whether to initiate or permit initiation of a new scan.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08572728&OS=08572728&RS=08572728
owner: Hewlett-Packard Development Company, L.P.
number: 08572728
owner_city: Houston
owner_country: US
publication_date: 20100608
---
As user reliance on computing devices has increased applications designed for preventive maintenance have increased in importance. A typical computing device now includes numerous maintenance applications that run on a regular basis including virus and malware scanners disk defragmenters and registry cleaners. In addition to maintenance software many computing devices include applications designed to increase usability of the device such as file or email indexing applications and software update programs. Each of these programs may require constant or intermittent access to a storage device included in the computing device.

Paradoxically as the number of applications designed to improve usability increases the user s quality of experience may be negatively affected. In particular when multiple scanning programs are simultaneously running on the computing device the user may experience slowdowns or may even be unable to use the device until the applications have completed execution.

When a computing device is executing multiple applications that require frequent disk access a user of the computing device may experience slowdowns or even be unable to use the computing device. To address this issue example embodiments disclosed herein provide for initiation of storage device scans based on a record of existing scans of the storage device.

In particular in some embodiments a record of existing scans is maintained to include an entry for each scan initiated by one of a plurality of scanning processes. In some embodiments the record of existing scans may then be accessed in determining whether to initiate or permit initiation of a new scan by a particular scanning process. In this manner a number of scanning processes running on a computing device may coordinate their operation in a cooperative manner thereby minimizing slowdowns due to simultaneous access to the storage device. Additional embodiments and applications of such embodiments will be apparent to those of skill in the art upon reading and understanding the following description.

In the description that follows reference is made to the term machine readable storage medium. As used herein the term machine readable storage medium refers to any electronic magnetic optical or other physical storage device that contains or stores executable instructions or other data e.g. a hard disk drive flash memory etc. .

Referring now to the drawings is a block diagram of an example computing device including a record of existing scans of a storage device . Computing device may be for example a desktop computer a laptop computer a touch screen computer a handheld or slate computing device a mobile phone or the like. In the embodiment of computing device includes processor storage device and machine readable storage medium .

Processor may be a central processing unit CPU a semiconductor based microprocessor or any other hardware device suitable for retrieval and execution of instructions encoded in machine readable storage medium . In particular processor may fetch decode and execute instructions to execute a scanning process that implements the scan management process described herein.

Storage device may be for example a hard disk drive a solid state drive a nanodrive a holographic storage device or any other storage device that provides data storage capability to computing device . In some embodiments storage device is an internal component of computing device while in other embodiments storage device is an external component connected to computing device with a cable or via a wireless connection. Regardless of the configuration storage device may be accessible to computing device via an appropriate communications medium such as a bus cable radio frequency field etc.

During operation of computing device a plurality of scanning processes may access storage device to perform a number of scans. For example a scanning process may perform a virus or malware scan registry clean up file indexing procedure or any other procedure that requires constant or intermittent access to storage device .

As illustrated storage device may maintain a record of existing scans detailing scans initiated by the plurality of scanning processes. The record of existing scans may include inter alia an entry for each in progress initiated by one of the plurality of scanning processes. Each entry in record may include for example an identifier for the particular scan instance an identifier of the associated scanning process and or details about execution of the particular scanning process e.g. whether it is in progress when the scan started an estimated duration etc. . It should be noted that although illustrated as included in storage device record of existing scans may be stored in any storage medium of computing device . As described in detail below each of the scanning processes may access record of existing scans to implement a cooperative process for limiting simultaneous access to storage device .

Machine readable storage medium may be an electronic magnetic optical or other physical device that contains or stores executable instructions. In particular processor may execute instructions stored in machine readable storage medium . Instructions may be included in each scanning process to implement the cooperative scan management process described in detail below.

Scan initiation indication receiving instructions may receive an indication for the particular scanning process to initiate a new scan that accesses storage device . This indication may be provided for example by a user through interaction with a user interface of the scanning process e.g. clicking a start button . As another example this indication may be provided at a predetermined time by a scheduler executed by the scanning process by the operating system or by another scheduling application.

Upon receipt of the indication to begin a scan the scanning process may execute a number of instructions to verify that the scan has permission to initiate a new scan. In particular record accessing instructions may access the record of existing scans to determine whether to initiate the new scan.

Record accessing instructions may use a number of techniques in determining whether to initiate a new scan. In some embodiments record accessing instructions may determine that the new scan may be initiated when the total number of in progress scans is less than a maximum threshold. For example exclusive access to storage device may be provided to a single in progress scan using a threshold of one. In this manner the record of existing scans would act as a semaphore that may only be assigned to a single process at a time. This number may be increased by the scanning processes or by the user depending on a desired performance level. In other embodiments record accessing instructions may determine whether to initiate the scan based on storage device accesses. For example record accessing instructions may only allow initiation of a new scan when a rate of storage device accesses e.g. reads per second is below a threshold. Other suitable methods for determining whether to initiate a new scan based on record of existing scans will be apparent to those of skill in the art.

Scan initiating instructions may initiate the scan by the scanning process when record accessing instructions determine that the scan may be initiated. In particular scan initiating instructions may begin accessing storage device to execute the particular scan e.g. a virus or malware scan registry clean up disk defragmentation file indexing etc. . Alternatively when it is determined that the scan may not be initiated due to the presence of other in progress scans the scanning process may halt execution until for example receipt of a next initiation indication or expiration of a predetermined time period.

In addition when the scan is initiated record updating instructions may update record of existing scans to include an entry for the current scan. In updating record the scanning process may provide details for inclusion in the entry including for example an identifier of the scanning process and any details about execution of the process such as a start time an estimated duration and the like.

As with processor of processor may be a central processing unit CPU a semiconductor based microprocessor or any other hardware device suitable for retrieval and execution of records API user interface application and scanning process . As with storage device storage device may be an internal or external hard disk drive solid state drive nanodrive holographic storage device or other storage device that provides data storage capability to computing device .

In the embodiment of storage device maintains a record of existing scans of storage device initiated by a plurality of scanning processes such as scanning process . As illustrated record of existing scans may include a number of fields such as a scan handle which may be a unique identifier for a particular instance of a given scanning process which as described in detail below may be generated by records API when updating record of existing scans . This handle may be for example a globally unique identifier GUID a random set of characters or numbers e.g. a random dword or any other identifier sufficient to uniquely identify each scan instance. In addition record of existing scans may include a scanning process identifier an in progress value indicating whether the particular scan is running e.g. yes or no a scan start date and time and a estimated scan duration.

Records API may include a series of instructions encoded on a machine readable storage medium of computing device . In some embodiments records API may serve as an intermediary between each scanning process and record of existing scans . As described below one or more of instructions may be presented to user interface application and each scanning process as an API function. In this manner API may receive function calls from user interface application and each scanning process and in response modify retrieve or otherwise access record of existing scans . It should be noted that in other embodiments the user interface application and scanning processes may directly access and manage record of existing scans without the use of records API as an intermediary.

Records update receiving instructions may receive an update message from a particular scanning process indicating that the scanning process is initiating a new scan. As described above this update message may be a function call to records API which may direct API to create a new record in record of existing scans . The update message may include for example an identification of the scanning process a desired start time and date which may be the current time and or an estimated scan duration.

Update authentication instructions may perform an authentication process upon receipt of an API function call from a scanning process to ensure that the process is authorized to access and modify the record of existing scans . In some embodiments authentication of scanning process may be certificate based. In particular each scanning process may obtain a certificate from a certificate authority executing in computing device . When making a function call the scanning process may provide the certificate to authentication instructions and in response API may authenticate the certificate with the certificate authority using a root certificate to verify the identity of the scanning process. As an alternative an OEM or other party may provide a key to each authorized vendor or developer such that scanning process may provide the key to API which in turn may verify the key. Other suitable authentication schemes will be apparent to those of skill in the art.

Upon proper authentication of scanning process records updating instructions may update the record of existing scans with a new entry containing information regarding the new scan initiated by the respective process. In particular records updating instructions may access record of existing scans and create a new record containing the scan details included with the records update message provided by scanning process to receiving instructions . In addition in some embodiments records updating instructions may generate a handle for the particular scan instance which as described above may be a GUID a random numeral or string and the like.

Notifying instructions may analyze record of existing scans to determine whether scanning process may initiate the new scan and in response notify scanning process of the decision. In particular notifying instructions may first analyze record of existing scans to identify all in progress scans. In response notifying instructions may determine whether the total number of in progress scans is less than a predetermined threshold and if so may determine that the scan may be initiated and notify scanning process accordingly. Alternatively notifying instructions may use another value to determine whether to permit initiation of the scan such as a number of accesses to storage device in a predetermined period of time e.g. accesses per second .

When analysis of record of existing scans results in a determination that the new scan may not be initiated notifying instructions may notify scanning process that the scan cannot be started immediately. In some embodiments notifying instructions may include an estimated time at which scanning capacity will be available such that scanning process may again attempt to initiate the scan at the estimated time. As an alternative notifying instructions may simply notify scanning process that it should not begin the scan and queue a notification to scanning process when one or more existing scanning processes finish. In this manner notifying instructions may notify scanning process as soon as scanning capacity becomes available.

Regardless of the particular response sent to scanning process notifying instructions may include the generated handle for the particular scan. In this manner scanning process may subsequently utilize the generated handle when accessing modifying or removing the entry for the particular scan in record of existing scans .

In some embodiments notifying instructions may implement a notification procedure upon resuming from an improper shutdown of computing device . API may include for example a tag that is set to false after initialization and that is modified to true upon a proper shutdown of computing device . Upon initialization API may first access this tag and when the tag is still false may determine that computing device did not shutdown properly. In response API may identify all scans that were in progress prior to the improper shutdown and transmit a notification to each scanning process instructing the process that it may resume the scan.

As an alternative to managing simultaneous access to storage device by a predetermined number of applications or up to a predefined access threshold notifying instructions may operate in a round robin fashion. In particular notifying instructions may cycle through each scanning process that is currently in progress allowing each scanning process a predetermined amount of time with exclusive access to storage device . In this manner each scanning process may be provided with a chunk of time in which it may access storage device .

As described above with respect to notifying instructions API may handle the process of determining whether to permit a scan and notifies the particular scanning process accordingly. As an alternative in some embodiments each scanning process may include logic for determining whether to initiate a scan. In such embodiments each scanning process may access record of existing scans using API and determine whether to initiate a new scan based on the information returned by API .

Records sending instructions may be configured to retrieve and return one or more entries in record of existing scans based on receipt of a request from a particular scanning process . Along with this request scanning process may include a handle of a particular scan and in response sending instructions may retrieve and return the record for the particular scan.

User interface application may include a series of instructions encoded on a machine readable storage medium of computing device . In particular user interface application may include instructions that allow user of computing device to access record of existing scans . For example user may provide a record retrieval instruction to user interface application which in turn may interact with records API to retrieve and display the requested records.

In some embodiments user interface application may implement a scan override feature to allow user to stop all scans running by the plurality of scanning processes . In particular user may provide a request to user interface application requesting that all scans of storage device be postponed. In some embodiments the request from user may identify a predetermined period of time for which the scans are to be postponed. In response user interface application may submit a request to API to create a dummy entry in the record of existing scans that supersedes all scans currently in progress. User interface application may accomplish this by for example specifying that the dummy scan has a Very High priority and that it requires exclusive access to storage device . In response to receipt of such a message API may notify all processes that are currently running a scan that the scan should be halted. In embodiments in which the user specifies a period of time application may include this time as the estimated scan duration. In this manner user may easily disable all scans of storage device when required e.g. when giving a presentation performing storage intensive operations etc. .

Scanning process may also include a series of instructions encoded on a machine readable storage medium of computing device . Although illustrated as a single scanning process multiple processes including instructions may execute simultaneously in computing device . For example computing device may include a virus scanner a malware scanner a file indexing service a registry cleaner and the like.

Scan initiation indication receiving instructions may be configured similarly to instructions of . In particular receiving instructions may receive an indication for the particular scanning process to initiate a new scan that accesses storage device . This indication may be for example a user command an instruction from a scheduling program or any other indication to begin a scan.

In response to receipt of the scan initiation indication scan duration estimating instructions may determine an estimated duration of the scan to be initiated. In making this determination estimating instructions may consider for example the duration of each of a number of scans previously completed by scanning process . As an alternative estimating instructions may perform a small portion of the total scan e.g. 1 percent and determine an estimate for the entire procedure based on the total elapsed time for the scan of the portion. As yet another alternative estimating instructions may determine an estimate using performance characteristics of storage device based on a projected number of accesses and an amount of data to be read from and or written to storage device . Other suitable methods for estimating the duration of a new scan will be apparent to those of skill in the art.

Record accessing instructions may be configured similarly to record accessing instructions of . In particular instructions may utilize a number of methods to determine whether to initiate a new scan. For example record accessing instructions may make this determination based on a total number of scans in progress a current level of access to storage device and other similar factors.

As an alternative to the methods described above in connection with in the embodiment of record accessing instructions may instead rely on a notification from records API . In particular as described in detail above notifying instructions of API may determine whether to permit scanning process to initiate a new scan and in response send an appropriate notification to scanning process .

Scan initiating instructions may initiate the scan of scanning process when record accessing instructions determine that the scan may be initiated or when scanning process receives a positive notification from records API . In particular scan initiating instructions may begin accessing storage device to execute the particular scan.

Alternatively when scan initiating instructions determine that scanning process is not authorized to begin a new scan instructions may postpone initiation of the new scan until a later time. For example when record accessing instructions obtained the estimated time of completion from records or information usable to derive that time scan initiating instructions may again attempt to initiate the scan at the earliest estimated time of completion among the existing scans. Alternatively notifying instructions of records API may explicitly notify initiating instructions at the time when the scan may be initiated.

When a scan is initiated record updating and removing instructions may update record of existing scans to include an entry for the newly initiated scan of scanning process using a function call to API . Updating instructions may include for example the handle of the particular scan instance an identifier of the scanning process an in progress field set to true a start time and date and the estimated duration determined by estimating instructions . In addition upon completion of the scan instructions may remove the record for the scan from record of existing scans using a function call to API .

Method may start in block and proceed to block where computing device may receive an indication to begin a new scan of storage device . For example a user may manually trigger a new scan or alternatively a scheduler executed by the scanning process operating system or another application may trigger automatic execution of the scan.

Method may then proceed to block where the scanning process executing in computing device may access a record of existing scans of storage device . As an example the scanning process may access the record of existing scans directly or alternatively may access record using an API such as API of .

After accessing the record of existing scans method may proceed to block where the scanning process may determine whether to initiate a new scan. As described in detail above in connection with record accessing instructions of the scanning process may utilize a number of techniques in determining whether to initiate a new scan. In some embodiments the scanning process may determine that the new scan may be initiated when the total number of in progress scans is less than a maximum threshold. In other embodiments the scanning process may determine whether to initiate the scan based on storage device accesses e.g. a current number of reads per second . Other suitable methods for determining whether to initiate a new scan based on record of existing scans will be apparent to those of skill in the art.

When it is determined in block that the scanning process may initiate a new scan method may proceed to block where the scanning process may start the scan and update the record of existing scans with information regarding the scan. Method may then proceed to block where method may stop. Alternatively when it is determined in block that the scanning process should not initiate a new scan method may skip directly to block .

Method may start in block and proceed to block where a scanning process executing in computing device may receive an indication to begin a new scan of storage device . For example a user may manually trigger a new scan or alternatively a scheduler executed by the scanning process operating system or another application may trigger automatic execution of the scan.

Method may then proceed to block where the scanning process executing in computing device may access a record of existing scans of storage device . As an example the scanning process may access the record of existing scans directly or alternatively may access record using API as an intermediary.

Method may then proceed to block where scanning process may determine whether to initiate a new scan. In particular in the illustrated embodiment of block scanning process may determine whether the number of scans currently in progress is less than a threshold. For example in embodiments in which scanning processes are to have a minimal effect on computing device the threshold may be set to one. In this manner the threshold would operate as a semaphore. Alternatively the threshold may be increased to two or more depending on the desired balance between the number of scans to be permitted and performance of computing device .

When it is determined in block that the number of scans in progress is not less than the scan threshold i.e. is greater than or equal to method may proceed to block where scanning process may determine whether to activate a failsafe. For example a user may configure a setting in scanning process to ensure that the scan occurs at least once in a predetermined period of time. When this period of time has elapsed scanning process may force initiation of a scan by creating a scan record with an urgent status. Similarly scanning process may determine that the new scan is urgent based on one or more factors such as the likelihood of a serious problem e.g. a harmful virus is likely present or the performance of computing device e.g. storage device is more than 10 fragmented .

If scanning process determines that it should activate the failsafe method may proceed to block described in detail below. Alternatively method may proceed to block where scanning process may determine the next available scan time. For example scanning process may analyze the record of existing scans to determine the earliest estimated time of completion of the scans currently in progress. Method may then proceed to block where scanning process may postpone the new scan until the next available scan time determined in block . Subsequently at the next available scan time method may return to block where scanning process may again attempt to initiate the new scan.

Referring again to block when it is determined that the number of scans in progress is less than the predetermined threshold method may proceed to block . In block scanning process may estimate the scan duration using for example records of past scans a test of a small percentage of the total scan or another similar method.

After determining the estimated scan duration method may proceed to block where scanning process may initiate the scan and update record of existing scans . In updating the record scanning process may include for example a scan handle a scanning process identifier an in progress value of true the current date and time and or the estimated duration determined in block . In addition when scanning process is initiating the scan in response to activation of a failsafe scan in block process may also provide a value indicating that the scan is urgent.

Upon completion of the scan method may proceed to block . In block scanning process may remove the scan entry from record of existing scans . Method may then proceed to block where method may stop.

Method may start in block and proceed to block where records API executing in computing device may receive a new scan initiation message from a particular scanning process . This message may be received in for example an API function call executed by the scanning process that includes details about the scan e.g. an identifier an estimated duration etc. .

Method may then proceed to block where records API may perform an authentication procedure to ensure that the particular scanning process has permission to access and modify record of existing scans . As described in detail above in connection with authentication instructions of this authentication process may be based on a certificate key or other authenticating information provided to API by scanning process .

After performing the authentication process method may proceed to block where records API may determine whether the scanning process is properly authenticated. If scanning process is not properly authenticated API may determine that process does not have permission to access the record of scans and method may therefore proceed to block where method may stop.

Alternatively when scanning process is properly authenticated method may proceed to block where records API may access the record of existing scans to obtain details about any in progress scans. Method may then proceed to block where records API may determine whether to permit initiation of the scan. In the illustrated embodiment of block records API may determine whether to permit initiation based on the number of scans in progress as compared to a threshold.

When the total number of scans in progress is not less than a scan threshold i.e. is greater than or equal to method may proceed to block . In block records API may determine the next available scan time by for example analyzing record of existing scans to determine the earliest estimated time of completion. Method may then proceed to block where records API may send a postpone notification to scanning process and in some embodiments may include the next available scan time determined in block . Method may then proceed to block where method may stop.

Referring again to block when the total number of scans in progress is less than a scan threshold method may proceed to block . In block records API may send a notification to scanning process indicating that the new scan may be initiated. In some embodiments API may generate a unique handle for the particular scan and return this handle to scanning process along with the notification. Method may then proceed to block where records API may update the record of existing scans with details regarding the new scan to be initiated by scanning process including for example the generated handle an identifier of process a start date and time and an estimated scan duration. Method may then proceed to block where method may stop.

Although described in detail below as including records API in some embodiments scanning processes may directly access the record of existing scans. In this manner the scanning processes may access and modify the record of existing scans without using API as an intermediary. In such embodiments in the description that follows any API function calls would be replaced by a direct access to the record of existing scans. Furthermore in such embodiments the logic for determining whether to initiate a scan would be implemented by the processes rather than records API .

Referring now to operation flow in block virus scanner may attempt to initiate a new scan at 5 00 a.m. Accordingly virus scanner may send a scan initiation message to records API as an API function call. In some embodiments virus scanner may include an estimated scan duration which may be determined as described above in connection with scan duration estimating instructions of .

In block records API may receive the function call and in response access the record of existing scans maintained in storage device . In particular records API may first access the record to determine whether virus scanner is authorized to initiate the scan. Because no scans are currently in progress records API may update record of existing scans to state which includes a new record containing a generated handle 96CD2 an in progress value set to YES the identifier of virus scanner Virus scan the start date and time May 2 5 00 a.m. and the estimated duration provided by virus scanner 30 minutes . In block records API may notify virus scanner that it may begin the new virus scan and in addition may provide the generated handle to virus scanner for use in future accesses. In response virus scanner may begin the scan.

In block a second scanning process disk defragmenter may attempt to initiate a scan at 5 15 a.m. Accordingly disk defragmenter may send a scan initiation message to records API as an API function call. This message may include an estimated duration of the scan 60 minutes. In response records API may access the record of existing scans of storage device and determine that virus scanner is executing an in progress scan. Accordingly in block records API may update the record of existing scans to state which includes a new record containing a generated handle 34EF7 an in progress value set to NO the identifier of disk defragmenter Disk defrag and an estimated duration provided by disk defragmenter 60 minutes . In response in block records API may return a postpone message to disk defragmenter notifying the process that it may again attempt to initiate a scan at 5 30 a.m. the time at which the virus scan is estimated to be finished . This postpone message may also include the generated handle for the particular defragmentation procedure 34EF7.

In block virus scanner may determine that the virus scan has completed and therefore generate a function call to records API to remove the scan record from the record of existing scans. Accordingly in block records API may update the record of existing scans to state in which the record created for virus scanner is removed.

In block disk defragmenter may determine that it is now 5 30 a.m. and therefore transmit another scan initiation message to records API . In response records API may determine that no scans are currently in progress. Accordingly in block records API may update the record of existing scans to state which indicates that disk defragmenter initiated an in progress scan at 5 30 a.m. In addition records API may notify disk defragmenter that it may initiate the new scan and in response disk defragmenter may begin its defragmentation procedure.

According to the foregoing example embodiments disclosed herein provide for initiation of storage device scans based on a record of existing scans in the storage device. In some embodiments the record of existing scans may be accessed in determining whether to initiate or permit initiation of a new scan by a particular scanning process. In this manner a number of scanning processes running on a computing device may coordinate their operation in a cooperative manner thereby minimizing slowdowns due to simultaneous access to the storage device.

