---

title: Techniques for network replication
abstract: In response to a request to duplicate a network, the network is duplicated. The duplicate network includes one or more virtual devices that correspond to one or more devices in the network being duplicated. The devices of the duplicate network are communicatively arranged in a manner consistent with a topology of the network being duplicated. Once the duplicate network is created, access to the duplicate network is provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08549347&OS=08549347&RS=08549347
owner: Amazon Technologies, Inc.
number: 08549347
owner_city: Reno
owner_country: US
publication_date: 20101220
---
This application incorporates by reference for all purposes the full disclosure of U.S. patent application Ser. No. 12 060 074 filed on Mar. 31 2008 having the title Configuring Communications Between Computing Nodes. 

Remote computing services are often utilized in order to operate a network on behalf of various users. An organization for example may remotely operate a plurality of computing devices that are in communication with one another. The computing devices may be configured in a network according to the organization s needs utilizing various network devices such as routers switches firewalls and the like. Further the computing and network devices may include virtual and or actual computing devices. For example an organization s network may include a plurality of virtual machines in communication with one another by one or more virtual network devices thereby forming a virtual network that overlays an actual network. The computing devices may be programmed to communicate according to the topology of the virtual network and various techniques may be used to enable the communications to travel over the actual network which the virtual network overlays.

In some instances it is desirable to duplicate a network or at least a portion thereof. For example an organization may wish to test a network while still allowing the network to function. Similarly an organization may wish to simulate various stresses on its network without actually subjecting the network to the stresses. The organization may wish to test how a modification to its network may function or may wish to recreate events that caused one or more events such as a network failure. Generally there are various reasons why duplication of a network can be useful. Network duplication however can be an arduous and time consuming process generally requiring substantial intervention configuring a new network to be a duplicate of an old network.

Techniques described and suggested herein include systems and methods useful for processes such as network duplication. In an embodiment a request to duplicate at least a portion of network is received and at least that portion of the network is duplicated responsive to the request. The request may be initiated by a user such as a network administrator who accesses the network remotely. Access of the network may be through various Application Programming Interfaces APIs of a web service layer provided for the purpose of allowing users to access their network s . As an example the network may be operated on behalf of the user and or an organization associated with the user by another organization that provides computing resources used for operating the network. The computing resources may be as an example located in one or more data centers and remotely accessed by the user using APIs of web services although other technologies may be used. One or more of the APIs may be provided for the purpose of network duplication. The one or more data centers may additionally be used to implement networks of other users that may access their networks remotely. The computing resources may include computing devices storage devices switches routers gateways hubs and other devices that may be used in operating a network including some devices described below and generally any device suitable for use in a network environment.

In an embodiment the network that is duplicated is a virtual overlay network. In an embodiment the network that is duplicated comprises a network of one or more virtual devices that overlay a network of physical devices. The physical devices may include one or more hub switch router gateway firewall server storage device and or one or more other devices that can be used in a network environment. Similarly the virtual devices may include one or more virtual hub virtual switch virtual router virtual gateway virtual firewall virtual server virtual storage device and or one or more other devices that can be used in a network environment. As used herein when clear from context virtual devices may be referred to without the word virtual. There may not be a one to one correspondence between a set of devices comprising the virtual network and the set of devices comprising the physical network that is overlaid by the virtual network. As an example one physical device may be used to implement multiple virtual devices. A computing device for example may be used to implement multiple virtual machines. As another example multiple physical devices may be used to implement a single virtual device. A virtual storage device for instance may be implemented by multiple physical storage devices. In addition while multiple virtual devices may be implemented by a single physical device and while multiple physical devices may be used to implement a single virtual device some virtual devices may be implemented by a single physical device. A virtual storage volume for instance may be implemented by single physical storage device.

In an embodiment a user who makes a request is provided the opportunity to specify one or more parameters regarding how a network may be duplicated. In one embodiment the user is able to identify one or more portions of a network such as one or more subnetworks to copy. In addition devices in a user s network may be tagged with various characteristics. A tag for a device may relate to the device s purpose in the network such as the type of application the device is used to support may generally relate to any aspect of the device or may have no apparent relation to a characteristic of the device. A user in an embodiment may specify one or more tags as a condition for inclusion or exclusion from the duplicate network. For example a user may specify that only devices tagged with production should be included in a duplicate network.

Other parameters may relate to the fidelity of objects in a duplicate network to the network to be copied. For example if a network to be copied includes a virtual machine the user may have various options for specifying requirements for a duplicate virtual machine. The user may for instance specify low fidelity for the machine whereby a duplicate network may simply have a corresponding virtual machine. The user may specify higher fidelities where the capabilities of the corresponding virtual machine match the original virtual machine to various degrees. The user may specify for instance that the duplicate virtual machine should be implemented with minimum processing capabilities block storage available and or abilities to run various software applications. Similarly the user may specify very high fidelity where for instance a duplicate virtual machine should be implemented on a machine using a particular processor model. Generally any type of characteristic relating to how closely a duplicate network object should match an object being duplicated may be provided to the user for specifying copy fidelity. As another example of parameters that may be specified a user may specify various Internet protocol addresses of devices in a network that should be used for corresponding devices in a duplicate network.

In an embodiment users are also able to specify at least one copy type for devices in a network to be copied. In one embodiment users are able to specify copy types such as shallow or deep copies in a network to be copied although other types of copies may be provided for selection. With a shallow copy of a network object a new instance of the object may be declared. The new instance may operate retrieving information regarding the original object s state before the copy as needed. A shallow copy of a network object may be for example a copy on write COW overlay of the network object. With a deep copy of a network object a complete copy of a store of memory comprising information about the object s state may be made for a duplicate copy to enable the duplicate copy to operate independently without the need to retrieve information regarding the original object s state before the copy from another source.

As discussed when the user submits a request that a network be copied in response to the requests the network is copied and access to the network is provided to the user in an embodiment. Copying the network may include creating one or more virtual duplicate devices that correspond to one or more virtual devices of the network being copied. Virtualization or other technology used to create and or operate the virtual devices of the network being copied may also be used to create and operate corresponding duplicate devices. In addition any templates used to create devices in the network being copied may be used to create duplicate devices. In other words devices and their duplicate devices may be created from common templates. Copying the network is done in a manner consistent with any parameters specified by the user. The specified parameters may apply to the whole network being copied and or to individual network objects being copied. In some embodiments users are able to specify different parameters for each network object to be copied and or subsets of the network objects to be copied.

Providing access to the duplicate network may be done in a variety of ways. Generally a user such as a network administrator is able to operate the duplicate network in various ways and for various purposes. As one example the user may apply various stresses on the duplicate network for testing purposes. The user may also record network events and replay those events in the duplicate network for forensic purposes. As another example the user may use the duplicate network in connection with the network being copied to provide additional capacity or generally to have available the additional computing resources of the duplicate network. A user may also modify the duplicate network such as to test how modifying the network that was copied would affect its performance. Details regarding the various embodiments including additional examples are described in more detail in the following paragraphs.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server. It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

In an embodiment the remote computing service provider network is implemented in a data center operated by a remote computing service provider. A data center may be a facility in which various computing resources are utilized. Computing resources include computing devices storage devices network devices such as routers switches firewalls and the like and generally any device that may be used in connection with a network of computing devices. The remote computing service provider network may be implemented with a plurality of data centers that communicate with one another over a communications network. The remote computing service provider may for instance operate a network of data centers in various geographic locations. As shown in the drawing the remote computing service provider network includes one or more customer remote networks which in this example are networks operated on behalf of corresponding customers. Various operations of a customer may be operated using a remote customer network . For instance a customer may utilize a customer internal network for internal operations such as accounting human resources electronic mail and the like while utilizing a customer remote network for external operations such as operating a network of servers and data stores to provide a website or other information resource to the public or other users external to the customer s organization . Generally a customer may utilize a customer internal network and or customer remote network for any suitable purpose. One or more of the customer remote networks may be virtual overlay networks such as those described in accordance with U.S. patent application Ser. No. 12 060 074 filed on Mar. 31 2008 having the title Configuring Communications Between Computing Nodes and which is incorporated herein by reference for all purposes.

In an embodiment the remote computing service provider network includes a web services layer having a plurality of application programming interfaces APIs . The web services layer may be implemented in a computer system that is operable to receive web service calls and respond accordingly such as by instructing one or more other computer systems to perform an action based on the request. The web service calls may be made using various web service APIs provided to users for various reasons. For instance one API may be for the purpose of network duplication as described in accordance with the various embodiments of the present disclosure. Other APIs may be for other purposes such as provisioning virtual computing instances otherwise configuring a network and generally remotely operating computing resources on behalf of a user utilizing the APIs. In addition while web service APIs are provided for the purpose of illustration any way of operating computing resources either remotely or locally may be used in accordance with various embodiments.

The customer remote network in an embodiment includes a plurality of customer subnetworks . In an embodiment one or more of the customer subnetworks are overlay networks of a network operated by the remote computing services provider. The customer in the illustrative embodiment shown may access the various subnetworks through a router and virtual private network VPN gateway over a secure VPN connection over the Internet although other ways of accessing the customer subnetworks may be used. In an embodiment the customer from its customer internal network establishes a secure VPN connection over the Internet and interacts with the customer subnetworks through web service calls although other ways of communicating with the various computing devices operating on behalf of the customer may be used. In an embodiment a server of the customer internal network communicates encrypted information to the VPN gateway which decrypts the information and passes the decrypted instructions to the router . The router then transmits the decrypted information to an appropriate customer subnetwork . Information from any of the customer subnetworks whether responsive to any instructions sent by the customer internal network or not may be sent to the router which passes the information to the VPN gateway which encrypts the information and sends the information over the secure VPN connection to the customer internal network .

While shows a particular configuration for information flow for the purpose of illustration in accordance with various embodiments other configurations may be utilized for the environment or other embodiments. Generally any suitable way of exchanging information among computing devices may be used. In addition while several devices such as the VPN gateway and router are included in for the purpose of illustration other devices may be used for communication. In addition the environment shown in is simplified and other devices other than those illustrated may be included in the environment or in other embodiments. Possible devices include but are not limited to switches servers firewalls data stores hubs other gateways and the like.

As noted above various embodiments of the present disclosure provide for dynamic network replication. Accordingly shows an illustrative embodiment of a process which may be used by a customer to copy one or more networks. Portions of the process or any other processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors.

In an embodiment a user selects a network to be copied. Selection of a network to be copied may be accomplished in any suitable manner. For instance in an embodiment that includes a remote computing services provider a customer s network administrator or other user may utilize an interface sometimes referred to as a management console that allows the user to select a network that is being operated on behalf of the customer by a remote computing services provider. The interface may be provided to the customer by the remote computing services provider as a web page or may be an application executing on a computing device of the customer. The network that is selected may be a subnetwork of a larger network a collection of subnetworks or generally any collection of computing resources in communication with one another.

In an embodiment users are provided the ability to apply one or more filters in order to have more control over the network to be copied. In an embodiment various devices in a customer s network have one or more assigned tags. Tags may be automatically assigned or may be user assigned. For instance devices may be tagged with device type tags which may identify devices as being for instance a server a storage device a switch or any other type of device. Users may also provide their own tags in an embodiment. For example if a customer uses a subnetwork for a different purpose than another subnetwork the user may tag each device with a tag that corresponds to the purpose. Devices in one sub network may have for instance tags that identify the devices as part of a subnetwork used for production while other devices in another subnetwork may have tags that identify the devices as part of a subnetwork used for another purpose such as billing. As another example storage devices may be tagged with tags that identify the devices as either being primary storage devices or backup storage devices. Generally any type of tag may be used for filtering. In addition devices may have more than one tag and devices in separate subnetworks may share one or more of the same tag. Filters may also be based at least in part on the internet protocol IP addresses utilized by devices in the selected network. Accordingly in an embodiment when the user has selected a network to be copied the user selects any filters that he or she would like to apply to the selected network.

In addition in an embodiment users are provided the ability to select a desired resolution for one or more network objects in the selected network. A resolution selected by the user may be used to determine how closely the copy of the network should match the network being copied. Characteristics of a resolution selectable by the user may include characteristics such as whether a copy is shallow or deep as described more fully in connection with software installed on network objects memory volatile and or non volatile of a network object processing capabilities and particular hardware characteristics such as processor models manufacturers and the like. As an example a user interested in a low resolution copy may specify that he or she would like a copy of similar devices that are networked together in the same manner. A user interested in a high resolution copy may specify that certain devices should have a certain amount of memory should include specific hardware devices should have specific software installed on them and the like.

In an embodiment when the user selects the copy resolution he or she may send an instruction to copy the selected network according to the resolution specified by the user and according to any filters specified by the user. In an embodiment where the network to be copied is operated by a remote computing services provider sending the instruction may include invoking a web service provided by the remote computing services provider in order to send the instruction over a communications network. Other methods of sending the instruction may be used in accordance with various embodiments.

While illustrates various steps performed in a particular order variations are considered as being within the scope of the present disclosure. For instance in an embodiment network selection filter selection and copy resolution selection may be performed in any order and one or more steps may be performed simultaneously. Other variations are considered as being within the scope of the present disclosure.

When the mapping is accessed in an embodiment a new mapping is generated for a duplicate network. The new mapping may comprise a collection such as a list of network objects and their relationships with one another. Generating the new mapping may be accomplished by applying any user selected filters and or other criteria to the original mapping. Once the new mapping is generated network objects are created according to the new mapping. In an embodiment the new mapping may not be generated such as when no filters or other criteria apply and the original mapping may be used to create the duplicate network. In an embodiment when the new mapping is generated network objects are created according to the new mapping as described more fully below. In general network objects that correspond to the network being copied are created according to the relationships among the network objects in the network.

Once the network object tree is fetched in an embodiment a determination is made whether any filters apply to the network object tree. If it is determined that a filter applies to the network the filter is applied to the objects in the network object tree to generate a network object list. For example if a user had specified that the duplicate network should only have network objects with one or more particular tags objects having the one or more tags are identified and added to a list or other collection of network objects. Similarly if the user had specified that only certain IP addresses are to be included in the duplicate network only such network objects are added to a list. Generally any criteria that the user specifies is used to determine what objects are added to the list of network objects in accordance with an embodiment.

Once any applicable filters have been applied or if no filters apply a directed acyclic graph DAG of network objects is generated in accordance with an embodiment. The DAG of network objects in an embodiment is a graph whose nodes are network objects to be created for the duplicate network and whose edges have a direction according to dependency. The DAG may or may not be a connected graph. As an example in an embodiment virtual computing instances cannot be created without block storage devices being created for the virtual computing instances. Thus in an embodiment an edge in the DAG from a block storage device to a virtual computing instance that utilizes the block storage device for storage would have a direction from a node representing the block storage device to the virtual computing instance. While the present illustrative example uses DAGs for the purpose of illustration any plan for duplication of a network may be used in accordance with various embodiments.

Once a DAG has been constructed in an embodiment a copy operation for a first network object in the DAG is invoked . The first network object may be any suitable network object represented by a node in the DAG such as any node to which no edges are directed. Invoking the copy operation in an embodiment includes taking an action the result of which will result in a copy of the network object being created. Invoking the copy operation therefore may include allocating sufficient computing resources for the network object copy and configuring the resources accordingly. For instance if the network object is a virtual data storage volume one or more physical storage devices may be allocated to the volume and the physical storage devices may be configured to serve the volume. If multiple physical storage devices serve the same virtual volume a server that serves the multiple physical storage devices may likewise be allocated and configured. Generally any computing resources may be allocated and configured in a suitable manner.

Once the copy operation has been invoked for the first network object in the DAG a determination is made whether other objects remain to be copied. If objects remain to be copied the DAG is traversed to another node and a copy operation is invoked for the next network object in the DAG. This process of traversing the DAG and determining whether other objects remain to be copied may continue until the DAG has been completely traversed. When the DAG is completely traversed in an embodiment access is provided to a duplicate network consisting of the copied objects in accordance with an embodiment. Providing access to the duplicate network may include providing one or more users of the customer the ability to direct operation of the network configure the network or otherwise access the network using a web service or otherwise.

If the object is stateless then a duplicate object may be created immediately. For example resources may be provisioned and configured for the object so as to emulate the object. If however the object is not stateless then more complex processes for copying the object may be necessary. For example a determination may be made regarding a copy type. In an embodiment a copy may be one of two types shallow or deep although other types of copies may be made. A shallow copy of an object in an embodiment is an object that is at least an initially incomplete copy of an original object. A lazy copy is a type of shallow copy. With a shallow copy information regarding the object copy s state may be available from the original object until that information is to change due to operation of the original object at which point the information may be copied to the object copy before it is changed. An example is a copy on write COW overlay of a storage volume. When the COW overlay is initiated a block of data for the COW overlay may be stored in the original storage volume until a write operation is requested for the block of data. When the write operation is requested for the block of data the block is copied to the COW overlay and then performed for the original storage volume. In this manner a copy may be made that is quickly and initially available for use. Similar types of copies may be made for any stateful object such as virtual machines and generally any object whose state changes during operation.

A deep copy on the other hand may be a complete copy of an object such that once the copy is made it is not necessary to refer to the original object during the copy s operation. As an example a deep copy of a storage volume may be made by copying exactly all of the data in the storage volume into a new volume such that any data that was stored in the original volume before the copy was made is accessible via the copy. Deep copies of virtual machines and other stateful objects may also be made. In this manner the copy may become completely independent from the original object.

If in an embodiment a determination is made that the copy type is to be a shallow copy the object is paused . Once the object is paused an object overlay is created as a duplicate object and the original object s operation is resumed . If however a determination is made that the copy is to be a deep copy a deep copy of the object is made accordingly. For example the object may be paused and the memory state of the object may be copied . The copied memory state in an embodiment is used to create a duplicate object and the operation of the original object is resumed .

Proceeding to the figure similarly illustrates a timeline and an object s state with respect to the timeline. A network object is operated during the normal course of operations and a request to duplicate a network of which the object is part is received. In an embodiment network duplication proceeds such as in a manner described above. At a point in time during network duplication the network object is paused. Information about the network object at pause is copied to produce a copy of the network object at pause . For instance all information regarding the state of the network object at pause may be duplicated and stored in a separate location. In the example of the network object being a virtual storage volume the information stored in the virtual storage volume may be copied to one or more physical storage devices different from one or more physical storage devices used to store the virtual storage volume or at least different locations on one or more of the same storage devices. In an embodiment once the copy of the network object at pause is made the network object at pause is resumed. The network object and copy of the network object then proceed separately and independently.

While show illustrative examples of manners in which shallow and deep copies may be made respectively other methods may be used. As an example the state of an object may be used as a basis for both the original object and the duplicate object. In other words an object that has been copied may after the copy operate in a manner similar to the way the duplicate object operates as described referring to stored information about the object s state at the time of the copy as necessary. As another example when making a copy techniques may be used that do not require pausing network objects if enough care is taken to ensure data integrity. For example if care is made to record and account for changes to a network object during the duplication process pausing may not be necessary. Generally any technique for copying network objects whether shallow or deep may be used in accordance with the various embodiments of the present disclosure.

In an embodiment a particular network event is detected. A network administrator for example may notice that the network behaves apparently abnormally at a regular time such as the same time every day. One or more applications may detect one or more anomalies in the network performance such as an unusually high latency traffic volume or other characteristics regarding the performance of one or more devices in the network. Other network events that may be detected include auto scaling events device malfunction and the like. Generally any way of detecting any type of particular network event or combination of events may be used. When a particular network event is detected a duplicate network may be created in accordance with an embodiment. For example a network administrator may utilize the interface of a network management console to submit a request that the network be duplicated. A duplicate network may be created responsive to the request. Duplication of the network may be performed in a manner described above and may take into account various copy type resolution and other criteria specified by the request. The duplicate network may include all of the objects in the original network or may have a different amount.

In an embodiment when the duplicate network is created recorded network events may be replayed on the duplicate network one or more times in order to allow analysis of the events. For example events may be replayed and recorded on the duplicate network in order to identify the cause of the detected network events or simply to gain a further understanding of the network capabilities. In this manner analysis with regard to the network operation may be performed on a duplicate network so as to allow the original network to continue normal operation. In other words the duplicate network may be used for analysis while allowing the original network to operate normally thereby allowing analysis of the network with minimal compromise to the network s performance.

With a duplicate network a network administrator or other user may modify the duplicate network for various purposes. Modification of the duplication network for example may include reconfiguring devices in the network adding and or removing devices to from the network increasing bandwidth among various devices of the network and the like. In an embodiment upon modification of the duplicate network the modified duplicate network may be used. For instance the modified duplicate network may be used for simulation of how the network may respond under various stresses. A user may for example may send requests to various devices in the network in order to stress the network and measure how the modified duplicate network is able to handle the stress. For example a user may stress a network to determine whether the modified duplicate network auto scales one or more portions of the modified duplicate network in order to accommodate the additional stress. Generally the user may cause various loads to be generated for the modified duplicate network. Loads may include requests to access information to store information to modify information stored in one or more data stores to perform computations to be performed and the like multiple simultaneous connections to servers and in general any action that can be performed by a network.

Further portions of the processes described in connection with and other processes described herein may be combined. For instance network events may be recorded and then used for simulations on a modified duplicate network to enable determining whether any modifications made improved network performance. Other variations are also contemplated as being within the spirit of the present disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIPS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

