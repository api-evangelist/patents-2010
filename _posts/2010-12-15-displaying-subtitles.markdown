---

title: Displaying subtitles
abstract: Example methods, apparatus and articles of manufacture to display subtitles are disclosed. A disclosed example method includes selecting a test script that corresponds to an application, and superimposing a subtitle bar including a test instruction from the test script over a portion of a display of the application within a user interface so that the subtitle bar reduces interference with viewing a region of interest of the display, wherein the test instruction provides an action a user is to perform to test the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08549482&OS=08549482&RS=08549482
owner: Hewlett-Packard Development Company, L.P.
number: 08549482
owner_city: Houston
owner_country: US
publication_date: 20101215
---
Many software applications are tested by test engineers and or developers prior to the applications being released. Testing a software application may uncover underlying issues within the application that a developer did not consider. Further testing a software application helps ensure the application can function under different operating conditions.

Test engineers and or developers e.g. testers or users use test scripts to test software applications. Test scripts are instructions that describe an action to be performed by a tester. Test scripts are used to direct testers to perform one or more actions to test and or debug any type of software application. An application that is tested by a tester is referred to herein as an application under test.

Test scripts are designed to test applications under varying conditions to simulate a range of possible usage scenarios. Test scripts may be designed to test operating functions of an application and or the limits of the application. Known test scripts are created based on specifications requirement documents and or other design documents that describe functionality associated with software applications. Test scripts may specify a pass condition and or a fail condition. A pass condition defines under what circumstance s an application under test meets a requirement and or specification for a certain action. A fail condition defines under what circumstance s an application under test does not meet a requirement and or a specification for a certain action.

In known systems testers use a second application e.g. a test script application to display test instructions. In these known systems the test script application is separate and distinct from the application under test. Thus a tester using a workstation e.g. a computer may view the application under test and the test script application in the same user interface e.g. an operating environment of a computer . However because the user interface has a finite size e.g. limited by a displayable area of a computer monitor a first portion of the user interface displays the application under test and a second portion of the user interface displays the test script application. In other examples a tester may toggle between viewing the application under test and the test script application. For example a tester may view an application under test in a full viewing mode to verify graphical elements of the application under test are properly displayed while hiding a test script application. A user can hide a test script application by for example closing the test script application or reducing the test script application to a tab in a user interface.

Toggling between viewing the applications and or moving the applications around within a user interface slows testing. Additionally forcing a tester to toggle between applications may cause the tester to miss a test step and or miss a test result from an action performed on the application under test. Further because many test scripts include a full length description of an action to be performed on the application under test many testers have to spend significant time reading the long test instruction.

Example methods apparatus and articles of manufacture disclosed herein overcome these problems and improve the efficiency of software application testers by displaying test instructions within a subtitle bar superimposed over a relatively small portion of the application under test. Because the test instructions are displayed within a subtitle superimposed over an application under test a tester is not required to toggle between applications and or manipulate the viewable area of the applications. Further because the test instructions are displayed within a subtitle bar superimposed over an application under test the tester can view the test instructions while concurrently testing the application in a mode viewable within an entire user interface e.g. a full screen mode .

Example methods apparatus and articles of manufacture disclosed herein provide a relatively short synopsis of the actions to be preformed e.g. one line of text . A tester may select the subtitle to view additional instructions if the tester needs more information. Further a tester may configure the subtitles to be transparent and or hidden from the view of the tester after a time period.

Example methods apparatus and articles of manufacture disclosed herein monitor the application under test to determine when a tester has completed a test instruction displayed within a subtitle bar. After determining a test instruction has been completed these example methods apparatus and articles of manufacture disclosed herein determine a next test instruction and display the next test instruction within the subtitle bar. In other example methods apparatus and articles of manufacture disclosed herein the test instructions are changed based on commands by a tester. Example methods apparatus and articles of manufacture disclosed herein may also make a record of testing progress of an application under test including for example recording completed tests passed tests and or failed tests.

In the example of the application under test is displayed within a user interface . The example user may be implemented by any hardware software and or firmware components that enable a user of a workstation to view and or interact with the application under test . In the illustrated example the workstation includes an operating system and a display monitor. Additionally the user interface may include or be implemented by a software testing environment.

The example workstation of may be implemented by any type of computing device including for example a personal computer a server a laptop a smartphone a smartpad etc. The example workstation of may be communicatively coupled to a network e.g. the Internet a Local Area Network etc. or alternatively may be used as an isolated testing processor. The workstation enables a user e.g. a tester to execute e.g. follow a test script to test the application under test .

To display the subtitle bar within the user interface the workstation of the illustrated example includes a subtitle manager . The example subtitle manager coordinates the display of the subtitle bar with actions performed by a tester on the application under test . The subtitle manager interfaces with the application under test to change text displayed within the subtitle bar as actions are performed by a tester on the application under test . In other examples the subtitle manager receives commands from a tester to display test instructions within the subtitle bar .

While the example subtitle manager of is shown as being included within the workstation in other examples the subtitle manager may be included within a separate processor communicatively coupled to the workstation . In yet other examples the subtitle manager may be included within the application under test as an application specific test manager. Further while the example subtitle manager shown in manages the display of the subtitle bar for the application under test the workstation may instantiate multiple versions of the subtitle manager for each application under test displayed within the user interface and or other user interfaces.

To receive a selection of the application under test and or commands from a tester the example subtitle manager of includes a receiver . The example receiver is communicatively coupled to the workstation and or the application under test via a communication bus . The communication bus may include any type of wired and or wireless communication medium.

The example receiver receives an indication identifying the application under test after a tester has initiated the application under test on the workstation . The indication may include for example an identifier of the application under test a type of the application under test metadata associated with the application under test and or any other information that the subtitle manager may use to identify the application under test .

The example receiver of also receives commands from a tester. The commands may instruct the subtitle manager to change an appearance of the subtitle bar change a location of the subtitle bar within the user interface cycle through test instructions displayed by the subtitle bar switch from a synopsis to a detailed test instruction and or provide feedback from tests performed on the application under test .

The example receiver of routes any received information to an appropriate block within the subtitle manager . For example the receiver of the illustrated example routes an indicator of the application under test to an application type identifier . The example receiver of routes commands to change an appearance of the subtitle bar to a subtitle configurer . Further the receiver of the illustrated example routes to a feedback processor commands to cycle to a next instruction and or commands associated with results from the application under test .

The application type identifier of the illustrated example parses indications of a selection of the application under test for identification information. The application type identifier may search for an identifier of the application under test within metadata associated with the application under test and or within an instruction from the workstation indicating the application under test is selected. In other examples the application under test and or the user interface may transmit a message to the application type identifier including an identifier of the application under test upon the application being opened within the user interface .

After determining an identifier of the application under test the example application identifier transmits the identifier to a test script retriever . The test script retriever uses the identifier to select a corresponding test script located within a test script database . A test script is created by designers and or testers based on design specifications and or requirement documents associated with the application under test . In some examples the test script may be automatically generated by a test script generator based on an aggregation of requirements for the application under test . Alternatively the test script generator may generate a test script based on a requirements specified within a requirement tracking tool.

In the illustrated example each test script includes one or more test instructions that describe how a respective application under test is to be tested. Each such test instruction may include a synopsis a full description pass conditions fail conditions and or troubleshoot procedures. The test instructions may be sequenced within the test script or alternatively may be linked together based on results from the application under test such results may be in response to a tester following one or more test instructions . A test script may also include a tracking section to record when the test script was last executed and or any documented results from the application under test .

Additionally a test script may include properties e.g. settings describing how test instructions within the test script are to be displayed within the subtitle bar . For example a test script may include a font color and or font size indicator. The test script may also include a location indicator and or a transparency indicator. Further a test script may include an auto hide delay function that removes for example the subtitle bar from view of a tester after a specified time period e.g. a few seconds . In the illustrated example test scripts may be used to test a single application or may be used to test different applications. Thus the properties of the test script may be set to configure the instructions of the test script to be displayed differently based on which application is tested.

In the example of the test script database is shown as being included within the subtitle manager . However in other examples the test script database may be communicatively coupled to the subtitle manager either within or external to the workstation . The test script database may be implemented by for example storage disk s disk array s tape drive s volatile and or non volatile memory compact disc s CD digital versatile disc s DVD floppy disk s read only memory ROM random access memory RAM programmable ROM PROM electronically programmable ROM EPROM electronically erasable PROM EEPROM optical storage disk s optical storage device s magnetic storage disk s magnetic storage device s cache s and or any other storage media in which data is stored for any duration.

The example test script retriever of uses an identifier associated with the application under test to search the test script database for a matching test script. To locate a matching test script the test script retriever searches headers and or metadata within test scripts that indicate whether the test script corresponds to the application under test . After locating a matching test script the test script retriever transmits the test script or a copy of the test script to a session manager .

The session manager of the illustrated example configures test instructions from a test script to be displayed within for example the subtitle bar . The example session manager manages which test instruction is displayed and or manages how the subtitle bar is to be displayed. In examples where the subtitle manager is to display a subtitle bar for multiple applications under test the example session manager manages which instructions from which test script is displayed within the appropriate application. For each test script the example session manager of creates a session and determines how the subtitle bar is to be displayed based on properties defined within the test script. In other examples the session manager may receive display property information from the tester via the user interface . The session manager uses the properties to configure dimensions and text properties for the corresponding subtitle bar .

The example session manager of also determines a location within the user interface at where the subtitle bar is to be displayed. In some examples the location of the subtitle bar is specified within the properties of the corresponding test script. In other examples the session manager determines the location based on available space within the application under test . The session manager of the illustrated example determines a location for the subtitle bar so that the bar reduces and or in some examples eliminates interference with a tester viewing the application under test .

For example an application under test may display text and graphics. The session manager of the illustrated example receives and or requests a screen shot of the user interface displaying the application . After receiving a screen shot of the application under test displayed within the user interface the session manager analyzes the screen shot using imaging processing tools to search for empty substantially empty sparsely populated and or void spaces. An empty and or void space may include an area of the displayed application under test that does not include text and or graphics. A substantially empty or sparsely populated area includes relatively less text and or fewer graphics than other portions of the application under test . After locating a substantially empty sparsely populated empty and or void location the session manager specifies that the subtitle bar is to be placed within the identified location of the application under test . In examples where the application under test includes an allocation of text and or graphics across the screen shot the session manager determines that the subtitle bar is to be displayed along the bottom of the user interface . Thus placement of the subtitle bar at the bottom of the screen may be thought of as a default placement.

In examples where a test script has a property and or a setting that specifies the subtitle bar is to be removed and or hidden from view after a time period the example session manager of determines when the subtitle bar is to be removed from the user interface . Upon a request by a tester to again view the subtitle bar e.g. moving a mouse cursor over the location of the hidden subtitle bar the session manager reactivates e.g. displays the subtitle bar .

To generate a display of the subtitle bar the example subtitle manager of includes a subtitle renderer . The example subtitle renderer is communicatively coupled to the user interface via a communication path which may include any wired and or wireless communication medium. The subtitle renderer uses configuration information from the session manager to render for example the subtitle bar for display within the user interface .

To render the subtitle bar the example subtitle renderer uses display settings and or properties to determine a height a width and or color s for the subtitle bar . The subtitle renderer uses font information to generate text e.g. test instructions overlying the subtitle bar . The subtitle renderer uses transparency setting information to configure a transparency of the subtitle bar . With the transparency setting appropriately set under the subtitle bar a tester is able to view the displayable area of the application under test .

Further the subtitle renderer uses display location information determined by the session manager to place the subtitle bar at an appropriate location within the user interface . In this manner the example subtitle renderer superimposes the subtitle bar over the application under test at a location determined to reduce interference with using the application under test and or the expected result. The example subtitle renderer also displays the test instructions as text within and or over the subtitle bar . By displaying the test instruction superimposed over a relatively small portion of the displayable area of the application under test a tester can read an instruction from the subtitle bar while performing the action indicated by the instruction on the application thereby improving the efficiency of the tester.

To enable a tester to configure how the subtitle bar is to appear the subtitle manager of the illustrated example includes the subtitle configurer . The example subtitle configurer receives commands from the receiver generated by a tester and retrieves a corresponding test script via the test script retriever . The example subtitle configurer then parses the commands by a setting and or property and stores each setting and or property to the test script. In examples where the test script includes a preconfigured display setting the subtitle configurer overwrites and or adjusts the setting and or property with the setting and or property provided by the tester.

In some examples a tester may adjust a display setting of for example the subtitle bar while the bar is being displayed. In these examples the subtitle configurer adjusts the display setting based on the property selected by the tester stores the setting to the test script via the test script retriever and sends an instruction to the session manager to reread the test script with the updated display setting. After receiving the instruction the session manager rereads the test script and accordingly adjusts the display of the subtitle bar .

To manage which test instruction is to be displayed the example subtitle manager of includes the feedback processor . The example feedback processor receives command instructions from the tester via the user interface . A tester may manually cycle through test instructions using for example a keyboard and or a mouse. The feedback processor receives the command from the tester retrieves the appropriate test script to determine a test instruction corresponding to the command and sends the determined test instruction to the session manager to display within the subtitle bar . For example a tester may provide a command to view a next test instruction. In this example the feedback processor determines the currently displayed test instruction e.g. via the session manager and identifies the subsequent test instruction in a test instruction sequence specified within a corresponding test script. The feedback processor then sends an instruction to the session manager to display the subsequent test instruction.

The feedback processor also processes test feedback information received from a tester and or the application under test . Test feedback information may include for example indications that a test instruction was performed indications that a test instruction passed or failed and or results of a test instruction. For example a tester may provide a command describing a result of a test e.g. by moving a mouse to click a selection or typing I the result with a keyboard . After receiving the command with the description the example feedback processor creates or updates a test results log within the corresponding test script. The feedback processor may also link the results to the associated test instruction within the test script. Further the feedback processor may manage a toolbar displayable in conjunction with the subtitle bar that a tester may use to enter feedback information e.g. commands that include a description of a result from a test instruction and or perform actions on the test instructions. In this manner a tester may access a test script to view test results and or determine which of the test instructions have been performed.

The example feedback processor of the illustrated example also monitors and or receives feedback from the application under test . The feedback may include for example an indication that a tester has performed an action directed by a test step. If the feedback processor detects that a result of a test did not match a passing condition the feedback processor may transmit troubleshoot instructions and or procedures stored in the test script to the session manager to display within the user interface in association with the subtitle bar . The feedback may also include results of an action of a tester as measured and or quantified by the application under test . In this manner the feedback processor automatically logs test results and or updates test instructions displayed with the subtitle bar based on information received from the application and or the user interface .

For example the feedback processor may receive feedback from the application under test that a certain link was selected by a tester. The example feedback processor determines that the selected link is associated with a currently displayed test instruction that directs the tester to select the link. Because the tester correctly performed the test instruction the feedback processor records e.g. in a corresponding test script that the test instruction was performed and determines a next test instruction. The next test instruction may be a next test instruction in a sequence and or may be a test instruction to be performed upon the successful completion of the current test instruction. The feedback processor then stores the test script including the test results to the test script database and sends an instruction to the session manager with the next test instruction to display within the subtitle bar .

While an example manner of implementing the example system has been illustrated in one or more of the elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example workstation the example user interface the example subtitle manager the example receiver the example application type identifier the example subtitle configurer the example feedback processor the example test script retriever the example test script database the example session manager the subtitle renderer and or more generally the example system of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any or all of the example workstation the example user interface the example subtitle manager the example receiver the example application type identifier the example subtitle configurer the example feedback processor the example test script retriever the example test script database the example session manager the subtitle renderer and or more generally the example system could be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc. When any of the appended apparatus claims are read to cover a purely software and or firmware implementation at least one of the example workstation the example user interface the example subtitle manager the example receiver the example application type identifier the example subtitle configurer the example feedback processor the example test script retriever the example test script database the example session manager and or the subtitle renderer are hereby expressly defined to include a computer readable medium such as a memory DVD CD Blu ray disc etc. storing the software and or firmware. Further still the system of may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

In the example of the user interface includes a web browser to display the application under test . The web browser may be implemented by any type of web browser. In other examples the user interface may include an application programming interface API and or any other interface to view the application under test . In this example the web browser includes a navigation bar which displays a file location of the application under test . A tester enters a web address shown in the navigation bar to cause the web browser to navigate to the application under test . In other examples a tester may access the application under test via a file open function.

In the illustrated example the subtitle bar is shown at a lower portion of the application under test thereby enabling a tester to view substantially all of the application under test within the user interface . In other examples the subtitle bar may be superimposed over a portion of the application under test that is sparsely populated and or void of any text and or graphics. In yet other examples a tester may manually move the subtitle bar e.g. with a point and client input device to a desired location within the user interface .

To reduce an amount of area used by the subtitle bar the example subtitle manager of reduces a height of the subtitle bar so that only one line of text is displayed. In this example the one line of text provides a short synopsis of a test instruction that a tester is to perform in the application under test . In this example the height of the subtitle bar is about one fifteenth 1 15 of the height of the portion of the application under test displayed in the user interface . Further while the subtitle bar is shown extending to a width of the user interface in other examples the subtitle bar may include a shorter width.

A tester can read the test instruction within the subtitle bar and select the Quality Assurance i.e. QA link within the application under test . If the tester can view the Quality Assurance web page the tester knows via the subtitle bar that the test instruction was performed as expected by the application under test . A tester may then prompt the subtitle bar to display the next test instruction e.g. by selecting the subtitle bar with appoint and click device . In other examples the subtitle manager automatically detects that the Quality Assurance page is displayed according to the test instruction determines a next test instruction and display the next test instruction within the subtitle bar .

Because the subtitle bar of the illustrated example is relatively small compared to the area of the application under test the tester can view the text and graphics of the application under test without having to move the subtitle bar . In this example the subtitle bar is partially transparent thereby enabling a tester to view portions of the application under test that are behind the subtitle bar . For example Events and News links are viewable by a tester through the partial transparency of the subtitle bar . Additionally while the subtitle bar is displayed towards the bottom of the application under test in other examples the subtitle manager may locate the subtitle bar over a portion of the application under test that does not include any text and or graphics.

A tester may open the test instruction panel in instances when the tester needs more information to perform a test and or when the tester needs more information regarding an expected result. After viewing the information within the panel the tester may close the panel and continue to test the application under test . In this manner the subtitle manager only displays additional test information when the information is requested by the tester.

The example test instruction panel illustrated in includes a tool bar which enables a tester to perform actions related to test instructions. In some examples the tool bar may be displayed independent of the test instruction panel . For example the tool bar may be displayed when a tester moves a cursor over the subtitle bar . A tester may use the tool bar to request a next or a previous test instruction mark a test instruction as successfully completed mark a test instruction as not successfully completed mark a test instruction as untested store a result of the test instruction performed on the application under test and or view a summary of a corresponding test script.

In some examples the tool bar includes a function that opens a settings panel to enable a tester to configure a display of the subtitle bar . An example settings panel is described in conjunction with . In some further examples the tool bar may enable a tester to begin recording a performance of the application under test in response to the tester executing the test instructions. In yet further examples the tool bar may enable a tester to specify hotkeys on a keyboard for performing the functions provided within the tool bar e.g. keyboard arrow keys to navigate between test instructions .

The settings panel of the illustrated example includes a color property a font size property a default location property a transparency property and an auto hide property . The color property enables a tester to select a background color and a font color for the subtitle bar . The font size property enables a tester to select a font size of text within the subtitle bar . The default location property enables a tester to select a location within the user interface to display the subtitle bar . In other examples a tester may select an option for displaying the subtitle bar within an empty portion of the application under test .

The example transparency property of the illustrated example enables a tester to select a transparency level of the subtitle bar . The auto hide property of the illustrated example enables a tester to select a time period after which the subtitle manager hides and or removes the subtitle bar from the user interface . Using this feature a tester may view a test instruction prior to the subtitle bar being removed and thereafter view the entire application under test displayed within the user interface . In some examples the subtitle manager can redisplay the subtitle bar when a tester moves a cursor over a location where the subtitle bar was previously displayed.

When a tester selects the properties within the settings panel the subtitle manager stores the properties to a corresponding test script. Thus when the tester later accesses the test script the subtitle bar is displayed by the subtitle manager using the stored properties . In other examples the properties may be global for all of the test scripts and thus may be saved at a first time and thereafter applied irrespective of the test script being implemented.

A flowchart representative of example machine readable instructions for implementing the subtitle manager of is shown in . In this example the machine readable instructions comprise a program for execution by a processor such as the processor P shown in the example processor platform P discussed below in connection with . The program may be embodied in software stored on a computer readable medium such as a CD a floppy disk a hard drive a DVD Blu ray disc or a memory associated with the processor P but the entire program and or parts thereof could alternatively be executed by a device other than the processor P and or embodied in firmware or dedicated hardware. Further although the example program is described with reference to the flowchart illustrated in many other methods of implementing the example subtitle manager may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

As mentioned above the example processes of may be implemented using coded instructions e.g. computer readable instructions stored on a tangible computer readable medium such as a hard disk drive a flash memory a ROM a CD a DVD a Blu ray disc a cache a RAM and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . As used herein the term tangible computer readable medium is expressly defined to include any type of computer readable storage and to exclude propagating signals. Additionally or alternatively the example processes of may be implemented using coded instructions e.g. computer readable instructions stored on a non transitory computer readable medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable medium and to exclude propagating signals.

The example machine readable instructions of begin when the feedback processor receives an indication that an application under test e.g. the application under test is displayed within a user interface e.g. via the receiver block . The example application type identifier then determines an identifier of the application under test block . Using the identifier the example the test script retriever retrieves a test script that matches and or corresponds to the identifier block .

The example session manager then creates a session for displaying a subtitle bar e.g. the subtitle bar superimposed over the application under test block . The example session manager then determines display properties and or settings for the subtitle bar that are specified within the test script block . In other examples the session manager may access a global set of display properties to configure the subtitle bar.

The example session manager next identifies a location within the user interface to display the subtitle bar block . The location may be specified within the display settings or alternatively may be determined by identifying a sparsely populated substantiality empty void and or empty space within the application under test. The example session manager then determines a test instruction to display within the subtitle bar block . Because for purposes of illustrating this is the first test instruction displayed the example session manager searches for the first test instruction listed within the test script. The example subtitle renderer then renders the subtitle bar with the test instruction based on the display settings and or properties block .

As shown in the example subtitle renderer then displays the subtitle bar superimposed over the application under test at the determined location within the user interface block . The example feedback processor may then receive an indication that the test instruction is completed block . The indication may be provided by a tester or alternatively may be reported by the application under test. The example feedback processor stores the test result to the test script and or a test log block .

The example feedback processor then determines if the test script is complete block . If the test script is not complete the example feedback processor determines the next test instruction block . However if the test script is complete the example feedback processor stores the test script and or the test log to the test script database block . The example machine readable instructions may then terminate.

The processor platform P of includes at least one programmable processor P. The processor P may implement for example the example workstation the example subtitle manager the example receiver the example application type identifier the example subtitle configurer the example feedback processor the example test script retriever the example session manager and or the example subtitle renderer of . The processor P executes coded instructions P and or P present in main memory of the processor P e.g. within a RAM P and or a ROM P and or stored in the tangible computer readable storage medium P. The processor P may be any type of processing unit such as a processor core a processor and or a microcontroller. The processor P may execute among other things the example interactions and or the example machine accessible instructions of and or B to transfer files as described herein. Thus the coded instructions P P may include the instructions of and or B.

The processor P is in communication with the main memory including a ROM P and or the RAM P via a bus P. The RAM P may be implemented by dynamic random access memory DRAM synchronous dynamic random access memory SDRAM and or any other type of RAM device and ROM may be implemented by flash memory and or any other desired type of memory device. The tangible computer readable memory P may be any type of tangible computer readable medium such as for example compact disk CD a CD ROM a floppy disk a hard drive a digital versatile disk DVD and or a memory associated with the processor P. Access to the memory P the memory P and or the tangible computer medium P may be controlled by a memory controller.

The processor platform P also includes an interface circuit P. Any type of interface standard such as an external memory interface serial port general purpose input output etc may implement the interface circuit P. One or more input devices P and one or more output devices P are connected to the interface circuit P.

Although the above described example methods apparatus and articles of manufacture including among other components software and or firmware executed on hardware it should be noted that these examples are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of the hardware software and firmware components could be embodied exclusively in hardware exclusively in software or in any combination of hardware and software. Accordingly while the above described example methods apparatus and articles of manufacture the examples provided herein are not the only way to implement such methods apparatus and articles of manufacture. For example while the example methods apparatus and articles of manufacturer have been described in conjunction with file systems mount points and or file directories the example methods apparatus and or article of manufacture may operate within any structure that stores data.

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent either literally or under the doctrine of equivalents.

