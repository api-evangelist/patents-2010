---

title: Method and system for selecting content items to be presented to a viewer
abstract: A rules evaluation engine operable to select optimal content for presentation to the viewer at each presentation opportunity. The engine evaluates segmentation rules associated with each particular content item in parallel, and then selects the best content to be presented. Priorities determined during evaluation sort out which content items will be presented. Real time dynamic enrichment of the decision making context occurs by retrieving additional information required to evaluate the rules. Logging and administrative processes for managing the segmentation rules are also realized.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08060504&OS=08060504&RS=08060504
owner: Jericho Systems Corporation
number: 08060504
owner_city: Dallas
owner_country: US
publication_date: 20100812
---
This application is a continuation of U.S. patent application Ser. No. 10 852 406 filed on May 24 2004 now U.S. Pat. No. 7 792 828 which is incorporated herein by reference in its entirety and claims the benefit of priority to U.S. Provisional Patent Application No. 60 482 487 filed on Jun. 25 2003 which is also incorporated herein by reference in its entirety. This application is related to and incorporates by reference U.S. Provisional Patent Application No. 60 438 972 filed Jan. 9 2003 entitled Method and System for Dynamically Implementing an Enterprise Resource Policy and U.S. patent application Ser. No. 10 755 173 filed Jan. 9 2004 entitled System and Method For Dynamically Implementing an Enterprise Resource Policy. 

The invention relates to a system operable to select optimal content to be presented to a viewer based upon both the characteristics of the viewer and the viewing situation.

Over the last decade technology has drastically improved the effectiveness of technology based marketing. CRM systems have brought businesses back to their ancestral roots by providing organizations with a collective memory of every customer and their interactions. Previously this was cost prohibitive.

However providing the optimal message to a customer is still a very cumbersome and time consuming process. As a result corporations have not fully benefited from the promise of real time customized and personalized marketing. Many customized content and personalization initiatives remain undeveloped because of their prohibitive human and financial costs of implementation.

With the traditional targeted marketing paradigm the seller initiates an interaction with the customer by analyzing historical data to segment customers offline and then pushes a message out to the customer. The seller then hopes for a response. However other more proactive methods are desired.

The present invention provides a system and method to select from a predefined palette of content items those items which are best suited for an individual. This selection is based both on the attributes of the viewer and the context in which the contents is viewed. i.e. at that precise moment in time . The content may involve advertisements articles or multimedia such as animated images movies or audio clips.

More specifically the present invention provides a centralized system that defines and manages business rules to identify what content is most relevant to the individual viewer s context. Then upon receipt of the content selection request a centralized system evaluates the viewer s characteristics the situational characteristics context and the viewer s personal history against the coded rules in order to select an optimal content set for display. Then the selected content is returned to a local system that serves the selected content to the viewer. Essentially a number of diverse content items can be managed by the system wherein each content item may have one or more coded rules which define the viewer and content in which content would be presented to the viewer.

In effect each item of content has a rule which describes a profile of what an ideal viewer or presentation opportunity. When the content selection request is made the coded rules associated with each relevant item are evaluated to determine if an appropriate viewing opportunity exists. If the rule is satisfied the system then adds the content item within a prioritized queue to an aggregated body of content items for this presentation opportunity. The items are then sorted by descending priority with the most significant items being returned for presentation. The prioritized list is returned based on the results of evaluating the individual content items against various business rules. This produces a prioritized list of items most suitable for presentation to the viewer in the viewer s current viewing context.

Several advantages are provided. First the ability to perform the evaluation process in real time at the moment of the request is a significant advantage over existing systems. This allows the content selected to be sensitive to the current presentation opportunity rather than the data warehouse intensive traditional model which selects content days and even weeks beforehand. The present invention may also couple to enterprise data sources customer care systems and external data sources such as credit scoring bureaus etc. to provide a very rich palette of information on which to base the content selection rules.

A detailed log of each request made along with any all content items selected for presentation provides for auditability and effectiveness metrics as well as inputs for a feedback loop in which future presentation opportunities can be made based on prior decisions. For example a rule could be constructed such that an individual item of content would be highly prioritized under default conditions but would be deprioritized in favor of other content items after the original item had been presented to a viewer. One implementation may reduce an item s priority after the item has been viewed three times in a 24 hour period.

An advantage of the present invention is that the rules defining the optimal presentation opportunity do not need to be maintained in executable code by the administrator or user. The rules are captured in a representative notational format via a rule builder GUI application and then stored in an XML encoded structure within repository. As they are not a part of the presentation engine such as a web server they can be changed at will without the need to update or test the web server or HTML source for the web pages the content is to be presented in. The items of content are managed in a hierarchical model with each item inheriting characteristics from its parent to determine who may manipulate or change the rules which determine the rule s behavior unless a specific rule is established for the individual item. Ultimately this allows the rules to be administered in a distributed fashion throughout an enterprise or even to clients usually advertisers and business partners if the situation warrants such.

The invention can be invoked via a number of methods including a J2EE compliant API library a procedural interface suitable for linking into legacy applications written in C COBOL FORTRAN etc. a Web Services interface a C interface or even a custom developed API for an individual customer s needs.

Preferred embodiments of the present invention are illustrated in the FIGUREs like numerals being used to refer to like and corresponding parts of the various drawings.

One potential architecture for the use with the invention is depicted in . Here user or viewer requests a page of content from web server . Viewer may have previously established his identity by authenticating in some fashion with web server . Alternatively viewer may be treated as having a default or anonymous identity.

Web server loads page from web page repository . Then web server executes java servlets or other like instructions that are contained within page . The servlets invoke services application programming interface API which places a remote procedure call RPC into policy manager . This RPC requests content specifically chosen for viewer . Request contains both the identity of viewer and information that defines the set of rules and content items to be selected from a campaign or set of related content items.

Policy manager uses a name associated with the campaign or set of related content item to retrieve a set of rules from rules repository . Policy manager then examines rules to determine what additional information or data elements are required to evaluate rules .

Policy manager invokes any all connectors required including but not limited to LDAP connector SQL DB connector and custom connector to retrieve the information or data elements required to evaluate rules . These data elements may be within directory database HR system database and other data sources . These data sources return the data elements needed to policy manager .

Policy manager enriches the decision context with the information retrieved. Policy manager then evaluates the rules and creates an aggregated list of the content items associated with any all rules whose criteria are met. Policy manager then sorts the aggregated list in order of descending priority. The top n items of content n being a number of items parameter passed on the ESAPI request are selected and returned to web server as the resultant of the ESAPI request. The web server then inserts those return content items into page which may take the form of an HTML document. The customized page is then presented to viewer via a web browser or other like application.

Event log may track every transaction created and stored within repository . The information within event log can provide the basis of metrics determining system usage and effectiveness as well as providing the inputs and capability on which to modify rules . For example upon such information may include how many times a particular item has been presented to a specific viewer in a defined time interval.

In step the document source is retrieved from the source repository whereupon the web server executes instructions embedded within the document. Those instructions then invoke a services API in step to request content from server . Optimal content is returned to web server in step . Instructions within the document are then replaced with content. Then in step web server delivers the customized page to the user s browser for display.

In GUI allows administrative users to access rules stored within repository . GUI also facilitates the ability of administrative users to create and modify coded rules based on business rules. GUI interacts with repository through server . The coded rules corresponding to the business rules are stored within repository . These rules determine what content will be eligible to be presented to a viewer as previously described in .

Rules are retrieved from repository following receipt of a content selection request that corresponds to query that is received via web server via input from user through web server . Rules are dynamically loaded and interpretively evaluated within process wherein the results of this evaluation are returned to web server or other requesting application in order to present the optimum content to a viewer.

The concept of dynamic enrichment of the data is available within the decision context depicted in . The dynamic enrichment process involves receiving a request in step . In step in response to the request a policy set is loaded from repository in step . The policy set is analyzed to determine the required data elements in step . In step metadata is consulted and data elements are grouped by connector. For each connector a determination is made in step for data for each data element within the connector. This involves determining whether or not each data element already has a value at decision point . If it does an evaluation is made for the next data element. If not a determination is made a decision point as to whether or not all required key values for this data element are present. If all the required key values for this data element are present the data element is added to the connector request in step otherwise a determination is made for the next data element. In decision point a determination is made as to whether or not additional data elements are required for this data connector. If additional elements are required the next data element is evaluated returning to step . Otherwise at decision point a determination is made as to whether or not any more connectors remain to be processed. Additional connectors are processed as described above. Otherwise the connectors with unresolved elements are invoked at step in order to retrieve identified additional data elements. At decision point a determination is made as to whether or not any new values were retrieved. If there were at decision point a determination is made as to whether any unfilled data elements remain in which case the process is repeated by returning to step until no unfilled data elements remain as indicated at point . Essentially feature allows the rules engine to determine when all the data elements required to evaluate the policy are present. If the answer is no then the rules engine may through connectors map to and retrieve all requisite data elements before evaluating the rule.

A diverse fault tolerant architecture that enables effectively sealing across multiple servers and or platforms while continuously servicing content selection requests is depicted in . This architecture effectively operates even when a multiple server loss occurs.

The current implementation of this concept is built upon a Java infrastructure and utilizes a number of fairly obscure features of the Java language to facilitate the service. The two most prominent of these are the concept of a dynamic class loader and HTTP XML RPC architecture used to manage the interaction between processes.

It is important to note that while one embodiment is implemented in the Java language the concepts that distinguish the present invention are notably not Java specific and in no way should the claims be restricted to the Java language or the platforms on which it runs. In a procedural language such as C C PL 1 etc. the same concepts could readily be implemented through the use of dynamically shared libraries or through dynamic overlay methods that are well defined and commonplace.

While the embodiments discussed above focus on serving content to a web server the present invention may also service other delivery mechanisms such as a Voice Response Unit VRU a wireless device such as a pager or cell phone etc.

Although the present invention is described in detail it should be understood that various changes substitutions and alterations can be made hereto without departing from the spirit and scope of the invention as described by the appended claims.

