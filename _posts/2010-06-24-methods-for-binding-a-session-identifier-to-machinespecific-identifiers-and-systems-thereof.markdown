---

title: Methods for binding a session identifier to machine-specific identifiers and systems thereof
abstract: A method, computer readable medium, and apparatus for secure application delivery includes forming at a traffic management device a session identifier in response to a first request from a client device for access to a network application. The session identifier is encrypted for sending to the client device using a session variable formed by hashing at least one physical identifier associated uniquely with the client device in response to the first request. In a second request from the client device to access the network application, the encrypted session identifier is decrypted using an updated value of the session variable. The access to the network application is provided when the decrypted session identifier matches the formed session identifier, and denied when the decrypted session identifier does not match the formed session identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09444620&OS=09444620&RS=09444620
owner: F5 Networks, Inc.
number: 09444620
owner_city: Seattle
owner_country: US
publication_date: 20100624
---
This technology generally relates to securing network applications and more particularly to systems and methods for binding a session identifier to one or more machine specific unique physical identifiers IDs to prevent theft of the session identifier.

Many websites use one or more session identifiers e.g. cookies to store cached authentication credentials of users and applications so that users don t have to authenticate to the website between browsing sessions when moving from web page to web page within the website. Examples of such websites include websites providing secure e mail services and websites requiring user authentication for accessing network applications. Regardless of how secure the session identifier content is for example fully encrypted credentials with the key stored on the server or a proxy device or if the application is using a Secure Sockets Layer SSL connection to secure the session identifier in transit it is still possible for a malicious user eavesdropper or application to subvert server authentication mechanisms by stealing the full user session identifier. Conventionally using standard and readily available data e.g. a source Internet Protocol IP address to prevent theft of the session identifier can be problematic since IP addresses are dynamic for many remote Internet connections and often many unique client connections can come from the same source IP address e.g. from organizations that use source based Network Address Translation NAT such as large Internet Service Providers or ISPs . Unfortunately conventional technologies do not resolve the problem of session identifier theft e.g. cookie theft .

One example of the technology is a method for providing secure application delivery. The method includes forming at a traffic management device a session identifier in response to a first request from a client device for access to a network application. The Ser. No. 13 014 340.3 session identifier is encrypted for sending to the client device using a session variable formed by hashing at least one physical identifier associated uniquely with the client device in response to the first request. In a second request from the client device to access the network application the encrypted session identifier is decrypted using an updated value of the session variable. The access to the network application is provided when the decrypted session identifier matches the formed session identifier and denied when the decrypted session identifier does not match the formed session identifier.

Another example includes a computer readable medium having stored thereon instructions for providing secure application delivery which when executed by at least one processor causes the processor to perform a number of steps. The steps include forming at a traffic management device a session identifier in response to a first request from a client device for access to a network application. The session identifier is encrypted for sending to the client device using a session variable formed by hashing at least one physical identifier associated uniquely with the client device in response to the first request. In a second request from the client device to access the network application the encrypted session identifier is decrypted using an updated value of the session variable. The access to the network application is provided when the decrypted session identifier matches the formed session identifier and denied when the decrypted session identifier does not match the formed session identifier.

Another example is that of a traffic management device which includes one or more processors executing one or more traffic management applications a memory a network interface controller coupled to the one or more processors and the memory and configured to receive data packets from a network that relate to the executing traffic management applications and provide secure application delivery. In this example at least one of the one or more processors and the network interface controller include logic capable of being further configured to form at the traffic management device a session identifier in response to a first request from a client device for access to a network application. The session identifier is encrypted for sending to the client device using a session variable formed by hashing at least one physical identifier associated uniquely with the client device in response to the first request. In a second request from the client device to access the network application the encrypted session identifier is decrypted using an updated value of the session variable. The access to the network application is provided when the decrypted session identifier matches the formed session identifier and denied when the decrypted session identifier does not match the formed session identifier.

The examples offer numerous advantages. By way of example only in order to prevent a session identifier theft e.g. a cookie theft the session identifier is uniquely bound to both a user s session and a machine or device the session originated on. By using client information available to a traffic management device interposed between the client devices and server devices the traffic management device can bind a user session identifier to a specific session and machine helping to minimize theft of authenticated cookies directly from the client device and or in transit. Further the examples utilize an out of band communication or a separate or independent communication channel to obtain the physical identifier used in encrypting and decrypting a session identifier e.g. a cookie . The out of band communication is separate from and independent of a communication channel used for actual transmission reception of the encrypted decrypted session identifier and for key management. These and other advantages aspects and features will become more apparent from the following detailed description when viewed in conjunction with the accompanying drawings. Non limiting and non exhaustive examples are described with reference to the following drawings. Accordingly the drawings and descriptions below are to be regarded as illustrative in nature and not as restrictive or limiting.

Referring to an exemplary network system including a traffic management device that can provide secure application delivery for example by binding session identifiers e.g. cookies to one or more unique physical identifiers associated with client computers to for reducing and or preventing session identifier theft is illustrated. By way of example only a network can provide responses and requests according to the Hyper Text Transfer Protocol HTTP based application request for comments RFC protocol or the Common Internet File System CIFS or network file system NFS protocol in this example although the principles discussed herein are not limited to these examples and can include other application protocols and other types of requests e.g. File Transfer Protocol FTP based requests . The exemplary network system can include a series of one or more client devices such as client computers to . Client computers are coupled to traffic management device interposed in between servers to and the client devices to for providing one or more communication channels through network and a Local Area Network LAN although other communication channel may be directly established between various devices in network system without network and or LAN . For clarity and brevity in two server devices and are shown but it should be understood that any number of server devices can use the exemplary network system . Likewise two client devices and one traffic management device are shown in but any number of client devices and traffic management devices can also use the exemplary network system as well. Although network and LAN are shown other numbers and types of networks could be used. The ellipses and the designation n denote an unlimited number of server devices and client devices respectively.

Servers comprise one or more server computing machines or devices capable of operating one or more Web based applications that may be accessed by network devices in the network such as client computers also referred to as client devices via traffic management device and may provide other data representing requested resources such as particular Web page s image s of physical objects and any other objects responsive to the requests although the servers may perform other tasks and provide other types of resources. It should be noted that while only two servers and are shown in the network system depicted in other numbers and types of servers may be coupled to the traffic management device . It is also contemplated that one or more of the servers may be a cluster of servers managed by a network traffic management device such as traffic management device .

The client computers in this example also interchangeably referred to as client devices client computing devices and client computing systems can run interface applications such as Web browsers that can provide an interface to make requests for and send data to different Web server based applications via the network and via traffic management device . A series of network applications can run on the servers that allow the transmission of data that is requested by the client computers . The servers can provide data or receive data in response to requests directed toward the respective applications on the servers from the client computers . For example as per the Transmission Control Protocol TCP packets can be sent to the servers from the requesting client computers to send data although other protocols e.g. FTP may be used. It is to be understood that the servers can be hardware or software or can represent a system with multiple servers which can include internal or external networks. In this example the servers can be any version of Microsoft IIS servers or Apache servers although other types of servers can be used. Further additional servers can be coupled to the network and or LAN and many different types of applications can be available on servers coupled to the network and or LAN .

Generally the client devices such as the client computers can include virtually any computing device capable of connecting to another computing device to send and receive information including Web based information. The set of such devices can include devices that typically connect using a wired and or wireless communications medium such as personal computers e.g. desktops laptops mobile and or smart phones and the like. In this example the client devices can run browsers and other types of applications e.g. web based applications that can provide an interface to make one or more requests to different server based applications via the network although requests for other types of network applications may be made by the client computers . Client computers can be configured to receive encrypted session identifiers e.g. cookies from traffic management device or other types of traffic management devices e.g. routers load balancers application delivery controllers and the like . The encrypted session identifier when returned by one of the client computers to the traffic management device can be used for example to authorize access to the network applications stored on one or more servers to the client computers . Client computers can have one or more unique physical identifiers that are obtained by the traffic management device to encrypt the client session identifier e.g. a cookie . The unique physical identifiers associated with each of client computers can be stored at respective local databases or memory units of each of the client computers . Alternatively such physical identifiers can be parts of one or more physical components of the client computers . By way of example only and not by way of limitation the unique physical identifiers associated with each of client computers can be one or more of a media access control MAC identifier ID a central processing unit CPU identifier a basic input output system BIOS serial number a unique biometric device identifier and a secure hardware token each unique to the client device although other types of unique physical identifiers that can form a seed of an encryption key used to form the session identifier associated with one of the client computers may be used as can be contemplated by one of ordinary skill in the art after reading this disclosure. The unique physical identifiers of client computers can be obtained by the traffic management device performing an application programming interface call to an appropriate one of the client computers and parsing a database e.g. a registry on the client device associated with an operating system of the client device for example after authenticating the client device. Alternatively the unique physical identifier may be obtained independent from the authentication of the client device. In some examples when one or more of the physical identifiers at any one or more of the client computers is disabled e.g. a CPU ID disabled by an operating system of the client device a null value can then be used by the traffic management device as will be described in more detail with reference to below.

A series of Web based and or other types of protected and unprotected network applications can run on the application servers that allow the transmission of data that is requested by the client computers . The client computers can be further configured to engage in a secure communication with the traffic management device and or the servers using mechanisms such as Secure Sockets Layer SSL Internet Protocol Security IPSec Tunnel Layer Security TLS and the like.

In this example the network comprises a publicly accessible network such as the Internet which includes client computers although the network may comprise other types of private and public networks that include other devices. Communications such as requests from client computers and responses from servers take place over the network according to standard network protocols such as the HTTP and TCP IP protocols in this example but the principles discussed herein are not limited to this example and can include other protocols e.g. FTP . Further the network can include local area networks LANs wide area networks WANs direct connections other types and numbers of network types and any combination thereof. On an interconnected set of LANs or other networks including those based on different architectures and protocols routers switches hubs gateways bridges crossbars and other intermediate network devices may act as links within and between LANs and other networks to enable messages and other data to be sent from and to network devices. Also communication links within and between LANs and other networks typically include twisted wire pair e.g. Ethernet coaxial cable analog telephone lines full or fractional dedicated digital lines including T1 T2 T3 and T4 Integrated Services Digital Networks ISDNs Digital Subscriber Lines DSLs wireless links including satellite links optical fibers and other communications links known to those skilled in the relevant arts. In essence the network includes any communication medium and method by which data may travel between client devices servers and traffic management device and these devices are provided by way of example only. Network can support an independent communication channel also referred to herein as an out of band channel for communicating one or more unique physical identifiers obtained from one or more client computers . The independent communication channel is separate from a communication channel used for transmitting and or receiving a session identifier e.g. a cookie encrypted or otherwise between the traffic management device that creates the independent out of band channel and one or more client computers .

In this example each of the servers traffic management device and client computers can include a central processing unit CPU controller or processor a memory and an interface system which are coupled together by a bus or other link although other numbers and types of each of the components and other configurations and locations for the components can be used. Since these devices are well known to those skilled in the relevant art s they will not be described in further detail herein.

In addition two or more computing systems or devices can be substituted for any one of the systems in the network system . Accordingly principles and advantages of cloud computing and or distributed processing such as redundancy replication virtualization and the like can also be implemented as appropriate to increase the robustness and performance of the devices and systems of the network system . The network system can also be implemented on a computer system or systems that extend across any network environment using any suitable interface mechanisms and communications technologies including for example telecommunications in any suitable form e.g. voice modem and the like Public Switched Telephone Network PSTNs Packet Data Networks PDNs the Internet intranets combination s thereof and the like.

By way of example only and not by way of limitation LAN comprises a private local area network that includes the traffic management device coupled to the one or more servers although the LAN may comprise other types of private and public networks with other devices. Networks including local area networks besides being understood by those of ordinary skill in the relevant art s have already been described above in connection with network and thus will not be described further here.

As shown in the example environment of network system depicted in the traffic management device can be interposed between the network and the servers coupled via LAN as shown in . Again the network system could be arranged in other manners with other numbers and types of devices. Also the traffic management device is coupled to network by one or more network communication links including an independent autonomous out of band link for obtaining one or more unique physical identifiers from one or more client computers and intermediate network devices such as routers switches gateways hubs crossbars and other devices not shown . It should be understood that the devices and the particular configuration shown in are provided for exemplary purposes only and thus are not limiting. Although a single traffic management device additional traffic management devices may be coupled in series and or parallel to the traffic management device thereby forming a cluster depending upon specific applications and the single traffic management device shown in is by way of example only and not by way of limitation.

Generally the traffic management device manages network communications which may include one or more client requests and server responses to from the network between the client computers and one or more of the servers in LAN in these examples. These requests may be destined for one or more servers and as alluded to earlier may take the form of one or more TCP IP data packets originating from the network passing through one or more intermediate network devices and or intermediate networks until ultimately reaching the traffic management device for example. In addition as discussed in more detail with reference to traffic management device is configured to provide secure application delivery. In any case the traffic management device may manage the network communications by performing several network traffic management related functions involving network communications secured or unsecured such as load balancing access control VPN hosting network traffic acceleration encryption decryption cookie and key management and binding a session identifier e.g. a cookie to unique machine specific physical identifiers to prevent theft of the session identifier in accordance with the processes described further below in connection with for example.

In one example traffic management device can include the host processor characterized by anyone of the following component configurations computer readable medium and logic circuits that respond to and process instructions fetched from the host memory a microprocessor unit such as those manufactured by Intel Corporation of Santa Clara Calif. those manufactured by Motorola Corporation of Schaumburg Ill. those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor such as those manufactured by International Business Machines of Armonk N.Y. a processor such as those manufactured by Advanced Micro Devices of Sunnyvale Calif. or any other combination of logic circuits capable of executing the systems and methods described herein. Still other examples of the host processor can include any combination of the following a microprocessor a microcontroller a central processing unit with a single processing core a central processing unit with two processing cores or a central processing unit with more than one processing core.

Examples of the traffic management device include one or more application delivery controller devices of the BIG IP product family provided by F5 Networks Inc. of Seattle Wash. although other types of traffic management devices may be used. In an exemplary structure and or arrangement traffic management device can include the host processor that communicates with cache memory via a secondary bus also known as a backside bus while another example of the traffic management device includes the host processor that communicates with cache memory via the system bus . The local system bus can in some examples also be used by the host processor to communicate with more than one type of I O devices . In some examples the local system bus can be anyone of the following types of buses a VESA VL bus an ISA bus an EISA bus a Micro Channel Architecture MCA bus a PCI bus a PCI X bus a PCI Express bus or a NuBus. Other example configurations of the traffic management device include I O device that is a video display not shown separately that communicates with the host processor via an Advanced Graphics Port AGP . Still other versions of the traffic management device include host processor connected to I O device via any one or more of the following connections HyperTransport Rapid I O or InfiniBand. Further examples of the traffic management device include a communication connection where the host processor communicates with one I O device using a local interconnect bus and with a second I O device not shown separately using a direct connection. As described above included within some examples of the traffic management device is each of host memory and cache memory . The cache memory will in some examples be any one of the following types of memory SRAM BSRAM or EDRAM. Other examples include cache memory and host memory that can be anyone of the following types of memory Static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDECSRAM PCIOO SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM Ferroelectric RAM FRAM or any other type of memory device capable of executing the systems and methods described herein.

The host memory and or the cache memory can in some examples include one or more memory devices capable of storing data and allowing any storage location to be directly accessed by the host processor . Such storage of data can be in a local database used by way of example only to store one or more session variables e.g. a session variable formed by hashing at least one physical identifier associated uniquely with the client computers in response to a request from one or more of client computers although the local database may store other additional data. It is to be noted that local database can be optionally located within host memory and the location of the local database shown in is by way of example only and not by way of limitation. Alternatively local database may be outside traffic management device and coupled externally via one or more input output ports of network interface controller . Examples of local database may include Microsoft Access database provided by Microsoft Corporation of Redmond Wash. or an Oracle database provided by Oracle Corporation of Redwood Shores Calif. although one of ordinary skill in the art after reading this disclosure can contemplate other types and numbers of databases custom built or standardized which may be used to implement local database . Further examples of traffic management device include a host processor that can access the host memory via one of either system bus memory port or any other connection bus or port that allows the host processor to access host memory .

One example of the traffic management device provides support for anyone of the following installation devices a floppy disk drive for receiving floppy disks such as 3.5 inch 5.25 inch disks or ZIP disks a CD ROM drive a CD R RW drive a DVD ROM drive tape drives of various formats USB device a bootable medium a bootable CD a bootable compact disk CD for GNU Linux distribution such as KNOPPIX a hard drive or any other device suitable for installing applications or software. Applications can in some examples include a client agent or any portion of a client agent. The traffic management device may further include a storage device not shown separately that can be either one or more hard disk drives or one or more redundant arrays of independent disks where the storage device is configured to store an operating system software programs applications or at least a portion of the client agent. A further example of the traffic management device includes an installation device that is used as the storage device.

Furthermore the traffic management device can include network interface controller to communicate via an input output port inside network interface controller with a Local Area Network LAN Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 SNA DECNET broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET wireless connections optical connections or some combination of any or all of the above. Connections can also be established using a variety of communication protocols e.g. TCP IP IPX SPX NetBIOS Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI RS232 RS485 IEEE 802.11 IEEE 802.11a IEEE 802.11b IEEE 802.11g CDMA GSM WiMax and direct asynchronous connections . One version of the traffic management device includes network interface controller configured to communicate with additional computing devices via any type and or form of gateway or tunneling protocol such as Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. of Fort Lauderdale Fla. Versions of the network interface controller can comprise anyone of a built in network adapter a network interface card a PCMCIA network card a card bus network adapter a wireless network adapter a USB network adapter a modem or any other device suitable for interfacing the traffic management device to a network capable of communicating and performing the methods and systems described herein.

In various examples the traffic management device can include any one of the following I O devices a keyboard a pointing device a mouse a gesture based remote control device a biometric device an audio device track pads an optical pen trackballs microphones drawing tablets video displays speakers inkjet printers laser printers and dye sublimation printers or any other input output device able to perform the methods and systems described herein. Host I O ports may in some examples connect to multiple I O devices to control the one or more I O devices . Some examples of the I O devices may be configured to provide storage or an installation medium while others may provide a universal serial bus USB interface for receiving USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. Still other examples of an I O device may be bridge between the system bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire 800 bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus.

According to some examples traffic management device includes encryption decryption module and hashing module integrated as part of host system for carrying out various exemplary functions of binding a session identifier to one or more machine specific unique physical identifiers IDs to prevent theft of the session identifier e.g. a cookie . Alternatively encryption decryption module and hashing module may be a part of an autonomous application security manager module integrated with or communicating independently with the traffic management device . An exemplary application security manager is the BIG IP Application Security Manager provided by F5 Networks Inc. of Seattle Wash.

By way of example only after a user on one of the client computers has been authorized using hashing module which also includes hardware and logic circuitry traffic management device performs a hash upon the one or more unique physical identifiers to create respective one or more session variables e.g. session variable . Based upon signals from the hashing module over bus session variables are rebuilt and updated as will also be described in detail below with reference to . The algorithms implemented by hashing module may include standard hashing techniques for two or more variables well known to those of ordinary skill in the art.

By way of example only encryption decryption module is configured to encrypt the session identifier e.g. a cookie for sending to the client device e.g. client computer using session variable stored in local database formed by hashing at least one physical identifier associated uniquely with the client device in response to a request. Such encryption can be hardware based software based or a combination thereof depending upon specific applications. Encryption decryption module is further configured to decrypt the encrypted session identifier s when received in a second request or response from the client device to access the network application using an updated value of the session variable .

Accordingly components of traffic management device form a session identifier e.g. a cookie in response to a first request from a client device e.g. client computer for access to a network application encrypt using an exemplary encryption decryption module inside host system the session identifier for sending to the client device using session variable stored in local database optionally coupled to host memory within the traffic management device formed by hashing at least one physical identifier e.g. a CPU ID of one of client computers associated uniquely with the client device in response to the first request decrypt using the exemplary encryption decryption module the encrypted session identifier when received in a second request from the client device to access the network application using an updated value of the session variable and providing an access to the network application to the client device when the decrypted session identifier matches the formed session identifier and denying the access to the network application to the client device when the decrypted session identifier does not match the formed session identifier.

The operation of an example process for binding a session identifier to one or more machine specific unique physical identifiers IDs to prevent theft of the session identifier using traffic management device shown in will now be described with reference back to in conjunction with a flow diagram or flowchart shown in . The flowchart in is representative of example machine readable instructions for implementing binding a session identifier to one or more machine specific unique physical identifiers IDs to prevent theft of the session identifier for example at the traffic management device . In this example the machine readable instructions comprise an algorithm for execution by a a processor e.g. host processor b a controller and or c one or more other suitable processing device s within host system for example. The algorithm may be implemented in software stored on tangible computer readable media such as for example a flash memory a CD ROM a floppy disk a hard drive a digital video versatile disk DVD or other memory devices but persons of ordinary skill in the art will readily appreciate that the entire algorithm and or parts thereof could alternatively be executed by a device other than a processor and or implemented in firmware or dedicated hardware in a well known manner e.g. it may be implemented by an application specific integrated circuit ASIC a programmable logic device PLD a field programmable logic device FPLD a field programmable gate array FPGA discrete logic or the like . For example at least some of the components of the traffic management device could be implemented by software hardware and or firmware. Also some or all of the machine readable instructions represented by process of the flowchart of may be implemented manually at the traffic management device for example using a command line interface CLI prompt window. Further although the example algorithm is described with reference to the flowchart illustrated in persons of ordinary skill in the art will readily appreciate that many other methods of implementing the example machine readable instructions may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

Referring now to in step of the flowchart traffic management device receives a request for authentication of a user at one of the client computers and accordingly performs authenticating the request from the client computer. By way of example only the authentication can be performed by requesting the user for a user name and password although other forms of authentication may be used. It is to be noted that although a single user session is being described here with respect to flowchart users at more than one client computers can be authenticated at the same time. Additionally the same client computer may be authenticated at different instances of time for the same and or a different network application residing on one or more of servers requested by the user of the client computer. An exemplary scenario for authenticating one or more users on one or more client computers is an online banking operation that verifies an identity of the user requesting an online banking session to conduct the online banking operation although other authentication scenarios with secure implementations can be contemplated by one of ordinary skill in the art after reading this disclosure. In one example client computers may request access to network applications via traffic management device using one or more hyper text transfer protocol HTTP requests. Alternatively client computers may request access to network applications via traffic management device using other types of request formats for example a file transfer protocol FTP request.

In step once the user has been authenticated to a particular application by the traffic management device the traffic management device communicates with the client computer hosting the user for obtaining one or more unique physical identifier from the client computer. For example traffic management device can obtain the unique one or more physical identifiers via an application programming interface API call or by parsing out a database associated with an operating system of the client device for example a registry of a Windows operating system user . By way of example only and not by way of limitation the unique physical identifiers can be one or more of a media access control MAC identifier ID a central processing unit CPU ID a basic input output system BIOS serial number a unique biometric device identifier and a secure hardware token or other types of physical identifiers each unique to the authenticated one of the client computers that can be used to tie a network session for one or more of the client computers with respective machine specific identifiers associated with the one or more client computers can be used. In one example the traffic management device using network interface controller allocates a dedicated out of band or independent communication channel for obtaining the one or more physical identifiers. Such a dedicated out of band channel is independent of other communication channels between the traffic management device and the client computers . By way of example only the dedicated out of band communication channel is separate from a communication band for exchanging a session identifier between one or more client computers and servers associated with the authenticated session of step above or a channel used for key management purposes. Further by way of example only the dedicated out of band channel can be implemented by using a band allocation software executing on the host system at the discretion of a system administrator by using exclusively dedicated hardware circuitry and hardware ports of network interface controller or using a combination of hardware and software. The dedicated out of band channel can be the same one used for authentication in step for example when the traffic management device requests the user s username and password. The authentication of step happens outside of the user s request for actual session for example an online banking website session. In examples discussed herein. the request for machine specific data e.g. one or more unique physical identifiers happens over the authentication channel that is out of band of the session request channel e.g. a communication channel used for establishing and servicing a website session request . An exemplary advantage of using separate channels is that an eavesdropper looking for only a session identifier will not be able to obtain the one or more unique physical identifiers and will be unaware of such an independent out of band communication channel for obtaining the one or more unique physical identifiers associated with the authenticated one of the client computers . Accordingly as will be explained in more detail below even if the eavesdropper obtains the session identifier a decryption of the session identifier by the eavesdropper for malicious access to the network application will fail.

In step the hashing module in the traffic management device performs hashing at least one physical identifier associated uniquely with the requesting one of the client computers in response to the request for access to a network application stored on one or more servers . By way of example only and not by way of limitation the hashing can be performed using both MAC ID and a CPU ID obtained from the requesting one of the client computers although the hashing may be performed by using only one of the physical identifiers e.g. only MAC ID or only CPU ID . The hashed value of the one or more physical identifiers is assigned to session variable for storage in local database . In one example the session variable may be named as session.machine.id indicating the authenticated session is bound to a machine identifier ID of the requesting one of the client computers although other formats of session variable may be used as can be contemplated by one of ordinary skill in the art after reading this disclosure. Further session variable can be stored in local database along with other session variables associated with one or more client computers . Further the location of storage of session variable formed by the hashing module is exemplary only and in alternative scenarios session variable may be stored in different locations e.g. a buffer or cache memory in host system . In the event when a physical identifier associated with the requesting one of the client computers is disabled e.g. a CPU ID disabled by an operating system of the requesting one of the client computers hashing module may perform hashing by utilizing a null value of the disabled physical identifier to form the session variable .

In step traffic management device receives a new request from the client computer that was authenticated for accessing a network application within the same session established in step . In this example network application for which the user of one of the client computers requests access to can be a protected application. Although the authenticating of the client computer in step was performed before receiving the new request it is to be noted that the term request can generally include by way of example only any communication from one of the client computers for network resources or applications within a same session after the authentication after a period of time determined by or dependent upon a user of the requesting one of the client computers .

In step traffic management device builds or forms a session identifier e.g. a cookie and data associated with the session identifier to be used by the requested network resource or application. In one example a cookie is formed by the requested network application or by the traffic management device based on application data although other types of session identifiers may be used instead of a cookie. Before returning the formed session identifier to the user on the authenticated one of the client computers the encryption decryption module encrypts the entire session identifier using the value of session variable as an encryption key. It is to be noted that sending the encrypted session identifier occurs over a communication channel separate from and independent of the out of band communication channel used for obtaining the one or more unique physical identifiers as discussed above with reference to step . In some alternative examples sending of the encrypted session identifier and the obtaining the one or more physical identifier could be over the same channel but in distinct time division multiplexed slots for each respective operation obtaining physical identifiers or sending encrypted session identifier .

In step traffic management device re requests one or more physical identifiers from the requesting one of the client computers over the dedicated out of band communication channel. The re requesting by the traffic management device can be performed at regular time intervals or at random time intervals depending upon various parameters e.g. a session traffic load . Alternatively when a user session has been established the client computer can voluntarily send one or more unique physical identifiers to the traffic management device to update the value of session variable at regular or random time intervals within or outside the authenticated session. Further the one or more unique physical identifiers obtained is step may or may not be the same as the one or more unique physical identifiers obtained by the traffic management device in step as long as the obtained one or more unique physical identifiers are unique to the requesting one of the client computers and are useful in uniquely identifying the requesting one of the client computers by binding the session to the unique one or more physical identifiers as discussed herein.

In step using the re requested one or more physical identifiers from the requesting one of the client computers obtained over the dedicated out of band communication channel in step also interchangeably referred to herein as an independent communication channel hashing module in traffic management device re builds the hash value of session variable for example every 30 seconds and continually re assigns the value to session variable e.g. to session.machine.id maintaining a fresh value of the session variable on local database or alternatively on one or more of servers when required . Alternatively traffic management device may push the rebuilt hash value to an exemplary permanent database on the traffic management device or outside traffic management device in an external database not shown . This exemplary repetition time for hashing could be configured to be automatic to happen with every HTTP request form one or more of the client computers in a secure environment be hard coded by application be based upon a time stamp associated with one or more subsequent requests from the client computers or dependent on other programmable parameters e.g. depending upon session traffic load between client computers and servers . In any case traffic management device stores the most recent value of session variable . Further rebuilding the hash value of the session variable repetitively by the traffic management device at one or more instances of time occurs independently of the encrypting and or the decrypting over a communication band separate from a communication band for exchanging the session identifier between the client computers and servers .

In step traffic management device receives the encrypted session identifier back from the requesting one of the client computers as part of a new user request to the protected network application. Traffic management device may receive encrypted session identifier at regular intervals of time from the client computers or at instances of time when one or more of the client computers that have an authenticated session with one or more servers via traffic management device request access to a network resources within a protected network application. For example traffic management device may receive an encrypted cookie when a user on the authenticated one of the client computers browses to a different web page in a website and requests resources in the new web page to which the user browses to.

In step encryption decryption module in traffic management device decrypts the encrypted session identifier using the updated rebuilt hash value using session variable as a decryption key. In one example the decryption key is never stored by the traffic management device but is always referenced by the session variable e.g. using variable name session.machine.id . The encryption decryption module can perform decrypting using host processor and cache memory by way of example only. According to the examples of this technology the encrypting performed in step and the decrypting performed in step can repeat for every response received from the requesting one of the client computers until the client computer closes the session associated with the network application for which the client computer was authenticated in step . Alternatively the session may be closed due to other reasons including by way of example only an unexpected unavailability of resources in the network application or other reasons that may cause network applications to terminate that may be contemplated by one of ordinary skill in the art after reading this disclosure.

In step a determination is made by the traffic management device whether the decryption performed in step is successful or not. For example decryption is deemed successful when the decrypted session identifier matches the original session identifier formed in step although other criteria for this determination of successful decryption may be applied.

If decryption was successful the Yes branch is followed to step . In step upon successful decryption the session is allowed to continue by the traffic management device . The updated session identifier is used for encryption again and the flow proceeds back to step such that steps are repeated. The repetition of one or more of steps can continue for example until the user of the requesting one of client computers logs out of the application.

However if the key value stored in session variable has changed for example due to a different physical identifier value e.g. a different CPU ID indicating a different user who was not authenticated decryption of the session identifier will fail and the No branch is followed to step . In step the requesting one of the client computers will be denied access to the protected network application e.g. by presentation of an error message. An unsuccessful decryption can indicate the user s machine data has changed and an eavesdropper or a malicious user has attempted to use the same authenticated session cookie on another machine different from the requesting one of client computers that was authenticated in step .

In step when the traffic management device determines the decryption of the session identifier has failed traffic management device cleanly terminates the previously authenticated session as described in step and flushes or clears all variables associated with the session including session variable stored in local database . Alternatively the user may be prompted for another form of authentication and the flow may proceed back to step not shown depending on the configuration setup needs of the network application and or setting of the traffic management device for example. In step the flowchart ends.

The examples of the technology described herein provide numerous advantages. For example when session hijacking attacks involving theft of session identifiers e.g. cookies are anonymous attacks the attacker would have no way of knowing what the original client computer s unique one or more physical identifiers e.g. CPU ID or MAC address was and merely stealing the session identifier would be useless because decryption would fail. In another scenario in the event of a targeted attack where one or more of the physical identifiers may be known an additional number of unique physical identifiers can be obtained from the client computer at a random instance of time unknown to the attacker and using more than one of the physical identifier values can provide the additional degrees of security than what is provided by a single physical identifier e.g. using a MAC address or MAC ID only . For example in the event that the MAC ID is stolen off the wire by an eavesdropper the attacker would still not be able to determine the fact that hashing performed by hashing module was an aggregate of additional physical identifiers beyond the MAC address e.g. CPU ID in addition to the MAC address or have any way of knowing the original CPU ID. Further by providing an exclusive dedicated out of band channel programmable and implemented to request the physical identifiers from client computers the present technology provides an additional layer of security over conventional session identifier security schemes. By way of example only the dedicated out of band communication channel can be proprietary and or secured by a type of SSL connection although other types of secure connection schemes may be used . In one example the out of band communication channel may be between the traffic management device and the requesting one of the client computers over an Internet protocol other than HTTP e.g. FTP or it may be using Internet Protocol Security IPsec protocol suite for securing Internet Protocol IP communications independent of the HTTP connection to the network application provided to the requesting one of the client computers .

Further by using client specific information about client computers available to traffic management device a user session identifier e.g. a user cookie can be bounded to a specific session and client machine helping to minimize authenticated session identifier theft directly from the user s machine and or in transit during a communication between client computers and servers . Furthermore examples of the present technology can advantageously be implemented on top of already existing security technologies implemented in the exemplary network system for example security mechanisms implemented based on Internet Protocol IP addresses of client computers . Further by way of example only the present technology is easy to implement because it can be used with exemplary ActiveX controls provided by Microsoft Corporation of Redmond Wash. or Java controls provided by Oracle Corporation of Redwood Shores Calif. embedded directly into the protected network application making the present technology substantially portable between various heterogeneous components of the exemplary network system .

Having thus described the basic concepts it will be rather apparent to those skilled in the art that the foregoing detailed disclosure is intended to be presented by way of example only and is not limiting. Various alterations improvements and modifications will occur and are intended to those skilled in the art though not expressly stated herein. For example more or less number of physical identifiers can be used. The order that the measures and processes for providing secure application delivery are implemented can also be altered. Furthermore multiple networks in addition to network and LAN could be associated with traffic management device from to which network packets can be received transmitted respectively. These alterations improvements and modifications are intended to be suggested by this disclosure and are within the spirit and scope of the examples. Additionally the recited order of processing elements or sequences or the use of numbers letters or other designations therefore is not intended to limit the claimed processes and methods to any order except as can be specified in the claims.

