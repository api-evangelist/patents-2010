---

title: Reusable media sources for online broadcast data
abstract: A broadcaster-specific service module is provided for applications hosted by a processing device. The broadcaster-specific service module and the applications communicate through a common service bus. The broadcaster-specific service module receives items from an online broadcaster via a network, with each item associated with a media file or stream available from the online broadcaster. The broadcaster-specific service module generates a catalog containing a tree of the items, and sends the catalog to a target application via the service bus to display the catalog for user selection. The broadcaster-specific service module formats data of the catalog can be understood by all of the applications attached to the service bus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09167316&OS=09167316&RS=09167316
owner: Red Hat, Inc.
number: 09167316
owner_city: Raleigh
owner_country: US
publication_date: 20100212
---
Embodiments of the present invention relate to media data processing and more specifically to the generation of a catalog for online digital media using a reusable service.

A media player is an application or a device for playing back multimedia files. Generally a media player supports one or more specific media types such as audios videos and images. Examples of a media player include a music player a movie player a photo management system etc.

A media player can be used to stream or play back media data from an online broadcaster. Examples of an online broadcaster include the British Broadcasting Corporation BBC the National Public Radio NPR YouTube Hulu etc. Broadcasters seldom use industry recognized standards to share their data. A broadcaster typically does not provide a user with a computer readable listing of programs available for download. Even if a broadcaster provides such a listing gathering all the contents available from the broadcaster might require aggregating different sources.

Conventionally a plugin is necessary for a media player to obtain downloadable information from a broadcaster. The plugin is specific to a particular media player and a particular broadcaster. That is the plugin cannot be shared among different media players.

For example to support an online broadcaster s radio and television TV offerings with four multimedia applications it would be necessary to add four different plugins. A first plugin adds support for the broadcaster s radio programs to a music player. A second plugin adds support for the broadcaster s TV programs to a movie player. A third plugin adds support for the broadcaster s radio and TV programs to a media center application. A fourth plugin adds support for the broadcaster s radio and TV programs to an application that makes the radio and TV programs available on a network e.g. Universal Plug and Play UPnP exports to a game console such as the Xbox a product of the Microsoft Corporation or the Playstation 3 a product of the SONY Corporation . These four plugins cannot be reused across different applications even though the plugins deal with the same media source. The use of a different plugin for each media application greatly increases the complexity for managing media data.

Described herein is a method and system for reusing media sources for online broadcast data. In one embodiment a broadcaster specific service module is provided for applications also referred to as front end applications hosted by a processing device. The broadcaster specific service module and the applications communicate through a common service bus. The broadcaster specific service module receives items from an online broadcaster via a network with each item associated with a media file or stream available from the online broadcaster. The broadcaster specific service module generates a catalog containing a tree of the items and sends the catalog to a target application via the service bus to display the catalog for user selection. The broadcaster specific service module formats data of the catalog can be understood by all of the applications attached to the service bus.

In one embodiment the broadcaster specific service module serves as a back end process to catalog an online broadcaster s media program offerings. The broadcaster specific service module can be shared or reused by a number of front end applications. In one embodiment a different broadcaster specific service is used to interpret the data made available by a different broadcaster. Thus a processing device may host a number of different broadcaster specific services to receive media data from different broadcasters. All of the broadcaster specific services use an application programming interface API to communicate with a common service bus. All of the applications also communicate with the same service bus. Through the service bus applications can understand or read the data from any of the broadcaster specific services. Therefore it is unnecessary to write a broadcaster and application specific plugin for each combination of a broadcaster and an application.

Examples of online broadcast media data that can be accessed through the broadcaster specific service include but are not limited to podcasts offered by online broadcasters e.g. NPR BBC etc. videos offered by on demand catch up TV services e.g. Hulu the BBC iPlayer etc. videos offered by video sharing sites e.g. YouTube songs available at an online music store music shared from other computers photo albums from photo management sites e.g. Picasa Flickr etc. . As mentioned before most online broadcasters do not provide a program listing that is readable by media applications. Thus aback end service is necessary to interpret the online broadcaster s data and generate a program listing. According to embodiments of the present invention all of the applications can share the same broadcaster specific service the back end service via a common service bus to receive and display the program listing.

In the following description numerous details are set forth. It will be apparent however to one skilled in the art that the present invention may be practiced without these specific details. In some instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the present invention.

In one embodiment the client hosts a number of applications that can stream media data in real time and play back or display a media file. The applications handle a variety of different media types. For example the applications may include a music player a movie player a photo management application a media center application which provides the functions of both a music player and a movie player a multimedia application that exports data to a game console etc. The applications may be stored in a data storage device such as a memory . The memory may be volatile memory devices e.g. random access memory RAM non volatile memory devices e.g. flash memory and or other types of memory devices.

According to one embodiment of the application the client includes a broadcaster specific service logic unit to receive broadcast data from each online broadcaster s server and formats the broadcast data into a catalog that contains a tree of items. An item is an object having a number of properties such as name thumbnail location data location e.g. a Uniform Resource Locator URL that points to the online location of the media stream or file date added etc. Each item is associated with or represents a media file or stream e.g. music a short film a photo a podcast or other type of media data that is available from the online broadcaster. The broadcaster specific service logic unit can be shared or reused by the plurality of applications . The broadcaster specific service logic unit sends the tree of items through the service bus to reach a target application . In one embodiment the tree of items can be displayed by the target application as a catalog or list . The items in the catalog can be selected by a user and the media file or streams corresponding to the selected item can be downloaded or streamed from the broadcaster by the target application .

In one embodiment each of the applications contains a bus interface to communicate with a service bus . One embodiment of the service bus is D Bus. D Bus is a communication protocol for processes or applications running on a local host or remote hosts to communicate with each other. D Bus carries messages as discrete items instead of continuous data streams. One type of message supported by D Bus is a one way message that is broadcast to any connected applications that have registered an interest in the message. In one scenario an application may register an interest in a particular broadcaster by setting a filter criterion that specifies a set of rules for checking the origin of the messages and determining whether or not the origin matches the particular broadcaster. D Bus is a form of Inter Process Communication IPC . Other forms of IPC can be used for the plugins and providers to communicate.

In one embodiment after the target application receives the catalog data it displays a catalog on a display . For the purpose of illustration the catalog is shown as a tree of items. However it is understood that the catalog shown on the display as seen by a user may be organized as sections and subsections and the internal tree structure may be hidden from the user. The user can select an item from the display . After the target application receives the item selected by the user it inspects the properties of the selected item to determine whether the selected item is associated with audio video photo or other media data types. The target application uses the location attached to the selected item to retrieve the corresponding media file or stream from the broadcaster. In one embodiment the target application may retrieve the corresponding media file or stream directly from the broadcaster without going through the broadcaster specific service logic unit . The target application then streams plays back or displays the media data retrieved from the broadcaster.

According to embodiments of the present invention the front end applications do not have to know how the data is gathered to form a catalog. The back end the broadcaster specific service logic unit takes care of formatting the catalog into a format that can be read by all of the front end applications. All of the back end services for different broadcasters use the same API to communicate with the front end applications. Thus a user can reuse the same back end service for generating catalogs with any applications that communicate with the service bus .

Referring to in one embodiment the method begins when the broadcaster specific service logic unit receives broadcast data from an online broadcaster block . In one embodiment the broadcast data includes a sequence of items containing information regarding songs short films videos photos podcasts or other types of media data. The broadcaster specific service logic unit generates a catalog of the items which may be organized as a tree and include the online location of the media data associated with each item block . The catalog is sent to the service bus using a pre determined bus protocol block . In one embodiment the catalog is sent as messages according to the D Bus protocol.

At the recipient end of the service bus are the applications . A target application attached to the service bus receives the catalog block . The target application displays the catalog and receives a user input indicating a selected item block . The target application retrieves media data associated with the selected item using the online location information attached to the item block . The target application then streams or plays back the retrieved media data block .

The exemplary computer system includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM or Rambus DRAM RDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a secondary memory e.g. a data storage device which communicate with each other via a bus .

The processing device represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processing device is configured to execute broadcaster specific service logic for performing the operations and steps discussed herein.

The computer system may further include a network interface device . The computer system also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The secondary memory may include a machine readable storage medium or more specifically a computer readable storage medium on which is stored one or more sets of instructions e.g. broadcaster specific service logic embodying any one or more of the methodologies or functions described herein e.g. the broadcaster specific service logic unit of . The broadcaster specific service logic may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting machine readable storage media. The broadcaster specific service logic may further be transmitted or received over a network via the network interface device .

The machine readable storage medium may also be used to store the broadcaster specific service logic persistently. While the machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable storage medium shall also be taken to include any medium that is capable of storing or encoding a set of instructions for execution by the machine that cause the machine to perform any one or more of the methodologies of the present invention. The term machine readable storage medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic media.

The computer system may additionally include a broadcaster specific service module for implementing the functionalities of the broadcaster specific service logic unit of . The module components and other features described herein for example in relation to can be implemented as discrete hardware components or integrated in the functionality of hardware components such as ASICS FPGAs DSPs or similar devices. In addition the module can be implemented as firmware or functional circuitry within hardware devices. Further the module can be implemented in any combination of hardware devices and software components.

Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as receiving formatting generating sending or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer system selectively programmed by a computer program stored in the computer system. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic disk storage media optical storage media flash memory devices other type of machine accessible storage media or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear as set forth in the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. Although the present invention has been described with reference to specific exemplary embodiments it will be recognized that the invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense. The scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

