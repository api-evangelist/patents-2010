---

title: Cloud data management
abstract: The different illustrative embodiments provide a method, computer program product, and apparatus for managing data. An encrypted file containing the data is divided into a plurality of segments. The plurality of segments are sent to a plurality of cloud computing environments for storage in the plurality of cloud computing environments. Each cloud computing environment in the plurality of cloud computing environments receives a portion of the plurality of segments. The portion of the plurality of segments is associated with a cloud computing environment in the plurality of cloud computing environments to which the portion of the plurality of segments was sent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08769269&OS=08769269&RS=08769269
owner: International Business Machines Corporation
number: 08769269
owner_city: Armonk
owner_country: US
publication_date: 20100812
---
The disclosure relates generally to an improved data processing system and more specifically to managing data. Even more specifically the disclosure relates to a method computer program product and apparatus for managing data in clouds.

Data is frequently transmitted over networks for storage in a location remote to the computer system with which a user is interacting. For example an electronic mail server computer that receives electronic mail from the Internet may not store the electronic mail in a storage device connected to the electronic mail server computer. Instead the electronic mail server computer may send the message data to another computer system that stores the message data on a connected storage device.

Cloud computing is growing in popularity. Cloud computing is a type of computing in which shared resources are made available to computers through the Internet. In cloud computing the logistics of the storage and or service located in the cloud are abstracted from the user. Users of services in a cloud are typically unaware of the storage devices servers clusters locations and other logistics involved in delivering the service. In many cases users are unaware of this information because the service is provided by an entity not within the control of the users.

Data may be sent from a computer system to a cloud for storage. The data may be retrieved from the cloud at a later time. The computer system sending the data to the cloud may not have the resources available to store the data on a storage device connected to the computer system. Alternatively a user may desire to have the data stored in a location that is accessible through the Internet and or configured for frequent backups.

While stored in the cloud the provider of the cloud has access to the data. Employees of the cloud provider may access the data without the knowledge of the user or entity that stored the data in the cloud. Additionally the cloud provider may dispose of storage devices during maintenance without properly removing the data stored by the user. The user may also be unable to access the data if the cloud provider experiences a technical difficulty or ceases to provide the cloud.

The different illustrative embodiments provide a method computer program product and apparatus for managing data. An encrypted file containing the data is divided into a plurality of segments. The plurality of segments are sent to a plurality of cloud computing environments for storage in the plurality of cloud computing environments. Each cloud computing environment in the plurality of cloud computing environments receives a portion of the plurality of segments. The portion of the plurality of segments is associated with a cloud computing environment in the plurality of cloud computing environments to which the portion of the plurality of segments was sent.

As will be appreciated by one skilled in the art the present invention may be embodied as a system method or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer usable program code embodied in the medium.

Any combination of one or more computer usable or computer readable medium s may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a non exhaustive list of the computer readable medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CDROM an optical storage device a transmission media such as those supporting the Internet or an intranet or a magnetic storage device.

Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer usable medium may include a propagated data signal with the computer usable program code embodied therewith either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc.

Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions.

These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer program instructions may also be stored in a computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

With specificity to an illustration of a data management environment is depicted in accordance with an illustrative embodiment. Data management environment contains client computer system computer system cloud cloud cloud and cloud .

Client computer system runs application . Application is configured to store data generated by application using cloud client storage process . Cloud cloud client storage process receives data to be stored from application and encrypts the data. Cloud client storage process then sends the data to computer system . Cloud storage process runs on computer system and receives the data from client computer system .

Cloud storage process contains a registry of cloud providers. The registry of cloud providers contains information about cloud providers that are available to store data for computer system . The information may include contact information such as addresses and ports and format information such as metadata and or credentials to be included with a request for the provider to store data.

In some illustrative embodiments the information about each cloud provider in the registry also contains characteristics of the cloud provider. For example a particular cloud provider may be listed as having a 99 percent uptime service level guarantee and a limitation of only storing 5 gigabytes of data. Cloud client storage process may send desired characteristics for a desired provider to receive the data to cloud storage process with the data or before the data is sent to cloud storage process . For example cloud client storage process may include a parameter with the data that contains a desired level of security for the data such as 128 bit encryption. The 128 bit encryption may be in addition to encryption performed by cloud client storage process .

Cloud storage process divides the data into segments. The number and size of the segments may be random or may be defined by a rule or policy accessible by cloud storage process . In this illustrative example cloud storage process divides the data into segments and . Of course cloud storage process may divide the data into more segments or fewer segments in other illustrative embodiments. The rule or policy may also define how many segments may be stored with a cloud provider. The segments to be stored with a cloud provider are referred to as a portion of the segments.

Cloud storage process identifies a group of cloud providers in the registry to store the number of portions of the segments. The group of cloud providers may be identified by identifying providers that meet or exceed the parameters sent by cloud client storage process for storage of the segments. In this illustrative embodiment cloud storage process identifies clouds and as meeting or exceeding the parameters. In some illustrative embodiments cloud storage process sends one segment to each of clouds and for storage. For example segment may be sent to cloud segment may be sent to cloud segment may be sent to cloud and segment may be sent to cloud .

In some illustrative embodiments however the segments may be sent to more than one of clouds and . The segments may be sent to more than one cloud so backups of the data are preserved in one cloud in the event that another cloud is taken offline. For example segment may be sent to cloud and cloud . If cloud is taken offline segment is still available in cloud .

In some illustrative embodiments cloud storage process further divides each of segments and into subsegments instead of sending segments and to clouds and . In such illustrative embodiments cloud storage process identifies a group of cloud providers in the registry to store a number of portions of the subsegments. Cloud storage process then sends the portions of the subsegments to the clouds instead of the portions of the segments.

Cloud storage process then updates a directory. The directory may be updated with an identifier for the data such as a file name or number an identifier for the file unique in the directory and information about each of the segments into which the data was divided. The information about each of the segments consists of a file name for the data an identifier for the data unique in the directory addresses within the file that are contained in the segment and identities of the one or more clouds that store the segment and a checksum. A checksum is a numeric value generated by cloud storage process after dividing the data and prior to sending the data to clouds and that may be used to regenerate a segment that is unavailable when the other segments for the data are available.

Once the data is stored in clouds and cloud storage process waits for another request. In these examples cloud client storage process requests from cloud storage process that the data be retrieved. Cloud client storage process may include a file name and or unique identifier in the request. Cloud client storage process locates the entries having the file name and or unique identifier in the directory. Cloud storage process then retrieves each segment from the clouds in which the segment is stored. Of course cloud storage process may only retrieve each segment from one cloud in which the segment is stored regardless of whether the segment is stored in multiple clouds. If the segment is unavailable from one cloud at the time cloud storage process requests the segment cloud storage process may request the same segment from another cloud that stores the segment. For example if segment is stored in cloud and cloud and cloud becomes unavailable cloud storage process may retrieve both segment and segment from cloud .

Once cloud storage process receives all the segments for the data cloud storage process regenerates the data from the segments using the addresses in the data for each segment stored in the directory. Cloud storage process then returns the data to cloud client storage process . Cloud client storage process decrypts the data and returns the data to application .

In illustrative embodiments in which the segments are divided into subsegments prior to storage in the clouds cloud storage process retrieves each subsegment from the clouds in which the subsegment is stored. Cloud storage process may only retrieve each subsegment from one cloud in which the subsegment is stored regardless of whether the subsegment is stored in multiple clouds. If the subsegment is unavailable from one cloud at the time cloud storage process requests the subsegment cloud storage process may request the same subsegment from another cloud that stores the subsegment. Cloud storage process then regenerates the data from the subsegments using the addresses in the data for each subsegment stored in the directory. Cloud storage process then returns the data to cloud client storage process .

Turning now to it is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

For convenience the detailed description includes the following definitions which have been derived from the Draft NIST Working Definition of Cloud Computing by Peter Mell and Tim Grance dated Oct. 7 2009 which is cited in an IDS filed herewith and a copy of which is attached thereto.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a schematic example of a cloud computing node is shown. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processing units .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Computer system server may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the invention.

Program utility having a set at least one of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating systems one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment in is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted the following layers and corresponding functions are provided 

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes in one example IBM zSeries systems RISC Reduced Instruction Set Computer architecture based servers and in one example IBM pSeries systems IBM xSeries systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software in one example IBM WebSphere application server software and database software and in one example IBM DB2 database software IBM zSeries pSeries xSeries BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide .

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provides pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and storage processing. Storage processing allows the cloud computing environment to receive store receive and send segments of a file from to a cloud storage process. Storage processing may also consist of sending capabilities and or limitations of the cloud computing environment to a cloud storage process for storage in a directory of cloud computing environments in which to store segments.

The different illustrative embodiments recognize and take into account a number of different considerations. For example the different illustrative embodiments recognize that users with data of high value may not wish to have cloud computing environment employees or unauthorized parties accessing the high value data. Even with encryption it is possible that the data can be decrypted by an unauthorized party. The different illustrative embodiments recognize that dividing the encrypted data into a plurality of segments and storing the segments in different cloud computing environments improves security because an unauthorized party that gains access to a single cloud computing environment may not have access to the other cloud computing environments that contain the remaining segments of the data.

Additionally the different illustrative embodiments recognize that cloud computing environments become unavailable for a variety of reasons. For example the cloud computing environment may experience technical inconsistencies or the entity controlling the cloud computing environment may leave the business of providing a cloud computing environment. Thus the different illustrative embodiments allow backup copies of the segments to be stored with multiple cloud computing environments and retrieved in the event that a cloud computing environment is unavailable.

The different illustrative embodiments also recognize that the user at the client computer running the application that sends the request to store the data may be uninterested in or unable to choose particular cloud computing environments to store segments of data. Storing the data in the cloud computing environments also allows the client to have fewer system resources such as hard drive space.

Thus the different illustrative embodiments provide a method computer program product and apparatus for managing data. An encrypted file containing the data is divided into a plurality of segments. The plurality of segments are sent to a plurality of cloud computing environments for storage in the plurality of cloud computing environments. Each cloud computing environment in the plurality of cloud computing environments receives a portion of the plurality of segments. The portion of the plurality of segments is associated with a cloud computing environment in the plurality of cloud computing environments to which the portion of the plurality of segments was sent.

Turning now to an illustration of a block diagram for a data management environment is depicted in accordance with an illustrative embodiment. Data management environment in is an example implementation of data management environment .

Data management environment contains computer system computer system and plurality of cloud computing environments . Computer system runs requestor process . Computer system computer system and plurality of cloud computing environments are example implementations of computer system in . Requestor process receives data from application . Data is in the form of file . Application sends file to requestor process in a request to write file to disk. Application may send file to requestor process using an application programming interface API .

Requestor process receives file and encrypts file to form encrypted file . In this illustrative example requestor process uses the Advanced Encryption System AES encryption algorithm however any suitable encryption algorithm may be used. Requestor process then generates request . Request contains encrypted file . Request is a request for cloud storage process to store encrypted file in plurality of cloud computing environments . In some illustrative embodiments request also contains policy . Policy is a set of parameters for use in storing encrypted file . For example policy may include number of backups of segments of encrypted file to be stored in plurality of cloud computing environments . Requestor process then sends request to cloud storage process running on computer system .

Computer system runs cloud storage process . Cloud storage process receives request containing encrypted file . Computer system then processes registry . Registry is a collection of information about plurality of cloud computing environments . Plurality of cloud computing environments may submit and update information in registry . Plurality of cloud computing environments are example implementations of cloud computing node in .

The information in registry may consist of identity of each of plurality of cloud computing environments address and port of each of plurality of cloud computing environments and group of characteristics of each of plurality of cloud computing environments . Identity may be a name or identifier unique in registry . Address is an Internet Protocol IP address or domain name and a path for a location to upload the segments to be stored. Group of characteristics consists of capabilities and or limitations of each of plurality of cloud computing environments . For example group of characteristics may contain a maximum amount of space for storing data additional encryption that is performed on stored data and formats of data accepted for storage.

Cloud storage process identifies plurality of selected cloud computing environments using registry . More specifically cloud storage process identifies cloud computing environments in registry that meet or exceed characteristic described in policy . Alternatively policy may be stored on computer system and accessible to cloud storage process . In such illustrative embodiments request may also contain level of security . Level of security is a characteristic that describes a minimum amount of physical and electronic security measures in place at cloud computing environments to store encrypted file . In such illustrative embodiments cloud storage process identifies each of plurality of cloud computing environments by identifying cloud computing environments in registry that have security measures described in group of characteristics that meet or exceed level of security . In these examples cloud computing environment and cloud computing environment are in plurality of selected cloud computing environments .

Once cloud storage process identifies plurality of selected cloud computing environments cloud storage process identifies the number of segments into which encrypted file should be divided. In these examples policy contains a parameter for the number of segments into which encrypted file should be divided. However policy may instead specify that encrypted file should be divided into a random number of segments or segments of a particular size regardless of number.

Alternatively policy may specify that encrypted file should be divided into segments of a random size regardless of number. In such an illustrative embodiment encrypted file is divided into segments of a random size so an unauthorized party desiring to correctly reorder encrypted file using data stored in cloud computing environment and or cloud computing environment would be unaware of the correct order into which encrypted file should be reordered.

Once cloud storage process identifies the number of segments into which encrypted file is to be divided cloud storage process generates plurality of segments . Plurality of segments are portions of encrypted file . The portions may be contiguous portions of encrypted file or noncontiguous portions of encrypted file .

Cloud storage process also processes number of backups when generating plurality of segments . Number of backups is a requested number of backup copies for some or each of plurality of segments . In other words number of backups is a requested number of duplicate segments in plurality of segments . Cloud storage process adds such backup segments to plurality of segments for storage in plurality of selected cloud computing environments .

Cloud storage process then determines which portions of plurality of segments are to be stored in which cloud computing environment in plurality of cloud computing environments . In some illustrative embodiments cloud storage process evenly divides plurality of segments into each portion. For example if plurality of segments consists of four segments cloud storage process may divide plurality of segments into portion containing two segments and portion containing two segments. In another example plurality of segments consists of four segments and four backup segments for a total of eight segments. Portion may then contain four segments and portion may contain four segments. The four segments in portion are two segments of encrypted file and two backup copies of the segments stored in portion . Likewise portion contains two segments of encrypted file not stored in portion and two backup copies of the segments stored in portion .

Cloud storage process then uses address for plurality of selected cloud computing environments to send portions and to cloud computing environment and cloud computing environment respectively. Cloud computing environment stores portion of plurality of segments . Likewise cloud computing environment stores portion of plurality of segments .

Finally cloud storage process updates directory with information about plurality of segments . Directory is a data source that contains information about accessing plurality of segments in plurality of selected cloud computing environments . For example directory may store a file name and or identifier for encrypted file unique in directory the number of plurality of segments addresses within encrypted file for each of plurality of segments and a checksum value for each of plurality of segments . A checksum value is a numeric value that contains information about a segment in plurality of segments such that the segment may be regenerated using the checksum value and other segments in plurality of segments .

In some illustrative embodiments cloud storage process divides each segment in plurality of segments into one or more pluralities of subsegments prior to sending portions and to plurality of selected cloud computing environments . A subsegment of a segment in plurality of segments is a part of the segment. In these examples cloud storage process divides segment in plurality of segments into plurality of subsegments and plurality of subsegments . Of course cloud storage process may divide segment into additional pluralities of subsegments in other illustrative embodiments. Plurality of subsegments consists of all data in segment . Likewise plurality of subsegments consists of all data in segment . Of course segment is a non limiting example and plurality of segments may consist of additional segments. Segment is divided into plurality of subsegments and plurality of subsegments so segment may not be reordered and accessed by an unauthorized party.

Cloud storage process identifies a number and subsegment size for plurality of subsegments and plurality of subsegments randomly. Additionally the number and subsegment size for plurality of subsegments may differ from the number and subsegment size for plurality of subsegments . Cloud storage process identifies plurality of selected cloud computing environments for each of plurality of subsegments and . In other words plurality of selected cloud computing environments may be different with respect to plurality of subsegments than with respect to plurality of subsegments . Plurality of selected cloud computing environments may be identified using policy and or parameters associated with cloud storage process to include cloud computing environments with group of characteristics .

Cloud storage process identifies a plurality of selected computing environments to store each of plurality of subsegments and . Cloud storage process may group plurality of subsegments into portions such as portion and portion . Likewise cloud storage process may divide plurality of subsegments into portions such as portion and portion .

Portions and each consist of subsegments in plurality of subsegments such that all the subsegments in plurality of subsegments are contained in the combination of portions and . Portion may differ from portion in size and number of subsections contained in portion . Although portion and portion are used in this illustrative example the number of portions in plurality of subsegments may be higher or lower in other illustrative embodiments.

Likewise portions and each consist of subsegments in plurality of subsegments such that all the subsegments in plurality of subsegments are contained in the combination of portions and . Portion may differ from portion in size and number of subsections contained in portion . Although portions and are used in this illustrative example the number of portions in plurality of subsegments may be higher or lower in other illustrative embodiments.

In this illustrative example plurality of selected cloud computing environments is identified to store portion of plurality of subsegments and portion of plurality of subsegments . Likewise plurality of selected cloud computing environments is identified to store portions and of plurality of subsegments . In this illustrative example plurality of selected cloud computing environments contains cloud computing environments and . Plurality of selected cloud computing environments contain cloud computing environments and . Cloud storage process then sends portion to cloud computing environment and portion to cloud computing environment . Cloud storage process also sends portion to cloud computing environment and portion to cloud computing environment .

Once plurality of segments are stored in plurality of selected cloud computing environments application may send a read request for file to requestor process . Requestor process generates request . Request is a request to retrieve reorder and return file . Request may contain a file name and or identifier for file . Requestor process sends request to cloud storage process .

Cloud storage process receives request and identifies encrypted file that matches the file name and or identifier from request in directory . Once information about encrypted file is located in directory cloud storage process retrieves each of plurality of segments from plurality of selected cloud computing environments . In this illustrative example cloud storage process requests portion in cloud computing environment and portion in cloud computing environment . In the event that cloud computing environment is unavailable for example due to maintenance cloud storage process may determine that backup copies of the segments in portion are stored in portion . In such an illustrative embodiment cloud storage process may retrieve the segments in portion and the segments in portion from cloud computing environment .

Once plurality of segments are returned to cloud storage process cloud storage process uses directory to reorder plurality of segments into the order of plurality of segments in encrypted file . Cloud storage process may reorder plurality of segments by inserting a segment into position as described by the addresses within encrypted file described in each entry of directory to form encrypted file .

When plurality of segments are reordered into the order in encrypted file cloud storage process sends encrypted file to requestor process . Requestor process decrypts encrypted file to form file . File is returned to application . Application is unaware of the existence of cloud storage process and plurality of cloud computing environments in these examples.

The illustration of computer system and computer system in data management environment is not meant to imply physical or architectural limitations to the manner in which different features may be implemented. Other components in addition to and or in place of the ones illustrated may be used. Some components may be unnecessary in some illustrative embodiments. Also the blocks are presented to illustrate some functional components. One or more of these blocks may be combined and or divided into different blocks when implemented in different illustrative embodiments.

For example plurality of selected cloud computing environments may encrypt portion and or portion regardless of prior encryption status. Such encryption provides an additional layer of security for the data. Additionally in some illustrative embodiments plurality of selected cloud computing environments is selected using a priority list stored on computer system and accessible to cloud storage process . The priority list describes that a particular set of cloud computing environments are to receive portions of the plurality of segments and how many each cloud computing environment should receive. Additionally in some illustrative embodiments requestor process may send a request to cloud storage process to remove data from plurality of selected cloud computing environments . Cloud storage process then requests that plurality of selected cloud computing environments remove the data from the clouds and cloud storage process removes information about the file from directory .

Turning now to an illustration of a file is depicted in accordance with an illustrative embodiment. File is an example implementation of file in .

File is received by a cloud storage process such as cloud storage process in . The cloud storage process divides file into segments and . Segments and are examples of plurality of segments in . Segments and are portions of file .

Looking now to an illustration of a plurality of cloud computing environments is depicted in accordance with an illustrative embodiment. Plurality of cloud computing environments is an example implementation of plurality of cloud computing environments in .

Plurality of cloud computing environments consists of cloud A cloud B cloud C and cloud D . Information about cloud A cloud B cloud C and cloud D is stored in a registry accessible to the cloud storage process. In these examples the information includes address and port information for the cloud computing environments as well as capabilities and limitations of the cloud computing environment. Characteristics of the cloud computing environment include without limitation a type and bitrate of encryption used on data stored in the cloud computing environment and a maximum amount of data that may be stored in the cloud computing environment.

The cloud storage process selects cloud computing environments from plurality of cloud computing environments that meet or exceed the desired characteristics in the request to store the data. The number of cloud computing environments selected may be part of a policy stored in the requestor process or the cloud storage process. The policy may indicate that a particular number of backup copies of all or a portion of the segments are to be stored in plurality of cloud computing environments . Backup copies are copies of a particular segment of file that are stored in more than one cloud computing environment.

Turning now to an additional illustration of the plurality of cloud computing environments is depicted in accordance with an illustrative embodiment. In this illustrative example the cloud storage process has sent segment x to cloud A for storage segment x to cloud B for storage segment x to cloud C for storage and segment x to cloud D for storage. Segments x x x and x remain stored until a command to remove the data is received from the cloud storage process.

Looking now to an illustration of a directory is depicted in accordance with an illustrative embodiment. Directory is an example implementation of directory in .

Directory contains information about the storage of file . Directory contains entry X that indicates an identifier for file in . The identifier may be either a file name a file identifier unique in directory or both a file name and a file identifier unique in directory . Entry X contains rows and . Row indicates that segment X is stored in cloud A in .

Row also contains checksum Y . Checksum Y is a numeric value that may be used by the cloud storage process to regenerate segment X in the event that cloud A is unavailable at the time segment X is to be retrieved Likewise row indicates that segment X is stored in cloud B with a checksum value of Y. Row indicates that segment X is stored in cloud C with a checksum value of Y. Row indicates that segment X is stored in cloud D with a checksum value of Y. In other illustrative embodiments some or all of plurality of cloud computing environments may contain multiple segments of file in .

Turning now to an illustration of an encrypted file is depicted in accordance with an illustrative embodiment. Encrypted file is an example implementation of encrypted file in .

Encrypted file is divided into segment Y and segment Y . Segment Y and segment Y may be the same size or a different size. In this illustrative example segment Y will be divided into subsegments and the subsegments will be stored in cloud computing environments in accordance with an illustrative embodiment.

Looking now to an illustration of a plurality of subsegments is depicted in accordance with an illustrative embodiment. Plurality of subsegments is an example implementation of plurality of subsegments in .

In this illustrative example segment Y is divided into plurality of subsegments . Plurality of subsegments consist of subsegment Y and subsegment Y . Segment Y may be regenerated by ordering subsegment Y and subsegment Y in the order in which the data in the subsegments was stored in segment Y .

Turning specifically to an illustration of an additional plurality of subsegments is depicted in accordance with an illustrative embodiment. Plurality of subsegments is an example implementation of plurality of subsegments in .

A cloud storage process such as cloud storage process also divides segment Y into plurality of subsegments . Plurality of subsegments may be used to regenerate segment Y by ordering plurality of subsegments in the order in which the data appeared in segment Y .

Segment Y is divided into both plurality of subsegments and plurality of subsegments so an unauthorized party accessing a cloud computing environment containing one or more subsections may not regenerate segment Y or encrypted file . The unauthorized party may not know the size of the subsegments or the proper order for the subsegments to regenerate segment Y .

Turning now to an additional illustration of a plurality of cloud computing environments is depicted in accordance with an illustrative embodiment. Plurality of cloud computing environments is an example implementation of plurality of cloud computing environments in .

In this illustrative example cloud A and cloud B are identified from a registry to store plurality of subsegments . Likewise cloud C cloud D and cloud E are identified to store plurality of subsegments . Thus the cloud storage process sends subsegment Y to cloud A for storage subsegment Y to cloud B for storage subsegment Y to cloud C for storage subsegment Y to cloud D for storage and subsegment Y to cloud E for storage.

Thus an unauthorized party with access to cloud C may attempt to access subsegment Y but the unauthorized party does not have access to the other subsegments of segment Y . Additionally the unauthorized party is unaware of the position or order in segment Y in which subsegment Y is to be ordered to regenerate segment Y or encrypted file . When the cloud storage process receives a request to retrieve encrypted file the cloud storage process only retrieves plurality of subsegments or plurality of subsegments . Of course the cloud storage process may also retrieve plurality of subsegments and in some illustrative examples.

Turning now to an illustration of a flowchart of a process for managing data is depicted in accordance with an illustrative embodiment. The process may be performed by cloud storage process running on computer system in data management environment in .

The process begins by dividing an encrypted file containing the data into a plurality of segments step . The number of segments into which the encrypted file is divided may be specified by a policy in the cloud storage process or received from a requestor process such as requestor process . For example the policy may indicate that the encrypted file is to be divided into about 10 segments regardless of size. Alternatively the policy may indicate that the encrypted file is to be divided into segments of about 100 megabytes regardless of number.

The process then sends the plurality of segments to a plurality of cloud computing environments for storage in the plurality of cloud computing environments step . Each cloud computing environment in the plurality of cloud computing environments receives a portion of the plurality of segments.

The process then associates the portion of the plurality of segments with a cloud computing environment in the plurality of cloud computing environments to which the portion of the plurality of segments was sent step . The process may associate the portion of the plurality of segments with the cloud computing environment in a directory accessible to the process such as directory in . The process terminates thereafter.

In some illustrative embodiments each of the plurality of segments is divided into a plurality of subsegments after step . Each subsegment is a part of the segment from which it was divided. In such illustrative embodiments the process sends the plurality of subsegments to the plurality of cloud computing environments for storage in the plurality of cloud computing environments instead of the plurality of segments at step . The process then associates the portion of the plurality of subsegments with the cloud computing environment in the plurality of cloud computing environments to which the portion of the plurality of subsegments was sent instead of the portion of the plurality of segments at step . The process terminates thereafter.

Looking now to an illustration of a flowchart of a process for sending a request to store data in cloud computing environments is depicted in accordance with an illustrative embodiment. The process may be performed by a requestor process such as requestor process in .

The process begins by receiving a write request from an application for a file step . The write request may be received using an application programming interface API . The file may be unencrypted. The process then encrypts the file to form an encrypted file step . The process then sends a request to store the encrypted file to a cloud storage process step . The request contains the encrypted file. In some illustrative embodiments the process also sends a policy with the request that indicates the characteristics of the cloud computing environments to store segments of the encrypted file. The policy may also indicate a number of backup copies of particular segments or each segment to be stored in cloud computing environments. The process terminates thereafter.

Turning now to an illustration of a flowchart of a process for storing data in cloud computing environments is depicted in accordance with an illustrative embodiment. The process may be performed by a cloud storage process such as cloud storage process in . The process may be performed after step in .

The process begins by receiving the request from the requestor process step . The process then identifies a number of segments into which the encrypted file is to be divided step . The number of segments may be contained in a policy received with the request or a policy accessible to the process. Of course a default value may be used in the absence of a policy. In some illustrative embodiments the process also identifies a number of subsegments into which each segment in the number of segments is to be divided at step .

The process then identifies the number of cloud computing environments that meet or exceed the characteristics desired in the policy to form selected cloud computing environments step . The characteristics may be compared with information about the number of cloud computing environments in a registry such as registry .

The process then sends the segments to the selected cloud computing environments step . The number of segments sent to each selected cloud computing environment may be contained in the policy. Of course the process may also send the same number of segments to each selected cloud computing environment. In embodiments in which the process identifies the number of subsegments at step the process sends the subsegments to the selected cloud computing environments instead of the segments at step .

The process then stores metadata about the number of segments in a directory step . The metadata consists of the file name or an identifier unique in the directory and an entry for each segment of the file. Each entry contains the identity of the cloud computing environments that store the segment the block of addresses that make up the segment and a checksum for the segment such that the segment may be regenerated in the presence of the other segments of the file if the segment is unavailable.

In embodiments in which the process sends the subsegments instead of the segments at step the process stores metadata about the number of subsegments in the directory. The metadata consists of the file name or an identifier unique in the directory and an entry for each subsegment of the file. Each entry contains the identity of the cloud computing environments that store the subsegment the block of addresses in the segment that make up the subsegment and a checksum for the subsegment such that the subsegment may be regenerated in the presence of the other subsegments of the segment if the subsegment is unavailable. The process terminates thereafter.

Looking now to a flowchart of a process for retrieving data from cloud computing environments is depicted in accordance with an illustrative embodiment. The process may be performed by a cloud storage process such as cloud storage process in .

The process begins by receiving a request to retrieve a file step . The process then locates the file in the directory step . The process requests each segment of the file in the directory from the cloud computing environment listed in the directory step . In some illustrative embodiments multiple cloud computing environments store a particular segment of the file. In such illustrative embodiments the process may request the segment from one cloud computing environment. If the cloud computing environment is unavailable the process may request the segment from another cloud computing environment that is listed as storing the segment in the directory.

The process then reorders the segments to form the encrypted file step . The process reorders the segments in the order described in the directory. For example one segment may be listed in the directory as being addresses and a second segment may be listed in the directory as being addresses . The process returns the encrypted file to the requestor process step and terminates thereafter.

The flowchart and block diagrams in the different depicted embodiments illustrate the architecture functionality and operation of some possible implementations of apparatus and methods in different illustrative embodiments. In this regard each block in the flowchart or block diagrams may represent a module segment function and or a portion of an operation or step.

In some alternative implementations the function or functions noted in the block may occur out of the order noted in the figures. For example in some cases two blocks shown in succession may be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. Also other blocks may be added in addition to the illustrated blocks in a flowchart or block diagram.

For example the process may not use a policy in the request to select cloud computing environments in step in . Instead the process may use default values or select cloud computing environments based on a priority list of cloud computing environments. Additionally the process may not encrypt the file at step in . In such an illustrative embodiment data may not be encrypted when the cloud computing environments are trusted by the entity that controls the requestor process. Of course the requestor process may also send the data unencrypted to the cloud storage process with a request that the cloud storage process encrypt the data.

Additionally the process may request each subsegment of the file in the directory at step in embodiments in which the segments have been divided into subsegments. The process then reorders the subsegments to form the segments prior to performing step . The process reorders the subsegments such that the subsegments are in the same order as the subsegments were prior to being sent to the cloud computing environments at step .

Thus the different illustrative embodiments allow a client computer to store data in cloud computing environments without the potential for employees or unauthorized parties at the cloud computing environments having access to the data. A user also does not select the cloud computing environments encrypting data and storing the data in the cloud computing environments. Additionally the different illustrative embodiments allow for retrieval of segments of a file when a particular cloud computing environment is unavailable using either backup copies stored with other cloud computing environments or a checksum value.

Additionally the different illustrative embodiments allow a client computer to retrieve data stored in cloud computing environments in the event that a cloud computing environment becomes unavailable due to maintenance connectivity issues the entity controlling the cloud computing environment disabling the cloud computing environment or another suitable reason. The segments stored in the unavailable cloud computing environment may be stored in other cloud computing environments as backups or the segments may be regenerated using checksum values.

Thus the different illustrative embodiments provide a method computer program product and apparatus for managing data. An encrypted file containing the data is divided into a plurality of segments. The plurality of segments are sent to a plurality of cloud computing environments for storage in the plurality of cloud computing environments. Each cloud computing environment in the plurality of cloud computing environments receives a portion of the plurality of segments. The portion of the plurality of segments are associated with a cloud computing environment in the plurality of cloud computing environments to which the portion of the plurality of segments was sent.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any tangible apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

The description of the present invention has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

