---

title: Touch screen with user interface enhancement
abstract: The present invention is a graphical user interface in a computing device having a processor running an operating system and a display. The graphical user interface comprises a touch screen and a driver coupling the touch screen to the operating system. The driver can display a plurality of icons on the touch screen, or a plurality of screen images having at least one icon, with each of the icons associated with operations on the display and/or the touch screen. Other embodiments include the touch screen having unactivated and activated states, as well as the presence of an application programming interface that enables an application to display at least one image on the touch screen.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08560947&OS=08560947&RS=08560947
owner: Synaptics Incorporated
number: 08560947
owner_city: San Jose
owner_country: US
publication_date: 20100511
---
This is a continuation of U.S. application Ser. No. 10 125 066 filed Apr. 17 2002 and claims priority to U.S. Patent Provisional Application Ser. No. 60 291 694 filed on May 16 2001 both of which are incorporated herein by reference.

The present invention relates to computer interface devices and more particularly to a computer touch pad with integrated display device and enhancements to the portable computer user interface employing same.

Touch pads are widely used in computer applications particularly as pointing devices in portable computers. In typical usage the touch pad is a featureless finger sensitive surface in a rectangular opening of the palm rest of the computer. The touch pad serves solely as an input device for the computer. The touch pad functions primarily as a cursor pointing device but some touch pads offer additional functions.

For example U.S. Pat. No. 5 543 591 to Gillespie et al. discloses a typical prior art touch pad sensor in which finger tapping gestures in designated regions of the touch surface invoke special commands on the computer. U.S. Pat. No. 5 943 052 to Allen et al. discloses a touch pad in which finger motions in designated regions invoke a scrolling command. These tap regions and scrolling regions have proven useful to expert users but confusing to novice users as the regions are invisible to the eye but different in behavior. Marking the regions with screen printed icons on the opaque sensor surface can help but it can also lead to greater confusion if the regions are software configurable.

A further disadvantage of prior art touch pads is that they use up a significant fraction of the surface area of the computer for a single dedicated input function. Other pointing devices such as isometric joysticks see e.g. U.S. Pat. No. 5 521 596 to Selker et al and force sensing keys see e.g. U.S. Pat. No. 4 680 577 to Straayer et al have been proposed as compact alternatives but these devices are not as expressive or as easy to use as touch pads.

Touch screens are also well known in the art. One example of a touch screen is disclosed in U.S. Pat. No. 4 806 709 to Blair. In typical use the main display screen of a computer is overlaid with or implemented as a touch sensitive input device. This eliminates the need to dedicate separate parts of the surface of the computer for input and output. If the touch screen serves as the main pointing device of the computer pointing is accomplished by a direct mapping from finger position to selection of a point on the screen beneath the finger. This direct mapping makes touch screens easy to understand and use. However touch screens are impractical for everyday use as the main display of a computer because the user s arm tires from being continuously held up to touch the screen. If the touch screen is laid flat to avoid arm wear the arm tends to rest on the touch sensing surface and with many touch sensing technologies this disrupts the ability to sense the finger. Touch screens the size of a main computer display may also be prohibitively bulky or expensive for use in applications that do not require them.

A transparent touch pad suitable for placement over a display such as an LCD screen has been developed and is disclosed and claimed in co pending U.S. patent application Ser. No. 09 415 481 filed Oct. 8 1999 assigned to the same assignee as the present invention. This application discloses a touch screen having the small size and low cost of a conventional touch pad for portable computers and notes that the touch pad and display could be included in a personal computer to enhance the user interface in various ways but it does not disclose details of the software implementation nor how such a device can simultaneously function as the pointing device of the computer nor how this arrangement enhances the user interface.

The drawbacks and disadvantages of the prior art are overcome by the touch screen with user interface enhancement.

The present invention discloses a graphical user interface in a computing device having a processor running an operating system and a display. The graphical user interface comprises a touch screen and a driver coupling the touch screen to the operating system. The driver displays a plurality of icons on the touch screen with at least one of the icons identifying at least one region on the touch screen that will cause an action on the display and not on the touch screen in response to contact by an object on the region.

The present invention also discloses another embodiment of a graphical user interface in a computing device having a processor running an operating system and a display. The graphical user interface comprises a touch screen having an unactivated state and an activated state and a driver coupling the touch screen to the operating system. The driver displays a plurality of icons on the touch screen with at least one of the icons identifying at least one region on the touch screen that will cause an action on the display and not on the touch screen in response to contact by an object on the region.

Lastly the present invention discloses another embodiment of a graphical user interface in a computing device having a processor running an operating system and a display. The graphical user interface comprises a touch screen and a driver coupling the touch screen to the operating system. The driver displays a plurality of icons on the touch screen with at least one of the icons identifying at least one region on the touch screen that will cause an action on the display and not on the touch screen in response to contact by an object on the region. The driver has an application programming interface that enables an application to display at least one image on the touch screen.

Those of ordinary skill in the art will realize that the following description of the present invention is illustrative only and not in any way limiting. Other embodiments of the invention will readily suggest themselves to such skilled persons.

Similarly display can be a liquid crystal display LCD organic light emitting diode OLED display electroluminescent display or any other type of small display suitable for mounting in a portable computer. LCD displays are ideally suited for use in the present invention due to their low cost and availability but other types of displays may be employed. Display may be color or monochrome and need not have the same resolution color capabilities or other qualities as the main display of the computer.

The touch screen assembly may include a backlight to enhance readability in all lighting conditions. In alternative embodiments backlight may be replaced by a frontlight passive reflector or other light source or it may be omitted altogether.

Touch screen assembly may include additional layers or components to assist the mounting or mechanical properties of the touch screen or to integrate the touch screen with other components of the computer system. The touch screen may also include hardened antireflective textured or other surface layers. The inclusion omission or nature of these additional layers and components is immaterial to the present invention.

Touch sensor is connected to touch sensing controller . The nature of controller depends on the design of touch sensor and its details are immaterial to the present invention. Likewise display is connected to a suitable display controller and backlight if present is connected to backlight controller . Each of controllers and communicate with host computer . In an illustrative embodiment controllers and are connected to a central touch screen controller that connects to host computer by a single interface . Interface may be a mouse interface such as PS 2 or a general purpose peripheral interface such as the Universal Serial Bus USB . USB has the advantage of high bandwidth and wide availability. Any of controllers and may be implemented as chips or discrete components combined onto fewer chips or one chip integrated with assembly or combined with other functions of host computer . Host computer may be embodied in the central processing unit of computer system a peripheral processor such as a USB host controller or a combination thereof.

In an alternative illustrative embodiment controllers and may connect to host computer through different interfaces. For example touch screen controller could connect as a conventional touch pad using a PS 2 interface while display controller and backlight controller connect by USB or by a specialized display interface.

Because touch screen of replaces a conventional touch pad touch screen usually serves as a conventional pointing device for the computer. For this reason the touch screen must be able to interface to the computer as a conventional mouse. This is a further reason for interface to be either a mouse interface such as PS 2 or a general interface such as USB that includes support for conventional mice. Interface may also provide for an alternate or extended interface protocol that allows for additional information about finger activity to be communicated to computer and for computer to control display and backlight . This additional finger activity information may include the absolute location of the finger on the sensor surface. When appropriate driver software is loaded onto computer the driver software can enable the alternate or extended interface protocol to support the user interface enhancements of the present invention. When other driver software such as a conventional mouse or touch pad driver is loaded instead interface can revert to mouse or touch pad compatibility using touch sensor as a conventional touch pad and controller or can operate the display autonomously such as by furnishing a suitable default display image for display .

When the touch screen is used as a conventional touch pad finger motions on the touch sensor e.g. in a cursor positioning region which could identify a starting position will typically cause corresponding motions of a cursor on the main display and clicks of mouse buttons or action control icons will typically cause special actions such as selections on the main display. Tapping gestures may be interpreted as mouse clicks or other special actions as disclosed in U.S. Pat. No. 5 543 591. Other gestures may also be recognized such as scrolling motions as disclosed in U.S. Pat. No. 5 943 052. The default display image may include graphical icons to indicate special tapping or scrolling regions on the touch sensor surface or the default screen image may be a blank screen with only a manufacturer s logo.

In one embodiment the cursor positioning region is denoted by the absence of icons for actions other than cursor positioning. However there are many different ways of identifying the cursor positioning region on the touch screen such examples include but are not limited to a box could enclose the cursor positioning region a shaded region or icon could cover the entire cursor positioning region or an icon could be centered in an otherwise blank area thus labeling the blank area as a cursor positioning region.

Alternatively computer system of can include a secondary pointing device such as an isometric joystick located in keyboard or an external mouse which relieves touch screen from the responsibility of functioning as primary pointing device in addition to its role as an enhanced user interface device.

A conventional touch pad with default screen image is just one of several general modes of usage that are envisioned for the touch screen of the present invention. Subsequent drawing figures illustrate several other usage modes that employ the touch screen as a fully interactive input output device to enhance the user interface of the computer system. These general usage modes include iconic auxiliary and pop up touch screen modes each with a variety of possible applications. The same touch screen can operate in each of these various modes or other modes at different times. The different modes can also appear on the screen at the same time for example icons can appear in an auxiliary or pop up image or an auxiliary or pop up image could be overlaid in a window on the iconic mode image instead of fully replacing that image.

In the example image of image includes scroll arrow icons and and a touch region such as illustrated by corner tap icon in common with . Logo has been omitted from image in this example to reduce clutter. In an alternate embodiment non critical graphics from the default image could be retained as a background image on which icons overlap in yet another embodiment a different image such as static or dynamic wallpaper may serve as a background image.

In example image additional icons have been added to represent various system status indicators and functions. Icon defines a second touch region or a corner tapping region to activate the back function of web browsers and other software. As the user enables and disables special tap regions and changes their assigned functions such as by using a software control panel the tap region icons such as icons and can appear disappear move and change in shape to reflect the current settings.

Icon is a continuous display of the time and date. This icon would normally have no effect on the interpretation of finger taps within its region. Instead a finger tap within its boundaries would be interpreted as a simulated mouse button click just as if the tap occurred away from any icon. If every icon responded specially to finger taps the main function of tapping to simulate a mouse click would become too inconvenient to use. A visual convention may be used to indicate which icons represent tap sensitive regions in the example of dashed lines and are used to indicate these regions.

Icon group includes the traditional set of status icons that appear on modern portable computers such as numeric keypad lock caps lock scroll lock hard disk activity battery life and system power. By locating these system icons on the touch screen display the system designer eliminates the need for the special dedicated LED or LCD status displays that are typically used in prior art computers.

In some prior art portable computers the dedicated system status displays are situated so that they are visible even when the cover of the computer is closed over the main display. The touch screen of the present invention could similarly be situated so that all or part of the screen image is visible when the cover is closed for example by causing the touch screen to protrude from under the cover or by cutting a notch in the cover over the location of the touch screen. This arrangement would allow the user to monitor battery recharging and other quiescent activities of the computer system while the computer is not in use.

Icon is an e mail notification status icon icon may for example change to a new shape or animated image to indicate that e mail has arrived. Icon similarly notifies the user of imminent appointments. These icons suggest a natural action that could be taken when the user taps on the icons such as opening the associated e mail reading or appointment scheduling software. Because these icons are located nearer the center of the touch sensing area and could easily be tapped by accident icons and may be made sensitive to finger taps only when they have been activated by some separate means such as pressing a special function key on keyboard .

Icons and represent commands to select pop up applications on the touch screen. Icon selects an application launcher. Icon selects a calculator or numeric keypad. Like icons and icons and may be made sensitive to finger taps only when the touch screen is in the activated state.

Icon represents the volume control for the sound system and speakers of the computer. Icon includes a visual slider and thumb. The position of the thumb on the slider reflects the current volume setting. When the touch screen is in the activated state finger motions within the volume control region can move the thumb to a different location on the slider to adjust the volume level. When the touch screen is not in the activated state icon is a visual display only and has no special interpretation when touched. Similar slider controls may be provided to adjust other system parameters such as the sound balance among several sound sources the brightness and contrast of the main screen or touch screen or the power management strategy.

The icons depicted in are illustrative of the types of icons that can be provided on the iconic mode screen. does not necessarily represent the ideal selection or placement of icons. Human factors testing may be used to decide on the number types and placement of icons in the default iconic screen. Also it may be advantageous to allow the user to select which icons are present and to rearrange the icons possibly using a software control panel. Because the number of candidate icons likely exceeds available space it may be desirable to provide multiple iconic screen layouts selectable by some means such as in the software control panel or by tapping on an icon on the touch screen.

It will be obvious to one skilled in the art that many other images logos status indicators command buttons controls and other types of icons can share the touch screen display in the iconic usage mode. These icons can be purely display indicators or they can indicate control regions that respond specially to finger motions and or finger taps either at all times or only when the touch screen has been activated in a special way. Some icons may be built in by the system designer such as the system status icons or the logo of the computer manufacturer. Other icons may be created and maintained by application software running on the computer such as an e mail notification icon.

The activated state of the touch screen may be indicated by a visual convention. illustrates the touch screen image of modified to indicate the activated state of the touch screen using a dashed line around each icon that is touch sensitive in the activated state. In image dashed lines and have surrounded certain icons to indicate that finger taps in the regions near these icons will be interpreted as special commands to the icons. Similarly dashed outline indicates that finger motions in the volume control region will adjust the setting of the control. Outline for the time and date icon has become dashed to indicate that a tap on this icon will activate a special function such as setting the time or accessing a world clock. Outline for the system status icons remains solid to indicate that in the example of these icons have no special tapping functions in the activated state. Dashed lines and remain to indicate that the corner tap regions continue to have their special tap interpretations when the touch screen is in the activated state. Many other visual conventions would serve equally well to indicate touch sensitive icons such as solid or colored lines colored or inverted backgrounds changes in brightness or coloration of the activated icons changes in shape or animation of the activated icons or other well known conventions for highlighting a portion of an image.

The example of illustrates the same set of icons in the activated and unactivated state. However activation of the touch screen could also create additional icons that are not present for example to reduce clutter when the touch screen is not in the activated state. Existing icons could also be removed or rearranged although to avoid confusion this could be done only to replace icons not useful in the activated state such as icon of with other icons that are most useful when activated such as icons similar to icons and .

There are many possible alternative mechanisms for the user to signal the activation of touch screen icons. In the simplest case the icons are either always inactive or always active for tapping or motion commands. The corner tapping and scrolling region icons and of and of are examples of icons that are active at all times. The logo icon of and system status icons of are examples of icons that are inactive at all times. For simple touch screen images like that of all icons may fall into these simple categories and no overt activation mechanism is needed. For more elaborate touch screen images like that of an overt activation mechanism is necessary for those icons that must respond to touch but cannot reasonably be made touch sensitive at all times.

In an illustrative embodiment a key on the main keyboard of computer system of is designated as the touch screen activation key. illustrates a portion of the keyboard featuring several keys. Most keys of the keyboard such as letter Z key have preassigned functions that do not overlap well with touch screen activation. Even the existing shifting keys such as shift key control key and Alt key are not suitable because they are often pressed in conjunction with mouse clicks in application software for features such as extending selections hence it is desirable for the user to be able to tap normally on the touch sensor to simulate a mouse click while these shifting keys are pressed.

Function or Fn key is common on the keyboards of portable computers. This key when held down changes the interpretations of various other keys to perform special control functions. For example in one portable computer the arrow keys change to screen brightness controls certain letter keys change to become a numeric keypad and various other keys change to control the external video and various other functions. The alternate Fn functions of the various keys are often indicated by blue writing next to the white writing indicating the primary function of a key. Because the Fn key is often absent on desktop computers software typically does not give special interpretations to mouse clicks in conjunction with the Fn key. The usage and functionality of Fn key coincides well with the function of activating the touch screen. In one illustrative embodiment holding down the Fn key causes various icons on the touch screen to be activated with visual feedback as shown in in addition to the normal action of redefining various keys of the main keyboard. Releasing the Fn key causes the touch screen to revert to its pointing device usage at the same time as the keys of the main keyboard revert to their primary functions.

If Fn key functions are indicated by a color code such as blue writing this color code can be employed on a color touch screen for extra mnemonic effect. For example blue outlines or coloration can be used on the icon itself or in a background or outline to indicate those icons whose behavior will change when the touch screen is in the activated state. The outline or background could then change from blue to white when the touch screen is activated signifying that the icons are now sensitive to touch.

Computers intended for use with the Microsoft Windows operating system often include a Windows key . The Windows key also changes the interpretations of various other keys on the computer keyboard while it is held down. The Windows key is another candidate for a touch screen activation key with semantics similar to those disclosed for the Fn key. Those practiced in the art will recognize that certain other keys that appear on some portable computer keyboards such as the AltGr key may also be suitable candidates for a touch screen activation key.

In an alternate embodiment a new key can be added on or near the keyboard to serve as a dedicated touch screen activation key. Key could operate as an activation shift key for which the touch screen is activated for the duration that the key is held down. Or key could operate as an activation prefix key for which the touch screen is activated after the key is struck and until an icon is tapped. In yet another embodiment key could operate as a toggle key that alternately activates and deactivates the touch screen each time it is struck. Any of these schemes or others would work but it may be advantageous to use an existing key such as Fn key or Windows key instead of a dedicated key . Using an existing key simplifies keyboard design and is more familiar to users accustomed to standard keyboards. However it may be advantageous to label the existing key with an icon or lettering to indicate its dual function as a touch screen activation key in addition to its normal label as illustrated by key of .

Many other touch screen activation mechanisms are possible alternatives to a keyboard key. In one embodiment an additional mouse button is provided adjacent to buttons of to activate the touch screen. Alternatively a special touch sensitive region or second touch sensor could be provided that activates the touch screen when touched. illustrates one possible arrangement of such a button or touch sensor. Toroidal button or touch sensor surrounds all or part of the touch screen . Toroidal button or sensor is distinct from conventional mouse buttons and . In one usage the toroidal button would activate the touch screen when touched or pressed. Alternatively the touch screen icons could remain active except when toroidal button or sensor is touched or pressed. This latter usage may be advantageous since the user can be expected to keep the hand near the keyboard or near conventional buttons and and therefore also near sensor during conventional operation of the computer when touch screen is mostly likely to be operated unconsciously as a pointing device.

Another possible activation mechanism is to provide a region on the touch screen which is always active and in which finger taps are interpreted as a signal to enter or toggle the activated state of the touch screen. A software control panel could offer the activation function as one of the possible functional assignments of corner tap regions and of .

Yet another mechanism is for the user to click on a soft button or icon on the main display to activate the touch screen. Numerous other activation mechanisms are well known that could serve for touch screen activation such as finger motion gestures voice commands foot switches retinal gaze tracking etc. Software applications that make use of the touch screen can offer additional application specific activation mechanisms.

In yet another embodiment icons are individually activated by being touched in a special way instead of by an overall touch screen activation state. For example single taps near an icon could be interpreted as normal mouse clicks but rapid double taps could trigger the activated function of the icon. Alternatively touching an icon with multiple fingers or hovering the finger over an icon without touching the surface of the touch screen or holding the finger steady over an icon for a given duration could trigger the activated function of the icon.

Some touch screen technologies are sensitive to other objects such as a pen pencil or pointer in addition to fingers. In such devices a finger tap could trigger an activated function while a pen tap would be interpreted as a normal mouse click or vice versa. Or a special button could be provided on the body of the pen that triggers the activated function of an icon when pressed.

It is also possible to provide several of these alternate mechanisms at once. These multiple activation mechanisms could be synonyms in that they all activate the same special function of each icon or different activation mechanisms could activate different special functions of the icons. Multiple different special functions should be used with caution because of the likelihood of confusing the user.

With iconic screen images such as that of it is desirable to include many small icons on the screen to provide access to a maximum number of features. As shown in such small icons may be smaller than finger and may be completely obscured by the finger when the finger touches them. Because the finger will cover the icon only momentarily this effect may not be a serious problem. However various techniques can be employed to solve the problem of obscuring small icons and in an illustrative embodiment the screen images are designed so that the icons are either large enough to avoid being obscured or situated so that the user can operate them even when they are momentarily obscured or provided with a mechanism to eliminate the problem of obscuring small icons.

In the auxiliary mode finger motions and or finger taps would typically be given a special interpretation by the application. If the application treats finger motions specially the touch screen will be unable to move the cursor on the main display as long as the application imposes its special interpretation on finger motions. This may be acceptable if an alternate cursor motion device or mechanism is present or if the application does not need a cursor or if the special interpretation lasts for only a brief duration. Alternatively if the application treats only finger taps specially then the user can use the touch screen to move the cursor on the main display but the user must use the mouse buttons of to click or select items on the main display. In another alternative the application may display an auxiliary image but allow the touch screen to interpret finger motions and taps in the same way as the iconic mode. In this latter alternative if the auxiliary image includes buttons or control icons then a special activation mechanism must be used to activate the buttons or controls as disclosed for the iconic mode. Applications may divide the screen into regions or icon image areas that interpret finger motions or taps in different ways analogous to the special treatment of taps in corner regions and and the special treatment of finger motions in scrolling regions and of . In an illustrative embodiment each application may choose any of these alternatives or other alternatives for its auxiliary screen as best fits the needs of the application.

In the example of the touch screen illustrates an auxiliary image for a slide presentation. Slide presentation software such as Microsoft PowerPoint typically uses the entire main display of the computer in full screen mode to display the current slide. Because the main display may be shown to an audience or linked to a video projector the main display must show only the slide image itself. The touch screen displays an auxiliary image with information useful to the presenter. Region displays the slide number title and speaker s notes. Region displays the title or preview image of the next slide and region similarly displays the previous slide in the presentation. Regions and are finger tappable buttons to advance the presentation forward or backward by one slide. Region is configured so that a finger tap brings up a menu of additional presentation options in one example presentation software system tapping on region would simulate a right mouse button click. The slide presentation software would be configured to display auxiliary image only during a full screen presentation. At other times the software would allow the touch screen to revert to iconic mode with the touch sensor serving its usual role as a pointing device to operate the software.

Those skilled in the art will recognize that the slide presentation application of is representative of a class of applications that can benefit from leaving the entire main display free to display dedicated images. Another example is a software player for DVD movies or videos. DVD players usually include controls such as pause reverse fast forward and chapter select. However it would be distracting to place these control icons on the main display of the computer when a movie is playing. In the example of the DVD player places a small control panel on the touch screen reserving the entire main display for movie viewing. Control panel includes status icons displaying track information and timing buttons for operations such as stop and fast forward and volume control . During full screen movie viewing buttons and control would respond to touch to control the playing of the movie. When the DVD viewing software is not in full screen mode the touch screen could be allowed to revert to normal iconic mode or control panel could remain on the touch screen display but with buttons and controls active only when the touch screen is in the activated state.

Similarly many computer systems can play audio from music CD s. Users typically listen to CD s as background music while doing unrelated work on the computer. CD playing software typically displays a control window very similar to that of the DVD software. This window can obstruct the view of the application running on the main display and would usually be moved to a touch screen display very similar to that of .

Another class of applications that can benefit from the touch screen in auxiliary mode is those applications that can benefit from displaying additional or subsidiary information. Many computer operating systems and software applications today provide pop up help that appears automatically on the screen when the cursor is held still on an icon or button. The pop up help displays a brief explanation of the icon or button allowing the user to know ahead of time what will happen if the icon or button is clicked. Pop up help is usually restricted to brief one line descriptions as larger automatic pop up help windows would obstruct the display. When large unsolicited on screen help displays have been attempted as in Microsoft s animated paperclip assistant users have often found the help feature to be more distracting and obstructive than useful.

According to the present invention applications can display more extensive pop up help or other explanatory or subsidiary information on the touch screen when the cursor covers an icon or button on the main display. Because touch screen help text does not obscure anything on the main display it can be quite extensive and it can appear immediately without waiting for the cursor to hold still over the icon for a period of time. Touch screen help can also be offered for user interface elements that normally are not well suited to pop up help for visual design reasons such as the selections within pull down menus.

Some software applications already include detailed help text for many user interface elements. This help text may be intended for display when the user invokes an explicit context sensitive help command for the element. In the present invention this pre existing detailed help text can be adapted for display on the touch screen as well possibly with little or no modification to the application software itself.

All of the preceding examples have featured auxiliary screens tied to a particular application. It is also possible for a particular window or dialog within an application to have an associated auxiliary screen. For example the Open File command in most applications brings up a characteristic dialog window on the main display. This dialog includes a list of files and directories a space for typing in a file name and various buttons for navigating the file system. In many cases the software application calls on the underlying operating system to supply a standardized dialog for choosing a file. An application or the operating system itself could supply an auxiliary screen image with additional buttons controls or displays to help the user select a file.

Some dialogs must interact with the main display image of an application. For example the text find and replace dialog of a word processor typically must stay open as the user calls for repeated searches and replacements in the document but the dialog tends to get in the way of the view of the document being searched. Word processors employ elaborate heuristics to try to keep the dialog box and the focus of attention within the document out of each others way.

Similarly many applications display alert dialogs typically appearing at unexpected times with brief text messages to alert the user of errors or other irregular events. Alert dialogs can confusingly obstruct the view of the very operation that caused the alert and are another good candidate for moving to the touch screen. Applications often call on standard operating system services to display alert dialogs so the task of moving alerts to the touch screen can be accomplished in the operating system without the cooperation of individual software applications.

To be effective game controls regions and must be sensitive to touch at all times without requiring the touch screen to be in an activated state. The remaining area of screen may be used for normal cursor motion. If screen includes many game controls there may be insufficient area remaining to support cursor motion. Depending on the game being controlled it may or may not be acceptable to omit the cursor motion function. If cursor motion is required one solution is to invert the sense of activation so that the touch screen operates as a normal pointing device only when it is in the activated state. Another solution is to provide a small cursor control region such as region that operates on different principles from a regular touch pad. Region could serve as a relative cursor motion device where placing the finger in the region and then rocking the finger a small distance in any direction causes steady cursor motion in the indicated direction. These or similar mechanisms could be used in any auxiliary or pop up screen that must support cursor motion despite using most of the screen area for other functions.

Many software applications provide drop down menus or toolbars on the main display to invoke various operations and commands of the application. Another beneficial use of the touch screen of the present invention is to move or duplicate some or all of these menus and toolbars onto the touch screen. illustrates an example in which image includes icons drawn from a typical toolbar. By activating the touch screen and tapping any of these icons the user can invoke the corresponding function in the software application. Because these icons would appear in the same relative location on the touch screen every time the application is used the user can learn their locations by feel and thus avoid the distracting task of moving the cursor away from the natural focus of attention and onto the menu or toolbar. Displaying toolbar icons on the touch screen allows the user to locate the icons in the learning phase before the locations of the icons are known by feel.

Those practiced in the art will see that many other types of applications can make use of auxiliary displays and controls on the touch screen. For example spelling and grammar checking software could display lists of correction choices without obstructing the text being reviewed. The set of examples disclosed and illustrated here in no way limits the scope of applications that can benefit from an auxiliary touch screen according to the present invention.

In the example of the pop up image is an application launcher. When the application launcher is invoked image replaces the previous image on the touch screen. Image includes various icons representing commonly used tools and software applications on the computer. The set of applications shown may be predetermined or may be chosen by the user. When the user taps the finger on one of icons image disappears and is replaced by the original touch screen image and the selected application software is launched. Typically this application would be a conventional software application such as a word processor running on the main display of the computer but some of icons may represent system commands such as shutting down the computer other tools such as another pop up application on the touch screen or links to additional application launcher screens. The user can also tap on icon to exit the application launcher screen without invoking any application.

Pop up screens such as the application launcher of may be invoked by any of various well known means for invoking applications such as a keyboard key an icon like icon or corner tap region like region of or the Start menu of Microsoft Windows .

Pop up screens may be implemented as regular applications as viewed by the operating system in this case the application would not create a visible window on the main display but it would create a touch screen image using the same mechanisms that other applications would use to create an auxiliary touch screen image. In an alternate embodiment pop up screens like that of could be implemented specially within the touch screen driver software or they could be implemented in the touch screen controller hardware such as controller of .

Computer keyboards traditionally include a numeric keypad but portable computer keyboards rarely have room for a conventional keypad. Portable computer system designers are forced to adopt awkward solutions such as the Fn key. A pop up numeric keypad screen very similar to the calculator of could serve the role of the numeric keypad in a portable computer. This keypad screen could be invoked by the NumLock key already provided on computer keyboards for activating the numeric keypad.

Many computer operating systems provide a magnification tool to assist the visually impaired. This tool typically creates a window on the main screen that displays a magnified copy of the display image surrounding the cursor. This magnifier window can obstruct useful information on the main display. According to the present invention as illustrated in the magnifier can instead take the form of a pop up image on touch screen leaving the main display undisturbed. Unlike the examples of the magnifier pop up would probably be left displayed much of the time that the computer is used. This pop up application would therefore leave the touch sensor operating as a conventional pointing device hence corner tap regions and are retained. When the touch screen is in the activated state the magnifier application can offer additional accessibility features on the touch screen. In the example of in the activated state touch screen replaces image with an image of controls such as magnification level adjustment . Also close box appears in the activated state to allow the user to turn off the magnification feature. In an alternate embodiment in the activated state the magnifier activates features to assist operation of small on screen controls.

In an alternative magnification mode the main display image is reduced and moved to the touch screen display and then a magnified view of a portion of the image is shown on the main display. This has the advantage that the main display is larger and likely to have greater clarity and color depth than the touch screen and will thus be a better detail viewing device for the visually impaired.

Debugging is a task that greatly benefits from a secondary display. Computer programmers today sometimes attach a second display monitor to their computers so that the program under debugging can operate undisturbed on the first display monitor. These second displays are costly and inconvenient particularly on portable computers. As shown in a debugger could be implemented instead as a pop up application on the touch screen of the present invention providing the benefits of a secondary debugging display with no extra cost or bulk. In the example of image includes command buttons and source code display window .

Users of ideographic languages like Chinese and Japanese typically rely on input methods beyond the simple direct keystroke mapping used in Western languages. A variety of input methods are in use for ideographic languages many of which require or benefit greatly from providing visual feedback to the user through a special window. This window can obstruct the application for which the input is intended. According to the present invention the input method dialog can be implemented as a pop up image on the touch screen. One popular input method is handwriting recognition in which case the touch screen can also serve as the handwriting input device for added benefit.

Handwriting with inking is also useful in applications such as signature capture signature recognition and sketching all of which are enhanced by the touch screen of the present invention.

Another useful class of pop up screen applications is in the area of security. Portable computers are especially vulnerable to theft so many portable computers include some kind of password or biometric interlock. For maximum effectiveness the interlock should validate the user s identity before the main processor of the computer is even allowed to run. Because the main display is operated by the main processor of the computer the security interlock would need to use alternate output mechanisms to interact with the user. The touch screen of the present invention provides an excellent user interface device for a security interlock. The software that manages the interlock can be implemented in the touch screen controller itself or in another peripheral controller within the computer. This implementation fits well with the architecture of many portable computers today where a peripheral controller is already present in between the main processor and the touch pad and this peripheral controller is also already tasked with power management and system reset control for the main processor.

The security interlock of and the debugging screen disclosed previously are examples of the general class of applications that use the touch screen to communicate with the user when the rest of the computer system is indisposed due to special circumstances. Another example of this class would be the reporting of information about hardware failures in vital system devices such as the keyboard and the hardware of the main display.

Many other applications of pop up screens are supported by the touch screen of the present invention. For example pop up games could be implemented entirely on the touch screen leaving the main display unobstructed.

Referring back to touch screen assembly may advantageously include a backlight or an equivalent. Backlights draw more power than the other components that make up a touch screen so it is advantageous to switch the backlight off when it is not needed. In an illustrative embodiment backlight controller is capable of dimming or extinguishing the backlight at the request of controller or host computer . Controller and host computer may use heuristics to switch the backlight on and off without explicit direction by the user. For example the backlight could be switched on if an application installs an auxiliary screen image that replaces the default iconic image and then switched off if the touch screen goes a certain amount of time without being used. Similarly the backlight could be switched on whenever the touch screen is in the activated state.

Switching on the backlight when the touch screen is activated has the added benefit of reminding the user that the behavior of the touch screen has changed. The backlight can serve more generally as an attention mechanism for software applications and for the operating system. For example the backlight can be flashed on or off to notify the user of the arrival of new e mail or of an impending appointment. Many computer operating systems use sounds to alert the user of a variety of errors and events but portable computers are sometimes used in public places where the sound must be turned off. The backlight can serve as a replacement alert in this situation. This feature is especially useful when alert dialogs are moved onto the touch screen from the main screen as disclosed in relation to . Alert dialogs obstruct the view of the application data or interaction that may have raised the alert by moving the alert to the touch screen and calling the user s attention to it by flashing the backlight the present invention can improve the effectiveness of alert dialogs throughout the operating system.

If display is a color display then the system can flash backlight or color display itself in different colors to signal different types of alerts to the user. In this alternative the use of color is analogous to the use of different sounds for audible alerts and the touch screen may implement a mapping from standard sounds supplied by the operating system to standard color alerts.

Conversely in some systems backlight may be omitted to save space power or cost. On such systems an alternate attention mechanism may be provided to alert the user when the touch screen is activated or changed to a new image with different active buttons. Suitable attention mechanisms include audible alerts an icon or special cursor shape on the main display of the computer an LED mounted near the touch screen or a tactile feedback mechanism integrated with the touch screen.

The touch screen of the present invention must provide a mechanism for application software running on touch screen controller or host computer to create icons such as those shown on the iconic screen of and to create auxiliary and pop up images such as those shown in . Various mechanisms are possible to accomplish this.

If the software that manages an icon or pop up screen resides in touch screen controller then the software has direct access to touch sensor and display via controllers and . The software on controller can interpose its own images into the sequence of images it receives from host for display. The software on controller can also intercept finger touch information from sensor before sending this information to host . By these means icons and pop up screens can be implemented by software entirely in controller with no participation by host . Depending on the nature of interface controller may also be able to send keystroke information to host to allow its icons and pop up screens to control host by simulated keystrokes.

In an illustrative embodiment many icons auxiliary screens and pop up screens are implemented by various software applications running on host . To coordinate access to the touch screen by these various applications host includes driver software that serves as a conduit between software applications and touch screen controller .

Hardware layer includes touch screen module which in turn includes touch screen controller of . Touch screen module connects to peripheral controller which is included in host computer of . Peripheral controller would be a USB host controller subsystem in the case that the USB protocol is used. Peripheral controller is operated by hardware driver . Hardware driver is supplied by the operating system of the computer and is not particular to the present invention.

Driver layer includes touch screen driver which communicates with hardware driver to operate the touch screen hardware. Touch screen driver communicates with pointing device driver . Pointing device driver is supplied by the operating system and is responsible for operating mice and other pointing devices. When the touch sensor is operating as a conventional pointing device touch screen driver converts sequences of finger positions reported by touch screen into motion signals similar to those produced by a mouse. Touch screen driver also examines the finger presence indication from touch screen to recognize finger tapping gestures. U.S. Pat. No. 5 543 591 discloses methods for computing tapping gestures on a touch pad sensor. These motion and gesture signals are conveyed to pointing device driver to cause cursor motion and clicking compatible with a mouse or conventional touch pad.

Touch screen driver also operates application programming interface API layer . Software applications running on the computer represented in by software applications and in application layer can use API to obtain special access to the touch screen. API exports a variety of touch pad and touch screen commands to the applications in application layer . These commands include requests for information about finger and mouse button activities on the touch sensor as well as requests to override the cursor motion normally conveyed to pointing device driver with different cursor motion generated by the application based on finger movements. The API commands also include requests to display or update an icon on the iconic screen image or to display or update a full screen auxiliary or pop up image.

Touch screen driver is responsible for deciding among conflicting API requests. For example touch screen driver may consult pointing device driver or other operating system components to determine at all times which application application window or dialog has the input focus. If applications and each post a request to display an auxiliary screen image it may be advantageous to have driver send the auxiliary image of application to touch screen only when application has the input focus. Similarly driver sends the auxiliary image of application to the touch screen only when application has the input focus. If application has not posted an auxiliary image then when application has the input focus driver may displays a default iconic screen image similar to that of .

When the user touches the touch sensor driver forwards the finger touch information to the application with the input focus if that application has posted an auxiliary screen image that overrides the default finger motion behavior. Similarly driver forwards finger tapping information to the application with the input focus if the application has posted an auxiliary screen image that overrides the default finger tapping behavior.

Driver also monitors the keyboard touch screen or other devices to implement the various touch screen activation mechanisms disclosed in relation to . If the auxiliary screen of an application is displayed the driver conveys the activation state to the application to allow the application to interpret finger motions and taps correctly. If the default iconic screen is displayed the driver uses the activation state to decide whether to forward motion or tapping information about the icon under the cursor to the application that posted the icon.

Pop up screens may be created using similar means to auxiliary screens. However for pop up screens driver may advantageously maintain a concept of touch screen pop up focus distinct from the input focus maintained by the operating system for applications on the main display. Driver must use some reasonable rule to coordinate between multiple requests for auxiliary and pop up images.

Driver may implement some icons auxiliary screens and pop up screens entirely within the driver itself. The driver may include a mechanism for associating auxiliary screens with pre existing applications that do not recognize API . For example if a known pre existing presentation software application has the input focus the driver could supply an auxiliary screen like that of . Driver would interpret taps in the special icons of by sending corresponding signals known to be recognized by the software application such as simulated keystrokes or mouse clicks. Driver may also implement a mechanism to allow users to associate special icons or auxiliary screens with pre existing applications. One such mechanism is a scripting language including commands to display images and icons and to change the interpretation of finger actions scripts in such a language could be written and associated with a software application without modification to the application itself. Another such mechanism is a graphical control panel similar to the resource editors present in many interactive programming environments.

Driver may support a software control panel to allow the user to customize the operation of the touch screen. This control panel can include controls to choose enable disable and rearrange the various icons on the default iconic screen. This control panel can also include controls to choose which touch screen activation mechanism s to use and which auxiliary and pop up images to allow access to the screen.

Driver may allow combinations of iconic auxiliary and pop up images on the touch screen. For example driver could implement a concept of overlapping windows on the touch screen whereby an auxiliary screen could overlap part of but not all of the iconic screen image it replaces. One possible implementation of this approach is to use the existing display driver architecture of the operating system to manage the display of the touch screen. In the most general case the touch screen would be viewed as a second display monitor by the operating system and applications could open windows and dialogs on this display just as they would on the main display.

In an alternate embodiment the touch screen would be treated distinctly from the main display. Applications would be forbidden from opening windows on the touch screen or operating the touch screen by means other than API . This approach is less flexible but more appropriate as the small size of the touch screen causes it to behave in the computer human interface as a different class of device than main displays even though the touch screen and main display might both be implemented by similar raster LCD technology.

While the present invention has been described with reference exemplary embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings without departing from the essential scope thereof. Therefore it is intended that the present invention not be limited to the particular embodiment disclosed as the best mode contemplated for carrying out this present invention but that the present invention will include all embodiments falling within the scope of the appended claims.

