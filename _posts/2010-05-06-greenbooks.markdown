---

title: Greenbooks
abstract: A computer architecture that integrates desktop productivity applications with various visualization engines and various output engines allowing visualization, modification and formatting of the ultimate output from the application. Methods for accomplishing content visualization, editing and formatting in light of one or more printing option are also provided. Methods and apparatus are also provided for environmentally-friendly printing in booklet form.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08934119&OS=08934119&RS=08934119
owner: Electronics for Imaging, Inc.
number: 08934119
owner_city: Fremont
owner_country: US
publication_date: 20100506
---
This application is a Continuation In Part of U.S. patent application Ser. No. 12 722 064 entitled VIRTUAL PRESS RUN filed Mar. 11 2010 which claims priority to U.S. Provisional Patent Application No. 61 231 237 entitled VIRTUAL PRESS RUN filed Aug. 4 2009. This Application also claims priority to U.S. Provisional Patent Application No. 61 298 174 entitled AUTOMATED BOOKLET PRODUCTION TO REDUCE PAPER WASTE filed Jan. 25 2010 and each of which are incorporated herein in its entirety by this reference thereto.

The invention relates to the field of content visualization editing formatting and printing. More specifically the invention relates to computer architecture and user interface for providing a virtual press run thus achieving realistic document visualization and achieving a more robust set of editing and printing options.

Electronic document production involves developing content preparing a document layout and outputting the document typically in the form of a print job. A number of computer applications provide the necessary tools to accomplish basic content preparation but do not provide a user with the adequate resources to visualize edit and format the content so that the visual preview of the document on a computer interface actually represents how a completed print job looks. Furthermore existing publishing applications do not offer a user with adequate editing or formatting options for a print job.

Most content creation applications include a printing options interface and a print preview tool. However the printing options interface does not adequately show the user how the selected options will affect the appearance and layout of the actual finished printed and optionally bound document. Likewise the print preview tool oftentimes does not provide an acceptable representation of what the print job will actually look like. Present solutions to this problem include conducting multiple test runs or outsourcing document creation to a specialist both of which are a waste of time and financial resources.

Furthermore typical content production applications only offer a user a basic degree of customization for a print job. For example common presentation creation applications allow a user to print multiple slides on a single page. However these applications fall short when a user desires to vary how many slides are to appear on each page throughout the whole print job. Similarly content creation applications do not provide a user with an easy way to rotate source media change media size or alter document folding options. In these situations the user is forced to choose between foregoing the desired degree of customization and creating multiple print jobs to achieve the desired goals.

Additionally known printing systems and printing solutions do not provide users with adequate opportunity to print in an environmentally responsible fashion. From a printing perspective being environmentally responsible is primarily about using less paper. Reducing paper can help companies in two ways first and foremost they can reduce their costs secondly they can leverage their initiative to save paper as an environmentally friendly activity that will impress customers and employees.

However individuals that want to produce booklets must use sophisticated technology for manual page imposition and they must be skilled in the use and application of the technology. Also in order to create printed booklets that are printed on both sides of the paper and have a combination of different pages with different numbers of pages per sheet imposed into a booklet requires skilled knowledge and extensive manipulation of the pages or document. Therefore there is a need to develop a set of tools to automate the process of printing documents that will reduce the amount of paper used in an organization.

Finally most known document production applications do not provide a robust user interfaces for visualization formatting and editing print jobs.

In view of the foregoing the invention provides a computer architecture for integrating desktop productivity applications with various visualization engines and with various printer engines allowing robust visualization modification and formatting of the ultimate output from the application. The invention also discloses methods for accomplishing robust visualization modification and formatting in a computing environment.

The invention is implemented with a computer architecture having a publishing module to gather editing tools visualizations engines print enhancement tools and printing capability protocols as well as editable and printable content from any number of content sources. The publishing module merges the various gathered data and presents a user with visualization modification and formatting tools through a graphical user interface such that the user can see precisely how the ultimate output will appear on one or more networked printers. In some embodiments of the invention the publishing module updates the visualization of the print job as the user changes various printing options.

The invention also provides novel methods of gathering content editing and visualization engines and printing protocols merging them and providing a user with an improved visualization modification and formatting interface for preparing a virtual press run of the ultimate output from the application.

In some embodiments of the invention the publishing module is accessed through a gateway in a host content application. In the presently preferred embodiment of the invention the gateway comprises an icon in the menu screen of the host application. According to these embodiments the publishing module preferably provides a user with more customization options for a print job than the host application and provides the user with a more precise previewing interface for visualizing the print job than the host application.

In some embodiments of the invention a publishing module is integrated within dedicated printer a dedicated copier a dedicated fax machine dedicated scanner or combination peripheral devices with one or more capability selected from among a group of capabilities selected from among printing copying faxing and scanning.

In some embodiments of the invention a set of tools is offered to users of a publishing system to automate the process of printing documents and reduce the amount of paper used in an organization. Some embodiments involve tools for implementing an enterprise wide green printing solution for reducing paper use and for reducing the cost of printing documents. In some embodiments of the invention an environmentally friendly booklet making toolset is offered to a user of publishing and visualization system. In some embodiments of the invention detailed reports and print status feedback is delivered to users in order to quantify environmental impact reduction or lack thereof. In some embodiments of the invention the tools for environmentally conscious printing are available to external applications such as web browsers. In some other embodiments of the invention unique tools are offered to users that eliminate print waste that comes from users printing a print job and subsequently forgetting to retrieve it only to print it again.

Some embodiments of the invention involve printing booklets instead of single sheets of paper in order to save paper and to produce a high quality document. These embodiments give users the ability to create booklets in an automated workflow without complex imposition. These embodiments save money and are environmentally friendly.

Specific details for various implementations of the invention are disclosed. Although a reader will understand that the objects and goals of the invention may be practiced by a wide variety of general computing environments.

The invention is a publishing module providing users with a virtual workspace to prepare visualize organize edit publish and print documents and other files. As used herein the terms module and applet refer to any software or hardware processing component that is used to implement one or more of the disclosed functions of the invention. As used herein an applet comprises processing components that execute on a client computer or on a server i.e. a servlet. Furthermore the invention also provides one or more host applications upon which to interface the applet using one or more plugins. Some examples of host applications comprise Fiery Production products manufactured by Electronics For Imaging Inc. located in Foster City Calif.

The processor is further coupled to memory . In some other embodiments the host application and the processor are directly coupled to memory .

Furthermore the output module is coupled to a graphical user interface GUI presented to a user on a monitor not shown . Finally the output module is preferably coupled to one or more printer .

The publishing module of the invention gathers content files viewing engines editing engines printer files image enhancement applets and printer capability protocols among other data. The invention also allows a user to manipulate the content files in light of the gathered printer settings such that the user is able to visualize how a document looks like when it is printed. In those embodiments in which the publishing module is coupled to memory the publishing module is also configured to gather one or more template for providing a user with one or more user friendly editing printing solution.

The publishing module affords the user realistic print imaging such that what you see is what you get. Accordingly the publishing module provides a significant advantage to print imaging available in the prior art.

Referring still to the publishing module is coupled with various content sources and . In some embodiments of the invention the publishing module is directly coupled with the content sources and . In some other embodiments of the invention the publishing module is remotely coupled to one or more of the content sources and via a network.

In some embodiments of the invention content sources and comprise Powerpoint .ppt files Word .doc files and Excel .xls files respectively all available from a Microsoft Office Suite product produced by Microsoft Corporation. According to these embodiments the content source includes an API and the publishing module may be accessed via one or more Plug In supported by Microsoft Office user interface via a custom button or icon through an API call. See Office New User Experience UI Style Guide for Solutions and Add Ins for more Information regarding Microsoft customization and developer s tools. Microsoft Corporation Office New User Experience UI Style Guide for Solutions and Add Ins http www.microsoft.com downloads details.aspx. 

Although Microsoft Office Suite products are mentioned explicitly here and throughout the disclosure it will be readily apparent to those having ordinary skill in the art with the benefit of this disclosure that any content source that can be imported could benefit equally from the publishing tools of the present invention. For example in some other embodiments content is gathered from an Adobe product.

In some embodiments of the invention a run list database is coupled with the publishing module . The run list database comprises an inventory of content source pages that are modified and placed on to sheets as instructed from the content source application. In some embodiments of the invention the content sources and are coupled to the publishing module via one or more run list database .

The publishing module is further coupled to a view edit module . In some embodiments of the invention the view edit module is coupled to the publishing module via an edit API . The view edit module is coupled to one or more engines for presenting a representation of the content files. For example in some embodiments the view edit module is coupled to a three dimensional engine a two dimensional engine a JavaScript engine and or a Flash engine . The view edit module allows a user to view and edit the content gathered from the content sources and on the user interface . Preferably the editing and viewing is performed in light of a set of gathered printer capabilities.

The publishing module is also coupled to a printer capability print job building module . The printer capability print job building module gathers various printing protocols and settings from one or more printer and provides the user with the gathered printer options. Furthermore various output modules are coupled to the printer capability print job building module to perform certain print job processing functions. For example in some embodiments the output modules and are configured to convert documents flatten images and or perform capability checking and fixing. In some embodiments of the invention the printing options are gathered and communicated in a PostScript printing protocol.

In some embodiments of the invention the output module comprises a color space transform application. A color space transform converts the representation of a color from how it appears in the host application or in the publishing module GUI to how it looks when printed based on the gathered printers color capabilities. In some embodiments the color space transform attempts to make the printed color look as similar as possible to the visualized color. These embodiments are particularly useful for corporate color branding applications for example.

Furthermore the publishing module and the printer capability print job building module are configured to build print jobs for sending to the one or more printers . Preferably print jobs are communicated to the printers using a technical print standard such as a Job Definition Format JDF . For technical information regarding the JDF format please see Layout Creator to Imposition ICS . http www.cip4.org document archive documents ICS LayCrlmp 1.3.pdf 

In the presently preferred embodiment the view edit module is also coupled to the printer capability print job building module via module . According to these embodiments the publishing module allows a user to preview edit and format various document printing publishing options in light of gathered printer capabilities. As such the user will be presented with a precise preview of what a print job will actually look like on any selected printer.

Although the computer architecture of is described in terms of a plurality of discreet processing modules it will be readily apparent to those with ordinary skill in the art having the benefit of this disclosure that one or more of the modules can be integrated into a single module or one or more multi function modules collectively referred to as processing modules .

As used herein the term processing module shall mean any software processing component hardware processing component or portion thereof that may be used to implement one or more of the processing functions.

Some embodiments of the invention comprise a module for gathering the various editing viewing protocols printer options content files etc and merging them to provide a realistic view of how a print job appears in light of those options. However after an initial preview of a print job with current printing options a user may wish to alter how the job is printed.

According to known printing option interfaces the user is typically given an opportunity to select new print options but without being able to precisely see how those options change the look of the final printed document. For example when preparing a Microsoft PowerPoint presentation a user may desire to print in a booklet form. Known print previewing methods allow a user to see abstract images configured in booklet form wherein the images are not representative of the actual content. These methods fall short by failing to show the user exactly how the actual output will look in booklet form.

Indeed this shortcoming is not trivial. For instance a user may desire an image to span across two pages such that a continuous image is visible when a booklet is opened to those pages. According to the prior art a user is forced to make their best guess about the continuity of the two part image across successive pages select booklet printing and print a test run. Assuming that the estimation was not perfect the user is required to change the layout until the test run is perfect.

In light of the need for robust print previewing the invention provides a user with a visualization tool that clearly shows how a change to one or more printing option affects the look of a print job. illustrates user friendly graphical user interface GUI allowing a user to easily prepare a what you see is what you get virtual press run. clearly illustrates how the invention operates to cure the defects of known art as illustrated in the prior example.

Many content source applications give a user some printing and page setup options providing merely a base level of customization for print jobs. However various factors contribute to differences between what a user expects to be printed and the final product that is actually printed. For example a printer may be capable of drilling or punching holes in a text document. According to this example a user prepares a text document and selects this punching option. According to known print previewing and formatting methods the user can visualize the plain text document without punch hole in a print preview but may be surprised when the document is printed and a portion of the text is punched through.

However according to the invention the printer s capabilities paper attributes and page layout attributes are each considered by the publishing module and merged with the editing and visualization engines to present the user with a virtual press run. Therefore when a user selects a particular print option they are presented with an accurate representation of how the print job looks. Using the above example when the user selects a punch option the preview visualization tool may show the text being partially punched. As such the user may move the text or forego the punching options to cure the defect before actually printing.

In the presently preferred embodiments of the invention the processing modules described above provide a wide variety of instant feedback to a user via the visualization tools. In another illustrative example pluralities of publishing tools are offered to a user via a GUI. For example a stapling function allows a user to define a desired stapling location in a finishing operation for a print job. According to this example an icon of a stapler can be provided in the GUI to access the stapling options. In some embodiments instant feedback is given to a user upon rolling over the stapler icon with a mouse pointer in the form of a staple appearing in a default position or a custom position within a visualization panel.

Although hole punching and stapling visualization options are disclosed explicitly herein it will be readily apparent to those with ordinary skill in the art having the benefit of this disclosure that a wide variety of visualization options are equally applicable including those now known or later developed.

In this sense the invention truly delivers a what you see is what you get preview of a print job. Accordingly the user does not have to print a test run of a print job as the publishing module has already presented the user with a truly representative virtual press run.

The network architecture of provides publishing tools for a wide variety of applications and in a wide variety of printing and imaging environments. illustrates a workflow for publishing content according to some embodiments of the invention.

The workflow begins with Setup step . Setup step comprises installation and configuration of the applet. In some embodiments the applet is specifically configured to be compatible with a certain host application i.e. Microsoft Office. Once the setup step is complete the workflow continues when a user initiates a session at step . In some embodiments of the invention a session is initiated through the host application. For example when configured for Microsoft Office a session is initiated through a button or tab in the Microsoft Office interface as illustrated in . In some other embodiments a session is initiated by right clicking an icon of a content file on a computer desktop as illustrated in .

The workflow continues as the applet gathers content at step from one or more host application or other content source gathers edit view protocols at step and gathers printing protocols at step . In some embodiments of the invention the printing protocols are communicated as a PostScript file.

After the various information is gathered at steps and the workflow continues by merging the gathered content and protocol information at step . Preferably a publishing module merges the gathered content and protocols and allows a user to access and interact with the content in light of the gathered view edit protocols and printer capabilities.

After the merging step the user previews and or edits the content at step . Likewise at step the user selects printing options in light of the gathered printer protocols. Once the printer options are selected the content may look different than prior to a printer preference change. As such the user may chose to edit the content again at step . After step the image of the content on a computer screen is precisely how the image appears from a printer.

Finally at step the content is printed on one or more printers such that the images are printed precisely how they appeared within the applet GUI. In some embodiments of the invention the reformatted document image is cached and saved for later use. In some embodiments of the invention a cached reformatted file can be used as a template for future content formatting tasks.

A user accesses the publishing module of the invention and initiates a workflow through a gateway. As used herein the term gateway refers to an interface which passes both control status and page description language information to the publishing module.

As explained above according to some embodiments a user initiates the workflow by clicking an icon or button in the interface of a host application. illustrates a word processing menu interface including a gateway to an interface for the publishing module. As shown the gateway is a menu button. By pressing the menu button a user initiates the publishing applet and exports the word processing content from the host application to the applet interface. The applet also imports editing and viewing protocols as well as printing capabilities. Once the various files and data are imported the publishing applet applies one or more workflow to edit reformat and preview the content. After the user is satisfied with the reformatting the content can be printed.

The invention also provides a more robust viewing editing and formatting environment for document publication. Merging content with the gathered editing viewing protocols and the gathered printer capabilities with the publishing applet allows a user to take full advantage of the printers capabilities.

In some embodiments the processing modules described above automatically separate ingested files images slides etc. collectively referred to as files into meaningful groups based on the native file s file description or associated metadata. For example in some embodiments of the invention PDF files are separated into meaningful sections based on the PDF s table of contents. In some other embodiments of the invention the slides of a Microsoft PowerPoint presentation are separated into meaningful sections based on similar title headings. In some embodiments of the invention Microsoft Excel charts are separated using sheet identifiers. In some embodiments word processing files are separated into meaningful sections based on page breaks.

In some embodiments the processing modules force files from separate sections into separate pages in a finished print job. For example in a print job having multiple pages per sheet of paper i.e. 2 Up 4 Up etc. files with different sections will not be placed on the same sheet as another section. In some other embodiments of the invention tabs are automatically inserted into a finished file based on the sections described herein.

In some embodiments the invention gathers whether tab stocks are currently programmed into the print engine. According to these embodiments the visualization tools allow a user to navigate to the separate sections of merged file by clicking the virtual representation of the tab ears.

In some embodiments the invention gathers printer capabilities from one or more printer to provide a user with a more robust viewing editing and formatting environment for document publication. For example in some embodiments of the invention a group of printers networked to a user s computer may have more print options available to a user than the host application is enabled to take advantage of. According to the invention the printing capabilities of the publishing applet are superior to those of the host program. Indeed these options may be taken advantage of through the publication applet interface whereas they would not have been previously available through use of the hose program alone.

For example provides illustrative examples of how the publishing applet of the invention enhances a user experience. illustrates a sample presentation content source application for the creation of presentation slides. According to this example a user creates a set of presentation slides with the application that includes a title slide and content slides . . . n. The user may chose to print the presentation using the content source application after the presentation slides are created.

However oftentimes the content source application. falls below a user s expectations in terms of printing customization. For example a user may instead wish to print the title slide on its own page before putting content slides . . . n in a 4 UP configuration. Using the publishing tools of invention a user can customize the layout of the print job.

Referring still to layout shows a layout with the title slide on its own page 1 and content slides in a 4 up format on subsequent pages 2 and 3. Layout shows a layout with a title slide on its own page 1 and content slides in a 4 up format on the front and back of subsequent page 2. Layout shows a layout with a title slide on its own page 1 content slides in a 4 up configuration on page 2 content slide on its own page 3 and content slides . . . n on subsequent page 4 in a 4 up format. Although these particular layouts are shown explicitly it will be readily apparent to those having ordinary skill in the art having benefit of this disclosure that a wide variety of alternative configurations.

As explained above the invention provides a user friendly interface allowing you to easily prepare a what you see is what you get virtual press run. illustrate other examples of a graphical user interface GUI and show how changing various print options result in a dynamic realistic view of how the print job appears when actually printed.

In some embodiments of the invention pluralities of viewpoints are offered to a user of the finished document. In some embodiments a separate small window viewpoint is displayed within a finished view for allowing a user to modify the file while viewing how a change the overall look of the file. For example a small viewpoint is offered when a user clicks a tab ear allowing a user to enter text into the tab ears while still showing the full finished view in a second viewpoint. Preferably both viewpoints are live meaning that that text entered in the first viewpoint is showed in the second as it is typed.

The various GUI arraignments of the invention afford a user easy editing and visualization and allow a user to get a better feel of how a print job actually appears once printed.

It will be readily apparent to those with ordinary skill in the art having the benefit of this disclosure that while various examples of a GUI are presented explicitly herein a wide variety of similar GUIs can be used to accomplish similar aspects of the invention.

In some embodiments of the invention the processing modules are implemented into one or more peripheral device. For example in some embodiments of the invention the publishing module is integrated within dedicated printer a dedicated copier a dedicated fax machine a dedicated scanner or combination peripheral devices with one or more capability selected from among a group of capabilities selected from among printing copying faxing and scanning.

In some embodiments the one or more of the publishing editing visualization or other processing modules are embodied within a peripheral device with scanning and copying functions. In some embodiments the device scans one or more document set into a publishing workspace and provides a user with tools to assemble pages adjust the pages adjust the page order adjust the page dimensions adjust the color adjust the contrast define the number of copies desired for printing etc. all within a GUI on the device s display.

The workflow of illustrates an illustrative workflow for implementing the virtual press run tools on a copier according to some embodiments of the invention. According to the workflow begins with a user placing one or more document stack into a feeder of a copier . If user wants simple copy functionality the user presses the copy button the stack s are copied and the workflow ends. However if the user wants to initiate a virtual press run as described above the user presses a visual assembly button and continues to assembly edit format review visualize etc. the document. Next each page of the document stack is sequentially scanned and stored digitally internal to the copier . A visual representation of the document stack is then displayed on a GUI in the display of the copier . Preferably all of the available publishing options explained above i.e. simplex N up staple bind hole punching etc. as well as typical copier controls i.e. lighter dark contrast sharpness background adjustment color saturation hue shift etc. are displayed in the GUI.

Next the user selects adjusts controls to get the document to the desired appearance and presses a print button . Finally the saved document digital scans are processed according to user preference according to the selected preferences and a final print job is printed bound and delivered to the user .

In some other embodiments of the invention print jobs are transported between peripheral devices or between peripheral devices and a client computer. According to these embodiments the print job is created or scanned at a first device or computer altered on at least a second device or computer and subsequently delivered to the user. illustrates an illustrative workflow for implementing a transferable print job visualization session according to some embodiments of the invention.

The workflow of illustrates an illustrative workflow for involving transferable print job visualization session according to some embodiments of the invention. According to the workflow begins with a user placing one or more document stack into a feeder of a copier . If user wants simple copy functionality the user presses the copy button the stack s are copied and the workflow ends. Multiple stacks can be required when the document feeder limitations number of pages are exceeded by the users document.

However if the user wants to initiate a virtual press run as described above the user presses a visual assembly button and continues to assembly edit format review visualize etc. the document. Next each page of the document stack is sequentially scanned and stored digitally internal to the copier . A visual representation of the document stack is then displayed on a GUI in the display of the copier . Preferably all of the available publishing options explained above i.e. simplex N up staple bind hole punching etc. as well as typical copier controls i.e. lighter dark contrast sharpness background adjustment color saturation hue shift etc. are displayed in the GUI.

Next the user forwards the job to their client workstation by sending the stored digital page representations and current formatting adjustments in a format the client can display using the copier s visualization application . Next the user continues to adjust format and potentially merge additional source material into the job on the client workstation . Finally when the user is satisfied the can select print from the client workstation for the job to be sent to the printer and the workflow ends.

In some other embodiments of the invention the user can start from a virtual press run visualization session on their client workstation and finished on a peripheral device. According to these embodiments different documents are collected and formatted as desired on a client workstation wherein the documents include hardcopy pages to be included in the final formatted document set. However according to these embodiments rather than requiring these pages be scanned and sent back to the client workstation the final assembly can be done at the copier. illustrates an illustrative workflow for implementing a transferable print job visualization session beginning on a client workstation and finished on a peripheral device according to some embodiments of the invention.

The workflow of begins with a user creating or accessing a file or group of files and editing and visualizing the files using a virtual press run application . Next the user sends formatted jobs to the peripheral device s hold queue . The user then manually places additional documents into the feeder of the peripheral device . Next the user selects a visual assembly thereby causing the peripheral device to scan the additional documents . The scanned pages are displayed in the display of the peripheral device . Next the user opens the hold queue document and the two documents are merged in the same way that separate documents are merged on the client workstation. The user selects adjusts controls to get the document to the desired appearance . Finally a user then presses print and the merged document digital scans and original hold queue pages are processed according to user preference printed optionally bound optionally punched and delivered to the user .

In the following example and explanation an applet resides in Microsoft Office applications. The applet directs users to a wizard workflow which guides them through choices or evokes virtual printer applications. The applet is referred to as the Fiery MS Office Applet or a Rave Applet and is designed to run on a Fiery product host application manufactured by Electronics for Imaging Inc. Foster City Calif. It will be readily apparent to those with ordinary skill in the art having the benefit of this disclosure that one or more similar applet could be used on a wide variety of host applications in a similar fashion yielding similar results.

The first time the Fiery MS Office Applet is launched it checks to see if the applet is a registered Fiery product. If it is not the applet invokes an Automatic Fiery Discover subroutine and presents the user with a list of Fiery products to choose from. When the user chooses a Fiery product the user is asked to fill out user information. The user information is transmitted to an EFI registration server along with information about which Fiery product was selected.

Once the Fiery is registered the Fiery MS Office Applet identifies consumable content and finishing capabilities through bi directional communication as explained above. The user subsequently can rediscover and change his Fiery product selection. In these cases the user is asked to register again the first time after he connects to another Fiery product. If no Fiery product is found on the system the user is informed that the applet is to run in demo mode. A dummy Fiery product is used that includes a To Be Determined tab paper options and finishing features. When the user submits their choices they are prompted to contact his copier sales representative to purchase a Fiery driven MFP solution product. The software is also capable of installing customized messages.

A registered Rave applet checks the EFI upgrade server every time it is launched and checks for upgrades. If an upgrade is available the server prompts the user to download and install the upgrade. After the upgrade is installed the applet re launches with the print job data previously selected.

In some embodiments or the invention the Rave applets are launched from a Fiery Button or a Fiery Tab within Microsoft Office Products as explained above in . Such third party plug ins are supported in Microsoft Word Excel PowerPoint Publish and Outlook. The users may also right click a document file and choose Fiery Publish to open the document for visualizing formatting and printing as explained above in .

In some embodiments the Rave Applet is configured to accommodate various preferences setting. Selected settings include but are not limited to 

In some embodiments the Applet is further configured to provide application personalization including Desktop texture personalized desk photos and Custom Icon display among other choices. In the case of the custom icon display the user chooses what Icons to display and what kind of Icon i.e. button icons or objects like a stapler a hole punch etc.

In some embodiments the Fiery publishing applet is further configured to show Fiery status graphically. For example when the user rolls over the graphic with a mouse the applet shows a specific status message. The applet is also configured to install a desktop tray icon that will pop up a message if the job fails to print along with the reason i.e. out of paper out of toner etc.

In some embodiments of the invention the Rave applets only prepare 1 time print layout configurations and do not modify the source files. In some other embodiments the Photo Enhancement applet which when invoked directly from the Microsoft Office push the corrected photos back into the source file.

In some embodiments of the invention the Fiery Publish applet can save templates but it does not permanently save a print session. If the user needs to reprint a job they must recreate it possibly using a template to save effort. In some other embodiments the Applet automatically saves the templates of the last N print jobs identified by the document name. This is the scenario where a user can run back and quickly print the last job if a few more copies are needed.

In some embodiments of the invention the Office Personalization Applet can be used as a separate application or as a subset to the Fiery Publish and Go To Meeting Applets. The Office Personalization Applet allows users to create simple jobs with variable data. As a standalone application the user is prompted for the type of file to be output business cards photos tent cards badges etc. and then ask for the source file Excel Word or Outlook.

The Office Personalization Applet uses Avery Labels as output templates. Once the layout options and the source content have been chosen the user is guided to link the source file information to the layout with a simple interactive workflow. The Office Personalization Applet also offers the ability to create covers and tabs with variable data as part of either the standalone application or as a subset of the other applications. It is desirable to offer a capability that allows the use of simple graphics and images as variable data.

In some embodiments of the invention the user sees a business card layout and using the Office Personalization Applet workflow has the option to see one business card at a time or the entire sheet. The user is then prompted to assign location of the variable data on the business cards using the workflow. This Applet uses Avery Label templates media for the creation of these prints.

Some embodiments of the invention comprise a Go To Meeting workflow. According to these embodiments the user can create ID Badges Tent Cards etc. to be included in meeting printouts. In some embodiments the Applet uses Avery Label templates media for the creation of these prints.

Some embodiments of the invention comprise a post card template. Much like the Business card capability the user can work on individual Post Cards or a sheet of Post Cards to assign personalized data. This Applet uses Avery Label templates media for the creation of these prints.

In some embodiments of the invention users can assign variable data to document covers and the fronts of tabs as a standalone application or as a subset of the Fiery Publish and Go To Meeting Applets.

In some embodiments of the invention various mail templates are merged with Microsoft Office content to create mail products. The following are examples of this aspect of the invention 

In some embodiments advantages of Microsoft PowerPoint are optimized by identifying slide backgrounds as Masters and slide foregrounds as Content. Offer personalization of PowerPoint meeting notes. In the preferred embodiment this is configuration choice and is handled automatically by caching reoccurring images and reusing the cached image when applicable.

Some embodiments of the invention ensure that corporate branding colors are matched as closely as possible using a color space transform as explained above. These embodiments are particularly useful when using Microsoft Office applications.

In some embodiments of the invention a Color Branding Template Wizard is offered to a user. Ideally the Color Branding Template Wizard is an interactive tool that allows users to select colors in the thumbnails of a document with an eyedropper tool and the assign spot and or Pantone colors for output. Once colors have been identified and assigned Fiery interprets and outputs the appropriate spot and or Pantone color. The user is given the option to swap the color selected throughout the entire document or only on that specific page.

In other embodiments of the invention a similar approach is used to create a standard template to be used in the Microsoft Office applications by using Encapsulated PostScript as a way to lock the Spot and or Pantone color in the EPS files that are then printed properly through the Fiery.

In some embodiments the Fiery Publish Applet is a 3D layout tool that permits the user to specify the layout of documents. In some embodiments the user uses thumbnails of the actual pages to create a what you see is what you get picture of the actual output.

In some embodiments of the invention tab and blank page insertion is done through a drop and drag mechanism. According to these embodiments there is an icon on the desktop in the shape of a tab page. Rolling over the icon results in a brief pop up of the available tab types. The user can grab one with the mouse and drag it to the layout page where it is inserted.

The software automatically determines the number of tabs that are in use in the document and create a tab of the appropriate size and location on the tab sheet. One of the options of the tab icon is a blank page that does not have a tab. There is also a choice to automatically place tabs based on MS Word chapters and or sections.

In some embodiments page re ordering is accomplished by dragging pages within the page thumbnail portion of the display. Multiple adjacent pages may be selected using the standard Windows shift click and control click mechanism. The selected pages can then be shifted en masse.

Pages can also be deleted from the print job by selecting and then pressing the delete key. The pages are deleted only from the final print job.

In some embodiments document binding options are constrained by the Fiery that is currently selected. These are selectable from an icon that is displayed on the desktop. The user is shown graphic representations of the possible binding functions spiral perfect etc. and then drags the graphic on top of the booklet to see how it would look with that type of binding.

If stapling is available based on the currently selected Fiery a stapler icon is placed on the 3D desktop. Rolling over the stapler displays a brief pop up of the stapling options available to the user. Clicking on the option results in a re painting of the display to show how the document looks with the option.

If selecting stapling as an option invalidates a previously selected finishing option then the previously selected option is removed from the display. If a conflict happens the user is prompted with a message asking permission to change to new option and removing existing option.

If punching is available based on the currently selected Fiery a hole punch icon is placed on the 3D desktop. Rolling over the punch displays a brief pop up of the punching options available to the user. Clicking on the option results in a re painting of the display to show how the document looks with the option.

If selecting punch style as an option invalidates a previously selected finishing option then the previously selected option is removed from the display. If a conflict happens the user will be prompted with a message asking permission to change to new option and removing existing option.

In some embodiments covers can be chosen from several sources including PDF files and from MS Office applications. The user has the option to store covers in a Covers folder from any of the MS Office applications. These covers are stored as PDF s created by the Microsoft PDF plugin.

In some embodiments the print jobs are submitted through Harmony calls to the Fiery Print Queue. If there is user authentication enabled on the Fiery this authentication must be honored. If the user does not have permission to print to the Fiery a message is presented to the user.

In some embodiments of the invention a Go To Meeting Applet is used. The Go To Meeting Applet is an interactive Wizard utility that guides users through the kitting of meeting documents into a complete document that is ripped to one document and can be printed as one document. This Wizard is application dependant and assumes default print out from the MS Application that it is launched from. For example PowerPoint users can choose the type of PowerPoint output notes handouts etc. within the Wizard. In some embodiments Go To Meeting applet requirements include 

In some embodiments the applet uses sophisticated algorithms to adjust photos automatically to achieve optimum results for users without expert photo enhancement skills. Automatic Photo Enhancement Wizard can be used as a standalone wizard or as a toolset available in the Fiery Publish Applet. Within the Fiery Publish Applet the Photo Enhancement Applet allows the user to adjust single images one at a time all of the images in the booklet at once or a specific set of images chosen by the user.

The Applet can also be invoked independently to automatically correct all the images within a selected document. In this instance the corrected images are re inserted into the source document. This saves the user from having to re work the images each time they are printed.

According to these embodiments the final workflow scenario that is supported appears to the user when a document is opened in the Fiery Publish or Go to Meeting Applet. Prior to opening the document in the layout editor the user can correct the images in the document. In this case the corrected images are re inserted into the source document prior to conversion to PDF.

In some embodiments a Photo Enhancement Wizard automatically adjusts most common image file formats including raw image files TIFF JPG BMP and PNG with the following capabilities 

In some embodiments users can make manual adjustment to single images all of the images or a select set of images with the following tools 

In some embodiments of the invention a set of tools are offered to users of a publishing system that achieve environmentally friendly printing. The tools automate the process of printing documents and reduce the amount of paper used in an organization. Some embodiments of the invention involve tools for implementing an enterprise wide green printing solution for reducing paper use and for reducing the cost of printing documents.

In the presently preferred embodiments of the invention the environmentally friendly printing tools comprise processing modules for automatically creating a booklet from printable content. These modules include modules for automatically imposing content into a specific order to accomplish booklet printing modules for gathering printer capabilities modules for merging printer capabilities with content modules for using merged content to offer users a more robust and accurate print preview of the booklet. Preferably the booklet printing is performed on a printer having a finisher that automatically folds collated print jobs into a booklet. In some embodiments a stack of collated paper is printed according to a booklet imposition but requires the user to fold the booklet themselves. In preferred embodiments of the invention the processing modules support mixed page size and mixed stock.

For example the publishing module contained in the exemplary network architecture of can include the environmentally friendly publishing tools. Likewise the exemplary workflow of can include selecting environmentally friendly print options at step .

In some embodiments of the invention the environmentally friendly print job options are accessible by selecting an environmentally friendly print option in a host application s toolbar ribbon. In some embodiments of the invention the environmentally friendly print job options are accessible by choosing to open a file in a dedicated publishing application by clicking a preview button in a host application s toolbar ribbon. According to these embodiments the host application is the primary application for creating a document presentation picture or other printable file. Examples of host applications include word processing applications slideshow creation applications image and photo creation and editing applications and PDF viewer applications. In some embodiments of the invention the tools for environmentally conscious printing are available to external applications such as web browsers.

In some other embodiments a user directly pulls one or more files into a dedicated publishing application wherein the publishing application offers the user with multiple environmentally friendly file merging and print options.

According to the host application is a slideshow creation application. The host application includes a slideshow creator menu interface including a gateway to an interface for the publishing module. As shown the gateway is a menu button. By pressing the menu button a user initiates the publishing applet and exports the slideshow content from the host application to the applet interface. The applet also imports editing and viewing protocols as well as printing capabilities. Once the various files and data are imported the publishing applet applies one or more workflow to edit reformat and preview the content. After the user is satisfied with the reformatting the content can be printed.

Also shown in the menu interface also includes a Green Books printing tool that automatically formats the current open slideshow into an imposition for environmentally friendly cost conscious booklet form printing. The Green Books printing tool provide the user with a quick user friendly method of taking their current open document and automatically producing a booklet that print either as a full size green book 2 letter A4 pages per side printed 2 sided on Tabloid A3 paper half size green book 2 letter A4 pages per side reduced to print 2 sided on letter A4 paper or Mini green book which will print the first and last pages as 2 pages per sheet on a letter A4 page and the rest of the pages 4 pages per sheet on letter A4 paper. These methods reduce paper usage by 50 75 and 85 respectively.

In some embodiments of the invention detailed reports and print status feedback is delivered to users in order to quantify environmental impact reduction or lack thereof. For example a host application with a toolbar ribbon for printing Green Books directly from the host application includes an informational frame for reporting the environmental impact of choosing the Green Book option. illustrates a host application toolbar ribbon offering a user environmentally friendly publishing tools and an informational frame for reporting the environmental impact of choosing the Green Book option according to some embodiments of the invention.

The workflow begins with a user initiating an environmentally friendly publishing session via a dedicated publishing application. illustrates a graphical user interface GUI of a dedicated publishing application for importing files choosing editing options viewing a virtual press run in real time as options are chosen and printing environmentally friendly cost conscious booklet form print jobs. Referring again to the workflow continues with a user gathering content by importing content into the publishing application.

The workflow continues as the publishing application gathers printing protocols at step . In some embodiments of the invention the printing protocols are communicated as a PostScript file.

After the various information is gathered at steps and the workflow continues by merging the gathered content and the printer capabilities at step . Next the publishing application presents users with tools for selecting environmentally friendly printing options . Once the user selects the environmentally friendly printing options the method automatically creates a printing imposition .

The publishing application presents users with tools for previewing and editing the print job according to the environmentally friendly printing options and the automatically created imposition .

At step a print job is initiated to print an environmentally friendly booklet according to the imposition. Printing includes the printer s finisher collating the print job according to the imposition and folding the collated pages into a booklet form . Optionally the booklet is bound. The printing steps occur such that the images are printed precisely how they appeared as previewed in step within the publishing application graphical user interface.

The workflow continues when the host application receives a printing instruction from the user with an environmentally friendly booklet print option indicated. Next the host application calls a publishing module at step . The publishing module gathers printer capabilities from networked printers and merges the content with the printer capabilities . Using the merged information the publishing module automatically creates a print imposition based on the selected environmentally friendly print option and shares the imposition with the host application .

At step the host application initiates a print job to print an environmentally friendly booklet according to the imposition. Printing includes the printer s finisher collating the print job according to the imposition and folding the collated pages into a booklet form . Optionally the booklet is bound.

As explained above in some embodiments of the invention the Green Books printing tool automatically formats a job in a host application and prints a booklet form of the print job while in some other embodiments of the invention a dedicated publishing application is provided for importing files choosing editing options viewing a virtual press run in real time as options are chosen and printing environmentally friendly cost conscious booklet form print jobs.

Upon printing Sheet will be printed first and placed on the bottom of a stack. Sheet is then printed and placed on top of sheet . Finally Sheet is printed and placed on top of the stack. The printer s finisher will then align the sheets and fold stack along the x axis thereby creating a booklet.

In the presently preferred embodiments of the invention as soon as a user chooses a Green Book option the graphical user interface GUI of a host publishing application displays a representation of the final booklet.

The graphical user interface GUI of a host publishing application includes tools for navigating the representation of a Green book . In some embodiments of the invention the tools include an arrow for flipping the pages of the Green Book . In the presently preferred embodiments the tools cause the pages to flip in an animation that simulates the pages of a booklet actually being flipped open. illustrates a representation of the second and third pages of the Green Book after the cover page of a Green Book is flipped open. H illustrates the ninth and tenth page of the Green Book and illustrates the back cover of the Green Book which corresponds to the bottom half of the back side of the first sheet of the imposition shown in .

A particularly environmentally friendly and cost conscious printing solution is the Mini Green Book booklet form. illustrates a representation of an exemplary slideshow file for importation into the host publishing application. The slideshow consists of fourteen portrait oriented slideshow slides. When these slides are imported into the host publishing application and a user chooses the Mini Green Book booklet form the host publishing application imposes the imported slides into a template. illustrates an imposition template for printing portrait oriented mini green book booklets according to some embodiments of the invention. The imposition template for printing portrait oriented mini green book booklets comprises landscape oriented sheets separated by a y axis and an x axis thereby forming four quadrants on each side of each sheet.

In the presently preferred embodiments of the invention the first and the last slide of the imported slides are imposed side by side on a landscape oriented sheet separated by a y axis. The first and last slides are not imposed into quadrants like the remaining slides so that the title page and last page of the booklet is given more prominence.

The remaining slides are imposed into quadrants on the landscape oriented sheet separated by the y axis and the x axis on both the front and back of the remaining sheets. Upon printing Sheet will be printed first and placed on the bottom of a stack. Sheet is then printed and placed on top of sheet . The printer s finisher will then align the sheets and fold stack along the y axis thereby creating a booklet. According to these embodiments the fourteen page slideshow of is imposed onto a two sheet template that when printed only requires two sheets of paper as opposed to fourteen. Accordingly the mini Green Book imposition technique accomplishes around 85 paper reduction.

As explained above the graphical user interface GUI of a host publishing application includes tools for navigating the representation of a Green book . In some embodiments of the invention the tools include an arrow for flipping the pages of the Green Book . In the presently preferred embodiments the tools cause the pages to flip in an animation that simulates the pages of a booklet actually being flipped open.

As will be understood by those familiar with the art the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the members features attributes and other aspects are not mandatory or significant and the mechanisms that implement the invention or its features may have different names divisions and or formats. Accordingly the disclosure of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following Claims.

