---

title: Methods and apparatus for an improved motor control center
abstract: Methods, apparatus, and systems are provided for operating a motor control center. The invention includes determining a hardware configuration of functional modules within a motor control center; downloading the hardware configuration to a programmable logic controller; configuring a program to run on the programmable logic controller based on the hardware configuration; and executing the program. Numerous additional aspects are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08670859&OS=08670859&RS=08670859
owner: Siemens Industry, Inc.
number: 08670859
owner_city: Alpharetta
owner_country: US
publication_date: 20100708
---
The present application claims priority to U.S. Provisional Patent Application No. 61 224 093 entitled Siemens Smart Motor Control Center PLC Unit filed Jul. 9 2009 which is herein incorporated by reference in its entirety. All literature and similar materials cited or referenced in the priority application including but not limited to patents patent applications articles books treatises and internet web pages regardless of the format of such literature and similar materials are expressly incorporated by reference in their entirety for any purpose.

The present invention generally relates to motor control centers and more particularly to using programmable logic controllers to control and monitor motor control center components.

Motor Control Centers MCCs are used to provide modular centralized control over large industrial motors such as those used in manufacturing robots and heavy machinery. MCCs typically include various different types of functional units or modules such as motor overload sensors soft starters variable frequency drives etc. The functional modules are housed in a centralized enclosure and are coupled to corresponding motors. Such MCCs and their component modules are designed to be very reliable very fast and as inexpensive as possible. Particularly because of the high power switching involved MCCs must be reliable in order to be safe. Further MCCs are typically used in real time applications and thus MCCs must have very fast and consistent response times. Conventionally in order to meet these requirements MCCs have been kept very simple and the processing capabilities have been restricted to basic functionality than can be implemented with relatively simple logic and deterministic response times. However there is a need for more sophisticated monitoring and control over motors and the various types of functional units used within MCCs.

The embodiments of the present invention generally relate to methods and apparatus for operating MCCs and more particularly to operation of controllers for monitoring and controlling MCCs.

In some embodiments the present invention provides a method of operating a motor control center. The method includes determining a hardware configuration downloading the hardware configuration to a programmable logic controller configuring a program to run on the programmable logic controller based on the hardware configuration and executing the program.

In some other embodiments the present invention provides a motor control center system. The motor control center system includes a frame adapted to provide a plurality of functional module slots a busbar coupled to the frame and the functional module slots a network coupled to the frame and the functional module slots a programmable logic controller module adapted to couple to a functional module slot and a plurality of functional modules adapted to couple to functional modules slots. The programmable logic controller module includes a programmable logic controller adapted to receive a hardware configuration download the hardware configuration into a memory of the programmable logic controller configure a program to run on the programmable logic controller based on the hardware configuration and execute the program.

In still yet other embodiments the present invention provides a programmable logic controller module for a motor control center. The programmable logic controller module includes a programmable logic controller adapted to receive a hardware configuration download the hardware configuration into a memory of the programmable logic controller configure a program to run on the programmable logic controller based on the hardware configuration and execute the program.

These and other features and aspects of the present invention will become more fully apparent from the following detailed description of exemplary embodiments the appended claims and the accompanying drawings.

For the purpose of interpreting this specification whenever appropriate terms used in the singular will also include the plural and vice versa. The use of or is intended to mean and or unless stated otherwise. The use of a herein is intended to mean one or more unless stated otherwise or where the use of one or more is clearly inappropriate. The use of comprise comprises comprising include includes and including are interchangeable and not intended to be limiting. Furthermore where the description of one or more embodiments uses the term comprising those of ordinary skill in the art would understand that in some specific instances the embodiment or embodiments can be alternatively described using the language consisting essentially of and or consisting of. 

While the present teachings are described in conjunction with various embodiments it is not intended that the present teachings be limited to such embodiments. On the contrary the present teachings encompass various alternatives modifications and equivalents as will be appreciated by those of ordinary skill in the art.

The present invention provides an improved method of operating an MCC. According to embodiments of the present invention a programmable logic controller PLC is provided that is adapted to detect and react to the presence or absence of functional modules and still continue to operate the MCC even if one or more functional modules are missing mis configured or inoperative. Further the PLC executes a program that is adapted to dynamically configure the MCC to use the detected functional modules. The program is able to draw upon a library of predefined data structures that each correspond to a different functional module and standardize communication with and control of the functional modules. Thus third party interface software can access and control the functional modules in a manner similar to the way an application program may access a lower level program via a software application programming interface API . Unlike such conventional software systems however the present invention is adapted to facilitate access and control the functional module hardware in a real time environment within predefined timeframes.

Turning to an example motor control center is depicted. The example MCC includes a frame e.g. a vertical structure for mounting components that can be for example wall ceiling floor or rack mounted. The frame houses three phase busbars not shown that may span the length of the frame and facilitate power distribution. In some embodiments the busbars may additionally span the MCC horizontally in for example a top portion of the MCC while a bottom portion of the MCC may include an access area for wiring installation. In some embodiments this arrangement may be reversed and or both the horizontal bus bars and the access area may be disposed adjacent each other at either end of the MCC .

Functional module slots only one labeled with a reference numeral are disposed along the length of the frame . In some embodiments the functional module slots may be arranged in multiple vertical columns e.g. two columns are shown in the example of . The slots are adapted to receive functional modules also known as configurable units or buckets . The functional modules only one labeled with a reference numeral in may include various different types. For example the functional modules may include motor overload sensors soft starter circuits variable frequency drivers low voltage breakers power monitoring circuits etc. Examples of such functional modules include Model SIMOCODE a motor overload sensor Model MM440 a variable frequency driver Model 3RW44 a soft starter circuit Model 3WL a low voltage circuit breaker and Models PAC3200 and 9300 power monitoring devices each of which is manufactured by and commercially available from Siemens Energy Automation Inc. headquartered in Alpharetta Ga. In some embodiments the slots and the corresponding functional modules may have standardized dimensions e.g. 12 or 18 inch height and form factors to facilitate the modularity of the hardware. In other words the MCC may be adapted to allow any of the functional modules to be inserted onto any of the slots .

By inserting a functional module into a slot a connection between the MCC and the functional module is established. This may include both a connection to the busbar as well as to a network e.g. a data network that couples all of the slots together to facilitate communication with installed functional modules . Thus the functional modules may include communications facilities e.g. network communications ports serial ports Ethernet ports USB ports etc. . The network may be disposed within one or more wire ways that span the length of the frame . In some embodiments the wire ways may be disposed along the sides and or in the middle of the MCC . In addition the wire ways may also contain wiring from the functional modules to motors in the field.

Looking at both and now the MCC also includes a PLC module that can be inserted into a slot . Note that the PLC module depicted in is enlarged to show the details of the PLC module . In some embodiments the PLC module maybe inserted into any slot and in others a special slot maybe provided for the PLC module . The PLC module may include several components. For example the PLC module may include terminals for coupling to the network as well as to an external network not shown . In some embodiments the external network may be an Ethernet network or other type of network. The terminals may also include power terminals for coupling the PLC module to the motors. Power terminals may include short circuit protection fuses . A power supply for the PLC itself may also be included. The PLC may be for example a Model S7 315 2DP PN manufactured by and commercially available from Siemens Energy Automation Inc. The PLC includes a controller and internal memory for storing and executing a PLC program which will be described in more detail below.

In some embodiments the functional modules may be inserted into any available slot and the MCC may address the functional modules using a logical address and not a physical address. The use of logical addressing facilitates automated configuration of the functional modules . Thus in such embodiments a hardware configuration definition need not specify a physical location of the functional modules .

In operation the functional modules are adapted to be inserted and removed from the slots without requiring shutting down power to the motors connected to the MCC . Control of the PLC may be accomplished via a human machine interface HMI see that is coupled to the PLC via the external network. As will be explained in more detail below the PLC is adapted to detect and gather data from the functional modules via the network . The PLC is further designed to receive control information from the HMI and use the control information to operate and or monitor the functional modules .

Turning now to an example system architecture for an MCC is depicted. In some embodiments the system may be thought of as a three layer stack with a hardware layer on the bottom a PLC program layer above the hardware layer and a HMI program layer on top of the PLC program layer . In the example system shown each layer provides an abstraction of the layer below it to standardize and simplify control and monitoring of the motors coupled to the MCC. Thus the PLC program layer provides a programmatic interface to the hardware layer and the HMI program layer provides a programmatic interface to the PLC program layer . In other words use of the MCC of the present invention is simplified because knowledge of the details of interacting with the layer below the accessed layer is not required. The accessed layer takes care of those details and simply returns a requested value or effects execution of a requested action.

As discussed with reference to the hardware includes an MCC which may include a number of various different types of functional modules operatively coupled to a PLC via a network . Also as mentioned above the MMC may be coupled to an HMI device e.g. a computer terminal a personal computer etc. via and external network . The external network is adapted to allow data transfer between the HMI device and the PLC . Note that in some embodiments a plurality of MMCs may be coupled to and controlled via one or more HMI devices even though only one MCC and one HMI device are shown in . Also note that in some embodiments the functional modules within the MCC may operate as network slaves to the PLC which may operate as a network master. In alternative embodiments the network may be implemented as a peer to peer network wherein each node functions as a peer on the network .

The PLC program layer includes a data management process that may be embodied as a program which executes on the PLC and is operative to store and retrieve data about the operation of the functional modules . The data management process communicates with the MCC and the functional modules via a logical network connection . In other words logical network connection logically couples the data management process running on the PLC and the functional modules via the physical network .

The data management process also stores the data about the operation of the functional modules in the PLC memory but organized in data structures that correspond to the functional modules . Examples of these data structures are illustrated below with respect to . The memory space of the PLC that stores the data structures for the data management process may be mapped to the functional modules so that known memory locations defined by the data structures reflect the status of monitored parameters of the functional modules in real time. Likewise control of the functional modules may be implemented by writing values to known memory locations defined by the data structures that correspond to input parameters to the functional modules .

The HMI program layer communicates values stored in the data structures via logical connections to a human operator and or to an interface program that executes on the HMI device . The data may be displayed on the HMI device by the interface program in a format easily comprehensible by an operator. In addition the interface program is adapted to receive input from an operator and to communicate the operator s selections to the PLC via the data management process . For example an operator can configure a functional module for a particular motor controlled and monitored by a soft start functional module by for example activating a graphical user interface control on the HMI device which is logically coupled to a configuration parameter within the data structure that corresponds to the soft start functional module .

Although the system allows for the abstraction and standardization of the functional modules the response time for both control and monitoring of the functional modules desirably remains deterministic and consistent. Thus the system of the present invention is implemented as a hard real time operating system RTOS which despite the abstraction layers can serve requests received via the interface program in nearly real time.

In operation the data management process retrieves data from the MCC via the network and saves the data in the PLC internal memory. The HMI interface program retrieves the data for the functional modules from the PLC via the external network and then displays this data on the HMI device e.g. on a video screen for the operator. In addition display and control of the data management process executing on the PLC is available. The present invention is adapted to facilitate both the HMI program layer and the PLC program layer to react to and display data from only the functional modules actually installed in the MCC . In other words a missing or inoperative functional module will not cause an irrecoverable error that requires an operator intervention to continue or restart operation. In addition the system architecture is adapted to function with a wide variety of HMI programs from various manufactures without requiring propriety knowledge of the MCC or the data management process .

Turning now to a flow chart depicting operation of a conventional PLC according to the prior art is depicted. Prior art MCCs require the creation of a PLC program specific to the MCC. In other words prior art PLCs need to be custom programmed with software that matches the particular functional modules used in the particular MCC. In Steps and the hardware configuration of the functional modules connected to the PLC and the programming in the PLC custom to that hardware configuration are downloaded into the PLC for the specific MCC. In Step operation of the MCC is started. If programming has been downloaded for functional modules that are not actually present in the hardware configuration e.g. a wrong configuration a software and or hardware fault is generated in the PLC in Step which may result in the PLC stopping operation entirely in a fault handling process which includes Steps and . If the hardware configuration contains a definition of functional modules that are not actually present on the network a software and or hardware fault is generated in Step that may result in the PLC stopping operation entirely in the fault handling process which includes Steps and .

The inability of prior art systems to identify what hardware is present and verify that the hardware is properly configured inhibits prior art systems from being able to use a single PLC program that adapts to the configured hardware. In fact due to the lack of a single adaptable PLC program operators are typically forced to create a template PLC program then modify the hardware configuration and the PLC programming to match the hardware configuration.

Turning to a method of operating an MCC according to the present invention is provided. The present invention provides a single standardized PLC program that is able to dynamically configure itself to match the hardware configuration of the MCC. In Step the hardware configuration for all attached functional modules is defined. In some embodiments the hardware configuration for all installed functional modules may be determined automatically based on for example functional module identifiers. In Step the hardware configuration is downloaded to the PLC. Notably the step of determining PLC programming custom to the hardware configuration Step in and downloading the programming is not required in the method of the present invention.

In Step upon booting or restarting operation of the MCC begins. The PLC program interrogates the hardware configuration then configures the resident PLC program for operation with the hardware that is defined in the configuration. The PLC program uses the hardware configuration to draw upon a library of data structures that include the details for each type of functional module encountered. The appropriate data structures and associated program is selected and the resident PLC program configures itself. Notably the present invention eliminates step and the fault handling process of the prior art. Since the PLC program of the present invention configures itself to match the configuration of the hardware the prior art software required to detect and process faults that result in requiring halting operation are eliminated. If a functional module that is configured but not actually found on the network is detected in Step an I O error is noted for indication to a monitoring system but the PLC program continues operation without faulting by looping back to Step .

The present invention thus provides several advantages to operators of MCCs. The PLC program no longer requires customized programming and thus operators have a standardized interface for all their applications. This means that the number of PLC programs that need to be maintained for backup security reasons is limited. Servicing is simplified because the hardware configuration can be quickly and automatically be created with the standard PLC program. This insures a short downtime even in the event of severe hardware failure requiring immediate replacement of multiple functional modules. The ability of the PLC to read its own hardware configuration during boot up power on facilitates these advantages and allows the elimination of software requirements such as non standard fault handling routines and customized programming for the PLC.

Turning to the details of operating the MCC in Step of are illustrated. In Step the PLC is started. In Step the PLC requests the list of functional modules installed in the MCC. This is part of the hardware configuration crated in Step . In Step the PLC loops through the list of functional modules. In Step for each module listed in the hardware configuration a data structure is selected from a library of data structures and a pointer table is created in the PLC memory defining the valid functional modules on the network to process and how to process them. The table is populated with for example an input output I O address of the functional module an I O size of the functional module and a device type identifier. This is repeated for each functional module until the end of the functional module list is reached at which point the PLC enters into run mode in Step . In run mode the PLC actively scans data from all of the attached functional modules. In Step the PLC loops through the list of functional modules. For each module found the PLC software manages the data transfer between the PLC and the functional module in Step . If a module is not available the PLC goes to the next module. If the end of list is reached the PLC loops back to the beginning of the list.

Turning to three example data structures for different types of functional modules are illustrated. These data structures are complex data types that are updated during each read of data from the corresponding functional module. In addition in some embodiments configuration data may be sent back to the functional module from the PLC to adjust the configuration without the use of external programming software. The example data structure of is for use with a motor overload functional module. This example data structure includes fields for storing metering data e.g. current voltage power etc. an event log diagnostic data and device configuration data. The example data structure of is for use with a soft starter functional module. This particular example data structure includes fields for storing metering data e.g. current voltage power etc. an event log diagnostic data device configuration data a trip log an error log and statistical data. The data structure of is for use with a variable frequency drive VFD functional module. This particular example data structure includes fields for storing metering data e.g. current voltage power etc. and device configuration data. Numerous other data structure formats may be used and many additional data structures for different types of functional modules may be employed.

The embodiments of the teachings have been described in an illustrative manner. It is to be understood that the terminology which has been used is intended to be in the nature of words of description rather than of limitation.

Many modifications and variations of the embodiments are possible in light of the above teachings. Therefore within the scope of the appended claims the embodiments can be practiced other than as specifically described.

