---

title: System and method of general service management
abstract: A system and method is provided for servicing service management requests via a general service management framework that supports a plurality of platforms (for example, Windows®, UNIX®, Linux, Solaris™, and/or other platforms), and that manages local and/or remote machine services at system and/or application level.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08904396&OS=08904396&RS=08904396
owner: CA, Inc.
number: 08904396
owner_city: New York
owner_country: US
publication_date: 20100727
---
The invention relates to the field of service management. More particularly the invention relates to providing a general service management framework for managing services.

Service management framework may refer to a collection of different system operating system and or application level components that work together to provide flexible scalable and distributed service management methods to customers. The customers may utilize interfaces which the framework exposes to develop deploy and manage services.

Some current commercial products provide service management frameworks that are platform dependent. Users developers have to learn complicated interfaces and protocols to manage services associated with these service management frameworks.

In some implementations the invention relates to a system and method for providing a general service management framework. The general service management framework may refer to a service management framework that supports a plurality of platforms for example Windows UNIX Linux Solaris and or other platforms and or manages local and remote machine services at system and or application level. In other words the general service management framework may provide platform independent access to a service and or access to the service irrespective of whether or not the service is a distributed service.

Generally operating system and or specific application level components associated with a running system i.e. a system which is alive and can provide service to a user may be defined as a service. For example on UNIX an ftp process may be defined as a service in an Oracle server an Oracle instance may be defined as a service and in a distributed system a component executing at a remote site may be defined as a service. One of ordinary skill in the art would recognize that other system application level components may be defined as services without departing from the spirit of the invention.

Reference will now be made in detail to various implementations of the invention as illustrated in the accompanying drawings. The same reference indicators will be used throughout the drawings and the following description to refer to the same or like items.

Service management library layer may receive the service management requests through the service library APIs . . . . Service management library layer may include one or more components that enable the various features and functions of various embodiments of the invention. Non limiting examples of the components may include one or more of a configure service module a start service module a query service module a locate service module and or other modules for performing the features and functions described herein. Configure service module may configure one or more services. Start service module may start stop or restart services. Query service module may get set service properties status from global service database . Locate service module may locate one or more services. In one implementation in a distributed system with at least two nodes service management library layer may communicate with a peer service management library layer of another node not shown .

Service management provider layer may be a wrapper of concrete service management infrastructure. The service management infrastructure for a Windows system may be Windows Service Control Manager SCM . The service management infrastructure for a Solaris system may be Service Management Facility SMF . In case a system is provided with its own local service management infrastructure service management requests associated with a local service may be delegated to the platform dependent service management infrastructure. As such for Windows and Solaris systems the service management providers may be wrappers of SCM local service management infrastructure for Windows and SMF local service management infrastructure for Solaris respectively. Internally the service management providers may know how to communicate with SCM and SMF. Linux systems however do not have a similar service management infrastructure. The framework may implement the service management infrastructure for Linux systems i.e. Linux service management . On Linux systems start stop and or other service methods may be implemented by shell scripts or by other programs. The start stop and or other service methods may be registered into the framework. Later if needed the framework may call the methods automatically. Thus the framework may manage service requests for platforms such as Linux systems that do not include service management infrastructure by storing service methods associated with the service requests.

According to some implementations applications may include a web application executing on a webserver not illustrated in for which a particular service is requested. The web application may communicate the request to service management library layer which may locate or otherwise query global service database to retrieve service configuration information for the requested service. By doing so the requested service may be located and or accessed according to the platform on which the requested service is executed and or based on whether the requested service is executed locally or globally.

According to various implementations service management library layer may use the service configuration information to access the requested service.

In one implementation the service configuration information may include an indication that the requested service executes on a Windows platform among other information such as a name of the requested service methods of the requested service etc. . According to this implementation service management library layer may use Windows SCM to process the request according to methods or other information included in the service configuration information for the requested service.

According to various implementations the requested service may be determined to execute remotely. According to this implementation service management library layer may cause the requested service to execute on a remote device. As would be appreciated by one having skill in the art the foregoing examples are illustrative only and not intended to be limiting. For example applications may include other applications executing at an application layer as would be appreciated and the requested service may execute on Solaris Linux or other platform and or may be executed remotely or locally.

In one implementation a user may register a service with the framework. A user may define a service and add it to the framework. A user may define a service by providing service configuration information associated with the service. Service configuration information may include among other things service name service location service methods service dependency service startup type and or other information. A user may provide any desired name as a service name. Service location may refer to the location of the service i.e. on local node or remote node for example. Service location may also refer to the platform on which the service is located executed i.e. Windows Solaris and or other types of platforms . Service methods may include start service stop service restart service query service property enumerate services and or other service methods. Service dependency may refer to dependencies between services. One service may require that another service be started if it depends on that service. Dependency may be defined when it is necessary to start several services together in sequence. For example a dependency may be defined between Oracle network listener Oracle instance and other Oracle services such as Oracle job scheduler service. If a user wants to start the job scheduler service then the listener instance and job scheduler services may be started in sequence. Based on the service dependency information provided by the user the framework may build a service dependency tree as depicted in for example . If a dependent service has further dependencies then the dependencies may be added recursively. Service startup type may refer to the type of service startup for example auto start manual start disable etc.

According to various implementations by receiving a registration or addition of services general service management framework provides an ability to easily add a service to be managed. Thus general service management framework is scalable to include various services executing on various platforms either remotely or locally. For example an administrator or other entity may add a service by providing service definitions described above. In doing so an application executing at an application layer such as applications illustrated in may request the added service using general service management framework . In this manner various services may be flexibly added under management irrespective of the platform or whether the service is executed remotely or locally.

Configure service module may include one or more sub modules for configuring one or more services as depicted in for example. Non limiting examples of sub modules may include one or more of create service sub module an add service sub module a remove service sub module a define service dependency sub module and or other sub modules. Create service sub module may create a user defined service based on the service configuration information provided by the user. Add service sub module may add a service record including service configuration information into global service database . Remove service sub module may remove a service record from global service database . Define service dependency sub module may analyze the service dependencies between existing services and user defined added services. Define service dependency sub module may build a service dependency tree in memory and serialize to global service database .

Start service module may include one or more sub modules for starting stopping restarting one or more services as depicted in for example. Non limiting examples of sub modules may include one or more of start service sub module a stop service sub module a restart service sub module and or other sub modules. Start service sub module may start a service. Stop service sub module may stop a service. Restart service sub module may restart a service.

Query service module may include one or more sub modules for getting setting one or more services properties status from global service database as depicted in for example. Non limiting examples of sub modules may include one or more of query status sub module a query properties sub module a set properties sub module enumerate services sub module and or other sub modules. Query status sub module may get the status of a specific service. The status may include open close auto start manual start and or other status. Query properties sub module may query the global service database for details regarding a service for example service configuration information i.e. name location dependency etc. . Set properties sub module may set properties for a service. Enumerate services sub module may enumerate a node s services and or a specific service s dependent services.

Each network node for example . . . may include a processor . . . respectively circuitry and or hardware operable to execute computer readable instructions. According to one aspect of the invention distributed system network nodes may include one or more tangible computer readable storage media configured to store one or more software modules wherein the software modules include computer readable instructions that when executed by the processor cause the processor to perform the functions described herein. According to one implementation the network nodes may comprise computer hardware programmed with a computer application having one or more software modules that enable various features and functions of the invention.

In one implementation network nodes may be any physical or virtual servers that are configured to host execute run one or more components of a distributed application for example application may be a distributed application . Network node may be a web server associated with the distributed application and network node may be a database server associated with the distributed application. The general service management framework implemented by network node may comprise a component of distributed application in application layer referred hereinafter as application component that may communicate with service management library layer and Windows SCM in the service management provider layer . The general service management framework implemented by network node may comprise a component of distributed application in application layer referred hereinafter as application component that may communicate with service management library layer and Solaris SMF in the service management provider layer .

System administrators or other users may interact with the distributed system network nodes in the distributed system via one or more client devices . . . . Client devices may each comprise a user interface graphical user interface GUI that may enable users to perform various operations that may facilitate interaction with the distributed system network nodes in the distributed system including for example defining and registering services associated with each network node defining service configuration information initiating service management requests and or performing other operations. Client devices . . . may include a processor not shown circuitry and or other hardware operable to execute computer readable instructions.

In one implementation users may define and register services associated with each network node . . . via a GUI of client device for example. A user may define a service by providing service configuration information associated with the service. Service configuration information may include among other things service name service location service methods service dependency service type and or other information. Each network node may receive the service configuration information associated with a service defined for the network node. For example if a user has defined a service for network node the service configuration information associated with the defined service is provided to configure service module of service management library layer associated with network node . The service configuration information associated with a service defined for network node may include any desired name as the service name network node i.e. local node and or with Windows platform as the service location start service stop service restart service and or other service methods as the service methods any dependencies for the defined service as the service dependency and auto start as the service startup type. Configure service module may create a user defined service associated with network node based on the service configuration information and may add insert a service record including the service configuration information into global service database . User defined services associated with other network nodes may be similarly defined and registered.

In one implementation application component may initiate a service management request. Service management library layer associated with network node may receive the service management request via a corresponding service API. Query service module may be called to query the global service database for service configuration information about a service associated with the service management request. Based on for example the service location information a determination may be made regarding whether the service is located locally i.e. at network node or remotely any other network node by locate service module for example. If the service is located locally the service management request may be serviced locally for example via the local service management infrastructure for network node which may be Windows SCM . If the service is located at a remote node for example network node service management library layer associated with network node may transfer the request to the service management library layer associated with network node and the request may be serviced by the remote service management infrastructure for network node which may be Solaris SMF.

To support a distributed system service management library layers associated with the network nodes may process remote node service management requests and may transfer the requests to the appropriate remote node as needed. There may be service configure start query stub codes in the distributed system.

It will be understood that while depicts application as a distributed application the invention is not so limited. The network nodes may each implement different applications not distributed applications that would send initiate service management requests to each other via service management library layers of the network nodes. Also application in application layer of network node may be a component of distributed application or a different distributed or non distributed application. The general service management framework implemented by network node may comprise application in application layer that may communicate with service management library layer and Linux service management in the service management provider layer .

In operation a service management request may be received at a general service management framework. In operation global service database may be queried by the framework to retrieve service configuration information for a service associated with the service management request. In operation a location and or a platform of the service associated with the service management request may be determined based on the retrieved service configuration information. In operation the service management request may be serviced based on the determined location and or platform.

In operation at least one network node may initiate a service management request for example a service start request. In one implementation the service associated with the service management request may be a service located locally at the network node that initiated the service management request or may be located remote from the network node that initiated the request in other words the service may be located at another node remote from the network node that initiated the request . In one implementation the general service management framework associated with the at least one network node may receive the initiated service management request. In one implementation an application component of application running on the at least one network node i.e. associated with application layer of the at least one network node may initiate the service management request. Service management library layer associated with the at least one network node may receive the service management request through corresponding service library APIs.

In operation the query status sub module may be called to get the status of the service associated with the service management request. In operation a determination may be made as to whether the service is in started state based on the obtained status information. In some implementations this determination may be made by locate service module . In response to a determination that the service is in started state no further processing may be performed in operation . In response to a determination that the service is not in started state the processing proceeds to operation .

In one implementation each service management request may include a tag that denotes whether the request has been located. The first time a specific service management request is initiated the tag may indicate not located . Thereafter any subsequent times the service management request is initiated the tag may indicate located and may be transferred to its destination directly.

In operation a determination may be made as to whether the initiated service management request is tagged located or not located by locate service module for example. The determination may be made by checking the tag associated with the service management request. In response to a determination that the service management request is tagged not located the query properties sub module may be called in operation to query the global service database for details regarding the service associated with the service management request for example service configuration information i.e. name location dependency type etc. .

Based on the retrieved service configuration information the location of the service associated with the service management request may be determined and the service management request may be tagged as located by locate service module for example.

In operation a determination may be made as to whether the service associated with the service management request is located locally or remotely by locate service module for example. This determination may be made based on the service location information retrieved from the global service database . In response to a determination that the service is located remotely the service management request may be transferred to a remote general service management framework. In one implementation the service management library layer associated with the at least one network node that initiated the request may transfer the service management request to the remote node in operation . In one implementation locate service module may transfer the service management request to the remote node. In response to a determination that the service is located locally service management request may be serviced locally for example via the local service management infrastructure of the network node that initiated the request .

In one implementation for a start service request the registered start method may be called in operation . The registered start method associated with the start service request may be determined from the service configuration information retrieved from the global service database . The local service management infrastructure may accordingly call the registered start method to start the service. In one implementation the service start may be supported by service start module . In one implementation service start module may call the registered start method to start the service.

In one implementation while the operations described in are performed based on a system application initiated service management request the service management request may be user initiated without departing from the spirit of the invention.

The operations performed by the general service management framework are transparent to the applications running on the network nodes. The applications need not know the location of a service. The general service management framework makes service management convenient for example services may be easily and dynamically added removed defined etc. A user or developer need not learn complicated interfaces or protocols to manage services. The general service management framework may provide simple services management interfaces which are platform independent and easy to learn to users.

In one implementation all services defined for the network nodes may be auto discovered provided that the services have been registered into the framework. The registration may be done by calling a specific service provider registration method. Each service provider may provide a service registration method. The service registration method may be called by passing the service s detailed parameters by a user for example. The service registration method may then add the service configuration information to the global service database.

Implementations of the invention may be made in hardware firmware software or various combinations thereof. The invention may also be implemented as computer readable instructions stored on a tangible computer readable storage medium which may be read and executed by one or more processors. A computer readable storage medium may include various mechanisms for storing information in a form readable by a computing device. For example a tangible computer readable storage medium may include optical storage media flash memory devices and or other storage mediums. Further firmware software routines or instructions may be described in the above disclosure in terms of specific exemplary aspects and implementations of the invention and performing certain actions. However it will be apparent that such descriptions are merely for convenience and that such actions may in fact result from computing devices processors controllers or other devices executing firmware software routines or instructions.

Other embodiments uses and advantages of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. The specification should be considered exemplary only and the scope of the invention is accordingly intended to be limited only by the following claims.

