---

title: Rendering selected and unselected lists of an item set
abstract: An item set may comprise items respectively having a selection status, such as a selected item and an unselected item. The item set may be presented as a selected list and an unselected list having various properties (e.g., mutual exclusivity, such that an item appears on at most one list; both lists sorted according to a sort order; and the unselected list having an unselected list size limit, with unselected items appearing in the unselected list based on a priority order). In order to render the selected list and the unselected list, an item list may be generated that attaches to respective items a selected marker (indicating that the item appears in the selected list) or a hidden marker (indicating that the item does not appear in either the selected list or the unselected list), where the item list is also sorted according to the sort order.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08676817&OS=08676817&RS=08676817
owner: Microsoft Corporation
number: 08676817
owner_city: Redmond
owner_country: US
publication_date: 20101215
---
Within the field of computing many scenarios involve a set of items that may be selected or unselected. For example a computer may present a file system with various files and folders that have been selected based on known or arbitrary criteria e.g. files and or folders matching the criteria of a filter or that have been selected by the user or a set of records in a database table matching a particular query. As a particular example a file system may present a set of objects e.g. files and folders having various properties including a name and a modification date. A computer may present to the user a set of recently modified objects and this list may be limited to a particular size e.g. no more than ten recently modified items displayed in the list . A user may select one or more recently modified items that are of interest and may ask the computer to select or pin the items with respect to a selected list e.g. a list of items with which the user is currently working . The computer may therefore present a first list a selected list comprising the selected items and a second list a unselected list comprising the unselected items. Moreover these lists may appear to be mutually exclusive. When the user selects an item in the unselected list the item appears in the selected list and disappears from the unselected list.

These selected items may be presented in various ways. For example the selected items may be presented as a separate list e.g. as a selected list comprising the items of the item set that are selected and an unselected list comprising the items of the item set that are unselected. These different lists may be presented consecutively and or concurrently and the items presented in a list may be sorted in various ways e.g. by alphabetic order by item type or by date of creation or modification . Additionally a user may be permitted to perform various operations on the items such as selecting or deselecting items.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The items in an item set comprising a mixed set of selected items and unselected items may be presented as two different lists that differentiate the selected and unselected items. However it may be difficult for a computer to achieve this presentation of items in a scalable and performant manner. For example the items of the item set may be separated into two data structures based on the selected or unselected status of each item and the computer may separately manage the data structures and render a list from each set. However it may be advantageous to keep the items together as a single set e.g. in order to promote operations on the items as a single set e.g. iterative operations applied to all items of the set to reduce the overhead of maintaining separate sets and to avoid issues such as failed synchronization e.g. an item improperly appearing in both lists . For example removing an item from the first data structure and adding it to the second data structure may involve a resorting of the second data structure to ensure that the added item appears in the correct location.

Additional details applicable to some scenarios may further complicate this presentation. For example the items of the item set have a sort order e.g. the order in which the items are to appear in a list such as ascending or descending alphabetic or numerical order item type order or date of creation . The items also have a priority order that indicates which items appear in the unselected list e.g. if the items in the unselected list were sorted according to a priority order a particular subset of items having the highest priority order are included in the unselected list while the remaining items do not appear in either the selected list or the unselected list. As one such scenario the items included in the unselected list may comprise recently modified objects e.g. folders and files in a file system. A user may be permitted to select or pin an item to a pinned items list and a pinned item may be removed from the list of recently modified objects. Additionally the recently modified objects list may be sorted according to the modification date in descending order and the list may be limited to a particular number of items such as the eight most recently edited objects. Both lists may also be visually sorted in a particular manner e.g. in ascending alphabetic order .

Presented herein are techniques for presenting the items of an item set in a selected list and an unselected list without generating separate data structures for the different items. In accordance with these techniques the selected and unselected items of the item set may be stored together as a single list with markers may be attached to respective items to differentiate the items for rendering. For example the item set may be examined to identify the selected items and may attach a selected marker thereto. The item set may also be examined to identify the unselected items may sort the items according to the priority order and to the items having a low priority order e.g. all but the three items in the item set having the highest priority if the unselected list is limited to three items may attach a hidden marker thereto. The items having been so marked may be stored together in an item list which may be sorted according to the sort order e.g. ascending alphabetic order . This item list may therefore be used to render both the selected list e.g. by iterating down the list and rendering in order the items having a selected marker and the unselected list e.g. by iterating down the list and rendering in order the items having neither a selected marker nor an unselected marker. Additionally items may be moved between the lists simply by updating the markers attached thereto e.g. moving an item from the unselected list to the selected list by attaching a selected marker .

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Within the field of computing many scenarios involve a presentation of an item set comprising a set of items where a subset of the items may be selected e.g. automatically or by a user . As a first example a computer may present a file system as a set of objects e.g. files and folders and a user may be permitted to select particular objects to which an operation within the file system is to be applied such as deleting or relocating the objects. As a second example a computer may present a database table comprising a set of records where a subset of records may match selected according to a query specifying one or more criteria. In such scenarios the computer may render e.g. visually represent the selection of items within the item set in various ways. As one such example the selected items and unselected items may be rendered as separate lists e.g. a selected list and an unselected list. These lists may be mutually exclusive e.g. an item appearing in the selected list does not appear in the unselected list and vice versa. Additionally the user may be permitted to move items e.g. when an item selects an item in the unselected list the item may be removed from the unselected list and added to the selected list and vice versa.

Additional properties of the selected list and the unselected list may further complicate such scenarios. As a first example each list may be presented with various properties such as sorting according to a sort order e.g. an ascending or descending alphabetic numeric date item type or creation date sort order . These properties may be maintained while performing various operations e.g. a sort order for each list is to be maintained upon moving an item from one list to the other list . As a second example the number of items appearing in the selected list and or the unselected list may be limited e.g. according to a list size limit in order to avoid rendering a list comprising many items. Additionally if the set of items that may appear in the list exceeds the list size limit a selection process may be applied to specify which items appear in the list according to a priority order. For example if ten items that qualify for a list having a list size limit of five items the ten items may be sorted according to a particular criterion e.g. size alphabetic order or modification date and the five items having the highest priority order may appear in the list while the other items do not appear in the list.

As further illustrated in the exemplary scenario of the selected list and the unselected list are mutually exclusive e.g. an item appearing in the selected list does not appear in the unselected list and vice versa. However this mutual exclusivity is somewhat complicated by the priority ordering of the unselected list . illustrates an exemplary scenario involving a selected list and an unselected list populated by items where the unselected list is limited by an unselected size limit of three items which are selected according to a priority order. When a user creates a selection of an item presented in the unselected list e.g. the Budget.docx item the item may be removed from the unselected list and added to the selected list . However the unselected list now includes fewer items than the unselected list size limit so an item having a high priority order among the items that are not already included in the selected list or the unselected list may be identified and added to the unselected list . Therefore and as illustrated in the resulting selected list includes the item targeted by the selection of the user and the unselected list is supplemented with an item having a high priority order among the remaining unselected items e.g. the Report.docx item having a most recent modification date among the items not yet included in either the selected list or the unselected list . Additionally while moving the item to the selected list and while adding an item to the unselected list the computer may preserve the sort order of each list. While illustrate a specialized scenario the techniques presented herein may be applied to many scenarios involving item sets items and lists having these properties.

However it may be difficult to configure a computer to render the selected list and the unselected list with these features in a scalable and performant manner. For example some implementations may create separate data structures for the selected items and the unselected items and may render the selected list and the unselected list by referring to the respective data structure but this implementation may present particular disadvantages. As a first example the storage of items in separate data structures adds overhead to the implementation. As a second example each data structure is separately sorted according to the sort order and when an item is inserted into a data structure the data structure may have to be resorted in order to maintain the sort order. As a third example the storage of items in separate data structures may preclude iterative processes to be applied to all items of the item set particularly where such iterative processes are to be performed according to the sort order. As a fourth example the storage of items in separate data structures may raise an undesirable possibility of desynchronization e.g. where a logical error causes an item to appear in both the selected list and the unselected list . These and other disadvantages may result from the storage of the items in separate data structures in order to achieve the differential rendering of the items in a selected list and an unselected list .

Presented herein are techniques for rendering the items of an item set as a selected list and an unselected list respecting various properties of the scenarios described herein e.g. the items appearing in at most one list both lists sorted according to a sort order and the unselected list having an unselected list size limit with the unselected items appearing in the unselected list according to a priority order without storing the items in separate data structures. In accordance with these techniques the items of the item set may be stored in a single data structure an item list that is sorted according to the sort order with various markers attached to the items to indicate inclusion in either the selected list or the unselected list . This result may be achieved in the following manner. To the items that are selected a selected marker may be attached. The unselected items may be sorted according to the priority order and for all but the unselected items having the highest priority e.g. those having the most recently modification dates and not exceeding the unselected list size limit a hidden marker may be attached indicating that although the item is unselected it does not appear in the unselected list . The selected items and the unselected items may then be merged and sorted according to the sort order e.g. in ascending alphabetic order in order to generate the item list. This item list may then be utilized to render the selected list and the unselected list in an efficient manner. For example the selected list may be rendered in accordance with the sort order by iterating through the item list and rendering in order the items having a selected marker. The unselected list may be rendered in accordance with the sort order by iterating through the item list and rendering in order the items having neither a selected marker nor a hidden marker.

As compared with other implementations the implementation illustrated by the exemplary scenario of may present some advantages. As a first example the items are stored together in the item list which may permit iterative operations to be applied to all items of the item set and which may preclude the possibility of a list desynchronization e.g. where an item appears in both lists. The use of one data structure may also promote the efficiency and scalability of the embodiment e.g. by avoiding the overhead involved in storing and managing multiple data structures. As a second example the selection status of an item may be reflected by altering the markers attached to the item without having to move the item from a first data structure to a second data structure. Additionally such modification does not disrupt the sort order embodied by the item list e.g. the item list does not have to be resorted upon moving an item from one list to the other list. These and other advantages may be achieved according to the techniques presented herein.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. Such computer readable media may include e.g. computer readable storage media involving a tangible device such as a memory semiconductor e.g. a semiconductor utilizing static random access memory SRAM dynamic random access memory DRAM and or synchronous dynamic random access memory SDRAM technologies a platter of a hard disk drive a flash memory device or a magnetic or optical disc such as a CD R DVD R or floppy disc encoding a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein. Such computer readable media may also include as a class of technologies that are distinct from computer readable storage media various types of communications media such as a signal that may be propagated through various physical phenomena e.g. an electromagnetic signal a sound wave signal or an optical signal and in various wired scenarios e.g. via an Ethernet or fiber optic cable and or wireless scenarios e.g. a wireless local area network WLAN such as WiFi a personal area network PAN such as Bluetooth or a cellular or radio network and which encodes a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein.

An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of rendering items of an item set as a selected list and an unselected list such as the exemplary method of . In another such embodiment the processor executable instructions may be configured to implement a system for rendering items of an item set as a selected list and an unselected list such as the exemplary system of . Some embodiments of this computer readable medium may comprise a nontransitory computer readable storage medium e.g. a hard disk drive an optical disc or a flash memory device that is configured to store processor executable instructions configured in this manner. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary system of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized. The techniques presented herein may be particularly useful for the scenario utilized in the figures e.g. presenting folders and files of a file system as a set of pinned items comprising a pinned items list and a set of unpinned items comprising an modified items list including the unpinned items sorted according to an item modification date sorting the items of both lists in ascending alphabetic order and including unselected items in the unselected list according to a priority order based on the item modification dates . However these techniques may be applicable to many other scenarios. As a first variation of this first aspect these techniques may be utilized to render many types of item sets comprising many types of items such as files and folders in a file system records in a database table rows columns or cells in a spreadsheet objects in an object system or email messages in a mailbox. As a second variation of this first aspect the selection of items in the item set may be performed automatically and or by a user and may represent many types of semantics e.g. items matching the criteria of a query or filter items involved in an operation such as a move or delete operation of a file system or items arbitrarily selected by a user . As a third variation of this first aspect the selected lists and unselected lists generated from the item list may be rendered in various ways. As a first such example a computer featuring an embodiment of these techniques may include a display component which may be configured to display the item set to a user and the embodiment may render the selected list and the unselected list on the display component. As a second such example the selected list and the unselected list may be stored on a storage device of the computer . As a third such example the selected list and the unselected list may be electronically transmitted to another computer and or user . Those of ordinary skill in the art may devise many scenarios wherein the techniques presented herein may be utilized.

A second aspect that may vary among embodiments of these techniques relates to the order of the items according to the sort order and or the priority order. As a first variation of this second aspect many criteria may be utilized as a sort order and or a priority order of the items such as an ascending or descending alphabetic sort order numeric sort order or date sort order based on one or more data and or metadata associated with the items an item type order e.g. sorting items of a first item type before items of a second item type an item owner order e.g. sorting items owned by a first owner before items owned by a second owner and an item location order e.g. sorting items located in a first location before items located in a second location . For example in the exemplary scenario of the item set may represent the objects of a file system including various files and folders. It may be advantageous to within the selected list and or the unselected list present items comprising folders before items comprising files while otherwise maintaining the alphabetic order of the items . Therefore an embodiment of these techniques may while sorting the items in the item set apply a first sort order based on the item type sorting folders before files and then apply a second sort order based on the ascending alphabetic order of the names of the items within each item type.

As a second of this second variation an embodiment may allow a user to select the sort order and or the priority order of the item list from a sort order set and or a priority order set. As a first such example a rendering of the selected list and or the unselected list may include a control such as a combo box including a sort order set. Upon receiving from the user a selected sort order the embodiment may sort the item list according to the selected sort order and re render the selected list and the unselected list . As a second such example a rendering of the unselected list may include a control including a priority order set. Upon receiving from the user a selected priority order the embodiment may re render the unselected list using the selected priority order. As a third such example the user may be permitted to specify an unselected list size limit and an embodiment may be configured to upon receiving from the user a selection of an unselected list size limit re render the unselected list using the unselected list size limit . Those of ordinary skill in the art may devise many ways of sorting and or prioritizing the items of the item list in accordance with the techniques presented herein.

A third aspect that may vary among embodiments of these techniques relates to the selection and deselection of items after generating the item list . In some scenarios the selected list and the unselected list may not permit changes to the selection statuses of the items . However in other scenarios after the items are presented to a user the user may select or deselect items and an embodiment of these techniques may have to adjust the item list the selected list and or the unselected list to reflect these changes. Moreover such adjustments may have to be performed in order to maintain the features of the rendering e.g. the mutual exclusivity of the selected list and the unselected list the sort order of the selected list and the unselected list and the restriction of the unselected list according to the unselected list size limit with unselected items included according to a priority order .

As a first variation of this third aspect respective unselected items of the unselected list may be rendered with an item selection indicator e.g. a control that a user may operate to indicate a selection of an unselected item . Upon receiving a selection of a first item in the unselected list an embodiment of these techniques may implement the selection by locating the item in the item list and attaching a selected marker to the first item . The embodiment may then re render the selected list and the unselected list e.g. by erasing a first rendering of the list s on a display component and displaying a second rendering thereof or by adjusting a previous rendering to indicate the change . Additionally if the size of the unselected list after altering the first item is now below the unselected list size limit an embodiment may be configured to replace the first item in the unselected list with a second item . For example the embodiment may among the items of the item set having a hidden marker e.g. the items that are unselected and also not yet included in the unselected list identify a second item having a high priority order and detach the hidden marker from the second item .

Conversely and as a second variation of this third aspect respective selected items of the selected list may be rendered with an item deselection indicator e.g. a control that a user may operate to indicate a deselection of a selected item . Upon receiving a deselection of a first item in the selected list an embodiment of these techniques may implement the deselection by locating the item in the item list and detaching the selected marker from the first item . The embodiment may then re render the selected list and the unselected list e.g. by erasing a first rendering of the list s on a display component and displaying a second rendering thereof or by adjusting a previous rendering to indicate the change . Additionally if the size of the unselected list after altering the first item exceeds the unselected list size limit an embodiment may be configured to remove an item from the unselected list . For example the embodiment may among the items of the item set having neither a selected marker nor a hidden marker e.g. the items that are unselected and included in the unselected list identify a second item having a low priority order and attach a hidden marker to the second item .

These and other variations may involve a comparison the priority order of various items or subsets thereof in the item list . However it may be inefficient for an embodiment of these techniques to perform this comparison in an ad hoc manner e.g. upon receiving each selection or deselection of items from a user . Accordingly and as a third variation of this third aspect an embodiment of these techniques may perform the priority order evaluation during the generation of the item set and may encode this information in the item set . For example an embodiment may while generating the item list identify a priority order of the items and attach a priority order marker to respective items based on the priority order e.g. an integer identifying the priority order of the item within the item set . The embodiment may then utilize these priority order markers while performing comparisons of the items of the item list .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

