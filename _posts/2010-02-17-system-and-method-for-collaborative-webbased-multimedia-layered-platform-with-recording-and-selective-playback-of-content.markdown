---

title: System and method for collaborative web-based multimedia layered platform with recording and selective playback of content
abstract: The present invention relates to a method and system for creating a collaborative file in a shared network including: accessing one or more user machines in a shared space, wherein the shared space is created by interaction of executable codes in a host and a user application and the shared space is described by a session attribute list; loading a media application with tools into one or more user machines; using a stage manager tool from the media application to stage and correlating media-layer events according to spatial, temporal and relational coordinate data in the user application, wherein the content composed of the media-layer events are described by at least a user, media-layer events, time and command; recording content associated with one or more of layers according to a user, media-layer events, time and command; and accessing said content based upon a user, media-layer events, time and command.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266214&OS=08266214&RS=08266214
owner: Simulat, Inc.
number: 08266214
owner_city: Berkeley
owner_country: US
publication_date: 20100217
---
This is a continuation in part U.S. patent application Ser. No. 11 657 787 of and claims the priority benefit under 35 U.S.C. 120 of U.S. Pat. No. 7 933 956 entitled A System and Method to Create a Collaborative Web based Multimedia Layered Platform filed Jan. 24 2007 U.S. patent application Ser. No. 12 319 807 entitled System and Method to Create a Collaborative Web based Multimedia Contextual Dialogue filed on Jan. 13 2009 now abandoned U.S. patent application Ser. No. 12 378 805 filed Feb. 20 2009 entitled System and Method to Create a Collaborative Web based Multimedia Contextual Document and additionally claims the benefit under 35 U.S.C. 119 e of U.S. Provisional Application No. 60 761 529 entitled A System and Method to Create a Collaborative Web Based Multimedia Layered Platform filed on Jan. 24 2006 each of the entire disclosures of which are hereby incorporated by reference herein.

This invention generally relates to the field of asynchronous and synchronous web document production methods and systems.

In the last few years there has been an explosion in new forms of web based communication within a shared space. The synchronous form is most commonly practiced as Online Chat. With synchronous communication like Online Chat for example text is exchanged in real time between participants. Although images can be provided to a limited extent links to images or other multimedia is more commonly used. Another common form of synchronous communication is with web conferencing services. These services provide a discrete state synchronicity such that only one image can be shared at one time. Typically once the session has ended the images shared are lost. Many of the current online collaboration systems are beginning to record the sessions. For example recording in collaborative environment is presently done as a complete video stream. However shortcoming with present collaborative systems is that when individuals are participants to group projects it is not possible to determine who contributes what content nor is it possible to search the content based on contributor or user event time or command that created the content.

The most common asynchronous forms of collaboration are forums blogs and WIKIs. In the asynchronous case visitors can upload text or images so that all subsequent visitors can browse and see the text or images. Blogs and Forums have an advantage over Chat in that conversations can be linked into threads . This allows the user to follow a set of contributions in a linear and or nested fashion. Lacking is the real time aspect as well as the ability to layer media. Currently even if you can upload an image or multimedia clip into a chat room or blog it is not known for visitors to alter manipulate or annotate over the original posting. What is common to these forms of shared communication is that they are linear. All information whether text or image is accessed in order. A comment in a blog about an image does not appear on top of the image but instead next to it as with threads . The same holds true for a chat box. Users must cut and paste to refer to a past event.

Lacking is a system that will allow both synchronous and asynchronous communication using discrete media layers such that information can be organized by time and space which in turn can allow for a variety of organizational metaphors.

It will be desirable that multiple users are able to interact with one another and perform a plurality of multimedia tasks in a virtual and synchronized shared environment or to be able to access and review the performed tasks from local or remote sources at will in any order. It will also be desirable to allow users to set control or restrict the viewing of media layers in the same shared environment through different filtering algorithms based upon user events time hereinafter UET and commands. It is also desirable that an original image can seem to be altered or manipulated by overlaying various media layers together.

The following terminologies used in the application are selectively defined by online dictionaries such as Wikipedia to help understanding 

Account Owner creator The person who owns creates or maintains or provided stewardship over a particular session and all options rights relevant to that session.

Annotation Extra information associated with a particular point in a document or other piece of information.

API An application programming interface API is the interface that a computer system or application provides in order to allow requests for service to be made of it by other computer programs and or to allow data to be exchanged between them.

Blog A blog is a website in which journal entries are posted on a regular basis and displayed in reverse chronological order. The term blog is a shortened form for web log. Authoring a blog maintaining a blog or adding an article to an existing blog is called blogging . Individual articles on a blog are called blog posts posts or entries . A person who posts these entries is called a blogger . A blog comprises hypertext images and links to other WebPages and to video audio and other files . Blogs use a conversational documentation style. Often blogs focus on a particular area of interest such as Washington D.C. s political goings on. Some blogs discuss personal experiences.

Collection One or more media layers that have an organizational structure. Typically this is stored as an XML file.

Converter Programs for converting audio files video animations or applets of varying degrees of interactivity and function presentations documents spreadsheets among other files in the original data format to another format that allows information to be accessible through a browser using a media application.

Common Web Browser A web browser is a software application technically a type of HTTP client that enables a user to display and interact with HTML documents hosted by web servers or held in a file system. Popular browsers available for personal computers include Microsoft Internet Explorer Mozilla Firefox Opera Netscape Apple Safar and Konqueror . A browser is the most commonly used kind of user agent. The largest networked collection of linked documents is known as the World Wide Web. It is assumed that all common web browser will have Macromedia Flash installed or will support the installation and proper execution of Flash applications.

Dynamic button A clickable link that can jump the user to a different page in the same book a different book generate a new email in the user s local email application or send the user to a web page in a new browser window.

Media layer media layer layer A media layer is defined as a container that supports the display and modification of media and plug ins. Media layers have meta information or attributes such as author time date created its parent media container a list of children media containers position within 3D space stacking order relative to the parent media layer size reference to media or a plug in that is assigned to the media layer etc

Media multi Multimedia is the use of several different media to convey information text audio graphics animation video and interactivity .

Medium defined as the singular of multimedia. For example text a media is a singular example of multimedia.

Network A computer network is two or more computers connected together using a telecommunication system for the purpose of conununicating and sharing resources. Examples include but are not limited to a WAN or LAN connection or an internet intranet or extranet connection.

Online Chat Online chat can refer to any kind of communication over the internet but is primarily meant to refer to direct 1 on 1 chat or chat rooms using tools such as instant messenger applications computer programs Internet Relay Chat talkers and possibly MUDs MUCKs MUSHes and MOOes.

Plug in A plug in is a computer program that can or must interact with another program to provide a certain usually very specific function. Typical examples are plug in to display specific graphic formats e.g. SVG if the browser doesn t support this format natively to play multimedia files to encrypt decrypt email e.g. PGP or to filter based upon UET and commands images in graphic programs. The main program a web browser or an email client for example provides a way for plug in to register themselves with the program and a protocol by which data is exchanged with plug in. Plug ins are slightly different from extensions which modify or add to existing functionality. The main difference is that plug in generally run within a sandbox rely on the main program s user interface and have a well defined boundary to their possible set of actions.

Room A Room is a common reference to a shared space . A room contains default tools rules and permissions that are set and controlled by the room administrator.

Space A shared virtual reference point where multiple users can interact in real time upon shared objects.

Space Creator The User creates an account to which a space is allocated where other individuals also using a browser can engage in the synchronized or unsynchronized viewing and annotating of images.

Stage A reference coordinate system that informs where media should be displayed. The most typical stage is a two dimensional Cartesian coordinate system where 0 0 is position in the upper right of the display area.

Sidebar panel a window within a browser such as Windows desktop Windows is a registered trademark of Microsoft Corporation . Sidebars often perform various tasks such as displaying the time and date and showing the CPU usage.

Threads Threads in a forum are either flat posts are listed in chronological order or threaded each post is made in reply to a parent post . Sometimes community members have a choice on how to display threads.

Web based shared space This describes a single point of reference for multiple users to access and add and modify information from a web browser for viewing by others via that same point of reference.

WIKI A website that allows the visitors themselves to easily add remove and otherwise edit and change available content and typically without the need for registration.

Whiteboard a drawing utility commonly supplied as part of a collaboration framework to allow distributed users to share a common drawing space.

The present invention relates to the field of collaborative computing and more particularly to a method and system for creating a collaborative file in a shared network including accessing one or more user machines in a shared space wherein the shared space is created by interaction of executable codes in a host and a user application and the shared space is described by a session attribute list loading a media application with tools into one or more user machines using a stage manager tool from the media application to stage and correlating one or more media layer events according to spatial temporal and relational coordinate data in the user application wherein the media layer events are described by at least a user a media layer event designation a time and command recording one or more of media layer events and the associated user a media layer event designation a time and command and accessing said one or more of media layer events based upon one or more of the associated user media layer event designation time and command.

A computer system for creating a collaborative file in a shared network including one or more user machines in a shared space wherein the shared space is created by interaction of executable codes in a host and a user application and the shared space is described by a session attribute list executable code for loading a media application with tools into one or more user machines executable code for using a stage manager tool from the media application to stage and correlating one or more media layer events according to spatial temporal and relational coordinate data in the user application wherein the one or more media layer events are described by at least a user media layer event designation time and command a recorder for storing one or more multi type media layers and the associated user media layer event designation time and command a playback device for accessing said media layer event based upon a user media layer event designation time and command and an output device for selective viewing of said media layer event based upon a user media layer event designation time and command.

The invention further relates to a method of filtering one or more multi layer events according to one of user media layer event designation time and command. In one embodiment filtering allows users within the shared space to filter user inputs such as one or more media layers user comments notes and drawings. In yet another embodiment filtering by a user would temporarily conceal from the display output all other media layer content except for the selected user or filtering of a selected user media layer event designation time and command.

The invention further relates to a method of searching one or more messages according to one of user media layer event designation time and command. In one embodiment searching allows users within the shared space to filter user inputs such as one or more media layers user comments notes and drawings.

The following description includes the best mode of carrying out the invention. The detailed description is made for the purpose of illustrating the general principles of the invention and should not be taken in a limiting sense. The scope of the invention is determined by reference to the claims. Each part is assigned even if structurally identical to another part a unique reference number wherever that part is shown in the drawing figures.

The present invention relates to the field of collaborative computing and more particularly to a system and method for providing a browser based program to create and configure a shared space whereby multiple users can access this shared space to perform tasks and interact such as input modify text and delete images drawings and other multimedia via media layers in a real time synchronous manner. As indicated above a shortcoming with the prior art collaborative systems is rectified by this invention wherein individuals who are participants to group projects can determine who contributes content and furthermore allows the content to be searched on the basis of user event time and command creating features of the content.

A shared space is defined as a virtual reference point whereas multiple users can interact in real time upon shared objects. It is a conceptual construct created by processing executable machine codes from a plurality of programs or plug ins typically using Flash Virtual Machine VM or Java VM. A session is defined as the state of all objects GUI tools and controls and media layers at any given time within the shared space. Each media layer can serve as a container for shapes and objects as well as other programs such as a text editor thumbnail viewer MP3 player games etc. The invention also allows which media layer s to display via organization metaphors and filtering criteria based upon UET and commands. The invention also allows for offline or unsynchronized interaction with objects of a session. Offline events are recorded for later integration with the session.

Server also may be configured in a distributed architecture wherein databases and processors are housed in separate units or locations. Some such servers perform primary processing functions and contain at a minimum a RAM a ROM and a general controller or processor. In such an embodiment each of these servers is attached to a communications hub or port that serves as a primary communication link with other servers such as web server or user computers e.g. and other related devices. The communications hub or port may have minimal processing capability itself serving primarily as a communications router establishing a corresponding link with the web server . A variety of communications protocols may be part of the system including but not limited to Ethernet SAP SAS ATP Bluetooth GSM and TCP IP.

Data storage devices such as file storage may include a hard magnetic disk drive optical storage units CD ROM drives or flash memory. Data storage devices contain databases such as database used in processing transactions and or calculations in accordance with the present invention including at least a user subscriber database and a user content database. In one embodiment database software creates and manages these databases. Conference related calculations and or algorithms of the present invention are stored in storage device and executed by the corresponding CPU.

The controller comprises a processor such as one or more conventional microprocessors and one or more supplementary co processors such as math co processors. The processor is in communication with a communication port through which the processor communicates with other devices such as other servers user terminals or devices. The communication port may include multiple communication channels for simultaneous communication with for example other processors servers or client terminals. As stated devices in communication with each other need not be continually transmitting to each other. On the contrary such devices need only transmit to each other as necessary may actually refrain from exchanging data most of the time and may require several steps to be performed to establish a communication link between the devices.

The processor also is in communication with a data storage device. The data storage device may comprise an appropriate combination of magnetic optical and or semiconductor memory and may include for example RAM ROM flash drive an optical disc such as a compact disc and or a hard disk or drive. The processor and the data storage device each may be for example located entirely within a single computer or other computing device or connected to each other by a communication medium such as a USB port serial port cable a coaxial cable an Ethernet type cable a telephone line a radio frequency transceiver or other similar wireless or wired medium or combination of the foregoing.

The data storage device may store for example i a program e.g. computer program code and or a computer program product adapted to direct the processor in accordance with the present invention and particularly in accordance with the processes described in detail hereinafter ii a database adapted to store information that may be utilized to store information required by the program. The database includes multiple records each record including fields specific to the present invention such as membership rates subscribers sessions etc.

The program may be stored for example in a compressed an uncompiled and or an encrypted format and may include computer program code. The instructions of the program may be read into a main memory of the processor from a computer readable medium other than the data storage device such as from a ROM or from a RAM. While execution of sequences of instructions in the program causes the processor to perform the process steps described herein hard wired circuitry may be used in place of or in combination with software instructions for implementation of the processes of the present invention. Thus embodiments of the present invention are not limited to any specific combination of hardware and software.

Suitable computer program code may be provided for performing numerous functions such as alternative steps of invention. The computer program code required to implement the above functions and the other functions described herein can be developed by a person of ordinary skill in the art and is not described in detail herein.

The term computer readable medium as used herein refers to any medium that provides or participates in providing instructions to the processor of the computing device or any other processor of a device described herein for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as memory. Volatile media include dynamic random access memory DRAM which typically constitutes the main memory. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM DVD any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM an EPROM or EEPROM electronically erasable programmable read only memory a FLASH EEPROM any other memory chip or cartridge a carrier wave as described hereinafter or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to the processor or any other processor of a device described herein for execution. For example the instructions may initially be borne on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over an Ethernet connection cable line or even telephone line using a modem. A communications device local to a computing device or e.g. a server can receive the data on the respective communications line and place the data on a system bus for the processor. The system bus carries the data to main memory from which the processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored in memory either before or after execution by the processor. In addition instructions may be received via a communication port as electrical electromagnetic or optical signals which are exemplary forms of wireless communications or datastreams that carry various types of information.

Server of the present invention may also interact and or control one or more user devices or terminals e.g. . The user device or terminal may include any one or a combination of a personal computer a mouse a keyboard a computer display a touch screen LCD voice recognition software or other generally represented by input output devices required to implement the above functionality. The program also may include program elements such as an operating system a database management system and device drivers that allow the processor to interface with computer peripheral devices e.g. a video display a keyboard a computer mouse etc. .

The shared spaces to emulate and share the contents of the session where executable machine codes in both the client or user machines to and the host . The executable codes in each machine may be different but the intended results of the invention are achieved. The state of the session is maintained on the host during a live session then the database at the end of a session. All client or user machines to that are logged into a session are constantly updated with changes to the session in real time. If permissions are granted any client can initiate a change to the state of the live session. Once this change has been sent all client machines to are updated with the change.

The system A comprises of a host in synchronous communication with one or more user machines to . In an embodiment the host is a server in communication with a database where the host is also in communication with a web server that communicates with a file storage . The database can be in a separate server or can be part of the host within the same server . Similarly the web server and the file storage can be separate units or can be integrated into a server . Yet in another embodiment a host is a server including the functions of the database the web server and the file storage . The physical location of the database file storage and the method of writing the machine executable codes being integrated into the host server is not important to the invention as long as the functions are accessible to the host and to the user machines to .

In an embodiment each of the user machines to has an operating system to such as the Microsoft Windows XP Linux Macintosh OSX or any third party operating system. The operating system in each of the user machines to need not be the same as long as it supports a web browser or other application to access the internet and supports the execution of codes to facilitate the intended media functions of the invention. In another embodiment compiled Flash VM executable codes of the application are downloaded before the creation of a shared space to to each of the user machines to from the host session through the network and links to . Yet in another embodiment the application can be native to each of the user machines to as media applications to

One or more media layers to are created and respective media tools are from media applications to is generated by the interaction of the codes in the user machines to and the codes from the host server . The network and the corresponding links to are part of the Wide Area Networks WAN Local Area Network LAN through Ethernet connections or wireless connections. Yet in other embodiments the network and the links can be Local Optical Networks LON or direct fiber optic links or direct terminal connections or plain old telephone service POTS . In all forms of link communications within the network the communications can be enhanced with known encryption protocols to improve security.

All services as contained within the host server are equipment selected from the list to include a server work station personal computer laptop computer Personal Digital Assistant PDA an Intelligent Electronic Device IED or any suitable computing platform with sufficient memory and processing power to perform the functions as a server in a network environment. The user machines to are equipment selected from the list to include a server work station terminal personal computer lap top computer Personal Digital Assistant PDA electronic tablet handheld wireless device a cellular phone an Intelligent Electronic Device IED or any suitable computing platform with sufficient memory and processing power to perform the functions as a user machine to perform media inputs in a network environment.

Yet in other embodiments the system A can be extended to include broad applications such as web conferencing local conference presentations projecting synchronized annotations or pointing tool to contents on multiple screens to mass audience online interactive courses and tutoring live interactive interviews to multiple interviews in different geographical locations interactive debate forums using multimedia interactive cellular phone chats and games secured synchronized interactive voting method combined with secured voter identification live military battlefield operational command remote interactive clinical instructions and operation training procedure and electric power utility interactive service support and trouble shooting etc. Said examples and the contents desired for the execution of said example can be assembled before and during synchronized events. Content can also be made available in an unsynchronized fashion such that independent content review or read only publishing can be supported.

In an embodiment the initialization of the system B in the synchronized state requires that the user s or client s machine has internet access through link to network and the ability to support compiled Flash based applications. A typical configuration will involve the use of a common web browser with a flash plug in and JavaScript enabled. Through the use of a URL the user or client makes a request to join a session by sending login credentials to the host . The host in turn will query the database to determine the tools that must be downloaded and the current session state parameters. In addition plug ins and are sometimes downloaded from third party servers and . Instruction and location of said plug ins and are provided by the host

The host first sends a base application that provides a synchronizing connection between that user and the host . A standard socket connection is established. Should this fail High Ports are tested for the ability to exchange data. Should this fail ports and are checked via standard HTTP protocols. Once a connection by links and from the user to the host has been established the host will send a list of required application tools to be loaded by the user machine . By only loading those tools that are required the system in the user s machine will start faster with a lower memory requirement. Should the user choose to run in thin mode those tools that are only needed on demand will be loaded into memory during their use and unloaded after their use is no longer required.

FIG. C is an embodiment of a system C illustrating the process of establishing and operating a session within a user application such as a web browser using various tools in Flash application . When a user logs onto the system C via the internet LAN or WAN the user is registered in a shared virtual environment session based on user s credentials and other parameters supplied at log on. In this exemplary example the flash application is loaded on to the client s machine by the client s web browser . This flash application in turn loads a communication synchronizer application that contacts the Host s server synchronization service and requests to be registered with a particular shared space for a session. Once this connection has been established all communication between the client application and the host sync service happen between these two applications.

Based on user credentials and other parameters supplied a list of tools and their location s on the file storage server s is generated. This list is passed to the flash application . The flash application then loads a stage manager tool into the buffer memory from the web server . This tool creates and manages the stage . Once this is done the flash application then sends a message back to the file storage server via sync application .

One of the tools that are loaded is the stage manager . This tool once loaded looks at the attribute list of the current room for the session. One item on that list is the type of layout to be used on the stage. If any other layout is defined besides default additional tools are downloaded to support the additional features. The stage manager is then provided a list of media layers to . Those media layers that are listed as active should be currently displayed. Active media layers and are accessed loaded and displayed on the stage . Once complete non active media layer s are downloaded and stored in cache memory in a prescribed order if this option was selected. All of the media layers together both loaded and unloaded to are called a collection .

The relationship of all media layers to to each other can be stored in an XML file known as the collection . The most exemplary example is the default stage manager system where all media layers are displayed using the Cartesian coordinate system where the y axis is inverted. An example XML collection file follows TABLE US 00001 . . . . . . . . . . . . .

The stage manager tool then checks to see what type of collection has been loaded. In this case it is a book simple type collection. The tools required for this type of layout is listed in the tools section of the XML. The client flash application then downloads into memory those tools listed.

FIG. C illustrates another embodiment of various components of the Flash application interacting with the user s media layers to on the stage . Although there are a number of possible combinations of tools that can be loaded the one tool that is always loaded is the stage manager . The stage manager tool among other things established the coordinate system and layout format that will be populated by media layers to . The most typical configuration of the stage is a two dimensional cardinal system where 0 0 is located on the upper left most side of the application window placed just under the displays for session and user information and controls. These controls are typically displayed at the top of the application window. The list of active media layers are passed to the stage manager . The media layers and that are tagged as visible are loaded first and then displayed in a stage .

A media layer is a container that serves as a reference point for media as well as other media layers. Since media layers can be attached to another media layer nesting of media layers can occur. For example a parent media layer contains an image of a human face on it. A child media layer is nested on top with a mustache drawn over the face and another child media layer is nested on top with eye glasses drawn. When the parent media layer s object is moved or hidden the two child media layer s objects will also move or be hidden thus maintaining their visual relationship. Each child however can have its visibility setting changed by a parent or another media layer in the patriarchy. A media layer from outside the patriarchy cannot modify a media layer unless such functionality is support by the system s API.

The issue of concurrent users in making an annotation to the media layer is addressed next. Unique to this invention is that ability to share in real time near real time as well as maintaining persistence the ability to create modify and delete media layers and the media elements associated with those media layers and regulate access to those media layers. In addition all tools and User Interface UI elements can be controlled at runtime based on commands from the stage manager. As such not all users logged into a shared space will see that same thing if such modifications are selected. For example the administrator of the shared space may wish to have all the tools made available to him or her. However all other users who are of type guest will not see any tools. Those users who are of type invited may see only a subset of tools that the administrator sees.

When a user is logged into the system actions that are performed on the media or changes to the media layer s attributes are tracked and sent to the server. The server maintains a log of the actions and the resulting status of media layers and their media. The server then repeats the actions to all users who are logged into the same session. When users enter in to a session they immediately load all active media layers media and plug ins. In this way every user who is logged into the system has a copy of the media elements and only has to execute the actions that were sent by the server. Since all users can if allowed by the administrator have their action communicated back to the server everyone s actions within the space is reflected on the display of all concurrent users. If the administer allows more then one user access to a media layer then only one action may occur at one time within a media layer. In other words if a user initiates an action no other actions can take place until the first action is complete. Concurrent actions can occur on separate media layers. The administrator can select that all actions on media layers are NOT locked. This means that if two users click on the same media layers media then whomever s event is sent last will have said event respected unless the object is deleted or somehow unable to execute the later event.

A whiteboard tool perform the unique function of creating a new media layer every time a line is started and then stopped. Each line and or shape in the whiteboard tool library is treated like an individual object on its own media layer.

For whatever metaphor employed the information required to create and support an ordering construct is managed by the stage manager. All rights to what media layers and tools are loaded seen and how they function is controlled by the user or administrator who created the space account . The administrator can pass the rights of a media layers and tools to anyone s or to everyone.

Interacting with media objects in a synchronized mode is discussed next. The stage manager tool of the system insures that all changes in state of a media layer or actions that are passed to the media layer from that media layer s contents is communicated to the host server to either be recorded or sent to some or all of the other client machines and . This is accomplished by the host server maintaining a list of all subscribed client machines to . As an event is received from a client machine that event is logged and stored either on the host server and or on the database . This event is then passed to the rest of the client machines on the subscriber list. The event is then replicated on all client machines however in rare cases an exception rule can intercept the event and then follow a defined action which may or may not mimic the original event. For example a client machine may click on an object in a media layer thus making that object interactive. The client then moves the object from one location to another thus creating an event. The changed media layer attribute information in this case Position X Position Y date last modified to the host server as an event. The host server records this new information and then sends this event information to all subscribed client machines to . Users on the client machines to would then see the same object from the original location to the new location as indicated by the terms of the event.

Alternately other input devices such as but not limited to a wireless PDA or electronic tablet a keyboard a mouse Z optical pointer USB flash memory stylus audio or video equipment such as a video camera or microphone or both can also be sent as inputs to the shared space to . The cellular phones to voice input can be integrated as a media layer over the other text or graphic layers during the teleconferencing.

The shared environment is multi dimensional thus allowing users to to sort information by not only content but spatial temporal and inter relationships between the media layers created. Because the shared space to is virtual and not restricted to one image more then one media can be placed within the same shared space to

Presently recording in collaborative environment is done as a complete video stream. With reference to one embodiment of the inventive system herein described provides for a recording system that records multimedia content in addition to identifying the collaborator time and command that created the content whereby content is composed of one or more events wherein an event as indicated above is a layer or a collection of layers. This permits any subsequent collaborator or user of the system and method as described in through to move or search across a collaborative session and select one identifier to view or to which to listen.

As previously indicated the state of the session is maintained on the host during a live session then the database at the end of a session. All client or user machines to that are logged into a session are constantly updated with changes to the session in real time. The content created from the session is recorded in multimedia recorder . Multimedia recorder and the playback recorder may be any one of a tape device a solid state memory a hard drive that records and plays back any type of memory e.g. tape solid state memory and hard drive by way of example and not limitation that stores any of several inputs such as by way of description and not limitation any data files images video or audio collectively data files text files VoIP content commands and time from hardware and software providing control functionality for plugins whiteboards VOIP and webcams. Recordings stored on recorder are subsequently stored in a database on server .

The database DB on server provides input to a playback system through connection . Playback system also receives control information from a filter system a search system and a skip jump system . The playback system provides input to an output device that by way of illustration and not limitation permits a user to one or more of the following hear audio or visualize video or digital graphical output.

The filter system permits a user to specify filter parameters upon which data stored in the multimedia recorder is played back in the playback system . By way of example and not limitation the filter may receive templates that selectively allow portions of the content based upon user to be played back through playback system and subsequently outputted by output device . Other filter parameters based upon commands or events layers may selectively allow portions of the content based upon user to be played back through playback system and subsequently outputted by output device .

One embodiment of the invention allows users to set control or restrict the viewing and editing of media layers in the same shared environment through different filtering algorithms based upon UET and commands. The invention further relates to a method of filtering one or more messages according to one of UET and commands. In one embodiment filtering allows users within the shared space to filter user inputs such as media layers user comments notes and drawings. In yet another embodiment filtering by a user would temporarily hide all other media layer content except for the selected user or filtering a selected date range. In still another embodiment filtering by a user of any users media layer including its own contributions would be highlighted against all other user media layer content contributions. Highlighting by way of example and not limitation would include color dotted lines or various gray shadings as may be selected by a user.

The playback device receives input form several sources such as filter device search device and skip jump device . These inputs communicate control data that serves providing playback based upon filter search or skip jump criteria. Additionally the playback device receives input directly from the multimedia recorder and database server . The playback device also receives input that provides playback for every action starting from the beginning of content to an end of a content. Typically beginning of content to an end of a content delineates a period of one session between collaborators. Additionally input provides the ability to playback selected users actions. And finally input provides for playback between selected times and dates.

A user or collaborator may also search content based upon a UET or command as for example to determine a user s contribution. A collaborator may search content to cull out only certain events. As is therefore contemplated by the invention herein a collaborator may employ any combination of UET and command as a search parameter to recall content. More particularly a search can designate a user or a time period or a type of action such as picking out text input VOIP data a tool employed in the creation of content. For example tools that may be search may be graphical tools such as a rectangular tool and a circle tool. Other patterns may be employed based upon graphical or audio considerations. Additionally a collaborator may search content only on the basis of time entered or by command.

A skip jump device allows a user to auto or manually skip or jump over a portion of content. A control determines if the device will auto or manually skip a portion of content based upon text input or particular uploaded content a whiteboard input or VOIP parameters . VOIP parameters may include parameters or patterns that permit the skip jump device to differentiate between speakers in a VOIP recorded conversation. The skip jump device also permits jumping forward or backward dependent on a control input . Control input may be effected by a toggle switch by way of example.

The aspect of the invention herein is embodied in the recorder and playback devices permits the storing and accessing of the content composed of the media layer events are described by at least a user media layer event designation time and command a means for inputting content associated with one or more of layers for composing multi type media into the shared space and executable code for accessing said content based upon a user media layer events time and command. More particularly the invention herein is embodied in a computer system as in for creating a collaborative file in a shared network including one or more user machines in a shared space wherein the shared space is created by interaction of executable codes in a host and a user application and the shared space is described by a session attribute list executable code for loading a media application with tools into one or more user machines executable code for using a stage manager tool from the media application to stage and correlating media layer events according to spatial temporal and relational coordinate data in the user application wherein the content composed of the media layer events are described by at least one of a user media layer event designation time and command a recorder for storing content associated with one or more of layers for composing multi type media into the shared space a playback device for accessing said content based upon one of a user media layer event designation time and command and an output device for selective audio visual presentation of said content based upon a user media layer events time and command.

The filter device permits a user to specify filter parameters upon which one or more multi type media layers and the associated user media layer event designation time and command are stored in the recorder played back and output for audio or visual presentation. The search device permits a user to specify search parameters upon which one or more multi type media layers and the associated user media layer event designation time and command are one of stored in the recorder played back and output for audio or visual presentation. The skip jump device permits a user to specify parameters upon which one or more multi type media layers and the associated user media layer event designation time and command are one of stored in the recorder played back and output for audio or visual presentation.

The playback system also provides access of its content to an editor . The user may edit the content of the audio video or digital graphical output using editor . In one typical operation the user observes a display device illustrating a graphical image and edits the image which is then stored in database resident on database server . The edited content is then stored in database server . It can be retrieved via connection and presented as edited video via the playback device and displayed or heard on output device . The aspect of the editing may require that the content is assembled or compiled from the edited content forward in time. To avoid having to reconstruct the content from its beginnings or its origins each time it is played back a snapshot or key frame is recorded at specific intervals of time. If therefore a playback of content is required the process does not require the reconstruction of the entire media layered event based on a sequence of all commands from the time when the first session began. The content as stored in the DB recorder and playback devices is based on the snapshot or key frame as recorded at specific intervals of time.

In a hypothetical list of commands is shown as having created two multi layer events one labeled Time Events and the other labeled Time Events. For purposes of illustration and not limitation at the end of Time Events the user may have ended the process inputting to the system . On the other hand after a period of time for example ranging from minutes to years the user may decide to add additional events such as illustrated as Time Events. When a user desires to continue adding multi layer events it retrieves the content from the recorder as previously described and plays the multi layer events through the playback on an appropriate output such as output . A user may also decide to edit the content of either Time Events or Time Events. By way of example and not limitation if the user desires to edit the content it may splice content from the Time Event into the Time Event. By way of further example it may splice the command move square shown by the dotted line a at Time between commands start VOIP and turn page . In another example it may insert a sound track shown by the dotted line b at Time further up in the list of commands of Time Event. In yet another example it may delete Whiteboard Square shown by the dotted line c at Time . At any time including after an editing process the user can playback the Time Events and or Time Events as subsequently edited. In the event that no steps were taken to avoid a collision or an anomaly such as an operation on content that came later in the sequence of an earlier deletion of the content then playback may appear anomalous. In order to account for these anomalies and collisions and thereby reduce the effects caused by editing it may be necessary to reassemble the splicing insertions and deletions that typically are made during an editing process utilizing reassembly logic . The reassembly logic insures that the ramifications of any splicing insertions and deletions are considered and upon such consideration adjusts the newly edited version such that it is rationalized for subsequent playback. By way of example if the whiteboard square were deleted then the reassembly logic would automatically delete the following insertion of the move square command . On the other hand if the user desired to store and subsequently play the edited version without reassembly switch S provides that option as well. Those ordinary skilled in the art of engineering and programming understand the technical requirements for a device and a process for reassembling commands based upon the forgoing requirements to rationalize the multi media events following an editing process.

While the foregoing invention has been described with reference to the above embodiments additional modifications and changes can be made without departing from the spirit of the invention. Accordingly such modifications and changes are considered to be within the scope of the appended claims.

