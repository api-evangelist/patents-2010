---

title: Scoped resource authorization policies
abstract: Resource authorization policies and resource scopes may be defined separately, thereby decoupling a set of authorization rules from the scope of resources to which those rules apply. In one example, a resource includes anything that can be used in a computing environment (e.g., a file, a device, etc.). A scope describes a set of resources (e.g., all files in folder X, all files labeled “Y”, etc.). Policies describe what can be done with a resource (e.g., “read-only,” “read/write,” “delete, if requestor is a member of the admin group,” etc.). When scopes and policies have been defined, they may be linked, thereby indicating that the policy applies to any resource within the scope. When a request for the resource is made, the request is evaluated against all policies associated with scopes that contain the resource. If the conditions specified in the policies apply, then the request may be granted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208332&OS=09208332&RS=09208332
owner: Microsoft Technology Licensing, LLC
number: 09208332
owner_city: Redmond
owner_country: US
publication_date: 20101224
---
In large scale computing environments particularly those that are distributed across many machines defining and enforcing authorization policies may be difficult.

A resource is anything that can be subject to a policy that governs what can be done with the resource. Examples of resources include files devices etc. Examples of things that can be done with a resource pursuant to a policy include reading writing executing deleting etc. One type of authorization system attaches a set of permissions to each resource where the permissions define what actions can be done with a resource and who or what has permission to perform the action. For example a file might have a set of permissions that grant read write execute delete access to the owner of the file read only access to a particular group and no authorization to all other entities. In one example this permission is attached to the resource and is set individually for each resource.

Some systems attempt to assign permissions collectively for broad classes of resources. However in practice some of these systems prove unworkable because control over classes of resource is not sufficiently fine grained and these systems lack the flexibility to define accurately the policies that apply to particular resources or classes of resources.

Resource authorization policies may be defined in a way that decouples the notion of policy scope from the policy itself. An interface may be provided that allows an administrator or other party to define authorization policies and resource scopes. The scopes and the policies may be defined separately. When an entity seeks to perform an action with respect to the resource the policies and scopes are accessed. It can then be determined which scopes the resource falls into and which policies apply to those scopes. A resource guard can then determine whether the policy s specified conditions for the requested use of the resource are satisfied. The policies may include global policies defined at a central level as well as local policies that are specific to the machine or group of machines or environment in which access is sought. If the conditions for the requested action are met then the entity is allowed to proceed with the requested action. Otherwise the requested action is denied.

A resource scope describes the resources to which a policy can apply even if the applicable policy itself has not been identified or defined yet . Examples of scopes could include all files that are in a particular folder all files in some sub tree of an overall directory tree e.g. all files in a particular folder or in any sub folder all resources that have a particular label all files if the current time is after 5 pm on a Friday all files located on servers in Germany or any other appropriate definition of a set of resources. An authorization policy describes what can be done with a resource and under what circumstances. Examples of authorization policies include read only authorization for all users read write authorization for all members of the finance group delete authorization for members of the admin group retain until Jan. 1 2011 or any other description of something that can or cannot be done with a resource. Each scope and each policy may be assigned a name or identifier. An administrator can cause a policy to apply to resources within a particular scope by using the names or identifiers to link the policy with a scope. A policy can be linked to more than one scope and a scope can be linked to more than one policy.

Policies and scopes may be defined centrally and may be propagated to machines in a distributed computing environment. A request to use a resource may be evaluated on the machine at which the request is made or on another machine that hosts the resource that is being requested using the policies and scopes that have been defined centrally.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In computing environments resources are generally subject to authorization policies that govern how the resources can be used and under what circumstances. Resources may include files devices or any other component that can be used in some way. The policies specify what can be done with these resources. For example some resources can be read but not written a read only policy . Some resources can be read and written a read write policy . Some resources have to be retained others may be deleted. Some types of resources e.g. executable files can be executed while others cannot. In some cases whether a given permission can be exercised depends on the circumstances. For example a policy might say that a file is read write for administrators but read only for other users in which case the circumstances under which use of a resource is being requested include the identity of the principal who is making the request . The policy might also be defined in terms of environmental factors such as the health of the device from which the request is made the physical location of the server and or requestor etc.

In some example systems a resource has a set of permissions that attaches to the resource and that is defined individually for the resource. For example it might be possible to allow a file to be read written and or executed. These three types of actions might be authorized for three separate classes of entities e.g. the user who owns the file the user s group and the public at large. Each file therefore might have a label attached saying whether there is read permission for the file owner write permission for the owner execute permission for the owner read permission for the group and so on. This level of control is generally too coarse for modern distributed computing environments where the rules about who can do what with a resource may be more complicated. However modern systems that provide control over resources in large scale distributed environments generally have not provided sufficiently fine grained control and therefore have been unworkable.

The subject matter described herein provides for flexible control over resources by decoupling the notion of an authorization policy from the notion of a policy scope. A policy describes what can be done with a set of resources and under what conditions. A resource scope describes a set of resources to which a policy may apply. The policy and the scope may be defined separately. A policy may be defined even if it is unknown what resources the policy will apply to. Similarly a scope may be defined even if it is unknown what policies will be assigned to the scope. Once policies and scopes have been defined a given policy may be linked with a given scope thereby indicating that the policy applies to all resources within the scope. A scope may be linked with more than one policy and a policy may be linked with more than one scope. In this way an administrator or other party may be given arbitrary control over the nature of policies and the scope s to which those policies apply.

In one example authorization control over resources is deployed in a distributed environment. Policies and scopes may be defined centrally and may be propagated to other machines in an environment. Thus each resource that falls within a particular scope may be labeled with a reference to the applicable policy. Local copies of the policies may be stored on individual machines and each machine may also have its own local policies. When an entity requests use of a resource the resource is examined to determine what policies apply to the resource. Those policies are then retrieved. A resource guard may determine whether the conditions specified in all of the policies exist. If the conditions do exist then the requested use of the resource may be granted. Otherwise the requested use may be denied. In one example the issue of what policies apply to a resource may be evaluated at the time that a request is made with respect to that resource. That is when an entity requests to perform an action with respect to a resource this request may trigger an evaluation of what scope s the resource falls into and what policy ies apply to that scope.

A policy may specify what may be done with a resource and under what circumstances the specified action may be done. For example a policy may specify that anyone can read the file or any member of the administrator s group may delete the file or any member of the finance group may read the file between 9 00 a.m. and 5 00 p.m. or any other appropriate set of conditions. In these policies what constitutes the file depends on what scopes have been attached to the policy. For example a scope might be any file in the users finance folder or any file labeled high impact . If for example the scope any file in the user finance folder is linked with the policy any member of the finance group may read the file between 9 00 a.m. and 5 00 p.m. then the result is that any file in the users finance folder can be read by any member of the finance group during the specified hours. Additionally policies may be based on specific types of device claims and or user claims e.g. the device that is requesting the file is located in Germany or the device that is requesting the file has BitLocker installed examples of device claims or the user is an administrator or the user has updated his password within the last two weeks examples of user claims . Of course there might be other policies applicable to some or all of the files in the users finance folder and the resource guard may apply these policies conjunctively so that a requested access would be allowed if it complies with all of the policies. However policies could also be applied disjunctively. 

Turning now to the drawings shows an example scenario in which policies and scopes may be created and applied. Authorization policy specification interface is a component that allows an administrator to specify authorization policies and resource scopes . Interface may take the form of software e.g. a dashboard that allows an administrator to define specific policies and scopes. As noted above authorization policies define what can be done with a resource and under what circumstances. As also noted above resource scopes define sets of resources to which an authorization policy can apply.

Authorization policies may be defined without reference to any particular set of resources to which the policies apply. Likewise resource scopes may be defined without reference to any particular policy that applies to the resources that fall within the scope. Thus interface may also allow administrator to specify associations between policies and scopes. For example an authorization policy might say read only access for members of the finance group. A scope might be defined as all files labeled high impact. Linking the policy and the scope together grants to members of the finance group read only access to all of the files that are labeled high impact. Associations include such links between policies and scopes. It is noted that shows a single administrator defining the policies scopes and associations but there could be several administrators. In one example there could be an administrator for the policies an administrator for the scopes and an administrator for the associations.

Once policies scopes and associations have been created in the manner described above they may be applied to resources and enforced by a resource guard. The policies may be applied and enforced in any appropriate usage scenario from a single stand alone machine to a large scale distributed computing environment. For the purpose of it is merely assumed that access to a resource is being sought from some client without regard to the particular environment of which client is a part.

Client may be a machine that stores contains or otherwise makes use of a set of resources . For example client may make use of a set of resources that are stored elsewhere such as on a server. Resources as noted above may be any types of resources such as files devices or anything else whose use could be controlled in some manner. Principal is a user or other entity that makes a request to perform some type of action with respect to one of resources on client . The requested action could be read write append delete etc. Resource guard is a component that enforces a policy by determining whether the requested action may proceed. Resource guard has access to authorization policies resource scopes and associations . Resource guard may use these items from a remote central source or local copies of these items may be stored on client . In making an access decision resource guard may also consider environmental factors such as the time of day the location of a server on which the resource is stored the location of the client from which the resource is requested etc. Moreover resource guard may or may not include the component that evaluates whether the conditions to permit access are satisfied under the policy. That is the issue of determining whether the policy permits access which may be performed by a policy engine is conceptually separate from the issue of the resource guard granting or denying access based on the policy engine s determination. The resource guard and the policy engine may be separate components.

There are various ways to determine which policies apply to a resource. In one example at the time that a request is made to perform an action with respect to a resource it may be determined e.g. by the guard and or policy engine what scope s the resource falls into and what policy ies apply to those scopes. For example if a request is made to read a resource the set of scopes and policies could be canvassed and it could be determined that the resource falls within a scope that permits say read access to any member of the finance group. Any other applicable policies could be discovered in this way. Then it could be determined whether the requestor is a member of the finance group and whether the requested access is a read access. If so then the conditions specified in the policy are satisfied. Any other applicable policies could be applied conjunctively that is access might be allowed only if all applicable policies are satisfied. In another example policies could be applied disjunctively that is access could be allowed if any of the policies is satisfied. Or there could be some other rule for combining multiple policies. If the combination of policies is satisfied again regardless of whether the rule to combine policies uses conjunction disjunction or some other rule then guard may allow access to the resource. Otherwise guard may deny the requested use of the resource. It is noted that policies may be global applicable to resources regardless of where they are being requested or may be local specific to requests from a particular machine . Additionally while the determination as to what policies apply to a resource is made in the foregoing example at the time the resource is being evaluated applicability of policies could be determined at a different time e.g. a process could evaluate scopes and policies and could label the resources with the applicable policies while periodically updating to allow for changes in the existing set of scopes and or policies.

Resources and fall within scope . Resources and fall within scope . Resources and fall within scope . Thus there is some overlap among the scopes in the sense that resources and fall within both of scopes and and resources and both fall within scopes and .

If particular policies have been linked with a scope then the resources that fall within the scope may be subject to those policies at the time that access to those resources is requested. Thus resources and have references and respectively to the various policies that apply to those resources. Since resources and both fall within scopes and resources and would have the same set of policy references. Likewise for resource and which both fall within scopes and . In one example whether a resource falls within a set of scopes and what policies apply to those scopes may be determined at the time that a request for a resource is made. However in another example there may be a process that evaluates resources on a recurring basis or whenever there is a change to scopes and or policies to determine whether there are any changes as to which policies apply to a given resource. That process may add and or change a given resource s policy references according to the changes that take place to policies scopes and the associations between policies and scopes.

The scopes may have been defined as descriptions of general classes of resources. shows some examples of these general classes of resources although it will be understood that the subject matter described herein is not limited to these examples.

In one example a resource scope may be defined based on membership in a particular folder or a directory sub tree rooted at a particular folder block . For example a scope might include all files that are in folder c documents finance or all files that are in the directory sub tree rooted at that folder. In another example a scope might include all resources that have a particular label block . For example files might be labeled for high medium or low impact e.g. depending on the level of sensitivity of the information they contain . Thus a scope might include all files labeled high impact. Based on the definition of a scope e.g. the types of scope described in blocks and or any other type of scope it can be determined what resources fall within that scope.

In the example of three scopes and are shown. Scope encompasses all files in the directory c documents finance. Scope encompasses all files on the shared file system share engineering. Scope encompasses all files labeled high impact. 

The example of also shows three authorization policies and . Authorization policy specifies read write access for all users whose employee type is finance . This is another example of a principal limit since the policy in question restricts access based on who is asking to perform the requested action. Authorization policy specifies that members of the admin group are allowed to delete a resource. Authorization policy specifies read access for all users in the engineering group.

At resource scopes may be defined. As noted above a resource scope may be a description of a set of resources such that it can be determined whether a resource falls within the scope. At a set of authorization policies may be defined. As noted above an authorization policy specifies what action may be performed with respect to a resource and under what conditions. As also described above policies and scopes may be defined separately from each other i.e. a policy may be defined without reference to a particular set of references to which it will apply and a scope may be defined without reference to a particular set of policies that will apply to resources within the scope.

At policies may be associated with scopes. The linking of a policy with a scope indicates that the policy applies to those resources that fall within a scope. A given policy may be linked with zero or more scopes. A given scope may be linked with zero or more policies. Thus a given scope may have any number of policies including zero that apply to resources in that scope. And a given policy may have any number of scopes including zero to which the policy applies.

At references to policies are applied to resources. That is if a particularly resource falls within a scope that is associated with a policy then a reference to that policy is applied to the resource. discussed above shows examples in which resources are labeled with references to policies. Such references may be applied to resources at .

At the various policies may be propagated. In one example the resources to which access is controlled are made available in a distributed computing environment. In order to allow requests to use resources to be evaluated efficiently the policies themselves may be propagated to the various client machines in the distributed environment thereby allowing a guard to evaluate a request without having to obtain the policy from a central location at the time of the request.

Some amount of time may pass as indicated by the two parallel diagonal lines between and . Then at a request may be received to access or to perform an action on a resource. The request may be received for example at the machine at which the action is to be performed. Thus a user of a particular computer may be the principal who is requesting access to the resource and he or she may make this request through that computer. Thus in this example the request to use the resource is received at that computer. It is noted that the actual resource that is requested may or may not be present at the computer. For example the resource might be a file present on the computer s local hard disk but could instead be a file located in a share that is maintained on a remote server.

At it is determined whether the requested use of the resource or the requested action to be performed on the resource is within the applicable policies. Applicable policies may include any policies linked to scopes within which the reference falls. The applicable policies may also include local policies that are specific to the machine on which access is requested or that are specific to some group of machines that includes the machine on which access is requested . In one example the various policies are applied conjunctively i.e. the policies may be treated as being collectively satisfied only if the conditions in all of the policies are satisfied. For example if a file is subject to two policies the first of which says the file is to be retained for the next two years the second of which says that the file may be deleted by members of the admin group then conjunctive application of these policies would deny a request to delete the file. Even if a member of the admin group requests the deletion the second policy permits the requested action but the first policy does not. So under conjunctive application of policies the request would be denied. However it is noted that the subject matter of this application is not limited to conjunctive application of policies. In another example policies could be applied disjunctively. For example a security system could be configured to allow for an administrative override to the policies that would otherwise apply. Thus if an administrator chose to allow access in a situation in which the conjunction of other policies otherwise would disallow access then access could be allowed. 

If the requested action is within the applicable policy ies at then the request is granted at . Otherwise the requested action is denied at .

Although the subject matter herein may be deployed in any appropriate system the following is one example of how the subject matter herein can be implemented on WINDOWS operating systems 

In the ACTIVE DIRECTORY service a user interface may be provided for an administrator to define authorization policies. Authorization policies may then be stored in the ACTIVE DIRECTORY service and each policy includes a name a distinct identifier and a security policy in the form of a binary security descriptor. The authorization policies may be queried in the ACTIVE DIRECTORY service based on their name or distinct identifier. The group policy is extended to allow for the association of specific authorization policies with specific Group Policy Objects GPOs. GPOs can be applied to sets of one or more computers. To transfer the authorization policies associated with a GPO to the computers to which the GPO applies the Group Policy framework is extended to transfer the associated authorization policy to each computer as a Group Policy setting to be stored in the computers registry.

A resource scope can be defined on WINDOWS file servers in terms of the folders or shares that include files to which the administrator wishes to apply a common authorization policy. This may include a single folder set of folders a network share or a network share distributed across multiple WINDOWS file servers. The resource scope can be defined at the root folder or share that contains all the files and folders to which a common policy is to be applied.

To allow an administrator to associate an authorization policy with a resource scope a user interface is provide for an administrator to edit the attributes on the root folder of a resource scope to select one or more authorization policies from a list of all authorization policies enumerated in the ACTIVE DIRECTORY service. At this time each file in the scope is marked with an identifier of the authorization policy.

To enforce the authorization policies described herein the AccessCheck Application Programming Interface API is extend to analyze a file s security descriptor for an identifier of one or more authorization policies. When a security principal makes a request to access a file on a WINDOWS file server if one or more authorization policies are specified in the file s security descriptor AccessCheck will apply each identified authorization policy. In order for the security principal to be granted the requested access the security principal may be given access according all authorization policies identified in the file s security descriptor.

Computer includes one or more processors and one or more data remembrance components . Processor s are typically microprocessors such as those found in a personal desktop or laptop computer a server a handheld computer or another kind of computing device. Data remembrance component s are components that are capable of storing data for either the short or long term. Examples of data remembrance component s include hard disks removable disks including optical and magnetic disks volatile and non volatile random access memory RAM read only memory ROM flash memory magnetic tape etc. Data remembrance component s are examples of computer readable storage media. Computer may comprise or be associated with display which may be a cathode ray tube CRT monitor a liquid crystal display LCD monitor or any other type of monitor.

Software may be stored in the data remembrance component s and may execute on the one or more processor s . An example of such software is authorization policy and scope software which may implement some or all of the functionality described above in connection with although any type of software could be used. Software may be implemented for example through one or more components which may be components in a distributed system separate files separate functions separate objects separate lines of code etc. A computer e.g. personal computer server computer handheld computer etc. in which a program is stored on hard disk loaded into RAM and executed on the computer s processor s typifies the scenario depicted in although the subject matter described herein is not limited to this example.

The subject matter described herein can be implemented as software that is stored in one or more of the data remembrance component s and that executes on one or more of the processor s . As another example the subject matter can be implemented as instructions that are stored on one or more computer readable storage media. Tangible media such as an optical disks or magnetic disks are examples of storage media. The instructions may exist on non transitory media. Such instructions when executed by a computer or other machine may cause the computer or other machine to perform one or more acts of a method. The instructions to perform the acts could be stored on one medium or could be spread out across plural media so that the instructions might appear collectively on the one or more computer readable storage media regardless of whether all of the instructions happen to be on the same medium. It is noted that there is a distinction between media on which signals are stored which may be referred to as storage media and in contradistinction media that contain or transmit propagating signals. DVDs flash memory magnetic disks etc. are examples of storage media. On the other hand wires or fibers on which signals exist ephemerally are examples of transitory signal media.

Additionally any acts described herein whether or not shown in a diagram may be performed by a processor e.g. one or more of processors as part of a method. Thus if the acts A B and C are described herein then a method may be performed that comprises the acts of A B and C. Moreover if the acts of A B and C are described herein then a method may be performed that comprises using a processor to perform the acts of A B and C.

In one example environment computer may be communicatively connected to one or more other devices through network . Computer which may be similar in structure to computer is an example of a device that can be connected to computer although other types of devices may also be so connected.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

