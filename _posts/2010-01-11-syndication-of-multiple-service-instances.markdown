---

title: Syndication of multiple service instances
abstract: Service provisioning tasks can be performed to provision or deprovision services for users, reconcile overlapping services, and apply effective service properties. A service can be provisioned by receiving a request to provision the service for a user, reconciling new service properties with current service properties, from one or more service instances, to determine effective service properties, and applying the effective service properties as properties to use for the service for the user. A service can also be provisioned by receiving a request to provision the service for a user, storing a new service instance, and reconciling the new service instance with one or more previously stored service instances for the same service to determine effective service properties. A service provisioning system can perform provisioning operations for one or more internal and external service providers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08548442&OS=08548442&RS=08548442
owner: Microsoft Corporation
number: 08548442
owner_city: Redmond
owner_country: US
publication_date: 20100111
---
With the increasing popularity of online service subscriptions there is a need for managing service subscriptions particularly when a user is subscribed to multiple offers from the same or from different service providers.

When a user is subscribed to a single offer from a single service provider provisioning and management of the service subscription is relatively straightforward. The service provider keeps track of the offer the services that make up the offer service specific properties and the user information. The user is provisioned to use the services of the offer. When the user decides to cancel the offer the provisioned services of the offer are deprovisioned by the service provider.

However when a user wants to subscribe to multiple offers from a single service provider or from different service providers and the offers include overlapping services then the tasks of provisioning deprovisioning and managing of the subscription can be more difficult. One solution might be for the user to create a new user account for each offer the user subscribes to. However keeping track of multiple user accounts can be difficult and confusing for the user as well as less efficient for the service provider or service providers .

Therefore there exists ample opportunity for improvement in technologies related to provisioning of services and the reconciliation of multiple service subscriptions.

In summary the detailed description is directed to various techniques and solutions for service provisioning including reconciling service properties for overlapping services.

According to one aspect of the techniques and solutions described herein a method for provisioning services for users comprises receiving a provisioning request wherein the provisioning request comprises a request to provision a service represented by a service identifier for a user represented by a user identifier and where the provisioning request further comprises new service properties for the service. The method further comprises reconciling the new service properties for the service with current service properties for the service where the reconciling comprises obtaining the current service properties for one or more previously provisioned instances of the service for the user and based on the obtained current service properties and the new service properties determining effective service properties for the service. The method can further comprise applying the effective service properties as properties to use for the service for the user. The method can be implemented at least in part by a service provisioning system.

According to another aspect of the techniques and solutions described herein a method for provisioning services for users comprises receiving a provisioning request to provision a service for a user storing a new service instance representing the provisioning request and reconciling the new service instance with one or more previously stored service instances for the same service to determine effective service properties where a plurality of the new and previously stored service instances comprise a same service property with different property values. The service instance can comprise a user identifier a service identifier and service properties for the service. The method can be implemented at least in part by a service provisioning system.

According to yet another aspect of the techniques and solutions described herein a service provisioning system for provisioning services for users comprises computing devices and data repositories where the computing devices are configured for performing service provisioning operations including receiving provisioning requests reconciling service properties e.g. among one or more service instances to determine effective service properties and applying effective service properties.

The described techniques and tools for solutions for service provisioning including reconciling multiple service instances can be implemented separately or in combination.

The following description is directed to techniques and solutions for service provisioning including reconciling service properties for overlapping services. The various techniques and solutions can be used in combination or independently. Different embodiments can implement one or more of the described techniques and solutions.

Various techniques and solutions for service provisioning are described herein. Provisioning tasks e.g. tasks to provision a service deprovision a service or manage a service subscription or instance etc. can be performed for any type of service e.g. computing related services . For example services can include webmail services application services e.g. on line word processing applications spreadsheet applications and the like website services online file storage services online education account services gaming services phone e.g. mobile phone services etc. In addition services other than computing related services can be provisioned using the techniques and solutions described herein.

Services can be provisioned independently or as part of an offer. An offer e.g. a go to market offer or a subscription can be an offer for one or more services. For example an offer can include a package of related services e.g. a collection of business related application services .

A user subscriber can subscribe to a single service or to multiple services. A user can subscribe to services individually or as part of an offer which may include multiple related services . If a user subscribes to a single service provisioning of the service for the user can include storing the service instance and applying the service properties.

Provisioning of services for a user can be more difficult when multiple offers overlap in the services they include or if a user subscribes to different variations of the same service with different properties especially if they differ in the properties included for the service across the different offers. An example is provisioning a mailbox for a user which is a common service that might be included in many offers or subscriptions . One offer may include a 5 gigabyte inbox storage limit while another offer may include a 20 gigabyte inbox storage limit. In order to determine which storage limit the use will receive e.g. a 5 gigabyte inbox or a 20 gigabyte inbox the service properties can be reconciled across the different instances of the service that have been provisioned for the user.

The various provisioning techniques and solutions described herein can be applied to provision the user correctly when different provisioning and deprovisioning situations are encountered. For example the techniques and solutions described herein can be applied to provision a service for the user on the first subscription update the properties appropriately when other subscriptions are purchased or removed and ensure that a service provisioned for a user is not completely removed until the user has no remaining subscriptions that include that service for the user when there are no remaining service instances for the service for the user .

The various techniques and solutions for service provisioning can be implemented in a service provisioning environment. For example a service provisioning environment can manage service provisioning tasks e.g. storage provisioning and deprovisioning of services for a number of internal and or external service providers.

The service provisioning system can include various computing devices e.g. computer servers database servers etc. business rules and business logic and other hardware and or software for performing service provisioning tasks. In the example environment the service provisioning system performs service provisioning tasks. These tasks include receiving and responding to requests from the service providers e.g. request to provision services for users requests to deprovision services for users and requests for information for services and or users such as the effective service properties for specific services users . The service provisioning system also responds to requests from programs go to market programs e.g. subscriber programs storefronts resellers and the like such as requests to provision services for users and requests to deprovision services for users. Examples of programs are the Office Live program the Live edu program Windows Mobile Marketplace all provided by Microsoft Corporation and Amazon.com provided by Amazon.com Inc. . Programs can be entities through which consumers purchase services or offers such as a storefront e.g. a web based storefront . For example using programs a user may purchase a service subscription upgrade downgrade a service subscription cancel service etc.

For example the service provisioning system can receive a provisioning request from the Live edu program e.g. one of the programs to provision a specific user for a webmail account. In response to the request from the Live edu program the service provisioning system can send a request to the service provider of the webmail system e.g. one of the service providers to add the webmail account for the user with specific service properties if this is the first instance of the service for the user or to update the webmail account for the user with effective service properties if the user has multiple instances of the service .

The service provisioning system also stores provisioning information such as offer and or service data and provisioning state data e.g. stored in a provisioning database . Furthermore the provisioning system manages changes in provisioning state and takes appropriate action e.g. reconciliation of service properties determination of effective service properties etc. .

The service providers can be internal or external service providers. Internal service providers are those service providers that are related to the service provisioning system e.g. they are operated by the same company or organization . External service providers are unrelated service providers e.g. third party service providers that use the service provisioning system e.g. they have an agreement with the company operating the service provisioning system . The service providers can communicate with the service provisioning system via a network e.g. a local area network a wide area network or the Internet .

The programs can use the service provisioning system to perform service provisioning tasks. For example the programs can send a provisioning request e.g. to provision or deprovision a service for a user to the service provisioning system . The provisioning request can be sent using an application programming interface API provided by the service provisioning system . In response to the service provisioning request the service providers can receive information regarding effective service properties to use for a specific user or users.

The users are the subscribers to the services provided by the service providers . The users also communicate with the programs e.g. to purchase a service subscription upgrade downgrade a service subscription cancel service etc. .

Various types of information can be used to provision services for users. For example an offer e.g. a go to market offer can be provided by a service provider. An example of an offer is an offer for a webmail account provided by an Internet service provider. An offer can be an offer for a single service or an offer for multiple services e.g. a package or collection of related services .

Provisioning information can include information identifying an offer e.g. identified by an offer name or identifier to which a user is subscribing. The offer can include information about the services included in the offer.

Provisioning information can also include information identifying the service such as a service name or identifier and other information about the service such as service properties. Service properties describe the attributes or details of the service. For example service properties for a webmail service can include mailbox size expiration information and authorized devices.

In a specific implementation each service property is associated with a relative weight. The weight is a value which can be used to compare the same property across multiple instances of the provisioned service to determine which property represents the better level of service. For example if one instance of a webmail service includes an inbox a service property with a 5 GB size a value of the inbox property and a weight of 25 and another instance of the webmail service includes an inbox with a 10 GB size and a weight of 35 then the two instances of the property can be compared based on their respective weights. In this example when the inbox property is reconciled across the two instances of the inbox service the weights 25 and 35 are compared to determine that the service instance with the 10 GB inbox size provides the better level of service the weight of 35 is greater than the weight of 25 . In other implementations different types of service level indication can be used so long as the properties can be compared across multiple instances to determine which provides the better or more desirable level of service. In a specific implementation relative weights in the range of 0 to 100 are used.

Provisioning information can also include information identifying the user e.g. identified by a user name or identifier for which the service or services are to be provisioned.

Provisioning information can be stored e.g. in a database in the form of a service instance. In a specific implementation a service instance represents a specific provisioned service including service properties for a specific user and may also include offer information e.g. a specific offer identifier .

This section describes a specific implementation of a data schema used to define provisioning information. However in general any data schema that describes services and service properties could be used to implement the techniques and solutions for service provisioning described herein.

In the specific implementation offer data includes provisioning information describing offers and services. An offer includes the following information 

Using the offer and service schema defined above the following is a list of sample offer service data.

In the sample offer data above the WebmailGoldOffer offer includes two services Service100 and Service300. The first service with a Service ID of Service100 has a number of properties. Specifically Service100 has an inbox property with a value of 20 GB and a weight of 100 and an expire property with a value of Never and a weight of 100. Other offers also include the service Service100 but with different properties. For example the WebmailSilverOffer offer also includes Service100 but with a 10 GB inbox and a 1 Year expiration.

Services can also be provisioned outside of an offer. In the sample data above the WebmailSeparate offer indicates that a user subscription to the Service100 without subscribing to a particular offer.

In the sample service data above Service ID is associated with a service name. For example the Service100 service is associated with the name WebmailInboxService. 

In the specific implementation provisioning state data includes an association between a user an offer and a service.

In some implementations provisioning state is tracked or determined in order to decide which tasks need to be performed. In general provisioning state indicates a present state for a user with respect to a particular service and or offer an action to be performed e.g. provision or deprovision a service and or offer and resulting tasks that need to be performed e.g. service actions and or property actions .

For example a provisioning state for a user with respect to a particular mailbox service could indicate that one or more service instances of the mailbox service have already been provisioned for the user. In such a case if a new provisioning action is to be performed to provision another instance of the mailbox service for the user then the provisioning state can indicate that a property action needs to be performed to reconcile service properties among the service instances.

There are four columns in the provisioning state diagram . The first column Offer Action refers to the requested action e.g. a request to provision or deprovision an offer and or a service for a user .

The second column Initial User State refers to the current provisioning state of the service for the user. For example the initial user state can indicate that no instances of the service have yet been provisioned for the user e.g. that the user is not currently subscribed to the service . The initial user state can also indicate that one instance of the same service has already been provisioned for the user or that multiple instances of the same service have already been provisioned for the user that the user has been provisioned with an overlapping service .

The third column Service Action refers to the action to be performed. In some situations no action needs to be performed. In other situations the service is added e.g. if this is the first time the service is being provisioned for the user . In yet other situations the service is be removed e.g. if the user does not have any instances remaining for the service .

The fourth column Property Action refers to the action to be performed with respect to the service properties. In some situations new properties are added. In other situations properties are reconciled. In yet other situations properties are removed.

In the example provisioning state diagram the first row indicates what tasks and actions are performed when receiving a request to provision a service a provisioning request when the service is not currently provisioned for the user when the initial user state indicates that there are no current service instances for the user . In this situation the service will be added for the user the Service Action and new service properties will be stored the Property Action . This can result in a new service instance indicating the service including service properties has been provisioned for the user being stored e.g. in a provisioning state database .

For example if a user is subscribing to the WebmailSilverOffer offer see Section IV above which includes the Service100 webmail service and the user currently has no instances of Service100 provisioned then this state row would apply. The webmail service Service100 would be added for the user e.g. the service provider of the webmail service would allocate or enable the user s webmail account with the service properties indicated by the service in this case a 10 GB inbox and a one year expiration . The service instance could then be stored in this case the service instance could include the offer identifier service identifier user identifier and service properties . The effective service properties in this case the properties of the one instance could also be stored and or sent to the service provider to use when providing the service for the user.

A user could also subscribe to the Service100 webmail service outside of any offer. For example the user could directly subscribe to the Service100 webmail service including specific service properties e.g. a 5 GB inbox with a one year expiration . The service instance could then be stored in this case the service instance could include the service identifier user identifier and service properties . The service instance could also include an indication that the instance is not related to an offer.

In the example provisioning state diagram the second row indicates what tasks and actions are performed when receiving a request to provision a service a provisioning request when one instance of the service is currently provisioned for the user when the initial user state indicates that there is one current service instances for the user . In this situation with an overlapping service the service does not have to be added for the user the Service Action because the user is already subscribed to the service and service properties will be reconciled the Property Action . The reconciling will be performed for the properties of the new service provisioning request and the properties of the current existing instance of the service. The reconciling is performed to determine the effective service properties to be used for the service those properties values that represent the best or desired level of service across the instances . The effective service properties will be applied to the service and can also be stored. Also a new service instance will be stored for the new provisioning request indicating the service service properties and user .

For example if a user is subscribing to the WebmailSilverOffer offer see Section IV above which includes the Service100 webmail service and the user had previously subscribed to the Service100 webmail service e.g. WebmailSeparate not part of an offer or another offer which also included the Service100 service and thus had one instance of Service100 provisioned then this state row would apply. There would be no service action because the user already subscribes to the Service100 webmail service. However service properties would be reconciled to ensure that the user receives the best level of service across the service instances. Using the example of a request to provision WebmailSilverOffer with an existing instance of WebmailSeparate the reconciling would compare the inbox property an overlapping service property because the inbox property occurs in both instances of the service using the weights the 10 GB inbox property value with a weight of 60 compared to the 5 GB inbox property value with a weight of 40 to determine an effective inbox property value in this case 10 GB would be the effective inbox property value . Similarly the expiration property would be compared. The resulting effective property values would then be applied to the webmail service for the user the user would receive a 10 GB inbox with a one year service expiration . For example the effective service properties could be sent to the service provider to use when providing the user the webmail service. The effective service properties could also be saved e.g. in a database at the service provisioning system and or in a database at the service provider .

In some situations updating or sending effective service properties to the service provider can be skipped. For example if the new service instance does not include properties with better or more desirable values than existing instance s then effective properties do not have to be sent as they would be the same as the ones currently in use e.g. this could occur if the user has a 10 GB inbox currently provisioned and the new instance is for a 5 GB inbox .

In the example provisioning state diagram the third row indicates what tasks and actions are performed when receiving a request to provision a service a provisioning request when multiple instance of the service is currently provisioned for the user when the initial user state indicates that there are two or more current service instances for the user . In this situation the service does not have to be added for the user the Service Action because the user is already subscribed to the service and service properties will be reconciled the Property Action . The reconciling will be performed for the properties of the new service provisioning request and the properties of the current existing instances of the service. The reconciling is performed to determine the effective service properties to be used for the service those properties values that represent the best level of service across the instances . The effective service properties will be applied to the service and can also be stored. Also a new service instance will be stored for the new provisioning request indicating the service service properties and user .

The tasks and actions performed in row are essentially the same as performed in row above. The only difference is that multiple existing service instances are compared when reconciling properties. This situation could occur for example if a user has subscribed to multiple offers that all include a specific service. For example the user could have first subscribed to a webmail account service outside of any offer or package of services with a particular Internet service provider ISP . Later the user could have purchased a data line subscription e.g. cable modem or digital subscriber line through the ISP that also includes the webmail account service. Finally the user could have enrolled at a university that offers as a service to its students computing services including the webmail account service provided by the ISP. The result of this activity would be three service instances for the webmail account service which could each have different service properties overlapping service properties . In order to ensure that the user receives the benefit of the best or most desirable service properties the service properties could be reconciled across the three instances and the best value for each property selected as the effective service properties. The effective service properties would then be applied used for the webmail account service for the user.

In the example provisioning state diagram the fourth row indicates what tasks and actions are performed when receiving a request to deprovision a service when the service is not currently provisioned for the user when the initial user state indicates that there are no current service instances for the user . In this situation no service actions or property actions need to be performed. This row is included in the example provisioning state diagram for completeness and represents what occurs when receiving a deprovisioning request to deprovision a service instance that is not present.

In the example provisioning state diagram the fifth row indicates what tasks and actions are performed when receiving a request to deprovision a service a deprovisioning request when one instance of the service is currently provisioned for the user when the initial user state indicates that there is one current service instances for the user . In this situation because there is only one instance of the service provisioned for the user the service will be removed for the user the Service Action . In addition the service properties will also be removed because the user is no longer subscribed to the service.

For example consider a user who had previously subscribed to the WebmailSilverOffer offer see Section IV above which includes a one year webmail inbox service. If a year has passed or if the user indicates a desire to cancel the service then a deprovisioning request can be received to deprovision the service for the user.

In the example provisioning state diagram the sixth row indicates what tasks and actions are performed when receiving a request to deprovision a service a deprovisioning request when multiple instances of the service are currently provisioned for the user when the initial user state indicates that there are two or more current service instances for the user . In this situation the service is not removed for the user the Service Action because at least one service instance will remain after the deprovisioning event the user will still be a subscriber to the service . However once a service instance has been removed according to the deprovisioning event e.g. the deprovisioning event can indicate an identifier for the specific instance to be deprovisioned service properties for the remaining service instances will be reconciled the Property Action .

For example consider a user that is currently subscribed to the WebmailSilverOffer offer see Section IV above which includes the Service100 webmail service and currently subscribed to the Service100 webmail service e.g. WebmailSeparate not part of an offer and thus has two instances of the Service100 service provisioned. If the user then decides to cancel the WebmailSilverOffer offer this state row would apply. The service instance for Service100 corresponding to the WebmailSilverOffer offer would be removed and the service properties of the remaining instance would be reconciled. In this situation the properties of the one remaining service instance would be the new effective service properties the WebmailSeparate properties which include a 5 GB inbox . Importantly the user s webmail service Service100 is not completely removed when the user cancels the WebmailSilverOffer offer while the user still maintains subscriptions to other offers that include the service Service100 or the user is directly subscribed to the service. Instead the service properties of the remaining service instances are reconciled e.g. the user may receive a reduced level of service such as a 5 GB inbox instead of a 10 GB inbox .

In general service properties need to be reconciled in order to determine which properties to apply to use for a particular service for a particular user. When there is only one instance of a particular service e.g. when provisioning a service for a user where the service has not been provisioned previously for that user reconciliation is straightforward e.g. just apply the new service properties . However where one or more service instances already exist and another instance of the service is to be provisioned for the user reconciling service properties between the new instance and the existing or current instances can be more difficult. Similarly where multiple service instances exist and one of the instances is to be deprovisioned for the user reconciling service properties between the remaining instances can be more difficult.

In a specific implementation an algorithm represented by the following pseudo code is used to reconcile service properties to determine effective service properties. For example the algorithm can be implemented by a service provisioning system e.g. by the service provisioning system depicted in or the service syndication system depicted in . The algorithm can be implemented when a provisioning event occurs e.g. upon receiving a request to provision or deprovision a service for a user such as when changing state as indicated in the provisioning state diagram depicted in .

As illustrated by the above pseudo code a list of effective service properties PropertyList in the pseudo code are determined for each service that the user is subscribed to each service for which the user has one or more service instances . The effective service properties are created in the above pseudo code by adding properties that are not already present and otherwise including the property value with the greater weight e.g. reflecting the value that provides the best relative level of service . The resulting effective service properties are then sent according to the above pseudo code to the service provider that is providing the service.

At a provisioning request is received e.g. received by a service provisioning system from a program such as a go to market program a reseller etc. . The provisioning request comprises a request to provision a service e.g. represented by a unique service identifier for a user e.g. represented by a unique user identifier . In addition the provisioning request includes new service properties for the service. An example of a provisioning request is a request to provision a webmail service e.g. Service100 for a specific user e.g. User1234 and including specific service properties e.g. an Inbox property with a value of 20 GB and a weight of 100 and an Expire property with a value of Never and a weight of 100 . The provisioning request can be received as part of a request to provision an offer comprising multiple services or as a provisioning request to provision the individual service.

At service properties are reconciled to determine effective service properties. For example the new service properties from the provisioning request can be reconciled with current service properties. In some implementations the reconciling comprises obtaining service properties for one or more previously provisioned instances of the service for the user e.g. obtained by querying for the current service properties from a provisioning state database based on the user identifier and based on the obtained current service properties and the new service properties determining the effective service properties for the service.

At the effective service properties are applied. The effective service properties are those that will be used by the service provider when providing the service for the user.

In some implementations reconciling service properties to determine effective service properties comprises comparing values for the same property from multiple service instances using relative weights to determine which property value represents the best relative level of service.

At current service properties are obtained. For example current service properties can be obtained for one or more currently provisioned service instances. The current service properties can be obtained by a service provisioning system from a provisioning state database.

At new service properties are compared with current service properties. For example new values for service properties from a provisioning request can be compared with current values from one or more currently provisioned service instances for the service. Values of each specific service property can be compared to see which value represents the best relative level of service. For example the comparison can be performed using relative weights associated with the property values.

At the values representing the best relative level of service for each property are selected based on the comparison .

For example consider a new provisioning request to provision a webmail service with an inbox property value of 5 GB and a weight of 40 and current provisioned service instance of the webmail service with an inbox property value of 10 GB and a weight of 60. When the values of the inbox property are compared by comparing the relative weights of 40 and 60 the inbox property value representing the best relative level of service is selected as an effective property value in this example the property value of 10 GB is selected as an effective property value for the inbox property and the 5 GB property value is not selected and thus not currently applied to the service .

At a provisioning request is received e.g. received by a service provisioning system from a service provider . The provisioning request comprises a request to provision a service e.g. represented by a unique service identifier for a user e.g. represented by a unique user identifier . In addition the provisioning request includes new service properties for the service. An example provisioning request is a request to provision a webmail service e.g. Service100 for a specific user e.g. User1234 and includes specific service properties e.g. an Inbox property with a value of 20 GB and a weight of 100 and an Expire property with a value of Never and a weight of 100 .

At a new service instance representing the provisioning request is stored. The service instance can comprise a unique service identifier a unique user identifier and new service properties. The service instance can also comprise a unique offer identifier. The service instance can be stored in a provisioning state database by a service provisioning system.

At the new service instance is reconciled with one or more existing service instances for the same service. The reconciling is performed to determine effective service properties for the service. In order to reconcile the new and existing service instances properties of the service instances which may have different values for the same property are compared to determine which value represents the best level of service.

At effective service properties are determined based on the reconciling . The effective service properties are used applied for the service for the user.

A service syndication system a service provisioning system capable of supporting multiple internal and or external service providers provides centralized provisioning deprovisioning maintenance and storage solutions. The service syndication system provides the centralized solutions by supporting various service provisioning operations e.g. provisioning deprovisioning and maintenance service provisioning operations . For example the service syndication system receives requests e.g. service provisioning requests from programs and from internal service providers and external service providers . The service syndication system can use various types of computing devices e.g. server computers database servers networking devices and other types of computing devices to provide provisioning solutions.

The service syndication system is associated with a data repository storing offer and service data . The service and offer data includes information related to offers e.g. go to market offers and services e.g. individual services or collections of services related to an offer as well as service properties. For example the offer and service data can be stored according to the data schema described in Section IV above.

The service syndication system is also associated with a data repository storing provisioning state data . The provisioning state data includes information related to users and their associated service instances. For example the provisioning state data can be stored according to the data schema described in Section IV above.

Using the service syndication environment internal service providers and external service providers can provide services to their subscribers users while utilizing the service syndication system for storage of provisioning information e.g. offer service data and provisioning state data . In this way the internal and external service providers and do not have to maintain offer service data and provisioning state information themselves. Furthermore the centralized solution of the service syndication system allows subscribers to maintain a consistent identity e.g. the same user identity or account identity across multiple service providers.

For example consider a subscriber one of the subscribers that signs up for a webmail account service via one of the internal service providers or via one of the programs e.g. as part of a package of services of a specific go to market program . In order to provision the subscriber s webmail service the internal service provider or program would send a provisioning request to the service syndication system to provision the user s webmail service. The service syndication system would use the stored offer and service data to obtain offer and or service provisioning information e.g. the service could be the Service100 service of the WebmailSeparate offer as described in Section IV above . The service syndication system would store the service instance in the provisioning state data store . The service syndication system would also reconcile service properties if multiple service instances exist for the service e.g. for the Service100 service in the provisioning state data store . Once the service syndication system determines effective service properties it would send the effective service properties to the service provider providing the service e.g. to the internal service provider providing the Service100 webmail service .

The subscriber could also sign up for other offers that include the same service which could be centrally provisioned by the service syndication system . For example if the subscriber signs up for the WebmailGoldOffer offer as described in Section IV above through one of the external service providers or though one of the programs the external service provider or program would send a provisioning request to the service syndication system . The service syndication system would use the offer and service data store to obtain information regarding the offer and store one or more provisioning instances depending on the number of services in the offer in the provisioning state data store . In this example the service syndication system would store a second service instance for the Service100 service the first instance was the Service100 instance for the WebmailSeparate offer for the subscriber using the properties as defined in the WebmailGoldOffer offer. The service syndication system would reconcile the service properties across the two instances of the Service100 service e.g. the 5 GB and 20 GB inbox property values would be compared using their respective weights and the 20 GB value would be selected as the effective inbox property value . The service syndication system would send updated effective service properties to the service provider in charge of the Service100 webmail service in this example to one of the internal service providers .

The service syndication environment also supports external provisioning systems . Supporting external service provisioning systems allows service providers e.g. external service providers to use a provisioning solution other than the service syndication system for provisioning but still use the service syndication system for storage of provisioning information and reconciliation of service properties. For example an external service provider could provision a service for a subscriber using an external provisioning system and store e.g. via a provisioning state update application programming interface API the service instance at the service syndication system . Instances of the same service could also be provisioned directly via the service syndication system . Instances from both paths those coming from external provisioning systems and those coming internally can be centrally stored and reconciled at the service syndication system .

The computing environment is not intended to suggest any limitation as to scope of use or functionality of the technology as the technology may be implemented in diverse general purpose or special purpose computing environments. For example the disclosed technology may be implemented with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. The disclosed technology may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to the computing environment includes at least one central processing unit and memory . In this most basic configuration is included within a dashed line. The central processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power and as such multiple processors can be running simultaneously. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software that can for example implement the technologies described herein. A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus a controller or a network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs CD RWs DVDs or any other medium which can be used to store information and which can be accessed within the computing environment . The storage stores instructions for the software which can implement technologies described herein.

The input device s may be a touch input device such as a keyboard keypad mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio the input device s may be a sound card or similar device that accepts audio input in analog or digital form or a CD ROM reader that provides audio samples to the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium e.g. a connecting network to another computing entity. The communication medium conveys information such as computer executable instructions compressed graphics information or other data in a modulated data signal.

Computer readable media are any available media that can be accessed within a computing environment . By way of example and not limitation with the computing environment computer readable media include memory storage communication media not shown and combinations of any of the above.

Computer readable media are any available media that can be accessed within a computing environment . By way of example and not limitation with the computing environment computer readable media include memory and or storage . As should be readily understood the term computer readable storage media includes the media for data storage such as memory and storage and not transmission media such as modulated data signals.

In example environment various types of services e.g. computing services are provided by a cloud . For example the cloud can comprise a collection of computing devices which may be located centrally or distributed that provide cloud based services to various types of users and devices connected via a network such as the Internet.

In example environment the cloud provides services for connected devices with a variety of screen capabilities A N. Connected device A represents a device with a computer screen e.g. a mid size screen . For example connected device A could be a personal computer such as desktop computer laptop notebook netbook or the like. Connected device B represents a device with a mobile device screen e.g. a small size screen . For example connected device B could be a mobile phone smart phone personal digital assistant tablet computer and the like. Connected device N represents a device with a large screen. For example connected device N could be a television screen e.g. a smart television or another device connected to a television e.g. a set top box or gaming console or the like.

Services can be provided by the cloud through service providers or through other providers of online services not depicted . For example cloud services can be customized to the screen size and or display capability of the particular connected device e.g. connected devices A N .

In example environment the cloud provides the provisioning solutions described herein to the various connected devices A N using at least in part the service provisioning system . For example the service provisioning system can provide a centralized service provisioning solution for various cloud based services e.g. cloud based services provided by various service providers such as service providers . The service provisioning system can manage service subscriptions for users and or devices e.g. for the connected devices A N and or their respective users .

Instead of or in addition to the service providers and the service provisioning system services and provisioning solutions can be provided by the cloud using the service syndication environment .

The service provisioning techniques and solutions described in this application can be used in various combinations to provide more efficient management of service instances including service instances for overlapping services.

Any of the methods described herein can be performed via one or more computer readable media e.g. storage or other tangible media comprising e.g. having or storing computer executable instructions for performing e.g. causing a computing device to perform such methods. Operation can be fully automatic semi automatic or involve manual intervention.

Having described and illustrated the principles of our innovations in the detailed description and accompanying drawings it will be recognized that the various embodiments can be modified in arrangement and detail without departing from such principles. It should be understood that the programs processes or methods described herein are not related or limited to any particular type of computing environment unless indicated otherwise. Various types of general purpose or specialized computing environments may be used with or perform operations in accordance with the teachings described herein. Elements of embodiments shown in software may be implemented in hardware and vice versa.

In view of the many possible embodiments to which the principles of our invention may be applied we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto.

