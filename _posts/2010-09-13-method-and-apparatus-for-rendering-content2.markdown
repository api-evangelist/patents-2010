---

title: Method and apparatus for rendering content
abstract: An approach is provided for rendering content based on chunks and layers. A request is received to render content at a device. One or more layers of the content are determined. One or more patterns are determined corresponding to one or more of the layers. One or more chunks are determined based, at least in part, on the one or more patterns. At least one of the layers and corresponding one or more chunks are determined to be rendered separately from the other layers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09570046&OS=09570046&RS=09570046
owner: NOKIA TECHNOLOGIES OY
number: 09570046
owner_city: Espoo
owner_country: FI
publication_date: 20100913
---
Service providers and device manufacturers e.g. wireless cellular etc. are continually challenged to deliver value and convenience to consumers by for example providing compelling network services. One area of interest has been the development of services and technologies using web based applications. In particular service providers are developing content that can be displayed on devices e.g. via the web . However service providers and device manufacturers face significant challenges to providing content to users efficiently. For example some devices may have limited processing power and or bandwidth capabilities. As such these devices may be slow to retrieve and render content to present to a user. Such latency can lead to a negative user experience for users of a service and or device which may cost a service and or device manufacturer a customer.

According to one embodiment a method comprises receiving a request to render content at a device. The method also comprises determining one or more layers of the content. The method further comprises determining one or more patterns of the content corresponding to one or more of the layers. The method also comprises determining one or more chunks based at least in part on the one or more patterns. The method further comprises determining to render at least one of the layers and the corresponding one or more chunks separately from the other layers.

According to another embodiment an apparatus comprises at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to receive a request to render content at a device. The apparatus is also caused to determine one or more layers of the content. The apparatus is further caused to determine one or more patterns of the content corresponding to one or more of the layers. The apparatus is also caused to determine one or more chunks based at least in part on the one or more patterns. The apparatus is further caused to determine to render at least one of the layers and the corresponding one or more chunks separately from the other layers.

According to another embodiment a computer readable storage medium carries one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to receive a request to render content at a device. The apparatus is also caused to determine one or more layers of the content. The apparatus is further caused to determine one or more patterns of the content corresponding to one or more of the layers. The apparatus is also caused to determine one or more chunks based at least in part on the one or more patterns. The apparatus is further caused to determine to render at least one of the layers and the corresponding one or more chunks separately from the other layers.

According to another embodiment an apparatus comprises means for receiving a request to render content at a device. The apparatus also comprises means for determining one or more layers of the content. The apparatus further comprises means for determining one or more patterns of the content corresponding to one or more of the layers. The apparatus also comprises means for determining one or more chunks based at least in part on the one or more patterns. The apparatus further comprises means for determining to render at least one of the layers and the corresponding one or more chunks separately from the other layers.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

Examples of a method apparatus and computer program for rendering content based on layers and chunks are disclosed. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.

Content to be presented via scrolling on a user interface can utilize engines such as WebKit to render web pages. Default scrolling in WebKit copies pixels. This operation does not allow for fixed positioned elements. Thus WebKit is optimized for scrolling actions such as reading documents. Here WebKit is used to render each item to be presented separately. This may create a bottleneck. That is at some point during kinetic scrolling the scrolling would be faster than the amount of time it takes to render a single item. Further compositing each item e.g. image text icon etc. in a texture can have the same issue. A render and texture upload per item can create overhead that limits scrolling speed. As such the capability to provide information to a user can be hindered due to processing capabilities of a device used by the user.

To address this problem a system of introduces the capability to render content based on layers and chunks according to one embodiment. User equipment UEs can execute applications e.g. web browsers to present content. The content can be received via a communication network from a service platform . An application user interface UI can be utilized to present the content to a user of the UE . In certain scenarios the content is stored as service content in a database associated with the service platform .

A user can activate the application on the UE to browse content. As such the application can enter a state to render content associated with the application . The content can be split into layers e.g. a background layer a transformation layer a shading layer a list element clipping layer etc. . Further the content can be rendered based on chunks of content items. A chunk according to certain embodiments is a fragment of information. A chunk can include a set of data that can be processed e.g. by a processor a graphics processor etc. .

Moreover the content can be displayed via the application UI on the UE . The application UI can present the content via a viewport. In certain embodiments a viewport is a region e.g. a rectangular region in computer graphics. The viewport can be the visible portion of a graphical area that is larger than a display of the UE and is further detailed in .

When the UE determines to render the content to present to a user a processor or graphics processor can receive a request to render content. The one or more layers of the content can also be determined. For example the content can include a scrollable list with one or more background images associated with a first layer one or more images in a second layer scrolling list objects in a third layer and one or more foreground images in a fourth layer. Each layer can include chunks that can be utilized to render content as further shown in . One or more of the layers may include chunks that are associated with a pattern. This pattern can be determined and utilized in rendering that layer. Each of the layers can additionally be rendered separately and then combined to present the content via a viewport of the application UI .

When the chunks of the layers are rendered the chunks can be cached in a memory. Thus when a chunk is repeated according to a pattern the chunk can quickly be utilized. Further with the layer approach a background image need not be re rendered each time a new scrolling list item is presented.

The service platform can host the service content for the UEs . The content can be in the form of applications and or services implemented using web technologies. The service platform can provide an application programming interface to allow applications on the UEs to access the service content. In certain examples the service content includes one or more list objects. List objects can include one or more image items one or more text items one or more icons etc. For example the list objects can be associated with a contact list of the user. The contact list may include one or more images e.g. icons or photographs associated with each contact entry as well as textual information. The application programming interface can thus send content as information to the UE .

The UE can receive the content via the communication network and may store the content on the UE . At least a portion of the content is presented via the application UI . If there is more information associated with the content but not needed for immediate presentation in the application UI the UE can determine to retrieve the associated content retrieve the associated content when needed pre cache a portion of the associated content or a combination thereof.

The application can be a web application and or run via a web browser. As such a web application may include components e.g. objects functions data structures elements etc. written in one or more software languages such as JavaScript Java Hyper Text Markup Language HTML Extensible Markup Language XML a combination thereof etc. Moreover the web application may or may not utilize the Internet or web while executing. Further the web application can include software objects that are self contained collections of data. By way of example web applications may be based on standard web technologies e.g. web runtime WRT a web application runtime environment included in many browsers that serve as frontends or clients to web based content or other content.

The application may additionally utilize one or more software libraries to utilize hardware components of the UE . For example WebKit a layout engine to enable web browsers to render web pages can be utilized. WebKit provides a set of classes to display web content in windows. Hardware acceleration can be utilized via the accelerated compositing code path of WebKit. Accelerated compositing enables mapping certain elements on a web page into bitmaps. This can be enabled while maintaining painting order. Further the bitmaps can be moved and or transformed via the accelerated compositing. Additionally the accelerated compositing code can be utilized for mapping the bitmaps to hardware. Then the hardware e.g. graphics logic can render the bitmaps.

As previously noted one or more types of layers can be utilized in preparing the renderings. One such layer can include a list of scrollable items. This layer can act as a clipping layer that can be used to determine what information gets presented. Another layer can include one or more fixed images or easily used images. For example a small number or a fixed position background element and or foreground element can be utilized to provide customizations without need for re rendering for changes to other layers. Further a transformation layer can be utilized. In one example the content layer may include a HTML content div to transform content presentation. Further another layer can include chunks of items associated with the list. Other layers can include single items such as thumbnails that can be composited separately to their own texture.

Textures can be created by rendering the chunks. These chunks are then uploaded to graphics logic for presentation. A graphics memory can be utilized to buffer or cache the chunks. As such control logic e.g. a processor of a UE need not be involved with rendering content from which chunks are already stored in graphics memory. Further rendering chunks and then uploading the chunks as textures to the graphics memory can improve overhead costs of rendering and uploading multiple items.

By way of example the communication network of system includes one or more networks such as a data network not shown a wireless network not shown a telephony network not shown or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet short range wireless network or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network and the like or any combination thereof. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. worldwide interoperability for microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi wireless LAN WLAN Bluetooth Internet Protocol IP data casting satellite mobile ad hoc network MANET and the like or any combination thereof.

The UE is any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia computer multimedia tablet Internet node communicator desktop computer laptop computer notebook computer netbook computer tablet computer personal communication system PCS device personal navigation device personal digital assistants PDAs audio video player digital camera camcorder positioning device television receiver radio broadcast receiver electronic book device game device or any combination thereof including the accessories and peripherals of these devices or any combination thereof. It is also contemplated that the UE can support any type of interface to the user such as wearable circuitry etc. .

By way of example the UE and service platform communicate with each other and other components of the communication network using well known new or still developing protocols. In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols the packet includes 3 trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet its destination the length of the payload and other properties used by the protocol. Often the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks such as the Internet typically include a physical layer 1 header a data link layer 2 header an internetwork layer 3 header and a transport layer 4 header and various application headers layer 5 layer 6 and layer 7 as defined by the OSI Reference Model.

In one embodiment one or more UEs may interact according to a client server model with one or more service platforms . According to the client server model a client process sends a message including a request to a server process and the server process responds by providing a service e.g. access to content . The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices called hosts and communicate via a network using one or more protocols for network communications. The term server is conventionally used to refer to the process that provides the service or the host computer on which the process operates. Similarly the term client is conventionally used to refer to the process that makes the request or the host computer on which the process operates. As used herein the terms client and server refer to the processes rather than the host computers unless otherwise clear from the context. In addition the process performed by a server can be broken up to run as multiple processes on multiple hosts sometimes called tiers for reasons that include reliability scalability and redundancy among others.

The power module provides power to the UE . The power module can include any type of power source e.g. battery plug in etc. . Additionally the power module can provide power to the components of the UE including processors memory and transmitters. Further the power module can be utilized to determine processing power of the UE e.g. when the UE operates utilizing a battery . As such the power module can monitor the consumption of power.

The communication interface can be used to communicate with the service platform as well as other UEs and devices connected to the communication network . Certain communications can be via methods such as an internet protocol messaging e.g. Short Message Service SMS Multimedia Messaging Service MMS etc. or any other communication method e.g. via the communication network . Further the communications between the UE and the communication network may be via a wireless means e.g. UE or a wired means e.g. UE .

The user interface can include various methods of communication. For example the user interface can have outputs including a visual component e.g. a screen an audio component a physical component e.g. vibrations and other methods of communication. User inputs can include a touch screen interface a scroll and click interface a button interface a microphone etc. Input can be via one or more methods such as voice input textual input typed input typed touch screen input other touch enabled input etc. In certain embodiments the user interface control logic and or graphics logic can be means for presenting information to the user of the UE .

The control logic and memory can be utilized to execute an application . The application can utilize an application UI that can be presented via the user interface . As previously noted a viewport of the user interface can be associated with the presentation. The viewport can thus be utilized to present layers of content. Each of these layers can be associated with one or more chunks that can be separately rendered by the graphics logic and or control logic . The chunks can be stored in memory and be cached to enable a more responsive presentation. Further the chunks can be pre cached based on one or more associations of a region of chunks and the viewport as further detailed in . By utilizing chunks for rendering in certain embodiments the graphics logic can be utilized for more of the processing and rendering of content items allowing for control logic to perform other processes.

In certain embodiments more than one type of memory can be used. For example a main memory can be associated with the control logic while another specialized memory can be associated with the graphics logic . This specialized memory can be used as a cache for rendered content to be presented via the user interface .

Layer can represent other content such as text associated with the content. The text associated with one or more items can be rendered as a single chunk. For example chunks in layer can be rendered according to a particular size range e.g. a number of pixels . By rendering chunks instead of separate items e.g. each line of text less overhead processing e.g. headers footers error checks etc. is needed because multiple items are combined. Thus one chunk of ten items can require less processing than ten separate items.

Other layers such as layer can include chunks of a different size. Layer shows multiple chunks available on the viewport . Chunk size can depend on one or more criteria. For example the chunk size can be predetermined based on a content type e.g. graphics text etc. based on processing required per chunk or the like.

Further layer shows a foreground layer. Layer in certain scenarios need only be rendered once and then combined with the other layers . The foreground layer as with any layer can include one or more user interface elements that can be interactive. For example the layer may include a button that can be selected to perform an interaction. Under certain scenarios the layers can be blended together for presentation via the viewport utilizing the graphics logic and or control logic . The layering and chunking architecture can be utilized to offload processes from the control logic to the graphics logic by generating the chunks and having the chunks rendered using the graphics logic . Further examples of the layers are detailed in . Moreover chunks in layer can be smaller in size because of more complex content.

A user can scroll through the content by entering input e.g. via a touch screen associated with the user interface of the UE . When scrolling occurs the background layer and foreground layer can be rendered once and presented while other layers change in accordance to content scrolling. Thus different chunks can be presented via the viewport based on the scrolling.

This example shows content from the view of a Y axis and a Z axis. However it is contemplated that the content can be viewed in multiple dimensions. Further the chunks can be structured in multiple directions. As such a user of the UE viewing via a viewport can scroll through the content in multiple directions.

When the content is rendered for presentation the items associated with each layer are formed into chunks. These chunks can be cached for each layer. As such while scrolling chunks can be reused when repeated e.g. in the case of a pattern in the layer and or when reused e.g. when the user scrolls back .

In certain embodiments chunks can be associated with one or more scroll ranges. For example each chunk can be responsible for a particular scroll range associated with a layer of content. In certain scenarios background and foreground layers may not require a scroll range because the layer has a fixed image. Further in certain scenarios the chunks can be associated with a pattern according to the scroll range. For example every other chunk may be the same. A scroll range can be determined based on the content. For example an HTML page can include scrolling parameters. Further content available on the viewport can be based on a particular scroll range and the content available through that viewport.

At step the control logic receives a request to render content at the UE . The render request can be based on an application executing on the control logic and or other remote and domestic applications and or services. Further the request can be based on a received input e.g. from a user specifying a portion of the content for display. In certain scenarios this input can occur from user browsing. When the user to content larger than a screen associated with the UE the user can scroll or pan the screen to view additional portions of the content. Thus the user can specify the portion of the content for presentation via the screen. In certain scenarios the user can utilize a touch enabled interface to scroll through the content. Additionally in some embodiments the content can represent a scrollable list of a plurality of items e.g. contact list names contact list images grocery list text grocery list images backgrounds foregrounds selectable icons etc. .

Then at step the control logic determines one or more layers of the content. This determination can be based on a predefined structure from which the content is stored. One or more cues e.g. flags pointers identifiers scroll location etc. can be used to determine which layer a particular content item is associated with. Further the cues may be utilized to notify the application of one or more chunks associated with content. These cues can also be used to determine one or more patterns of the content corresponding to one or more of the layers step . The patterns can be determined based on whether or not a particular chunk is associated with a particular portion of the content.

Thus one or more chunks can be determined based at least in part on the one or more patterns step . Each chunk can correspond to a particular area on a bitmap associated with the content. When the chunks are duplicated according to the pattern or other criteria e.g. based on an identifier the chunks can be presented with less processing. This can occur if for example the chunk is reused according to the pattern. In this scenario the pattern can be repeatable according to a geometry based pattern. For example a rule for the pattern may state that every other chunk in a particular layer is shaded the color blue and the other chunks are shaded green. As such chunks for these locations need only be rendered based on items one time and stored in a cache. Then the chunks can be utilized for display instead of re rendering the items from scratch. In other scenarios the chunks can be determined based on criteria and or identifiers instead of a pattern. For example the reuse of the chunks can be based on an algorithm.

At step the control logic determines to render at least one of the layers and the corresponding one or more chunks separately from the other layers. The rendering can occur at the control logic the graphics logic or a combination thereof. Each layer can be rendered according to its corresponding chunks. Then the control logic and or graphics logic can be utilized to combine and cause presentation of the portion of the content associated with the chunks e.g. a portion associated with a viewport via a display. One or more of the chunks are cached at a rendering engine e.g. via a cache memory .

Another input can be received specifying a scrolling of the viewport to display another portion of the content. The scrolling can be associated with a scroll range. The scroll range can be utilized as a cue in determining repeating chunks and are further detailed in . The control logic and or graphics logic can determine a set of items within the scroll range and determine one or more chunks based on the set of items. Thus one or more chunks can be based at least in part on the input. Chunks need not be re rendered from the items if the chunks within the scroll range are stored in the cache. As such the control logic and or graphics logic can determine to recycle the chunks for the rendering of the portion of the content and or subsequent renderings of the content.

The user can start an application on the user s UE and navigate to scrollable content. The content can be presented via a viewport that can scroll through the content. As such the content can be presented in an idle state in which no input is being received by the user step .

Then the control logic receives scroll intent. The scroll intent can be received as part of an input from the user. The scroll intent can be represented by a request to scroll or pan the viewport to view another portion of content. Input can be received in the form of a touch screen gesture a click on an associated scroll bar or scroll arrow a scroll wheel input etc.

Then at step the control logic determines a scroll range associated with the new scroll intent. The content can be mapped to areas using one or more identifiers e.g. a grid . The scroll range can be a portion of the content that is viewable in the viewport. Further the scroll range can be multidimensional. For example the user may be able to scroll in the X direction and the Y direction in a display.

For each layer the control logic determines whether the current chunks that have been rendered are within the scroll range step . This may occur if for example a rendered chunk is partially presented and another portion of the chunk is presented due to the scroll intent. In this scenario the same chunk can be reused with a different portion displayed on the viewport. Further in certain scenarios the control logic determines what chunks that are within the scroll range are missing.

If one of the chunks is not within the range and or another chunk has entered the scroll range for the layer the contents are updated for the missing chunks step . As such new chunks that have not yet been rendered can be rendered for presentation. In certain scenarios the complexity e.g. the amount of detail rendered can be varied based on a scrolling speed associated with the scroll intent. For example a quick scroll may include a presentation of less detailed chunks initially and then add more detail if the scroll speed slows or is stopped. In certain scenarios chunks can be replaced when more detail is rendered. This replacement chunk can be stored in a cache and retrieved at a later time to present. As such the replacement chunk can be utilized in scrolling at fast speeds because it is already cached. Once the layer has been processed the next layer is processed step . The processing may additionally be accomplished in parallel e.g. via one or more processors and or graphics logic . Once the layers are processed the complete presentation is rendered e.g. by the graphics logic . Then the control logic can determine to present the content on a display via the viewport step .

A second image layer can include a pattern of alternating imaging schemes. A first image chunk can be associated with shading that is to be viewed as on top of the background image layer. A second chunk may include shading that is to be viewed as clear to allow for the background image layer to show through. The shading scheme can be alternating according to criteria and or a pattern.

A third image layer can include text associated with a list. The text can be formed into a chunk that includes multiple text items. In the case of the user interface one or more contact information text can be grouped into a chunk. For example a chunk can be greater than the size of the viewport include a single row of text or include multiple rows of text. Further icons can be rendered in a separate fourth image layer. These icons may be more complex than the text. As such it may be beneficial to limit the size of the chunks to fewer numbers of icons or single icons. Additionally or alternatively the text layer and icon layer may be combined into a single layer of chunks.

Additionally a fifth layer can include a foreground image . The foreground image can be placed on top of other images associated with other layers. Further the foreground layer can be rendered once and displayed without need for re rendering. Additionally foreground image and or any other images or chunks may be interactive. For example when a user selects contact FOO a contact user interface may be shown. shows a simple foreground image however it is contemplated that additional types of foreground images such as a navigation bar e.g. a navigation bar across the top of the viewport logos etc. can be presented. Further more than one chunk and or image item can be utilized in one or more foreground layers.

With the above approaches chunks of items can be processed in layers to allow for rendering of fixed elements to occur less often. As such other items can be rendered in chunks. This approach allows for devices with powerful graphics logic to utilize the processing power of the graphics logic to remove a bottleneck from using control logic. This bottleneck can occur if software is partially or fully used to render parts of presentable content. Further because chunks are utilized graphical operations e.g. setting font parameters in text chunks can be optimized across the chunk. When chunks are reused the chunks need not be re rendered saving rendering and overhead costs.

The processes described herein for rendering content may be advantageously implemented via software hardware firmware or a combination of software and or firmware and or hardware. For example the processes described herein may be advantageously implemented via processor s Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. Such exemplary hardware for performing the described functions is detailed below.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor or multiple processors performs a set of operations on information as specified by computer program code related to render content. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or any other dynamic storage device stores information including processor instructions for rendering content. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or any other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for rendering content is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT a liquid crystal display LCD a light emitting diode LED display an organic LED OLED display a plasma screen or a printer for presenting text or images and a pointing device such as a mouse a trackball cursor direction keys or a motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of ASICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection to the communication network for UE .

The term computer readable medium as used herein refers to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to computer readable storage medium e.g. non volatile media volatile media and transmission media. Non transitory media such as non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example twisted pair cables coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM an EEPROM a flash memory any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or any other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to rendering content. The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of rendering content. The display includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like or any combination thereof.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone any other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal to render content. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage magnetic disk storage flash memory storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

