---

title: Combining user feedback
abstract: Obtaining search results responsive to a query, each search result identifying a respective resource and each resource having a respective rank determined by a primary ranking algorithm. The method includes obtaining primary user feedback data and secondary user feedback data for the resource. The primary and secondary user feedback data representing previous user interactions with the resource when the resource was presented as a search result responsive to the query. The method also includes applying a weight to the secondary user feedback data, the weight being at least partially based on a threshold quantity of the primary user feedback data. The method also includes aggregating the primary user feedback data and the weighted secondary user feedback data and modifying the respective rank of the resource as a search result for the query based at least partially on the aggregated data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08832083&OS=08832083&RS=08832083
owner: Google Inc.
number: 08832083
owner_city: Mountain View
owner_country: US
publication_date: 20100723
---
This specification relates to digital data processing and in particular to ranking of search results.

Internet search engines provide information about Internet accessible resources e.g. web pages images electronic books text documents sounds music videos electronic games and multimedia content by returning search results in response to queries. A search result includes for example a Uniform Resource Locator URL and a snippet of information for resources responsive to a query. The search results can be ranked i.e. put in an order according to scores assigned to the search results by a scoring function. The scoring function ranks the search results according to various signals for example where and how often query terms appear in the search results and how common the query terms are in the search results indexed by the search engine.

Particular embodiments of the subject matter described in this specification can be implemented so as to realize one or more of the following advantages. The quality of search results may be improved. Quality metrics from one search engine may be used to improve the ranking of search results for another search engine. Fresh content from video property could get chance to surface on web search engine which serves large volume of pages from variety of properties. The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

Each search result can include summary information such as a representative frame from the video e.g. frame the video s title e.g. title a textual summary e.g. synopsis the running time of the video e.g. time data and a Uniform Resource Locator URL or other identifier specifying the location of the video e.g. identifier . In some implementations time data includes the duration of the video and the date on which the video was uploaded. Other search result information is possible. A video may be stored at the location e.g. identifier in a portion of a file that holds other content in a single file dedicated to the video in question or in multiple coordinated files. A video may but need not correspond to a file. A user can select a search result e.g. frame or identifier with a mouse click a finger gesture on a touch sensitive surface a speech command to a microphone or by way of another input device for example in order to view the video identified by the search result.

Search results can be ranked according to traditional techniques for determining an information retrieval IR score for indexed resources in view of a given query for example. The relevance of a particular resource with respect to a particular search term or other provided information may be determined by any appropriate scoring technique. The score of the resource can be modified based on prior interactions of users with the resource in view of the given query.

In various implementations a system described below with reference to maintains user feedback data including user ratings watch times view counts and other data. User interactions with a video are logged. For example the amount of time a user plays the video is logged as a watch time for the video. In some implementations the watch time is the total time the user spent watching the video before navigating off of the web page. The watch time can be unaffected by whether the user watched portions of the video out of sequence or skipped portions. If the watch time for a video is not known e.g. because the video is not hosted by a system that keeps track of user watch times the watch time can be estimated based on when users navigate off of the web page for the video. For example a web browser plug in or other software can monitor when users navigate off of web pages and record this information. If the system hosting the video does not programmatically provide a view count for the video e.g. through an application programming interface the view count can be detected by a plug in or other software that analyzes the web page for text indicating the view count.

User feedback data can also include user interaction counts targeted interaction counts and impression counts. As used herein a user interaction represents users selections e.g. clicks with a mouse of search results that reference resources e.g. videos or web pages . A targeted interaction represents a user interaction where the time duration the user interacts with the resource referred to by selected search result satisfies a threshold e.g. the time duration is greater than a threshold or less than a threshold . For example for videos a targeted interaction can be a user interaction where the watch time exceeds a threshold e.g. one minute . For a web page targeted interactions can be user interactions where a period of time beginning when a user selects a search result from a search web page and ending when the user returns to the search web page exceeds a threshold e.g. thirty seconds one minute two minutes five minutes . An impression is a presentation of a search result that references a resource. In some implementations an impression is limited to presentations of a search result identifying the resource where the search result is ranked among the top search results for the query e.g. in the top twenty search results on the first page of search results .

Several quality metrics may be determined based on user interactions and targeted interactions. For example the number of targeted interactions for a resource may be divided by the number of impressions of the resource. Another quality metric may be calculated by dividing the count of the number of targeted interactions for the resource by the number of targeted interactions with any resource responsive to the query. Examples of quality metrics include a traditional quality metric a targeted interaction quality metric and an impressions quality metric.

Where the TQM represents a traditional quality metric. TIis the number of targeted interactions for a particular resource responsive to a query. TI is a targeted interaction for any resource responsive to the same query.

Where the TiQM represents the Targeted Interactions Quality Metric TI is the number of targeted interactions for a particular resource. I is the number of user interactions with the resource.

Where IMPQM represents the impressions quality metric TI is the number of targeted interactions for a particular resource. IMP is the number of impressions of the resource.

A user interacts with the system through a client device or other device. For example the client device can be a computer terminal within a local area network LAN or wide area network WAN . The client device generally includes a random access memory RAM or other memory and or a storage device and a processor . The processor is structured to process instructions on the client device . The processor is a single or multi threaded processor having one or more processor cores for example. The processor is structured to process instructions stored in the RAM or other memory and or a storage device included with the client device to display graphical information for a user interface.

The RAM on the client device includes a tracker software program for keeping track of user interactions and targeted interactions. For example in the case of video resources the tracker program can maintain a count of views watch times and user ratings of videos on the client device . The tracker can send the tracked data as a client side signal into the network e.g. the Internet or other network . The data is forwarded to an analysis system as a signal . The analysis system generally includes a RAM or other memory and or a storage device and a processor . The processor is structured to process instructions on the analysis system . The processor is a single or multi threaded processor having one or more processor cores for example. The RAM includes an analyzer software program for analyzing the tracking data in order to derive or update predictor and voting functions. The tracking data can be stored in one or more tracking logs which are used to record the collected information for multiple users and resources. In various implementations the recorded information includes log entries that indicate the IP Internet Protocol address of the client which transmitted the information the type of data e.g. view count watch time user rating time durations for targeted interactions and a value for the data.

A user connects to the search engine within a server system to submit a query. When the user submits the query through an input device attached to a client device a client side query signal is sent into the network and is forwarded to the server system as a server side query signal . Server system can be one or more server devices in one or more locations. A server system includes a memory device which can include the search engine loaded therein. A processor is structured to process instructions within the device . These instructions can implement one or more components of the search engine . The processor can be a single or multi threaded processor and can include multiple processing cores. The processor can process instructions stored in the memory related to the search engine and can send information to the client devices through the network to create a graphical presentation in a user interface of the client device e.g. a search results web page displayed in a web browser .

The server side query signal is received by the search engine . The search engine uses the information within the user query e.g. query terms to find relevant resources e.g. web pages videos . The search engine can include an indexing engine that actively searches a corpus e.g. web pages on the Internet to index the resources found in that corpus and the index information for the resources in the corpus can be stored in an index database . This index database can be accessed to identify resources related to the user query. Note that a resource does not necessarily correspond to a file. A resource can be stored in a portion of a file that holds other resources in a single file dedicated to the resource in question or in multiple coordinated files. Moreover a resource can be stored in a memory without having first been stored in a file.

The search engine includes a ranking engine to rank the resources related to the user query using a scoring or ranking algorithm. The ranking of the resources can be performed using traditional techniques for determining an information retrieval IR score for indexed resources in view of a given query for example. The relevance of a particular resource with respect to a particular search term or to other provided information may be determined by any appropriate technique.

To further improve such traditional resource ranking techniques the ranking engine receives quality signals from a quality rank modifier engine to assist in determining an appropriate ranking for search results. As discussed above in some implementations the quality rank modifier engine calculates the quality signal using a quality metric calculated from user feedback data stored in tracking logs .

The search engine forwards the final ranked result list within a server side search results signal through the network . Exiting the network a client side search results signal is received by the client device where the results are stored within the RAM and or used by the processor to display the results on an output device for the user . The server system may also maintain one or more user search histories based on the queries it receives from a user and which results that a user selected after a search was performed.

In this example the video search system provides video search results Palm Tree Removal Pruning Palm Trees and Tree Plant Care Palm Trees in response to receiving a query palm tree as shown by the text in the search text area on the user interface . The video search system provides links to the videos as part of the search results. Based on the ranking algorithm used by the first search system and on user feedback data maintained by the analyzer system Pruning Palm Trees is displayed first i.e. has the highest rank Palm Tree Removal is displayed second i.e. has the second highest rank and Tree Plant Care Palm Trees is displayed third i.e. has the third highest rank .

The web search system provides a wider variety of resources as search results responsive to receiving the same query palm tree as shown by the text entered into the search text area on the user interface . The search results from the web search system include the video search result Tree Plant Care Palm Trees in addition to links to assorted web pages and images .

Based on the ranking algorithm used by the second search system and user feedback data maintained by the analyzer system the search system ranks Tree Plant Care Palm Trees highest.

The difference in the order of search results between the two search systems in this example is based at least in part on differences in the user feedback data in the video search system and user feedback data in the web search system . These differences may be caused by many factors both legitimate and idiosyncratic. For example typical users of the video search system may have different interests than typical users of the web search system. The video search system may be a less popular fall back search system when compared to the Web search system therefore many of the users who search on the video search system have already explored the videos provided in the Web search system. The video search system may have only a few users therefore the preferences of a few individual may disproportionately affect the user feedback data when compared to a larger user population of the Web search system.

Generally primary user feedback data refers to user feedback data from the search system performing the ranking and secondary user feedback data refers to user feedback data taken from another search system. In some implementations the quality rank modifier engine combines primary user feedback data for a given video with the secondary user feedback data. The quality rank modifier engine creates a combined quality metric from the combined user feedback data.

In some scenarios the secondary user feedback data may contain significantly more data than the primary user feedback data . The difference in the quantity of user feedback data presents a risk of bias. The secondary user feedback data could dominate the combined quality metric . The unique interests of users of the primary video search system would be discounted. To prevent the secondary user feedback data from overwhelming the primary user feedback data a weight is applied to the secondary user feedback data. The weight is based on the primary user feedback data and a smoothing factor. The smoothing factor identifies a threshold quantity of primary user feedback data. As the amount of primary user feedback data approaches the smoothing factor the weight of the secondary user feedback data decreases. When the primary user feedback data is equal to or greater than the smoothing factor the secondary user feedback data no longer affects the combined quality metric. In this way the smoothing factor provides a threshold quantity of primary user feedback data above this threshold the secondary user feedback data is not used.

In some implementations as an optimization the combined quality metrics are not calculated when the quantity of primary user feedback data is greater than the smoothing factor.

In some implementations the smoothing factor is selected to balance the risk of bias with the benefits of utilizing the secondary user feedback data. On the one hand the users of the different systems have different preferences which should be respected. On the other hand a small quantity of primary user feedback data allows individuals to skew video search results based on their idiosyncratic preferences. If the smoothing factor is too large then the secondary user feedback data can overwhelm the primary user feedback data ignoring legitimate differences. If the smoothing factor is too small then the secondary user feedback data is underutilized resulting in search results being skewed by the idiosyncrasies of a small number of users.

To achieve balance the smoothing factor is based in part on the quality metric being calculated. For example the smoothing factor for the traditional quality metric may be different from the smoothing factor for the targeted interactions quality metric. For example when utilizing secondary feedback data from a video search system the smoothing factor for the traditional quality metric can be 25 the smoothing factor for the targeted interaction quality metric can be 10 000 and the smoothing factor for the impression quality metric can be 0. Other smoothing factors are possible.

The smoothing factor is also based in part on the source of the secondary user feedback data. For example the smoothing factor applied to user feedback data from a general Web search system may be different from the smoothing factor applied to the user feedback data from a dedicated video search system. In some embodiments the smoothing factor may be customized for specific video search systems. For example when utilizing secondary feedback data from a general Web search system the smoothing factor for the traditional quality metric can be 0. The smoothing factor for the targeted interaction quality metric may be 10 000. The smoothing factor for the impression quality metric can be 0. Other smoothing factors are possible.

In one implementation user feedback data from search systems that have different ranking algorithms can be combined into a combined quality metric based on the following calculations.

where n represents a measure of targeted interactions with the resource and d represents a measure of a larger set of user feedback for example all user interactions with the resource targeted interactions with any resource provided as a search result or impressions of the resource.

In some implementations the weight applied to the secondary user feedback data is determined based on the following formula 

where weight represents the weight smooth is the smoothing factor dis the size of the larger population of primary user feedback data and dis the size of the larger population of secondary user feedback data. The function min calculates to the minimum value of two arguments and max calculates to the maximum value of two arguments. By decreasing the weight as the larger population of primary user feedback data increases the risk of bias is managed. Secondary user feedback data is only relied upon when insufficient primary user feedback data exists to exceed the smoothing factor.

Where cqm is the combined quality metric nis the number of targeted interactions from the primary user feedback data nis the number of targeted interactions from the secondary user feedback data weight is the calculated weight d1 is the size of the larger population of primary user feedback data and d2 is the size of the larger population of secondary user feedback data.

The process obtains search results . Search results may be obtained from a search system for example the index engine of . In general search results are obtained which are responsive to a query. The search results are provided a score based on a ranking algorithm.

The process obtains primary user feedback data . The primary user feedback data represents interactions previous users of the system have had with the search result. For example the primary user feedback data may include the number of targeted interactions the number of user interactions and the number of impressions. The primary user feedback data may also include user feedback data for other videos for example the number of targeted interactions for any video responsive to the query.

The process obtains secondary user feedback data . The secondary user feedback data is user feedback data provided from a second search system. The secondary user feedback data represents interactions previous users of the second search system have had with the search result. For example the secondary user feedback data may include the number of targeted interactions the number of user interactions and the number of impressions. The secondary user feedback data may also include user feedback data for other videos for example the number of targeted interactions for any video responsive to the query.

The process applies a weight to the secondary user feedback . The weight applied to the secondary user feedback may be determined based on a smoothing factor the primary user feedback data and the secondary user feedback data. In general the larger the sample size of primary user feedback the smaller the weight applied to the secondary user feedback. For example if the primary user feedback data contains a small sample set the secondary user feedback has greater weight than if the primary user feedback contains a larger sample set.

The process aggregates the primary and secondary user feedback data . The process calculates combined user feedback data based on the primary user feedback data the secondary user feedback data and the weight.

Each module runs as part of the operating system on the server runs as an application on the server or runs as part of the operating system and part of an application on the server for instance. Although several software modules are illustrated there may be fewer or more software modules. Moreover the software modules can be distributed on one or more data processing apparatus connected by one or more networks or other suitable communication mediums.

The server also includes hardware or firmware devices including one or more processors one or more additional devices a computer readable medium a communication interface and one or more user interface devices . Each processor is capable of processing instructions for execution within the server . In some implementations the processor is a single or multi threaded processor. Each processor is capable of processing instructions stored on the computer readable medium or on a storage device such as one of the additional devices . The server uses its communication interface to communicate with one or more computers for example over a network . Examples of user interface devices include a display a camera a speaker a microphone a tactile feedback device a keyboard and a mouse. The server can store instructions that implement operations associated with the modules described above for example on the computer readable medium or one or more additional devices for example one or more of a floppy disk device a hard disk device an optical disk device or a tape device.

Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be or be included in a computer readable storage device a computer readable storage substrate a random or serial access memory array or device or a combination of one or more of them. Moreover while a computer storage medium is not a propagated signal a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be or be included in one or more separate physical components or media e.g. multiple CDs disks or other storage devices .

The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer readable storage devices or received from other sources.

The term data processing apparatus encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer a system on a chip or multiple ones or combinations of the foregoing The apparatus can include special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit . The apparatus can also include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system a cross platform runtime environment a virtual machine or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures such as web services distributed computing and grid computing infrastructures.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine object or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a Global Positioning System GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few. Devices suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN an inter network e.g. the Internet and peer to peer networks e.g. ad hoc peer to peer networks .

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. In some embodiments a server transmits data e.g. an HTML page to a client device e.g. for purposes of displaying data to and receiving user input from a user interacting with the client device . Data generated at the client device e.g. a result of the user interaction can be received from the client device at the server.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any inventions or of what may be claimed but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous.

