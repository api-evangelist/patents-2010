---

title: Network address translation type for flexible neighbor selection in overlay networks
abstract: An overlay network uses flexible neighbor selection based on network address translation (NAT) to define routing between nodes. The NAT type is used as a flexible neighbor selection criteria, either alone or in conjunction with other criteria. A method of selecting a neighboring node for a first node in a distributed hash table network includes determining a desired key value for a node finger table entry and requesting a set of candidate neighboring nodes near this desired key value. The method determines a network address translation type of each of the set of candidate neighboring nodes and ranks the set of candidate neighboring nodes accordingly. The method selects one of the set of candidate neighboring nodes based on the ranking. The NAT types of candidate neighboring nodes are determined by sending probe messages or from data received from a central overlay network server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08041835&OS=08041835&RS=08041835
owner: Sony Computer Entertainment Inc.
number: 08041835
owner_city: Tokyo
owner_country: JP
publication_date: 20100426
---
This application is a continuation of U.S. patent application Ser. No. 11 839 241 filed Aug. 15 2007 entitled Network Address Translation Type for Flexible Neighbor Selection in Overlay Network which claims priority to U.S. Provisional Patent Application No. 60 913 779 entitled Network Address Translation Type for Flexible Neighbor Selection in Overlay Network filed Apr. 24 2007 each of which is hereby incorporated herein by reference.

The invention relates to the field of data networks and in particular to peer to peer overlay networks. Peer to peer networks are distributed data networks without any centralized hierarchy or organization. Peer to peer data networks provide a robust and flexible means of communicating information between large numbers of computers or other information devices referred to in general as nodes.

An overlay network is a logical or virtual network organization that is imposed on nodes connected by one or more types of underlying physical network connections. In an overlay network nodes are connected by virtual or logical links each of which can correspond with one or more paths in an underlying physical network. Overlay networks are typically implemented in hardware and or software operating in the application layer or other top level layer of an OSI network stack or other type of networking protocol.

One class of peer to peer overlay networks is referred to as distributed hash table overly networks. Distributed hash table overlay networks use a hash function to generate and assign one or more key values to a unique node. The set of all possible key values is referred to as a hash space. Nodes are organized in the hash space according to their assigned key values. The hash function is selected so that nodes are approximately evenly distributed throughout the hash space. Distributed hash table overlay networks are typically highly scalable often supporting millions of nodes robust allowing nodes to join or leave frequently and efficient routing a message to a single destination node quickly.

There are numerous different types of distributed hash table overlay networks. One type of peer to peer overlay network is a chord network. The chord overlay network protocol is described in detail in Chord A Scalable Peer to peer Lookup Protocol for Internet Applications Ion Stoica Robert Morris David Liben Nowell David R. Karger M. Frans Kaashoek Frank Dabek Hari Balakrishnan Vol. 11 No. 1 pp. 17 32 February 2003.

Distributed hash table overlay networks such as Chord create finger tables for each node that specify neighboring nodes in the overlay network. Neighboring nodes typically have a hash or key value offset from the current node by a predetermined amount. Distributed hash table overlay networks such as Chord route data traffic by forwarding information through a sequence of one or more neighboring nodes until the data traffic reaches its intended destination.

Typical distributed hash table overlay networks create finger tables for each node by determining a desired destination key value for each finger table entry. The overlay network then selects the node with a key value closest to the desired destination key value as the neighboring node. For example if a first node with a key value of 17 needs a neighboring node with a key value of approximately 33 the overlay network may select a second node with a key value 31 as the neighboring node.

In other distributed hash table overlay networks flexible neighbor selection allows the overlay network to select any node within a specific range of the desired destination key value as the neighboring node. For example if a first node with a key value of 17 needs a neighboring node with a key value of approximately 33 the overlay network may select a second node with a key value 31 or a third node with a key value of 27 as the neighboring node. Neighboring nodes can be selected using different criteria such as round trip time node capabilities node bandwidth network quality of service and security.

It thus is desirable for an overlay network to select neighboring nodes using a criteria that is indicative of the nodes networking capabilities so as to optimize the overall performance of the overlay network.

Systems and methods in accordance with various embodiments of the invention include overlay networks that use flexible neighbor selection based on at least network address translation NAT to define routing between nodes. In one such embodiment the number and type of NATs between nodes is recognized as a substantial contributor to network delays and connection difficulties. Using NAT type as a flexible neighbor selection criteria either alone or in conjunction with other criteria nodes with more restrictive NAT can be assigned less critical and or less bandwidth intensive roles in the overlay network while nodes with less restrictive or no NAT are assigned more critical and or more network bandwidth intensive roles.

In an embodiment a method of selecting a neighboring node for a first node in a distributed hash table network includes determining a desired key value for a node finger table entry and requesting a set of candidate neighboring nodes. The method determines a network address translation type of each of the set of candidate neighboring nodes and a ranking of the set of candidate neighboring nodes. The ranking is based at least in part on the network address translation type of each of the set of candidate neighboring nodes. The method selects one of the set of candidate neighboring nodes based on the ranking and attempts to establish a connection with the selected candidate node. If the connection is successful a reference is added to the first node s finger table entry.

In a further embodiment the ranking is further based at least in part on the network address translation type of the first node. In an embodiment the network address translation types of candidate neighboring nodes are determined by sending probe messages to candidate neighboring nodes and analyzing network traffic. In another embodiment the network address translation types of candidate neighboring nodes are determined from data received from a central overlay network server.

The nodes of the overlay network are arranged by their assigned key values in the hash space or set of all possible key values. In the hash space is shown as a ring configuration of all possible key values from 0 to 2 with N being the number of bits allocated for a key value. In some implementations N equals 160 bits which is the size of the output of typical hash functions such as SHA 1 and is sufficiently large to avoid hash collisions. In this implementation the chord overlay network supports up to 2nodes and a typical chord overlay network can include millions of active nodes. Other implementations can use more or less hash bits.

In some implementations each node is assigned a key value randomly. In some implementations each node is assigned a key value based upon the results of a hash function of one or more attributes of the node. The hash function is selected so that nodes are approximately evenly and substantially randomly distributed throughout the hash space . In additional implementations the assignment of key values to nodes is based at least in part on the topology of the underlying physical network. In these implementations nodes are distributed approximately evenly throughout the hash space however the overlay network can attempt to utilize a minimal number of hops to a destination node in the hash space of the overlay network in order to conserve network resources.

Based upon the arrangement of nodes in the hash space each node includes a reference to one or more other nodes. In some implementations of a chord overlay network each node includes a reference to the preceding and succeeding nodes. For example node with a key value of 60 can include references to nodes and having key values of 45 and 115 respectively. If a new node is added with a key value between that of nodes and such as a key value of 100 the appropriate reference of node will be adjusted accordingly.

In a further implementation each node includes a finger table including references to one or more nearby or neighboring nodes. Each finger table entry references the node nearest to a key value specified by an offset from the key value of the present node. In some of these implementations each finger table entry s offset corresponds with a binary place value. For example a first finger table entry has an offset value of one 2 a second finger table entry has an offset value of two 2 a third finger table entry has an offset value of four 2 a fourth finger table entry has an offset value of eight 2 and so forth. In other implementations different offset values can be associated with each finger table entry.

Finger tables can have any arbitrary number of entries. Larger finger tables can decrease routing time for messages at the expense of more complicated maintenance overhead for adding or removing nodes. For example if a key value is comprised of N bits each node may have a finger table with N entries. In other implementations other finger table sizes may be optimal depending upon the application.

In this implementation of an overlay network each node only knows the location of the nodes specified by references in its finger table. However nodes are capable of sending messages to any other node in the overlay network via one or more intermediate nodes. For example if node with a key value of 4 wants to send data to node with a key value of 0 it first sends the data to neighboring node via reference of its finger table. Node has a finger table with references to . Node forwards the received data to its intended destination node via reference . In general each node forwards data received to the neighboring node in its finger table with a key value less than or equal to the key value of the destination node.

In some distributed hash table overlay networks flexible neighbor selection allows the overlay network to select any node within a specific range of the desired destination key value as the neighboring node. illustrates flexible neighbor selection for selecting a neighboring node for a node s finger table.

A node has a first finger table entry referencing a neighboring node with a key value of 8. Node has a second finger table entry with a desired key value of 12. Without flexible neighbor selection an overlay network will select the node closest to the desired key value as the node referenced by finger table entry . In this example the overlay network would select node with a key value of 12 as the neighboring node for finger table entry .

With flexible neighbor selection the overlay network can select any of the nodes having key values between the previous finger table entry and the desired key value for the current finger table entry. For example the overlay network can select any having a key value greater than 8 which is the key value of node and less than or equal to 12. Thus the overlay network can select either node or as the neighboring node for finger table entry .

In prior overlay networks neighboring nodes can be selected using different criteria such as round trip time node capabilities node bandwidth network quality of service and security. Embodiments of the invention include using network address translation type as a criteria for flexible neighbor selection.

Network address translation NAT changes the source and or destination ports and addresses of network packets as they pass through a router gateway firewall or other networking device that performs the network address translation. Network address translation is often used to allow multiple devices on a private or local area network to interface with a wide area network such as the Internet via a single wide area network address. Network address translation is often used to enhance the security of devices and data on private networks as each of the devices is typically assigned a private address that is not always accessible from hosts located in the wide area network. This can be used to prevent malicious activity initiated by outside devices from reaching devices on private networks.

Unfortunately devices behind a router or other NAT device do not have full connectivity with devices on the wide area network. This can restrict or prevent devices behind a NAT device from using certain Internet protocols. For example devices behind a NAT device must initiate TCP connections and typically cannot accept inbound connection requests from other devices. Other protocols such as UDP can be disrupted by NAT devices. Many of these restrictions can be overcome by using signaling servers and other techniques. However these solutions require additional network resources.

In order to fully understand NAT behavior it is necessary to introduce the concept of NAT binding. NAT binding is established by the NAT for example when an internal host sends a packet to an external host for the first time. The binding maintains a mapping between the local transport address or a set of IP address and port number and an external transport address assigned by NAT. Thus any packet sent from the same internal host to the same external host will be assigned the same external port by the NAT as long as the binding exists. The binding has a lifetime that typically is on the order of about 30 seconds to about 5 minutes after the last packet in or out went through the NAT. Once this binding is created the external host can reach the internal host by sending packets to the external transport address but the external port may not be available for anyone in the WAN to reach the internal host.

NAT can be classified into a number of different types. illustrate examples of different types of NAT. illustrates a full cone NAT configuration . In a full cone NAT the binding in the NAT is established when the local host sends a packet to remote host . The binding then enables the forwarding of packets from any external host to the internal host. For example network traffic between local host and remote host and remote host can be passed through the NAT allowing traffic from multiple external IP addresses and ports.

An embodiment of the invention recognizes that the number and type of NATs between devices is a substantial contributor to network delays and connection difficulties. By using NAT type as flexible neighbor selection criteria nodes with more restrictive NAT can be assigned less critical and or less bandwidth intensive roles in the overlay network while nodes with less restrictive or no NAT are assigned more critical and or more network bandwidth intensive roles. For example during a multiplayer online game one device may be assigned a server role and be responsible for maintaining the state of the game. The other devices are assigned to client roles and receive updates of game state from the device acting as a server. To optimize game performance the device assigned the server role can be a device with no NAT or a less restrictive NAT type while devices with more restrictive NAT types are assigned client roles. This reduces potential network bottlenecks that could hinder game performance. Similarly devices with no NAT or less restrictive NAT types can be selected for a relay server role to forward data to one or more other devices while devices with restrictive NATs can be limited to communicating directly only with devices assigned relay roles.

Table 1 illustrates different combinations of NAT types and the overlay network performance issues associated with each combination according to an embodiment of the invention.

For case 1 there is no NAT between a pair of devices. These connections have the least amount of connection restrictions and may have the least amount of network delay or lag. Devices with these NAT types can be assigned more critical roles in the overlay network.

For case 2 there is one NAT between a pair of devices. These connections have some connection restrictions and more network delay than those in case 1 but still can have crucial roles in the overlay network.

For case 3 there are two NATs between a pair of devices these connections have more network lag and restrictions than case 2 or case 1.

For case 4 there are two NATs and substantial connection restrictions between the devices. Port prediction techniques and or a relay or signaling server may be required to maintain this type of connection.

In step the node receives a set of candidate neighbor nodes. In step the node then evaluates attributes of its connections with each of the candidate neighbor nodes to determine the best candidate neighbor node. In an embodiment the node uses a weighting or scoring system to evaluate a combination of criteria such as round trip time node stability device capabilities network bandwidth network quality of service and security in addition to the NAT type to rank the candidate neighboring nodes. In another embodiment the node uses the NAT type alone as a heuristic for ranking candidate neighboring nodes.

In an embodiment the node receives NAT type information for each of the candidate neighboring nodes from the central overlay network server in step . In another embodiment the node sends each of the candidate neighboring nodes probe messages and uses network traffic analysis to deduce each candidate neighboring node s NAT type.

Based upon the ranking of candidate neighboring nodes step selects the best candidate neighboring node. Step then attempts to establish contact with the selected neighboring node. If the contact is successful then the selected candidate neighboring node is added to the node s finger table. If the contact is unsuccessful then the selected candidate neighboring node is removed from the set of candidate neighboring nodes and method proceeds back to step to evaluate and select a different candidate neighboring node.

Embodiment of the invention can be implemented in a software application responsible for implementing the overlay network functionality of a device. This can include a software application a software library an implementation of an application programming interface all or a portion of a network stack an operating system or a function in the device firmware. Additional embodiments can be implemented entirely or partially using hardware as opposed to software.

In a further embodiment some devices of overlay network may have restricted capabilities. For example only a limited subset of nodes of overlay network may be allowed to process certain types of network traffic.

A graphics subsystem is further connected with data bus and the components of the computer system . The graphics subsystem includes a graphics processing unit GPU and graphics memory . Graphics memory includes a display memory e.g. a frame buffer used for storing pixel data for each pixel of an output image. Graphics memory can be integrated in the same device as GPU connected as a separate device with GPU and or implemented within memory . Pixel data can be provided to graphics memory directly from the CPU . Alternatively CPU provides the GPU with data and or instructions defining the desired output images from which the GPU generates the pixel data of one or more output images. The data and or instructions defining the desired output images can be stored in memory and or graphics memory . In an embodiment the GPU includes 3D rendering capabilities for generating pixel data for output images from instructions and data defining the geometry lighting shading texturing motion and or camera parameters for a scene. The GPU can further include one or more programmable execution units capable of executing shader programs.

The graphics subsystem periodically outputs pixel data for an image from graphics memory to be displayed on display device . Display device is any device capable of displaying visual information in response to a signal from the computer system including CRT LCD plasma and OLED displays. Computer system can provide the display device with an analog or digital signal.

In embodiments of the invention CPU is one or more general purpose microprocessors having one or more processing cores. Further embodiments of the invention can be implemented using one or more CPUs with microprocessor architectures specifically adapted for highly parallel and computationally intensive applications such as media and interactive entertainment applications.

Further embodiments can be envisioned to one of ordinary skill in the art from the specification and figures. In other embodiments combinations or sub combinations of the above disclosed invention can be advantageously made. The block diagrams of the architecture and flow charts are grouped for ease of understanding. However it should be understood that combinations of blocks additions of new blocks re arrangement of blocks and the like are contemplated in alternative embodiments of the present invention.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

