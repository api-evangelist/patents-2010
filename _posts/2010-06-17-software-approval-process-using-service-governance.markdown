---

title: Software approval process using service governance
abstract: A computer implemented method, system and/or computer program product approve software objects for deployment. A change in a lifecycle state of a software object is detected in a governance service registry, resulting in the implementation of a governance lifecycle process for the software object by transmitting an approval process input to a governance approval process engine. In response to the governance approval process engine approving the software object for deployment, the first object is automatically deployed to a production service registry.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08561010&OS=08561010&RS=08561010
owner: International Business Machines Corporation
number: 08561010
owner_city: Armonk
owner_country: US
publication_date: 20100617
---
The present disclosure relates to the field of computers and specifically to computer software. Still more particularly the present disclosure relates to approving computer software for deployment.

A computer implemented method system and or computer program product approve software objects for deployment. A change in a lifecycle state of a software object is detected in a governance service registry resulting in the implementation of a governance lifecycle process for the software object by transmitting an approval process input to a governance approval process engine. In response to the governance approval process engine approving the software object for deployment the first object is automatically deployed to a production service registry.

As will be appreciated by one skilled in the art the present disclosure may be embodied as a system method or computer program product. Accordingly the present disclosure may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present disclosure may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

With reference now to the figures and in particular to there is depicted a block diagram of an exemplary computer which may be utilized by the present disclosure. Note that some or all of the exemplary architecture including both depicted hardware and software shown for and within computer may be utilized by on demand software server .

Computer includes a processor unit that is coupled to a system bus . Processor unit may utilize one or more processors each of which has one or more processor cores. A video adapter which drives supports a display is also coupled to system bus . In one embodiment a switch couples the video adapter to the system bus . Alternatively the switch may couple the video adapter to the display . In either embodiment the switch is a switch preferably mechanical that allows the display to be coupled to the system bus and thus to be functional only upon execution of instructions e.g. software approval process code SAPC described below that support the processes described herein.

System bus is coupled via a bus bridge to an input output I O bus . An I O interface is coupled to I O bus . I O interface affords communication with various I O devices including a keyboard a mouse a media tray which may include storage devices such as CD ROM drives multi media interfaces etc. a printer and if a VHDL chip is not utilized in a manner described below external USB port s . While the format of the ports connected to I O interface may be any known to those skilled in the art of computer architecture in a preferred embodiment some or all of these ports are universal serial bus USB ports.

As depicted computer is able to communicate with an on demand software server via network using a network interface . Network may be an external network such as the Internet or an internal network such as an Ethernet or a virtual private network VPN .

A hard drive interface is also coupled to system bus . Hard drive interface interfaces with a hard drive . In a preferred embodiment hard drive populates a system memory which is also coupled to system bus . System memory is defined as a lowest level of volatile memory in computer . This volatile memory includes additional higher levels of volatile memory not shown including but not limited to cache memory registers and buffers. Data that populates system memory includes computer s operating system OS and application programs .

OS includes a shell for providing transparent user access to resources such as application programs . Generally shell is a program that provides an interpreter and an interface between the user and the operating system. More specifically shell executes commands that are entered into a command line user interface or from a file. Thus shell also called a command processor is generally the highest level of the operating system software hierarchy and serves as a command interpreter. The shell provides a system prompt interprets commands entered by keyboard mouse or other user input media and sends the interpreted command s to the appropriate lower levels of the operating system e.g. a kernel for processing. Note that while shell is a text based line oriented user interface the present disclosure will equally well support other user interface modes such as graphical voice gestural etc.

As depicted OS also includes kernel which includes lower levels of functionality for OS including providing essential services required by other parts of OS and application programs including memory management process and task management disk management and mouse and keyboard management.

Application programs include a renderer shown in exemplary manner as a browser . Browser includes program modules and instructions enabling a world wide web WWW client i.e. computer to send and receive network messages to the Internet using hypertext transfer protocol HTTP messaging thus enabling communication with on demand software server and other described computer systems.

Application programs in computer s system memory as well as on demand software server s system memory also include a software approval process code SAPC . SAPC includes code for implementing the processes described below including those described in . In one embodiment computer is able to download SAPC from on demand software server including in an on demand basis such that the code from SAPC is not downloaded until runtime or otherwise immediately needed by computer . Note further that in one embodiment of the present disclosure on demand software server performs all of the functions associated with the present disclosure including execution of SAPC thus freeing computer from having to use its own internal computing resources to execute SAPC .

Also stored in system memory is a VHDL VHSIC hardware description language program . VHDL is an exemplary design entry language for field programmable gate arrays FPGAs application specific integrated circuits ASICs and other similar electronic devices. In one embodiment execution of instructions from SAPC causes VHDL program to configure VHDL chip which may be an FPGA ASIC etc.

In another embodiment of the present disclosure execution of instructions from SAPC results in a utilization of VHDL program to program a VHDL emulation chip . VHDL emulation chip may incorporate a similar architecture as described above for VHDL chip . Once SAPC and VHDL program program VHDL emulation chip VHDL emulation chip performs as hardware some or all functions described by one or more executions of some or all of the instructions found in SAPC . That is the VHDL emulation chip is a hardware emulation of some or all of the software instructions found in SAPC . In one embodiment VHDL emulation chip is a programmable read only memory PROM that once burned in accordance with instructions from SAPC and VHDL program is permanently transformed into a new circuitry that performs the functions needed to perform the process described below in .

The hardware elements depicted in computer are not intended to be exhaustive but rather are representative to highlight essential components required by the present disclosure. For instance computer may include alternate memory storage devices such as magnetic cassettes digital versatile disks DVDs Bernoulli cartridges and the like. These and other variations are intended to be within the spirit and scope of the present disclosure.

With reference now to logic e.g. SAPC shown in executing in computer comprises a web service which is governed in a governance service registry . As described herein web service is an exemplary first object that needs approval before being deployed to a production service registry . The governance service registry is a system for storing accessing and managing information commonly referred to as service metadata used in the selection invocation management governance and reuse of services in a successful service oriented architecture SOA . Thus governance service registry is used to store information about services in a client s systems a SOA system or in other organizations systems that are already in use are planned for future use or that the client and or SOA system simply need to be aware of. For example an application can check the governance service registry just before invoking web service to locate the service instance that best satisfies the functionality and performance needs of the web service . The governance service registry also plays a role in other stages of an SOA lifecycle.

A governance lifecycle process is associated with this first object web service through a governance record . The governance record is updated as web service goes through various lifecycle transition states including interim states in the development of the web service as well as a final completion state of the web service . A governance service registry administrator configures a list of approvers that are required to be included in the governance approval process for a target governance state of the web service . When the governance record for the web service reaches a governance state . that has a list of associated approvers from the list of approvers an approval process in a governance approval process engine depicted as process engine is automatically triggered. This invocation passes a dynamically constructed XML input called an approval process input for a governance approval process . The approval process input comprises the following in an XML format Meta data information about the service record in the governance registry e.g. a uniform resource indicator URI used to locate the web service object a list of approvers and their unique domain user IDs possible next transitions and decision logic to select the next transition state after the approval workflow completes.

The governance approval process takes into account the processing of the input XML and generating an equal number of human task sub processes. The individual users who are assigned as approvers or reviewers in the approval process are assigned the task to either approve or reject the transition on to the next state in service registry e.g. from . to . . The status of the approval review is synchronized back to the service registry record. Once all the approvers respond the results are collated and the decision logic is applied to choose the next transition approve or reject . In one embodiment a real time status display is presented such as that shown in user interface UI in . The real time status display shown in exemplary UI depicts a title of each approver reviewer as well as the status e.g. pending approved rejected of their review of a specific object e.g. an SOA object such as web service . The approvers reviewers depicted in UI may all be users of a same computer system e.g. computer or they may be remote users of other computers not shown that communicate with the main computer .

The approval process for approving the web service uses an application programming interface API not shown exposed by the governance service registry . This API triggers the next governance state transition. In the example shown above the governance state is moved to Approve for production . from Service proposed for production .. If the web service is approved for production the service record i.e. an updated version of the governance record is automatically moved from the environment of the governance service registry to the environment of the production service registry .

Note that a second object is also part of the governance service registry . This second object is depicted as a service level description object that describes guaranteed features of the web service when deployed. Just as the number of reviewers for the web service may be varied and even stochastic random the number of reviewers for approving the service level description object may also be varied random. The reviewers used to approve the web service and the reviewers used to approve the service level description object may be the same completely different mutually exclusive or overlapping. In one embodiment approval of the service level description object follows some or all of the same governance approval processes described herein in association with elements used to review the web service .

With reference now to a high level flow chart of one or more exemplary steps taken by a processor to approve software objects including web services for deployment is depicted. After initiator block a change in a lifecycle state of a first object is detected by using a governance service registry block . This first object is a software object e.g. a web service that is proposed for deployment to a production service registry. The governance service registry is a system for storing accessing and managing service metadata used in selecting invocating managing governing and reusing services in a service oriented architecture SOA .

As described in block in response to detecting the change in the lifecycle state of the first object a governance lifecycle process is implemented for the first object by transmitting a first approval process input to a governance approval process engine. This governance approval process engine is dynamically configurable to change approving parties i.e. specifying how many approving parties are required which specific approving parties identified by title and or name are required etc. and corporate rules i.e. legal internal policy oriented mission directed etc. required to deploy the web service object to the production service registry. In one embodiment the governance approval process engine is a long running business process execution language BPEL process engine. BPEL is an executable language for specifying interactions with the web service. In one embodiment information is exported from and imported to the web service exclusively by BPEL instructions.

The first approval process input describes a first set of one or more reviewers needed to approve the first object for deployment. The percentage of reviewers can be set to any predetermined level from a single reviewer approving the deployment all of the reviewers approving the deployment or any number in between. If the reviewers do not approve the first object query block then the scope of the first object can be revised block . That is if the reviewers do not approve the first object for deployment then software engineers can rewrite the first object and resubmit it to the approvers e.g. an approving governance panel .

However if the first object is approved for deployment to the production service registry by the governance approval process engine then the first object is automatically deployed to the production service registry from which it can be accessed by users customers block .

As described above with respect to elements and shown in the web service object can be associated with a service level description object block . This service level description object describes guaranteed features of the first object when deployed such as performance levels e.g. data throughput memory availability bandwidth etc. cost on line and or live support web service availability etc. In response to the web service object being associated with the service level description object the governance lifecycle process is implemented for the service level description object by transmitting a second process input to the governance approval process engine block . This second approval process input describes a second set of one or more reviewers needed to approve the service level description object as well as other XML data such as review processes possible next transitions decision logic to select the next transition state etc. Note that in one embodiment the first process input and the second process input both describe unique human tasks required of the respective first and second set of one or more reviewers. Examples of such unique human tasks include but are not limited to determining if a web service falls within the scope of products traditionally offered by a web service provider determining if the web service meets legal and regulatory requirements e.g. governmental regulations regarding securities banking health care etc. meets a proper price point that makes the web service attractive to a customer while still being profitable to the web service provider meets technical and operations guidelines i.e. the web service performs as described in advertisement user manuals etc. etc. Optionally the approval status i.e. status of the review as depicted in exemplary manner in is synchronized between the governance service registry and the governance approval process engine block and is then displayed on the UI shown in .

If the second set of one or more reviewers approve the service level description object query block the automatic deployment of the first object to the production service registry continues block and the process ends terminator block . However if the second set of one or more reviewers fails to approve the service level description object query block then the deployment of the first object to the production service registry is automatically cancelled block thus allowing programmers the opportunity block to revise the scope of the first object i.e. the web service and or the second object i.e. the service level description object .

The approach described herein affords a flexible workflow for approval process. The process described herein provides an integrated approach to bring a stochastic i.e. using varying numbers of approvers reviewers of software objects and or web services approval workflow for service governance. Enterprises can choose to alter this approval process to contain industry specific checks and pre defined templates adhering to enterprise specific requirements i.e. adherence to standards for governance decision making.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present disclosure. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the present disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of various embodiments of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiment was chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

Note further that any methods described in the present disclosure may be implemented through the use of a VHDL VHSIC Hardware Description Language program and a VHDL chip. VHDL is an exemplary design entry language for Field Programmable Gate Arrays FPGAs Application Specific Integrated Circuits ASICs and other similar electronic devices. Thus any software implemented method described herein may be emulated by a hardware based VHDL program which is then applied to a VHDL chip such as a FPGA.

Having thus described embodiments of the disclosure of the present application in detail and by reference to illustrative embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the disclosure defined in the appended claims.

