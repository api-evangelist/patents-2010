---

title: Call control for conferencing calls
abstract: A server device may receive information, associated with a request for a conferencing call, from a call manager, which is responsible for establishing and handling conferencing calls. The server device is a different device than the call manager. The server device may further determine to permit the conferencing call based on the received information, and provide an instruction to the call manager to permit the conferencing call in response to determining to permit the conferencing call.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09113031&OS=09113031&RS=09113031
owner: VERIZON PATENT AND LICENSING INC.
number: 09113031
owner_city: Basking Ridge
owner_country: US
publication_date: 20100528
---
Call managers typically may be used to facilitate Voice over Internet Protocol VoIP calls between end points in an Internet Protocol IP network. Such call managers track active network components e.g. VoIP phones gateways bridges etc. involved in the VoIP calls between the end points in the IP network. With the advent of video IP phone conferencing however existing VoIP call managers may not include adequate functionality for exercising control over calls associated with video conferencing sessions. For example existing call managers may not include functionality for performing failover determination during the video conferencing call or for performing call resource availability determination call resource assignment or call authorization during set up of the video conferencing call.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. The following detailed description does not limit the invention.

A server according to example embodiments described herein may connect to nodes that establish video conferencing calls between end points. The server may provide additional functionality not provided by the nodes for exercising control over the video conferencing calls. For example the server may perform failover determination prior to or during the video conferencing call call authorization resource availability determination call resource assignment and or other operations in relation to establishing and or handling video conferencing calls.

While the foregoing description focuses on video conferencing calls embodiments described herein are not so limited. For example it will be appreciated that embodiments described herein are equally applicable to other types of calls such as audio conferencing calls.

End points may include one or more devices that can capture transmit and or receive video as part of a video conferencing call or session . End points may include one or more devices that establish and conduct the video conferencing call via IP network . For example end points may include video cameras video transmission reception devices e.g. a computer a laptop a mobile device and or other types of devices etc.

Customer networks may include any type of network that may connect to IP network to enable the establishment of video conferencing calls between end points . Customer networks may include a local area network LAN a wide area network WAN and or another type of network. In one embodiment customer networks may include enterprise networks.

IP network may include one or more IP networks such as for example a WAN a metropolitan area network MAN the Internet a wireless satellite network and or a wireless public land mobile network PLMN that uses IP for packet transmission and forwarding. In one embodiment IP network may include a private IP network that is operated by a single entity e.g. operated by a single company or organization . In addition or alternatively IP network may include one or more non IP networks such as a Public Switched Telephone Network PSTN . In one embodiment IP network may implement a Multi Protocol Label Switching MPLS Virtual Private Network VPN .

As illustrated IP network may include a video conferencing platform . Video conferencing platform may include one or more components that allow video conferencing calls to be established between end points . For example video conferencing platform may configure end points and or customer networks for a video conferencing call authenticate the video conferencing call and allocate the necessary resources for establishing and conducting the video conferencing call through IP network . In one embodiment the video conferencing call may include a high definition video conferencing call.

The number of components illustrated in is provided for explanatory purposes only. In practice network may include additional components fewer components different components and or differently arranged components than those depicted in . Additionally or alternatively one or more components of network may perform the tasks described as being performed by one or more other components of network .

As illustrated cluster may include nodes and a primary server and a backup server . Nodes and may include various network devices described further with respect to below associated with enabling video conferencing between end points via IP network . Such network devices may include for example edge routers switches and or other devices that are involved with the establishment and on going handling of a video conferencing call via IP network between end points . In one embodiment node may act as a primary node and node may act as a backup node in the event that node is non operational. Thus node and node may include the same information.

Primary server may include one or more network devices that configure the appropriate end points for a video conferencing call and control node for the video conferencing call. For example primary server may receive information from a customer associated with end point for a desired video conferencing call between the customer and customers at end points and . Primary server may configure end point so that for example the video conferencing call can be established via a one button selection by the customer. Primary server may also configure end points and to accept the video conferencing call.

Primary server may perform call processing in connection with a video conferencing call. For example primary server may authorize end points or customers associated with those end points that are part of the video conferencing call determine whether the necessary resources are available for the video conferencing call and or assign resources for the video conferencing call.

Additionally or alternatively primary server may monitor the health also referred to as availability of components in cluster and cluster . For example primary server may monitor the health of primary node backup node backup server and primary server . If primary node fails or is otherwise non operational primary server may fail over an on going video conferencing call to node or use node for establishing a new video conferencing call. Additionally or alternatively primary server may continually transfer information to backup server to ensure that backup server can take over for primary server in the event of a failure of primary server or in the event that primary server is otherwise non operational . Additionally or alternatively primary server may continually transfer information to primary server to ensure that primary server can take over for primary server in the event of a failure of cluster e.g. indicating that primary server and backup server have failed or are otherwise non operational . Thus redundancy is provided in the event of a node a primary server and or a cluster are non operational.

Backup server may include one or more network devices that act as a backup for primary server . In one embodiment backup server may receive information from primary server on a periodic basis and may store the information to allow backup server to immediately take over for primary server in the event of a failure of primary server or primary server otherwise being non operational . Backup server may continually monitor the health of primary server .

Cluster may be configured in a similar manner to cluster . For example nodes and may be configured in a similar manner to nodes and respectively. In addition primary server may be configured in a similar manner to primary server and backup server may be configured in a similar manner to backup server .

The number of components illustrated in is provided for explanatory purposes only. In practice video conferencing platform may include additional components fewer components different components and or differently arranged components than those depicted in . Additionally or alternatively one or more components of video conferencing platform may perform the tasks described as being performed by one or more other components of video conferencing platform .

Routers may include one or more devices that connect to a respective one of provider edge PE devices and . Each of PE devices and may include a network device that provides connections to IP network . In one embodiment PE devices and may provide connections to the MPLS VPN domain for node . In one embodiment routers may include for example ASR 1006 Aggregation Services Routers from Cisco Systems Inc.

Switches may include one or more devices that switch packets to from IP network . Switches may provide Layer connectivity to customer video conferencing equipment. In one embodiment switches may each include for example a Catalyst 6513 Switch chassis from Cisco Systems Inc. having a high port density Fast Ethernet and Gigabit Ethernet aggregation. Video conferencing calls may be protected by the meshing of routers with respective switches . In one embodiment router and switch may serve as backups for router and switch and vice versa .

Bridges may include one or more devices that allow multiple end points to be connected in a point to multipoint video conferencing call. In one embodiment bridges may include for example TelePresence Multipoint Switches CTMSs from Cisco Systems Inc. Bridge may for example act as a backup for bridge and vice versa . Thus if bridge fails node may use bridge to establish a point to multipoint video conferencing call.

Call manager may include one or more devices that provide video conferencing call processing. Call manager may receive a video conferencing call request from an end point and send in response to receiving the request and using API information relating to the video conferencing call to primary server or backup server when primary server is non operational . Call manager may also receive information from primary server indicating whether the video conferencing call is permitted. In those situations where the video conferencing call is permitted call manager may establish the video conferencing call between the appropriate end points . In one embodiment call manager may include a Cisco Unified Communications Manager CUCM from Cisco Systems Inc.

API may include one or more components that validate requests for video conferencing calls. For example API may verify that a called number as part of a request for a video conference is valid for node . To this end API may include a table that contains valid prefixes for node . API may receive a request for a video conferencing call extract the called number from the request and determine whether the prefix of the called number matches an entry in the valid prefixes table. If a match exists API may determine that the called number is valid for node . If a match does not exist API may determine that the called number is invalid for node and may cause the request to be rejected.

API may also verify that an originating number is valid for node . To this end API may include a mapping table that maps for example a combination of the called number a passcode and the originating number to processing information for a video conferencing call. API may receive a request for a video conferencing call extract the called number the passcode and the originating number from the request and use this combination of information as a lookup key into the mapping table. If the lookup is successful API may cause the video conferencing call to be redirected to the appropriate component e.g. bridge for processing. If the lookup is unsuccessful API may determine that the originating number is invalid for node and may cause the request to be rejected.

Additionally or alternatively API may allow call manager to communicate with primary server and or backup server . For example in response to receiving a request for a video conferencing call from an end point API may transfer the request for the video conferencing call or information relating to the request to primary server or backup server when primary server is non operational . In one embodiment API may include for example a Java Telephony Application Programming Interface JTAPI .

The number of components illustrated in is provided for explanatory purposes only. In practice node may include additional components fewer components different components and or differently arranged components than those depicted in . Additionally or alternatively one or more components of node may perform the tasks described as being performed by one or more other components of node .

Processing unit may include a processor microprocessor and or processing logic e.g. an application specific integrated circuit ASIC a field programmable gate array FPGA or the like that may interpret and execute instructions. Main memory may include a random access memory RAM or another type of dynamic storage device that may store information and instructions for execution by processing unit . ROM may include a ROM device or another type of static storage device that may store static information and instructions for use by processing unit . Storage device may include a magnetic and or optical recording medium and its corresponding drive.

Input device may include one or more mechanisms that permit an operator to input information to primary server such as for example a keypad or a keyboard a voice recognition mechanism a biometric mechanism etc. Output device may include one or more mechanisms that output information to the operator including a display a speaker etc. Communication interface may include any transceiver like mechanism that enables primary server to communicate with other devices and or systems e.g. call manager . For example communication interface may include mechanisms for communicating with another device or system via a network such as IP network .

Primary server may perform certain operations or processes as will be described in detail below. Primary server may perform these operations in response to processing unit executing software instructions contained in a computer readable medium such as memory . A computer readable medium may be defined as a physical or logical memory device. A logical memory device may include memory space within a single physical memory device or spread across multiple physical memory devices. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to perform operations described herein. Thus embodiments described herein are not limited to any specific combination of hardware circuitry and software.

The number of components illustrated in is provided for explanatory purposes only. In practice primary server may include additional components fewer components different components and or differently arranged components than those depicted in . Additionally or alternatively one or more components of primary server may perform the tasks described as being performed by one or more other components of primary server .

Authentication component may authenticate the originator i.e. the customer or device that originates a video conferencing call and the terminator s i.e. the customer s or device s that will be participating in the video conferencing call with the originator of a video conferencing call request. For example authentication component may receive information regarding a video conferencing call request from node and parse the request to extract information relating to the originator the terminator s and or the video conferencing call. The information may include for example identification information regarding the originating end point e.g. an address of the originating end point identification information regarding the terminating end point s e.g. an address of each terminating end point identification information of the originating customer e.g. a user name and or password a passcode etc. identification information of the terminating customer s e.g. user name s information relating to the video conferencing call e.g. a video conferencing call identifier and or other types of information that may allow a video conferencing call to be authenticated.

Authentication component may use the extracted information to authenticate the originator and the terminator s of the video conferencing call. For example authentication component may compare information relating to the originating end point and or the originating customer to valid originator information. If the information relating to the originating end point and or the originating customer matches valid originator information authentication component may determine that the originator has been properly authenticated. Similarly authentication component may compare information relating to the terminating end point and or the terminating customer to valid terminator information. If the information relating to the terminating end point and or the terminating customer matches valid terminator information authentication component may determine that the terminator has been properly authenticated. If the originator or terminator has not been properly authenticated authentication component may notify the originating customer and or terminating customer s that the request for the video conferencing call has been rejected. In addition authentication component may provide information as to why the video conferencing call has been rejected.

End point interfacing component may allow primary server to communicate with end points . For example primary server may via end point interfacing component receive information from an originating customer associated with end point for a desired video conferencing call between the originating customer and terminating customers at end points and . Primary server may via end point interfacing component configure end point so that for example the video conferencing call can be established via a one button selection by the originating customer. Primary server may also configure endpoints and to accept the video conferencing call.

Node interfacing component may allow primary server to communicate with nodes . For example primary server may via node interfacing component provide an indication to node that a video conferencing call is permitted. Primary server may also via node interfacing component determine the availability of nodes and . For example primary server may via node interfacing component send at periodic intervals queries to nodes and to determine the status of nodes and . If primary server does not receive a response from a node such as node in the periodic interval primary server may determine that node is non operational. In this event primary server may via node interfacing component fail over node to backup node .

In one embodiment node interfacing component may include a bridge interfacing component a call manager interfacing component and or an API interfacing component . Bridge interfacing component may allow primary server to communicate with bridges . In one embodiment primary server may communicate with bridges via bridge interfacing component using Hypertext Transfer Protocol Secure HTTPS . Via bridge interfacing component primary server may for example obtain from a bridge a list of static video conferencing meetings for which bridge is configured delete a static meeting that is configured on bridge create a static meeting on bridge obtain a list of video conferencing calls that are currently using bridge and or perform other actions.

In addition primary server may monitor using bridge interfacing component the availability of bridges and . For example bridge interfacing component may include a heartbeat detection mechanism to periodically query each bridge to determine the status of bridge . In one embodiment the status of a bridge may be determined based on the login and or execution of the status query by bridge and or based on data from the status response by bridge e.g. by validating that all services that are identified by bridge are listed as running . Primary server may tag a bridge as being in a failed state based on the determined status.

Call manager interfacing component may allow primary server to communicate with call manager . In one embodiment call manager interfacing component may be implemented as an Administrative eXtensible Markup Language Layer AXL application programming interface and may communicate with call manager using HTTPS. Via call manager interfacing component primary server may for example add a route point to call manager remove a route point from call manager obtain from call manager a list of known route points add a directory number to call manager for a route point remove a directory number from call manager and or perform other actions. A route point may be broadly defined as a virtual device that can receive multiple simultaneous calls for application controlled redirection.

In addition primary server may monitor using call manager interfacing component the availability of call manager . For example call manager interfacing component may include a heartbeat detection mechanism to periodically query call manager to determine the status of call manager . In one embodiment the status of call manager may be determined based on the login and or execution of the status query by call manager . Primary server may tag call manager as being in a failed state based on the determined status.

API interfacing component may allow primary server to communicate with API . In one embodiment API interfacing component may be implemented as a JTAPI interface. Via API interfacing component primary server may for example receive video conferencing call requests from API interface send commands to call manager regarding whether or not to permit a video conferencing call request and or perform other actions.

In addition primary server may update using API interfacing component API based on the determined availability of node and or components of node . For example primary server may if node has been determined to have failed and using API interfacing component update the valid prefixes table of API in backup node so that backup node can accept video conferencing call re connect attempts for node . In addition primary server may if bridge has been determined to have failed and using API interfacing component update the mapping table of API in node so that video conferencing call requests are directed to backup bridge .

Server interfacing component may allow primary server to communicate with other servers such as backup server and primary server . In one embodiment primary server may send via server interfacing component a replica of the data stored on primary server to backup server . In this way backup server may immediately take over the duties of primary server in the event that primary server is non operational. Similarly primary server may send via server interfacing component a replica of the data stored on primary server to primary server . In this way primary server may immediately take over the duties of primary server in the event that cluster is non operational. Primary server may also receive via server interfacing component a replica of the data stored on primary server . In this way primary server may immediately take over the duties of primary server in the event that cluster is non operational.

Additionally or alternatively primary server may via server interfacing component monitor the health of backup server and primary server . For example server interfacing component may include a heartbeat detection mechanism that periodically sends queries to backup server and primary server to determine the status of backup server and primary server . Primary server may based on responses to the queries determine the availability of backup server and primary server . In addition primary server may using server interfacing component receive heartbeat queries from backup server and primary server and send in response to receiving the queries information to backup server and primary server to inform backup server and primary server as to the availability of primary server .

Call processing component may perform processing in relation to establishing a video conferencing call between appropriate end points and processing for an on going video conferencing call. For example call processing component may receive a result of the authentication performed by authentication component . If the originator and the terminator s have been properly authenticated call processing component may determine whether resources are available for establishing the requested video conferencing call and if the necessary resources are available assign resources for the video conferencing call. In response to the originator and terminator s being properly authenticated and or in response to resources being assigned to the video conferencing call call processing component may send instructions to call manager to allow the requested video conferencing call.

Call processing component may also receive health information from node interfacing component and server interfacing component and fail over a node and or server if the health information indicates that node and or server are non operational.

The number of functional components illustrated in is provided for explanatory purposes only. In practice primary server may include additional functional components fewer functional components different functional components and or differently arranged functional components than those depicted in . Additionally or alternatively one or more functional components of primary server may perform the tasks described as being performed by one or more other functional components of primary server .

Process may include receiving a request for a video conferencing call block . Assume for explanatory purposes that an end point e.g. end point initiates a point to multipoint video conferencing call with end point and end point . In one embodiment end point may initiate the video conferencing call in response to an originating customer entering a particular network address e.g. a particular IP address a particular telephone number etc. into end point selecting a particular button or menu item provided by end point and or performing other operations in connection with end point . Initiation of the video conferencing call may cause end point to transmit a request for the video conferencing call. The request may include for example information associated with end point e.g. such as information identifying end point information identifying the originating customer and or other types of information information associated with end points and e.g. such as information identifying end points and information identifying the terminating customers associated with end points and and or other types of information and or other types of information. As a result node e.g. call manager may receive the request from end point for the video conferencing call.

Process may further include transferring the video conferencing call request to primary server block . For example in response to receiving the video conferencing call request node e.g. call manager may transfer the video conferencing call request or information relating to the video conferencing call request to primary server . In one embodiment node may transfer the video conferencing call request to primary server via API .

Process may also include primary server receiving the video conferencing call request from node block . For example primary server may receive the video conferencing call request via API interfacing component .

Process may include authenticating the originator e.g. end point and or the originating customer and terminator s e.g. end points and and or the terminating customers of the video conferencing call based on the received request block . For example primary server e.g. authentication component may parse the received request to extract information relating to the originator and the terminator s . The information may include for example identification information regarding end point e.g. an address of end point identification information regarding end points and e.g. an address of each terminating end point identification information of the originating customer e.g. a user name and or password passcode etc. identification information of the terminating customers e.g. user name s and or other types of information that may allow the originator and terminators of the video conferencing call to be authenticated.

Authentication component may use the extracted information to authenticate the originator and the terminators of the video conferencing call. For example authentication component may compare information relating to end point and or the originating customer to valid originator information. If the information relating to end point and or the originating customer matches valid originator information authentication component may determine that the originator has been properly authenticated. Similarly authentication component may compare information relating to end points and and or the terminating customers to valid terminator information. If the information relating to end point and and or the terminating customers matches valid terminator information authentication component may determine that the terminators have been properly authenticated. If the originator or terminators have not been properly authenticated authentication component may notify the originating customer and or terminating customer s that the request for the video conferencing call has been rejected. In addition authentication component may provide information as to why the call request was rejected.

Process may include assigning resources for the video conferencing call block . Primary server e.g. call processing component may determine whether resources are available for handling the video conferencing call. For example call processing component may determine whether sufficient bandwidth is available for the video conferencing call. If resources are unavailable for the video conferencing call primary server e.g. call processing component may notify the originating customer and or the terminating customers that the request for the video conferencing call has been rejected. On the other hand if resources are available for the video conferencing call primary server e.g. call processing component may assign resources for the video conferencing call. As part of assigning resources for the video conferencing call primary server may using bridge interfacing component configure bridge or bridge if bridge has been determined to be non operational for the video conferencing call.

Process may further include sending an instruction to node to permit the video conferencing call block . Primary server may send the instruction when the originator and terminators have been properly authenticated and when the resources have been assigned to the video conferencing call. Primary server may for example send the instruction to node via API interfacing component .

Process may also include receiving the instruction from primary server block . For example node e.g. call manager may receive the instruction from primary server via API .

Process may include establishing in response to receiving the instruction the video conferencing call between an originating end point and terminating end points block . For example call manager may communicate signaling messages through bridge to end points and to establish the point to multipoint between end points and .

The number of blocks illustrated in is provided for explanatory purposes only. In practice process may include additional blocks fewer blocks different blocks and or differently arranged blocks than those depicted in .

Process may include detecting that a primary node e.g. node has failed block . As indicated above primary server may monitor using call manager interfacing component the availability of call manager of primary node . For example call manager interfacing component may include a heartbeat detection mechanism to periodically query call manager to determine the status of call manager . In one embodiment the status of call manager may be determined based on the login and or execution of the status query by call manager . Primary server may tag call manager as being in a failed state based on the determined status.

Process may further include failing over the primary node to the backup node block . For example in response to determining that primary node has failed or is otherwise non operational primary server e.g. call processing component may cause a new video conferencing call request to be established using backup node and or transfer any on going video conferencing calls which were being handled by primary node to be transferred to backup node .

In addition primary server e.g. API interfacing component may update API based on the determined availability of node and or components of node . For example primary server may if node has been determined to have failed and using API interfacing component update the valid prefixes table of API in backup node so that backup node can accept video conferencing call re connect attempts for node .

The number of blocks illustrated in is provided for explanatory purposes only. In practice process may include additional blocks fewer blocks different blocks and or differently arranged blocks than those depicted in .

The foregoing description of implementations provides illustration and description but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. For example while series of blocks have been described with regard to the order of the blocks may be modified in other embodiments. Further non dependent blocks may be performed in parallel.

It will be apparent that embodiments as described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement embodiments is not limiting of the invention. Thus the operation and behavior of the embodiments have been described without reference to the specific software code it being understood that software and control hardware may be designed based on the description herein.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the invention. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification.

No element act or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

