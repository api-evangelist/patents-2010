---

title: System and method of accessing resources in a computer network
abstract: An exemplary method of accessing resources in a computer network may include (a) receiving into a networking device, from a first client device of a plurality of client devices, a request for a given resource (e.g., a file, directory, or metadata) assigned to a given file service (e.g., a file share service, file sync service, or file search service), (b) verifying that the first client device is allowed to access the given file service, (c) in response to verifying that the first client device is allowed to access the given file service, identifying a second client device having at least one stored resource assigned to the given file service, and (d) sending to the second client device an updated request for the given resource that includes a unique identifier of the at least one stored resource assigned to the given file service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08346808&OS=08346808&RS=08346808
owner: Westell Technologies, Inc.
number: 08346808
owner_city: Aurora
owner_country: US
publication_date: 20100812
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 61 233 283 filed Aug. 12 2009 incorporated by reference herein in its entirety.

Recent trends in computing have led to the need for better information sharing between computing devices in a home network. The first of these trends is the extensive proliferation of Internet based services that are available for consumers including webmail photo sharing social networking online auctioning and even replacements for traditional desktop applications e.g. word processing spreadsheets presentations etc. . While there are various benefits to using Internet based services including low cost ease of installation and maintenance and portability across multiple devices these Internet based services also suffer from various limitations. For example a user of an Internet based service may be unable to access his data due to various factors such as server unavailability and or account lockout. As another example a user of an Internet based service may encounter various privacy issues such as lesser privacy protection under the law weak web security systems and or client software that has complete access to all of the user s file system. As yet another example a user of an Internet based service may be subjected to data lock in and third party control. Many of these limitations may be overcome by storing the user s data in the home as opposed to the cloud.

The second of these trends is proliferation of post PC computing devices in the home. Examples of these post PC computing devices may include smart phones smart thermostats set top boxes netbooks tablets and digital picture frames. Many of these post PC devices are based on closed platforms that largely inhibit interoperability. While some current file sharing protocols exist that may facilitate interoperability between these and other computing devices including network file protocols and server based protocols e.g. File Transfer Protocol FTP or a Web based Distributed Authoring and Versioning WebDAV these current file sharing protocols have significant limitations. For instance network file protocols require synchronization of three separate levels of security one for each computing device and one for the network file protocol itself which is typically not practical in a home network. Further network file protocols that enable file sharing between computing devices based on different closed platforms may be unavailable or out of date depending on the relationship between the developers of those closed platforms. Further yet server based protocols require a user to setup and manage servers and also fail to integrate the remote files with the user s local files such that they appear as part of the user s file system.

Accordingly a protocol that facilitates seamless secure information sharing between computing devices via a home network as well as remote devices via the Internet is desirable.

Disclosed herein are systems and methods that enable seamless secure information sharing between computing devices e.g. client devices networking devices servers etc. in a network e.g. a local area network .

One embodiment may take the form of a method including a receiving into a networking device from a first client device of a plurality of client devices a request for a given resource e.g. a file directory or metadata assigned to a given file service e.g. a file share service a file sync service or a file search service b in response to the request verifying that the first client device is allowed to access the given file service c in response to verifying that the first client device is allowed to access the given file service identifying a second client device of the plurality of client devices having at least one stored resource assigned to the given file service and d sending to the second client device an updated request for the given resource that includes a unique identifier of the at least one stored resource assigned to the given file service. Additionally the method may include e as a result of sending the updated request to the second client device receiving from the second client device the given resource and f forwarding the given resource to the first client device. This method may be embodied as program instructions on a non transitory computer readable medium.

The feature of verifying that the first client device is allowed to access the given file service may take various forms. In one example this feature may include 1 identifying a user associated with the first client device and 2 determining that the identified user is allowed to access the given file service based on a table mapping file services to identifiers of users allowed to access the file services. Other examples are possible as well.

The feature of identifying the second client device may also take various forms. In one example if the request identifies a given client device of the plurality of client devices this feature may include identifying the given client device as the second client device based. In another example this feature may include identifying the second client device based on a table mapping file services to client devices having at least one resource assigned to the given file service. In yet another example this feature may include identifying the second client device 1 identifying two or more client devices of the plurality of client devices having at least one resource assigned to the given file service and 2 employing load balancing to select the second client device from the identified two or more client devices. Other examples are possible as well.

Another embodiment may take the form of a method including a receiving into a first client device of a plurality of client devices a request to assign at least one resource e.g. a file directory or metadata stored on the first client device to a given file service e.g. a file share service a file sync service or a file search service b in response to the request generating a unique identifier of the at least one stored resource on the first client device that correlates to a storage location on the first client device of the at least one stored resource c sending to a networking device the unique identifier of the at least one stored resource that is assigned to the given file service d receiving from the networking device a request for a given resource e.g. a file or directory assigned to the given file service wherein the request includes the unique identifier of the at least one stored resource that is assigned to the given file service e locating the given resource on the first client device based on the correlation of the unique identifier of the at least one stored resource to the stored location on the first client device of the at least one stored resource and f sending the given resource for receipt by a second client device of the plurality of client devices e.g. via the networking device . This method may be embodied as program instructions on a non transitory computer readable medium.

The request to assign the at least one stored resource to the given file service may take various forms. In one example this request may include a selection of the given file service on a context menu for the at least one stored resource. Other examples are possible as well.

Yet another embodiment may take the form of a network device that includes a a communication interface configured to interface with a plurality of client devices b an access manager component configured to 1 receive from a first client device of the plurality of client devices a request for a given resource assigned to a given file service 2 in response to the request verify that the first client device is allowed to access the given file service and 3 in response to verifying that the first client device is allowed to access the given file service forward the request and c a storage manager component configured to 1 receive the request from the access manager component 2 identify a second client device of the plurality of client devices having at least one stored resource assigned to the given file service and 3 send to the second client device an updated request for the given resource that includes a unique identifier of the at least one resource assigned to the given file service.

Still another embodiment may take the form of a client device that includes a a communication interface configured to interface with a networking device and b a drive agent shim configured to 1 receive a request to assign at least one resource stored on the client device to a given file service 2 in response to the request generate a unique identifier of the at least one stored resource that correlates to a storage location on the client device of the at least one stored resource 3 send to a networking device the unique identifier of the at least one stored resource that is assigned to the given file service 4 receive from the networking device a request for a given resource assigned to the given file service wherein the request includes the unique identifier of the at least one stored resource that is assigned to the given file service 5 locate the given resource on the client device based on the correlation of the unique identifier of the at least one stored resource to the storage location on the client device of the at least one stored resource and 6 send the given resource for receipt by another client device.

These as well as other aspects and advantages will become apparent to those of ordinary skill in the art by reading the following detailed description with reference where appropriate to the accompanying drawings.

It should be understood that the arrangements described herein are set forth for purposes of example only. As such those skilled in the art will appreciate that other arrangements and other elements e.g. machines interfaces functions orders of functions etc. can be used instead some elements may be added and some elements may be omitted altogether. Further as in most telecommunications applications those skilled in the art will appreciate that many of the elements described herein are functional entities that may be implemented as discrete or distributed components or in conjunction with other components and in any suitable combination and location. Still further various functions described herein as being performed by one or more entities may be carried out by hardware firmware and or software. For instance various functions may be carried out by a processor executing a set of machine language instructions written in any suitable programming language e.g. C C Java etc. and stored in memory.

Networking device may be any computing device configured to interconnect each of client devices to interconnect LAN with WAN and to carry out aspects of the exemplary protocol described herein. In this respect networking device may include a processor data storage a LAN communication interface and a WAN communication interface. Further networking device may include various software components e.g. program logic and program data and resources e.g. directories and or files with associated metadata stored in data storage. As examples networking device may take the form of a switch a bridge a router and or a gateway. Other configurations of network device are possible as well.

Each of local client devices may be any computing device configured to carry out aspects of the exemplary protocol described herein. In this respect each of local client devices may include a processor data storage a communication interface and perhaps a user interface. Further each of local client devices may include various software components e.g. program logic and program data and resources e.g. directories and or files with associated metadata stored in data storage. As examples each of local client devices may take the form of a desktop computer a laptop a netbook a tablet a smart phone a personal digital assistant PDA a set top box or a network attached storage NAS device. Other configurations of client devices are possible as well.

As shown each of local client devices may be coupled to networking device via a respective communication path. These paths may take various forms. For instance some or all of these paths may include a wired link such as twisted pair copper cable coaxial cable and or optical fiber cable for instance. Further some or all of these paths may include a wireless link such as Wi Fi link for instance. Further yet some or all of these paths may include an intermediate networking and or computing device. These paths may take other forms as well.

Disclosed herein is an exemplary protocol that enables seamless secure information sharing between computing devices e.g. client devices networking devices servers etc. in a network e.g. a LAN . In one aspect the exemplary protocol may provide various file services that enable access to resources stored on the computing devices in the network. These file services may take various forms. In one example the file services may include file share services that each enables a computing device to make resources available for access by other computing devices and correspondingly enables the other computing devices to access the available resources. In another example the file services may include one or more file sync services that each enables a group of computing devices to make resources available for synchronization with one another and correspondingly enables other computing devices to access the synchronized resources. In yet another example the file services may include file search services that each enables a computing device to make resources available for search by other computing devices and correspondingly enables the other computing devices to conduct searches on the available resources based on metadata e.g. file name file type etc. . Other examples are possible as well.

The aspects of the exemplary protocol may be carried various software components that may be installed on the computing devices in the network. These software components may each take the form of program instructions of various forms e.g. object code machine language code bytecode and or source code that are executable or interpretable by a processor to carry out aspects of the exemplary protocol. In an embodiment these software components may include one or more APIs designed according to representational state transfer REST guidelines. The software components may take other forms as well.

As shown in networking device may have installed thereon a messaging server and a management stack that includes a messaging client an access manager a storage manager and a security gateway . Further as shown client devices may each have installed thereon a drive agent shim that includes a messaging client and a drive agent . Many other configurations are possible as well. For example although not shown networking device may also have installed thereon a drive agent shim.

Messaging server may be configured to facilitate low level communication between the computing devices and or components of LAN . In this respect messaging client may communicate with each of messaging client and messaging clients according to various communication protocols. As one example messaging server may communicate with each of messaging client and messaging clients according to the Extensible Messaging and Presence Protocol XMPP which is an open Extensible Markup Language XML based protocol. According to XMPP each of messaging client and messaging clients may establish a long running Transmission Control Protocol TCP connection with Transport Layer Security TLS to messaging server . In turn each of messaging client and messaging clients may open an XML document called a stanza for the lifetime of the established TCP connection and then append individual messages to the stanza which may allow each of messaging client and messaging clients to send messages to messaging server without the burden of opening and closing TCP connections. As such according to XMPP multiple higher level operations can occur simultaneously over one TCP connection. Messaging client may communicate with each of messaging client and messaging clients according to other communication protocols as well.

According to an embodiment each of messaging client and messaging clients may be configured to have one dedicated messaging account for use when communicating according to the exemplary protocol. Each of messaging client and messaging clients may then be configured to filter received messages according to its dedicated account identifier e.g. a JabberID in XMPP and then route the received messages to other exemplary protocol components as appropriate. Correspondingly a component installed on networking device e.g. access manager may be configured to contain a mapping of messaging clients to messaging account identifiers.

Messaging server may provision a messaging account with one of messaging client and messaging clients in various manners. For instance a given drive agent shim on a hosting client device e.g. any of drive agent shims may first perform an auto discovery operation to locate messaging server e.g. via a DNS DS mechanism and may then initiate an auto registration process by providing messaging server with a device name and a registration identifier. The given agent shim may also display the registration identifier to a user of the hosting client device. Thereafter the user may access a management interface provided by a component installed on networking device to request addition of the drive agent shim to LAN . For example while accessing the interface the user may select the drive agent shim and then enter its registration identifier. In turn the component on networking device may validate the entered registration identifier against the registration identifier received from the drive agent shim during the auto registration process. If valid the component on networking device may generate a messaging account for the drive agent shim and then send a password for the account to the drive agent shim which may in turn store the password for future use in establishing connections with messaging server . Other examples of messaging account provisioning methods may exist as well.

Access manager may be configured to control access to the services provided by the exemplary protocol in LAN . In this respect access manager may include various components that enable it to perform the functions described herein.

Group chat component may be configured to facilitate a chat room and thereby enable devices and or components in LAN to share status information e.g. presence announcements . In one example access manager may create group chat component on startup after which time access manager may receive requests to join the chat room from various components. Correspondingly group chat manager may be configured to manage access to group chat component .

API entry point may be configured as the initial destination of all exemplary protocol API requests. Correspondingly API redirector may be configured to forward API request to the proper device s and or component s of LAN and access validator may be configured to validate API requests against access privileges.

Component table may be configured to contain a list of exemplary protocol components in LAN e.g. each of drive agent shims . Additionally component table may be configured to contain a mapping between identifiers of exemplary protocol components in LAN and corresponding messaging account identifiers e.g. JabberIDs in XMPP . Additionally yet component table may be configured to contain current status information for the components in LAN such as whether a component is online or offline. Such information may be obtained via chat room component . Other examples are possible as well.

User table may be configured to contain a list of exemplary protocol users in LAN . Further user table may be configured to contain a mapping between identifiers of exemplary protocol users in LAN and identifiers of devices and or components in LAN associated with each user. Other examples are possible as well.

Device table may be configured to contain a list of exemplary protocol devices in LAN . Additionally device table may be configured to contain current status information for the exemplary protocol devices in LAN such as whether a device is online or offline. Other examples are possible as well.

Service table may be configured to contain a list of available file services provided by the exemplary protocol in LAN . Additionally service table may be configured to contain a mapping between each available file service and a list of users allowed to access that file service. In this respect the list of users allowed to access a new file service may initially include only the creating user of that file service and the creating user and or an administrator may then update the list of users allowed to access the file service via a management interface. Other examples are possible as well.

Referring back to storage manager may be configured to manage the file services provided by the exemplary protocol in LAN . In this respect storage manager may include various components that enable it to perform the functions described herein.

API servicer may be configured to respond to API requests. For example API servicer may receive an API call and identify a component e.g. one of drive agent shims to service the API call. Other examples are possible as well.

Group chat component may be configured to facilitate a chat room and thereby enable devices and or components in LAN to report status and change information regarding resources in LAN . Correspondingly group chat manager may be configured to manage access to group chat component .

Sync manager may be configured to monitor the chat room for status information relating to file sync services such as announcements regarding changes to resources. Additionally sync manager may be configured to initiate sync sessions between components in LAN participating in file sync services such that all resources assigned to a file sync service remain synchronized.

Search manager may be configured to coordinate search operations relating to any file search services.

Service resource table may be configured to contain a mapping between each file service provided by LAN and a list of resources assigned to the file service. In this respect service resource table may contain both a unique resource identifier of each stored resource assigned to a file service and an identifier of a device and or component on which each resource is stored. Additionally service resource table may be configured to contain status information for each resource assigned to a file service such as whether a resource is available or unavailable. Other examples are possible as well.

Referring back to security gateway may be configured to facilitate secure access of resources stored on devices in LAN by other devices via WAN . Security gateway may perform this function in any manner now know or later developed.

Drive agents may each be configured to enable its hosting client device to participate in the file services provide by the exemplary protocol. For example drive agents may each receive and fulfill requests from users to assign stored resources to a file service. As another example drive agents may each receive and fulfill requests from native applications on a hosting client device to access a resource stored on another client device or networking device . As yet another example drive agents may each receive and fulfill requests from storage manager to provide a resource stored on a hosting client device to another client device or networking device . Other examples are possible as well.

Drive agents may each also include or have access to various other components that perform functions related to the file services provided by the exemplary protocol. For instance drive agents may each include or have access to a file system monitor configured to monitor and report changes to resources in the hosting client device s file system. As one example drive agents may each monitor resource changes using a file filtering service provided by the hosting client device s operating system. Correspondingly drive agents may each may track and record resource changes using a transaction log and or a hash tree e.g. a Merkle tree . Other examples are possible as well.

Further drive agents may each include or have access to a resource badge updater configured to manage badges for stored resources assigned to file services. These resource badges may take the form of a small graphic that is overlaid on the resource icon and displayed through the hosting client device s file browser to indicate whether the resource is up to date or out of date. In some embodiments these resource badges may be written to the resource s metadata. Other examples are possible as well.

Further yet drive agents may each include or have access to a file context menu service configured to provide for one or more resources on the hosting client device a context menu that lists the file services to which the resource can be assigned. The file context menu service may provide this context menu in various manners. For example the file context menu service may first obtain the list of available file services from service table of access manager . In turn the file context menu service may display file service options on a resource s general context menu which may be accessible by right clicking on the resource. Other examples are possible as well.

Still further drive agents may each include or have access to a resource location table configured to contain a mapping between each stored resource assigned to an available file service and a storage location on the hosting client device of the resource. Other examples are possible as well.

Although not shown drive agent shims may each include other components as well. For example drive agent shims may each may include a working directory manager configured to provide one or more working directories on the hosting client device in which the exemplary protocol can store resources. In another example drive agent shims may each include a GUI configuration which may various forms depending on the operating system of the hosting client device. Other examples are possible as well.

Within the configuration depicted in the exemplary protocol may provide various addressing schemes for accessing resources and other information in LAN . For instance the exemplary protocol may provide a uniform resource identifier URI addressing scheme for accessing resources and other information. In this respect the URIs may take various forms. For example each such URI may begin with ExemplaryProtocolID . A URI for accessing a resource assigned to a given file service may then include FileServices ServiceType ServiceName ResourceID . In some embodiments this URI may additionally include DeviceName before ResourceID . Further a URI for accessing information stored in a data table may include Management TableName . Other examples are possible as well.

As described above the exemplary protocol may provide various file services that each enables a computing device to make stored resources available for access by other computing devices. is a flow chart depicting a method of assigning a stored resource to a file service according to an example embodiment. For purposes of illustration exemplary method will be described with reference to client device and in particular drive agent shim installed on client device assigning at least one stored resource to a given file service. It should be understood however that exemplary method may be applicable to any computing device operating according to the exemplary protocol.

Exemplary method may begin at step with client device receiving a request to assign at least one resource e.g. a file and or directory stored on client device to a given file service e.g. a file share file sync or file search service . This request may take various forms. In one example the request may take the form of a user s selection of a file service option on a context menu for the at least one stored resource. In this respect as described above client device may be configured to display file service options in a context menu for one or more stored resources. Other examples are possible as well.

At step in response to the request client device may generate a unique identifier of the at least one stored resource that correlates to a storage location of the at least one stored resource. The unique identifier may take various forms. In one example the unique identifier may take the form of numerical string. Other examples are possible as well.

At step client device may also store the unique identifier of the at least one stored resource together with an identifier of its storage location. For instance client device may store the unique identifier of the at least one stored resource together with an identifier of its storage location in the resource location table described above. The storage location identifier may take various forms. In one example the storage location identifier may be a file path. Other examples are possible as well.

At step client device may send to networking device the unique identifier of the at least one stored resource and an identifier of the given file service to which the at least one resource is assigned. The file service identifier may take various forms. In one example the file service identifier may take the form of a text string. Other examples are possible as well.

As a result of client device sending the unique identifier of the at least one stored resource and the identifier of the given file service networking device may receive the unique identifier of the at least one stored resource and the identifier of the given file service to which the at least one resource is assigned. In turn networking device may store the unique identifier of the at least one stored resource and an identifier of a device and or component on which the at least one resource is stored e.g. a JabberID in XMPP together with the identifier of the given file service to which the at least one resource is assigned. For instance networking device may store the unique identifier of the at least one stored resource the identifier of the device and or component and the identifier of the given file service in service resource table described above. Other examples are possible as well.

Advantageously exemplary method may enable a user of computing device to make only certain stored resources available for access by other computing devices operating according to the exemplary protocol while precluding access to all other stored resources.

As described above the exemplary protocol may provide various file services that each enables a computing device to access available resources stored on another computing device. is a flow chart depicting an exemplary method of facilitating access to a resource assigned to a given file service. For purposes of illustration exemplary method will be described with reference to network device e.g. access manager and storage manager installed on networking device facilitating access to a resource assigned to a given file service but it should be understood that exemplary method may be applicable to any computing device operating according to the exemplary protocol.

Exemplary method may begin with one of client devices such as client device sending a request for a given resource e.g. a file directory and or metadata assigned to a given file service such as a file share a file sync or a file search service for instance. It should be understood that such a request may also be sent from a remote device via WAN . For instance a native application installed on client device may initiate such a request and drive agent shim installed on client device may then be configured to detect the initiation of the request and responsively send the request to networking device . Other examples are possible as well.

At step networking device e.g. access manager may then receive the request from client device . This request may include an identifier of the given resource and an identifier of the given file service. Further in some embodiments the request may include an identifier of another of client devices from which to obtain the given resource. The request itself may take various forms. In one example the request may include a URI as described above. Other examples are possible as well.

At step in response to receiving the request networking device e.g. access manager may verify that client device is allowed to access the given file service. For instance networking device may first identify a user associated with client device e.g. based on user table described above . In turn networking device may determine that the identified user is allowed to access the given file service based on a table mapping file services to identifiers of users allowed to access the file services e.g. service table described above . Other examples are possible as well.

At step in response to verifying that client device is allowed to access the given file service networking device e.g. storage manager may identify a second one of client devices having at least one stored resource assigned to the given file service. Networking device may perform this identification in various manners. In one example if the request for the given resource includes an identifier of another of client devices from which to obtain the given resource networking device may identify that client device. In another example networking device may identify the other of client devices based on a table mapping file services to client devices having at least one resource assigned to the file services e.g. service table described above . In this respect if networking device identifies two or more clients having at least one resource assigned to the given file service networking device may employ load balancing to select one of these client devices. Other examples are possible as well.

At step networking device e.g. storage manager may then send to the second one of client devices such as client device an updated request for the given resource. This updated request may include a unique identifier of the at least one stored resource assigned to the given file service. The updated request may include other information as well.

As a result of networking device sending the updated request client device may receive the updated request. In turn client device may locate the given resource in storage based on a correlation of the unique identifier of the at least one stored resource to a storage location of the at least one stored resource e.g. the resource location table described above . For example if the given resource is a file and the at least one stored resource is a directory client device may first locate the stored directory based on the correlation of the unique identifier of the stored directory to the storage location of the stored directory. Client device may then located the file within the stored directory. Other examples are possible as well. After locating the given resource client device may then send the given resource for receipt by client device

At step networking device may receive the given resource from client device In turn at step networking device may forward the given resource to client device

Advantageously exemplary method may enable computing device to seamlessly access available resources stored on other of computing devices . As such together with exemplary method exemplary method may provide seamless user controllable information sharing between computing devices

The exemplary protocol described herein may also provide various other services. For example the exemplary protocol may be configured to provide a unified desktop through which a user can launch applications and interact with widgets. As another example the exemplary protocol may be configured to provide an application platform for web based applications along with APIs to access the application platform. As still another example the exemplary protocol may further be configured to enable access to data on an information appliance in LAN . Other examples are possible as well.

It is intended that the foregoing detailed description be regarded as illustrative rather than limiting and that it is understood that the following claims including all equivalents are intended to define the scope of the invention. The claims should not be read as limited to the described order or elements unless stated to that effect. Therefore all embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

