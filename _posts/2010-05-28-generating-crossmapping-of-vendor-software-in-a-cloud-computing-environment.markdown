---

title: Generating cross-mapping of vendor software in a cloud computing environment
abstract: A compatibility service can determine the compatibility of different software programs provide by different vendors in a cloud. The compatibility service can identify the software programs provided by different vendors in the cloud and which of the identified software programs are compatible. The compatibility service can generate and store a record of the compatible software programs and provide identification, tracking, and mapping services based on the record.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436459&OS=09436459&RS=09436459
owner: Red Hat, Inc.
number: 09436459
owner_city: Raleigh
owner_country: US
publication_date: 20100528
---
This invention relates generally to products and services more particularly to systems and methods for cloud computing related services and products.

The advent of cloud based computing architectures has opened new possibilities for the rapid and scalable deployment of virtual Web stores media outlets and other on line sites or services. In general a cloud based architecture deploys a set of hosted resources such as processors operating systems software and other components that can be combined or strung together to form virtual machines. A user or customer can request the instantiation of a virtual machine or set of machines from those resources from a central server or management system to perform intended tasks or applications. For example a user may wish to set up and instantiate a virtual server from the cloud to create a storefront to market products or services on a temporary basis for instance to sell tickets to an upcoming sports or musical performance. The user can lease or subscribe to the set of resources needed to build and run the set of instantiated virtual machines on a comparatively short term basis such as hours or days for their intended application.

Typically the cloud also provides software programs from different software vendors that the user can buy lease or utilize under a software as a service model SaaS . When considering the software programs the user can assume that the software programs from a single software vendor will be compatible. The user however cannot make this assumption when considering software programs from different software vendors. Thus the user is discouraged from utilizing software programs from different software vendors in combination due to possible incompatibilities.

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific embodiments. Electrical mechanical logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present teachings. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

Embodiments of the present teachings relate to systems and methods for enabling users to identify compatible software programs provided by different vendors in a cloud computing environment. Additionally embodiments of the present teachings relate to systems and method for enabling users to design software appliances based on compatible software programs provided by different vendors in a cloud computing environment.

According to embodiments a compatibility service can be configured to determine the compatibility of different software programs provide by different vendors in a cloud. The compatibility service can be configured to identify the software programs provided by different vendors in the cloud and which of the identified software programs are compatible. The compatibility service can determine which of the software programs are compatible by querying the different vendors. Likewise the compatibility service can determine which of the software programs are compatible by querying a cloud management system of the cloud to identify which of the software programs are currently used together in the cloud.

According to embodiments once the compatible software programs are determined the compatibility service can be configured to generate and store a record of the compatible software programs. For a particular software program the record can include an identification of a particular software program e.g. name version a type of particular software program operating system application server etc. the vendor of the particular software program and other software programs provided in the cloud that are compatible the particular software program. For a particular software program the record can also store other information such as a minimum amount of cloud resources to instantiate the particular software program in the cloud and a price to use the particular software program in the cloud.

According to embodiments once the record is generated the compatibility service can be configured to utilize the record to identify for a user compatible software programs provided by the cloud. Likewise the compatibility service can be configured to utilize the record to assist users designing and implementing software appliances in the cloud. The compatibility service can be configured to offer these services to the user at a fee.

By identifying tracking and mapping compatible software program provided by the cloud the compatibility service can enable users to easily identify compatible software programs across different vendors. Accordingly the compatibility service allows the user flexibility in using the cloud by allowing the user to customize software program usage across different vendors.

In embodiments the entire set of the resource servers or other hardware or software resources used to support the cloud along with its instantiated virtual machines software appliances or other processes can be managed by a cloud management system . The cloud management system can comprise a dedicated or centralized server and or other software hardware and network tools that communicate via one or more networks such as the Internet or other public or private network with all of the resource servers to manage the cloud and its operation. To instantiate a new virtual machines software appliances or other processes a user can transmit an instantiation request to the cloud management system. for the particular type of virtual machine software appliance or other process they wish to invoke for their intended application. A user can for instance make a request to instantiate a set of virtual machines configured for email messaging or other applications from the cloud . The request can be received and processed by the cloud management system which identifies the type of virtual machine software appliance or other process being requested. The cloud management system can then identify the collection of resources necessary to instantiate that virtual machine software appliance or other process. In embodiments the instantiated virtual machines software appliances or other processes can for example comprise virtual transaction servers used to support Web storefronts or other transaction sites.

In embodiments the user s instantiation request can specify a variety of parameters defining the operation of the virtual machines software appliances or other processes to be invoked. The instantiation request for example can specify a defined period of time for which the instantiated virtual machine software appliance or other process is needed. The period of time can be for example an hour a day or other increment of time. In embodiments the user s instantiation request can specify the instantiation of the virtual machines software appliances or other processes on a task basis rather than for a predetermined amount of time. For instance a user could request resources until a software update is completed. The user s instantiation request can specify other parameters that define the configuration and operation of the virtual machines software appliances or other processes. For example the request can specify an amount of processing power or input output I O throughput the user wishes to be available to each instance of the virtual machines software appliances or other processes. In embodiments the requesting user can for instance specify a service level agreement SLA acceptable for the virtual machines software appliances or other processes. Other parameters and settings can be used. One skilled in the art will realize that the user s request can likewise include combinations of the foregoing exemplary parameters and others.

When the request to instantiate a virtual machines software appliances or other processes has been received and the necessary resources to build the virtual machines software appliances or other processes have been identified the cloud management system can communicate with one or more the resource servers to locate resources to supply the virtual machines software appliances or other processes. The cloud management system can select resources from any of the resource servers to assemble the resources needed to build the requested virtual machines software appliances or other processes. It may be noted that in some embodiments permanent storage such as hard disk arrays may not be included or located within the resource servers available to the cloud management system because the virtual machines software appliances or other processes may be intended to operate on a purely transient or temporary basis. In embodiments other hardware resources software resources or other resources not strictly located or hosted in the cloud can be leveraged as needed. For example other software services that are provided outside of the cloud and hosted by third parties can be invoked by in cloud virtual machines software appliances or other processes. For further example other non cloud hardware and or storage services can be utilized as an extension to the cloud either on demand subscribed or decided basis.

With the resource requirements identified the cloud management system can extract and build the virtual machines software appliances or other processes on a dynamic or on demand basis. For example a group of the resource servers can respond to an instantiation request for a given quantity of processor cycles with an offer to deliver that computational power immediately and guaranteed for the next hour. A further group of the resource servers can offer to immediately supply communication bandwidth for example on a guaranteed minimum or best efforts basis. In other embodiments the virtual machines software appliances or other processes can be built on a batch basis or at a particular future time. For example a group of the resource servers can respond to a request for instantiation at a programmed time with an offer to deliver the specified quantity of processor cycles within a specific amount of time such as the next 12 hours.

The cloud management system can select a group of the resource servers that match or best match the instantiation request for resources needed to build the virtual machines software appliances or other processes. The cloud management system can then coordinate the integration of the group of the resource servers to build and launch the requested virtual machines software appliances or other processes. The cloud management system can track the integrated group of the resource servers or other distributed resources that are dynamically or temporarily combined to produce and manage the requested virtual machines software appliances or other processes.

In embodiments the cloud management system can generate a resource aggregation table that identifies the group of the resource servers that will be used to supply the resources for the virtual machines software appliances or other processes. The resource servers can be identified by unique identifiers such as for instance Internet Protocol IP addresses or other addresses. The cloud management system can register the group of the resource servers contributing to the virtual machines software appliances or other processes.

The cloud management system can then set up and launch the initiation process for the virtual machines software appliances or other processes to be delivered from the cloud . The cloud management system can for instance transmit an instantiation command or instruction to the group of the resource servers providing resources to the virtual machines software appliances or other processes. The cloud management system can receive a confirmation message back from each server in the group of the resource servers indicating a status regarding the provisioning of their respective resources. Each of the resource servers can confirm for example the availability of a dedicated amount of processor cycles amounts of electronic memory communications bandwidth or applications or other software prepared to be served.

As shown for example in the cloud management system can then instantiate one or more than one set of virtual machines software appliances not shown or other processes not shown on the resources supplied by the group of the resource servers . In embodiments the cloud management system can instantiate a given number for example 10 500 1000 or other number of virtual machines software appliances or other processes to be made available to users on a network such as the Internet or other public or private network. Each virtual machine software appliance or other process can be assigned an instantiated machine ID that can be stored in the resource aggregation table or other record or image of the instantiated virtual machines software appliances or other processes. Additionally the cloud management system can store the duration of each virtual machine software appliance or other process and the collection of resources utilized by the complete set of virtual machines software appliances or other processes for example as illustrated the instantiated virtual machines .

In embodiments the cloud management system can further store track and manage a user s identity and associated set of rights or entitlements to software hardware and other resources provided by the cloud . Each user that populates virtual machines software appliances or other processes in the cloud can have specific rights and resources assigned and made available to them. The cloud management system can track and configure specific actions that a user can perform such as provision virtual machines software appliances or other processes with resources configure virtual machines software appliances or other processes to desired specifications submit jobs to virtual machines software appliances or other processes manage other users of virtual machines software appliances or other processes and other privileges or actions. The cloud management system can further generate records of the usage of virtual machines software appliances or other processes for example virtual machines to permit tracking billing and auditing of the resources consumed by the user. In embodiments the cloud management system can for example meter the usage and or duration of the instantiated virtual machines to generate subscription billing records for a user that has requested resources for those machines. Other billing or value arrangements are possible.

The cloud management system can configure each virtual machine software appliance or other process to be made available to users of the one or more networks via a browser interface or other interface or mechanism. Each virtual machine software appliance or other process can communicate with the cloud management system and the resource servers supporting virtual machines software appliances or other processes via a standard Web application programming interface API or via other calls or interfaces. The virtual machines software appliances or other processes for example instantiated virtual machines can likewise communicate with each other as well as other sites servers locations and resources available via the Internet or other public or private networks whether within a given cloud or between clouds.

It may be noted that while a browser interface or other front end can be used to view and operate virtual machines software appliances or other processes for example the virtual machines from a client or terminal the browser interface or other front end required to view the virtual machines software appliances or other processes can be hosted remotely in the cloud . In embodiments the virtual machines software appliances or other processes for example the virtual machines or other resources may not depend on or require the user s own on premise hardware or other resources. In embodiments a user can therefore request and instantiate virtual machines software appliances or other processes on a purely off premise basis for instance to build and launch a virtual storefront or other application.

Because the cloud management system in one regard specifies builds operates and manages the virtual machines software appliances or other processes for example the virtual machines on a logical level the user can request and instantiate virtual machines software appliances or other processes on a real time or near real time basis without a need to specify or install any particular hardware. The user s virtual machines software appliances or other processes such as the instantiated virtual machines can be scaled up or down immediately or virtually immediately on an on demand basis if desired. In embodiments the resource server that are accessed by the cloud management system to support the virtual machines software appliances or other processes can change or be substituted over time. The type and operating characteristics of the virtual machines software appliances or other processes for example the instantiated virtual machines can nevertheless remain constant or virtually constant since instances are assembled from abstracted resources that can be selected and maintained from diverse sources based on uniform specifications.

In teens of network management of the virtual machines software appliances or other processes such as the instantiated virtual machines that have been successfully configured and instantiated the cloud management system can perform various network management tasks including security maintenance and metering for billing or subscription purposes. The cloud management system of a given cloud can for example install or terminate the software and hardware resources on individual resource servers or the virtual machines software appliances or other processes themselves. The cloud management system can monitor the virtual machines software appliances or other processes to detect any virus or other rogue process on individual virtual machine software appliance or other process and for instance terminate the infected virtual machine software appliance or other process. The cloud management system can likewise manage the virtual machines software appliances or other processes for example the instantiated virtual machines on a collective basis for instance to push or deliver a software upgrade to all virtual machines software appliances or other processes. Other management processes are possible.

In embodiments more than one set of virtual machines software appliances or other processes can be instantiated in a given cloud at the same overlapping or successive times. The cloud management system can in such implementations build launch and manage multiple sets of virtual machines software appliances or other processes based on the same or different underlying resource servers such as may be requested by different users. The cloud management system can institute and enforce security protocols in a cloud hosting multiple sets of virtual machines software appliances or other processes. Each of the individual sets of virtual machines software appliances or other processes can be hosted in a respective partition or sub cloud of the resources of the cloud . The cloud management system of the cloud can for example deploy services specific to isolated or defined sub clouds or isolate individual virtual machines software appliances or other processes within the cloud to a specific sub cloud. The subdivision of the cloud into distinct transient sub clouds or other sub components which have assured security and isolation features can assist in establishing a multiple user or multi tenant cloud arrangement. In a multiple user scenario each of the multiple users can use the cloud as a common utility while retaining the assurance that their information is secure from other users of the cloud . In further embodiments the sub clouds can nevertheless be configured to share resources if desired.

In embodiments the virtual machines software appliances or other processes generated in the cloud can also interact with the virtual machines software appliances or other processes generated in a second cloud . For example as illustrated in the instantiated virtual machines can also interact with virtual machines of the cloud . The cloud management system of the cloud can interface with the cloud management system of the cloud to coordinate those domains and operate the clouds and or can also interact with on a combined basis. The cloud management system of the cloud can track and manage virtual machines software appliances or other processes instantiated in the cloud as well as virtual machines software appliances or other processes in the cloud . Additionally when instantiate the virtual machines software appliances or other processes a portion of the virtual machines software appliances or other processes can be instantiated in the cloud and a portion of the virtual machines software appliances or other processes can be instantiated in the cloud .

In the foregoing and other embodiments the user making an instantiation request or otherwise accessing or utilizing the cloud or can be a person customer subscriber administrator corporation organization or other entity. In embodiments the user can be or include another virtual machines software appliances or other processes. In further embodiments multiple users or entities can share the use of virtual machines software appliances or other processes.

As illustrated in the cloud computing environment can include the cloud . The cloud can include the hardware and software resources to support virtual machines software appliances or other processes as described above including the cloud management system . The cloud can be any type of cloud that is controlled by any type of entity. For example the cloud can be a public cloud that is owned and or operated by a public cloud vendor such as Amazon Inc. in order to provide the services of the cloud to subscribers and customers.

In embodiments the cloud can offer software programs of different vendors for use by the subscribers and customers of the cloud . For example the subscriber and customers can buy lease or utilize under a software as a service model SaaS the software programs. The software programs can include any type of software such as operating systems such as a distribution of Linux provided by Red Hat Corporation and various software programs requested or typically desired by subscribers such as middleware applications web hosting applications electronic mail email applications and the like. The software programs can include software programs provided by different vendors for example Red Hat Corporation Oracle and the like. The software programs can include any type of product and or service provided by a vendor in the cloud . For example the software programs can include operating systems and or updates to these application programs and or updates to these software appliances and or updates to these and any combinations of operating systems application programs and or software appliances. The software programs can also include services provided by the vendor for example application services data storage identity management security communications technical support and or other services. The vendors can offer the software programs in the cloud under a variety of different schemes such as offer for purchase offer for lease and or offer for on demand use under a subscription for example a Software as a Service SaaS model. As illustrated for example the cloud can provide software programs provided by vendor A software programs provided by vendor B and software programs provided by vendor C .

A subscriber or customer can desire to use one or more of the software programs and from the different vendors together in the cloud . For example the subscriber or customer can desire to use one of the software programs provided by the vendor A together with one of the software programs provided by the vendor C . Likewise for example the subscriber or customer can desire to use one of the software programs provided by vendor B and can desire to know other software programs that are compatible with this software program.

In embodiments the cloud computing environment can include a compatibility service . The compatibility service can be configured to identify track and map the compatibility of the software programs and from the vendor A the vendor B and the vendor C . Additionally the compatibility service can be configured to provide compatibility mapping services to entities of the cloud computing environment as described below.

In embodiments the compatibility service can be implemented as a software program that is configured to perform the compatibility identification tracking and mapping services as described herein. Likewise the compatibility service can be implemented as a portion of other software programs. In either case the compatibility service can be configured to include the necessary logic commands instructions and protocols to perform the processes described herein. In any implementation the compatibility service can be written in any type of conventional programming language such as C C JAVA Perl and the like.

In embodiments as illustrated in the compatibility service can be executed on a computing system . The computing system can be one more of any type of computing system capable of executing the compatibility service such as servers laptops desktops and the like. The computing system can include a number of hardware resources which are used to execute the compatibility service such as processors memory network hardware and bandwidth storage devices etc. and a number of software resources such as operating systems application programs software appliances etc. The compatibility service can be stored in computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to the computing system or remotely located.

The computing system can be coupled to one or more networks . The compatibility service can be configured to utilize the one or more networks to communicate with the cloud and the vendor A vendor B and vendor C . The one or more networks can be or include the Internet or other public or private networks. The one or more or more networks can be or include wired wireless optical and other network connections. One skilled in the art will realize that the one or more networks can be any type of network utilizing any type of communication protocol to connect the computing systems.

While illustrates the compatibility service being executed on the computing system the compatibility service can be executed on any computing system in the cloud computing environment . For example the compatibility service can be executed in the cloud . Likewise the compatibility service can be executed on computing systems of the vendor A vendor B and vendor C .

In embodiments to identify and track the compatibility of the software programs and the compatibility service can be configured to identify the software programs and provided by the vendor A vendor B and vendor C in the cloud . In particular the compatibility service can be configured to communicate with the cloud management system the vendor A the vendor B and or the vendor C to determine the software programs and provided in the cloud . To achieve this the compatibility service can be configured to include the necessary logic commands instructions and protocols to communicate with the cloud management system the vendor A the vendor B and or the vendor C via the one or more networks .

When identifying the software programs and the compatibility service can be configured to identify and collect any information relevant to the software programs and . For example the compatibility service can identify and collect information such as an identification of each software program e.g. name and version a type of each software program e.g. OS email server application server word processing program etc. the vendor that provides each software program a minimum amount of resources to instantiate each software program in the cloud and a price the vendor changes to provide each software program in the cloud . Any portion of this information can be maintained and provided to the compatibility service by the cloud management system the vendor A the vendor B and or the vendor C .

During identifying the software programs and or at a different time the compatibility service can also be configured to identify which of the software programs and are compatible with each other. In embodiments compatible software programs are software programs that can operate together can share data can communicate and or can otherwise function together to perform a task. The compatibility service can be configured to communicate with the cloud management system the vendor A the vendor B and or the vendor C to determine the compatibility of the software programs and . For example the cloud management system maintains a record of all software currently instantiated in the cloud . Thus the cloud management system can maintain a record of the software programs and that are currently operating properly together i.e. are compatible. Likewise the vendor A the vendor B and or the vendor C can maintain records of software programs known to be compatible with their software programs. When requested by the compatibility service the cloud management system the vendor A the vendor B and or the vendor C can provide the compatibility of the software programs and know by each.

Once the compatibility service has identified the software programs and and which of these are compatible the compatibility service can be configured to generate a compatibility record that details the software programs and and the compatibility of these software programs. The compatibility record can be any type of searchable data record system e.g. database that is capable of storing information about the software programs and and the compatibility of these. To generate and utilize the compatibility record the compatibility service can be configured to include the necessary logic commands instructions and protocols to generate the compatibility record store data in the compatibility record search the compatibility record and extract data from the compatibility record . The compatibility service can be configured to store the compatibility record in computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to the computing system or remotely located.

In embodiments once the compatibility service has generated and stored the compatibility record the compatibility service can be configured to update the compatibility record as new software programs are provided from the cloud as one or more of the software programs and are no longer provided by the cloud and or as the information related to the software programs and changes. The compatibility service can periodically communicate with the cloud management system the vendor A the vendor B and or the vendor C to identify any changes that require an update to the compatibility record . Likewise the compatibility service can receive notification from the cloud management system the vendor A the vendor B and or the vendor C of a change that requires an update to the compatibility record .

In embodiments once the compatibility record is generated the compatibility service can be configured to provide compatibility tracking and mapping services to entities in the cloud computing environment . The compatibility service can provide the compatibility tracking and mapping services to the cloud management system the vendor A the vendor B and or the vendor C . Likewise the compatibility service can provide the compatibility tracking and mapping services to a user for example a subscriber or customer of the cloud . The compatibility service can be configured to provide the compatibility tracking and mapping services to entities in the cloud computing environment for a fee.

In embodiments the compatibility tracking and mapping services provided by the compatibility service can include identifying compatible software programs and information about the software programs. To provide these services the compatibility service can be configured to provide an interface that allows an entity in the cloud computing environment to request identification of compatible software programs and information about the software programs. The compatibility service can be configured to include the necessary logic commands instructions and protocols to generate the interface e.g. command line interfaces and or graphical user interfaces GUIs that is accessible via the one or more networks . For instance the compatibility tool can generate a web based interface that allows an entity of the cloud computing environment to provide a request and receive a response. The request from the entity can specify for example the software program for which to determine compatibility and the information desired by the entity.

In embodiments when a request to identify compatible software programs or information about the software programs is received the compatibility service can be configured to search the compatible record in order to determine any compatible software programs and information about the software programs based on the request. Once determined the compatibility service can provide a response including the compatible software programs and any relevant information via the interface .

For example referring to the example of the compatibility record illustrated in the user can desire to utilize software program 1 of the software programs provided by the vendor A in the cloud . The user can also desire to identify any other software programs that are compatible with the software program 1 of the software programs . The user can provide a request via the interface to identify all compatible software programs which are compatible with the software program 1 of the software programs . When received the compatibility service can search the compatibility record to determine the software programs that are compatible with the software program 1 i.e. software program 3 provided by vendor A and software program 4 provided by vendor C . The compatibility service can also extract any information related to the software program 1 software program 3 and software program 4 . Then the compatibility service can provide the determined compatibility and information to the user via the interface . illustrates an example of the response provided to the user via the interface .

In embodiments the compatibility service can also be configured to utilize the compatibility record to provide other services to entities in the cloud computing environment . The compatibility service can be configured to design software appliances for the entities of the cloud computing environment . The compatibility service can be configured to maintain an appliance record . The appliance record can include various types of known software appliances e.g. email server appliance application server appliance web server appliance etc. and the software programs that are included in the various types of known software appliances. The compatibility service can be configured to store the appliance record in a computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to the computing system or remotely located.

In embodiments the entities of the cloud computing environment can request via the network that the compatibility service design a software appliance such as an email server appliance web server appliance application server appliance and the like. The request from the entities can include a type of software appliance for the compatibility service to design. In response the compatibility service can be configured to determine one or more designs for the type of the software appliance requested. The compatibility service can be configured to search the appliance record to determine the types of software programs that are included in the type of software appliance requested. Once the types of software programs are determined the compatibility service can be configured to search the compatibility record to determine various combinations of software programs that meet the determined types of software programs and that are compatible. The combination of software programs can include any number of software programs that meet the type of the software appliance requested.

The compatibility service can be configured to provide the determined combinations of software programs to the requesting entity as various designs of the requested software appliance. Additionally the compatibility service can be configured to provide other information contained in the compatibility record about the combinations of software programs e.g. vendor price and minimum cloud resource requirements .

In embodiments the compatibility service can also be configured to generate a specification for the software appliance that the cloud management system can utilize to build the software appliance. The specification can include any information that the cloud management system needs to build the software appliance such as the name of the software programs included in the software appliance and the minimum resource requirements to support the software programs in the cloud . The specification can include other information such as vendor and price so that the cloud management system can perform other processes such as billing the entity or notifying the vendor. The compatibility service can be configured to generate the specification in self describing language for example Extensible Mark Up Language XML . Once the specification is generated the compatibility service can be configured to provide the specification to the requesting entity and or the cloud management system .

For example referring to the the user can request that the compatibility service design an application server appliance. In response to the request the compatibility service can search the appliance record and determine that the application server appliance includes the types of software programs operating system and application server. The compatibility service can search the compatibility record to determine combination of software programs that can be used to design the requested software appliance. For instance the compatibility service can determine two designs Appliance 1 including software 1 as the operating system and software 4 as the application server and Appliance 2 including software 2 as the operating system and software 4 as the application server. The compatibility service can then provide a response to the user identifying the two determined designs. The response can also include other information vendor price minimum resource requirements for the cloud etc. contained in the compatibility record about the software programs included in the determined software appliance designs.

As illustrated in the compatibility service can provide the identification tracking and mapping services for the cloud . One skilled in the art will realize that the compatibility service can provide the identification tracking and mapping services for any cloud that provides software programs from vendors for which the compatibility is stored in the compatibility record .

The processor also communicates with the application program embodiment of the compatibility service to execute control logic and allow for the processes as described above and below. Other configurations of the computing system associated network connections and other hardware and software resources are possible.

While illustrates the computing system as a standalone system including a combination of hardware and software the computing system can include multiple systems operating in cooperation. The application program embodiment of the compatibility service can be implemented as a software application program capable of being executed by the computing system as illustrated or other conventional computer platforms. Likewise the compatibility service can also be implemented as a software module or program module capable of being incorporated in other software application programs. In either case the compatibility service can be implemented in any type of conventional proprietary or open source computer language. When implemented as a software application program or program code the compatibility service can be stored in a computer readable storage medium or device such as storage accessible by the computing system . Likewise during execution a copy of the compatibility service can be stored in the memory .

In the compatibility service can determine which of the identified software programs are compatible. For example the compatibility service can communicate with the cloud management system the vendor A the vendor B and or the vendor C to determine the compatibility of the software programs and .

In the compatibility service can generate a compatibility record of the identified software programs. The compatibility record can include an identification of the identified software programs and e.g. name version a type of the identified software programs and operating system application server etc. the vendor of the identified software programs and and which of the identified software programs and are compatible. The compatibility record can also store other information such as a minimum amount of cloud resources to instantiate the identified software programs and in the cloud and a price to use the identified software programs and in the cloud .

In the compatibility service can utilize the compatibility record to provide compatibility tracking and mapping services. For example the compatibility service can utilize the compatibility record to identify compatible software programs and the details of the compatible software programs. In the process can end but the process can return to any point and repeat.

In the compatibility service can receive a request to design a software appliance. The request can specify a type of software appliance to design. In the compatibility service can determine the types of software programs included in the type of software appliance requested. The compatibility service can search the appliance record to identify the types of software programs that are included in the type of software appliance requested.

In the compatibility service can determine the software programs that meet the types of software programs included in the requested software appliance and that are compatible. The compatibility service can search the compatibility record to identify the software programs and that meet the type of software programs included in the requested software appliance and that are compatible.

In the compatibility service can generate designs for the requested software appliance based on the determined software programs and . The designs can include an identification of the software programs and that meet the type of software programs included in the requested software appliance and that are compatible. The designs can also include other information from the compatibility record such as vendor price and minimum resources to support the software programs and .

In the compatibility service can provide the designs to the requester. For example the compatibility service can provide the designs to an entity in the cloud computing environment via the one or more networks .

In the compatibility service can generate a specification based on the designs of the requested software appliance. For example the entity can select one of the designs to build a software appliance in the cloud and the compatibility service can generate the specification for the selected design. The specification can include any information that the cloud management system needs to build the software appliance such as the name of the software programs included in the software appliance and the minimum resource requirements to support the software programs in the cloud . The specification can include other information such as vendor and price so that the cloud management system can perform other processes such as billing the entity or notifying the vendor. The compatibility service can generate the specification in self describing language for example Extensible Mark Up Language XML . Once the specification is generated the compatibility service can provide the specification to the requesting entity and or the cloud management system .

Certain embodiments may be performed as a computer application program. The computer application program may exist in a variety of forms both active and inactive. For example the application program can exist as software program s comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include computer readable storage devices and media and signals in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present teachings can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software application program s on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the aspects have been described with reference to the exemplary embodiments thereof those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular although the method has been described by examples the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the term one or more of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents.

