---

title: System and method for delivery of content objects
abstract: Techniques for delivering content to an end user device are disclosed. A policy server performs an ingest process in which multiple versions of a content object are created. The multiple versions of the content object are associated with a single network identifier which can be distributed to publishers of the content object. When the content object is requested using the single network identifier, the policy server determines a preferred version and delivery orchestration scheme from among the multiple versions for delivery to an end user device based on several criteria. The policy server may thereafter orchestrate delivery of the preferred version of the content object to the end user device. The single network identifier may be associated with an edge location in a content delivery network (CDN) and the policy server may orchestrate delivery in cooperation with servers at the CDN edge location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08880587&OS=08880587&RS=08880587
owner: Limelight Networks, Inc.
number: 08880587
owner_city: Tempe
owner_country: US
publication_date: 20100408
---
This application claims priority to Australian Patent Application Serial No. 2010201379 filed Apr. 7 2010 which is incorporated herein by reference in its entirety.

The demand for network based content particularly audio video content has increased dramatically in recent years. Along with the increasing demand different devices and technologies have emerged which can be used to access such content. Increasingly these devices are not traditional desktop or laptop computers they are handheld devices mobile phones internet connected television sets and other non traditional devices with widely varying capabilities. This confluence of events may present challenges to publishers who wish to distribute their content inexpensively remain up to date with the latest technology and ensure a satisfying experience for their customers.

Techniques for delivering content to an end user device are disclosed. A policy server performs an ingest process in which multiple versions of a content object are created. The multiple versions of the content object are associated with a single network identifier which can be distributed to publishers of the content object. When the content object is requested using the single network identifier the policy server determines a preferred version from among the multiple versions for delivery to an end user device based on several criteria. The policy server may thereafter orchestrate delivery of the preferred version of the content object to the end user device. The single network identifier may be associated with an edge location in a content delivery network CDN and the policy server may orchestrate delivery in cooperation with servers at the CDN edge location.

According to one embodiment a method of delivering content objects to an end user device comprises receiving notification at a policy server that a content object is available for processing. The method comprises associating a single network identifier with a plurality of versions of the content object where each version of the content object has a corresponding encoding profile in a set of encoding profiles. The method further comprises sending the network identifier to a publisher of the content object and receiving a request for the content object where the request includes the network identifier and request information. The method further comprises determining a preferred version of the content object for distribution to the end user device based on the set of encoding profiles and the request information and determining a delivery orchestration scheme by which to send the preferred version of the content object to the end user device. The method comprises sending the preferred version of the content object to the end user device in accordance with the delivery orchestration scheme.

In another embodiment a policy server comprises a publisher interface a content request interface a merge processor and a policy engine. The publisher interface receives notification that a content object is available for processing. The merge processor associates a single network identifier with a plurality of versions of the content object each version of the content object being created with a corresponding encoding profile in a set of encoding profiles. When the plurality of versions of the content object is available for distribution the merge processor provides the network identifier to the publisher interface for delivery to a publisher of the content object. The content request interface receives an HTTP hyper text transport protocol request for the content object using the network identifier and request information relating to capabilities of an end user device. The policy engine determines a preferred version of the content object for distribution to the end user device based on the encoding profiles and the request information. The policy engine also determines a delivery orchestration scheme including a delivery protocol and causes the preferred version to be sent to the end user device in accordance with the delivery orchestration scheme.

In an additional embodiment a method of distributing content objects in a content delivery network CDN is disclosed. The method includes receiving notification at a policy server that a content object is available for processing and in response to receiving the notification creating a plurality of versions of the content object with a plurality of corresponding encoding profiles. The method also includes associating the plurality of versions of the content object with a single network identifier of the CDN and sending the network identifier from the policy server to a publisher of the content object. The method also includes receiving a request for the content object comprising the CDN network identifier and request information and determining device capabilities of the end user device based on the request information. The method includes sending the preferred version of the content object to the end user device from a CDN location corresponding to the CDN network identifier.

Further areas of applicability of the present disclosure will become apparent from the detailed description provided hereinafter. It should be understood that the detailed description and specific examples while indicating various embodiments are intended for purposes of illustration only and are not intended to necessarily limit the scope of the disclosure.

In the figures similar components and or features may have the same reference label. In some cases components of the same type are identified by following a first reference label with a dash and a second reference label that further distinguishes among the similar components. If only the first reference label is used the description is applicable to any of the similar components designated by the first reference label.

The ensuing description provides preferred exemplary embodiment s only and such preferred exemplary embodiments are not intended to limit the scope or applicability of the present invention. Rather the ensuing description will enable those who are skilled in the art to implement such preferred exemplary embodiment s . Persons of skill in the art will recognize that various changes may be made in the function and arrangement of elements without departing from the spirit and scope of the invention as set forth in the appended claims.

Referring first to a block diagram of an embodiment of a content distribution system is shown in which a content originator offloads delivery of content objects to a content delivery network CDN . The content originator produces and or distributes the content objects and may include one or more publishers and content sites . The CDN delivers the content objects over the Internet to end users via corresponding end user devices .

As shown the CDN may include an origin server a policy server and various points of presence POPs . POPs can be deployed throughout content distribution system and may serve content objects to end user devices in a particular geographic area and or in connection with a particular service provider. For example a POP may be designated to serve content objects over Internet to end users in a particular city on a particular access network etc. to promote efficient delivery and a good user experience. The various CDN elements may be connected by a private network such as WAN and or a public network such as Internet .

An end user may browse for content objects at a content site with its respective end user device . As used herein a content object can be any computer accessible content and preferably includes audio data video data and images in any number of computer accessible formats. The terms content and content object may be used interchangeably wherever they appear. End user systems can include personal computers media players handheld computers Internet appliances smart phones personal digital assistants streaming radios or any other device that receives and processes content objects. The content site could be a web page from which content is accessible via a web browser.

Links to content at the content site may point to locations in the content delivery network. When an end user requests delivery of a particular content object the request may be assigned to a POP which in turn can deliver the requested content object to the end user device . If the content object is not available at the assigned POP location the request may be propagated toward the core of the CDN and may ultimately be fulfilled from origin server . Content may be cached at various points between the core CDN and edge locations to improve efficiency.

Distribution of content objects often represents an important source of revenue for publishers . For example content sites may generate advertising revenue based on the number of times that a content object is viewed clicked or downloaded by end users . Thus to maximize their revenue publishers may seek to reach as many end users with their content as possible while providing a good overall user experience.

Unfortunately end user systems can vary widely in their respective capabilities and the manner in which they interact with content objects. Different end user systems may support different collections of multimedia formats and different delivery schemes. For example beginning with OS version 3.0 the iPhone from Apple Inc. supports M3U8 playlists and MPEG 2 segmented video with iPhone HTTP Streaming IHS delivery entirely over HTTP Hypertext Transfer Protocol . On the other hand the Blackberry Storm from Research in Motion Ltd. supports playback of multimedia content in Third Generation Partnership Project 3GPP format over RTSP Real Time Streaming Protocol .

To further complicate matters the manner in which delivery of a content object is initiated may vary from device to device. For example some end user devices may need help orchestrating a browser to player B2P handoff for certain types of content objects. Moreover even when media formats and delivery methods are equally supported the manner in which a content object is delivered may depend on the type of connection to Internet available to the end user device at a particular place and time. Thus for example the playback capabilities of the Blackberry Storm may differ depending upon whether it is connected to the Internet via a WIFI connection in a cybercaf or via a cellular network in a remote location.

In the present embodiment policy server is coupled to content site via Internet and receives a notification when new content objects are available from publishers . Alternatively a publisher may upload its content to an origin server and policy server may receive notifications via WAN when a new content object becomes available. Although shown separately policy server may be located within POPs origin server or other parts of the content delivery network. Also it will be recognized that the various operations of policy server may be carried out by multiple individual servers such as decisioning servers merge servers assembly servers etc.

When a new content object is ready for processing policy server determines how it should be made available to end users. This may involve generating a number of different versions of the content object optimized for use with different end user devices having different capabilities and potentially used in different network environments. The different versions of the content object may correspond to different production or encoding profiles maintained at policy server . The production profiles in turn may be based upon a publisher s requirements for the distribution of its content objects. For example a publisher may prefer to distribute its content in a specific media format or formats to exploit device specific capabilities such as IHS streaming for iPhones to optimize separately for high bitrate and low bitrate environments to target specific operating systems and or platforms such as Windows or Mac OS etc.

Policy server may associate the different versions of a content object with a single network identifier such as a uniform resource locator URL . The single network identifier can then be returned to the publisher which created the content. The publisher can add the network identifier to one or more content sites which are accessible to end users . When a request for the content object is received from an end user device it can be sent to policy server for analysis. Using all available information policy server can determine a preferred version of the content object for the end user device and can orchestrate its delivery to the requesting end user. The preferred version and delivery method can be customized for hardware and software capabilities of the end user device bandwidth and connection quality viewing habits user preferences or any combination of factors. The preferred version may also include a selection of advertisements which are matched to information about the end user device and or the end user.

As described herein policy server provides publishers with a one to many approach to optimized content delivery. Specifically a single network identifier can point to multiple versions of a given content object from which policy server selects a preferred version for use with a particular end user device. Policy server thus relieves publishers of the burden of staying up to date with technology. When a new platform emerges or device capabilities change appropriate versions of the content object can be made available to end users through an existing network identifier without further effort from the publisher . Policy server determines the preferred version of a content object in a manner that is transparent to the end user and thus avoids complicated configuration specialized software or manual selection. The end user experience is further improved by selecting a delivery method and sending the preferred version of the content object from a POP location with a fast response time for the user s location network access etc.

A publisher interface of policy server receives notification that a content object is available for processing. The notification can be any type of network communication and may be received directly from a publisher or from a CDN location. For example a publisher may use an RSS Really Simple Syndication feed to signal that new content objects are available for processing. Alternatively the notification may be an event such as an AMQP Advanced Message Queuing Protocol message received over WAN when new content is added to a file system of origin server or other type of network communication.

When a notification is received publisher interface can provide information about the publisher and the content object to a merge processor . Merge processor retrieves the content object over Internet or wide area network and is configured to create a plurality of versions of the content object. Creating versions of the content object can involve one or more transcoding converting splicing truncating padding reformatting resampling repackaging and related operations which may alter the media format and or other attributes of the content object as originally created by the publisher .

Merge processor can create different versions of the content object according to the requirements of each publisher . In one embodiment merge processor determines a set of production profiles with which to create the versions based on information received at publisher interface or maintained at policy server . For instance publishers may specify various encoding parameters for use in creating the different versions of their content. The encoding parameters may be fashioned into profiles and stored at policy server .

Using information from publisher interface merge processor may retrieve one or more publisher specific and or site specific entries from database with which to process content objects. In addition merge processor may make calls to an external entity to obtain advertising material creatives for inclusion with the different versions of the content object based on advertising index values or other indicators. For example merge processor may be configured to make advertising calls over Internet or WAN to a hosted ad serving platform such as the DART for Publishers service from Google Inc. or the Atlas AdManager service from Microsoft Corporation. The advertising calls may include additional publisher specific indices or category information for matching the creatives to particular content.

When encoding profiles for a content object have been identified and the creatives are ready merge processor produces a plurality of versions of the content object. This can involve inserting creatives at different positions in the content object and generating versions of the content object having different combinations of creatives for each encoding profile. In some embodiments a plurality of merge resources work in parallel to create versions of the content object for each profile creative combination. For example merge processor may direct the operation of a server farm or cluster of computing resources in the large scale production of versions of the content object. As they become available the content object versions may be placed into an object store and readied for distribution to locations throughout the CDN.

Merge processor associates each version of the content object with a single network identifier and when processing of the content object is complete may signal to publisher interface that the network identifier is ready for distribution. Policy server may then transmit the network identifier to publishers for use at content sites . As described below information about the network identifier is maintained in database and used by a policy engine to determine a preferred version of the content object for distribution to an end user system.

When an end user requests delivery of a content object using its UURL the request may be redirected to policy server for selecting a preferred version of the requested content object from the available versions and for orchestrating delivery of the preferred version to the end user device. For example the content request may be received at a POP location in the CDN and redirected to policy server using HTTP redirects. CDN elements may also forward information relating to the request request information with the UURL for use by policy server . Request information may include cookies usage statistics user profiles hardware identifiers software identifiers demographics information viewing habits content preferences group memberships etc. The content request interface receives the request information and passes it along with the UURL to a policy engine .

Policy engine is responsible for understanding the content and determining how to orchestrate a response to ensure its proper delivery to the requesting end user device. Using the network identifier policy engine can retrieve information from database about the publisher of the requested object the versions of the content object available for delivery through the CDN and their corresponding encoding profiles and creatives. Using the request information policy engine can select a preferred version of the content object for the end user device and can determine an appropriate delivery scheme.

The request information may include a user agent associated with the end user device. The user agent for example may include one or more hardware and or software identifiers corresponding to device capabilities. For purposes of illustration two examples of user agent information are provided below.

The first example 1 shows user agent information for a Blackberry mobile phone. The device is identified as a Model 9530 running version 4.7.0.148 of the browser software. The user agent information also indicates that the device supports Java application programming interfaces CLDC 1.1 and includes a Vendor string VendorID 105 indicating that Verizon US is the wireless provider. The second example 2 shows user agent information for an iPhone. The hardware is identified as an iPhone mobile device with firmware version 5H11. Software capabilities indicate the iPhone is running version 3.0.1 of the iPhone OS with build 525.18.1 of AppleWebkit core classes and a Mozilla based browser.

In addition to user agent information policy engine may also receive metadata cookies profiles or other device user information from content request interface . Cookies and metadata for example may be forwarded to policy server from the CDN server where the request was received and may contain indications of user preference for one media format or another viewing history etc. Based on the totality of available information policy engine determines a preferred version of the content object and an orchestration scheme for arranging its delivery to the requesting end user device.

Using the publisher information in combination with network identifier information and device capabilities information policy engine can determine a preferred version of a requested content object from among the available versions. For example if a user requests UURL http company.x sports homerun.mpg policy engine may determine that the requested object is an asset of Company X and that three versions E1 E2 E3 of the content object are available for distribution through the CDN. Policy engine can then cross reference device capabilities with the encoding profiles to identify a subset of the available versions best suited for use with the requesting end user device. The subset of versions can then be ranked in accordance with the request information and publisher requirements to identify the preferred version based on the best information available.

In the homerun.mpg example if the user agent information indicates that the end user device is an iPhone the preferred version may correspond to encoding profile E1 since that profile matches the 480 360 native resolution of the iPhone device and includes a segmented MPEG 2 video format. Since the requesting device has identified itself as an iPhone policy engine could select an HPD delivery orchestration scheme. However because it is known that the requesting iPhone is also running OS 3.x the device capabilities information indicates that iPhone HTTP Streaming IHS is also available.

IHS delivery may be preferred by the publisher it may match the end user s preferences or it may represent the default orchestration scheme for iPhones running OS 3.x. Continuing with the example policy engine may select as the preferred version of homerun.mpg one that is created with encoding profile E1 and that includes a selection of creatives based on the request information. Note that the version of the content object selected as the preferred version and the delivery orchestration scheme may change based on the hardware and software capabilities of the requesting device. For example if an iPhone is detected as running version 2.x of the Apple operating system policy engine may instead choose HPD orchestration and a version of the content object having an MPEG 4 video format.

Of course many variations are possible in determining the preferred version and delivery orchestration scheme. For example the request information may include a type of connection for the end user device. The type of connection may be determined based on information received from the end user device based on an IP address of the end user device based on an entry point to the CDN or any other means and may influence orchestration and the selection of the preferred version. In a simple case the type of network connection may be used to choose between high bit rate and low bit rate versions of the content object. Cookies and metadata included with the request information may also influence selection of the preferred version of the content object. For example cookies may provide an indication of user preference for media formats bit rates playback software etc.

In some embodiments policy engine may determine a preferred version of the content object according to a hierarchy of information. For example in descending order of priority the hierarchy may include user preferences special hardware capabilities general hardware capabilities special software capabilities general software capabilities and default settings. Policy engine may perform a series of comparisons using available information and a predetermined order of precedence by which to identify the preferred version of the content object.

As one example a user s preference for MOV media format with a QuickTime media player may take precedence over generalized software capabilities and default settings. Similarly versions of a content object which exploit special hardware capabilities such as high resolution display screens may be preferred to versions compatible with more general hardware capabilities specialized software capabilities such as IHS streaming support may take precedence over default HTTP delivery and so on. Operation of policy engine is not limited to a particular set of information but may utilize any combination of user publisher network encoding profile and device capabilities information by which to determine a preferred content version and by which to orchestrate its delivery to the end user.

At block the policy server retrieves publisher information and encoding profiles for the new content object. The publisher information may be similar to that described in connection with and may specify a set of encoding profiles and advertising identifiers such as shown in for processing the media assets of a particular content site.

At block the policy server uses the advertising identifiers to communicate with ad servers. For instance the policy server may transmit the advertising identifiers and other information specific to the content site to one or more ad servers using their respective application programming interfaces API . Based on the responses from the ad servers at block creatives are obtained for inclusion with new versions of the content object. With audio and video content the response to the ad call may also include information to guide placement of the creatives within the content object. For example different types of creatives may be designated for insertion at pre roll mid roll and post roll positions in the content object received from the publisher.

At block the policy server generates or causes to be generated a plurality of versions 1 . . . N of the content object. The versions may be created by transcoding converting merging splitting truncating padding resampling resizing reformatting repackaging filtering and otherwise transforming and possibly modifying the original content object according to the collection of encoding profiles associated with publisher and content site. During processing advertising material can be inserted or merged into each version of the content object at the specified positions and for each encoding profile versions may be created using different combinations of advertising material. Note that the N versions of the content object may be created in a parallel fashion and that processing may be distributed across a collection of merge computing resources to minimize the time to completion.

At block the policy server associates the N versions of the content object with a single network identifier. The network identifier can be for example a universal URL UURL as described in connection with or other identifier having a one to many relationship to the versions of the content object. When the versions of the content object are ready at block the policy server may distribute them to locations in the CDN such as origin servers or in some cases to various POP locations as shown by arrow 2 . The ingest part ends when the policy server returns the network identifier to the publisher for inclusion on its content sites as shown with arrow 3 . However additional versions of the content object may be generated as new hardware and software capabilities emerge or when a publisher s requirements change. Because the additional versions are associated at the policy server with a previously published network identifier updates to the respective content sites are not required.

The delivery part of the interaction begins with arrow 4 when the end user device requests a content object using the network identifier UURL and is now described in connection with .

At block a request for a content object with a UURL is received. For example with a UURL an end user may click on a link at a publisher s web site and be redirected to a nearby CDN location. This can be accomplished through DNS resolution or in some other manner. As shown using arrow 5 the CDN location may forward the content request along with any related information such as the IP address of the end user device hardware and software identifiers usage statistics cookies metadata profiles etc. to the policy server for selection of a preferred version of the requested content.

At block the policy server identifies versions of the content object associated with the UURL. As previously described a multitude of versions may have been generated during the ingest process and each version may correspond to an encoding profile and a set of creatives. The encoding profiles in turn may be optimized for use with different hardware and software platforms under different network conditions and the creatives may be selected according to the type of content with different groups of creatives being designated for different target audiences of the content object.

At block the policy server determines capabilities of the requesting end user device. The capabilities may be determined using device identifiers accompanying the content request or other sources of information available through the CDN. For instance device information may be retrieved from a device capabilities database with information from a user agent string cookies stored on the end user s computer records of previous interactions with the CDN etc.

At block a preferred version of the content object is selected based on the various sources of information. As shown by arrow 6 the policy server also determines a delivery orchestration scheme block for sending the preferred version of the content object to the requesting end user. Both the preferred version of the content object and the delivery orchestration scheme selected by the policy server may reflect a ranking of device capabilities user preferences publisher requirements network conditions and other factors relating to overall user experience of the requested content as these elements are variously described herein.

At block the policy server orchestrates delivery of the preferred version of the content object according to the selected delivery option. As shown by a arrow 7 orchestration may involve multiple delivery protocols. For example delivery orchestration schemes which may be utilized by the policy server include HTTP progressive download HPD RTSP streaming delivery RSD RTSP via HTML stub RSDH and iPhone HTTP streaming IHS .

As described below in connection with orchestration may include for example coordinating with other elements of the CDN redirecting an HTTP content request transitioning from HTTP to RTSP providing a stub or helper file providing a master playlist providing a bandwidth specific playlist or other combination of actions.

The interaction begins with arrow 1 when the end user device requests a content object using its universal URL. As shown the end user device may send an HTTP request for universally identified content object C. The UURL may resolve to a CDN location that is best able to serve the end user device. At arrow 2 the CDN edge server forwards the HTTP request along with request information such as user profiles device identifiers cookies metadata network connection etc. to the policy server.

The policy server processes the UURL request and the additional request information received from the CDN edge server and determines a preferred version C.11 of the content object for delivery to the end user computer. At arrow 3 the policy server generates an HTTP redirect in which information about version C.11 is added to the location header. At arrow 4 the CDN edge server performs a second HTTP redirect to pass the updated location header to the end user device. The end user device makes a second HTTP request at arrow 5 for content object C.11 using the location header information. The CDN edge server responds to the second HTTP request at arrow 6 and delivers the preferred C.11 version of the content object. In an alternative embodiment the exchange shown by arrows 4 and 5 is omitted and the edge server responds directly to the end user device with version C.11 of the content object.

The interaction begins with arrow 1 when the end user device requests a content object using its universal URL. As with HPD delivery the device may send an HTTP request for content object C which may resolve to a CDN point of presence and be assigned to a CDN edge server. At arrow 2 the CDN edge server forwards the HTTP request along with related information such as user profiles device identifiers cookies metadata connecting network etc. to the policy server.

The policy server processes the UURL request and any additional information received from the CDN edge server to determine a preferred version C.9 of the content object for delivery to the end user device. In this case RTSP streaming delivery is selected. The selection of RTSP delivery may be based on user preferences publisher preferences software capabilities or any number of factors.

At arrow 3 the policy server generates an HTTP redirect in which an RTSP URL corresponding to version C.9 is added to the location header. At arrow 4 the CDN edge server performs a further HTTP redirect by which the updated location header is passed to the end user device. At arrow 5 the end user device makes an RTSP request for content object C.9 using header information from the redirected HTTP request. A streaming CDN edge server responds to the RTSP request at arrow 6 and streams version C.9 of the requested content object to the end user device.

The interaction begins with arrow 1 when the end user device requests a content object using its universal URL. The request for content may be an HTTP request which resolves to the address of a CDN edge server. At arrow 2 the CDN edge server forwards the HTTP request along with related information such as user profiles device identifiers cookies metadata connecting network etc. to the policy server.

At arrow 3 the policy server generates an HTTP redirect to an HTML stub wrapper. The HTML stub wrapper may include within its HTML body content an RTSP URL of the preferred version of the content object and certain directives to force the end user device to invoke a media player application. This type of redirection may be used for example to facilitate transition of control from a browsing application to a media player environment when the policy server determines that the end user device lacks the appropriate capabilities.

At arrow 4 the CDN edge server relays the HTTP request referencing the HTML stub wrapper to the end user device. At arrow 5 the end user device makes an HTTP request for the HTML stub wrapper. At arrow 6 the CDN edge server fulfills the request and transfers the HTML stub wrapper to the end user device. The HTML stub wrapper contains the RTSP URL for the C.2 version and causes the end user device to invoke its media player application. At arrow 7 responsive to the HTML stub wrapper the end user device invokes its media player and requests an RTSP stream for C.2. At arrow 8 a streaming CDN edge server responds to the RTSP request and streams version C.2 of the content object to the end user device.

The interaction begins at arrow 1 when the end user device requests a content object using its universal URL. As with the other delivery methods the device may send an HTTP request for content object C which is assigned to a CDN edge server through a DNS resolution process. At arrow 2 the CDN edge server forwards the HTTP request along with related information such as user profiles device identifiers cookies metadata connecting network etc. to the policy server.

Apple iPhones running iPhone OS 3.0 and higher include a built in Quicktime player which supports streaming video over HTTP using a combination of M3U8 playlists and MPEG 2 segmented video. This approach enables the end user device to select between different versions of a preferred content object for example versions with different bitrates and to switch between the different versions based on how much network bandwidth is available. Due to this flexibility the policy server may prefer IHS delivery for use with suitable iPhone end user devices.

When IHS delivery of preferred content is selected the policy server generates an HTTP redirect to a master playlist. Here the master playlist includes references to multiple versions C.15 C.20 of the preferred content which may as previously indicated correspond to multiple bandwidth choices. At arrow 3 the policy server sends the redirected request containing the master playlist to the CDN edge server at arrow 4 it is returned to the end user device.

At arrow 5 the Quicktime player selects from the master playlist and requests a playlist of media segments corresponding to its selection. In this example the iPhone selects version C.17 from the versions presented in the master playlist and issues a request at item 5 for the C.17 playlist. Version C.17 for example may represent the highest bandwidth version for prevailing network conditions. At item 6 the CDN edge server responds by providing a playlist for C.17 to the iPhone. Thereafter during playback of the content the iPhone requests media segments for C.17 and the CDN edge server delivers the requested segments as is shown by items 7 8 .

As will be understood by those skilled in the art the present invention may be embodied in other specific forms. In one particular embodiment of the policy server a new content object is assigned a single network identifier which as previously described can be associated with a plurality of versions of the content object. However the versions of the content object need not be created prior to receiving a request from an end user device. Instead the different versions of the content object may be created dynamically at the direction of the policy server when a request is received. As described herein the full set of available information user agent preferences network identifiers cookies metadata usage information etc can be utilized to generate a preferred version of the content object for the requesting end user device. As part of this on demand process the newly created preferred version of the content object is associated with the single network identifier previously assigned to the new content object and it may be placed into an object store and used with subsequent requests. Those skilled in the art will recognize or be able to ascertain using no more than routine experimentation many equivalents to the specific embodiments of the invention described herein. Such equivalents are intended to be encompassed by the following claims.

