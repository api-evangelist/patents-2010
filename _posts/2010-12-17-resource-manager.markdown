---

title: Resource manager
abstract: A method may include receiving an order associated with processing a media file and generating a workflow associated with fulfilling the order. The method may also include identifying tasks associated with the workflow and generating an estimate associated with executing the tasks. The method may further include allocating resources associated with executing the tasks and scheduling execution of the order.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08768748&OS=08768748&RS=08768748
owner: Verizon Patent and Licensing Inc.
number: 08768748
owner_city: Basking Ridge
owner_country: US
publication_date: 20101217
---
Consumer demand for media is increasing. For example consumers often watch and or listen to various media at home while traveling at work etc. As a result the number of communication channels for delivering media content and the number of different types of devices for playing the content has also increased.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following detailed description does not limit the invention.

Implementations described herein relate to an infrastructure for allowing customers to submit orders for processing content such as media content. The infrastructure facilitates processing of the orders using workflows that represent tasks to be performed. The infrastructure may also generate estimates such as time and cost estimates associated with processing an order. The infrastructure may further provide for managing resources associated with fulfilling orders such as scheduling and reserving resources to fulfill the orders to enable the orders to be executed in an efficient manner.

Content creator referred to collectively as content creators or individually as content creator may represent one or more creators of content that wish to package and or distribute the content to other parties such as consumers . For example content creators may include movie or television studios music companies publishers game developers parties who generate user generated content UGC websites blogsites etc. Content creators may provide content to DDC for transcoding packaging and or distribution as described in detail below. The term content as used herein may include any type of media such as video audio multi media textual data etc. The term content may also be referred to herein as video assets or assets. 

Advertiser referred to collectively as advertisers or individually as advertiser may represent one or more parties that wish to insert advertising into media files. For example advertiser may contract with a content creator and or digital media retailer to insert an advertisement into a media stream provided to consumers . DDC may insert the advertisement into the stream in accordance with the agreement between the parties.

DMR may represent one or more business entities that receive media content from various parties and resell it to end users. For example DMRs may include broadcasters cable companies direct broadcast satellite DBS providers Internet protocol television IPTV providers mobile phone TV providers online retailers etc. DMRs may receive media content from DDC and sell provide the content to consumers .

Consumer may represent one or more consumers that receive content originally generated by or provided by content creators and that has been processed by DDC . For example DDC may format and package content for distribution by DMRs and or DDC to consumers .

DDC may include a server computing device or a set of servers computing devices associated with for example processing media content. For example as described briefly above DDC also referred to herein as DDC platform may provide an automated environment in which content from content creators is transformed and packaged for distribution in any number of formats based on the particular requirements associated with DMRs . In an exemplary implementation DDC may also aggregate various data and insert advertisements into the media content. DDC consistent with implementations described herein may also utilize flexible workflows to streamline the formatting and packaging of content for digital distribution.

As described above the exemplary configuration illustrated in is provided for simplicity. It should be understood that a typical network may include more or fewer devices than illustrated in . For example it should be understood that network may include a large number e.g. hundreds or thousands of different types of user devices associated with consumers such as televisions cellular telephones personal computers PCs laptop computers tablet computers notebook computers netbook computers personal digital assistants PDAs etc.

It should also be understood network may include one or more wired wireless and or optical networks not shown that interconnect the components illustrated in and enable the components in to communicate with one another. For example network may include one or more public switched telephone networks PSTNs or other type of switched network. Network may also include one or more wireless networks and may include a number of transmission towers for receiving wireless signals and forwarding the wireless signals toward the intended destination. Network may further include one or more satellite networks one or more packet switched networks such as an Internet protocol IP based network a local area network LAN a wide area network WAN an intranet the Internet or another type of network that is capable of transmitting data from a source device to a destination device.

Further various functions are described below as being performed by particular components in network . In other implementations various functions described below as being performed by one device may be performed by another device or multiple devices and various functions described as being performed by multiple devices may be combined and performed by a single device.

Databases may store work unit definitions workflows parameters tables that are associated with various components in DDC intermediate or end results of processing performed by different processes in DDC etc. The term work unit as used herein may refer to a description of a set of one or more operations that a system may perform on content e.g. overlaying subtitles on a video inserting advertisements into a video reformatting a video etc. .

Order management system may include one or more computing devices or servers for managing customer orders generating reports etc. In an exemplary implementation order management system may include client components that interface with components on DDC service operation management system . The client components e.g. web browser may receive customer orders requests for reports etc. and relay the received information to the components on DDC service operation management system for the creation validation estimation submission approval execution and reporting of activities associated with the customer orders request for reports etc. For example a customer order may be completed by sending to a component on DDC service operation management system a selection of a particular workflow that will drive the processing of content associated with the order.

Data and security system may include one or more computing devices or servers that provide for authentication and authorization of users having roles in DDC and or for taking actions that are associated with the authorized roles e.g. create user accounts remove user accounts generate an initial password etc. . For example when a user logs in as a DDC operator the user may be authorized to design work units and or compose workflows. In an exemplary implementation data and security system may interface with order management system DDC SOM system and DDC support system .

DDC service operation management SOM system may include one or more servers or computing devices to control the overall operation configuration and management of DDC . For example DDC SOM system may include operation management system and SOM modules . Via a client component that communicates with operation management system a user may control the configuration administration and operation of DDC . For example in one implementation via a web browser or another client application a user may control security compose a workflow administer accounts that are associated with content creator or DMR submit a work order add data and storage to DDC manage resources manage DDC configuration e.g. create a work unit manage catalogs of content run reports monitor DDC work order e.g. information associated with a work order etc.

In providing each of such services to a client operation management system may employ SOM modules . SOM modules may include components modules that correspond to the above listed services. For example SOM modules may include a security manager workflow manager account manager work order manager data and storage manager resource management module configuration manager asset management module catalog management module monitoring and reporting module etc. DDC SOM system may further include an operational graphical user interface GUI for interfacing with SOM modules.

DDC resource management system may include one or more servers or computing devices that support the capacity management of resources associated with network elements NEs in DDC . As illustrated in DDC resource management system may include work order WO server WO estimator WO decomposer and optimizer WO scheduler runtime resource manager and metrics collector . Components may aid in scheduling and allocating resources associated with fulfilling customer orders as described in detail below.

WO server may provide work order related interfaces to operation management system and or SOM modules and may communicate with WO estimator WO decomposer and optimizer and WO scheduler to submit decompose validate and save work orders and to estimate schedule and reserve resources during the order submission.

Work order estimator may estimate the cost of completing a decomposed work order across work units of a workflow based on resources that are associated with the work units for each resource type. Work order estimator may store the cost in one of databases in terms of resource capacity units RCUs and duration of time required to complete tasks or processes that are associated with the work order.

WO decomposer and optimizer may break down an order into work units based on the workflow associated with the order. Furthermore based on the decomposition WO decomposer and optimizer may generate work unit tasks or simply tasks assign task parameters and create task connectors which are described below.

WO scheduler may match cost estimates for different resource types for a work order to available time slots in an allocation schedule across different network elements e.g. hardware software components that perform underlying operations for a work unit . As a result of the scheduling WO scheduler may output start and end times for each of the work unit tasks and for resource reservations.

Runtime resource manager may allocate network elements user groups to a process at the time of execution on behalf of a work unit. Runtime resource manager may attempt to honor scheduled reservations of resources. However if the resources are unavailable runtime resource manager may attempt to obtain replacement resources.

Metrics collector may determine or adjust for each work unit actual time of completion and used consumed resources. Based on the previous actual execution measurements metrics collector may modify factors that are used to estimate the resource and time necessary to complete a task associated with a work unit for a particular asset.

In an exemplary implementation resource management system may represent the functions performed by various NEs used to execute work order tasks as resource types and represent the capacity of the NEs using resource capacity units RCUs . The term resource type as used herein may include categories of consumable network resources used to schedule reserve bill and manage network capacity. Examples of resource types include bandwidth storage and the ability to transcode an asset from one format into another format. Resource types may also include resources associated with humans involved in the processing of assets such as a human s ability to review a movie asset etc. The term RCU as used herein may include the unit of measure for a resource type. Examples of RCUs include megabits for bandwidth gibabytes for storage transcoding task units e.g. CPU processing time for transcoding operations etc.

DDC work order execution WOE system may include one or more servers or computing devices to manage the flow and execution of work units of a defined workflow associated with a work order. DDC WOE system may include a workflow WF command processor also referred to herein as command processor a work unit processor work unit WU adapters and network elements . For simplicity does not show other components of WOE system . Depending on the implementation DDC WOE system may include additional fewer or different components than those illustrated in .

Command processor may drive work order execution. Command processor may include a WO manager and WO processor. The WO manager may provide interfaces to resource management system for initiating an execution of a work order retrieving the status of the work order suspending resuming the work order execution canceling the work order etc. The WO processor may coordinate work unit tasks for completion of a work order. In coordinating different work unit tasks the WO processor may sequence the tasks for optimum execution time and resource utilization. The WO processor may communicate with runtime resource manager for allocation and de allocation of resources. The work unit processor may dispatch processes threads to perform a work unit task.

Work unit adapter may include interfaces for adapting network elements to perform media content processing corresponding to a work unit. In one implementation each work unit adapter may be versioned and may include Java code. Each work unit adapter may monitor the corresponding network element to prevent over allocation of the network element maintain normal execution of logic associated with the network element and provide real time information to metrics collector .

Network elements may include physical or logical network devices components for processing media content.

DDC support system may include one or more servers or computing devices and or personnel to provide support services such creation of work units composition of workflows etc. billing support contracting management pricing etc.

The configuration shown in is for illustrative purposes. In other configurations and or implementations functions that are associated with one component or system shown in may be performed by one or more other components in any of the components may be connected to any other of the components and functions of one component may be included in another component. Accordingly in the other configurations or implementations DDC may include additional fewer different or a different arrangement of components than those illustrated in .

Processor may include one or more processors microprocessors or processing logic that may interpret and execute instructions. Memory may include a random access memory RAM or another type of dynamic storage device that may store information and instructions for execution by processor . Memory may also include a read only memory ROM device or another type of static storage device that may store static information and instructions for use by processor . Memory may further include a solid state drive SDD . Memory may also include a magnetic and or optical recording medium e.g. a hard disk and its corresponding drive.

Input device may include a mechanism that permits a user to input information to DDC resource management system such as a keyboard a keypad a mouse a pen a microphone a touch screen voice recognition and or biometric mechanisms etc. Output device may include a mechanism that outputs information to the user including a display a printer a speaker etc.

Communication interface may include a transceiver for communicating with other devices within system or outside system e.g. order management system DDC WOE system databases via wired wireless or optical mechanisms. Communication interface may also include one or more radio frequency RF transmitters receivers and or transceivers and one or more antennas for transmitting and receiving RF data via network . Communication interface may also include a modem or an Ethernet interface to a LAN or other mechanisms for communicating with elements in a network or system such as network or system or another network system.

The exemplary configuration illustrated in is provided for simplicity. It should be understood that devices in system may include more or fewer devices than illustrated in . In an exemplary implementation one or more components of system may perform operations in response to processor executing sequences of instructions contained in a computer readable medium such as memory . A computer readable medium may be defined as a physical or logical memory device. The software instructions may be read into memory from another computer readable medium e.g. a hard disk drive HDD SSD etc. or from another device via communication interface . Alternatively hard wired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the implementations described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

As described above resource management system receives orders associated with for example content creators that wish to package and distribute the content to consumers via a number of different communication channels and having a number of different formats. Resource management system may estimate the capacity required to complete work orders and reserve capacity to complete the work orders. Resource management system may also schedule and allocate resources in real time to fulfill customer orders as described in detail below.

Databases may include WO schedule planner metrics and statistics storage and resource forecaster . Each of elements may be a separate database. For example WO schedule planner may store schedule information associated with a number of different work orders along with resource information identifying resources reserved to fulfill the scheduled work orders. Metrics and statistics storage may include a database storing actual completion times by work unit processes and resource type associated with executed work orders. The information in metrics and statistics storage may have been collected and or stored by metrics collector .

Resource forecaster may include a database storing information associated with capacity usage in DDC . For example resource forecaster may store information identifying whether capacity usage within DDC is trending upward whether the percentage utilization of resources e.g. NEs is within some system network tolerance whether the percentage utilization of resources is decreasing etc. Runtime resource manager and or WO scheduler may access resource forecaster to generate exhaust dates for NEs user groups UGs by resource type information associated with work orders to be executed.

WO server as described briefly above may include one or more servers or computing devices that act to coordinate processing associated with a work order. For example WO server may receive an order from order management system . WO server may include interfaces e.g. application programming interfaces APIs to communicate with WO estimator WO decomposer and optimizer and WO scheduler . In an exemplary implementation WO server may use the information received from WO estimator and WO decomposer and optimizer and provide information to other components in resource management system e.g. WO scheduler to aid in scheduling and reserving capacity for executing work orders.

As described above resource management system may represent the functions performed by various NEs as resource types. Resource management system may also represent the capacity of the NEs using resource capacity units RCUs . WO estimator includes logic to estimate the number of RCUs needed for a decomposed work order across the work units based on the associated assets and or quantities by asset type. For example WO decomposer and optimizer may include logic to break down or convert customer orders received by WO server into work orders WOs . In an exemplary implementation WO decomposer and optimizer may break down a work order using a work flow and preset parameter settings associated with the order to generate work unit tasks WUTs task parameters and task connectors that define constituent tasks and functions that must be executed to fulfill a customer order.

WO decomposer and estimator may forward a decomposed work order to WO server which may save the work order. The WO may include an associated list of assets and or quantities by asset type. WO estimator may use the decomposed work order and associated list of assets to generate a rough order of magnitude ROM estimate for the work order as described below.

WO estimator may include logic to receive a decomposed work order from WO server and generate an estimate associated with the decomposed work order. In an exemplary implementation WO estimator may provide an estimate based on an associated list of assets and or quantities by asset type for the decomposed work order. For example WO estimator may use the list of assets associated with the WO to generate an ROM estimate. The ROM estimate generated by WO estimator may include RCU estimates and time duration estimates for all resource types and all work units in the selected work flow. These RCUs may then be used with other information e.g. a rate table to establish a high level cost estimate to complete the entered order. In some implementations the cost estimate and or time estimate for completing the work order may be provided to the customer to allow the customer to determine whether to approve the estimate.

In an exemplary implementation by classifying an asset into types e.g. asset types customers and or a DDC operator may not have to be aware of the size and duration of assets e.g. the length of a movie associated with various customer requests. More specifically DDC e.g. order management system provides a list of normalized asset types that can be used. For estimation purposes WO estimator uses asset type information associated with what a content creator provides during order entry to establish an ROM estimate timeline information and or a cost estimate. As an example an asset type may be CableLabs CL compliant MP2 approximately 2 hours 4 GB movie class. In this example the customer may know that the asset associated with the order is a movie stored in a CL compliant format is approximately two hours in duration and has a size of about 4 gibabytes GB . However the customer or DDC operator does not have to be aware of more detailed information regarding the asset.

WO decomposer and optimizer as described briefly above receives information provided by order management system . In an exemplary implementation WO decomposer and optimizer establishes mappings from the work flow and quantities of assets to resource types and RCU reservations against NEs and User Groups UGs needed to execute the work flow. Work units may be instantiated in a database for each work order as tasks to be performed. WO decomposer and optimizer may also generate task connectors that represent configured connectors in the work flow. Using presets parameter selections across the work unit tasks for a particular work order along with the selected asset types quantities WO estimator may generate estimates by resource type for each work unit task in the work order as described in more detail below.

In an exemplary implementation NEs can provide multiple functions and each resource type that an NE can provide may be stored in a table or database. For example illustrates an exemplary table storing information associated with two NEs i.e. transcoder TC and TC that may be used to transcode assets from one format into another format. Table may be stored in databases . As illustrated in table may include configuration field resource type field quantity field type field time unit field sub total field and NE weight field . Configuration field may represent the configuration of an NE and resource type field may identify a resource function provided by the NE in field . For example TC and TC may represent the configuration of two NEs i.e. transcoders in this example that provide a common set of functions as illustrated in entries and respectively. That is TC and TC both provide functions associated with transcoding content having an MP2 format into a windows media video WMV format illustrated by entries and transcoding content having an audio video interleave AVI format into a WMV format illustrated by entries and transcoding content having an MP2 format into a CableLabs compliant video on demand CLVOD format illustrated by entries and . TC may also transcode content having an MP2 format into a H.264 format as illustrated by entry .

Quantity field represents the number of RCUs available for the resource type. In this example type field and time unit field indicate that the RCUs for TC and TC are represented as tasks per hour. The RCU value in field may represent a maximum allocation that the NE TC in field can provide if it was only providing that resource type. For example when NE TC has a reservation for 20 RCUs for resource type AVI WMV all of the capacity associated with TC is consumed by the AVI to WMV transcoding and the other three resource types that TC is capable of providing i.e. MP2 WMV MP2 CLVOD MP2 H.264 are no longer available.

Table may also include weighting information for each task. For example the values in sub total field for each NE add up to 1.0 and each value in field represents the portion of total RCUs available for the particular resource type. For example the value of 0.625 in field of entry represents the 20 RCUs available for MP2 WMV transcoding divided by the 32 total RCUs for TC i.e. 20 32 . NE weight field is an inverse of the value in subtotal field . For example the value in NE weight field of entry is 1 0.625 or 1.6 as illustrated in . The weighting information may be used when calculating estimated RCUs needed to perform a task. As an example if NE TC is reserved for AVI WMV transcoding the available 20 RCUs will be multiplied by the weighting factor of 3.7 illustrated in field of entry to generate a value of 74 as the total number of RCUs consumed. In other words WO estimator may multiply the weighting factor in field by the RCU value in field to generate a value identifying an estimated total RCUs consumed when performing a task.

In an exemplary implementation reservations for NEs are made against particular NEs since NEs are multi functional with respect to resource type as illustrated in table . As a result use of one function will impact the capacity of other resource types. For example when NE TC has a reservation for 20 AVI WMV all of the capacity is consumed and the other three resource types illustrated in entries and of table are no longer available. As a result when NE TC has a reservation for 20 RCUs for AVI WMV transcoding the availability associated with MP2 WMV transcoding for NE TC and NE TC is reduced from 60 to 20. That is the 40 RCUs identified in field of entry are no longer available.

WO estimator may also establish a mapping between configured asset types and RCU quantity and duration required to complete processing of the resource type. For example illustrates a mapping performed by WO estimator . As illustrated table illustrates asset type information used to generate an estimate for an order. Referring to table includes asset type field asset class field format field estimated duration field unit type field estimated size field resource type field RCU quantity field reservation duration field and pool availability field .

Entry in table stores information indicating that a CL compliant movie provided in MP2 format has an estimated duration of 2 hours and an estimated size of 4 GB. Entry also indicates that transcoding the CL movie from MP2 format into a WMV format will consume 1 RCU for a 1 hour duration and that the available pool of RCUs is 20 per hour. Similarly entry in table stores information indicating that a CL compliant movie preview originally provided in MP2 format has an estimated duration of 0.1 hours and an estimated size of 4 GB. Entry also indicates that transcoding the CL movie preview from MP2 format to WMV format will consume 1 RCU for 0.25 hours and that the available pool of RCUs is 80 per hour.

Continuing with this example suppose that a work order from a customer indicates that 65 CL compliant movies are to be transcoded from MP2 to WMV format as indicated in entry in . In this case WO estimator indicates a resource reservation requirement of 65 RCUs i.e. 1 RCU for each of the 65 movies and reservation duration of 4 hours as illustrated by entry . That is since 20 RCUs per hour are available in each of hours 1 3 20 movies may be transcoded as illustrated in resulting in consumption of 60 RCUs. In hour 4 the last five movies may be transcoded for a total of 65 movies being transcoded in four hours.

Similarly suppose that a work order from a customer indicates that 245 CL compliant previews are to be transcoded from MP2 to WMV format as indicated in entry in . In this case WO estimator indicates a resource reservation requirement of 245 RCUs and reservation duration of 4 hours as illustrated by entry . That is since 80 RCUs per hour are available in each of hours 1 3 80 movie previews may be transcoded resulting in consumption of 80 RCUs. In hour four the last five movie previews may be transcoded for a total of 245 movie previews being transcoded in four hours.

In an exemplary implementation WO estimator may also take into consideration human resources referred to herein as users when generating estimates. For example users may be associated with user groups UGs that perform various functions associated with executing work flows. For example one UG may perform tasks such as reviewing and approving work orders. Another group may be associated with performing assemblies associated with work flows that may require concatenating assets as well as performing reviews and approvals. WO estimator may map UGs to resource types for completing the necessary tasks to complete a work order.

For example is an exemplary table illustrating resource to resource type breakdown associated with human resources. WO estimator may access table e.g. a human resource task table to establish a normalized capacity for the functions e.g. resource types that a human resource can complete per unit of time. In an exemplary implementation a one hour time unit may be initially configured with respect to table . Table may be used to estimate RCUs associated with human resources.

Referring to table includes resource field resource type field and plan quantity field . Resource field may identify individual users field may identify resource types e.g. functions that may be performed by the user in field and plan quantity field may identify the estimated RCUs for each resource type.

For example entry indicates that resource user Bob performs approvals and reviews and that the RCUs for these resource types take an estimated 50 and 20 RCUs respectively. As further illustrated in entry resource user Joe performs approvals reviews and assemblies and that the RCUs for these tasks consume an estimated 50 20 and 10 RCUs respectively. The total plan RCUs for the five users illustrated in table are 280.

In addition WO estimator may establish a plan weight by function associated with UGs similar to that described above for NEs . However allocation of human resources may be at the UG level instead of being associated specific users. In this manner tasks can be performed by any user of the User Group as long as his her access is sufficient. For example one user group may include Bob Mary and Joe and a second user group may include Joe Susan and Reza. In this case Joe may overlap into both of the UGs.

WO estimator may also review schedule information and based on the RCUs and duration required provide estimated start and end date times for each work unit task and as a result provide an estimated start end time for the entire work order. In an exemplary implementation WO estimator does not make any resource reservations regarding NEs UGs. That is resource reservation may be performed by other components e.g. WO scheduler runtime resource manager etc. . WO estimator may also generate estimated cost information as described in more detail below.

WO scheduler may include logic to match the estimates of each resource type required for each work unit for a work order into a timed schedule of allocations across network elements and user groups. For example WO scheduler may generate scheduled start end times for each work unit task and resource reservations per its priority. WO scheduler may store this information in WO schedule planner .

Referring back to runtime resource manager may include logic to interface with command processor when allocating network elements user groups at the time of execution. For example runtime resource manager may allocate network elements user groups to a process at the time of execution on behalf of a work unit. Runtime resource manager may also attempt to honor scheduled reservations of resources stored in WO schedule planner . However if the resources are unavailable runtime resource manager may attempt to obtain replacement resources as described in detail below.

Metrics collector as described briefly above may include logic that receives actual completion times by work unit and resource type from WO execution module. This information may be stored in metrics and statistics storage and used to refine estimates for future work orders.

Jeopardy manager may include logic that monitors ongoing work order processing. For example jeopardy manager may monitor actual completion metrics against expected completion rates metrics. In one implementation jeopardy manager may trigger alarms and or notices if the completion rates are beyond an acceptable threshold or will impact completion date times of work orders in process or those that are scheduled for later execution.

As described above resource management system may break down customer orders into work unit tasks associated with a workflow and estimate time and or costs associated with executing an order in accordance with the workflow. Resource management system may also manage resources and scheduling information associated with network elements NEs and UGs in DDC as described in more detail below.

WO decomposer and optimizer may decompose the order act . For example as described above WO decomposer and optimizer may break down the customer order into a WO based on the associated work flow and preset parameter settings. In an exemplary implementation WO decomposer and optimizer may generate work unit tasks task parameters and task connectors based on the work flow. After decomposing the work order WO optimizer and decomposer may forward the decomposed work order to WO server .

WO server may received the decomposed work order and save the decomposed work order. WO server may also forward the decomposed WO to WO estimator . WO estimator as described above may generate an estimate associated with executing the work order act . For example WO estimator may generate an estimate of the number of RCUs needed for each work unit task and store the RCU estimate with the work unit task in WO schedule planner . WO estimator may also store an approximate time duration for each task. WO estimator may also review the schedule of work orders awaiting execution and based on RCUs and duration required and provide an estimated start and end time for each work unit task and as a result for the entire work order. In an exemplary implementation the estimated start and end times for each work unit task will not lock in the date time for execution of the work units. That is no resource reservation entries are made in a resource reservation schedule by WO estimator .

WO estimator may further provide an estimated cost for the WO using for example a rate table such as rate table illustrated in . Referring to table may include billing plan field rate group field rate element field rate field and unit type field . Billing plan field may include information indicating whether the task is performed on a standard basis expedited basis emergency basis or some other basis. The particular billing plan information stored in field may be based on the time frame with which a customer wishes to have an order fulfilled.

Rate group field may indicate the task or work unit to be executed such as ingest transcode quality assurance etc. Rate element field may include more particular information associated with rate group . For example rate element field may indicate particular tasks to be performed such as transcoding storage inspection etc. Rate field may include a rate per RCU. In this example the rate may be in dollars per RCU. Unit type field may include units associated with the rate element such as task or storage units e.g. megabytes . As an example entry indicates that an expedited transcoding from MP2 to WMV format has a cost of 4.00 per RCU.

WO estimator may use rate table to generate a cost estimate for each task in a work order and total the costs for each task to generate an overall estimate for the customer order. The cost estimate may be provided to the customer prior to the customer approving the order. In addition the estimated schedule information associated with fulfilling the order may be provided to the customer to allow the customer to approve reject the order based on the estimated completion time.

WO server may also forward the work order to WO scheduler . WO scheduler may receive the work order and check capacity associated with NEs and UGs needed to execute the work order act . For example WO scheduler may access WO schedule planner to identify and allocate resources for executing the tasks work units of the work order act .

WO scheduler may then schedule execution of the WO act . For example WO scheduler may match the estimates of each resource type required for each work unit into a timed schedule of allocations across the NEs and user groups. WO scheduler may generate scheduled start end times for each work unit task and reserve resources based on its priority. WO scheduler may store the schedule information in WO schedule planner . WO scheduler may also change the state of the work order to submitted scheduled after all tasks have been scheduled. In some implementations a DDC operator may approve the work order prior to the state of the work order changing to submitted scheduled. After a work order is scheduled runtime resource manager may interact with DDC WOE system to facilitate execution of the work order as described in detail below. illustrates exemplary processing associated with execution of a scheduled work order. Processing may begin with runtime resource manager accessing a schedule of work orders act . For example runtime resource manager may automatically access WO schedule planner at regular intervals to identify any work order that is ready for execution at or near the current time. In this case assume that a work order is ready for execution. Runtime resource manager may initiate the execution of the work order act .

For example runtime resource manager may allocate NEs UGs at the time of execution. In one implementation runtime resource manager may determine if the planned schedule resources stored by WO scheduler in WO schedule planner are currently available act . That is runtime resource manager may attempt to honor the resources that were reserved by WO scheduler during scheduling. For example runtime resource manager may check the current capacity to determine if planned resources are still available to fulfill the tasks in the work order. In some implementations runtime resource manager may also determine if the available resources minus the sum of the allocated resources plus the resources required for the particular task is not a negative value. If the reserved resources are available act yes runtime resource manager may execute the work order act . That is runtime resource manager may signal WOE system to execute the work unit tasks of the work order using the reserved resources. Runtime resource manager may also update a calendar and the state of the corresponding resource reserve schedule with the actual start time of the execution.

If however the resources are not available at the time of execution act no runtime resource manager may check current capacity associated with NEs UGs and attempt to allocate alternate resources as necessary act . For example suppose that a task associated with transcoding an asset has reserved TC as the transcoder to be used. Further assume that TC is busy unavailable at the scheduled time but that TC is available. In this case runtime time resource manager may identify TC as being the transcoder to be used for the transcoding task as opposed to TC. In each case runtime resource manager may allocate alternative resources if possible. In other instances runtime resource manager may schedule the work order or tasks associated with the work order at a different time.

In this example assume that runtime resource manager has identified alternative resources and reserved the alternative resources. Runtime resource manager and or WOE system may execute the work order act . For example runtime resource manager may signal WOE system to execute the work order using the reserved resources.

In an exemplary implementation WO scheduler and or runtime resource manager ensures that schedules are established to provide high utilization of network elements. For example illustrates an example in which two NEs i.e. TC and TC are scheduled to execute tasks associated with 11 different work orders i.e. WOs . As illustrated TC may execute tasks associated with WO WO and WO in hour number one. Concurrently TC may execute tasks associated with WO WO and WO in hour number one. In hour two TC may execute tasks associated with WO and WO and TC may execute tasks associated with WO and WO. In hour three TC may execute tasks associated with WO. In this manner WO scheduler may overlap schedules to allow TC and TC to be used in an efficient manner. As illustrated the total allocated capacity associated with use of TC and TC in hour number one is close to the total native or overall capacity of TC and TC. The total allocated capacity of TC and TC however varies more greatly from the total native capacity in hours two and three in this example.

As described above resource management system may decompose schedule and estimate work orders. In addition in some implementations WO decomposer and optimizer may take into consideration optimizations that may be performed with regard to asset re use within a work order. For example WO decomposer and optimizer may re use assets that have been previously processed and that are still available in working storage or are available to be pulled from an archive to avoid re processing a task through quality assurance transcoding encryption etc. That is if an asset has already been processed and may be used by another workflow task or by the same workflow task when a problem has occurred during processing the asset may be re used.

WO decomposer and optimizer may also take into account work units that may be performed in parallel as opposed to work units that must be performed in a pipelined or serial manner. WO decomposer and optimizer may use any such parallel processing to compress the overall execution time of a work order. In this manner WO decomposer and optimizer may streamline work order processing.

Implementations described herein provide an infrastructure that allows customer orders to be broken down into work unit tasks. Resource management system may then generate estimated time and or costs associated with executing the tasks as well as allocate resources to fulfill each of the tasks. Resource management system may also manage resources and automatically schedule resources to execute the tasks.

The foregoing description of exemplary implementations provides illustration and description but is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the embodiments.

For example features have been described above with respect to resource management system performing various tasks to process orders provide estimates and schedule reserve resources for executing the tasks. In other implementations other components systems platforms etc. in DDC may perform these tasks. In addition in some implementations network may include multiple DDCs .

In addition tasks associated with a work order that involves transcoding a media file have been described above. It should be understood that other types of orders may be processed by DDC . For example other types of orders may include inserting advertisements logos or watermarks into a media file concatenating a second media file to the media file e.g. concatenating episodes of a series together inserting black space into at least a portion of the media file performing audio transcoding on the media file performing image audio overlay on the media file etc.

Further while series of acts have been described with respect to respectively the order of the acts may be varied in other implementations. Moreover non dependent acts or signal flows may be implemented in parallel.

It will be apparent that various features described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement the various features is not limiting. Thus the operation and behavior of the features were described without reference to the specific software code it being understood that one of ordinary skill in the art would be able to design software and control hardware to implement the various features based on the description herein.

Further certain portions of the invention may be implemented as logic that performs one or more functions. This logic may include hardware such as one or more processors microprocessors application specific integrated circuits field programmable gate arrays or other processing logic software or a combination of hardware and software.

In the preceding specification various preferred embodiments have been described with reference to the accompanying drawings. It will however be evident that various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

