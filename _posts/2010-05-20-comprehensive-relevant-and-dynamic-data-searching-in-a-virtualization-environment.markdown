---

title: Comprehensive, relevant, and dynamic data searching in a virtualization environment
abstract: A method includes indexing data and/or metadata in online virtual machines (VMs), offline VMs, virtual applications, and/or snapshots thereof on one or more host server(s) in a virtualization environment through a search architecture in the virtualization environment. The online VMs are VMs that are powered on, and the offline VMs are VMs that are powered off. The method also includes maintaining a database of the indexed data and/or metadata in the online VMs, the offline VMs, the virtual applications, and/or the snapshots thereof to enable a comprehensive search result to a search query through the search architecture. The database is associated with the search architecture.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135342&OS=09135342&RS=09135342
owner: VMware, Inc.
number: 09135342
owner_city: Palo Alto
owner_country: US
publication_date: 20100520
---
This Application claims foreign priority benefits under 35 U.S.C. 119 of Chinese Patent Application 201010114852.5 which was filed on Feb. 26 2010.

Commercial search engines e.g. Google Yahoo serve as windows to the world of information and are utilized by people to obtain useful information of interest through searches performed therein. In the virtualization environment including virtual machines VMs a user may have to manage a large number of VMs and snapshots. When the user desires to find data inside a VM it is highly likely that he she may not recall the VM corresponding to the data. Therefore the user may have to power ON every possible VM to check contents therein which lends to an undesirable experience.

In one aspect a method includes indexing data and or metadata in online virtual machines VMs offline VMs virtual applications and or snapshots thereof on one or more host server s in a virtualization environment through a search architecture in the virtualization environment. The online VMs are VMs that are powered on and the offline VMs are VMs that are powered off.

The method also includes maintaining a database of the indexed data and or metadata in the online VMs the offline VMs the virtual applications and or the snapshots thereof to enable a comprehensive search result to a search query through the search architecture. The database is associated with the search architecture.

In another aspect a method includes indexing data and or metadata in online VMs offline VMs virtual applications and or snapshots thereof on one or more host server s in a virtualization environment through a search architecture in the virtualization environment. The online VMs are VMs that are powered on and the offline VMs are VMs that are powered off.

The method also includes updating the indexed data and or metadata in the online VMs the offline VMs the virtual applications and or the snapshots thereof based on a state change therein through the search architecture in the virtualization environment to enable a relevant and a dynamic search result to a search query through the search architecture.

In yet another aspect a virtualization environment includes one or more host server s that include an online VM an offline VM a virtual application and or snapshots thereof. The virtualization environment also includes a search architecture configured to enable indexing of the data and or the metadata in the online VM the offline VM the virtual application and or snapshots thereof.

The online VM is a VM that is powered on the offline VM is a VM that is powered off and the search architecture includes a database of the indexed data and or metadata in the online VM the offline VM the virtual application and or the snapshots thereof configured to enable a comprehensive search result to a search query through the search architecture.

The methods and systems disclosed herein may be implemented in any means for achieving various aspects and may be executed in a form of a machine readable medium embodying a set of instructions that when executed by a machine cause the machine to perform any of the operations disclosed herein. Other features will be apparent from the accompanying drawings and from the detailed description that follows.

Example embodiments as described below may be used to realize comprehensive dynamic and relevant data searching in a virtualization environment. Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments.

In one or more embodiments search system may also include an indexing module interfaced with crawling module . In one or more embodiments indexing module may be responsible for partitioning and indexing the crawled data. In one or more embodiments indexing module may serve to build an Information Retrieval IR system through the partitioning and indexing of the crawled data.

In one or more embodiments search system may further include a query processing module interfaced with the indexing module . In one or more embodiments query processing module may be configured to scalably process incoming queries and to maintain reasonable response time availability and quality of results.

In one or more embodiments search system therefore may need to be scalable to process increasing workloads as more resources are added to the VE. In one or more embodiments crawling module indexing module and query processing module may serve as system modules in a VE. In one or more embodiments search system may be implemented based on a virtualization platform or a cloud computing platform that provides the ability to view the infrastructure as well as utilize the services provided therein. The term cloud computing environment as used herein means a set of interconnected computers including virtual machines that are managed by a special software which is typically called a cloud operating system Cloud OS . The Could OS hides the underlying technology infrastructure details from users or clients. Users typically interact with the could computing environment through a set of services that are exposed by the cloud computing environment.

In one or more embodiments query processing module may process queries in a distributed fashion. In one or more embodiments users may be provided an assurance that applications can be managed moved and or operated in the cloud computing environment analogous to an on site operation. In one or more embodiments data in a cloud computing initiative catalog that may be of interest to users include but is not limited to virtual application vApp information templates and premium media files. In one or more embodiments in addition users in the cloud environment may have individual visible scopes. For example a cloud environment administrator may search all catalogs and inventory information but an organization administrator may be restricted to the organization he she belongs to.

In one or more embodiments in order to enable simplicity of the aforementioned query processing internal cloud and external cloud may be coupled to one another i.e. through private cloud as a federated system as shown in so that constituent elements rely on one another and have access to requisite information. In one or more embodiments in a distributed search system not shown in in the cloud computing system the resources may include a coordinator that is configured to receive and route client queries e.g. query a query processor configured to include index information and a cache configured to store previous query search results in order to enable increased performance. In one or more embodiments one or more VMs in the clouds may implement each of the coordinator the query processor and the cache. In one or more embodiments in order to achieve increased performance the VMs may be grouped both region wise e.g. geographical and network topology wise. In one or more embodiments at least two kinds of the groups e.g. region wise network topology wise may be deployed in internal cloud and external cloud . It is obvious that there may be a number of internal clouds and external clouds interacting e.g. through a number of private clouds to generate search results. In one or more embodiments the search ability may be provided as a value addition to the cloud computing system partners.

In one or more embodiments a search framework providing the searching may be scalable enough to accommodate multiple search systems placed inside both internal cloud and external cloud . In one or more embodiments the search framework may be able to aggregate the search results with proper filtering and ranking.

In one or more embodiments searching in the cloud computing system may yield private results and group shared results. In one or more embodiments private results may include search results relevant to private cloud and group shared results may include search results relevant to a group to which private cloud may belong to. In one or more embodiments the search results may provide information such as file service program location e.g. host server VM directory and may directly link to the appropriate VM and or directory.

In one or more embodiments the search results may include results from online VMs i.e. VMs that are powered ON and or offline VMs i.e. VMs that are powered OFF . In one or more embodiments the search results may indicate as to whether the relevant data file is associated with an online VM or an offline VM. In one or more embodiments the search results may be obtained on a web browser and a number of relevant virtual applications vApps VMs and associated data files may be summarized as part of the search results. In one or more embodiments an option to power ON an offline VM and or power OFF an online VM may be provided along with the relevant search result.

In one or more embodiments the offline VM adapter may also be configured to transmit existing index data. In one or more embodiments search framework may include an index generator configured to generate index data for a given virtual disk volume. In one or more embodiments an index consolidator may consolidate all index data into the local index storage interfaced with search framework . In one or more embodiments therefore the indexing tasks may include online VM index data collection offline VM index generation and or index updates and consolidation. In one or more embodiments specifically index consolidator may be configured to aggregate index files from VMs to maintain snapshot index files to update index data on VM events such as power state change snapshot revert and or remove add and to collaborate with search service provider to provide searching through well defined Application Programming Interfaces APIs to select the index database e.g. current snapshot .

In one or more embodiments search framework may also include a search engine manager configured to manage third party search engine plug ins e.g. static plug in dynamic plug in . In one or more embodiments search engine manager may therefore be configured to provide the ability to utilize third party search engines e.g. search engine . In one or more embodiments a search processor included in search framework may be configured to provide the ability to handle large search requests. In one or more embodiments search service provider may be configured to provide classical search services the ability to search against a central index database e.g. search database and or snapshot index database the ability to aggregate distributed search results and or informative search results. In one or more embodiments search service provider may therefore be configured to receive and process search requests. In one or more embodiments the search requests may originate through for example a virtualized environment VE client e.g. VMWare s Virtual Infrastructure VI client Adobe s Flex and or a built in search web User Interface UI .

In one or more embodiments search framework may further include an extension manager configured to communicate with centralized manager and to manage extensions such as libraries configuration data files and extension registers. The term centralized manager as used herein means a management software that provides a mechanism to configure and manage one or more hosts virtual machines VMs and other components of virtualized infrastructure. For example VMware VC provides either same or similar functionality. Similar management softwares are also available from vendors such as Microsoft . In one or more embodiments access controller may be configured to provide authentication and authorization services or in other words to enforce security policies. In one or more embodiments event monitor may configured to monitor and notify events such as VM power ON OFF and live migration of VM across host servers e.g. through VMWare s VMotion or similar products from other vendors for purposes of appropriately synchronizing the data to be indexed. In one or more embodiments inventory manager may be configured to communicate with VMs host servers appropriate products to obtain inventory properties.

In one or more embodiments search framework may be utilized to search information from all VMs managed by the cloud OS. In one or more embodiments users may be able to constrain a search scope thereof from the datacenter level to the host server level. In one or more embodiments search requests may be expected to originate through a web UI e.g. Adobe s Flex and or the VE client. In one or more embodiments search framework may be deployed as a VM image e.g. Virtual Appliance VA or distributed VM images in a cloud OS e.g. VMWare s vSphere environment in order to eliminate the installation configuration and maintenance costs as well as load balancing. In one or more embodiments search framework may be implemented as an extension to the cloud OS to include management and performance isolation benefits. In one or more embodiments search framework may be deployed on a host server side when implemented as a VM image.

In one or more embodiments search framework may be configured to allow plugging in of third party searching indexing libraries e.g. Apache s Lucene . In one or more embodiments search framework may have an access controller as discussed above configured to interact with centralized manager to provide access control ability. In one or more embodiments search framework may have an associated index database configured to include indexes related to VMs.

In one example embodiment users may log into the VE client and search contents of VMs via a search bar. In another example embodiment users may log into a web portal provided by search framework and search contents of VMs directly. In one or more embodiments search results may be presented in VE client and or a web browser. In one or more embodiments each search result may provide information such as file service program location e.g. host server VM directory and may directly link to the appropriate VM and or directory. In one or more embodiments the search results may indicate private data and may include results from online VMs i.e. VMs that are powered ON and or offline VMs i.e. VMs that are powered OFF . In one or more embodiments the search results may indicate as to whether the relevant data file is associated with an online VM and or an offline VM. In one or more embodiments an option to power ON an offline VM and or power OFF an online VM may be provided along with the relevant search result. In one or more embodiments the search results may be private to the cloud OS. In one or more embodiments the OS associated with a VM may also be summarized indicated along with the relevant data file as part of the search results.

In one or more embodiments search information from a single host server may rarely be utilized without deployment of the cloud OS except in the case of Small Medium Business SMB virtualization. Therefore in one or more embodiments a search service utilizing search framework may not be provided based on a single host server . However in one or more embodiments components on the host server may be the building blocks for the search service.

In one or more embodiments in a cloud OS environment there may be two kinds of storage deployment viz. shared storages in for example mid large enterprise Information Technology IT environments and local storage in for example SMB environments. shows search framework interacting with online VMs and offline VMs of host server according to one or more embodiments. In one or more embodiments in order to obtain data on online VMs an OS specific VM agent may be installed thereof. In one or more embodiments VM agent may be configured to monitor file changes in the local file system collect parse and store index data on the local VM leverage third party desktop search engines to perform the indexing transmit to and update the index data at search framework and or enforce security policies. In one or more embodiments the security policies may be configurable by both local VM owners and the cloud OS administrators.

In one or more embodiments more specifically VM agent may be configured to generate the index or incremental index files to monitor online VMs for file service program changes to communicate with and transmit data to search framework to configure the index attribute and to leverage third party search engines as discussed above.

In one or more embodiments in order to gather data on offline VMs search framework may be configured to mount the virtual disk image files associated with offline VMs to a file system thereof and to perform the appropriate indexing e.g. through offline VM adapter index generator index consolidator . In one or more embodiments therefore search framework may be responsible for mounting virtual disk image files of offline VMs and collecting parsing and storing the index data to a local database thereof e.g. index database . In one or more embodiments search framework may also be responsible for enforcing security policies that are configurable by both offline VM owners and the cloud OS administrators.

In one or more embodiments a VM suite e.g. VMWare s Workstation and similar products from other vendors may be configured to allow multiple VMs to execute simultaneously a host of OSs e.g. Windows Linux . In one or more embodiments at the VM suite level VM suite users may own all of the aforementioned VMs and may be interested in contents of VMs such as documents services applications and particularly snapshots. In one or more embodiments users may be able to search view compare and even edit historical files across different snapshots through the search architecture described below.

In one or more embodiments in search architecture search requests may go through to third party search engines e.g. Google Desktop Search Microsoft s Windows Desktop Search Apple s Spotlight which may communicate with search host agent to obtain the search results to be displayed. In one or more embodiments search architecture again shows online VMs and offline VMs interfaced with the host OS . In one or more embodiments in order to obtain data on online VMs a VM agent may be installed thereof. In one or more embodiments VM agent may be configured to monitor file changes in the local file system to collect parse and store index data on the local VM to leverage third party desktop search engines to perform the indexing to transmit to and update the index data at search host agent and or to enforce security policies.

In one or more embodiments in order to gather data on offline VMs search host agent may be configured to mount the virtual disk image files associated with offline VMs to a file system thereof and to perform the appropriate indexing. In one or more embodiments therefore search host agent may be responsible for mounting virtual disk image files of offline VMs and collecting parsing and storage the index data to a local database thereof e.g. index database . In one or more embodiments search host agent may also be responsible for enforcing security policies.

In one or more embodiments a set of appropriate interfaces may be defined for the searching described above to allow for third party search engine vendors e.g. Google to provide a set of corresponding APIs to integrate with search framework or search host agent . In one or more embodiments this may enhance the extensibility of the searching. In one or more embodiments search framework may be interfaced with search system of as shown in . In one or more embodiments search framework may provide the search service through a set of well defined and unified APIs. In one or more embodiments an enterprise management tool may utilize search framework as an information search engine.

In one or more embodiments utilizing search architecture at the VM suite level may yield search results that provide information such as file service program location e.g. VM directory . In one or more embodiments the search results may directly link to the appropriate VM and or directory. In one or more embodiments the search results may include results from online VMs i.e. VMs that are powered ON and or offline VMs i.e. VMs that are powered OFF . In one or more embodiments the search results may indicate as to whether the relevant data file is associated with an online VM and or an offline VM . In one or more embodiments the relevant OS executed on an online VM offline VM may also be indicated in the search results. Again in one or more embodiments an option to power ON an offline VM and or power OFF an online VM may be provided along with the relevant search result.

In one or more embodiments FS monitor may inform index controller to take requisite action when some files or directories are changed in file system . In one or more embodiments VM image proxy may be configured to receive a requisite command from index controller and to transmit index information to search framework or search host agent . In one or more embodiments config manager may configure the index attributes and config application may be used by the end user to configure a file directory attribute.

In one or more embodiments if there is a file to be transmitted VM may send an appropriate reply to search framework or search host agent . At the same time in one or more embodiments VM may transmit the operation e.g. add modify delete kind and the index file meta information. In one or more embodiments the VM may then transmit the index file to search framework or search host agent in operation . In one or more embodiments VM may also transmit a message to search framework or search host agent indicating that there is no more transmission which may then be acknowledged by search framework or search host agent . In one or more embodiments search framework or search host agent may then terminate the connection.

In one or more embodiments in order to exclude a word from the search the exclude search may be utilized. As an example when word A and word B are utilized in the exclude search as A B the search results include all occurrences of A where B is excluded. In one or more embodiments in order to search for complete phrases the phrase search may be used. As an example when the words host and server are utilized as host server in the phrase search the entire phrase host server may be searched for. In one or more embodiments in order to include either word A or word B a Boolean OR search may be used. As an example when word A and word B are utilized as A OR B in the Boolean OR search world A or word B is included in the search result. In one or more embodiments in order to limit a query to a certain location a Location Restrict may be used. As an example Location Restrict may be utilized in the location DataCenter Host Server VM format where DataCenter Host Server and VM are shown merely for purposes of illustration.

In one or more embodiments in order to search in the body text alone and ignore title matches a Content Search may be used. As an example Content Search may be utilized in the content cloud OS format where cloud OS is shown merely for purposes of illustration. In one or more embodiments in order to search the title alone and ignore content matches a Title Search may be used. As an example Title Search may be utilized in the title cloud OS format where cloud OS again is shown merely for purposes of illustration. It is obvious that other search parameters may be employed and the abovementioned parameters may be combined in a logical form e.g. combining logical operators to effect a search and such modifications are within the scope of the exemplary embodiments.

In one or more embodiments search framework or search host agent may allow indexing of VM data which dispenses with the need to power ON an offline VM to search data inside the VM. Also in one or more embodiments search framework or search host agent may allow for more data to be searched in a cloud computing environment. In one or more embodiments the search capabilities may be extended to metadata within a datacenter and or metadata in the VE client which may be provided by the inventory database. In one or more embodiments more intelligence may be provided on the metadata in order for the search engine to yield more relevant search results to users of the VE. In one or more embodiments VMs may not be isolated in the VE due to search architectures described above. In one or more embodiments indexes may be updated through communication with search framework without a need for network communication.

In one or more embodiments operation may involve maintaining a database of the indexed data and or metadata in the online VMs offline VMs virtual applications and or snapshots thereof to enable a comprehensive search result to a search query through the search architecture. In one or more embodiments the database may be associated with the search architecture.

In one or more embodiments operation may involve updating the indexed data and or metadata in the online VMs the offline VMs the virtual applications and or the snapshots thereof based on a state change therein through the search architecture in the virtualization environment to enable a relevant and a dynamic search result to a search query through the search architecture.

Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example the various devices and modules described herein may be enabled and operated using hardware circuitry e.g. CMOS based logic circuitry firmware software or any combination of hardware firmware and software e.g. embodied in a machine readable medium .

In addition it will be appreciated that the various operations processes and methods disclosed herein may be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer device and may be performed in any order e.g. including using means for achieving the various operations . Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

