---

title: Method and apparatus to manage tier information
abstract: A method of tier management of data comprises performing a tier migration log information setup process which includes selecting an area specified by a virtual volume address and a logical volume address; determining a destination tier for the area based on a number of accesses to the area; and updating a tier migration log information by inputting the determined destination tier and a time; and performing a process using the tier migration log information to determine whether to migrate a specific area which includes loading a tier migration log from the tier migration log information by selecting a specific time; checking if a current tier of the specific area equals a destination tier specified by the tier migration log; and if the current tier is not equal to the destination tier, migrating the specific area to the destination tier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08677093&OS=08677093&RS=08677093
owner: Hitachi, Ltd.
number: 08677093
owner_city: Tokyo
owner_country: JP
publication_date: 20100419
---
The present invention relates generally to thin provisioning and tier management and more particularly to a method and an apparatus to save and restore tier information.

In recent years thin provisioning has become popular. Thin provisioning is a method for allocating area for a storage subsystem that receives a write command to unallocated area. Currently a storage subsystem migrates frequently accessed allocated area to fast and expensive media and migrates rarely accessed allocated area to slow and cheap media. As such an area accessed by a program that runs only at specified times is not accessed and is moved to slow media when the program does not run. However a problem with performance will occur when the program starts.

Exemplary embodiments of the invention provide a method and an apparatus to save and restore tier information. In a specific embodiment the storage subsystem records tier migration log information. The tier migration log includes the relationship between area and tier when the area is moved to a different tier. The storage subsystem moves the area to the original tier using the tier migration log information to restore the tier when the job starts.

An aspect of the present invention is directed to a method of tier management of data in a system which includes a host a network and a storage system coupled to the host via the network the storage system having a memory a plurality of virtual volumes a plurality of logical volumes and a plurality of physical media. The method comprises performing a tier migration log information setup process which includes selecting an area specified by a virtual volume address and a logical volume address determining a destination tier for the area based on a number of accesses to the area and updating a tier migration log information by inputting the determined destination tier and a time and performing a process using the tier migration log information to determine whether to migrate a specific area which includes loading a tier migration log from the tier migration log information by selecting a specific time checking if a current tier of the specific area equals a destination tier specified by the tier migration log and if the current tier is not equal to the destination tier migrating the specific area to the destination tier.

In some embodiments the method further comprises keeping the specific area in the current tier if the current tier is equal to the destination tier. The method further comprises storing logical volume information of the logical volumes which includes logical volume name logical volume address media type RAID group name and RAID group address. The method further comprises storing virtual volume information of the logical volumes which includes virtual volume name virtual volume address logical volume name logical volume address number of access and access capacity. The method further comprises storing tier and media definition information which includes tier media type and capacity threshold wherein the current tier of the specific area is determined from the virtual volume information the logical volume information and the tier and media definition information. The destination tier is determined with reference to the virtual volume information and the tier and media definition information. A logical volume capacity is calculated from the logical volume address and the capacity threshold from the tier and media definition information and the destination tier for the area is determined based on the number of accesses to the area and the logical volume capacity. The method further comprises storing tier destination information which includes virtual volume name virtual volume address capacity number of access access per capacity current tier and destination tier that are organized in a descending order of access per capacity wherein the tier destination information is created based on the virtual volume information and the media type from the logical volume information.

In specific embodiments the tier migration log information includes log ID time and performance corresponding to the log ID and time and further includes virtual volume name virtual volume address and tier corresponding to the virtual volume name and virtual volume address. The method further comprises after one of a read access or a write access to an area updating the number of access to the area. The tier migration log information is updated by inputting the determined destination tier and the time and performance of access for the area. The performance of access is measured in one of IOPS Input Output Operations Per Second or BPS Bits Per Second .

In accordance with another aspect of the invention a storage system of tier management of data is coupled with a host via a network and it comprises a processor a memory a plurality of virtual volumes a plurality of logical volumes a plurality of physical media and a tier control module. The tier control module is configured to set up tier migration log information which includes selecting an area specified by a virtual volume address and a logical volume address determining a destination tier for the area based on a number of accesses to the area and updating a tier migration log information by inputting the determined destination tier and a time. The tier control module is configured to determine whether to migrate a specific area using the tier migration log information which includes loading a tier migration log from the tier migration log information by selecting a specific time checking if a current tier of the specific area equals a destination tier specified by the tier migration log and if the current tier is not equal to the destination tier migrating the specific area to the destination tier.

Another aspect of this invention is directed to an interface for tier management of data by performing a tier migration log information setup process which includes selecting an area specified by a virtual volume address and a logical volume address determining a destination tier for the area based on a number of accesses to the area and updating a tier migration log information by inputting the determined destination tier and a time and performance of access for the area and performing a process using the tier migration log information to determine whether to migrate a specific area which includes loading a tier migration log from the tier migration log information by selecting a specific time checking if a current tier of the specific area equals a destination tier specified by the tier migration log and if the current tier is not equal to the destination tier migrating the specific area to the destination tier wherein the current tier of the specific area is determined from tier and media definition information. The interface comprises computer readable program code devices for receiving from a user the tier and media definition information which includes tier media type capacity threshold and default tier displaying the received tier and media definition information on a tier management screen and displaying an OK button for the user to activate to update the tier and media definition information displayed on the tier management screen.

In specific embodiments the interface further comprises computer readable program code devices for displaying a restore point selection screen including a plurality of restore points each having a time and a performance of access for an area for a user to select one of the restore points with a time corresponding to the specific time and displaying a RESTORE button for the user to activate to restore the selected restore point.

These and other features and advantages of the present invention will become apparent to those of ordinary skill in the art in view of the following detailed description of the specific embodiments.

In the following detailed description of the invention reference is made to the accompanying drawings which form a part of the disclosure and in which are shown by way of illustration and not of limitation exemplary embodiments by which the invention may be practiced. In the drawings like numerals describe substantially similar components throughout the several views. Further it should be noted that while the detailed description provides various exemplary embodiments as described below and as illustrated in the drawings the present invention is not limited to the embodiments described and illustrated herein but can extend to other embodiments as would be known or as would become known to those skilled in the art. Reference in the specification to one embodiment this embodiment or these embodiments means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention and the appearances of these phrases in various places in the specification are not necessarily all referring to the same embodiment. Additionally in the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the present invention. However it will be apparent to one of ordinary skill in the art that these specific details may not all be needed to practice the present invention. In other circumstances wellknown structures materials circuits processes and interfaces have not been described in detail and or may be illustrated in block diagram form so as to not unnecessarily obscure the present invention.

Furthermore some portions of the detailed description that follow are presented in terms of algorithms and symbolic representations of operations within a computer. These algorithmic descriptions and symbolic representations are the means used by those skilled in the data processing arts to most effectively convey the essence of their innovations to others skilled in the art. An algorithm is a series of defined steps leading to a desired end state or result. In the present invention the steps carried out require physical manipulations of tangible quantities for achieving a tangible result. Usually though not necessarily these quantities take the form of electrical or magnetic signals or instructions capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers instructions or the like. It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing computing calculating determining displaying or the like can include the actions and processes of a computer system or other information processing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system s memories or registers or other information storage transmission or display devices.

The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may include one or more general purpose computers selectively activated or reconfigured by one or more computer programs. Such computer programs may be stored in a computer readable storage medium such as but not limited to optical disks magnetic disks read only memories random access memories solid state devices and drives or any other types of media suitable for storing electronic information. The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs and modules in accordance with the teachings herein or it may prove convenient to construct a more specialized apparatus to perform desired method steps. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein. The instructions of the programming language s may be executed by one or more processing devices e.g. central processing units CPUs processors or controllers.

Exemplary embodiments of the invention as will be described in greater detail below provide apparatuses methods and computer programs for saving and restoring tier information in the thin provisioning context.

The CPU reads programs from the memory and executes the programs. The memory reads programs and data from the HDD when the application server starts and stores the programs and the data. The HDD stores programs and data. The SAN interface connects the application server and the SAN . The SAN connects the application server and the storage subsystem . The application server uses the SAN to send application data to the storage subsystem and receive application data from the storage subsystem .

The storage subsystem comprises a SAN interface a CPU a memory a disk interface a SSD Solid State Drive and a HDD . The SAN interface connects the storage subsystem and the SAN . The CPU reads programs from the memory and executes the programs. The memory reads programs and data from the HDD and SSD when the storage subsystem starts and stores the programs and the data. The disk interface connects the storage subsystem the SSD and the HDD . The SSD stores programs and data. The HDD stores programs and data.

The memory comprises an OS Operating System program and an application program . The OS program executes the application program . The application program e.g. database program reads data from the storage subsystem processes data and writes the results to the storage subsystem .

The memory comprises a disk control program RAID Redundant Arrays of Inexpensive or Independent Disks group information logical volume information pool information virtual volume information tier and media definition information tier destination information tier migration log information and tier control program .

The disk control program receives a read command and a write command from the application server reads data from the SSD and the HDD and writes data to the SSD and the HDD using the RAID group information the logical volume information the pool information the virtual volume information and the tier and media definition information . The tier control program calculates tier destination information using the logical volume information moves an area to different tiers using tier destination information and records tier migration log information .

The RAID group information includes columns of a RAID group name a media name a media type and a RAID level . For example the row shows that RG A has SSD A SSD B SSD C and SSD D the media type of RG A is SSD and the RAID level of RG A is RAID 10 2D 2D . 

The logical volume information includes columns of a logical volume name a logical volume address a media type a RAID group name and a RAID group address . For example the row shows that the media type of L VOL A is SSD and L VOL A is allocated to the address from 0 to 199 in RG A. 

The pool information includes columns of a pool name a logical volume name and a virtual volume name . For example the row shows POOL A has L VOL A L VOL B and L VOL C and the area of POOL A is used by V VOL A. 

The virtual volume information includes columns of a virtual volume name a virtual volume address a logical volume name a logical volume address a number of access and an access per capacity . For example the row shows that the address from 0 to 99 in V VOL A is allocated to the address from 0 to 99 in L VOL A the number of access of the address from 0 to 99 in V VOL A is 11000 and the access per capacity of the address from 0 to 99 in V VOL A is 110. 

The tier and media definition information includes columns of a tier a media type a capacity threshold and a default tier . The capacity threshold is a maximum capacity rate that the media of the media type is allocated to a virtual volume. For example the row shows an object defined such that tier being 0 in the object and tier definition information is allocated to SSD media 80 area of a logical volume for which the media type is SSD is allocated to a virtual volume and tier 0 is not the default tier.

The tier destination information includes columns of a virtual volume name a virtual volume address a capacity a number of access a access per capacity a current tier and a destination tier . For example the row shows that the capacity of the address from 0 to 99 in V VOL A is 100 the number of access of the address from 0 to 99 in V VOL A is 11000 the access per capacity of the address from 0 to 99 in V VOL A is 110 the current tier of the address from 0 to 99 in V VOL A is 0 and the destination tier of the address from 0 to 99 in V VOL A is 0. 

The tier migration log information includes columns of a log ID date and time IOPS a virtual volume name a virtual volume address and a tier . For example the row and the row show log ID is 5 the address from 0 to 99 in V VOL A was moved to tier 0 at 02 16 2010 06 03 PM and the amount of access to the storage subsystem at 02 16 2010 06 03 PM was 7 IOPS Input Output Operations Per Second . The IOPS is one measure of the performance of the access. Another measure of the performance is BPS Bits Per Second .

The restore point selection screen includes columns of a restore point date and time and IOPS . For example the row shows the date and time that some addresses are moved to different tier was 02 16 2010 06 03 PM and the amount of access to the storage subsystem at 02 16 2010 06 03 PM was 7 IOPS. An administrator selects a restore point and pushes a restore button .

In step the disk control program receives the read command or the write command from the application server . In step if the command that the disk control program received in step is the write command then the process goes to decision step if not then the process goes to decision step .

In decision step write command if the volume name and the volume address are allocated in the virtual volume information then the process goes to step if not then the process goes to step . In step the disk control program allocates an area of a logical volume to an unallocated area of a virtual volume. For example the disk control program selects the media SATA HDD for which the default tier is X to allocate area. The volume name of the write command is V VOL A. According to the pool information V VOL A belongs to POOL A. POOL A comprises L VOL A L VOL B and L VOL C. According to the logical volume information the media type of L VOL A is SSD the media type of L VOL B is SAS HDD and the media type of L VOL C is SATA HDD. Therefore the disk control program can select L VOL C. The disk control program updates the virtual volume information to the result of step . In step the disk control program gets the volume name and the volume address from the write command gets the logical volume name and the logical volume address from the virtual volume information gets the RAID group name and the RAID group address from the logical volume information gets the media name from the RAID group information and writes the data to the SSD and the HDD .

In decision step not write command if the volume name and the volume address are allocated in the virtual volume information then the process goes to step if not then the process goes to step . In step the disk control program returns 0 to the application server because the area specified by the volume name and the volume address is not one to which data is written. In step the disk control program gets the volume name and the volume address from the read command gets the logical volume name and the logical volume address from the virtual volume information gets the RAID group name and the RAID group address from the logical volume information gets the media name from the RAID group information and reads data from the SSD and the HDD .

In step after step or the disk control program increments the number of access by 1 and calculates the access per capacity . For example the virtual volume address is 0 99 and the number of access is 11000 in the row . Therefore the access per capacity in the row is 11000 divided by 100 which is 110. 

In step the tier control program selects one row from the tier destination information . In judgment step if the current tier obtained at step equals the destination tier obtained at step then the process goes to judgment step if not then the process goes to step . In step the tier control program copies the area selected at step to the destination tier obtained at step . For example the address from 150 to 199 in V VOL A is mapped to the address from 0 to 49 in L VOL B the address from 150 to 199 in L VOL A is not mapped anywhere. Therefore the tier control program copies data on the address from 0 to 49 in L VOL B to the address from 150 to 199 in L VOL A and updates the virtual volume information . In judgment step if all rows in the tier destination information are not processed then the process goes back to step otherwise the process ends.

In step the tier control program selects one row from the tier migration log information . In step the tier control program gets current tier of the area selected at step from the virtual volume information the logical volume information and tier and media definition information . For example when the row is selected at step the address from 0 to 99 in V VOL A is tier 0. 

In step if the tier obtained at step equals the tier obtained at step then the process goes to judgment step if not then the process goes to step . In step the tier control program copies the area selected at step to the tier obtained at step . For example if the address from 0 to 49 in V VOL A is not placed on tier 0 then the tier control program copies data on the address from 0 to 49 in V VOL A to vacant area on tier 0. In judgment step if all rows in the tier migration log information are not processed then the process goes back to step otherwise the process ends.

Of course the system configuration illustrated in is purely exemplary of information systems in which the present invention may be implemented and the invention is not limited to a particular hardware configuration. The computers and storage systems implementing the invention can also have known I O devices e.g. CD and DVD drives floppy disk drives hard drives etc. which can store and read the modules programs and data structures used to implement the abovedescribed invention. These modules programs and data structures can be encoded on such computerreadable media. For example the data structures of the invention can be stored on computerreadable media independently of one or more computerreadable media on which reside the programs used in the invention. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include local area networks wide area networks e.g. the Internet wireless networks storage area networks and the like.

In the description numerous details are set forth for purposes of explanation in order to provide a thorough understanding of the present invention. However it will be apparent to one skilled in the art that not all of these specific details are required in order to practice the present invention. It is also noted that the invention may be described as a process which is usually depicted as a flowchart a flow diagram a structure diagram or a block diagram. Although a flowchart may describe the operations as a sequential process many of the operations can be performed in parallel or concurrently. In addition the order of the operations may be rearranged.

As is known in the art the operations described above can be performed by hardware software or some combination of software and hardware. Various aspects of embodiments of the invention may be implemented using circuits and logic devices hardware while other aspects may be implemented using instructions stored on a machinereadable medium software which if executed by a processor would cause the processor to perform a method to carry out embodiments of the invention. Furthermore some embodiments of the invention may be performed solely in hardware whereas other embodiments may be performed solely in software. Moreover the various functions described can be performed in a single unit or can be spread across a number of components in any number of ways. When performed by software the methods may be executed by a processor such as a general purpose computer based on instructions stored on a computerreadable medium. If desired the instructions can be stored on the medium in a compressed and or encrypted format.

From the foregoing it will be apparent that the invention provides methods apparatuses and programs stored on computer readable media for saving and restoring tier information. Additionally while specific embodiments have been illustrated and described in this specification those of ordinary skill in the art appreciate that any arrangement that is calculated to achieve the same purpose may be substituted for the specific embodiments disclosed. This disclosure is intended to cover any and all adaptations or variations of the present invention and it is to be understood that the terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification. Rather the scope of the invention is to be determined entirely by the following claims which are to be construed in accordance with the established doctrines of claim interpretation along with the full range of equivalents to which such claims are entitled.

