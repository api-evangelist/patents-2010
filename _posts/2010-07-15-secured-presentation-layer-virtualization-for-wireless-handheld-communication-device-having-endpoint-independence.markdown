---

title: Secured presentation layer virtualization for wireless handheld communication device having endpoint independence
abstract: The connectivity and security of wireless handheld devices (HDs) can he leveraged to provide a presentation appliance (PA) (e.g. a laptop) with an ability to securely communicate with an enterprise's private network. A split-proxy server, with part of it executing on the HD and a part executing on the PA, implements a full HTTP 1.1 compliant Internet/Web Proxy to couple the PA for communication through the HD. Support for the pragmatic keep-alive header, the CONNECT method, socket connection sharing, and thread pooling, enables a fully functional browsing environment to access web-based applications that are built on standard Internet technologies without the need for re-rendering or re-writing the user interfaces to suit the HD. In addition, Intranet web-based applications are made securely accessible without the need for additional VPN and remote access technologies. The PA may be configured to prevent residual storage of sensitive data on the PA.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08621199&OS=08621199&RS=08621199
owner: 2288538 Ontario Inc.
number: 08621199
owner_city: Waterloo
owner_country: CA
publication_date: 20100715
---
This is a continuation of International Application No. PCT CA2009 000047 with an international filing date of Jan. 16 2009 which International Application claims the benefit of respective U.S. Provisional Application Nos. 61 021 357 filed Jan. 16 2008 and 61 095 387 filed Sep. 9 2008 the contents of all of which applications are incorporated herein by reference.

The present application relates generally to communications via wireless handheld communication devices and to a system and method for the secured virtualization of a presentation layer of such a device on an endpoint such as a laptop or other presentation appliance.

Organizations and enterprises both public and private including government business education health care and other institutions among others are struggling with many challenges around securing information assets while trying to support mobile workers through the use of rapidly evolving wireless computing technologies. The choices are costly and complicated. Mobile workers want to remain connected with their enterprises when mobile and often rely upon wireless handheld communication devices such as cellular telephones PDAs etc. for messaging and other applications.

BlackBerry from Research In Motion Ltd. stands out as the dominant mobile device and supporting infrastructure that is trusted by IT departments to be authenticated to safely access information assets both on the device and in the enterprise. Other commercially available handheld mobile devices and or systems therefor include Palm Treo Pocket PC and other devices executing Good Mobile Messaging and Intranet from Motorola Good Technology Group Motorola Nokia Palm Treo and other devices executing Seven software from Seven Networks Inc. Apple s iPhone devices executing Microsoft s Mobile 5 M5 platform and devices executing Google Inc. s Android platform among others.

BlackBerry devices are wireless handheld communication devices comprising relatively small display and keyboard interfaces. The strength of these devices lays in their secure and reliable communication capabilities. They are not intended to be general purpose computing devices. Often mobile workers have both a BlackBerry device and a laptop computing device to meet all of their needs.

Organizations have invested significantly in secure infrastructure for remote access with technologies like Citrix RSA ID and Virtual Private Networks VPNs to enable laptops and other remotely located computing devices to connect in a secure manner to the enterprise i.e. to the organizations private networks via the public Internet . As well some organizations empower their mobile workers with Air Cards to enable their laptops to connect to the enterprise using the incumbent security infrastructure e.g. VPNs over the same wireless networks e.g. cellular networks supporting the BlackBerry. Yet in general many people with laptops that require remote access beyond email also carry a BlackBerry an already trusted conduit to the enterprise.

Organizations prefer not to manage disparate technologies that achieve the same results. Leading organizations have a vision of endpoint independence meaning organizations can allow their users to select and use whatever endpoint computer they want as their personal computing device leaving the user to maintain that computer and keep it free of viruses allowing them to use the computer both for business and personal use while the assets of the enterprise remain controlled monitored and secured.

In situations in which the endpoint computer is not managed by the enterprise there is concern over the potential for sensitive data to be left behind on the endpoint computer e.g. PC laptop . In situations in which data is moved from a user s handheld device to the endpoint computer s resident applications e.g. Microsoft Word or Excel there is a risk that temporary files that contain such data could be left behind after the user s session ends.

Thus it is desirable to provide a solution that will allow the mobile user to connect from a laptop or other presentation appliance that is capable of executing a web browser to their wireless handheld communication device e.g. BlackBerry . By virtualizing the presentation layer of the handheld and running the applications on the handheld using the laptop as a presentation device users can leverage the secure connection to the enterprise from the handheld. The laptop can leverage the handheld s radio access technology to connect to a wireless network and operate the handheld s secure communication capabilities to authenticate to the enterprise s private network. It may also be desirable that no data trace i.e. zero residuals of sensitive information be left behind on the laptop or other endpoint computer.

In accordance with one aspect of the invention there is provided a computer implemented method for virtualizing a presentation layer of a wireless communication device configured to communicate data over a public wireless network including communicating data securely with a private network over the public wireless network. The method comprises 

A one of the plurality of applications may comprise a first browser application and the method may further comprise executing the split proxy server on the presentation appliance in the execution environment obtaining authentication information for authorizing communications for restricted resources of the private network or wireless communication device and sharing the authentication information between the split proxy and the first browser application within the execution environment for use by the first browser application to communicate for the restricted resources of the private network or wireless communication device and to thereby prevent a second browser application executing outside the execution environment from communicating for said resources without the authentication information.

The execution environment may comprise a Java Virtual Machine JVM and the plurality of applications may be configured for execution in the JVM.

The private network may comprise an enterprise Local Area Network LAN and the wireless communication device may be configured to communicate securely for restricted data or other resources from the enterprise LAN. The split proxy server may be configured to route requests for data or other resources from the enterprise LAN via one or more proxy servers of the enterprise LAN. The enterprise LAN may provide a gateway to a public network for requesting data or resources of the public network and the split proxy may couple the presentation appliance for data communication with the public network.

The split proxy server may provide an encrypted transport connection for communicating between the wireless communication device and the presentation appliance.

At least one of the applications having a user interface to operate the wireless communication device may provide a user interface for visualizing one or more of email contact and calendar data from the wireless communication device. One or more of the plurality of applications executing in the execution environment maybe configured for rendering data comprising an attachment to an email.

In another aspect there is provided a computer readable storage medium having computer executable instructions stored thereon for adapting a wireless communication device configured to communicate data over a public wireless network including communicating data securely with a private network over the public wireless network and a presentation appliance for data communications the instructions including first code means for adapting the wireless communication device and second code means for adapting the appliance such that when the first and second code means are executed by respective processors of the wireless communication device and appliance the wireless communication device and appliance are configured to perform the first method aspect.

In another aspect there is provided a data communication system comprising a wireless communication device configured to communicate data over a public wireless network including communicating data securely with a private network over the public wireless network and a presentation appliance for virtualizing a presentation layer of the wireless communication device to a user. The wireless communication device and presentation appliance are configured to perform a method in accordance with the first method aspect.

In accordance with a second method aspect there is provided a computer implemented method for communicating data using a wireless communication device configured to communicate data over a public wireless network including communicating data securely with a private network over the public wireless network. The method comprises defining a split proxy server for respective execution by a presentation appliance and the wireless communication device for configuring the presentation appliance and wireless communication device for secure communication therebetween and to enable the presentation appliance to communicate data securely with the private network over the public wireless network defining a virtual file system for the presentation appliance for storing data to a store of the wireless communication device via the split proxy server defining a data containment environment on the presentation appliance for restricting applications executing on the applications from storing other than transiently or communicating data other than via the virtual file system wherein at least one of the applications having a user interface to operate the wireless communication device from the presentation appliance to communicate data with the private network via the split proxy server and executing the at least one application for securely communicating data without storing the data to the presentation appliance.

Defining the split proxy and defining the virtual file system may includes defining an I O interface in accordance with WebDAV for accessing data on the wireless communication device. The data containment environment may operate to trap requests to store data by the applications to a storage device available to the presentation appliance and temporally cache the data thereby to only transiently store the data on the presentation appliance. The data containment environment operates to prevent operation of network interfaces. A related computer readable storage medium and a data communication system configured in accordance with the second method aspect may also be provided.

In accordance with a third method aspect there is provided a computer implemented method for communicating data using a wireless communication device configured to communicate data over a public wireless network including communicating data securely with a private network over the public wireless network the wireless communication device comprising a storage means. The method comprises storing data to the storage means received from a presentation appliance coupled to the wireless communication device via a split proxy server and a virtual file system wherein the split proxy server is respectively executed by the presentation appliance and the wireless communication device for configuring the presentation appliance and wireless communication device for secure communication therebetween and to enable the presentation appliance to communicate data securely with the private network over the public wireless network and wherein the virtual file system stores data to the storage means via the split proxy server encrypting said data for storing and transmitting the encrypted data to a first zone of the private network for decrypting and virus scanning before providing to a second zone of private network.

The storage means may comprise a removable storage means coupled to the wireless communication device.

In accordance with various aspects the connectivity and security of wireless handheld devices HDs can be leveraged to provide a presentation appliance PA such as a laptop with an ability to securely communicate with an enterprise s private network. A split proxy server with part of it executing on the HD and a part executing on the PA implements a full HTTP 1.1 compliant Internet Web Proxy to couple the PA for communication through the HD. Specifically the split proxy provides support for the pragmatic keep alive header the CONNECT method socket connection sharing and thread pooling to enable a fully functional browsing environment. Such an environment enables access to commercial web based applications that are built on standard Internet technologies without the need for re rendering or re writing the user interfaces to suit the HD. In addition Intranet web based applications are made securely accessible without the need for additional VPN and remote access technologies.

Extending the HD s HTTP proxy to provide access to the HD s resources via a browser and rendering resources in a combination of XML HTML JavaScript and other web presentation technologies allows the HD to serve as a lightweight personal web server. A viewer application is preferably provided to access the HD s applications such as email contacts so that the presentation layer is virtualized through the PA and a user can selectively operate the data communication functions. No application data need be persistently stored on the PA. In one embodiment when the HD and PA cease communicating e.g. due to a lost Bluetooth or other communication connection as described further below the PA viewer application automatically closes and no data from the HD remains.

In one embodiment communications between the handheld and presentation appliance may be robustly secured. Utilizing the HD s secure connection to the wireless network and a secure TLS tunnel that is enabled by the split proxy a private key for securing the connection between the HD and the PA can be securely exchanged. A pseudo random private key may be requested from a key server e.g. coupled behind the enterprise s LAN firewall by the HD. The key server responds to the HD with the pseudo random private key and an additional pseudo random third factor authentication token. The third factor token is presented to the user e.g. by showing it on the screen of the HD . The HD side of the split proxy now has the private key to be used for securing the channel between it and the PA side of the split proxy. The user can be prompted to enter the third factor authentication token presented on the HD into the PA side split proxy interface or viewer application. The PA side then establishes a TLS secure connection to the same key server this time providing the third factor authentication token and in return receives the same private key that was delivered to the HD. Thus both sides of the split proxy have the same private key retrieved in a secure manner. Both sides of the split proxy are then enabled to exchange highly secure encrypted data using the private key.

In one embodiment a combined USB Bluetooth flash drive may be configured to provide executable components for the invention as well as Bluetooth short range radio communication capabilities to the presentation appliance. The flash drive may provide a store for executable code for the PA side split proxy and viewer etc. as well as for transient data so that the presentation appliance s native persistent storage devices need not be used. Removal of the flash drive can trigger automatic cessation of the split proxy and the presentation layer virtualization e.g. viewer . Similarly stopping short range communications between the handheld and appliance such as by moving the handheld or appliance so that the devices are out of range of one another can also trigger the automatic cessation. While it may be preferred to communicate via Bluetooth and using a consistent Bluetooth device and associated stack other communication capabilities such as a presentation device s native Bluetooth capability or wired serial coupling via USB etc. may also be used. In yet a further embodiment a flash drive without Bluetooth may he used to provide a store for the executable code for the PA side split proxy and viewer etc. as well as for transient data so that the presentation appliance s native persistent storage devices need not be used. Removal of this flash drive can trigger automatic cessation of the split proxy and the presentation layer virtualization e.g. viewer . The handheld may be connected by wired e.g. serial USB connection. Removal of the connection may also trigger cessation automatically.

In one embodiment a virtual file system VFS space may be created to appear to the execution components of the PA side to be storage space on the PA side whereas the space is a mount point over the transport layer to the file system of the HD. This enables the PA execution components to perform as if a normal file system was supporting the execution when in fact the data is securely retrieved from and saved to the HD. When an HD is connected to the PA via the split proxy applications e.g. commonly available third party applications can function normally without knowing they are writing back through to the HD storage. In other words third party applications can work without retrofit and be loaded from the PA directly or via the PA Viewer and in fact even loaded from the storage on the HD.

WebDAV services atop of the VFS components may enable HD flash storage to be accessible while not in mass storage mode. Alternatively the VFS drive mount is not established and only WebDAV compliant applications are capable to access the HD data via the VFS conduit.

PA and HD communicate via coupling . In one embodiment the coupling comprises a short range wireless communication coupling preferably via Bluetooth as described further herein below. Persons of ordinary skill in the art will appreciate that these devices may be coupled for communication using other technology such as wired serial communication USB RS 232 etc. among others. In a preferred embodiment a combined USB Bluetooth flash drive A is coupled to PA to provide executable components for the invention as well as Bluetooth communication capabilities PA .

HD communicates wirelessly via a wireless wide area network WWAN such as a cellular telephone network e.g. a GSM GPRS EDGE or other such network or a wireless local area network WLAN e.g. 802.11 or Wi MAX network not shown . As is well known HD data communications via WWAN are supported by a handheld device services network e.g. BlackBerry Network represented by infrastructure to transmit data between HD and LAN or other HDs not shown . LAN and HD services network infrastructure may be coupled for communication via the external network Internet or a private network not shown 

By way of example components of LAN may comprise a firewall a handheld device enterprise server an enterprise email server and additional proxy server or servers . . . n. Other LAN network components may include application server s backend server s databases etc. e.g. per representative server for providing content to devices on the LAN including HD . In some embodiments a plurality of proxy servers . . . n may be provided for example where respective servers handle respective requests in response to a request type. In other embodiments a single proxy server e.g. maybe provided to handle all types. A person of ordinary skill in the art will appreciate that various wireless and public network infrastructure is omitted for clarity.

HD enterprise server provides a centralized link between wireless devices enterprise applications and wireless networks to provide secure wireless communications and corporate data to mobile users. Important features include end to end encryption and wireless application support for email calendar and address hook. HD enterprise server preferably includes integration with enterprise applications such as Microsoft Exchange IBM Lotus Domino or Novell Groupwise etc.

In one embodiment where HD comprises a BlackBerry device HD enterprise server preferably comprises a BlackBerry Enterprise Server that delivers end to end Advanced Encryption Standard AES or Triple Data Encryption Standard 3DES encryption that helps ensure the confidentiality and integrity of wirelessly transmitted information from behind the firewall to wireless devices in the field . As well the BlackBerry Enterprise Server provides push based access to email calendar contacts tasks and notes instant messaging web based applications and services and enterprise applications. Other related servers not shown e.g. BlackBerry Enterprise MDS may be employed to provide mobile data support to the handheld devices e.g. HD to provide content from servers wirelessly. Though illustrated as separate components of LAN persons of ordinary skill will appreciate that various combinations of hardware software may be configured to provide such capabilities.

In accordance with preferred features of the invention end to end encryption can be provided such that either 1 data is encrypted between the two sides of the split proxy and then either stored on the HD or immediately transmitted from the HD to the target server using another secure transport that being either a secure 3DES AES connection e.g. via BES or an SSL or TLS connection or 2 that the PA has established a TLS connection via the split proxy s tunnelling capability described further below directly to the target server. Hence in a network configuration where a supporting server such as a BES server for 3DES AES is not available not shown an SSL connection from the HD to the target server can be substituted.

The HD Servlet Framework relies on basic event notification methods e.g. via HD APIs to indicate when events such as new mail has arrived been deleted etc. and other events for calendar contacts as available have occurred. Where no event model is available other mechanisms for polling the personal information manager PIM stores not shown to determine changes would be implemented to emulate events for the PA side.

Presentation Layer Virtualization HD Application HD Application is a software component that provides functionality and a user interface on the HD to enable the user to establish a communication connection with the PA via coupling and launch the PA Viewer . HD Application also allows the user to close down the communication connection reconnect exit the application make HD Application run in the background on HD or request a secure channel between HD and PA .

HD Split Proxy and Servlet Framework is a software component that implements the HD side of a split proxy server and with the PA Split Proxy and Servlet Framework executing on PA facilitates communications between the HD and PA . In a preferred embodiment the split proxy provides an XML based transport layer HD Transport component that insulates the higher layer streams based communications from the complexities of the serial port communications over Bluetooth and provides for highly scalable multiplexing over the single transport. A streams library HD Streams allows the higher layers to simply read and write data to the other side of the proxy as if it were any other Java stream. This arrangement also insulates the higher layers from the details of whether or not communications over the Bluetooth coupling are encrypted or not. It will be understood that higher layers here refers to applications application layer functions that transmit formatted application data such as in an XML based protocol for remote presentation or translating presentation display layer instructions to render a display on the remote PA .

HD Split Proxy and Servlet Framework further provides a web proxy server A that uses HD Streams and implements 

HD Split Proxy and Servlet Framework also provides a Servlet Server B that uses the HD Streams library . The Servlet Server B 

HD Split Proxy and Servlet Framework also provides a selectively operable security layer that when turned on extends encrypted communications to the PA side split proxy .

As discussed further below with reference to in the preferred embodiment the security capability securely obtains a private key and a third factor authentication token from a trusted server either in the enterprise or on the Internet. Once the private key is received HD Split Proxy and Servlet Framework informs the PA Split Proxy and Servlet Framework either manually via the user or by programmatically passing the token that it is to request the same key by providing the token to the key server. Once the PA Split Proxy and Servlet Framework has received the key it informs the HD Split Proxy and Servlet Framework and all communications thereafter are encrypted using the private key at the transport layer such that higher layers need not be aware that the data is being encrypted and decrypted.

The PA Split Proxy and Servlet Framework is the other side of the split proxy and shares code in common with the HD Split Proxy and Servlet Framework and coordinates on the implementation of HTTP 1.1. When asked to do so by the HD Split Proxy and Servlet Framework PA side launches the PA Viewer and facilitates communications via transport between the PA Viewer and HD .

PA Split Proxy and Servlet Framework monitors the connection with the key tunnel and if the tunnel breaks the PA Viewer is immediately closed. The tunnel is broken when 1 HD goes out of range of Bluetooth short range communications 2 the HD user turns off the connection from the handheld via the HD application 3 the HD user directly turns off the Bluetooth connection or 4 any time the Bluetooth flash drive is pulled from the PA .

PA Split Proxy and Servlet Framework provides two proxies a viewer proxy A to the PA Viewer for HD application virtualization and a Browser Proxy B to any Internet browser such as Mozilla Firefox or Microsoft Internet Explorer for full web browser functionality. Viewer Proxy A is built atop of the same streams library PA streams component as the HD Side split proxy code i.e. HD Streams and thus built atop the same XML transport PA Transport component over Bluetooth as the HD Side code . Viewer Proxy A exposes the application programming interfaces APIs of the native HD applications to the PA Viewer application via XML. HD APIs preferably include APIs for email calendar and or address book contacts among others provided by data communication application s on HD . Such data communication applications not shown on HD are often synchronized to a user s LAN user account for example on email server .

As noted Browser Proxy B provides a configurable HTTP 1.1 proxy interface to standard Internet browsers e.g. . As such it provides wireless access to the Internet either bound via handheld device enterprise server and in accordance with any restrictions and or traffic monitoring it may impose or open without restrictions and typically bypassing server which in one embodiment may include a BlackBerry Enterprise MDS server for the Browser by translating and relaying HTTP requests to the HD Web Proxy Server A over the transport and . Browser Proxy A portion of PA Split Proxy and Servlet Framework is configurable to allow the user or IT personnel to deny certain user agents such as Skype MSN or other agents that may be undesirable to have access the split proxy services.

PA Viewer is a client like application providing a user interface to the coupled HD APIs . PA Viewer renders a graphical user interface driven by XML presented to it by the HD application and HD split proxy . In one embodiment PA Viewer is a Windows .NET based application. PA Viewer presents the user of PA an interface for manipulating the data being displayed and for sending requests back to the HD side for HD APIs . A representative view is described below with reference to .

PA Monitor is an application that enables the user of PA to launch all of the PA side components in a coordinated fashion and to monitor their status. If any component fails for example because communication with HD is interrupted the PA monitor notifies the user and provides remediation instructions where possible. In addition as described above PA Monitor attempts to close the PA Viewer gracefully in the case where the key tunnel is seen to be down . In one embodiment PA Monitor is a Windows .NET based application.

Key tunnel comprises a lightweight software component that executes on PA and serves as a simple tunnel between the Bluetooth component s stack A and PA Split Proxy and Servlet Framework . Key tunnel reports connectivity status via the standard output stream of the process and shuttles data back and forth between the stack A and the PA Split Proxy and Servlet Framework . On one side of the tunnel the data is read and written over a serial port corn port interface to the Bluetooth stack A and on the other side it is a TCP connection to PA Split Proxy and Servlet Framework .

As described previously a combined USB Bluetooth Dongle and flash drive A may be configured for coupling to PA to provide executable components as well as Bluetooth communication capabilities. The combined unit can enable the use of a consistent Bluetooth interface and stack for communication components e.g. Key tunnel on PA rather than depending on any Bluetooth capabilities native to PA .

Controls provide convenient interfaces to invoke the display of particular data in main data display area or e.g. to launch external user interfaces such as web browser .

Main display area may be divided into more than one portion such as in the Mail view . View shows a list of email comprising summary data in upper portion and individual email previews including a portion of the specific email s body if applicable in lower portion . Selecting a particular email may open the email in a separate pop up window as is well known. Though not shown a calendar view or contacts view may not divide the display area and show all data in an undivided portion of the area . Like other user interfaces PA viewer may be navigated using a pointing device and or keyboard input to move among the controls select control and invoke actions. Clicking on a new control of toolbar may invoke an email composition pop up window for example.

Importantly PA Viewer primarily obtains its data for mail contacts calendar etc. from data stored to HD or otherwise available to HD . Due to the limited resources e.g. storage and bandwidth of HD an HD user may have only a subset of the user s email stored to HD . More email data may remain available to the user through email server for example via a different email interface such as through Outlook or Web mail on a desktop computer not shown . Often only a portion of a particular email is stored on HD . The associated HD application may permit selective retrieval of more data e.g. via a More or More All command interface . PA viewer preferably offers similar functionality.

A virtual file system is preferably provided by the respective split proxy and servlet frameworks and . Such a file system assists with the organized transfer of data files particularly between PA and HD . In accordance with a first model for moving data files from PA to HD 

In accordance with a second model for transferring data files from PA to HD but in a secure manner similar operations are undertaken as described with reference to the first model. However for those cases where it is not acceptable to have a resource saved transiently and insecurely to storage A 

In the case where files are stored to dongle A in an encrypted form if the data is not completely transmitted to the HD and decrypted before the session is stopped the file will not be able to be decrypted again unless a key history is stored for example on the HD storage . A timestamp of the encrypted tile on the dongle A may be used to index into a key history to determine the appropriate key for decrypting the tile after retrieving it from PA storage A.

The virtual file system may provide two or more partitions for data storage. One partition may be a USB connected removable media that can be mounted by any standard operating system s file system and may be accessible by third party applications as is known to those skilled in the art. A second may be a file system that can only be mounted using the split proxy server of the present invention. The two or more partitions could be implemented on the same flash storage drive. Alternatively the partitions can be implemented on distinct flash storage drives.

In one embodiment with reference to the run time environment comprises two zones . The PA Viewer application is written in a language e.g. Java such that in the first zone it can reside within the same execution environment or operating container e.g. a Java Virtual Machine as third party applications written in that same language which the PA Viewer also uses to render attachments and other data. Third party applications used by the PA Viewer can be restricted by the policies and other configurations of the container which also contains the PA Viewer as determined by the enterprise. As an example this container zone could be implemented as a Jar file in the case that the language is Java and the container is a Java Virtual Machine. The second zone includes a file system mountable by any standard operating system s file system and may be accessible by third party applications that do not reside in the container and which are not subject to the enterprise s policies and configurations as is the first zone . Uncontained applications e.g. standard browsers and container can operate with the PA Split Proxy and Servlet Framework and HD Split Proxy and Servlet Framework which in turn utilize the Key Tunnel as explained above.

In another embodiment shown in the block diagram of two zones are also provided. The Viewer application is written in a language AJAX or JavaScript for example such that in the first partition it can reside within the same operating container e.g. a Java Virtual Machine as third party applications e.g. Office Suite written in that same or a compatible language e.g. AJAX or JavaScript which the Viewer also uses to render attachments and other data. An application e.g. a Java browser in the container and the Viewer can share the same authentication information such that the browser is permitted to access enterprise resources by using the split proxy . For example a Java browser residing within the same container as the PA Split Proxy and Servlet Framework can provide the authentication information in an HTTP request header to the PA Split Proxy and Servlet Framework and thereby be granted access to the enterprise resources through the Key Tunnel and the HD Split Proxy and Servlet Framework . However an application in the second zone i.e. not in the container will not have access to the authentication information available in the container and will not be permitted to access the enterprise resources because it will be unable to provide proper authentication information using the split proxy .

In the above two embodiments shown in the Viewer may be programmed using a language compatible with and residing in the same container with a third party application it uses to render attachments and other data on a handheld device.

The main portion of the view shows the visual separation of the file system into the Corporate Space and Personal Space . Files data in the Corporate Space cannot be copied to or saved to the Personal Space e.g. by drag and drop cut paste etc. but files in the Personal Space can be saved or copied into Corporate Space. Third party applications residing outside of the container will likewise not be permitted to access files in the Corporate Space.

Alternatively the flash storage structure can be configured so that the Corporate Space folder does not appear to applications outside of the container such as to Windows File Explorer program local to the PA not shown . This can be accomplished by 1 establishing an entire flash drive on the HD as a Corporate Space 2 not allowing the Corporate Space to be used in mass storage mode and 3 by writing data to the Corporate Space through the split proxy infrastructure back to the HD using a proprietary protocol. VFS such that the file system is not recognized by standard file system viewers like Windows File Explorer.

Similarly if one browser resides in the container Extranet Browser and a second browser resides outside of the container Internet Browser only the Extranet Browser will be able to access enterprise resources. shows a flow chart of an example of such a scenario where both browsers are launched. In practice a user may only launch one or the other browser.

Referring to the PA Split Proxy determines the enterprise authentication information from the HD Split Proxy step . A user then launches two browsers steps and on the PA Split Proxy an Extranet Browser and an Internet Browser. The Extranet Browser is coded within the same container e.g. in the same JVM as the PA Viewer and can he subject to the same restrictions and configurations dictated by the enterprise as the PA Viewer . The Internet Browser is not within the same container as the PA Viewer . The PA Split Proxy passes the authentication code to the Extranet Browser when it is launched step no such authentication code is available to the Internet Browser step because it is not within the same container as the PA Viewer in the PA Split Proxy .

When the Extranet Browser makes a request for a servlet running on the HD step the authentication information is corroborated at the PA Split Proxy and the request is processed step at the HD Split Proxy . If the user attempts to make a servlet request to the handheld from the Internet Browser step which may not be in the container the authentication information cannot be provided by the browser and consequently the request is denied step at the PA Split Proxy . When the Extranet Browser requests Intranet resources the authentication information is passed to the PA Split Proxy in the header of the HTTP requests using methods known to those familiar with the protocol. The PA Split Proxy infrastructure is invoked and the authentication information is propagated to the target server whether that being an additional proxy server steps or the actual target intranet server providing the resource steps . The use of an additional proxy server is explained in detail below. The target server would then either check for the authentication information in the HTTP request header and deny the request if the authentication information is not present or alternatively validate the authentication information against a database of registered authentication data which can be provided by the container at initialization for example .

Alternatively at the time of determining the additional proxy referring still to the PA Split Proxy could determine whether the additional proxy is designated as an intranet proxy i.e. for accessing enterprise data or applications or an Internet proxy not shown . If it is an intranet proxy the PA Split Proxy would deny the request if the authentication information did not corroborate. A server side component could be employed to help determine between intranet and Internet addresses for example for determining whether the determination is made at the server or whether a dynamic list of domains is pushed to the container . The enterprise could further restrict access to certain Internet domains based on the authentication information being present or corroborated.

The use of removable upgradeable micro storage such as microSD cards and others is common in order to separate the purchase of storage from the purchase of a handheld device. The benefit that this provides is that storage can be upgraded from 4 GB to 32 GB for example while continuing to use the same handheld device. New wireless communication devices such as the iPhone and the BlackBerry Bold are also sold with non removable flash storage. One of the benefits of this non removable additional storage is that larger amounts of data can be pushed or pulled to the wireless communication device and reside in this storage while still being controlled by the enterprise via the mobile infrastructure e.g. BlackBerry data can be remotely deleted by the enterprise . Additionally this storage may or may not be addressable readable by standard USB connected mounts on PCs or Mac etcetera . For example BlackBerry has the ability e.g. through IT policies to disable the wireless communication device from showing this internal storage as a standard drive e.g. Mass Storage Mode Off when the wireless communication device is plugged in to a PC laptop via USB cable. In some scenarios it is desirable to make removable storage additionally available on any endpoint for both corporate and personal data while preserving the security of the corporate data.

Derivative challenges are created when data is originated at the endpoint and is encrypted on the HD store or example as described with reference to above. It is often desired and in some enterprise contexts required that data backed up for recovery purposes. Further it is desired to scan data for viruses data originated at an un trusted endpoint could have viruses within the data and so it recommended to scan the data before being accepted behind an enterprise firewall e.g. for others to open on legacy desktop platforms such as Microsoft Office. It is cumbersome to backup and scan encrypted data. Keys etc. must be shared and backed up maintained.

In accordance with a further embodiment the HD and PA may be configured to provide access to tile systems e.g. within microSD or other onboard storage when Mass Storage Mode is off enabling reading and writing to the HD yet enforce that no data from the HD is left on the PA.

PA comprises a physical store such as a hard drive flash optical disk writer etc. a network interface s providing access to a LAN or public network not shown standard I O and a plurality of applications such as suites and browsers. Typically these applications are configured to store data using a standard I O service to physical media such as . Some may be configured to access resources using interface . HD comprises storage media such as a non removable flash or removable flash microSD or other format . In accordance with the present embodiment HD and PA are configured to securely communicate via a split proxy and virtual file system as described with reference to and as adapted as described below to provide WebDAV access to store . For convenience the components of such described above are simplified as virtual file system VFS components A and B. WebDAV or Web based Distributed Authoring and Versioning is a set of extensions to HTTP that allows users to collaboratively edit and manage files on remote World Wide Web servers. Microsoft and Apple operating systems provide WebDAV client support for file explorers e.g. Windows Explorer and Mac Finder .

PA further comprises a block filter driver BFD and a network interface monitor system NIMS . BED is configured to filter and trap standard I O block write requests to a storage device available to the PA other than via the VFS directing the blocks to a managed cache to temporarily store the data. The managed cache may be encrypted. The cache is deleted upon restart of the PA and the PA is restarted at the end of a session. Application requests to read to one or more of the cached blocks are trapped to obtain the data from the cache as necessary or the store as necessary. In this way data created when the HD and PA are coupled and operating in communication i.e. during a session cannot be stored to PA other than transiently and in a manner that is not decipherable without an appropriate index maintained by the BFD . The data cache may be maintained in memory e.g. RAM not shown or to a disk or other store including store .

Standard I O that is bound for a network connected drive and other network traffic is simply blocked as the NIMS ensures the network interfaces remain off while a session is in force so that PA does not communicate other than with HD via the split proxy.

In accordance with the embodiment VFS A and B enables applications that support I O using the WebDAV protocol to access the HD store . As described above VFS A B provides a server to support servlets which may be configured to provide WebDAV services e.g. directory listing properties creating deleting renaming reading and writing files such as RPC methods to implement basic file system access in accordance with the WebDAV specification. Rather than providing such access to a file system on PA the VFS is configured to provide the access to the store of HD . Applications performing WebDAV based I O will find the VFS server A and will be able to manipulate files in the VFS space A . VFS B uses the WebDAV protocol on the PA and a proprietary protocol between the two VFS points A and B atop of the split proxy infrastructure between the PA and HD i.e. proprietary communications over Bluetooth or USB wired connection to enable the VFS operations. While WebDAV is preferred as it is an accepted specification with numerous commercially available components supporting the specification other I O service support components could be adopted including proprietary components.

In accordance with another embodiment to address challenges presented by flash or other storage use on HD there is provided a network configuration and method for providing a means to store corporate or other sensitive data to a removable store on HD.

Taking advantage of the encryption capabilities within the split proxy solution data received in unencrypted form and stored to a non removable storage may be moved to a removable store and stored in encrypted form. Data that newly arrives at the HD e.g. pushed or pulled from a corporate network is first stored on the non removable storage in unencrypted form . Only when coupled to PA and in a session is the data on the non removable storage accessible to applications on the PA .

Once initially read from non removable storage the user is given the option to leave the data on the smaller internal storage or transfer the file to the removable storage media R with the contents being encrypted by strong encryption technology AES for example . This option can be invoked either explicitly with the user taking specific action to move the file to the removable storage R for example when prompted when low free space is detected or implicitly whenever a file from the internal store is modified and re saved.

Once transferred to removable storage R the data remains encrypted and therefore is only ever accessible via the secure split proxy environment even if the removable storage R is removed and placed in another non enterprise device not shown only personal files that have not been encrypted will be generally accessible via standard means.

Similar to how the handheld is a personal data landing zone for data coming from the enterprise to the user there is a landing zone created behind the firewall but outside of the general corporate network . In this way data can be backed up from the handheld and transiently stored in a personal space B within the corporate landing zone that mirrors the data on the employee s handheld. In this corporate landing zone data is decrypted scanned for viruses and propagated on into the corporate network C to be available for integration into normal backup recovery processes within the enterprise and for general access to others within the corporate network e.g. server .

At steps A and if not already paired devices and A are paired for Bluetooth communication as is well known. At step A initial executables are loaded from store A into the PA runtime e.g. RAM B . PA Monitor is loaded from store A. PA Monitor loads the Bluetooth stack A loads the Key software that interfaces with the stack A and the Transport and the Split Proxy and Servlet Framework and loads the PA Split Proxy and Servlet Framework . At step PA Monitor then observes the execution of these components and if any are determined to be stopped an attempt to restart is made unless the physical Key dongle A is determined to have been removed in which case it continually monitors the PA for the presence of the Key dongle before attempting to restart components.

With the PA side running the user can now interact with the HD Application and launch the PA Viewer remotely. At step B the user starts HD Application and invokes a Connect operation. Alternatively not shown if HD Application is already connected the user may invoke a Restart operation e.g. from a menu . Using the native HD O S interfaces HD Application establishes an SPP Bluetooth connection to the paired PA that is now listening for connections from the previously paired HD and prepares the HD Transport and HD Streams atop of the SPP connection once established. Once connected HD initializes the HD Split Proxy and Servlet Framework and starts the Servlet Server B and the Web Proxy Server A to use the HD Streams now configured with the SPP connection. At step B simple connect request is sent over the HD Transport and received by the PA Transport and passed up to the PA Split Proxy . At step A the PA Split Proxy validates the request and loads the PA Viewer into PA Runtime B.

With PA Viewer now running it looks for instructions on how to initialize itself. Preferably it gets these instructions from a configuration file stored on steps A and B . In the case where the initialization is the first time launching the PA Viewer no configuration file may be found and the PA Viewer can use default settings for the first time. The default settings are saved back to the HD for the user to subsequently change if desired as the configuration file not shown . PA Viewer makes a servlet B request to the HD Servlet Server B using a relative URL such as viewer getConfig to retrieve the configuration information. The configuration file is processed and the settings are maintained with the PA Viewer s runtime memory.

With its configuration information now set PA Viewer makes a request to load the folder navigation hierarchy such as may he displayed on the left hand side of the user interface by sending a request to the HD Servlet Server B using a relative URL such as mail getFolderList for example step A . The HD Servlet Framework replies with an XML stream that tells PA Viewer what and how to present the folder navigation hierarchy step B .

With the navigation hierarchy set the PA Viewer can now execute on any start up I configuration instructions by making further requests to the HD Servlet Server as indicated by its configuration steps A and B . Start up instructions may include instructions to load in various PIM data from HD such as message data i.e. Inbox sent items etc. for the Folders in contact data and calendar data etc. For example if configured to load the Inbox folder data on start up a request to the HD Servlet Server using a relative URL such as mail getMailList is called with sufficient parameters to identify the folder for which the mail list should be returned and the mode in which the list should be returned i.e. whether the entire list should be returned in one batch or whether the list should be paged in .

With PA Viewer now started configured uniquely by the HD configuration and initializing its display the user is free to interact and begin reading email browsing contacts calendaring and composing new messages as desired.

As new events occur on HD e.g. messages received contact update calendar changes etc. PA Viewer may be updated to present the events. An event listener model is preferably provided whereby the PA Viewer can be advised of changes following start up. The event model may be applied not just to email but to any event that happens on HD for visualization by the presentation layer by providing a listener architecture for the particular resource type e.g. Calendar Contacts Mail etc. Using email as an example 

With respect to the embodiment of similar installation and start up operations are performed to configure PA . On installation the BFD and NIMS are installed for respectively re directing disk rights to the managed cache and ensuring that network interfaces remain off during a session. A operating system userid is defined for use during a session the userid being assigned certain rights or privileges and being restricted from others. For example the ability to switch to a different user e.g. an administrative user during a session is revoked or prevented to thwart attempts to circumvent security features that prevent the leaving of data on PA .

On start of a PA PA Monitor is initiated to a get a session running. The userid is confirmed with proper rights so that the run time restrictions are enforced before a connection is established to the HD . NIMS turns off the interfaces to stop a user knowingly or unknowingly such as via a virus from taking data received via a session connection and sending it out over a network connection that is not managed by the HD and its connected network infrastructure. The connection to the HD is established and the user of PA can begin using the HD for example to access enterprise connected resources via the HD email etc.

During operation NIMS keeps interfaces turned off. BFD redirects disk writes block level to managed cache as volatile storage managing the blocks trapped and written to the cache to re serve same on subsequent reads etc. Upon a PA system restart the volatile storage is removed thereby ensuring that no data is left behind on the PA during a session.

On exit of the session the PA is restarted to remove the cache data and return to an initial state prior to the session.

With an understanding of the initial start up configuration and initialization representative operations for using PA viewer will now be described. is a flowchart of operations for composing and sending an email using PA Viewer .

At step a user launches a new message window using the PA Viewer controls e.g. . The user composes the email entering. To recipients CC recipients BCC recipients Subject line and the body of the message as desired step . Where contacts have been loaded either on start up typical or manually by the user selecting the Contacts tab the contacts can be used in a drop down list to facilitate entering commonly used email addresses 

At step with the new mail message composed the user presses the Send control e.g. from controls . PA Viewer packages up the new message into an XML payload and POSTs the message data to the HD Servlet Server B using a relative URL like mail sendMessage step . For the convenience of the user and in a like manner to mail composition and sending using commonly used mail applications the email under draft may be maintained in a Draft folder not shown in folder tree view and the outgoing email following the send invocation maintained in a Outbox folder not shown .

On the HD the XML based request is received by the HD Servlet Server B and the request is passed to the appropriate Servlet within the Servlet Framework step . The sendMessage Servlet unpackages the XML and interfaces with the HD APIs to create an appropriately structured email message for the HD and sends the message out the HD email transport step . At steps and the sendMessage Servlet replies back to and the PA Viewer receives a confirmation that the email message was posted to the HD outbound queue. Though not shown PA Viewer receives an event notification to update a Sent Items folder in viewer portion .

Similar operations may be performed for other message activities such as Reply Reply All Forward etc. To reply to a message a user selects the desired message from the message list and either right clicks it and selects Reply or Reply to All or uses the Actions menu controls to do the same or uses the appropriate button in the button bar . PA Viewer launches the email compose window similar to above but also pre populates the Recipient Fields sets the subject to RE subject and optionally makes a request to the HD Servlet Server B to fetch the entire content of the original message using a relative URL like mail fetchMessage providing appropriate parameters for the fetchMessage Servlet to fetch original email s content using the necessary HD APIs . PA Viewer pre populates the message body window with the original message and marks the content as Original . The user then is free to edit any part of the message content before pressing the Send button . Similarly PA Viewer packages up the reply message into an XML payload and POSTs the message data to the HD Servlet Server B using a relative URL like mail replyToMessage providing appropriate parameters for the replyToMessage Servlet to use the necessary HD APIs to construct an email message on the HD that represents a reply to the original message and to subsequently send out to the HD email transport for queuing. The HD Servlet then replies with a confirmation that the message was queued for transmission.

When forwarding a message operations are similar to replying. However the original message is preferably not fetched and the user does not have the option to modify any of the original message content before sending. To ensure that the HD side can construct an outgoing message as a properly structured forward using the necessary HD APIs for constructing an email a distinct relative URL is called similar to mail sendForwardMessage.

Any of the above types of messages can be saved as a draft message to the HD storage. The steps are identical in each case except instead of the URL to send the message the URL indicates that a draft should be saved instead. For example the relative URL mail saveForwardMessage instructs the HD side Servlet Framework to use the necessary HD APIs to construct an appropriately formatted message that could be forwarded using the HD email transport but to instead simply store the message as a draft for subsequent further editing and sending at a later time.

Often an email includes an attachment document. An attachment document may comprise data intended for a specific application. Common examples are word processing documents e.g. for MS Word image documents .tiff .GIF.jpeg and portable document format documents i.e. PDFs . To reduce wireless bandwidth consumption minimize HD storage requirements and reduce HD data rendering requirements email data communication to the handheld device may not include data for attachments or whether on user request for attachment data or automatically may include only reduced data therefore. For example a word processing document attachment may include only limited text and formatting data for the handheld.

Advantageously PA particularly in laptop form usually has adequate storage and native applications for working with such attachments in native form. illustrates an alternative embodiment of network in which the servers coupled to LAN are different from . LAN may be configured to include an attachment server for example using IMAP or POP protocols to extract an email with its attachment from email server on a request received from PA viewer via HD and deliver in native form the attachment in response to PA Viewer through HD .

An option to save attachment to PA storage may be given to a user preferably this option can be disabled when required by enterprise deployments. Where an associated application is available on the PA for a given attachment type it can be launched to render the attachment for viewing and or editing Alternatively web based applications can be used to do the same by either 

In another embodiment an attachment server may be configured similarly to attachment server to pull the email and its attachment and forward the attachment to the requesting PA Viewer. For example PA Viewer can be configured to send attachment requests to the attachment server. That attachment server is configured with an email account for the HD and an attachment server processing capability as described with reference to server . To obtain the attachment the email of interest containing attachment s is first forwarded via the PA application to the attachment server via standard SMTP SMIME protocols to an email account specific to the HD. The PA then requests the attachment of interest using an HTTP S request similar to the request response described above with reference to . The attachment server pulls the email and native format attachment from email server behind the firewall to provide in response to the PA . This attachment server may be one hosted outside the enterprise beyond LAN or within the environment of LAN . As will be understood to persons of ordinary skill in the art an externally hosted server may require different security to access email server behind firewall . Hosting the attachment server within the LAN may be preferable to meet IT standards for the enterprise.

At step Key Server responds with a private key preferably comprising a generated pseudo random array of bytes e.g. a minimum of 128 bits and configurable and a third factor authentication token comprising a separate generated pseudo random string of at least 8 characters configurable .

At step HD Application receives the key and token and displays the token which is entered into PA Viewer . Alternatively the token could be sounded for the user.

PA Viewer establishes a TLS 1.0 Secure connection to Key Server by way of the PA split proxy software components described in and requests the same private key that was obtained in step by providing the token in all HTTPS TLS request step .

At step Key Server uses the token to lookup the private key that was provided in step and returns that key in the response to the request. At step once the private key is received by PA Viewer it is provided to the PA side of the split proxy and a request is sent to the HD side indicating that all subsequent data transmission shall be encrypted using the private key just obtained.

With reference to and communications from an application e.g. browser on PA to a target resource on an Internet or Intranet typically travels through at least two proxies. The first is the split proxy server and and the second is HD enterprise server . This second proxy can for example also operate as a firewall . illustrate operations for configuring and operating the split proxy server and to communicate with the third proxy server or servers . . . n providing access to Internet or Intranet resources. Proxy on the wireless infrastructure is referred to as the 2Level Proxy in the flow charts of . It is common for an enterprise to require that communications from the wireless infrastructure proxy travel through another third proxy such as proxy in order to gain access to resources on the Internet or Intranet . Enterprises may further direct such communications i.e. from the proxy on the wireless infrastructure through different third level proxies . . . n depending on the type or address of the resource requested. Browsers are typically configured for access to the Internet or Intranet resources either by being configured with a single static proxy address or by being configured with a URL to a script that determines the proxy address given the resource address.

The two parts of the split proxy HD Split Proxy and Servlet Framework the HD Proxy and the PA Split Proxy and Servlet Framework the PA Proxy work in tandem to provide a full featured proxy to browser . For performance reasons HD Proxy may not process headers but instead may rely on the PA Proxy to instruct it as to which address to connect to in order to retrieve the requested resource. HD Proxy is provided access to the enterprise network via HD enterprise server residing on the wireless infrastructure. As such the typical means available for configuring a browser on a PC to communicate with the Internet or Intranet resources in an enterprise via third proxy are not inherently available using the split proxy configuration.

An enterprise may require that access to Internet or Intranet resources be dynamically routed through different proxies e.g. . . . n depending on the nature of the resource being requested. In such situations browsers typically use scripts to determine the appropriate proxy server to target. illustrates a method for communicating in such an enterprise network using the split proxy configuration according to one embodiment. HD server enterprise server on the wireless infrastructure passes e.g. pushes a parameter representing a URL address of a script for determining the appropriate proxy server to target to HDs that it manages and that are configured to use the split proxy system block . The HD receives and stores the parameter to a local policy database representing the URL address of the script for determining the appropriate proxy server to target block . The HD Proxy retrieves the parameter block and then passes it to the PA Proxy on initial connection blocks . The PA Proxy then retrieves block the script from the wireless interface proxy using the URL parameter and loads the script into a runtime script engine block . When an HTTP request is received by the PA Proxy block the PA Proxy passes the request URL through the script to determine the proxy server address block . The request is then formatted to specify the HTTP Headers and the wireless interface proxy address before being sent to the HD Proxy block . The HD Proxy completes the HTTP request thereafter block using the resolved proxy server address. With the PA Proxy now informed of the script location it can retrieve the script on startup via the proxy on the wireless network. With the script loaded dynamically it remains current and the PA Proxy can continue to instruct the HD Proxy to connect to addresses dynamically based on the results of the script s execution given all subsequent requests for resources from the browser on the PA.

In another embodiment of the method of in which network communications are dynamically routed through different proxies depending on the nature of the resource being requested before accessing the Internet or Intranet resources operations of block may be omitted. The parameter may be received by the HD by other means such as though input via a user interface.

When an enterprise requires network communications to be dynamically routed through different proxies depending on the nature of the resource being requested scripts typically used to determine the appropriate proxy server to target may rely on information only available when the application requesting the resource is directly connected to the enterprise s network. For example an enterprise may require a certain proxy to be used if the domain of the resource requested resides in the enterprise s Domain Name System DNS and if it does not reside in the DNS a different proxy may be required. Running a script on the HD or PA will not correctly resolve the proxy address unless the script accesses the enterprise to determine the contents of the DNS.

In one embodiment depicted in a method is provided for determining the appropriate addresses of the enterprise proxies . . . n addresses based on the domain or resource type or address via a script run on a proxy server in the wireless infrastructure. A parameter representing the URL address of a servlet software method or script on the 2Level Proxy Server is passed e.g. pushed to the HD block by server . The parameter e.g. URL is received and stored to a local policy database block . Alternatively the URL address of a servlet software method or script may be received by HD Proxy by other means such as by input via a user interface. HD proxy may retrieve the URL block . Given the address of a resource being requested the software method will return the proxy address e.g. . . . n required by the enterprise.

The parameter may be passed from the HD Proxy to the PA Proxy on initial connection blocks . Alternatively. HD Proxy can call the script and determine the proxy address without the need for the PA Proxy. The HD Proxy or the PA Proxy if it has the parameter can call the software method with the resource address as input blocks A B C . The resulting proxy address is passed back from the wireless infrastructure proxy to the PA Proxy block and then cached to the PA Proxy if necessary block . The HTTP headers and the wireless infrastructure proxy address are formatted into the original HTTP request which is then sent back to the HD Proxy block . The HD Proxy then completes the HTTP request block using the resolved proxy address. With the PA Proxy now informed of the URL address of the script it can call the servlet blocks A B C using the HTTP request and dynamically resolve the proxy address for accessing the HTTP resource. Further with the HD Proxy and possibly the PA Proxy now informed of the enterprise s proxy address for a certain resource request the HD Proxy can or the PA Proxy can instruct the HD Proxy to connect to the enterprise s proxy address on all subsequent requests for that resource from the browser on the PA.

As noted above the presentation layer virtualization can be automatically stopped on PA in response to certain events particularly those events which suggest an opportunity for persons other than the user to have access to the virtualized data e.g. when the user is not proximate to the PA . For example in the illustrated embodiments PA and HD are coupled via short range radio communications and PA is provided with a flash drive dongle A storing executables implementing aspects of the invention. The Bluetooth connection between HD and PA may be stopped such as when they go out of range e.g. when HD is taken away from PA by the user . The connection may be stopped when the dongle is removed from PA . Under these circumstances it is likely that the user does not want third parties to have access to data that may be virtualized to a PA display device. Such events preferably trigger a removing of virtualized data from the display. This can be accomplished in different ways including a shutdown of PA viewer for example.

Monitoring of the HD PA connection status and dongle A attachment to PA may be performed in various ways. For example as PA Monitor is launched from dongle A it is aware of its home drive root. PA Monitor can be apprised of the Bluetooth connection status e.g. via stack A which status may be presented to the user. On a connection termination PA Monitor can prompt the user to shut down. A default operation may be configured such that if no response is received within a predetermined time the PA Viewer is automatically stopped. Such a timer permits a user to re establish a connection to continue operations and takes into account a user having left the proximity of the PA with the HD .

If no connection between PA and HD is present PA Monitor can poll access to its root dongle A and immediately stop PA Viewer and other components as may be desired if dongle A is no longer present. PA Monitor may remain executing awaiting a further connection. Should dongle A be replaced and the connection started PA Monitor can be advised whereupon dongle A polling is stopped and the components e.g. re started as necessary. Similarly stack A could be configured to monitor the presence of dongle A when a connection is not available and advise PA Monitor of such to invoke the automatic shutdown as described above. Stack A could remain executing polling to re open the device A. Once stack A successfully opens the device A again after it is reinserted PA Monitor is notified to begin the re start cycle. Other variations will be apparent to those of ordinary skill in the art.

Detailed diagrams for HD and PA are not provided as such will be understood to persons of ordinary skill in the art. PA may comprise a laptop or PC or other computing device with sufficient resources to execute a browser and render to a display device the presentation layer of the HD. This device need not have inherent network access per se as such can be provided by the HD. However a PA will include an I O interface through which to communication with the HD and such may include an inherent short range communication capability such as Bluetooth wireless or a serial communication interface e.g. USB . As shown a USB interface may be configured e.g. via dongle A to provide wireless short range communication capabilities to a PA.

Suitable devices that may be configured as an HD are two way communication devices having advanced data communication capabilities including the capability to communicate with other computer systems. Depending on the functionality provided by such a devices it may be referred to as a data messaging device a two way pager a cellular telephone with data messaging capabilities a wireless Internet appliance or a data communication device with or without telephony capabilities . In some embodiments a handheld device may have both Wi Fi or similar transceiver and cellular transceiver capabilities and may communicate in respect modes with any one of a plurality of access points and base station transceiver systems within its geographic coverage area. Such a device will typically provide one or more data communication applications such as a messaging application and or browser. A preferred application that may be provided by such a handheld device may be a personal information manager PIM application having the ability to organize and manage data items for the user such as but not limited to e mail calendar events voice mails appointments and task items. Naturally one or more memory stores are available on the handheld device to facilitate storage of applications and data. Preferably handheld device includes a short range communications subsystem that provides for communication between the handheld device and different systems or devices which need not necessarily be similar devices such as PA . For example such a subsystem may include a Bluetooth communication module to provide for communication with similarly enabled systems and devices. The handheld device may also include an I O interface for wired communications such as one or more serial communication interfaces.

Though shown communicating wirelessly via Bluetooth throughout the embodiments HD and PA may be coupled in other manners that preferably provide sufficient throughput to support the application to be executed by the PA. For example they can be coupled wirelessly in accordance with other protocols such as wireless USB or coupled in a wired mode. Though primarily described with reference to handheld devices persons of ordinary skill in the art will appreciate that other mobile wireless communication devices with similar attributes are suitable.

The execution of applications in a contained execution environment such as in the embodiments of and are described separately from the data containment embodiment of . However it is understood that these embodiments may be combined e.g. and or and such that applications may run in a container and data may be contained by BFD. WebDAV may be provide atop the VFS as described.

Advantageously the PA and HD may be coupled to virtualize the HD s presentation layer. Virtualized access is provided to HD applications and browser access is provided to the enterprise and Internet. Using encrypted communications maintains a same level of security from the HD to the Presentation Appliance as there is from the enterprise to the HD. On many handheld devices including leading devices inherent limitations with memory threads network connections and other resources make it very difficult to support a fully functional browser environment. To solve other problems inherent in wireless networks and with rendering HTML based web pages on tiny handheld devices a network side HTTP proxy is often used that transcodes the HTML as part of the wireless device network infrastructure reduce data communications requirements but at the expense of a fully complaint HTTP 1.1 experience. In accordance with the invention the split proxy components are enabled to provide and support open Internet standard protocols such as full HTTP 1.1 HTTP S TLS and SSL.

Although specific embodiments of the invention have been described herein it will be understood by those skilled in the art that variations may be made thereto without departing from the spirit of the invention or the scope of the appended claims.

