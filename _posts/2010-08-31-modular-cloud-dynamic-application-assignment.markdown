---

title: Modular cloud dynamic application assignment
abstract: An illustrative embodiment includes a method for use with a computing system comprising a first computer coupled to one or more additional computers, wherein each of the one or more additional computers manages a respective set of one or more virtualized computing resources, and wherein the first computer manages the one or more additional computers. The method includes the steps of determining an assignment of at least one application to at least one of: (i) the first computer; and (ii) at least one of the one or more additional computers; and responsive to a detected condition, changing the assignment of the at least one application to the at least one of: (i) the first computer; and (ii) the at least one of the one or more additional computers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09003014&OS=09003014&RS=09003014
owner: International Business Machines Corporation
number: 09003014
owner_city: Armonk
owner_country: US
publication_date: 20100831
---
The present application is related to commonly assigned U.S. patent application Ser. No. 12 872 095 filed on Aug. 31 2010 which is incorporated by reference herein.

The present invention relates generally to cloud computing and more particularly to techniques for building and managing cloud computing infrastructures.

Cloud computing includes a model for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. Cloud computing is often characterized by on demand self services broad network access resource pooling rapid elasticity and measured services.

For example cloud computing could include an Infrastructure as a Service IaaS model in which the consumer does not manage or control the underlying cloud infrastructure but the customer is provided with a capability to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. Cloud computing is often used in conjunction with virtualized resources. Virtualization of a resource typically refers to an arrangement in which logical resources are abstracted from physical resources.

Cloud computing has received a great deal of attention recently including the provision of several solutions from prominent information technology IT companies.

Cloud computing has the potential to overhaul the way IT services and businesses are offered and conducted thus providing significant cost savings and additional capabilities.

Part of the cost savings are due to the scale and level of automation provided in such a model. For example in order to have cost savings in an Infrastructure as a Service IaaS model one may need at least 20 000 computer servers. Indeed many established

IaaS providers have more than 100 000 servers as part of the cloud. However building and managing such a large system presents a number of challenges.

Principles of the invention provide techniques for building and maintaining a computing infrastructure. While not intended to be limited thereto such techniques are particularly suitable for application to a cloud computing infrastructure implementing an IaaS model.

An illustrative embodiment includes a method for use with a computing system comprising a first computer coupled to one or more additional computers wherein each of the one or more additional computers manages a respective set of one or more virtualized computing resources and wherein the first computer manages the one or more additional computers. The method includes the steps of determining an assignment of at least one application to at least one of i the first computer and ii at least one of the one or more additional computers and responsive to a detected condition changing the assignment of the at least one application to the at least one of i the first computer and ii the at least one of the one or more additional computers.

Illustrative embodiments of the present invention advantageously provide an infrastructure management methodology for managing large numbers of highly virtualized resources which can reside in multiple locations so that they resemble a single large resource that can be used to deliver services. For example illustrative embodiments advantageously provide a modular approach such that very large scale infrastructures can be built incrementally. Thus illustrative embodiments can be adapted to future needs to grow to even larger scales both in size and functionality. Moreover illustrative embodiments could allow a cloud provider to add additional resources without disrupting the existing available services.

These and other objects features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof which is to be read in connection with the accompanying drawings.

As heretofore discussed the term cloud computing is typically defined as a computing capability that provides an abstraction or virtualization between the computing resource and its underlying technical architecture e.g. servers storage networks enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. It is to be understood that principles of the invention are not intended to be limited to any particular definition of cloud computing and that other suitable computing environments are contemplated as being within the scope of the invention.

More particularly each POD system is typically responsible for a set of virtualized resources which may include a data center comprising servers storage and network equipment. The POD system may include management applications to control this set of virtualized resources in order to support a customer s IT requirements to run their business. A POD system may include a front end console application. A POD system may be shipped to the customer or it may he hosted at a provider s data center.

Connections may be via the Internet an intranet and or an extranet for example. Alternatively or in addition one or more of the connections could be a network cable in an embodiment in which one or more of the POD systems is local to the Cloud Operations Center . Generally performance and availability data is transmitted from each POD system to the Cloud Operations Center and in turn delegated actions are transmitted from the Cloud Operations Center to the respective POD systems . Examples of these delegated actions include upgrades to software in a POD system fixes for problems reported in the POD system and remote installations.

The Cloud Operations Center may be clustered for high availability and disaster reliability. The POD systems may also be clustered and or distributed for performance availability and reduced latency. The POD systems may be associated with either a service provider or a customer.

In contrast to conventional techniques in which management of a computing system is either centralized or distributed an illustrative embodiment of the present invention provides a separation of end to end management responsibilities between the front end Cloud Operations Center and the respective POD systems . Generally each POD system is operative to manage a set of virtualized resources. For example a given POD could provide management of infrastructure configuration provisioning releases changes incidents problems capacity service levels availability and service desk issues associated with a corresponding set of virtualized resources e.g. a data center .

The Cloud Operations Center is operative to manage the overall cloud computing infrastructure. For example Cloud Operations Center could provide business support services e.g. revenue management and customer management as well as services catalog management.

Resource specific management is handled at the POD system level so that higher level intelligent orchestration of a requested service is managed at the front end Cloud Operations Center without requiring server specific information at the Cloud Operations Center . For example the Cloud Operations Center requires no knowledge of the specific physical resources associated with each POD.

For example as will be discussed further with reference to Cloud Operations Center handles service requests from users and orchestrates the end to end workflow to facilitate that request. For example customer requirements for a service could be collected through a front end portal of the Cloud Operations Center then the customer requirements could be sent to an operation layer to provision resources in order to provide the customer with the requested service.

A service request refers to a request by a user for a specified service offering typically in accordance with a service level agreement. Typically a service request will be based on a service offering selected from a service catalog which enumerates various service offerings. Examples of service requests include a request for a desktop service computing infrastructure or storage service. More generally a service request will typically entail provisioning of a specified computing infrastructure or platform. One could request a specified number of units of one or more virtualized computing resources e.g. processor resources storage resources or network resources . For example one may request 50 gigabytes of storage space or 300 megabytes per second of network bandwidth. One could also request access to a specified computing platform or software package which in turn would require provisioning of virtualized computing resources such as processor and memory resources.

The Cloud Operations Center will also define a set of clearly identified application program interfaces APIs that a POD system should support for modularity. As will be discussed further with reference to each POD system represents a self sufficient and modular unit which is associated with a given set of resources. The POD system performs all resource level management for its associated resources thereby hiding these lower level management specifics from the front end Cloud Operations Center . In some embodiments these POD systems may represent diverse application specific resources. For example POD system could be a healthcare POD system similar to that described hereinbelow with reference to while POD system could be a transportation POD system as will be discussed herein.

This modular approach allows one to add or remove POD systems without requiring an overhauling of existing management infrastructures. More particularly each POD system is designed in a self contained manner such that additional POD systems can be added to the existing ones without requiring any changes to the existing POD systems. Rather only the configuration at the Cloud Operation Center needs to be updated to accommodate the additional POD system . Likewise POD systems can be removed without requiring changes to the remaining POD systems.

The Cloud Operations Center keeps track of statistics about each POD system so as to make intelligent decisions about where to dispatch the request to provision or facilitate the requested resources or services. These decisions could be based not only on workload but also on business level aspects such as cost and QoS. These decisions could also take into account capabilities of the various POD systems such as industry specific capabilities associated with one or more of these POD systems as further described in commonly assigned U.S. patent application Ser. No. 12 872 095. The Cloud Operations Center would have sufficient information to map requests into cloud specific operations. This information could for example be hierarchical in nature.

Once the request is mapped to specific cloud resources and operations Cloud Operations Center will contact a POD system or a set of POD systems with the request and workflow details to actuate the provisioning of the requested service on the physical resources. This resource level provisioning is carried out locally by the POD system itself as it has the knowledge of the resources locally available in the POD system. It should be noted that this provisioning may include one POD system operating in a peer to peer manner with one or more other POD systems

Cloud Operations Center comprises three main components Customer Administrator Interface Cloud Runtime Manager and Service Provider Administrator Interface . Generally the Customer Administrator Interface provides functionality to end users e.g. customers of the service provider while the Service Provider Administrator Interface provides functionality to an administrator of the cloud computing infrastructure e.g. the service provider itself .

The Customer Administrator Interface comprises Business Support Services module Portal module Service Request Catalog module Provisioning module and Analytics module .

Business Support Services module provides various business support services to users of the cloud computing infrastructure such as customer management and revenue management. Portal module allows users of the cloud to request cloud services. Examples of these cloud services include creating a new virtual machine VM with an image deleting a resource or modifying an existing resource. Service Request Catalog module provides intelligence to map an incoming user request to cloud specific requirements including the ability to identify which POD system should support this request. Service Request Catalog also provides an interface that allows users customers to select size and order the services they want. Service Request Catalog may comprise for example a list of available service offerings which the user may select and customize.

Provisioning module allows for remote management of the resources so as to facilitate cloud services. For example Provisioning module works with Service Request Catalog by translating the user s request for a service for example a test environment with specified characteristics into a specific infrastructure configuration. Provisioning module is also operative to distribute of new and updated software such as software patches. Analytics module provides analytics and recommendations to support business level analysis for example to help minimize risk maximize value and align IT and business objectives.

Cloud Runtime Manager is the core module that provides service monitoring and management for the cloud computing infrastructure. Cloud Runtime Manager is a common resource to the Customer Administrator Interface and the Service Provider Administrator Interface . Once a customer is subscribed to a service and that is deployed and running both the customer s IT administrator and the service provider administrator can access the Cloud Runtime Manager e.g. via web services or programmatic APIs in order to manage the service.

Service Provider Administrator Interface includes Dashboard module Metering Monitoring module Historical Reports module Event Management module Alerts module and Data Warehouse module . Service Provider Administrator Interface also includes a configuration management database CMDB and a set of images for problem determination PD .

Dashboard module provides a user interface for the administrator of the cloud computing infrastructure to the other modules described herein. Metering Monitoring module is operative to obtain performance and availability data from the POD systems . Metering Module module also tracks actual usage according to defined metrics and translates them into either an internal charge back transaction or a bill.

Generally the Cloud Operation Center will perform high level monitoring for the POD systems which it supervises. More particularly the Cloud Operations Center tracks and keeps data related to the functional capabilities of each POD system as well as high level POD system state information including but not limited to processor utilization and storage capacity.

Historical Reports module tracks the performance of the POD systems over time to allow for determination of changes such as gradual deteriorations in system performance. Event Management module provides for management of both routine and unexpected events. Alerts module generates alerts to the administrator when necessary such as when an error condition occurs. For example a breach of pre established thresholds may automatically trigger the deployment of an additional POD system.

Data Warehouse module provides data warehouse operations for management optimization. Element is a CMDB which includes elements representing the configurations of various elements of the cloud computing infrastructure and which may be used in for example change management.

Element is a PD image repository that stores system checkpoint snapshots of specific POD system software products. These snapshot images are typically labeled as either a correct image or as indicative of a problem type. These snapshot images may include attachments such as for example error descriptions and suggested remediation. During the deployment of a POD system the installation of software is validated against the related images in the PD repository. If the deployment intermediary image matching an image in the PD repository labeled correct image the deployment continues. Otherwise if a problem image is matched the deployment follows the corresponding attached workflow to solve the problem. Depending on the problem type the remediation can include an automated restart of deployment rollout to a previous correct intermediary image or a suite of manual actions.

POD system generally comprises two major components Virtualized Infrastructure and Management Interface . Virtualized Infrastructure typically represents resources with which a given POD system is associated. These resources typically comprise components within a data center such as Servers Storage and Network .

Management Interface also known as an Appliance provides an interface for resource level management. Data Collection module is responsible for gathering and analyzing performance and availability data regarding the resources associated with the POD system. Detailed monitoring is performed by a POD system with respect to its resources including the virtualized ones. Configuration and Provisioning module is responsible for managing and altering the configuration of the resources as well as provisioning of additional resources. Configuration and Provisioning module may utilize a CMDB in a manner similar to that heretofore described with reference to CMDB in . Repair Services is responsible for correcting errors and problems with the resources and may use a PD image repository in a manner similar to that heretofore discussed with reference to PD image repository in .

An industry specific cloud computing application could be implemented in accordance with an illustrative embodiment of the present invention. For example a cloud computing platform targeted toward the healthcare industry could be operative to host healthcare specific client applications. Such a cloud computing platform could be a POD system of the type heretofore described with reference to elements in in . In addition to the healthcare specific client applications the cloud computing platform could also enable interaction with the other components of the modular cloud platform shown in e.g. interaction with the Cloud Operations Center for service management .

In an illustrative embodiment a cloud computing platform includes a number of APIs. In addition to a POD system API heretofore described for modular integration various healthcare specific APIs could be provided such as feedback to sensors and PDA devices. These APIs could be high availability and highly specialized mission critical APIs for developers who need to access and utilize the infrastructures without worrying about implementation details.

Other APIs could include social network collaboration APIs to facilitate in finding experts and finding expertise. These could include healthcare relevant collaboration APIs such as an infrastructure for trusted self diagnostics applications. Other APIs could include APIs for simulating applications on top of existing data and an API for evidence generation.

Another example of an industry specific POD system could be one oriented toward the transportation industry. This POD system could be operative to host transportation specific client applications and to enable interaction with the other components of the modular cloud platform shown in e.g. interaction with the Cloud Operations Center for service management .

In an illustrative embodiment a transportation specific cloud computing platform includes a number of APIs. In addition to a POD system API heretofore described for modular integration various transportation specific APIs could be provided to process various transportation specific workloads. These APIs could be high availability and highly specialized mission critical APIs for developers who need to access and utilize the infrastructures without worrying about implementation details.

Examples of such workloads include for example schedule optimization route planning shipment tracking and delay forecasting. Another exemplary workload is travel demand behavior modeling which could include simulation of social demographic and economic impact on travel demands and could also include financial analytics to produce a sustained competitive advantage.

One could also include a collaboration API for example to match customers to providers. It may also be desirable to include an API for what if analysis in order to assess possible future scenarios and needs as well as to identify solutions to adapt to these alternative scenarios. Another possible API could include a marketplace API to match transportation services profiles with appropriate analytic services e.g. analysis of needs or prices weather forecasting services urban pattern update requirements etc. It may also be desirable to include an API for energy efficiency and environmental sustainability compliance management via sensor data collection and report.

One advantageous aspect of the architecture heretofore discussed is that APIs can be implemented on the Cloud Operations Center the POD or both. Moreover the assignment of APIs to the Cloud Operation Center or the POD can be easily changed responsive to a detected condition.

The above described architecture allows for more flexible and dynamic application assignment. For example an exemplary method for use with an architecture similar to that heretofore discussed with reference to is illustrated in . This method could be performed by the Cloud Operations Center one or more of the PODs or another computer.

In step an application is initially assigned to the Cloud Operations Center and or a POD. There are several factors which could affect this initial setup. For example an application may be placed on the Cloud Operations Center rather than the POD in order to reduce a financial cost of the application by allowing for use of a shared copy of a software package rather than requiring the purchase of an additional copy of that software package. As another example a client may request that an application be placed on the POD rather than the Cloud Operations Center to allow for greater data security by allowing data to be stored locally at the client s location rather than remotely at a service provider s data center.

In step a condition is detected that may require re assigning of an application. For example a workload associated with the application may exceed a workload threshold or a change may occur to the client s requirements or specifications.

In step the assignment of the at least one application is changed responsive to the detected condition. For example an increased workload may require an application to be re assigned from the Cloud Operation Center to a POD. Alternatively or additionally the increased workload could cause a new POD to be added and the application could be assigned to that new POD.

As another example a management application may be initially assigned to the Cloud Operations Center in step to allow for centralized management e.g. by a federal agency . However a change to a distributed management paradigm in step could result in the application being re assigned to the PODs e.g. at state agencies in step .

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Such a system may include distinct software modules for example a partitioning module executing on a hardware processor . Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Additionally the techniques as heretofore described can be implemented via a computer program product that can include computer useable program code that is stored in a computer readable storage medium in a data processing system and wherein the computer useable program code was downloaded over a network from a remote data processing system. Also in one or more embodiments of the invention the computer program product can include computer useable program code that is stored in a computer readable storage medium in a server data processing system and wherein the computer useable program code are downloaded over a network to a remote data processing system for use in a computer readable storage medium with the remote system.

A variety of techniques utilizing dedicated hardware general purpose processors firmware software or a combination of the foregoing may be employed to implement the present invention or components thereof. One or more embodiments of the invention or elements thereof can be implemented in the form of a computer product including a computer usable medium with computer usable program code for performing the method steps indicated. Furthermore one or more embodiments of the invention or elements thereof can be implemented in the form of an apparatus including a memory and at least one processor that is coupled to the memory and operative to perform exemplary method steps.

One or more embodiments can make use of software running on a general purpose computer or workstation. With reference to such an implementation employs for example a processor a memory and an input output interface formed for example by a display and a keyboard . The term processor as used herein is intended to include any processing device such as for example one that includes a CPU central processing unit and or other forms of processing circuitry. Further the term processor may refer to more than one individual processor. The term memory is intended to include memory associated with a processor or CPU such as for example RAM random access memory ROM read only memory a fixed memory device for example hard drive a removable memory device for example diskette a flash memory and the like. In addition the phrase input output interface as used herein is intended to include for example one or more mechanisms for inputting data to the processing unit for example keyboard or mouse and one or more mechanisms for providing results associated with the processing unit for example display or printer . The processor memory and input output interface such as display and keyboard can be interconnected for example via bus as part of a data processing unit . Suitable interconnections for example via bus can also be provided to a network interface such as a network card which can be provided to interface with a computer network and to a media interface such as a diskette or CD ROM drive which can be provided to interface with media .

Accordingly computer software including instructions or code for performing the methodologies of the invention as described herein may be stored in one or more of the associated memory devices for example ROM fixed or removable memory and when ready to be utilized loaded in part or in whole for example into RAM and executed by a CPU. Such software could include but is not limited to firmware resident software microcode and the like.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium for example media providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus for use by or in connection with the instruction execution system apparatus or device. The medium can store program code to execute one or more method steps set forth herein.

A data processing system suitable for storing and or executing program code can include at least one processor coupled directly or indirectly to memory elements through a system bus . The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboard display pointing device and the like can be coupled to the system either directly such as via bus or through intervening I O controllers omitted for clarity .

Network adapters such as network interface may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

As used herein including the claims a server includes a physical data processing system for example system as shown in running a server program. It will be understood that such a physical server may or may not include a display and keyboard.

Embodiments of the invention have been described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a tangible computer readable storage medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

Furthermore it should be noted that any of the methods described herein can include an additional step of providing a system comprising distinct software modules embodied on a tangible computer readable storage medium. The method steps can then be carried out using the distinct software modules and or sub modules of the system as described above executing on a hardware processor. Further a computer program product can include a tangible computer readable storage medium with code adapted to be executed to carry out one or more method steps described herein including the provision of the system with the distinct software modules.

In any case it should be understood that the components illustrated herein may be implemented in various foiins of hardware software or combinations thereof for example application specific integrated circuit s ASICs functional circuitry one or more appropriately programmed general purpose digital computers with associated memory and the like. Given the teachings of the invention provided herein one of ordinary skill in the related art will be able to contemplate other implementations of the components of the invention.

It will be appreciated and should be understood that the exemplary embodiments of the invention described above can be implemented in a number of different fashions. Given the teachings of the invention provided herein one of ordinary skill in the related art will be able to contemplate other implementations of the invention. Indeed although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings it is to be understood that the invention is not limited to those precise embodiments and that various other changes and modifications may be made by one skilled in the art without departing from the scope or spirit of the invention.

