---

title: Entity name matching
abstract: One or more techniques and/or systems are disclosed for matching entity names. A matching analysis is performed between a first entity name (e.g., business entity name) and a second entity name. The matching analysis comprises comparing a first entity category descriptor that has been amended into the first entity name with a second entity category descriptor that has been amended into the second entity name. If a match is identified in the category descriptors, the first and second entity names may comprise the same entity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08352496&OS=08352496&RS=08352496
owner: Microsoft Corporation
number: 08352496
owner_city: Redmond
owner_country: US
publication_date: 20101026
---
Online directories such as commercial business listings e.g. yellow pages search engine based directories and others allow an online user to search for and identify desired entities e.g. local businesses to patronize . Further online reviews can be submitted by hired experts consumers or other parties where the reviewer may mention the entity and describe their experience or opinion with the entity e.g. a restaurant or product review . Additionally bloggers reporters or other editorial persons may submit online information stories etc. about an entity where the name of the entity is mentioned. However often an entity name such as a business may not have uniform identity between two or more directories blogs reviews or stories. For example where the directory may identify a library as the Depot Street Library Branch in Medina an online blog may merely refer to it as the Medina Branch Library. Further there may be another entity of a different type that has a similar but confusing name such as the Library Street Depot e.g. a bar .

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Matching entity names such as business names in a directory or from multiple directories locations can be very important for record linkage systems that involve the entity names. Entity name matching can be a difficult problem that does not respond well either to merely a character based or token based approaches. Current or prior technologies attempt to match a name by matching the characters or tokens between the two or more names subjected to matching. That is for example a string matching algorithm is typically applied to two names such as Matt s Restaurant and Matt s Bar and Grill to determine whether they may be a same entity.

Further current or prior technologies attempt to match entity names using a completely knowledge based approach. This technique does not typically work well either due to the great amount of natural variation in business name mentions in various types of text. That is for example the name of the entity is matched against a database comprising a plurality of business names and the associated business type. However using merely this approach may require an enormous database and due to variations in how a name is used may not provide adequate results.

Accordingly one or more techniques and or systems are disclosed that use a small knowledge base to extract entity category signals from an entity name mention e.g. in a directory blog review etc. which can indicate a type of entity e.g. business type such as service retail food etc. . Further a string or token based matching approach can be used on the remainder of the entity name for example that is not part of the category signal. Utilizing this approach a wide variety of types of entity name mentions can be matched for example from formal mentions in an online directory listing database to casual business mentions in blog or review text for example.

In one embodiment for matching entity names a matching analysis is performed between a first entity name such as a business name in a directory and a second entity name such as another business name from an online review. The matching analysis can comprise comparing a first entity category descriptor that has been amended into the first entity name with a second entity category descriptor that has been amended into the second entity name.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Commonly when searching for a particular entity online e.g. on the Internet a user can find multiple entries for a same entity where respective entries comprise different variations of the entity name. For example the user may wish to find a reputable auto mechanic by searching for user reviews online. In this example using a first review site the user may find that Richardson s Quick Tire Lube and Auto Service has a good rating. However in a search for this entity the user only finds Richardson s Service in an online directory. Without further investigation the user may not know if these are the same entity and an automated attempt e.g. by an online directory blog or review site to unify these two entity names may result in improper merging.

A method may be devised that provides for identifying multiple names e.g. as listings in one or more directories for a same entity such as a business so the multiple names may be linked together or merged to a single name for example. is a flow diagram of an exemplary method for matching entity names. The exemplary method begins at and involves identifying a first entity category descriptor for at least a portion of the first entity name and a second entity category descriptor for at least a portion of the second entity name at .

A category descriptor can comprise a name of a category which is descriptive of an entity type where the entity type comprises a classification for an entity. As an illustrative example a business type category descriptor restaurant may represent a classification that includes a diner grill caf deli sandwich shop and many more. Further a category descriptor bar may represent a classification that includes a bar bar and grill pub lounge inn tavern and many more.

Additionally in one embodiment a category descriptor may comprise a sub category descriptor where the sub category comprises a classification of one or more entities that can also be classified by the category. For example restaurant.bar may be a sub category of restaurant and retail.clothing may be a sub category of retail . In one embodiment the categories to which the category descriptors are associated may be arranged in a hierarchical tree. For example where the root comprises business entities respective branches may comprise various categories that are types of business entities such as services manufacturing retail etc. for example.

In one embodiment identifying a category descriptor for an entity name can comprise looking at one or more strings e.g. words in the entity name and identifying a category that matches the string. For example in an entity name Madoff Retirement Funds the word Funds or even Retirement Funds may comprise an entity type related to financial planning services. Therefore in this example the category descriptor services.financial planning may be identified for the entity name Madoff Retirement Funds. 

In one embodiment a knowledge base e.g. a database may be used to facilitate in the identification of a category descriptor. For example the string Retirement Funds may be compared against the knowledge base to determine that it is associated with the category services financial planning. As a further example the knowledge base may comprise a plurality of categories e.g. associated in a hierarchical tree where respective categories comprise a list of strings for particular entity names that may match to the category.

At in the exemplary method a matching analysis is performed between the first entity name and the second entity name. Here the first entity category descriptor which has been amended to the first entity name is compared to the second entity category descriptor which has been amended to the second entity name. In one embodiment the category descriptor can be amended into the entity name such that it is included in the name when the matching analysis is performed.

In one embodiment the string that was used to identify the category descriptor can be replaced by the category descriptor in the entity name. For example Madoff Retirement Funds may be amended to Madoff . In this embodiment the first amended entity name and second amended entity name can be compared to determine whether there is a potential match between the two names. For example Madoff may be a match with Maddoff while Madoff is not likely to match Madoff . 

At in the exemplary embodiment respective category signals can be compared against a knowledge base such as by looking to see if the knowledge base comprises the category signal. If at the potential category signal is not found in the knowledge base the potential category signal is determined not to be a category signal at . For example Stinky Pete s and Stinky Pete s are not likely to be found in a knowledge base comprising business entity categories e.g. services manufacturing retail etc. . Therefore in this example these potential category signals are determined not to be category signals.

Alternately if the potential category signal is found in the knowledge base for the associated entity type e.g. business names at the category signal can be replaced with a corresponding category descriptor from the knowledge base at . For example as illustrated in the exemplary embodiment of a first entity name comprises Stinky Pete s Bar and Grill. In a first decomposition A of the first entity name a first potential category signal Stinky Pete s may be determined not to comprise a category signal e.g. does not match a business entity category . In this decomposition A a second potential category signal Bar and Grill matches a category signal that corresponds to a category descriptor Restaurant.Bar in the knowledge base.

Further in this example the category signal Bar and Grill can be replaced with the category descriptor Restaurant.Bar in the first decomposition A of the first entity name . Therefore the first decomposition A may comprise Stinky Pete s where the Null term can identify a portion of the first entity name found after the replaced category signal . In this example the decomposed entity name A comprises a string Stinky Pete s and a category descriptor .

Returning to at in one embodiment the entity name e.g. of may be iterated through the exemplary method such that one or more amended first entity names are generated and one or more amended second entity names are generated. For example as shown in the example of in a second decomposition B of the first entity name the category signal Bar can be replaced with the category descriptor . In this example the potential category signal Bar can be matched with the category signal Bar associated with category descriptor in the knowledge base.

Further in the example in a third decomposition C of the first entity name the category signal Grill can be replaced with the category descriptor and can also be replaced with the category descriptor as shown in a fourth decomposition D of the first entity name .

A second entity name comprises Stnky Pete Lounge e.g. combining a misspelling and common variation of a business entity type . As an example the second entity name have been comprised in a blog or online user review where the author used a variation of the actual business entity name e.g. Stinky Pete s Bar and Grill . In one embodiment the identification of multiple names for a same entity such as a business can be utilized to link the names together or merge them to a single name. For example a user can search for a local eatery using an online search engine with mapping capability and find Stinky Pete s Bar and Grill e.g. the first entity name . Further in this example the user may wish to find reviews or blog entries that discuss Stinky Pete s such as to decide whether it meets the user s needs. A reviewer may list the entity as Stnky Pete Lounge e.g. the second entity name . In this embodiment these two entity names can be compared for matching to determine if they are for the same entity.

In the example in a first decomposition A of the second entity name Stnky Pete is found not to be a category signal and Lounge is determined to comprise a category signal that is associated with the category descriptor in the knowledge base. In this example the category signal Lounge can be replaced with the category descriptor for the second entity name . Further the term is added to after the amended category descriptor .

In one embodiment as shown in a fifth decomposition E of the first entity name and a second decomposition B of the second entity name a category descriptor is amended for the first entity name and second entity name respectively. In this embodiment the entity name e.g. can be added to a set of category remainder pairs comprising a category descriptor. The category can be used for cases where the entity name is used in a casual manner.

For example a reviewer blog poster or even a directory creator may merely refer to the business Stinky Pete s Bar and Grill as Stinky Pete s much like customers and users may refer to Starbucks Coffee as Starbucks. In this example the casual reference can merely comprise the businesses particular name e.g. Stinky Pete s or Starbucks and not the category signal that links the particular name to a type of business for the entity e.g. Bar and Grill or Coffee . In this embodiment the category descriptor can be used a sort of wild card for example where the can match a plurality of other category descriptors when matching entity names as will be described in further detail below.

At for respective first entity names the amended first entity name can be compared with the second entity names at . That is for example Stinky Pete s can be compared with both Stnky Pete and Stnky Pete Lounge . In one embodiment when comparing the entity names the respective category descriptors are compared between the first and second entity name. For example the of the amended first entity name Stinky Pete s is compared to the of the amended second entity name Stnky Pete . In this example the respective category descriptors provide an obvious match.

In one embodiment comparing the first entity category descriptor amended to the first entity name with a second entity category descriptor amended to the second entity name can comprise determining a distance between the first entity category descriptor and the second entity category descriptor in a category tree. For example a category knowledge base can be hierarchical where the category Restaurant. Bar comprises a sub category of the category Restaurant. In this example a data structure tree can be used to represent the hierarchical relationship between the respective categories in the knowledge base where respective categories nodes have at least one parent category parent node and zero or more sub categories children .

In one embodiment a desired threshold e.g. weighted tree metric may be used to determine a closeness of the first and second entity category descriptors. That is for example if the relationship between the first entity name category and second entity name category falls within the threshold e.g. number of hops same parent sub category category relationship etc. a match can be indicated. However if the threshold is not met a match for the categories is not indicated.

It will be appreciated that the category matching is not limited to the embodiments described herein and it is anticipated that those skilled in the art may devise alternate comparison techniques. For example the category knowledge base can have an alternate structure where one or more different metrics may be used to determine closeness. In one embodiment comparing the first entity category descriptor amended to the first entity name with the second entity category descriptor amended to the second entity name can comprise determining whether an entity type e.g. determined by the category signal can be comprised in both a first entity category of the first entity category descriptor and a second entity category of the second entity category descriptor.

For example as illustrated in the example embodiment of in a first entity name Starbuck Coffee a category signal Coffee in a first decomposition A can be associated with the category Restaurant.Coffee in the knowledge base. However in a second entity name Starbucks Towing a category signal Towing in a first decomposition A can be associated with a category Services.Towing in the knowledge base. In this embodiment for example because the respective category signals being compared cannot be found in a same category in the knowledge base e.g. or sub category they may be determined as not matching e.g. don t meet the threshold .

Returning to at if the category descriptors do not match the comparison of the amended first entity name and the amended second entity name can be discarded at for example and a next comparison can be performed at . As described above with reference to an amended first entity name as shown in the first decomposition A comprises the category descriptor and an amended second entity name as shown in the first decomposition A comprises the category descriptor . As an example because these two category descriptors do not comprise a match the comparison between this amended first entity name and this amended second entity name can be discarded e.g. no further comparison is performed .

If the category descriptors do match at for the respective matched category descriptor pairs at the matching analysis between the first entity name and the second entity name can comprise comparing non category string elements of the first entity name with non category string elements of the second entity name at . That is for example after confirming a match between the category descriptors for the amended first entity name and the amended second entity name additional comparison s can be performed.

In one embodiment comparing the string elements of the first entity name with string elements of the second entity name can comprise comparing string elements that are not the category descriptor that has been amended into the entity name. For example with reference to the amended first entity name Stinky Pete s comprises a first non category descriptor string Stinky Pete s. Further the amended second entity name Stnky Pete comprises a first non category descriptor string Stnky Pete. In this embodiment for example these string elements Stinky Pete s and Stnky Pete can be compared to determine a match.

In one embodiment comparing string elements can comprise determining raw character distances between respective characters in the string elements of the first entity name and string elements of the second entity name. Further in this embodiment if the raw character distance meets a desired threshold a match can be indicated between the string elements of the first entity name and string elements of the second entity name. For example the string Stinky Pete s found in the first A and second B decompositions is likely to meet a raw character distance desired threshold when compared to the string Stnky Pete found in the first decomposition A. Further as an example the strings found in the remaining amended first entity names from the third C fourth D and fifth E decompositions may not meet the raw character distance desired threshold when compared to the string Stnky Pete found in the first decomposition A.

Returning to at if the non category strings for the first and second entity names are determined to match e.g. meet a desired threshold for character distance the first and second entity names are determined to be a match at and may be linked together or merged in a directory for example. However if the non category strings for the first and second entity names are determined not to match the comparison is discarded at and a next comparison can be performed if available for example.

In one aspect the wildcard category descriptors can provide for a match between the category descriptors of the amended first entity name and amended second entity name. That is for example with reference to the wildcard of the fifth decomposition E for the first entity name can match the category descriptor of the first decomposition A and the of the second decomposition B for the second entity name . Further in the example the wildcard of the second decomposition B for the first entity name can match the category descriptor of the first decomposition A and the of the second decomposition B for the second entity name .

Even though a match may be indicated for the category descriptors between the two amended entity names e.g. YES at of the respective non category strings are compared between the first and second amended entity names e.g. at of . If the non category strings do not comprise a match e.g. do not meet the desired threshold the comparison is discarded e.g. at of . For example as illustrated in the example the non category string of the second decomposition B for the first entity name can be compared to the non category string of the first decomposition A for the second entity name and the raw character score may not meet the desired threshold e.g. no match .

In one aspect when a wildcard category descriptor is used there may be unintended instances where the non category string provide a match between a first and second entity name even if the categories for the entity type may not have normally provided a match. For example as illustrated in the example embodiment of a first entity name Starbucks may be compared with a second entity name Starbucks Towing. In this example a first decomposition A for the first entity name comprises a non category string Starbucks and the wildcard category descriptor .

Further a first decomposition A for the second entity name comprises a non category string Starbucks and a category descriptor . Because the wildcard can provide a category match with category descriptor the respective non category strings are compared. Here the non category string Starbucks for the first entity name matches the non category string Starbucks for the second entity name the first and second entity names can be considered a match and may be merged for example. However if the first entity name is linked to the well known coffee house it probably should not be linked or merged with the second entity name that is linked to a towing service.

In this aspect in one embodiment the entity category descriptor can be amended to the entity name by adding the entity category descriptor to the entity name where the entity category descriptor corresponds to the entity name in a knowledge base. For example as illustrated in of for well known or established entity names e.g. trademarked names a knowledge base may be used to identify an entity category descriptor for the entity. In a second decomposition B of a category signal Coffee is recognized for the first entity name Starbucks and a corresponding category descriptor in the knowledge base can be added to the entity name.

In this way in this example the category descriptor of the second decomposition B may not match the category descriptor of the first decomposition A and the non category string of the second decomposition B may not match the non category string of the second decomposition B for the second entity name . Therefore in this example by adding a category descriptor to the entity name e.g. where merely a common name without a category signal is used an unintended merging or linking of the entities may be mitigated.

That is as an illustrative example whenever a well known well recognized entity name such as Starbucks for coffee or Midas for muffler service is identified e.g. matched in the knowledge base of recognizable and or trademarked names a corresponding category descriptor can be added to the entity name thereby mitigating a potential for confusing the well known name with a similar entity from a different category. In this illustrative example therefore Starbucks can automatically become Starbucks . and or Midas can automatically become Midas . for example.

Additionally in this aspect when the wildcard category descriptor is used there may be other unintended instances when the non category string provides a match between a first and second entity name even if the categories for the entity type may not have normally provided a match. For example a potential entity name Los Angeles Police Department may comprise a match to Los Angeles when the wildcard is utilized. In this example Los Angeles . can match Los Angeles . which may be undesirable. Therefore in one embodiment some categories may be prevented from matching with the category descriptor. For example municipal services such as can be prevented from matching the category descriptor. Of course this is not limited to municipal services as the technique is adaptable in other ways as well.

A system may be devised that provides for identifying multiple names for a same entity so the multiple names may be linked together or merged to a single name for example. is a component diagram of an exemplary system for matching entity names. A memory component stores a knowledge base that comprises entity category descriptors and associated category signals . That is for example the knowledge base in the memory component may be queried to identify an unknown category descriptor that is associated with a known category signal . As an example the knowledge base may comprise a database such as a two dimensional SQL database or multi dimensional database.

A name amending component is operably coupled with the memory component to amend an entity name with an entity category descriptor from the knowledge base to produce an amended entity name . A category matching component is operably coupled with the name amending component to determine whether a first entity name matches a second entity name by comparing a first entity category descriptor in a first amended entity name with a second entity category descriptor in a second amended entity name . In one embodiment the category matching component can identify matching entity names such as to provide for merging or linking of the two names to a same entity for example.

The name amending component can comprise a decomposition component that decomposes the entity name into one or more potential category signals . Further the name amending component can comprise a signal comparison component that compares respective category signals against the knowledge base in the memory component comprising known category signals to identify a corresponding category descriptor for the category signal .

The knowledge base can comprise a plurality of entity category descriptors where respective entity category descriptors correspond to one or more category signals . That is for example the knowledge base can comprise a type of database where the category descriptors are linked associated with one or more category signals .

In one embodiment the category signal can comprise a business name that is known to be associated with the corresponding entity category descriptor . That is for example a business name may be well known to be associated with a particular brand or business type e.g. a trademarked entity . In this embodiment the category signal can comprise the business name e.g. Starbucks Midas Cabela s such that the known business type associated with the name e.g. coffee mufflers outfitters can be a category descriptor linked associated with the name in the knowledge base for example. In this way in this example when the business name is compared against category signals in the knowledge base an associated category descriptor can be identified such as by the name amending component .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method such as the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

