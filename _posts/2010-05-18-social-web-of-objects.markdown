---

title: Social web of objects
abstract: According to exemplary embodiments, networked object management software, devices, systems and methods are described which use social mapping principles to streamline interactions between users and their networked objects, as well as between the networked objects themselves. Friendship relationships are established, by a network management system, between a plurality of the networked objects, each of the plurality of networked objects being associated with a use. When the network management system receives a task request, it can then assign the requested task to one of the plurality of networked objects which has a capability to perform the requested task and which also has an established friendship relationship with the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09491181&OS=09491181&RS=09491181
owner: TELEFONAKTIEBOLAGET L M ERICSSON
number: 09491181
owner_city: Stockholm
owner_country: SE
publication_date: 20100518
---
This application is related to and claims priority from U.S. Provisional Patent Applications Ser. Nos. 61 290 387 filed on Dec. 28 2009 and 61 292 967 filed on Jan. 7 2010 both entitled A Social Web of Objects the disclosures of which are both incorporated here by reference.

The present invention relates generally to networked systems and improving service therein and more particularly to systems methods devices and software associated with the management of networked objects based on social mapping principles.

The Internet has in a decade evolved into what is now the largest and most used digital network in existence. The Internet is a connection of computers using the TCP IP protocol using the so called World Wide Web as a cognitive user interface to the Internet based on metaphors like site page and link . The World Wide Web became something everyone could use largely because both utility and usability was provided by representing the Internet as two dimensional graphical abstractions of linked pages. This paradigm efficiently explained the concept of Internet by using analogs that most people can understand.

The Internet continues to evolve further and could eventually also include a physical internet consisting of not only computers but devices other objects and environments with embedded data computation sensor location and communication interaction capabilities. This potential evolution is often referred to using terminology such as The Internet of Things Machine to Machine Communications Ubiquitous Computing Pervasive Computing or Ambient Intelligence . It has been estimated that every person is surrounded by somewhere between 1000 and 5000 intelligent objects and a global Internet of Things may in a few years consist of 50 to 100 000 billion objects whose location and status will have to be continuously monitored or updated. While the concept of such an Internet of Things may seem simple its implementation will be far more difficult.

For example many of today s products which link or connect networked devices are ad hoc solutions that enable specific limited functionalities or services. Examples include file sharing and remote access software that runs on a device or computer and enables remote control and or makes data or service accessible within a WAN W LAN and or PAN. Examples of such products include Salling Clicker Simplify Media Apple s Airtunes and iTunes Remote for the iPhone etc. Another category of relevant products includes devices that collect and transmit data such as products like the wireless pedometer Nike Apple that measure parameters associated with a person s running and Botanicalls which is a sensor that communicates the level of humidity of the soil in a flowerpot to the web.

However none of today s solutions for networked object interconnectivity provide holistic and unified interaction with a plurality of networked objects environments media and or services based on the interrelations between them. Consequently there is no solution today that provides an intuitive way of understanding the contexts relationships ownership compatibility history metadata status and dependencies of large numbers of objects that also may or may not be physically present. In addition there is no solution today that successfully supports the users weak conceptual understanding of digital networks as such i.e. the mental model of possible interactions and simultaneous interconnectivities within a digital network consisting of numerous devices and or services.

Accordingly it would be desirable to provide systems methods devices and software associated with the management and interconnectivity of networked objects which overcomes the afore described challenges by addressing among other things ownership association policy control software and service management error handling and maintenance of such networked objects.

The following exemplary embodiments provide a number of advantages and benefits relative to existing network object management software devices systems and methods including for example using social mapping principles to streamline interactions between users and networked objects as well as between the networked objects themselves. It will be appreciated by those skilled in the art however that the claims are not limited to those embodiments which produce any or all of these advantages or benefits and that other advantages and benefits may be realized depending upon the particular implementation.

According to an exemplary embodiment a method for managing networked objects includes the steps of establishing by a network management system friendship relationships between a plurality of the networked objects each of the plurality of networked objects being associated with a user receiving at the network management system a task request and assigning by the network management system the requested task to one of the plurality of networked objects which has a capability to perform the requested task and which has an established friendship relationship with the user.

According to another exemplary embodiment a management device which manages a plurality of networked objects based on friendship relationships with a user or with other networked objects includes a memory device configured to store a plurality of system entity profiles for each of the plurality of networked objects which has a friendship relationship with the user or other networked objects the system entity profiles including an address for a respective networked object an indicator of a level of friendship of the respective networked object with other system entities and information associated with at least one capability of the respective networked object an interface configured to receive task requests either directly from the user or via one of the plurality of networked objects and a processor configured to assign requested tasks to networked objects which have a friendship relationship with the user or other networked objects based on the stored system entity profiles.

According to yet another exemplary embodiment a system for managing networked objects includes a plurality of networked objects each capable of performing at least one task a gateway GW connected to each of the plurality of networked objects for sending task requests to and receiving task requests from the plurality of networked objects and an application server AS to which the GW maintains a connection and which manages friendship relationships among the plurality of networked objects and coordinates management of the task requests based upon the friendship relationships.

The following detailed description of the exemplary embodiments refers to the accompanying drawings. The same reference numbers in different drawings identify the same or similar elements. Also the following detailed description does not limit the invention. Instead the scope of the invention is defined by the appended claims.

According to exemplary embodiments systems methods devices and software computer programs for management of and interaction with networked objects are based on social mapping principles. Such exemplary embodiments provide for holistic management of a plurality of networked objects including for example electronic devices sensors computers services and users. Moreover exemplary embodiments provide a presentation layer where each networked object is represented by a unique and identifiable profile that contains information about each object s system characteristics. By making the relationship between networked objects as well as relationships between networked objects and users analogous to e.g. social mapping principles like friendship i.e. a notion of trust or ownership relationship and access control exemplary embodiments make objects relations intuitive to understand for the users. Exemplary embodiments utilize a recognizable resemblance to a social network in order to enable users to form a holistic mental model of potentially large numbers of networked nodes with simultaneous interconnections and interrelations with each other.

Prior to discussing detailed signaling mechanisms which facilitate such networks of objects according to exemplary embodiments a high level architectural view of the system followed by several examples will be described with respect to to provide more context for the reader regarding the resulting systems as they can be experienced by users. Starting with the system architecture at a high level according to exemplary embodiments is illustrated. Therein a plurality of networked objects is connected to the system via a variety of network technologies e.g. the Internet a WAN etc. The users can access the services provided by the system via user interfaces whose implementation which will vary depending upon for example the context and the end user device on which the particular user interface is running e.g. mobile devices computers laptops televisions or other devices.

The system which manages the networked objects can for example be implemented at least in part as server based software. Persons that are using the system i.e. the users are represented and identified as entities in the system by unique user profiles in the system. The networked objects can also be represented and identified in the system by unique profiles. Networked objects include but are not limited to consumer electronics digitally tagged objects computer devices mobiles sensors buildings vehicles or even companies brands services and physical locations. Both the profiles that represent users and network objects in the system are jointly referred to herein as system entity profiles .

Data associated with the plurality of networked objects and users is received by the system . The system creates system entity profiles for each networked object and user . The system entity profiles may include but are not limited to information about name technical specifications manufacturer capability location history and other metadata associated with the respective networked object or user . According to exemplary embodiments it is also possible to aggregate multiple networked objects under a common profile i.e. not all objects necessarily have their own individually unique IDs or system entity profiles in the system. For example if a user connects location sensors at home this group of location sensors may be identified in the system as one home location sensor. This aggregation can be performed for example at the GW to the system or in the backend system.

The system also includes a relation management function which coordinates the interactions between the networked objects by applying social management principles e.g. using the afore described friendship analog. The system issues queries described in more detail below in order to establish relationships between system entities and by for example sending a system entity s profile to a potentially relevant system entity based on the profile data and network access credentials of the receiving system entity. A relationship is established by the relation management function based on the confirmation from the user s or the system entity itself i.e. multiple system entities can establish relationships with a single system entity. System entities can share temporal and permanent relationships with other system entities. Many separated and simultaneous network sites can exist and the information and communication can be according to exemplary embodiments limited to a specific group of system entities defined by their relationship to each other. There can also be temporal or permanent connections between system entities belonging to different network sites.

The semantics function includes functionality that allows e.g. device manufacturers to establish devices with a brand dependent semantic interaction language where applicable. For example a Sony TV could communicate in Sony language e.g. like other Sony devices or content relate to Sony PS games or Sony brand etc. Other semantic layers are also possible see e.g. the toaster or solar panel examples in the user interface screen of described below. Semantics can also be user defined e.g. reflecting a certain level of maturity in operating a device translating into complexity of the user interface . Additional semantic layers could also include for example types of jargon or even slang. The semantics function can also provide a natural language translator interpreter generator i.e. a mechanism which translates machine signals or languages into languages which are more meaningful to humans.

The system may interface with its objects and users through a set of APIs and in order to establish relationships using social mapping principles and also to exercise those relationships in performance of various task requests. Different user interaction paradigms can be used in order to manage the query confirmation procedure. A user could for example confirm a relationship query transmitted to it by the relation management function of the system by pressing a button in a graphical user interface or both the query and confirmation of a relationship between two system entities could be done in one operation by physically bringing together the objects using NFC or a similar mechanism.

To better understand the usefulness of networking objects and users using social mapping principles according to an exemplary embodiments consider the following usage scenario involving remote control of a television. Assuming that both the user and a TV one of the networked objects have already been set up with the system and are therefore represented by system entities with corresponding system entity profiles the user can for example send a task request for example via user interface and API to the TV s system entity operative within system requesting the system to record a certain TV program. The system entity in system associated with the TV will accept and acknowledge this instruction even if the TV is in fact not capable of recording anything itself if it has a predetermined type of relationship e.g. is friends with another networked object which can perform the requested service.

For example suppose that the system entity of the TV has a friendship relationship with the system entity of a video recorder. In this case the system entity of the TV can take responsibility for the request from the user and relay the command to the system entity of the video recorder which could for example be a representation of a physical device a software functionality in the system or a service provided via the network. The networked object video recorder will actually execute the job i.e. which is essentially subcontracted to it by the TV s system entity in system and the user will receive a confirmation from the TV s system entity again via API and user interface that the requested task will be performed and later on that it has been successfully completed.

As another example consider an exemplary embodiment wherein a user buys a network attached storage device NAS for his or her home media repository. When the NAS is connected to the user s home LAN the NAS is discovered via a predetermined procedure e.g. UPnP Bonjour DLNA or a similar mechanism and a notification about the new device is delivered to the system . The system creates a system entity profile for the new device and sends a request to the user s application interface e.g. on his or her mobile phone to accept or reject the connection of the system entity of the new device. Once the user confirms that the NAS is permitted to join the group of system entities present in his or her Social Web of Things other devices such as media players that are already part of this friendship related group and have the capabilities to establish a service relationship with this device can use the NAS as media source.

Yet another example is illustrated in . Therein the system is at least in part implemented as a home gateway GW . In this example the networked objects include various power consuming devices including e.g. a light a television and a radio which are connected both to the GW and to a power network. In this context a Personal Network PN can be considered to include a set of networked objects with which a particular user or group of users e.g. a family has a relationship. A power meter provides the GW with information about power consumption on the network and one or more power sensor actuators can be used to monitor and or control the networked objects .

The GW is also connected to an outside network e.g. the Internet which enables it to communicate with an application server AS . This AS can for example perform other functions of the system described above if those functions are not performed in the GW . Alternatively or additionally AS can perform other functions that are available to the owner user associated with the network . Various external applications can also interface with the system via GW . For example a metering application can be running on a user s device to monitor and display the aggregated energy consumption associated with the devices at his or her home . Alternatively or additionally the user can manage the devices and via an application running on his or her mobile phone . More details associated with an exemplary gateway and AS which can be used to implement the exemplary embodiment of are described below with respect to .

A more detailed yet purely illustrative user interface which can for example operate on a mobile phone or other end user terminal device and permit a user to interact with the system is shown in . Therein a plurality of rows of items associated with a currently in focus News Feed tab of the user interface are shown each of which provides for example information provided from a networked object . Other features in indicated as tabs not currently in focus can provide the user with information relating to notifications from the system related to networked objects and requests e.g. requests by a device to become a friend to the user and join the system entities associated with that user . Along the bottom of this exemplary user interface are a number of selectable user interface elements including for example a Home element which returns the user to the presently viewed screen a Profile element which enables the user to access the system entity profiles a Gather element which provides a mechanism for the user to interact with information aggregated from various networked objects e.g. the total power consumption of devices in a household or the aggregated media base of a user from various media servers a Friends element which when actuated lists the networked objects that have already established friend relationships with this user and a Nearby element which when actuated displays information regarding networked objects that are near to the user s mobile phone or terminal device and their relationship to the user.

As mentioned previously the system according to exemplary embodiments can establish different hierarchical levels of relationship between the system entities which the system manages using social mapping principles so as to be more user friendly and to make it easier for a user to relate to the managed network objects . For example a top level relation could be the owner a relational description in the system when a person owns an object. A networked object could have several owners. In some cases a system entity associated with one networked object or user i.e. a device or a persona may need to have administrative rights and be in control of access or use of another networked object even if the system entity is not the owner of that networked object. In this case exemplary embodiments provide a relation designation referred to herein as best friend i.e. someone that is closer has better access and more privileges than the level below i.e. friends . Networked objects may also be present in a system which do not have any of these preferred relationships with the users or other networked objects and a herein referred to as strangers . Moreover it will be appreciated that although three different levels of preferred relationships for networked objects are described above that different implementations of these exemplary embodiments may use more or fewer such levels to implement social mapping principles for networked object management. A summary of exemplary relational descriptors and their associated functional characteristics is provided below in Table 1.

Relation management function of system establishes and manages these different levels of relationship between networked objects and users . For example networked objects and users or networked objects and other networked objects which are designated as friends are interconnected and have reciprocal access to each other s information data functionality. Devices which are friends are set by the system to help each other execute requested tasks for each other and inform each other about their status but according to exemplary embodiments they cannot administer each other. A friend relation can have a temporal quality e.g. rental car hotel room etc. or may be permanent. The social mapping paradigm described above can be further extended to include additional levels which are easily distinguished by users for example friends of friends or peripheral acquaintances . Networked devices which have this latter relationship relative to other devices or users are not according to some exemplary embodiments directly connected with those other devices or users but could for example be present in the form of their functionality or service they provide. The value of such relations as they are used in systems and methods which manage networked objects using social mapping principles according to exemplary embodiments is explained in more detail below.

Any system entity associated with system can be aware of functionality provided by networked objects with whom it has a predetermined relationship or level of friendship e.g. the functionality of networked objects which is managed by that system entity s best friends friends. Consider the previously described example with the TV and the video recorder e.g. VCR in a scenario where the TV relays the task to the VCR but the VCR for some reason was unavailable or incapable of executing the requested task e.g. recording a TV program . In this case the TV or more precisely the system entity in system which corresponds to the TV may be aware of other options for performing the requested task e.g. other networked nodes that have the needed capability but with which it may or may not have a direct friend relationship. If those other options are not directly available to the TV it may be possible that such functionality could be made available to the TV utilizing the friendship relations of others to ask for a specific favor. For example if the TV s owner best friend e.g. user human or networked object has a friend that is connected to a system entity that can provide the functionality needed the system can send a message to that system entity requesting that e.g. the requested program be recorded and stored.

To develop the latter exemplary scenario further suppose that the TV networked object and or its corresponding system entity in system is aware that a friend i.e. a person in another household of it s owner and or best friend have the needed functionality in his or her network. Then the TV could be set to ask its owner if it is permitted to contact the owner s friend to ask for the needed favor e.g. recording and storing a specific TV program . If the TV s owner s friend agrees to this perhaps even based on predetermined criteria like remaining maximum storage space and time a device that is able execute the requested functionality could make this functionality available to the TV. Moreover even if the TV in network A is not a friend of the recording device in network B e.g. these two networked objects may not even see each other through the network but instead only transmit request signals associated with the favor that is requested provided it may still be able to relay the task of recording of the TV program to the recording device in network B possibly upon authorization from a system entity having a sufficiently high friendship relation with that recording device.

In order to provide the underlying signaling logic and lower level architecture needed to accomplish these various scenarios which use social mapping principles applied to managed networked objects a personal networking PN architecture can be used as will now be described with respect to below. However it will be appreciated by those skilled in the art that other types of lower level architecture than those described below could be used instead to accomplish the higher level functionality described above in accordance with . According to these exemplary embodiments a PN architecture shown generally in connects consumer devices sometimes called Personal Network Entities PNEs herein or networked objects as described above that reside in a local network through gateway devices PNE Cluster Gateways to server side enablers Personal Network Application Server PNAS and from there optionally to 3Party Service and Content Providers. Note however that the PNE cluster gateways can be implemented as physical standalone nodes or alternatively as logical functions which are physically implemented on one or more of the networked objects themselves. In the latter case networked objects may not need to communicate via GW devices per se.

Therein the cluster layer is the lowest layer where services are not under control of the PN system according to this exemplary embodiment. A PNE Cluster e.g. cluster includes a set of devices and a PNE Cluster Gateway e.g. as shown in where the gateway communicates with the devices locally. A PNE Cluster also includes the services that are hosted by the devices and the PNE cluster gateway e.g. gateway in . Each PNE Cluster is assumed according to this exemplary embodiment to communicate over a gateway and is hence identifiable and addressable via this gateway. A PNE Cluster Gateway communicates with the PNAS over wide area networks and with devices within the PN Cluster over local access networks. A PNE device or networked object may be part of two or more PNE Clusters . A service in this cluster layer may be provided in a non personalized way as for example a DLNA service including services provided locally by a device and services provided by a 3Party. Services in this layer are directly accessible from the PNE Cluster Gateway.

Moving up in the hierarchy of layers shown in the PN Layer manages services that are under control of the PN system. According to this exemplary embodiment the PN system is responsible primarily for device and service management in PNs management of users and association to PNs authentication and authorization of a service requester filtering on the context information exposure and management of watchers on the events in PNs. A Personal Network PN can be defined as an overlay network consisting of one or multiple PNE Clusters . A PN is assigned to a single PN user who is called the PN owner in this exemplary embodiment. A PN enables the owner to consume a service within the PN regardless of the cluster in which the service exists e.g. as described above using friendship relations. The PN owner may consume a service provided by a 3party or by other PNs by a device in the PN. PN also enables the owner to expose the devices and services within the PN to 3party Service Providers and consumers in a controlled way managing for example access restriction privacy protection and service abstraction from the devices e.g. by using the social mapping conventions described above with respect to . A service in this PN layer may access context information aggregated within the PN for example for service personalization. The PN architecture assumes that each device service PNE cluster and the PN is identifiable and addressable.

Services from different PNs may form an overlay service network called a PN federation . A PN federation facilitates sharing of devices and services among multiple PNs while privacy and security can be maintained across the whole PN federation . Thus the PN Federation Layer provides a mechanism for grouping PN services and service requesters under a single federation policy. Each PN taking part in a PN Federation can have its own policies to control what devices and services in the PN are made available to the other PNs in the PN Federation. In other words the set of devices and services available in a PN Federation is not always equal to the set of all devices and services in the participating PNs.

Regarding the identities of the various entities described above with respect to the identity of a device i.e. a networked object can be for example provided by the device manufacturer e.g. a MAC address. However device identities could also be provided in other ways e.g. on an IP level by a home DNS service or using explicit names e.g. entered into the system by user configuration. Device level services are identifiable inside the respective device which means that the cluster level service is able to identify the device level service by using a combination of the device s identity and the identity of the device level service . The identity of a cluster level service identifies the service uniquely within the cluster. In conjunction with the PNE cluster s identity a PN level service is able to identify the cluster level service . The identity of a PN level service identifies the service uniquely within the PN . In conjunction with a PN s identity service requesters are able to identify a PN level service if there is an SLA in place between the PN and the service requesters.

As seen in context management is provided in order to determine device capabilities friendship relations and user situations to in turn be able to make intelligent adaptations of the media delivered in response to a service request. These adaptations can range from selection of variants e.g. low res thumbnails to mobiles hi res widescreen to HDTV s hi res with interaction to users who have a mobile phone and a TV at the same time to various types of transcoding including content adaptation i.e. personalization . A PN according to exemplary embodiments is associated with context information where the information related to the devices and services in the PN are stored. Context Management is the function according to exemplary embodiments that aggregates the context information from each cluster in the PN and exposes it to a context consumer. Service Providers Content Providers and end users are context consumers. The Context Management function authenticates and authorizes accesses to the context information and filters the information to be exposed so that the end user and the operator can control the information to be exposed.

More specifically a context manager is provided in the PN AS and counterpart context user agent in the gateway . According to exemplary embodiments there are two approaches to process context information. One is to store the information in the original format provided by each device standard and to require that any context consumers understand this format. The alternative is to store the context information using a unified model. The latter has an advantage in that it enables the context manager to generate comprehensive context information based on the elementary information from different types of devices such as DLNA devices sensor actuator devices and CAN devices while the former enables utilization of existing standards as much as possible. In either implementation context management implies interacting with database backed systems. Thus according to one exemplary embodiment the context management system contains the following databases 

1. A device capability database e.g. defining what type of media a PS3 can handle or which media formats and streaming protocols are supported by a iPhone 3.0 . This database typically needs to be manually populated primarily because it is difficult to automatically derive this information the database typically only needs to be created once and typically can be created by the manufacturer e.g. referenced by the device in the same way as UAProf .

2. A service required capabilities database which describes what a service would require to be meaningfully consumed. This database typically is also created only once by the service provider or a proxy for the service provider like the operator .

3. A database or list indicating which devices and user provided services are available in particular user situations also known as the personal network this data structure can typically be populated automatically e.g. via a discovery process at least in the DLNA case and to which of the device types and situational parameters those services match. This data structure may be updated seldomly e.g. when a device is paired or discovered and can be created by the gateway .

4. A database or list indicating what the other parameters of the situation are e.g. sensor readings which are semi persistent such as the location. This data structure can for example be updated several times of day and can be created by the gateway or by the operator and attached to the database representation in the case of location for instance .

5. A database list or other data structure indicating the current status of a particular device or personal network e.g. if the PN has the same constraints throughout and can be represented by the PNE Cluster GW . Current bandwidth and other situational parameters such as ambient temperature light level physical orientation etc. can be stored in this data structure which will get updated relatively often e.g. by the gateway .

This data enables the gateway and or the PN AS according to exemplary embodiments to intelligently adapt service provision as described above in the exemplary service request scenarios which involve friend devices or more generally task requests which involve networked objects having at least a predetermined relationship level in a given hierarchical implementation of relationship levels. Note that not all of this information is necessary to every application or service request. Thus the application of service which needs the information can query the databases containing this information which may or may not be present at the same location e.g. in the same operator database . Alternatively there can be a proxy provided for the information which is queried. The latter approach has several advantages for instance the ability to integrate with existing systems e.g. XDMS very easily and the user can determine a policy for what is delivered to whom. The query itself can take various forms for instance a SPARQL or XQUERY query a web services document submitted to a URL REST or SOAP wise an ISC request etc.

In addition to context management in support of networked object management employing social mapping principles various functions in support of service management are also shown in . Therein the exemplary PN architecture enables a PN owner to expose services from his or her PN so that they are accessible by a service requester such as a service provider a contents provider and end users other than the PN owner. The exposed service may be described in a device independent way which makes it possible for the PN owner to decide by which device he wants to receive the service. The exposed service may require certain capabilities on the service consumers so that an inappropriate device or application is not proposed to the PN owner as a consumer of the service. For example when a media rendering service exposed by a PN invokes a request for rendering a video or audio clip the PN owner receives a notification with a list of candidate devices that are located nearby and are capable of consuming the given media enabling the user to choose which device to use.

Hence the Service Management function in the PN architecture of the exemplary embodiment of mediates between the Service Requester and the user keeping the balance between fine grained service delivery and protecting the user s privacy. In this example the Service Management function includes the Service Registry the Service Broker the Service Matchmaker and the Local Service Manager . The Service Registry is the single point of contact for other PN enablers or a Service Requester to find the requested service. The Service Broker and the Local Service Manager host services that are accessed by a Service Requester . The Service Matchmaker compares the requirement of the services in the Service Registry with device capability and other context information of the PN and the matched service and device pairs are stored in the context information of the PN. A Service may be a composite service which looks up other services in the Service Registry executes them and aggregates the results. A constituent service of a composite service may be a service provided by a service provider or a service provided by a PN.

Each PNE cluster has a and according to some exemplary embodiments only one PNE Cluster Gateway which collects information from the devices in the cluster such as statuses service information and event occurrences and forwards this information to the Context Management function. The Service Management function receives requests for services provided by the devices in the cluster or the PNE cluster gateway itself dispatches the requests and collects the results to be returned to the Service Requesters .

Using the architecture described above with respect to the aforedescribed management of networked object using social mapping principles can be implemented. Another example of such interactivity will now be described with respect to the user interface screens associated with a user interface shown in . Starting with user interface screen in a user Alice of a PN can see another user Bob in her friend list displayed by actuating Friends tab because Bob and Alice are mutual friends. By clicking on Bob s icon Alice can further check Bob s networked object information as shown in . Therein an entry associated with Bob s NAS appears in the wall since devices and services owned by Bob which have been designated by Bob as having an open setting can be seen by his friends hence Alice can see Bob s NAS on the wall . By clicking on or otherwise selecting the icon associated with Bob s NAS Alice is prompted by the SWoT UI to be friends with Bob s NAS as seen in . Alice is guided to the notification tab under the home page and sees that she receives a notification saying Do you want to send a friend request to Bob s NAS According to this example suppose that Alice selects Yes as she is interested in being able to access the device e.g. to enable her to access Bob s NAS to search for interesting media content. This message will then be relayed to the relation management function to establish the friend relationship between Alice and Bob s NAS device as described above. Alternatively an explicit request by Alice to access Bob s NAS could be treated as an implicit request to establish a friend relationship with Bob s NAS which could then be accepted or rejected by Bob.

Starting with an exemplary networked object or terminal device which runs user interface can be a mobile device such as the exemplary mobile computing arrangement which may include a processing control unit such as a microprocessor reduced instruction set computer RISC or other central processing module. The processing unit need not be a single device and may include one or more processors. For example the processing unit may include a master processor and associated slave processors coupled to communicate with the master processor. The processing unit may control the basic functions of the networked object or mobile terminal as dictated by programs available in the storage memory . Thus the processing unit may execute the functions described above to e.g. enable friend devices to communicate with one another. More particularly the storage memory may include an operating system and program modules for carrying out functions and applications on the mobile terminal. For example the program storage may include one or more of read only memory ROM flash ROM programmable and or erasable ROM random access memory RAM subscriber interface module SIM wireless interface module WIM smart card or other removable memory device etc. The program modules and associated features may also be transmitted to the mobile computing arrangement via data signals such as being downloaded electronically via a network such as the Internet.

One of the programs that may be stored in the storage memory is a specific program . As previously described the specific program may be a client application which interacts with the system to for example receive and authorize friend requests send task requests and receive task results or display information about networked objects with which the user has a friend best friend or owner relationship. The program and associated features may be implemented in software and or firmware operable by way of the processor . The program storage memory may also be used to store data such as the various authentication rules or other data associated with the present exemplary embodiments. In one exemplary embodiment the programs and data are stored in non volatile electrically erasable programmable ROM EEPROM flash ROM etc. so that the information is not lost upon power down of the mobile terminal .

The processor may also be coupled to user interface elements associated with the mobile terminal. The user interface of the mobile terminal may include for example a display such as a liquid crystal display a keypad speaker and a microphone . These and other user interface components are coupled to the processor as is known in the art. The keypad may include alpha numeric keys for performing a variety of functions including dialing numbers and executing operations assigned to one or more keys. Alternatively other user interface mechanisms may be employed such as voice commands switches touch pad screen graphical user interface using a pointing device trackball joystick or any other user interface mechanism.

The mobile computing arrangement may also include a digital signal processor DSP . The DSP may perform a variety of functions including analog to digital A D conversion digital to analog D A conversion speech coding decoding encryption decryption error detection and correction bit stream translation filtering etc. The transceiver generally coupled to an antenna may transmit and receive the radio signals associated with a wireless device.

The mobile computing arrangement of is provided as a representative example of a computing environment in which the principles of the present exemplary embodiments may be applied. From the description provided herein those skilled in the art will appreciate that the present invention is equally applicable in a variety of other currently known and future mobile and fixed computing environments. For example the specific application and associated features and data may be stored in a variety of manners may be operable on a variety of processing devices and may be operable in mobile devices having additional fewer or different supporting circuitry and user interface mechanisms. It is noted that the principles of the present exemplary embodiments are equally applicable to devices which are non mobile terminals i.e. landline computing systems.

An example of a representative computing system capable of carrying out operations in accordance with the servers or gateways of the exemplary embodiments is illustrated in . Hardware firmware software or a combination thereof may be used to perform the various steps and operations described herein. The computing structure of is an exemplary computing structure that may be used in connection with such a system.

The exemplary computing arrangement suitable for performing the activities described in the exemplary embodiments may include server which may correspond to any of servers or gateways described herein e.g. PN AS or gateway . Such a server may include a central processor CPU coupled to a random access memory RAM and to a read only memory ROM . The ROM may also be other types of storage media to store programs such as programmable ROM PROM erasable PROM EPROM etc. The processor may communicate with other internal and external components through input output I O circuitry and bussing to provide control signals and the like. The processor carries out a variety of functions as is known in the art as dictated by software and or firmware instructions. For example when computing arrangement is operating as a PN Cluster gateway the I O circuitry and bussing can provide at least two network connections i.e. one for the PN Cluster network and one for the wide area network.

The server may also include one or more data storage devices including hard and floppy disk drives CD ROM drives and other hardware capable of reading and or storing information such as DVD etc. In one embodiment software for carrying out the above discussed steps e.g. to establish friend relations between networked objects may be stored and distributed on a CD ROM diskette or other form of media capable of portably storing information. These storage media may be inserted into and read by devices such as the CD ROM drive the disk drive etc. The server may be coupled to a display which may be any type of known display or presentation screen such as LCD displays plasma display cathode ray tubes CRT etc. A user input interface is provided including one or more user interface mechanisms such as a mouse keyboard microphone touch pad touch screen voice recognition system etc.

The server may be coupled to other computing devices such as the landline and or wireless terminals and associated watcher applications via a network. The server may be part of a larger network configuration as in a global area network GAN such as the Internet which allows ultimate connection to the entities described above.

Although the features and elements of the present exemplary embodiments are described in the embodiments in particular combinations each feature or element can be used alone without the other features and elements of the embodiments or in various combinations with or without other features and elements disclosed herein. The methods or flow charts provided in the present application may be implemented in a computer program software or firmware tangibly embodied in a computer readable storage medium for execution by a general purpose computer or a processor. For example depicts a flowchart which illustrates a method of managing networked objects according to an exemplary embodiment. Therein at step friendship relationships are established between a plurality of networked objects each of the plurality of networked objects being associated with a user. The network management system receives a task request at step . In response the network management system assigns the requested task to one of the plurality of networked objects which has a capability to perform the requested task and which has an established friendship relationship with the user.

According to another exemplary embodiment generalized systems and methods for networking objects using social mapping principles can operate as shown in the flowchart of . Therein at step a user joins and installs the service and creates a profile that reflects the identity of the user. Data for the user profiles could be imported or aggregated from existing user profiles of known web based social network services such as Facebook MySpace and LinkedIn or from the users data connected to a subscription with an operator. Groups of users could be created among users living within the same household or other attributes that the user has decided to share. User profiles can be made visible and linked with the profiles of other users of a group if the users wish to do so.

At step the system collects data from objects which are presently networked together and unique entity profiles for each device are created based on for example the kind of device its functionality brand characteristics location etc. . The users connect their own system entity to system entities of networked objects for example by creating a connection through the client application user interface or physically bringing together NFC RFID enabled devices. The objects system entities connect to each other s profiles i.e. establish a level of friendship relation as described above either automatically based on the kind of device its functionality brand location etc. or as managed by a user authorized to do so and that has connected his her user profile to the device at step .

Once System Entity A has established a friendship relation with System Entity B other system entities that System Entity A already has a relation to can also establish a relation with System Entity B and vice versa. For example suppose that the system sends data about the new relation to already connected system entities associated with both A and B optionally filtered by criteria such as device capabilities brand location etc. The new system entity A or B in this example can respond to such queries e.g. by auto confirmation thereby establishing a relation to the existing devices. Alternatively all such connections can be manually managed in the user s client application or the user could define a set of rules for auto confirmation.

As mentioned above such relations may have a temporal characteristic or parameter. For example temporary relations to system entities such as those associated with borrowed or rented networked objects or guest users can be set up for a specific period of time alternatively based on the proximity of another specific user within a certain area along a certain route or other criteria. The temporary connected entities will then only be available when fulfilling the pre defined criteria mentioned above and the system entity is otherwise inaccessible although it may still be visible to the temporary connected system entities. A temporary connection can be approved or initiated by the system or by the owner provider administrator of the system entity that will have a temporal connection.

Connected users and objects system entities according to exemplary embodiments may have reciprocal presence in each other s profiles. Information about status logged activities other connections mutual connections etc. can be made available for connected users and system entities. The user or a networked object s system entity can for example send data or a notification that calls for a certain response to the system or to a specific system entity or group of system entities.

Each system entity can be made aware of its connected system entities profiles including but not limited to data about their functionality dependencies current status as well as previous and future planned timer set events capabilities mandate and responsibilities. This enables functionality and interaction such as that exemplified by the TV and the video recorder scenario described above. Moreover the kind of subcontracting functional outsourcing or favors described in that TV and video recorder example could in some cases be executed automatically between the system entities of objects without the interaction of a user. These activities are collectively referred to in by step which indicates that all of this type of information can be shared among those networked objects which are at least friends with one another.

As yet another example of this type of architecture and functionality according to an exemplary embodiment consider a sensor cluster represented in the system as a plant s system entity sends data to the system about its status for example that it the temperature is high and humidity very low. The system could interpret this status as not ideal for the plant and the system could notify the system entity of the blinds in the window where the plant is located that it could potentially provide a solution to this reported problem by closing creating shadow for the plant. After closing the blinds will send a notification as a threaded response to the plant s status that states that it has attempted to solve the plant s problem. The user can monitor participate or intervene with the interaction between the system entities via the user interface.

From the foregoing it will be apparent that exemplary embodiments provide intuitive understandable and unified interaction with networked devices and services as well as between their users owners manufacturers vendors or providers. Such embodiments support and enhance the users conceptual understanding of a digital network as well as provide easy access to each device and service via a user interface. Exemplary embodiments greatly ease the configuration monitoring maintenance and management of networked products and services and can also help make home automation more intelligent and transparent but at the same time understandable and non intrusive for the users.

The ease of use accessibility and understandable concept according to these exemplary embodiments could lower the threshold for the users to buy add services to the system. This could create a new platform for delivering digital as well as physical services of all kinds. The system also opens up new opportunities for branding as it provides a way for manufacturers of products and services to manage and customize the characteristics that define the system entities that represent each product they manufacture in the system.

Manufacturers can submit data to the system that for example define what kind of expression and behavior system entities of a certain product should have and also what kind of relationship it should have with other system entities that are related to or affiliated via the brand of their manufacturers.

The above described exemplary embodiments are intended to be illustrative in all respects rather than restrictive of the present invention. All such variations and modifications are considered to be within the scope and spirit of the present invention as defined by the following claims. No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Additionally the term user is meant to be inclusive of an individual a group and an organization.

