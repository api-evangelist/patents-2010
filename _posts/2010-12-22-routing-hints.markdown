---

title: Routing hints
abstract: An exemplary network gateway is capable of accepting a session-related message having a session identifier field; the network gateway is adapted to extract a host identifier from a value populating the session identifier field and to perform a routing operation for the session-related message using the host identifier. For an exemplary media implementation, processor-executable instructions direct a device to perform actions including: ascertaining a host identifier from a session identifier field of a session message; and routing the session message responsive to the ascertained host identifier. An exemplary apparatus includes: at least one processor; and one or more media including processor-executable instructions that are capable of being executed by the at least one processor to direct the apparatus to perform actions including: receiving a session message having a session identifier including a host identifier; and routing the session message responsive to the host identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08918525&OS=08918525&RS=08918525
owner: Microsoft Corporation
number: 08918525
owner_city: Redmond
owner_country: US
publication_date: 20101222
---
This application is a divisional application of and claims priority to U.S. patent application Ser. No. 10 639 516 filed on Aug. 13 2003. The disclosure of which is incorporated by reference herein for all purposes in its entirety.

This disclosure relates in general to routing hints and in particular by way of example but not limitation to providing routing hints from hosts in order to use such routing hints at a network gateway to facilitate intranet routing.

Communication has been greatly impacted by the capabilities of the Internet. The Internet enables information to be communicated between two people or other entities quickly and relatively easily using packets. The Internet includes many network nodes that are linked together such that information containing packets may be transferred between and among them. Some network nodes may be routers that propagate a packet from one link to another others may be individual client computers still others may be entire personal networks e.g. for specific entities and so forth.

Communication across the Internet between a first entity and a second entity is effectuated by constructing a connection between them. These connections sometime involve sessions. Sessions are established to provide a context for the communication exchanges that occur over the corresponding connection or connections. A session establishment usually involves a one way or two way exchange of information between the first and second entities. The complexity and duration of an establishment phase of a session usually varies based on the type of session.

Each session establishment utilizes processing resources and consumes a period of time that translates into a delay that is experienced by users. After the session establishment phase the first and second entities communicate in accordance with the established session context. The communication as well as the connection may cease without terminating the session. In some cases such existing sessions may thereafter be continued using the information that was previously exchanged between the two entities during the prior session establishment phase when such information is retained by them.

In other words the previously exchanged information is used to continue the existing session. Thus continuing an existing session is generally relegated to those situations in which the same first and second entities that previously established the session are attempting to continue it. Consequently problems can arise when a first entity is trying to continue an existing session if the second entity is unknown and or difficult to identify or contact.

Accordingly there is a need for schemes and or techniques that improve simplify and or facilitate a session continuation between two entities.

In a first exemplary network gateway implementation a network gateway is configured to execute operations that include ascertain a host identifier that is included as at least part of a session identifier of a message and route the message responsive to the ascertained host identifier.

In a second exemplary network gateway implementation a network gateway is capable of accepting a session related message having a session identifier field the network gateway is adapted to extract a host identifier from a value populating the session identifier field and the network gateway is further adapted to perform a routing operation for the session related message using the host identifier.

In an exemplary media implementation one or more processor accessible media include processor executable instructions that when executed direct an apparatus to perform actions including ascertaining a host identifier from a session identifier field of a session message and routing the session message responsive to the ascertained host identifier.

In an exemplary apparatus implementation an apparatus includes at least one processor and one or more media including processor executable instructions that are capable of being executed by the at least one processor the processor executable instructions adapted to direct the apparatus to perform actions including receiving a session message having a session identifier including a host identifier and routing the session message responsive to the host identifier.

Other method system approach apparatus application programming interface API device media procedure arrangement etc. implementations are described herein.

In a described implementation clients . . . correspond to addresses C C . . . Cm respectively. Each of clients may be any device that is capable of network communication such as a computer a mobile station an entertainment appliance another network and so forth. Clients may also correspond to a person or other entity that is operating a client device. In other words clients may comprise logical clients that are users and or machines.

Network may be formed from one or more networks such as the Internet another intranet a wired or wireless telephone network a wireless broadband network and so forth. Additional examples of devices for clients and network types topologies for network are described below with reference to . Individual clients are capable of communicating with one or more hosts and vice versa across network via network gateway .

Hosts . . . correspond to addresses H H . . . Hn respectively. Host addresses H H . . . Hn are present on intranet . Hosts typically host one or more applications not shown . These applications i provide services for interaction and or communication with clients ii are for use by clients and so forth. By way of example only such applications may include file delivery programs web site management server programs remote access programs electronic mail programs database access programs and so forth.

Each host may correspond to a server and or a device multiple servers and or multiple devices part of a server and or part of a device some combination thereof and so forth. Particular exemplary implementations for hosts are described further below with reference to and . Furthermore additional exemplary device implementations for hosts are described below with reference to .

Network gateway is reachable or locatable through network at one or more addresses NGN and network gateway also has a presence on intranet with at least one address NGI . Communications from clients or other nodes that are directed to address NGN of network gateway are received at network gateway and thereafter routed to a host of hosts . . . . Network gateway is comprised of one or more network gateway elements not separately shown in . Each network gateway element may comprise all or a portion of a router a proxy a load balancer a firewall device some combination thereof and so forth. Exemplary non specific device implementations for network gateway elements are also described below with reference to .

Generally connections are constructed between clients and hosts across network via network gateway . Clients usually initiate connections but hosts may alternatively be the initiators. Specifically in this example client initiates a connection with host . However client is not privy to address H of host . Instead client directs the connection e.g. a packet requesting a connection to address NGN of network gateway .

Network gateway then performs a routing operation on connection in accordance with some default policy e.g. rule . As a result network gateway routes connection over intranet to host for this example. Generally network gateway cannot simply send the packets of connections from client as is to host at network address H because the packets are destination addressed to address NGN of network gateway . Instead network gateway typically employs one or more of the following exemplary options to route packets across intranet network address translation NAT half NAT tunneling some combination thereof and so forth.

In a transmission control protocol internet protocol TCP IP environment NAT is performed by i overwriting the source i.e. client IP address C and port number with the IP address NGI and NAT generated port number of network gateway and ii overwriting the destination IP address NGN with the IP address H of host . Half NAT is performed by overwriting the destination IP address NGN with the IP address H of host so that the source IP address C and port number are preserved. Tunneling is performed by encapsulating each packet within a new IP packet that is addressed to address H of host and transmitting the encapsulated packets from network gateway to host where they can be de encapsulated.

During connection a session is established between client and host . For the established session of connection a session context is produced at host . An analogous similar and or reciprocal session context not shown is also usually produced at client . Session context facilitates communications between client and host .

Thus connection may be or may have established thereon any one or more of many different types of sessions. Exemplary types of sessions include i a Secure Sockets Layer SSL session ii a Transport Layer Security TLS session iii a secure internet protocol IPsec session iv a hyper text transfer protocol HTTP cookie based session v a point to point tunneling protocol PPTP session vi an IPSec layer 2 tunneling protocol L2TP session vii a proprietary session viii a terminal server session ix an administrator defined session x and so forth. These examples of different session types also illuminate how layers of sessions may be established and used.

The contents of a session context may vary at least partially in dependence on the type of session for which it was produced. For example a particular session context may include one or more of the following a TCP 4 tuple e.g. for sessions established with a TCP connection a session identifier a location for one or more database entries that maintain persistent state for the corresponding session a public key of client that is provided to host negotiated private cryptographic key s other security related parameter s and so forth. A TCP 4 tuple includes a source IP address a source TCP port a destination IP address and a destination TCP port. By way of example for an SSL session under current standards the session identifier can be up to 32 bytes in length.

As described above after connection is constructed a session is established between client and host in the current example. Client is more specifically establishing a session with at least one application that is resident at and or executing on host . However for the sake of clarity such applications may be generally included when referencing host .

The session establishment phase produces or results in session context . Session context provides a context for communication exchange s between client and host . Session context can include information that is actually critical merely beneficial or otherwise somehow relevant to these communication exchange s .

Given that client may be a logical client session context may relate to communication exchanges between i a specific device and or a specific user of a device and ii host . Consequently a session context that is associated with a user client may continue to be associated therewith even as the user client accesses hosts from different devices. The devices can differ at a local level for client at a network level and so forth. Examples of such different device scenarios include a proxy scenario e.g. those of some internet service providers ISPs a terminal server session scenario and so forth.

Session context is stored at host and or accessible therefrom. When connection is completed or otherwise ceases session context may not be used again. On the contrary session context may be useful again if client attempts to initiate another connection with hosts for a same a similar or a related etc. session. If this other connection is not routed to the same host that stores session context then client has to establish a new session which can be time consuming data processing intensive and or frustrating to users especially a user corresponding to client . Without some session affinity preservation mechanism at network gateway there is typically no likelihood greater than random chance that the second connection is also routed to host .

A session affinity preservation mechanism or functionality is adapted to route connections including packet level and logical level requests back to a host that is associated with a session context for an existing session that is to be continued with the connection. For example session affinity preservation functionality attempts to enable a connection for client to be routed back to host to which session context is associated. Such session affinity preservation mechanisms may be implemented in accordance with one or more exemplary strategies. Although applicable to network gateways generally these exemplary strategies are described from the perspective of a load balancing implementation.

A first strategy relates to load balancing with a sticky mode in which most if not all requests that are incoming from a given e.g. IP address are routed to a single host . However this strategy relies on an assumption that a given IP address represents a single client which is manifestly untrue for proxies. A proxy appears as single IP address to the load balancer but it actually represents requests for many potentially thousands of clients . As a result routing all of these requests to a single host can lead to a very uneven load balance between among devices. Usually devices that receive incoming requests from a proxy are consequentially assigned a much greater number of clients . Furthermore requests from a client that has changing IP addresses are also routed incorrectly using this first strategy. IP addresses can be changing in a mobile environment when addresses are temporarily allocated from an IP address pool and so forth.

A second strategy involves employing a load balancing heuristic that uses a session identifier. Requests to continue an existing session are routed to the host that previously established e.g. negotiated that session using the specific individual session identifier. In operation after a particular session is established between a particular client and a particular host a mapping is stored that links that particular host to that particular session with the session being identified by a particular session identifier. When a request including the particular session identifier from that particular client is received the request can be routed back to that particular host using the mapping. This second strategy therefore enables preservation of session affinity.

However the second strategy entails a number of relative drawbacks from an efficiency perspective. First the load balancer maintains a table of these mappings between session identifiers and hosts . The size of this table can be huge because there is a separate entry for each existing session. For example if each host caches 10 000 sessions and there are 500 hosts the table uses 5 million entries to route requests for these sessions with optimal efficiency. Second for each newly established session the load balancer monitors the session establishment phase until the session identifier is detected and an entry can be added to the table. Third each time a request to resume a session is received the load balancer consults the likely very large table in order to perform the routing.

Fourth because the sessions have a lifetime and are aggressively aged out or evicted from host caches due to overcrowding the load balancer table also implements some aging mechanism to mirror what the individual hosts are doing or are expected to be doing with their own caches. If the host and load balancer aging mechanisms are not synchronized the load balancer may prematurely delete state information for sessions that are still valid on host or inversely it may retain state information for sessions that are no longer present at any host .

A third strategy for session affinity preservation functionality can achieve session affinity preservation at network gateway through selective creation determination of session identifiers for sessions that are being newly established and without a table that requires an entry for each individual session. When determining session identifiers hosts embed a host identifier therein.

Network gateway extracts a host identifier from a session identifier and routes traffic for a session to which the session identifier is assigned responsive to the host identifier. The third strategy can therefore employ a relatively stateless approach that routes session continuation requests using a table with a bounded number of entries e.g. a number of entries that equals the number of hosts and or that routes session continuation requests without using a table that has such per session entries. Aspects of this third strategy are described further herein.

In the example for communications environment after the session establishment phase is completed as part of connection session context is produced at host . Connection thereafter ceases. When a request for connection arrives at network gateway a routing operation is performed thereon. This connection is indicated to be for a continuation of the previously established session that corresponds to session context by a session identifier assigned thereto. The session identifier includes an identifier of host in accordance with the third strategy. Using the host identifier for host that is extracted from the session identifier of the session continuation request connection is routed at routing operation to host which is associated with session context .

Items and may also represent session related messages e.g. requests that occur within a single connection as well as those that occur during two or more connections. Furthermore certain communications between clients and hosts are described herein as messages. Messages are usually propagated from clients to hosts and vice versa as one or more packets. Client messages are sent from clients and host messages are sent from hosts . Session messages are those messages that relate to sessions e.g. those that relate to the establishment continuation resumption tearing down etc. of sessions . An exemplary session message is described further below with reference to .

Session initiation messages are messages sent by clients and or hosts that relate to initiating a session. Session continuation messages are messages sent by clients and or hosts that relate to continuing an existing session. Session initiation messages and session continuation messages may have markedly different formats similar formats identical formats and so forth. However in a described implementation session initiation messages and session continuation messages have at least similar formats wherein the presence of a session identifier indicates that a client session message is a client session continuation message and the absence of a session identifier indicates that a client session message is a client session initiation message.

Although the description herein is not so limited the implementations described below occasionally highlight or focus on load balancing implementations for network gateway . Also although other protocols and combinations of protocols are applicable and may alternatively be used the description below primarily uses TCP IP connections and SSL TLS sessions for the sake of clarity.

By way of example but not limitation a client session initiation message or client session continuation message may be a Client Hello message in accordance with the TLS Protocol Version 1.0 Spec January 1999 . If the Client Hello message includes a session identifier then it may be a client session continuation message otherwise it may be a client session initiation message. Similarly a host session initiation message or host session continuation message may be a Server Hello message in accordance with the TLS Protocol Version 1.0 Spec. If the Server Hello message includes a session identifier provided by a client in a Client Hello message to which the Server Hello message is responding then it may be a host session continuation message. If the Server Hello message is responsive to a Client Hello message that does not include a session identifier then it may be a host session initiation message. Creating a session identifier for and formulating such a host session initiation message is described further below.

As illustrated host includes a message handler that handles messages that are being sent to and received from clients . Message handler includes an incoming message handler portion IC and an outgoing message handler portion OG. Host is associated with a host identifier which is stored at or otherwise accessible from host . Examples for host identifier are described further below with reference to . Host also includes a session identifier creator that creates session identifiers e.g. a session identifier using host identifier .

In a described implementation client has an address C and network gateway element has addresses NGN and NGI with addresses C and NGN located on network . Host has an address H which is located on intranet along with address NGI. Session messages from client are received through network at network gateway element . Network gateway element then routes these session messages onward to host over intranet with routing operations . In a reverse path session messages from host are sent transmitted across intranet to network gateway element which routes them back to client with routing operations .

Specifically client sends a client session initiation message SIM over network to network gateway element . Client session initiation message does not include a session identifier inasmuch as it comprises a request for a new session. Because client session initiation message is not for an existing session network gateway element routes client session initiation message to host using a general policy at routing operation A . For example network gateway element may route client session initiation message in accordance with a current and or relevant load balancing policy e.g. a round robin distribution of incoming new session requests .

Host receives client session initiation message through intranet at incoming message handler portion C. Without a session identifier incoming message handler portion C recognizes client session initiation message as being for a new session. Session identifier creator is activated to create a new session identifier for the requested new session. Session identifier creator ascertains retrieves host identifier .

Session identifier creator uses host identifier to create session identifier . For example session identifier creator inserts host identifier into session identifier . Session identifier may also include other values beyond that of host identifier . The additional values of session identifier may be created using any of one or more techniques. Such techniques include but are not limited to a randomly selected value a value from an incrementing counter a security related value a hashed value some combination thereof and so forth.

In a described implementation a first portion i.e. host identifier of session identifier is devoted to identifying the host that currently owns the corresponding session. This first portion is unique across the hosts of a given cluster i.e. no host shares its host identifier with any other host in the same cluster . The first portion can be an IP address owned by the host an integer that is assigned by an administrator and so forth. A second portion of session identifier can increase the uniqueness and the unpredictability of session identifier . A variety of techniques can be used for this second portion such as a combination of using a global counter that is incremented once for each new session with rollovers to 0 and of using a pseudorandom and or a hashing technique.

Session identifier creator provides session identifier to message handler . Outgoing message handler portion G prepares formulates a host session initiation message that includes session identifier . Host session initiation message is sent over intranet to network gateway element . Network gateway element then uses a route back routing operation B to send host session initiation message over network to client . Although not so illustrated host session initiation message may alternatively be routed back along a path that does not include network gateway element especially inasmuch as network gateway element can route subsequent client messages without having garnered per session state information.

Client extracts session identifier from host session initiation message and retains session identifier for possible future use to continue the established session and for any current use with the established session . At some point actual use of the established session ceases e.g. a connection is terminated . In order to continue the established and existing session with host client formulates a client session continuation message SCM . Client includes the retained session identifier in client session continuation message . Client session continuation message is then sent across network from client to network gateway element .

When network gateway element receives client session continuation message it detects that client is trying to continue an existing session as indicated by the included session identifier . At routing operation C network gateway element routes client session continuation message using session identifier . More specifically network gateway element routes client session continuation message using host identifier that is part of and extracted from session identifier .

Host identifier identifies the host to which it is associated. Hence network gateway element routes client session continuation message at routing operation C using an identification of host as indicated by host identifier . Client session continuation message is therefore sent across intranet from network gateway element to host . At host incoming message handler portion C receives client session continuation message and can begin a continuation of the previously established session using a stored session context e.g. session context as shown in .

Host identifier can identify the host with which it is associated in multiple manners. For example host identifier can comprise the intranet network address H of host . In this case network gateway element can route client session continuation message to host without using a session related table or a host identifier table. In other words client session continuation message can be forwarded to host using host identifier or at least part thereof as the destination address of one or more packets that are placed on intranet for client session continuation message .

Alternatively host identifier can map to address H for host . Although this mapping manner involves a table or a computation the number of entries n in the table can be equal to the number of hosts in the server cluster on intranet in a web farm and so forth. Thus this table has a bounded number of entries and does not include per session state information. With reference to the example used above if each host caches 10 000 sessions and there are 500 hosts the table may use 500 entries instead of 5 million to efficiently route requests for these sessions.

Table 1 below is an exemplary linking data structure that links host identifiers to hosts by way of the addresses of hosts .

In operation network gateway element extracts a host identifier from session identifier of client session continuation message as received from client . Network gateway element then accesses a linking data structure such as that of Table 1 using host identifier to ascertain the host address H that is linked thereto. This host address H corresponds to the address of host on intranet and is used as the destination address to route client session continuation message to host . Exemplary host identifier to network address linking tables are described further below with reference to .

Session identifier includes at least one host identifier . Host identifier includes a device identifier and optionally an application identifier . Device identifier may comprise a network address or a key A . Alternatively host identifier may include a key B .

In a described implementation a format or formats for session messages are defined by a network or communication standard or protocol such as SSL TLS. Session identifier may be located anywhere within session message especially as defined by the applicable standard or protocol. Other fields may include a source and or destination address general header information security type information other session related information data some combination thereof and so forth. By way of example session message may be a Client Hello or a Server Hello message as defined by the TLS Protocol Version 1.0 standard and session identifier may correspond to the SessionID field of either TLS Hello message. An example of a field that includes security type information is a cipher field that indicates which cryptographic options are supported by a session participant e.g. a client or a host that is formulating session message .

Session identifier includes host identifier and optionally other values that together form a session identifier. This session identifier populates the session identifier field of session message . Host identifier may be located anywhere within the field for session identifier including being divided dispersed and or spread over the session identifier field.

In a described implementation for ease of extraction a sub field of session identifier that corresponds to host identifier is realized as a contiguous sequence of bytes. The contiguous sequence of bytes appears at a fixed offset from the most significant byte of session identifier . However the fixed offset may instead be from the least significant byte.

For additional flexibility host identifier may be configurable externally instead of being selected by an SSL TLS component for example. For instance host identifier may be configured externally by being read as a value from a registry key. As noted above an administrator may determine host identifiers such as by setting the registry key value or through some other mechanism.

Host identifier may alternatively be embedded in a different field from that of session identifier . For example a particular field that is sent to a client and is returned unchanged from that client when it is requesting resumption of an existing session may be used. This alternative is especially applicable if the message format and underlying protocol permits or requires a host with the desired session context to have created selected the value for this particular field. For this alternative network gateway element performs routing operations using the at least part of the contents of this particular field.

Host identifier includes a device identifier and may also include an application identifier . Device identifier corresponds to a device of for a host to which host identifier is associated. As illustrated device identifier comprises a network address or a key A that identifies the device of host .

Network address is a network address on intranet of a device for host . Thus if device identifier comprises a network address a network gateway element may insert device identifier into a destination field for a packet or packets being forwarded to host .

Key A is a value that maps to a network address on intranet of a device for host . This mapping may be effectuated by looking up a network address in a table by performing a computation e.g. following a formula implementing an algorithm etc. and so forth. For example key A may be linked to a host address H in a data structure such as that described above with reference to Table 1. An exemplary table in which keys A are linked to network addresses is described further below with reference to .

When host identifier includes a device identifier and an application identifier host identifier comprises an application endpoint. Application identifier identifies a specific application on a host device that is identified by device identifier . Thus a host identifier that includes a device identifier and an application identifier is capable of identifying a specific application from among multiple applications that are on a single host and or that are replicated across multiple hosts .

A host identifier that includes a device identifier but no application identifier may also comprise an application endpoint. For example this is especially likely when a device has only one application when a device is multi homed when a NIC of a device owns two IP addresses and so forth. In either case host identifier serves to identify a particular application as well as a particular host . Consequently routing of a client session continuation message may be performed expeditiously to the desired application that has session affinity with the requesting client .

Host identifier may alternatively include a key B . Key B is a value that maps i to a network address on intranet of a device for host and ii to a specific application thereon. Such a mapping enables key B to map to an application endpoint without using a separate application identifier . This mapping may be effectuated by looking up a network address application identifier pair in a table by performing a computation e.g. following a formula implementing an algorithm etc. and so forth. For example key B may be linked to a network address and an application identifier in a data structure. An exemplary table in which keys B are linked to network addresses and application identifiers is described further below with reference to .

In another alternative implementation a code may be embedded in a field for session identifier of session message . The code may occupy part of or the entire session identifier field. The code can be used to communicate information e.g. data commands etc. from a host to network gateway element and or a client . The session identifier field of session message may be populated with the code itself and or with a session identifier that is created using the code. Client and or network gateway element may extract the code and utilize the communicated information as is after a mapping e.g. a looking up a computation etc. of the code and so forth.

At block a client session message is received. For example a host may receive a client session message or e.g. at an incoming message handler portion C of a message handler from a client . At block it is determined if the received client session message includes a session identifier. For example the received client session message or e.g. in a format such as session message may be inspected to determine if it has a session identifier in a session identifier field.

If the received client session message includes a session identifier then the received client session message is a client session continuation message SCM and the method continues at block . If on the other hand the received client session message does not include a session identifier then the received client session message is a client session initiation message SIM and the method continues at block .

At block a session identifier is created with a host identifier. For example a host identifier for host is used by a session identifier creator to create a session identifier . Session identifier creator may insert host identifier into session identifier along with other values thereof.

At block a host session initiation message is formulated with the created session identifier. For example an outgoing message handler portion G may formulate e.g. using a format such as that of session message a host session initiation message that is populated with session identifier which includes host identifier . At block the host session initiation message is sent. For example host may transmit host session initiation message to client over network via network gateway element .

If on the other hand it is determined at block that the received client session message does include a session identifier then a host session continuation message is formulated with the received session identifier at block . For example outgoing message handler portion G may formulate e.g. using a format such as that of session message a host session continuation message not specifically shown in that is populated with the received session identifier which may include a previously embedded host identifier . At block the host session continuation message is sent. For example host may transmit a host session continuation message to client over network via network gateway element .

Network gateway element routes these requests to hosts . . . . Each host . . . is associated with a respective host identifier . . . . Host identifiers may for example uniquely identify an application endpoint from among a set of endpoints to which a particular kind of session can potentially be directed.

In a described implementation network gateway element relates to network load balancing. With network load balancing or other network gateways with routing functionality one or more routing policies may be employed. Routing policies may include for example those routing policies that an administrator can script or set to cause a network load balancer to route incoming packets and or requests in prescribed manners. Routing policies may also include more flexible and or expansive routing policies that rely on real time parameters such as health and load information for hosts .

A network load balancing implementation for network gateway element may be realized with integrated network load balancing functionality. This implementation is described with regard to client session continuation message A and routing operation C . A network load balancing implementation for network gateway element may also be realized with separated network load balancing functionality. This implementation is described with regard to client session continuation message B and routing operation .

In this exemplary network load balancing implementation with separated functionality network gateway element includes a forwarder a classifier and a host identifier HI to network address NA linking table . Forwarder forwards packets between clients and hosts using network and intranet respectively. Classifier classifies packets requests connections etc. to perform routing operations in order to effectuate network load balancing functionality and or session affinity preservation functionality.

Forwarder and classifier may be resident at and executing on different devices of a network gateway or on a single device thereof. Moreover each of forwarder and classifier may be distributed over more than one device. Furthermore there may be multiple forwarder components and or classifier components in a network gateway . As illustrated each classifier includes a host identifier to network address linking table . Alternatively a network gateway may have only one host identifier to network address linking table . Host identifier to network address linking table may also be located at and or associated with different functional component s .

In operation of an integrated network load balancing implementation client sends client session continuation message A over network to network gateway element at address NGN. Client has previously established a session at host and retained a session identifier that was assigned to the previously established session. This session identifier includes host identifier that is associated with host . Client session continuation message A includes session identifier .

In an implementation with integrated network load balancing functionality network gateway element performs routing operation C for client session continuation message A . Because client session continuation message A has session identifier that includes host identifier network gateway element routes client session continuation message A using the host identifier portion of session identifier . Generally network gateway element routes client session continuation message A to host using host identifier as extracted from session identifier .

Specifically network gateway element may insert host identifier into a destination address field of packet s for client session continuation message A that are being routed to host . This approach is effective when host identifier comprises network address H for host .

Alternatively network gateway element may also perform a mapping of host identifier to network address H. For example a computation operation or a look up operation may be performed for such a mapping. For a computational operation host identifier is mapped to network address H through some formula algorithm and so forth. For a look up operation host identifier is mapped to network address H by accessing a host identifier to network address table that includes an entry linking host identifier to network address H such as host identifier to network address linking table . An example of such a table is described further below with reference to .

In operation of a separated network load balancing implementation client sends client session continuation message B over network to network gateway element at address NGN. Client has previously established a session at host and retained a session identifier that was assigned to the previously established session. This session identifier includes host identifier that is associated with host . Client session continuation message B includes session identifier .

In an implementation with separated network load balancing functionality forwarder receives client session continuation message B . Because client session continuation message B is for a session that is not known to forwarder and possibly for a new connection as well forwarder forwards client session continuation message B to classifier at communication exchange . Client session continuation message B has session identifier that includes host identifier so classifier classifies client session continuation message B using the host identifier portion of session identifier at routing operation . Also at communication exchange classifier returns client session continuation message B to and or adds a routing entry at forwarder to indicate that messages packets for this session are to be forwarded to host .

Thus classifier and forwarder jointly route client session continuation message B to host using host identifier as extracted from session identifier . As described above with respect to routing operation C forwarder and classifier i may insert host identifier into a destination address field ii may perform a mapping e.g. a computation a looking up etc. of host identifier to network address H and so forth.

Host identifier to network address linking table is described as being part of or otherwise associated with classifier . Although host identifier to network address linking table is shown as being located at network gateway element it may instead be resident at a different device e.g. a proxy device . When located at such a proxy device a network gateway element that has separated or integrated e.g. network load balancing related functionality can access host identifier to network address linking table therefrom.

As illustrated host identifier to network address linking table A links respective host identifiers to respective network addresses . Table A includes multiple entries A A . . . A . Each respective entry A A . . . A includes a respective host identifier . . . and a respective network address . . . that is linked thereto.

In a described implementation table A includes n entries where n equals the number of hosts and each host identifier . . . corresponds to a key A of . In such an implementation network addresses . . . correspond to host addresses H H . . . Hn respectively e.g. of . In operation a network gateway element accesses table A with a host identifier to locate an entry A that is associated therewith. From that entry A a network address that is linked to host identifier is extracted for use in routing a client session continuation message A or B to a host .

As illustrated host identifier to network address linking table B links respective host identifiers to respective network addresses and application identifiers . Table B includes multiple entries B B B . . . B . Each respective entry B B B . . . B includes i a respective host identifier . . . and ii a respective network address . . . as well as a respective application identifier . . . that are linked to the host identifiers .

In a described implementation table B includes w entries where w equals the number of application endpoints on hosts and each host identifier . . . corresponds to a key B of . By way of explanation and with reference to the illustrated host identifier to network address linking table B may be utilized in the following exemplary circumstance Host is associated with host identifier and has one application that corresponds to application identifier and address H corresponds to network address . Host is associated with host identifiers and and has two applications that correspond to application identifiers and and address H corresponds to network address .

Additionally host is associated with host identifier and has one application that corresponds to application identifier and address Hn corresponds to network address . Variable z can equal w the number of application endpoints if each application identifier is unique to each application installation. If on the other hand application identifiers are shared among application installations of the same application type z can be less than w.

At block a client message is received. For example network gateway element may receive a client message from client through network . At block the contents of the received client message are inspected. For example network gateway element may inspect one or more fields of a session message such as a field for a session identifier .

At block it is determined if the received client message is session related. For example if the received client message comprises a session message having a field for a session identifier then the received client message is session related. If on the other hand the received client message does not have a field for a session identifier then the received client message is not session related and the method continues at block .

At block the received client message is routed using a default policy. For example network gateway element may route the received client message using a general routing policy of routing polices such as a default network load balancing policy. As indicated by dashed arrow A network gateway element may then await receipt of the next client message.

If on the other hand it is determined at block that the received client message is session related then a session identifier field is inspected at block . For example network gateway element may inspect a session identifier field of the received client session message . At block it is determined if the client specified a session identifier using the session identifier field. For example network gateway element may determine whether a session identifier populates a session identifier field of session message .

If it is determined at block that no session identifier was specified then the received client session initiation message may be routed using a default policy at block . If on the other hand it is determined at block that a session identifier was specified by the client then a host identifier is extracted from the specified session identifier at block . For example network gateway element may extract a host identifier from session identifier as specified in the received client session continuation message .

At block the received client message is routed using the extracted host identifier. For example the received client session continuation message may be routed by network gateway element to the host that is associated with host identifier . This routing may entail an unmodified insertion of host identifier into a destination field for a packet or packets being forwarded to host or a mapping of host identifier to at least a network address . The mapping may be effectuated by looking up network address in a table using host identifier by performing a computation e.g. following a formula implementing an algorithm etc. on host identifier that results in network address and so forth.

Especially for implementations in which network gateway element is a network load balancer network gateway element may have access to health and or load information relating to multiple hosts . This health and or load information may indicate that a destination e.g. a host and or an application endpoint thereof that is associated with an extracted host identifier is unsuitable or unable to handle a session continuation because of health and or load reasons. In such a case network gateway element may perform the action s of block for default routing policies even when a client has specified a session identifier that includes a host identifier .

After the action s of block as indicated by dashed arrow B network gateway element may await receipt of the next client message. Network gateway element may route the received client session continuation message using the extracted host identifier in a number of ways in dependence on the type of host identifier that was extracted.

For example network gateway element may route the received client session continuation message directly to the intended application if host identifier includes a device identifier and an application identifier or if a key B maps to a device and an application for a host . Additionally network gateway element may be capable of routing the received client session continuation message to the affinitized host using a network address implementation of a device identifier of host identifier in which network address is used as the destination address for the routed packet or packets.

Alternatively network gateway element may use a key A implementation of a device identifier of host identifier to look up a network address for the device of the affinitized host . For instance a key may be used to access a table A e.g. a data structure that maps keys A to network addresses of hosts . An entry A having key is located in the data structure. A network address that is linked to key in that located entry A is extracted and used to route client session continuation message to the affinitized host .

Moreover network gateway element may use an application endpoint specific key B implementation of a device identifier and application identifier of a host identifier to look up a network address for the device of the affinitized host and an application identifier for an application thereof. For instance a key may be used to access a table B e.g. a data structure that maps keys B to application endpoints of hosts . An entry B having key is located in the data structure. An application endpoint e.g. a network address and an application identifier that is linked to key in that located entry B is extracted and used to route client session continuation message to a particular application on a particular device of for the affinitized host .

The actions aspects features components etc. of are illustrated in diagrams that are divided into multiple blocks. However the order number placement interconnections layout etc. in which these multiple blocks of are described and or shown is not intended to be construed as a limitation and any number of the blocks can be combined rearranged augmented omitted etc. in any manner to implement one or more systems methods devices procedures media application programming interfaces APIs apparatuses arrangements etc. for routing hints. Furthermore although the description herein includes references to specific implementations and the exemplary operating environment of the illustrated and or described implementations can be implemented in any suitable hardware software firmware or combination thereof and using any suitable network organization s transport communication protocols s client server architecture s and so forth.

Exemplary operating environment is only one example of an environment and is not intended to suggest any limitation as to the scope of use or functionality of the applicable device including computer network node entertainment device mobile appliance general electronic device etc. architectures. Neither should operating environment or the devices thereof be interpreted as having any dependency or requirement relating to any one or to any combination of components as illustrated in .

Additionally routing hints may be implemented with numerous other general purpose or special purpose device including computing system environments or configurations. Examples of well known devices systems environments and or configurations that may be suitable for use include but are not limited to personal computers server computers thin clients thick clients personal digital assistants PDAs or mobile telephones watches hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics video game machines game consoles portable or handheld gaming units network PCs minicomputers mainframe computers network nodes distributed or multi processing computing environments that include any of the above systems or devices some combination thereof and so forth.

Implementations for routing hints may be described in the general context of processor executable instructions. Generally processor executable instructions include routines programs protocols objects interfaces components data structures etc. that perform and or enable particular tasks and or implement particular abstract data types. Routing hints as described in certain implementations herein may also be practiced in distributed processing environments where tasks are performed by remotely linked processing devices that are connected through a communications link and or network. Especially in a distributed computing environment processor executable instructions may be located in separate storage media executed by different processors and or propagated over transmission media.

Exemplary operating environment includes a general purpose computing device in the form of a computer which may comprise any e.g. electronic device with computing processing capabilities. The components of computer may include but are not limited to one or more processors or processing units a system memory and a system bus that couples various system components including processor to system memory .

Processors are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions. Alternatively the mechanisms of or for processors and thus of or for computer may include but are not limited to quantum computing optical computing mechanical computing e.g. using nanotechnology and so forth.

System bus represents one or more of any of many types of wired or wireless bus structures including a memory bus or memory controller a point to point connection a switching fabric a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example such architectures may include an Industry Standard Architecture ISA bus a Micro Channel Architecture MCA bus an Enhanced ISA EISA bus a Video Electronics Standards Association VESA local bus a Peripheral Component Interconnects PCI bus also known as a Mezzanine bus some combination thereof and so forth.

Computer typically includes a variety of processor accessible media. Such media may be any available media that is accessible by computer or another e.g. electronic device and it includes both volatile and non volatile media removable and non removable media and storage and transmission media.

System memory includes processor accessible storage media in the form of volatile memory such as random access memory RAM and or non volatile memory such as read only memory ROM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules instructions that are immediately accessible to and or being presently operated on by processing unit .

Computer may also include other removable non removable and or volatile non volatile storage media. By way of example illustrates a hard disk drive or disk drive array for reading from and writing to a typically non removable non volatile magnetic media not separately shown a magnetic disk drive for reading from and writing to a typically removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from and or writing to a typically removable non volatile optical disk such as a CD DVD or other optical media. Hard disk drive magnetic disk drive and optical disk drive are each connected to system bus by one or more storage media interfaces . Alternatively hard disk drive magnetic disk drive and optical disk drive may be connected to system bus by one or more other separate or combined interfaces not shown .

The disk drives and their associated processor accessible media provide non volatile storage of processor executable instructions such as data structures program modules and other data for computer . Although exemplary computer illustrates a hard disk a removable magnetic disk and a removable optical disk it is to be appreciated that other types of processor accessible media may store instructions that are accessible by a device such as magnetic cassettes or other magnetic storage devices flash memory compact disks CDs digital versatile disks DVDs or other optical storage RAM ROM electrically erasable programmable read only memories EEPROM and so forth. Such media may also include so called special purpose or hard wired IC chips. In other words any processor accessible media may be utilized to realize the storage media of the exemplary operating environment .

Any number of program modules or other units or sets of instructions code may be stored on hard disk magnetic disk optical disk ROM and or RAM . These program modules may include by way of general example an operating system one or more application programs other program modules and program data .

A user may enter commands and or information into computer via input devices such as a keyboard and a pointing device e.g. a mouse . Other input devices not shown specifically may include a microphone joystick game pad satellite dish serial port scanner and or the like. These and other input devices are connected to processing unit via input output interfaces that are coupled to system bus . However input devices and or output devices may instead be connected by other interface and bus structures such as a parallel port a game port a universal serial bus USB port an infrared port an IEEE 1394 Firewire interface an IEEE 802.11 wireless interface a Bluetooth wireless interface and so forth.

A monitor view screen or other type of display device may also be connected to system bus via an interface such as a video adapter . Video adapter or another component may be or may include a graphics card for processing graphics intensive calculations and for handling demanding display requirements. Typically a graphics card includes a graphics processing unit GPU video RAM VRAM etc. to facilitate the expeditious display of graphics and performance of graphics operations. In addition to monitor other output peripheral devices may include components such as speakers not shown and a printer which may be connected to computer via input output interfaces .

Computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computing device . By way of example remote computing device may be a personal computer a portable computer e.g. laptop computer tablet computer PDA mobile station etc. a palm or pocket sized computer a watch a gaming device a server a router a network computer a peer device another network node or another device type as listed above and so forth. However remote computing device is illustrated as a portable computer that may include many or all of the elements and features described herein with respect to computer .

Logical connections between computer and remote computer are depicted as a local area network LAN and a general wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks intranets the Internet fixed and mobile telephone networks ad hoc and infrastructure wireless networks other wireless networks gaming networks some combination thereof and so forth. Such networks and communications connections are examples of transmission media.

When implemented in a LAN networking environment computer is usually connected to LAN via a network interface or adapter . When implemented in a WAN networking environment computer typically includes a modem or other means for establishing communications over WAN . Modem which may be internal or external to computer may be connected to system bus via input output interfaces or any other appropriate mechanism s . It is to be appreciated that the illustrated network connections are exemplary and that other means of establishing communication link s between computers and may be employed.

Furthermore other hardware that is specifically designed for servers may be employed. For example SSL acceleration cards can be used to offload SSL computations. Additionally especially in a network load balancing operating environment TCP offload hardware and or packet classifiers on network interfaces or adapters e.g. on network interface cards may be installed and used at server devices.

In a networked environment such as that illustrated with operating environment program modules or other instructions that are depicted relative to computer or portions thereof may be fully or partially stored in a remote media storage device. By way of example remote application programs reside on a memory component of remote computer but may be usable or otherwise accessible via computer . Also for purposes of illustration application programs and other processor executable instructions such as operating system are illustrated herein as discrete blocks but it is recognized that such programs components and other instructions reside at various times in different storage components of computing device and or remote computing device and are executed by processor s of computer and or those of remote computing device .

Although systems media devices methods procedures apparatuses techniques schemes approaches procedures arrangements and other implementations have been described in language specific to structural logical algorithmic and functional features and or diagrams it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or diagrams described. Rather the specific features and diagrams are disclosed as exemplary forms of implementing the claimed invention.

