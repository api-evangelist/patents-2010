---

title: Methods and systems for fabricating a transaction card incorporating a memory
abstract: A secure card is described that includes a front surface, a back surface, a memory operably placed between the surfaces, the memory having an interface to an external device, a removable image transfer film having a releasable coating disbursed thereon, at least one digitally created image originally applied to the releasable coating in reverse image format, and an adhesive layer. The adhesive layer is operable such that the at least one digitally created image is between the releasable coating and the adhesive layer. The adhesive layer is applied adjacent one or more target surfaces associated with at least one of the surfaces, a selective release transfer process utilized such that the portions of the adhesive layer adjacent the at least one digitally created image remain on the surfaces when the image transfer film is removed from the card.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08387870&OS=08387870&RS=08387870
owner: Secure Exchange Solutions, LLC
number: 08387870
owner_city: Glen Burnie
owner_country: US
publication_date: 20100115
---
This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61 205 201 filed Jan. 16 2009 titled Secure USB Business Card which is hereby incorporated by reference in its entirety.

The present invention relates to flash memory storage devices and more particularly to a USB card adapted for use as a business or ID card with robust exterior graphics and print indicia imparted by a novel thermal transfer and further adapted for distributed digital information protection and control such as for example medical and other providers that employs a patient carried data card with large capacity record storage ensuring confidentiality by allowing others to have access to the patient s selective records via computer in accordance with a hierarchical permissions policy.

A wide variety of memory cards now exist each with different capacities access speeds formats interfaces and connectors. Most of these are relegated to particular form factors and are not compatible with credit card applications. However smart cards are widely used as financial transaction credit cards security access cards electronic toll collection cards debit cards and the like. Smart card technology allows data to be stored in a memory element included in a smart card contact conforming to the ISO 7816 smart card standard.

For example U.S. Pat. No. 5 832 488 by Eberhardt issued Nov. 3 1998 shows a computer system and method for storing medical histories using a smartcard to store data. The smartcard is convenient about the size of a credit card and any new medical data about the individual is simply added to the smartcard. Each time the patient visits a provider the entire medical history of the individual can be easily retrieved. The smartcard makes it possible for an individual s medical history to be read by a computer displayed on the computer s monitor printed or transmitted. When the individual is examined by a physician all observations are added. This allows individuals to carry on their person a complete and consolidated medical history of themselves. However the memory element of conventional smart cards stores only a small amount of data and the smartcard is unsuitable for large records such as radiography image files. In addition privacy is maintained simply by encrypting the patient identifier to preclude unauthorized persons from accessing a given person s medical history. The patent fails to suggest any scheme to maintain passwords or other authorization to access the data and it does not account for the needs of the various attending physicians residents nurses etc. all who may have differing rights to view and or change the medical history

Flash memory is an alternative non volatile computer memory that can be electrically erased and reprogrammed. It is a technology that is primarily used in USB flash drives and uses a specific type of EEPROM Electrically Erasable Programmable Read Only Memory that is erased and programmed in large blocks. However conventional flash memory cards require a specialized adapter or reader such as Universal Serial Bus USB or USB2. Thus to maximize on board memory manufacturers are clearly working hard to integrate the connector interface in a credit card form factor. SanDisk is perhaps the most aggressive with many credit card form factor flash memory cards.

For example United States Patent Application 20060278723 to Raz et al. mSystems Ltd published Dec. 14 2006 shows a USB card device with integral USB contacts such that when flexed bent or folded in the inherent resilience of the card material provides a force for pressing the set of contacts against the electrical contacts of a USB receptacle.

PCT Patent Application Publication No. WO 2005 124932 to Atsmon et al. discloses numerous rectangular credit card type ID devices with USB plug projecting connectors.

U.S. Pat. No. 6 883 718 to Le et al. Imation issued Apr. 26 2005 shows a credit card memory card with USS host connector protruding from the card for direct coupling of the memory card to a computer. The drawings show one corner of the card configured as a protruding USB connector.

U.S. Pat. No. 7 344 072 to Gonzalez et al. SanDisk issued Mar. 18 2008 shows a credit card flash memory card with a pivoting USB connector that can easily be plugged into a host computing device.

U.S. Pat. No. 7 381 076 by Bychkov et al. SanDisk issued Jun. 3 2008 shows a credit card smart card with USB connector in a pull out plug arrangement. The plug arrangement includes a first plug portion including a plurality of electric contacts and a second plug portion. At least part of the plug arrangement is selectively displaceable relative to a remainder of the body and upon pulling out the plug opens into first and second plug portions having sufficient thickness to mate with the electrical connector.

United States Patent Application 20030155425 by Lynch Jeffrey Thomas published Aug. 21 2003 shows a smart card 10 with both flash and CD DVD or like storage. United States Patent Application 20060180674 by Margalit et al. Aladdin Knowledge Systems Ltd. published Aug. 17 2006 shows a smart card with USB connector and biometric sensor such as a fingerprint reader for sampling a fingerprint of a user for authenticating the user.

United States Patent Application 20040129787 by Saito et al. IVI Smart Technologies inc published Jul. 8 2004 shows a secure smart card with biometric verification and an integral Global Positioning Satellite GPS receiver which can provide useful information about the current location of the reader and card at or about the time a particular transaction is taking place. In particular the location data from GPS receiver may be used to disable either permanently or temporarily the reader and or the card in the event either is removed to a location at which their use is not authorized.

Flash memory devices are not traditionally used as business or ID cards. This is in part due to inherent problems with the form factor problems with imprinting lasting text and graphics and problems with security of data resident in the card.

One effort to solve the form factor and security problems is U.S. Pat. No. 7 334 725 to Dan San Disk issued Feb. 26 2008 which shows a flash memory business card with two opposing slits defining a bendable portion within the housing that includes the connecting mechanism. The scope of the invention also suggests configuring the non volatile memory to allow only an authorized party to access personal information stored in the nonvolatile memory but fails to extrapolate how.

Data security is a perilous proposition in some contexts where laws or policies impose strict confidentiality requirements on some shared information. For example in the medical context doctors and health care providers need a reliable and secure approach to assembling comprehensive patient records from distributed sources. The sources may include multiple provider facilities clinics and hospitals each of which maintains their own patient database and cache database changing each time the provider is visited by a particular patient. Outright sharing of the data is difficult due to the security requirements imposed by the Health Insurance Portability and Accountability Act HIPPA . Consequently there is a great need for a reliable method of consolidating and processing an individual s data amongst diverse provider networks that can assemble relevant patient information despite the diversity in their classification and or coding and which will not compromise the requisite confidentiality of the patient.

Generally access to information can be controlled in any number of ways for example by passwords authentication tokens a server based authentication certification system or any combination of the foregoing. However with conventional techniques once access to a file is granted to a user the access to the information contained in file is virtually without limit. The user can for example modify the file copy the file display the file print the file e mail the file and or transfer the file to another information system via a network. After the file is distributed outside of the immediate control security for the distributed file is left to the discretion of those who obtain a copy.

It would therefore be greatly advantageous to provide a secure USB business and or personal ID card that employs a large capacity personal record store a robust security framework for maintaining confidentiality by allowing others to have access at a remote location to the full set of records via computer in accordance with a hierarchical permissions policy all with a true business card form factor emblazoned with robust and vivid color text and graphics.

In one aspect a secure card is provided. The card includes a front surface a back surface a memory operably placed between the surfaces including an interface to an external device a removable image transfer film having a releasable coating disbursed thereon at least one digitally created image originally applied to the releasable coating in reverse image format and an adhesive layer. The adhesive layer is operable such that the digitally created images are between the releasable coating and the adhesive layer. The adhesive layer is applied adjacent one or more target surfaces associated with at least one of the surfaces and a selective release transfer process is utilized such that the portions of the adhesive layer adjacent the at least one digitally created image remain on the surfaces when the image transfer film is removed from the card.

In another aspect a method for applying images to transaction type cards is provided. The method includes coating one side of a disposable base transfer film with a releasable coating digitally printing one or more images onto the base transfer film in reverse image format applying an adhesive coating over the base transfer film including over the images indexing the base transfer film over at least one of the transaction type cards applying at least one of pressure and heat to the base transfer film to adhere portions of the adhesive including the portions adjacent the one or more images to the transaction type cards and peeling the base transfer film from the transaction type cards leaving the one or more images on a surface of the card.

In still another aspect a method for preparing a transfer film is provided. The method includes coating a plastic web in roll form with a release layer that includes at least one of a releasing lacquer a wax and a release coating custom mixed to create a correct release factor creating a digital image file in a CMYK raster image file using computer drawing software printing the image onto the release layer laying on colors in registration patterns in the order black magenta cyan yellow and white to create a reverse image applying an adhesive over both the reverse image and the areas of the release layer that do not contain the image resulting an a transfer applying the transfer to a surface and causing the image to transfer from the plastic web to the surface using a selective release process.

The described embodiments are directed to a secure USB business and or personal ID card system inclusive of the card itself fabrication security software and architecture for allowing individuals such as patients clients etc. to carry voluminous confidential records in his or her pocket without risking tampering or invasion of privacy and for allowing others to have access at a remote location to a full set of records via computer in accordance with a hierarchical permissions policy. The system is herein disclosed in the context of a Trusted Medical Record system to enable patients to carry their medical records on a business card sized flash memory that is shaped and adorned like a business card. However the secure USB business ID card system can also be utilized in other applications such as financial services cards identity cards and other portable record storage device applications.

As an addition or alternative to the magnetic stripe the USB card may be provided with a two or three dimensional barcode containing the same information. In this case it is preferred that a two or three dimensional barcode be applied by an image transfer printed by modified large format digital printer. The transfer is preferably applied by a selective release transfer process as set forth below.

The patient s partial medical records are stored on the USB readable portion of the memory and the patient s complete record is stored on a central server. When the patient presents his or her Secure USB business ID card the provider s office swipes the card to authenticate the user and preferably verifies the patient s signature and then inserts the card in an ordinary desktop computer containing a conventional USB port. The desktop computer then asks for a password and the user nurse physician resident or other user will furnish their password. In one embodiment the password is entered into the desktop computer and in other embodiments it is entered twice for confirmation. The desktop computer sends an electronic key to a secure server. If the password has been recorded on the server the key will be recognized and the secure server will respond by sending another matching electronic key back to the desktop. When the exchange of matching keys is completed the user will receive information that is decrypted at the individual user s permitted level of access. The verification process is completed in a matter of a few seconds. It should be apparent that the card offers four security measures 1 passwords assigned locally according to local policy that must be known to gain access 2 central server based security where the password must be recognized according to pre determined rules 3 the magnetic stripe is imprinted with a unique identity key to provide a third level of security and 4 a signature block for visual authentication.

Information is locked at some levels of access and is open at others based on the user s classification and assigned user rights. Some users will be allowed to read only parts of a record. Some will be allowed to read everything. Some users will be allowed to make changes to a file. Some will be allowed to print and disseminate information. Newly entered information is encrypted and recorded to the Secure USB business ID card on the spot. When a user reads changes or adds to a record the transaction is recorded and it becomes part of an electronic audit trail on the permanent record. Thus if a user gives his or her password to an unauthorized party that person s entry to the system will be recorded and monitored.

As seen in patient Kim Klien goes to the emergency room with shoulder injuries. Her first stop is the Admitting Registrar where Ms. Klien hands her data card to the Registrar. The Registrar verifies the datacard by checking the signature swiping the magnetic stripe and inserting into a computer USB port. The Registrar then enters her own password confirms it and transfers the patient s complete medical records from a central server to the on site provider database. The workflow proceeds to the Triage Nurse Danielle DeFoe where Ms. Klien hands her data card to the Triage Nurse. The Triage Nurse again verifies the datacard by checking the signature swiping the magnetic stripe and inserting into a computer USB port. The Triage Nurse then enters her own password confirms it and proceeds to review the patient s Medical History. The Triage Nurse can access to basic patient information admission history and standard medical records and has authority to view and print any of these records. The Triage Nurse completes her customary duties which include checking the patient s vital signs. This information is keyed into the computer where it updates the provider database and is immediately written to the data card . Ms. Klien next visits the ER Doctor Francis Field who verifies the datacard by checking the signature swiping the magnetic stripe and inserting into a computer USB port. Dr. Field then enters his own password confirms it and makes an initial assessment and reviews the patient s medical information Dr. Field has access to basic patient information admission history and standard as well as restricted psychiatric medical records and is free to edit view and print any of the foregoing. He is alerted to a special note on the patient s file. Ms. Klien next visits the Psychiatrist Doctor Indra Ivy who verifies the datacard by checking the signature swiping the magnetic stripe and inserting into a computer USB port. Dr. Ivy then enters his own password confirms it and makes an initial assessment and reviews the patient s medical information. Dr. Ivy has access to the restricted psychiatric medical records and can view and print these but not the other records. He enters a new note on the patient s file regarding adverse drug reactions. The workflow continues in this manner through to discharge from station to station with each attendant having only the information authority needed to complete their job properly. All along the workflow path an audit trail is being laid revealing who had what access to what data and when.

Thousands of combinations of access policies can be set for the various users as a result of the hierarchical security software of the present invention. Additionally the encryption process allows records to be time limited. Records can be programmed to expire or to become locked after the passage of time. Users can be required to log on to the system for updates thereby lessening the likelihood that a Trusted Medical Record user will mistakenly rely on out of date information.

The information system includes a number of standard computer components including non persistent storage data readers preferably a USB port plus a magnetic stripe reader processor keyboard mouse display printer adapter and communications interface . The readers retrieve persistent data storage from the data card to the information system .

The non persistent storage comprises one or more storage devices used for volatile data storage accessible by the information system . Examples of the non persistent storage include random access memory RAM non volatile random access memory N VRAM and read only memory ROM .

The information system preferably also includes one or more information processors e.g. central processing units CPU keyboard mouse display and printer and other standard computer peripherals as desired.

The information system is connected to a network via a communications link. The network comprises a number of computers and associated devices that are connected by communication facilities. The network can involve permanent connections e.g. cables or temporary connections e.g. those made through telephone or other communication links . Examples of a network include a local area network LAN a wide area network WAN a satellite link and a combination of networks such as an internet and an intranet. The communications link can be established using any combination of well known communications protocols for example X.25 ATM SSH SSL HTTP SMTP NetBIOS and or TCP IP.

In accordance with the present invention the network is coupled to an authentication identification system art authentication certification system an audit server a directory service and a policy server .

The authentication identification system comprises a system to authenticate the identity of the user and patient to whom the data card was issued. For the user the authentication identification system can be an authentication service type device capable of one or more types of challenge response authentication protocols. Examples of challenge response authentication protocols include username password authentication secret question secret answer type authentication or any other authentication techniques to verify the identity of user . Alternatively the user may identify themselves by means of a smartcard a biometric reader e.g. fingerprint reader or palm analyzer etc. Any number of conventional authentication devices using any combination of authentication protocols may be used to augment or replace conventional username password type authentication as may be provided as part of the capabilities of the information system . For the patient the authentication identification system verifies the identity of the patient as read from the magnetic stripe or barcode on data card .

The authentication certification system comprises a system to generate certify and or distribute cryptographic information including cryptographic keys to perform authentication signing and or other cryptological tasks to authenticate the identity of the user . Conventional public key cryptosystems are known and have associated cryptographic keys that can be used to encipher and decipher information. One or more cryptographic keys can also be used to authenticate the identity of the user .

The audit server comprises a separate information system or storage device or devices accessible via the network . The audit server can be used for the collection storage and analysis of auditing information obtained from one or more information systems including any of the following exemplary systems authentication identification authentication certification audit server directory service and policy server .

Within the prior art the audit server may also be referred to as a data logger or a system log. The directory service comprises a system to share public and semi public identity information regarding user as well as other known users with those having access to network . Examples of the directory service include an http server a lightweight directory access protocol LDAP service a relational database management system and a Microsoft Exchange Server. The directory service can provide user specific information for example personal information of the user such as name addresses telephone numbers and email addresses and cryptographic keys used by the user.

Referring back to the non persistent storage this includes an operating system and any number of concurrently running application processes including three in particular application process A is a word processor such as Microsoft Word.

The operating system may be a conventional operating system such as Microsoft Windows or Linux alone or in combination with a virtual operating system virtual machine. A virtual operating system can host other operating systems. Similarly a virtual machine is a programming language interpreter such as Java Virtual Machine or Python . These allow different operating systems to run on the same computer at the same time and it prevents applications from interfering with each other. Each virtual machine is like a machine within the machine and functions as if it owned the entire computer. The operating systems in each virtual machine partition are called guest operating systems and they communicate with the hardware via a virtual machine control program called a virtual machine monitor VMM . The VMM virtualizes the hardware for each virtual machine. With a virtual operating system virtual machine the present software need not be dedicated to the Microsoft operating system.

A program application runs within application process C which runs and enforcement agent C is associated with application process C. Similarly enforcement agent B is associated with application process B within which OS shell application runs. Generally a command line interface or operating system shell or executive may be run as a type of application running in an application process depicted as OS shell examples of which include command.com and explorer.exe for the Microsoft Windows operating system and the bash for the Linux operating system . Examples of an application running inside of application process C include Microsoft Word Adobe Acrobat Reader Netscape Internet Browser and the GNU Image Manipulation Program.

The enforcement agent both B C are instances of a software program that modifies the interface between the application process and operating system kernel and permits additional non discretionary access controls to be enforced without requiring changes to user application programs. In enforcement agent C is associated with application process C within which program application runs and enforcement agent B is associated with application process within which OS shell application runs. Each enforcement agent controls access to the contents of secure files by application running within application process . The access is controlled in accordance with a policy model that permits different classes of users different levels of access to the information depending on predetermined authorization. For example admission personnel will have access to insurance and selected personal information however can only copy it to a selected file and nothing else. Nurses pharmacists and physicians would have policies that grant higher levels of access. Individual users are granted access only to the information that they need for their specific roles in the health care process. The Trusted Medical Record system s multi level policy capability can be custom tailored to provide the high level of security required under the federal HIPPA laws while allowing an extraordinary level of versatility and portability. If an unauthorized person tries to enter the system to read copy or change a medical record the Trusted Medical Record system disallows the action and records the intrusion in an activity log and it notifies the responsible persons automatically. At the Security Policy Server the user name password and patient identifier are matched to a system wide policy that is designed to comply with HIPPA. The system wide policy is maintained as a data table at the Security Policy Server .

In response to a query by the enforcement agent the security policy broker determines whether sufficient authorization exists for the enforcement agent to allow the requested action or actions initiated by user . In other words the enforcement agent communicates with the security policy broker to determine how specific user actions should be enforced. The security policy broker is also responsible for ensuring compliance with the correct security policy whether this policy information is carried within the secure file maintained in the policy broker cache or retrieved from the security policy server .

Each enforcement agent controls access to the contents of secure files by application running within application process the enforcement agent monitors intercepts and as needed mitigates the requested actions performed to and with the contents of secure files . The enforcement agent intercepts the flow of instructions between the operating system and the application program running in application process .

This interception can be accomplished in any number of ways. For example the interception can use one or more existing application programming interfaces APIs and other well known programmatic conventions implemented by the operating system . Information on such interfaces and conventions can be obtained from the published documentation associated with the operating system or obtained from by careful study and analysis of actual programs or obtained using other conventional techniques.

The specific design and implementation of the enforcement agent depends on the operating system and includes measures to identify detect and as necessary modify the flow of instructions between the application program and the kernel of the operating system . By way of example the enforcement agent can be implemented on a process by process basis for all application processes or possibly as an enhancement to the programs and tools provided with the operating system or possibly even as an extension to the kernel of the operating system . Such an extension to the kernel can for example be implemented using a pseudo device driver or other loaded module of the kernel executive of the operating system or by enhancing the capabilities of the existing system wide library routines such as glibc or kernel32.exe or by extending the capabilities of existing command level applications such as bash ash or command.com or by modifying the attributes of each application process as it is created by the operating system .

The secure USB Card includes the data files for a patient which are read into the USB reader upon insertion therein. These patient files include data files secure files policy broker caches and enforcement agent caches . Each secure file contains both information to be secured e.g. from a file or generated by the user and additional information according to the invention to maintain its security. The contents of a secure file cannot be successfully accessed without the intercession of an enforcement agent and a security policy broker implementing the security policy under which the security policy broker was configured. For example the secure file can contain a Microsoft Word file which can be shared with others but whose content is accessed through the use of a Microsoft Word application running in an application process C associated with an enforcement agent C. The details of the secure file are discussed below in relation to .

The policy broker cache is used by the security policy broker to retain and reuse information used to make enforcement decisions. The policy broker cache can store additional information on the security policy identity information about users of the invention and or other information. The policy broker cache can be shared between multiple security policy brokers and or there may be one policy broker cache for each security policy broker .

The enforcement agent cache is used by the enforcement agents to store any temporary information created by applications protected by the enforcement agents . Information in the enforcement agent cache is protected from unauthorized access. Temporary information can include for example automated backups automatically generated revisions and others types of temporary files. The enforcement agent cache is used to ensure that this temporary information is maintained in a protected state and that no unprotected copies of any temporary files are vulnerable to unauthorized access. The enforcement agent cache may also temporarily store decrypted plaintext blocks of information otherwise contained within protected secure files in an encrypted state. In other embodiments the enforcement agent cache may be shared between multiple enforcement agents and or there may be one enforcement agent cache for each enforcement agent .

The policy broker cache and or the enforcement agent cache can include a time to live TTL interval where the cached information remains authoritative for a specified interval of time. After the time to live interval ends the cached information expires. The TTL interval may vary according to the specific security policy in place and indeed different TTL values may be used with different users for different files and or with different information systems.

With regard to and in addition to the prior art connections via the network the information system is connected via the network to an audit server a directory service and a security policy server . The audit server receives the detailed event data from the enforcement agents and the security policy brokers of various information systems coupled to the audit server via network . This event data indicates what users attempted what actions under what conditions along with other security related information collected by enforcement agents and security policy brokers . The collection of these events can be directed by the security policy. In various embodiments of the invention there may be one audit server multiple audit servers or no audit servers . In the case of no audit server all information that would otherwise be sent to an audit server may be stored in information system .

The directory service contains additional information associated with users required for the operation of the information systems utilizing the current invention. Such additional information includes for example identity records see below and other configuration data for the enforcement agents and security policy brokers specific to users of the invention. In various embodiments of the invention there may be one directory service multiple directory service or no directory service . In the case of no directory service all information that would otherwise be sent to a directory service may be stored in information system .

The security policy server provides updates to the security policy broker on the security policy for the information system . Depending on the security policies of a given organization and the privileges of the user the information system may be permitted to function for periods of time without a connection to the security policy server depending on information stored with the policy broker cache and enforcement agent cache . If such disconnected operation is permitted the actions of the user can be further restricted while the information system is in a disconnected state. In addition to the initial activation of the information system the information system at other times can access the security policy server for additional security policy information. For example the information system can access the security policy server periodically non periodically and or in response to rules established in the security policy itself. In various embodiments of the invention there may be one security policy server multiple security policy servers or no security policy servers . In the case of no security policy server all information that would otherwise be sent to a security policy server may be stored in information system .

The security policy obtained from the security policy server may be specific to a given person a particular information system or both. Such person specific information can include for example authentication related credentials e.g. passwords cryptography keys biometric attributes and authentication tokens and references to various authenticated related information located elsewhere via the network e.g. passwords cryptography keys biometric attributes and authentication tokens . The security policy information obtained from the security policy server can be stored for an indefinite period of time in the policy broker cache a defined period of time in the policy broker cache before needing refreshment by the security policy server or retrieved from the security policy server each time it is required.

In other embodiments the security policy broker can obtain authentication related information from the security policy server the authentication identification system authentication certification system and or the directory service . The security policy broker can also make use of authentication mechanisms provided in the operating system .

The header section includes secure file identification a security policy namespace a version and a manifest . The secure file identification includes a quasi unique identifier to identify the secure file without relying upon any operating system specific attributes e.g. file name . Conventional techniques to generate a quasi unique identifier include for example generating a sufficiently large pseudo random number which may be used as a quasi unique identifier issuing sequentially numbered identifiers from some agreed upon location and generating identifiers in a relational database.

The security policy namespace includes an identifier specific to the security policy under which the secure file is being managed. Conventional techniques to assign such an identifier include for example using the fully qualified domain name of security policy server expressed as a string of ASCII characters and the distinguished name DN of an LDAP entry within the directory service . The version identifies the revision level of the format for the secure file .

for example a pair of numerical values expressing a major and minor revision number and the URL of a formal extensible markup language XML data type definition DTD describing the format of the secure file .

The manifest provides details of the payload section and includes one or more manifest records illustrated in where each manifest record further describes a payload present in the payload section . Each manifest record in the manifest corresponds to a specific payload in payload section . For the exemplary secure file in the manifest includes four manifest records where the first manifest record corresponds to the directive payload the second manifest record corresponds to the primary payload the third manifest record corresponds to the ancillary payload A and the fourth manifest record corresponds to the ancillary payload B.

The offset includes offset pointers and other bookkeeping attributes useful for randomly accessing individual blocks of information the payload section associated with the manifest record . Information maintained within offset may be advantageously used with information maintained within the crypto keys thus permitting this same random access to encrypted payloads in the payload section .

The descriptor is used to at least differentiate between different types of payloads in the payload section e.g. a directive payload a primary payload and an ancillary payload A and may also include additional descriptive information specific to the payload . The descriptor can include for example the same types of file type information that are conventionally associated with files or other types of file system specific information were associated in the file from which the payload originated at the time when the secure file was created. Such file type information can include for example a file name a file extension type a creation date size of the file and a character encoding method e.g. unicode utf 8 iso latin 1 .

The security label includes an encoded representation of a security label in associated with the corresponding payload in the payload section . The security label can be cryptographically protected e.g. digitally signed and or encrypted . The crypto keys include the cryptographic information used to encrypt the secure file . Examples of information contained in the crypto keys include cipher modes cipherkeys public keys private keys and PKI certificates. In various embodiments some or all of the cryptographic information may be advantageously stored in other locations e.g. a smartcard or FIPS 140 type device connected to information system and the crypto keys contain one or more pointers or references to this remotely stored information. Crypto keys may themselves also be encrypted and protected using any number of conventional ways used to protect similar types of cryptographic information.

A frequent problem associated with many prior art cryptographic implementations is the requirement to decrypt the entire ciphertext of a file in order to access just a small section of the plaintext. Just as most operating systems permit quasi random access to a block within a given file the invention advantageously provides a technique for the enforcement agent to access and decipher any arbitrary payload block e.g. or of a payload in the payload section that may be encrypted. More specifically the present invention permits the use of blocks cipher modes that allow cryptographic operations to be performed on arbitrary blocks within a secure file thus permitting random access cryptologic operations to the underlying cleartext in each payload within payload section . This capability is the so called random access property associated with some block cipher modes. For example cipher block chaining mode CBC ciphers permit parallelizable decryption thus permitting random access read operations to a file and electronic code book ECB mode ciphers permit parallelizable encryption and decryption thus permitting random access read and write operations to a file.

Referring back to the payload section includes zero or more directive payloads a primary payload and zero or more ancillary payloads illustrated as ancillary payload 1 A . . . ancillary payload N B .

The directive payload can include a security directive record associated with a security label . The security label can be but need not be the security label associated with the manifest record of payload . The directive payload can be cryptographically protected. To facilitate the enforcement of the security policy the enforcement agent provides the contents of the directive payload to the security policy broker . The security policy broker can obtain information directly from other authoritative sources for example the security policy server and or the directory service to ascertain if the directive payload remains current and to verify the accuracy of any digital signature s associated with directive payload if present. The payload section can include multiple directive payloads in various embodiments for example one directive payload for primary payload and all ancillary payloads one directive payload corresponding to each primary payload and ancillary payload and zero or more directive payloads corresponding to one or more primary payloads and any ancillary payloads .

The primary payload contains the exact same information contained in file to be protected and controlled. The primary payload can also contain information generated by the user to be protected and controlled. The primary payload as with the directive payload and ancillary payloads may be cryptographically protected e.g. digitally signed and or encrypted .

The ancillary payloads contain other types of information associated with the file or other information to be protected and controlled. Each ancillary payload is composed of an ordered sequence of bytes characters or other atomic elements of storage in a fashion similar to that of the primary payload and utilizes the same storage semantics dictated by the underlying file system. Ancillary payloads can also be used to distribute the information to be protected across multiple payloads thus permitting different security directives to be associated with different sections of the secure file . For example if a file to be protected is composed of both text and images the text can be placed in the primary payload and assigned one security label and the images can be placed in one or more ancillary payloads and assigned the same and or other security labels . By way of example this flexibility permits the invention to protect the contents of a complex HTML file composed of multiple MIME blocks by distributing each of the MIME blocks into their own ancillary payloads within the secure file .

Advantageously this capability could also be used to apply security labels and security directives to elements of information more granular than that of an entire file allowing each element to be protected and controlled differently. Examples of such information elements include subsections of files linked or embedded objects within a file storage allocation within databases e.g. tables rows columns and cells or any other addressable element of digital or digitized information. This capability permits for example having a single version of a file but different users having different views of it based on which elements they were authorized to access.

To ensure ongoing compliance with the security directives associated with the contents of secure file it is important that the information contained within the secure file cannot be accessed through some means other than via the enforcement agent and security policy broker . However it is still be possible to use other programs and utilities to act upon the secure file as a whole without explicitly taking action on its contents. For example secure files may be backed up to archival media copied to floppy diskettes and or distributed by email.

The invention uses cryptography to maintain the confidentiality and integrity of the information within secure files while still permitting these secure files to be handled by the operating system . Thus while a user may still use any discretionary abilities afforded to them by their information system and distribute secure files to others the information within these secure files still remains sacrosanct and the ciphertext within cannot be successfully be decrypted without proper authorization. Further still since proper authorization and decryption takes place under the supervision of the enforcement agent and security policy broker the information contained within this redistributed secure file remains under the protection and control of the security policy being enforced by the enforcement agent and security policy broker . Any conventional cryptographic techniques can be used to digitally sign and or encrypt the contents of secure file or any portion thereof. Examples of conventional encryption techniques include public key cryptosystems symmetric key cryptosystems such as block ciphers and stream ciphers cryptographic hash algorithms such as SHA 1 MD5 and HMAC algorithms and digital signing and verification. The cryptographic keys are stored and protected using conventional techniques. Examples of conventional cryptographic key techniques include passwords and passphrases for the protection of cryptographic keys and FIPS 140 type storage devices.

In various embodiments of the invention any of the data structures used by the invention can be encrypted and or digitally signed. For example if security label is digitally signed by the security policy server the security policy broker verifies the validity of this digital signature before attempting to look up the corresponding security directive record .

Target identifies a component of the information system and represents any hardware or software element within an information system that the security policy broker has been configured to protect. Each target has an associated security label which directs the security policy broker to the security directive record associated with the target. For example the target can identify a secure file a communications interface a printer USB reader and a folder a directory or other file organization structure within USB reader .

The security label is an electronically encoded representation of a humanly readable artifact e.g. a text string symbol glyph or other marking which can be made apparent to user in any number of ways. For example the security label can be made apparent to user by being shown on the display rendered on hardcopy by the printer or captured as part of the name of the secure file placed in USB reader . The security label is not limited to simple text and may include any marking or indicia. This flexibility allows for example security labels to be encoded in different languages allowing meaningful country specific word choices without incurring the administrative overhead of having to maintain a large number of identical security directives.

For targets that are within secure files security labels and security directive records are used to apply non discretionary access controls to each payload contained within the payload section of secure file . The enforcement agent accessing the specific manifest record associated with each payload passes the security label contained within manifest record to a security policy broker . The security policy broker is then able to determine the security directive record associated with that security label under the current security policy.

The mechanism used to associate a security directive records with non file targets varies depending upon the specific architecture of each operating system or virtual operating system virtual machine and the manner in which an enforcement agent is configured. For example UNIX and UNIX type operating systems represent hardware devices and software constructs as file like devices e.g. dev proc and a pseudo device driver can be used to associate an enforcement agent with these components.

The security directive is formed as a data structure and the relationships between the components of the data structure are illustrated in . The arrowheads in and in do not refer to directionality but instead indicate the type of relationships between components. A single black arrowhead e.g. between security directive record and security classification record indicates exactly one and can be read as security directive record has exactly one security classification . A double black arrowhead e.g. between security directive record and security label indicates one or more 1 and can be read as security directive record has one or more security labels . A double outline arrowhead e.g. between rule record and c list record indicates zero or more 0 or 0 1 1 and can be read as rule record has zero or more c lists . A single outline arrowhead e.g. between security directive record and crypto flags indicates zero or exactly one 0 1 and can be read as security directive record has zero or one crypto flags .

The logical structure of security directive begins with the security directive record . The various components of the security directive record can be referred to as records although other types of data structures and or formats can be used to implement this logical structure. For example the logical structure can be implemented using arrays linked lists data sets b trees queues and lookup tables.

The security directive record includes one or more rule related records a security classification zero or more security labels and zero or one crypto flags . In other embodiments instead of having both rule related records and a security classification the security directive record includes one or more rules related records and zero or one security classification or the security directive record includes zero or more rule related records and a security classification .

The rule related records include rules that specify how specific actions and conditions are to be handled with respect to the payload of a secure file or other target . Any specified conditions must be satisfied before the application is permitted to perform the specified actions. The rule related records include r list records rule records a list records c list records e list records s list records action records condition records event records and subject records . Each r list record includes one or more rule records . Each rule record includes zero or more a list records zero or more c list records zero or more e list records and at least one s list record . Each a list record includes at least one action record . Each c list record includes at least one condition record . Each e list record includes at least one event record . Each s list record includes at least one subject record .

The rule related records include elements referred to as lists although other types of data structures and or formats can be used for example arrays linked lists data sets b trees queues and lookup tables.

An action record comprises any activity performed upon the target of a security directive record . Examples of actions include opening and closing a payload of a secure file making changes to a payload of a secure file making a copy of a payload of a secure file making a copy of secure file deleting a secure file creating a new secure file printing a payload of a secure file printing a screen capture of display while payload is visible unauthorized printing of unsecured files to secured printers transmitting a copy of a secure file to another party through email or the network transmitting unsecured files through a secured communications device to a destination outside of the local area network and placing copies of unsecured files on secured diskette drive.

A condition record comprises any condition or conditional expression that can be measured or evaluated within the context of the information system . Examples of conditions include restrictions on time of day a payload within a secure file can be accessed the availability of a low latency network connection to the network and how the identity of a subject in the subject record must be authenticated.

An event record also referred to as an auditing event record comprises an auditing related activity associated with a given rule and causes an audit record to be written depending upon the specifics of the event. Examples of events include the creation of auditable records when a given rule is evaluated by the security policy broker i.e. a rule evaluated event when an action associated with a given rule is permitted to take place by the security policy broker i.e. a rule allowed event and when a given action associated with a given action is not permitted to take place by the security policy broker i.e. a rule denied event .

A subject record comprises one or more users and or processes against which the rule record applies. Examples of a subject record include Joe B. Smith and all employees. Different types of action records condition records and event records can be applicable to different types of secure files depending on for example the nature of the secure file the format of the secure file the application being used to manipulate the secure file or how the secure file is used. For example a secure file having auditory information can have an associated action record of play through speaker while this same action has no meaningful semantic equivalent for a secure file having JPEG information. Conversely a secure file having JPEG information can have an associated condition record of black and white image while this same condition has no meaningful semantic equivalent for a secure file having auditory information.

The security classification record advantageously allows security classification of large numbers of targets into compartments or categories in a manner that simplifies the management of the protections afforded by the invention. The security classification record is a category or compartment to which confidential information is assigned to denote the degree of damage that unauthorized disclosure might cause. Depending upon the specific security policy any number of such categories can be defined. The security classification record includes a security level and zero or more security compartments . The security level comprises a hierarchical representation of the relative confidentiality associated with the security directive as exemplified by the policy table of . One or more security levels can be determined for the security policy. For example a company or government agency may desire that information be hierarchically organized according three security levels of classified secret and top secret. In some embodiments security level can be represented as a numerical value where lower valued security levels represent less confidential information and higher valued security levels represent more confidential information.

Each security compartment is a non hierarchical attribute of the security directive . The security compartments permit further compartmentalization which may also be referred to as compartmentization for a security level . Compartmentalization provides a technique to add additional security related categories that allow information to be managed and shared between users only to the extent required for the performance of their individually assigned duties. In other words compartmentalization may be conceptually thought of as a mechanism of dividing information into categories so that some users may be granted permission to access information in one category and not another. The use of compartmentalization techniques provides a mechanism for implementing the need to know principle common to many secure environments.

The crypto flags specify what cryptographic techniques if any are associated with the security directive record . If no cryptographic techniques are to be used the crypto flags may indicate this condition or the crypto flags may be omitted. The crypto flags dictate the type of cryptography if any that the security policy requires for target . Examples of crypto flags include specific algorithms that can or must be used allowed cryptographic key lengths specific requirements for crypto key storage e.g. only use FIP 140 type device and other crypto related requirements or specifications. The crypto flags do not necessarily include a specific cryptographic state such as an actual cryptographic cipher key but specify the mandated cryptographic techniques.

The data structure of the security directive can be stored in a variety of locations including for example the policy server the directory service the policy broker cache and a secure file . In most cases however the canonical copy of any given security directive record associated with security directive is maintained by the security policy server with copies of the these records temporarily stored in other locations for the convenience of processing without always requiring a networked connection to the policy server .

For example a copy of the rule related records associated with the security directive record can be part of the directive payload of the secure file . The rule related records can then be loaded and temporarily maintained within the policy broker cache . In another embodiment the rule related records can be retrieved as needed from the policy server . In another embodiment a portion of the rule related records can be stored as part of the directive payload of the secure file and another portion of the rule related records can be retrieved as needed from the policy server . By requiring retrieval from the policy server the security policy can be updated for secure files that have previously been distributed to information systems.

In other circumstances for example for non file targets the security directive record associated with a target may be implicitly specified as part of the initialization of the security policy broker for the information system . The security directive can be dynamic. Any of the components of the security directive can be modified in any way at any time by an authorized party or process and the resulting changes are honored by all subsequent enforcement decisions rendered by the security policy broker . For example if the rules related records are modified upon retrieving the updated security directive record security policy broker determines policy for targets associated with security label according to the modification. If a large number of secure files have the same security label all of the secure files are protected and controlled according to the modified rules of the security directive .

The identities are stored within the security policy server and or the directory service . The identity specifies the manner by which the security policy broker can authenticate user and the security clearance that user is authorized to bold. An identity is created for user by a competent authority. The relationship between the user and the identity is illustrated with a user identity relationship . The user identity relationship is verified via the authentication credentials . The invention can utilize any number of prior art authentication methods and protocols to validate and verify the identity of user and thus validate the user identity relationship .

The logical structure of identity begins with the identity record and the relationships between the components of the data structure are illustrated using the same relationship notations used in . The various components of the identity record can be referred to as records although other types of data structures and or formats can be used to implement this logical structure within the invention. For example the logical structure can be implemented with arrays linked lists data sets b trees queues and lookup tables.

The identity includes one or more authentication credentials one or more security clearances and zero or more authorization directives . Each authentication credential includes a password zero or more token zero or more biometric and zero or more crypto keys . In other embodiments the authentication credential can includes at least one of a password a token a biometric and crypto keys or any combination of them. Other prior art identity verification techniques can also be employed.

The password is a shared secret known to both the authentication identification system and the user . The password can be a conventional text string e.g. alphanumeric or can be any information type determined by the user as secret information to obtain access to the information system . Other embodiments may utilize any type of secret information that can be shared between user and the security policy server and readily provided by user when requested.

The token contains information specific to the hardware authentication token permitted to be used to authenticate the identity of user . Examples of the token include the type of hardware authentication protocol being used the location of the authentication identification system to be used and other types of hardware specific authentication information that may necessary.

The biometric contains information specific to the biometric authentication device permitted to be used to authenticate the identity of user . Examples of the biometric include the type of hardware authentication protocol being used the location of the authentication identification system to be used and other types of biometric hardware specific authentication information that may necessary.

The crypto keys contain cryptologic information necessary to authenticate the identity of user based on one or more cryptographic keys. For example if PKI based authentication is being used crypto keys may contain the public key of user signed by a recognized certificate authority. All of the authentication credentials including password token biometric and crypto keys are based on well known and well established prior art authentication techniques and protocols. Different embodiments may implement these various authentication credential records in different ways. In some embodiments the security policy broker may also rely upon any authentication mechanisms provided as part of the operating system in information system .

Each clearance record provides the security clearance authority given to the user . Each classification record includes a security level and zero or more security compartments . The security clearance is a property associated with users and the security classification is a property associated with targets. Thus the security compartments and the security level of the identity record mirror the security compartments and the security level respectively in the security directive record .

The authorization directive constrains what protections and controls user may apply to information. The authorization directive is used to apply non discretionary controls that user may be mandated to apply with regards to targets of security directives . The authorization directive specifies what elements of the security policy e.g. security labels and security directives records must and or may be applied by user . Each authorization directive has the same form as a security directive record can contain all of the information contained in a security directive record and further specifies the circumstances and conditions under which the included security directive record applies.

To determine if the user can perform the requested action to a secure file or other target the security policy broker performs a clearance classification check and an identity subject check . To perform the clearance classification check the security clearances of the identity record and the security classification of the security directive record are compared. More specifically the security compartments and the security compartments are compared and the security level and the security level are compared. To pass the clearance classification check the security clearances of the identity record must dominate e.g. via the Bell LaPadula domination rule the security classification of the security directive record . For this embodiment to pass the clearance classification check the security compartments must include or be as large as the security compartments and the security level must be at least as great as the security level .

To perform the identity subject check the subject associated with the security directive record is used. The security policy broker authenticates the identity of user using one or more of the authentication credentials associated with the identity record . Based on the strength of the results from the identity subject check the security policy broker ascertains if user satisfies the rule . The identity subject check is performed when a subject record is present in the security directive record .

The creation of the identity record may require additional identity records a subset of such records and or appending additional data to existing records in the directory service . In block the user initializes the information system . As part of the information system initialization the enforcement agent B can be associated with operating system shell in application process B. Additionally the security policy broker can be initiated to work with enforcement agent B.

In block the user is authenticated. The information system matches the user with the identity and associated identity records . The matching is accomplished with the authentication credentials . The user may be required to reply correctly to authentication challenges by the information system . If the user provides the appropriate response s based on the authentication credentials the user is matched with the identity and associated identity records . In other embodiments the matching can occur using any conventional techniques. For example the information system can match the user based on authentication techniques implemented by the operating system . Once authenticated the information system matches the user with identity and this user identity relationship is illustrated in with the dotted line .

In block an application is loaded. The user starts up the application within the application process C. In some embodiments the invention is in either an active state or an inactive state. For the active state when the operating system loads application program into non persistent storage enforcement agent C is associated with the application process C. The enforcement agent B associated with the operating system shell monitors the application processes that the operating system shell loads into the non persistent storage . When the operating system shell loads the application process C into the non persistent storage the enforcement agent B assigns the enforcement agent C to the application process C transforming it to application process C . For the inactive state enforcement agent B does not assign enforcement agent B to application process C in which case secure files can neither be created nor accessed by application in application process C. In other embodiments various actions within this flow could cause enforcement agent C to be assigned to application process C.

In block user loads a file using the application . Loading a file can include for example creating content opening an existing file and manipulating the application e.g. a file manager which does not open and load a file in the same manner as an application normally used to create and manipulate that type of file but which may take certain actions on the file .

In block the user requests to save the file. Enforcement agent C intercepts the resulting data saving request made by the application process C to the operating system .

In block the security policy broker determines based upon the authorization directive that the user must protect the file and proceed on to block . If authorization directive does not require that user protect file or if an authorization directive does not exist the user has an option to choose whether to protect the file . If the user chooses not to protect the file the flow ends at block and the application conventionally saves the file .

In block the user requests to protect the file. In some embodiments this request can originate from the user selecting this action via the title bar icon . In other embodiments this request can be initiated through a separate application program or utility.

In block user selects a security label to be associated with the secure file. The security label is assigned as security label with the manifest record s of the payload s within which the information contained in file is to be stored. If the user selects to assign a previously defined security label flow proceeds to block . If the user selects to create a new security directive flow proceeds to block . Only the security labels that the user is authorized to assign including the option to create a new security label as specified in authorization directive are offered to the user for selection in block .

In block the security policy broker retrieves the security directive record corresponding to the selected security label . The security policy broker can retrieve security directive records from for example the policy broker cache and or the security policy server .

In block user creates a new security directive . Creating a new security directive entails creating a security directive record .

In block the security policy broker validates that the user is authorized to apply the selected security label as the security label of the manifest record for the secure file . If user created a new security directive in block the new security directive is validated. The validation can include verification of the authentication credentials if required by security directive record . If user is authorized to apply security label flow proceeds to block . If the user is not authorized to apply the selected security label flow returns back to block or continues to block . If at block the user was required to protect the file but user does not select an authorized security label user is unable to save the file as secure file . In some embodiments if in active state user is prohibited from saving file .

In block the enforcement agent C generates the secure file with file becoming the primary payload and applies the cryptographic techniques as required by the crypto flags of the security directive record . The manifest record of primary payload contains security label as selected via blocks and . The security policy broker can require the user to present authentication credentials to perform acts of cryptographically signing one or more parts of the secure file . The enforcement agent C and the security policy broker can communicate with the directory service to determine various identity information on potential recipients of the file such as identity group resolution contact details and crypto keys. If desired enforcement agent C can securely delete file at step .

In block if required the security policy broker logs the creation of the new secure file to the audit server . If at block user was denied authorization to apply desired security label security policy broker may log the attempted security label to audit server . Logging may be required by the security directive record associated with the selected security label as specified within the e list .

In block the flow ends when the user closes the file or when the user closes the file without saving or protecting the file . In another embodiment secure file may not be physically created in USB reader until user chooses to save file .

In block the user requests to access a secure file via application C in application process C. Enforcement agent C intercepts the request made to the operating system by the application process C accessing the secure file .

In block the enforcement agent C determines if the selected secure file can be accessed. The enforcement agent C checks the user identity relationship using the authentication credentials . If the user passes the check the secure file is accessed and flow proceeds to block . If the enforcement agent C and security policy broker are not available the operating system can start the enforcement agent C and the security policy broker . If the enforcement agent C or the security policy broker cannot be found or started or if user fails the check i.e. cannot provide the required authentication credentials to validate the user identity relationship flow proceeds to and ends at block and the user cannot access the secure file .

In block the enforcement agent C provides the security policy broker with header section of the secure file . In block the security policy broker obtains the security directive record associated with the security label for the primary payload . The security directive record can be contained for example within the directive payload of the secure file within the policy broker cache and or retrieved from the security policy server . If the security directive record is located within the directive payload the enforcement agent C forwards the security directive record to the security policy broker . In other embodiments the enforcement agent C can provide callback functions to the security policy broker to retrieve the directive payload .

In block the security policy broker performs a clearance classification check and an identity subject check . To perform the checks the security policy broker accesses the security classification record and the subject records for the security directive record . As discussed above the clearance classification check is performed using the security clearance records of the identity record associated the user and the security classification records of the security directive record associated with the security label . As discussed above the identity subject check is performed using the identity record and the subject record . If user passes flow passes to block . If user fails either the clearance classification check or the identity subject cheek user is denied access to the payload of secure file and flow proceeds to block .

In block the enforcement agent C determines whether the crypto keys from the manifest record corresponding to the payload s being accessed within the secure file can be accessed. The crypto keys of the secure file are accessed via the crypto keys for the identity record . Crypto keys may be required in order to decrypt a payload but crypto keys may also be encrypted. In various embodiments various mechanisms may be employed to provide enforcement agent C with access to crypto keys to decrypt payload of secure file . For example enforcement agent C may communicate with policy server to have crypto keys decrypted and re encrypted in such a manner that crypto keys are able to access crypto keys . As another example enforcement agent C may retrieve crypto keys which are stored on security policy server rather than within manifest record . As a further example payload may not be encrypted. If the crypto keys for the identity record decrypt crypto keys flow proceeds to block . If the crypto keys cannot decrypt crypto keys user is not permitted access to payload and the flow proceeds to block .

In block the enforcement agent C loads one or more payloads from the payload section of the secure file into non persistent storage associated with application process C provided that user has the required authorization to access the desired payload blocks etc. It is possible that different payloads e.g. primary payload and each ancillary payload have different security labels and hence different associated security directive records such that user may be authorized to access one payload but not another. Any encrypted blocks can be decrypted by the enforcement agent C using the accessed crypto keys . Thus application within application process C is able to reference primary payload just as if it were the original file .

In block the user requests an action on the information in a payload of the secure file . The enforcement agent C intercepts the request from the application in application process C to the operating system .

In block the security policy broker evaluates the requested action by checking rule related records of the security directive records to determine if the user is permitted to perform the requested action. Additionally as an option the security policy broker can again verify the user identity relationship . For example the user can be required to provide and or revalidate authentication credentials prior to being authorized for the action.

If the rule related records of the security directive records has action records the security policy broker notifies the enforcement agent C that the user is authorized for and or prohibited from the actions of the action records . If rule related records has condition records the security policy broker determines if the condition records are satisfied and notifies the enforcement agent C whether or not the association action should be permitted. If the action is permitted flow proceeds to block otherwise if the action is not permitted flow proceeds to block .

In block user is authorized and the security policy broker notifies the enforcement agent C that the user can continue with the request. Enforcement agent C passes the request made by application C to the operating system .

In block user is not authorized and the security policy broker notifies the enforcement agent C that the user cannot continue with the request. The enforcement agent C prevents the action from occurring by not permitting the intercepted request made by the application process C to proceed to the operating system and providing an appropriate response to the application within application process C. In other embodiments this response may emulate operating system request return values. In other embodiments this response may include request return values specific to the invention. The enforcement agent C can also present an error message see to the user via the display .

In block the user is denied access to the contents of secure file as a result of decisions made in blocks or .

In block the result of previous block steps and are audited if required by security directive records . If the security directive record has event records the security policy broker and or the enforcement agent C supplies a record audit of the events to the audit server . Such audit logs may for example contain information such as the secure file identifier of the secure file the identity record of the user identification of the information system the security label the application the action attempted the conditions relating to condition records and the success or failure of the requested action. In other embodiments the enforcement agent C can access the audit server periodically non periodically and or on demand when an event occurs. In some embodiments auditable events may be temporarily stored in the enforcement agent cache by enforcement agent C and in the policy broker cache by the security policy broker prior to their being transmitted to audit server .

As long as the user continues to access secure file flow proceeds from block to block . The enforcement agent continues to intercept requested actions and the security policy broker continues to intercept these actions in the manner so described blocks . Any additional files created in persistent storage by application that are associated with the contents of secure file e.g. temporary files earlier revisions of the file and backups of the file are stored either within enforcement agent cache or as other secure files. If the crypto flags record of security directive record specifies that such information is to be encrypted all such additional and or temporary files are encrypted appropriately.

The presence of the invention in the information system can be indicated to the user in a variety of ways e.g. visual and or audio . For example for operating systems with a graphical user interface GUI such as Microsoft Windows or X Windows the presence of the invention can be shown visually and user can be provided with various GUI elements for interacting with the invention. Sound and other acoustic indications can also be used to facilitate user interaction in a manner appropriate to the operating system and user interface.

Continuing with this example if an enforcement agent is assigned to an application process having GUI elements a title bar icon in the title bar in the window for the application process can be provided. The title bar icon indicates whether the information displayed in window is contained in a secure file and displays the associated security label i.e. determined by the security label associated with the manifest record of the payload containing the displayed information as application window label . If information is being displayed from multiple payloads e.g. both primary and ancillary payloads the label of title bar of the application window is updated appropriately. If application process has multiple application windows each title bar icon and application window label will reflect the security label associated with the information specific to that window.

The title bar icon of window can further be selected to reveal a security policy broker menu . For example the user can if authorized convert a file to a secure file view currently authorized actions on the payload of secure file and modify security directive records . Selecting one or more of these options may cause the security policy broker to launch additional dialogs for user input and or output as required by the information being manipulated. Within some application processes such as a file manager menu may be appended to a context menu often associated with a secondary mouse button click such that user may select a file and display security policy broker menu .

Other informational messages may be displayed as needed in a fashion common to GUI display by the enforcement agent or security policy broker . In some embodiments the graphical elements of the invention e.g. title bar icon application window label menu and message are implemented using conventional GUI constructs provided by the operating system that are outside of the direct control of application displaying information within window e.g. within the window manager itself and not the application . Thus the graphical elements associated with the invention are unapparent to and exist outside the knowledge and control of application .

In general an operating system graphical user interface e.g. the desktop in Microsoft Windows is used for the operating system and an application graphical user interface e.g. a window in Microsoft Windows is used for an application . The operating system graphical user interface and or the application graphical user interface can be adorned with additional elements to identify the enforcement agent and or the security policy broker . Further a task bar icon or equivalent of the operating system graphical user interface and or a title bar icon or equivalent of the application graphical user interface can be used to identify the enforcement agent and or the security policy broker .

Other embodiments for operating systems utilizing a GUI may use similar techniques to allow the user to control and interact with the invention. In other embodiments without a conventional GUI other exemplary forms of interacting with the user may be used depending upon the capabilities provided in the operating system. To illustrate the operation of the invention outside the medical records context another example is provided. Consider a company that establishes an information classification scheme with five security levels with values 0 to 4 and four security compartments called HR FA SM and SM . The five levels in ascending order of confidentiality along with their corresponding semantics are public level 0 official use only level 1 internal use only level 2 company confidential level 3 and restricted level 4 . The four compartments are associate with various aspects of the company s business units human resources FIR finance and accounting FA sales and marketing SM and product development PD . The company s security directives stipulate that in the absence of file specific rules a user may have read only access to the payload of a secure file only if their individual security clearance level i.e. security level is greater than or equal to the classification level i.e. security level associated with the information contained in a secure file .

Example users in the company include Bob the Vice President of Sales and Marketing with a non compartmentalized security clearance of restricted level 4 as well as security clearances of SM 4 and FA 3 Marie Bob s assistant with a non compartmentalized security clearance of level 2 and Alice a human resources manager with a non compartmentalized security clearance level 3 as well as security clearances of HR 3 and FA 2.

A security directive of the company requires that only senior human resources personnel may create and share information related to employee salaries. An increasing number of regulations also require that the company protect personal and private data. The invention implements this security policy to ensure that an employee s salary which is deemed private is not released to unauthorized individuals.

To meet this security directive the company defines security directive record with a security label SALARY which has a security classification record of HR 3 i.e. a security level of 3 and a security compartment of HR . Additionally the security directive record has a security classification record of HR 3 for actions other than read via an action record . In other words users with a general clearance record having a security level of 3 or higher can only read SALARY labeled secure files unless the user also has a clearance record having a security compartment of FIR at a security level of 3 or higher. Further the rules in the security directive record for SALARY also permit only users who are members of the human resources department identified via a subject record to label files as SALARY via an action record and that any denied actions be audited via an event record .

Alice creates a salary report for the company as a secure file using for example Microsoft Excel and selects the security label for the secure file which is incorporated as the security label in the secure file . Alice sends the secure file with the salary report as an email attachment to a distribution list via for example Microsoft Outlook. Bob receives the secure file and is permitted to open it since he has a security level of 4. I however when Bob attempts to print the report or to copy its content to another document the enforcement agent prevents him from doing so as he does not have a clearance record of IIR 3. Due to the enforcement agent of Marie s information system Marie who has access to Bob s e mail is unable to open the secure file because she has only a security level of 2. Bob s denied attempt to print the secure file and Marie s denied attempt to read the secure file are captured in the audit logs of the audit server for the company. On the other hand Tom another human resources manager with a security clearance record with HR 3 has full control over the salary report in the secure file and may copy modify or redistribute the secure tile according to the rules in the security directive record for SALARY.

If an authorized individual determines that Bob should access to the salary report a variety of techniques can provide Bob with this ability. One option is to give the identity record of Bob a clearance record with I IR 3 which would allow him full control of the salary report in the secure file as welt additional authorization on other secure files which include a payload with a security label of HR 3. Another option is to add a rule in the security directive record for SALARY that permits printing by all individuals with a general clearance record of level 4. Yet another option is to add a rule in the security directive record for SALARY that allows anyone in the company with the title of Vice President or above to print secure files having a security label of SALARY.

If Bob intentionally or unintentionally attempts to forward the secure file with the salary report to a colleague Joe at another company Joe may not receive the secure file . For example the rules of the security directive record for SALARY would likely not allow sharing such information with external entities. If Joe did receive the secure file Joe is unable to access the salary report. If Joe does not have the invention i.e. enforcement agent and security policy broker running on his information system the received secure file would be unintelligible to his information system . If Joe does have the invention running on his information system it is unlikely that he would have a security level of 4 for a security clearance record from Bob s company. Additionally a hacker who managed to pilfer the secure file from Alice Bob Marie or Joe would be unable to access the salary report of the secure file without being able to break the encryption and structure of the secure file .

In this example all users are interacting only with their applications such as Microsoft Excel for manipulating spreadsheets and Microsoft Outlook e mail client. The users do not need to leave their familiar environments. In Alice s case an additional step is required to assign the security label of SALARY to the salary report. She does not need to understand the complexities of the data classification scheme in the company and only needs to know that she must label secure files containing salary data as SALARY. The recipients such as Bob and Marie of the email with attached secure file of the salary report open the attachment in the same manner as all other attachments are opened. If Bob uses a different spreadsheet program than Alice for example OpenOffice or Microsoft Works the invention behaves in an identical manner and enforces the security directive of SALARY.

The above described secure USB business and or personal ID card according to the present invention bears full color external text and or graphics including a unique two or three dimensional barcode applied by an image transfer printed by a modified large format digital printer. The transfer is applied by a selective release transfer process in which the adhesive layer attaches only in the image area to the target surface and the adhesive layer is peeled off except for the image area which is left attached to the target surface. This produces a high resolution four color graphic inclusive of white which is used to apply the three dimensional barcodes at potential volumes of upward of 200 000 per day. It is envisioned that the USB business and or personal ID card may contain any combination of the name or logo of the company office address individual name telephone numbers fax and email address. The opposite side of the card could contain pertinent information concerning its use or other promotion materials. This card could be used as an identity card driver license insurance card financial services card credit card prescription drug cards Medicaid card and Internet transaction card. The outside of the card could contain a bar code including 2 and 3 dimensional codes a photograph and other biometric information that can be printed on the outside of the card.

The present invention therefore includes the digitally printed transfer bearing a digitally created image that can be heat and or pressure applied to a target surface and a method for transferring the digitally created images from film to a target surface via digital printing and heat and or pressure transfer or printed directly on the card using conventional ink jet technologies. The heat transfer process employs a modified digital printer converted from a double sided fusing printing process to a back fusing web printing process to create an image on transfer film subsequently coated with adhesive that is then heat and or pressure applied to a substrate to yield a high resolution four color graphic with white.

The basic fabrication steps comprise 1 coating one side of a disposable base transfer film or carrier with a releasable coating 2 digitally printing one or more images overtop the base transfer film in reverse image format and 3 applying an adhesive coating over the image.

The result is a roll of pre printed transfers. In accordance with the present method for transferring the digitally created images from film to a target surface 4 the base transfer film is indexed over a target substrate image down and showing through the film and heat and or pressure is applied to the base transfer film to adhere the image to the target substrate. The base transfer film is peeled from the target substrate and is discarded leaving a high resolution color graphic image on the target substrate.

The method is described in detail below with various options and in all cases the method is unique because when the image is transferred there is selective release meaning that there is transfer to the target substrate only in a pre determined area most commonly in the specific area of the print image though for some applications it may be desirable to have a release that includes non imaged areas despite the adhesive coating which may and indeed usually exceeds the borders of the printed image. This selective release improves the quality of the transfer because there are no unsightly borders or margins around the image and holes and gaps in fairly complex images are not filled in.

An image release layer is uniformly applied onto the base transfer film . Image release layer may be for example a wax lacquer or combination of wax and lacquer with or without specific additives. The application of the image release layer may be attained by applying the wax and or lacquer onto the base transfer film in individual coats from either solvent or waterborne solutions or suspensions. It is known from experience that the final parameters of the coating can be adapted to any requirement by the changing coating weights the addition or substitution of resins waxes and wax solutions and there are many conventional coating methods that can be used to achieving a desired coat weight. The appearance of the final coating can be full gloss or be matted down to the required level by the addition of matting agents. When applied the release layer must be uniform and free from all coating defects and application patterns except where a coating pattern is an intended aspect . The presently preferred release layer comprises a lacquer mixture of commercially available polymethyl methacrylate resin with a commercially available wax suspension BYK 151 ex Samual Banner . The ratio of resin to wax is on the order of 80 to 95 resin to 5 to 20 wax. These two components are provided in a 5 to 15 solid solution depending on method of application in a butanone and toluene solvent blend of which toluene is around 10 of the total solvent . The release layer coating is then forced air dried giving a dry coat weight coat weight of 1.15 to 1.35 grams per square meter.

The image itself is then digitally printed with a four color graphic as will be described on the transfer film overtop release layer . The digital printer may employ either electro ink or dry powder toner and otherwise conventional print techniques. Preferably a registration mark is printed at this same time and when desired the four color image and registration mark is then overprinted with a white background .

Finally a pressure and or heat activated adhesive layer may be applied evenly over the whole of the web both where there is image and no image or may be selectively applied only in the image area. Presently the adhesive layer is applied in line directly after the printing step using a 3.5 to 4 solution of commercially available polyamide Lioseal V 7036 ex Flenkel in a solvent system which is predominately Isopropyl alcohol. This solution is then coated onto the image and or transfer film by a wire wound rod at a dry coating weight of 0.2 to 0.3 grams per square meter the applied coating being forced air dried.

To then transfer the digitally created image from the transfer film to a target surface the base transfer film is placed on a target substrate and is indexed in position using the index lines image down and showing through the film . The adhesive layer is then heat and or pressure fused to a subject material and the image itself adheres more strongly to the material than does the image release layer . Thus when the image transfer film is applied image down to a target substrate by application of pressure and or heat as will be described the dried adhesive layer attaches to the target substrate only in the image area but is otherwise retained by the transfer film selective release . To then apply the transfer the image transfer film is peeled off the target substrate together with the dried adhesive layer except for the image area which is left attached to the target substrate by the pressure and or heat activated adhesive layer . For this to happen the thickness of the non printed areas of release layer and adhesive layer must be thinner than printed areas containing the release layer image and adhesive layer such that more pressure is exerted where there is image to the target substrate than where there is no image. The characteristics of the image release layer the adhesive layer and the image layers are selected so as to work with a wide variety of target substrates including textured and porous materials such as leather to give this selectivity.

This printer can be any conventional digital printer that uses either ElectroInk or dry powder toner or other conventional print techniques. For example a Xeikon large format digital printer is suitable. This and most other large format digital printers employ heater roller assemblies and fusers generally contained within a protective housing. A toner image is transferred to a sheet or web and is then fixed to the web by heat and or pressure. Typically the paper is transported in a nip between the fuser and pressure roller which are rotating. Thermal radiation from a lamp heats the fuser roller causing the toner on the web to melt and press into the web fibers. In accordance with the present invention the printer is modified to essentially convert it from a front and back fuser system to a back fusing web printing process. The modification initially entails disabling the heaters in the infeed module removal of the front fusers substep and removal of the GEM rollers . Specifically for a Xeikon digital printer the front fusers and part nos. CNS 1262 015208 32D Gem Roller would be removed as seen in . In addition the print color order is changed from the conventional CMYK to KMCY

The current process uses a plastic web in roll form for the base transfer film of and pre coats this with the release layer which may be a releasing lacquer a wax a release coating or a combination of any of these as described above. At substep it is necessary to mix the releasing layer lacquer wax coating or combination of any of these . The lacquer wax and release coating are custom mixed to create the correct release factor for a range of heat and pressure used. A suitable wax release can be mixed with a combined acrylic nitrocellulose overlacquer for this purpose.

If desired the release layer may be texturized or mixed with specific additives such as ultraviolet absorbers or biocides to give the release layer specific properties.

For example the release layer may be texturized with a distinct carrier surface pattern matte or scratch . Since the image is printed onto the release layer and is then transferred the net effect is to impart the surface pattern onto the surface of the transfer. Most any texture or pattern that can be made to the surface of the release layer for example embossing etching or addition of a solid component e.g. silica. In each ease this is transferred when it is applied to the target substrate. These changes can be aesthetic for example matte brushed effect geometric pattern regular pattern or random pattern. The effect can also be subtle such as wording images or patterns that are only visible with light shining on the surface at a particular angle thereby serving as a simple security device.

As another example the release layer may contain a functional additive that confers a property to the transfer that is not present in the transfer without the additive. For example the addition of 1 of an anti microbial additive such the transfer surface as applied to a target will inhibit bacteria. Inorganic silver based antimicrobials are generally recognized as safe and are well suited for this purpose.

The addition of a small percentage less than 10 of a UV absorber will protect the toner image from degradation in color intensity due to prolonged exposure to direct sunlight.

The addition of a phosphorescent or fluorescent additive will make the transfer glow when UV light is shined onto it. This addition can be used in conjunction with the above described surface pattern making the effect easier to detect.

The image is designed into a vector image file or scanned into a raster image file in both cases using four color CMYK pixilation.

As seen at substep the emblem graphic design may be generated using computer drawing software. This is generally accomplished using graphics programs such as well known Adobe Illustrator Photoshop etc. Such software is capable of calculating the image dimensions from the design and colors are chosen from a selectable palette. Photoshop software developed by Adobe uses a palette technique in which the image data is coded and compressed to a prescribed number of colors a range of from 256 to 16M colors depending on the selected palette . The image file can be manipulated as desired to resize rescale redraw or alter the coloration. The final image is then saved as a CMYK raster image file.

Given a prepared image at substep the image is printed directly from the raster image file and at substep an additional toner drum of white toner W is used to print a white overprint. The process imprints electrostatically charged toner or inkjet images onto the base transfer film . The process prints the desired image laying on colors in registration patterns in the order Black Magenta Cyan Yellow KMCY and finally White instead of the CMYK patterns that are applied by an unmodified Xeikon. The printing of a white layer of color at substep is unique to the invention and this improves contrast by filling in blank areas. When working on the design computer white is seen as black. White cannot be seen on the screen. The black image the part we want to be white is given a specific reference for example pantone . This specific reference number is added as a fifth color that the Xeikon combines with the normal CMYK colors of the design and yet printing this reference color as white as it has been programmed to do.

Next at step the mixed release layer is applied to the plastic transfer film . The release layer is applied over the whole surface of the base transfer film using conventional coating machine.

At step a water or solvent based adhesive is applied over both the image with nor without white and the areas that do not contain a printed image. These areas may include parts of the image that have intentionally been left clear of print for example between numbers backgrounds to let the substrate be seen through the print etc. The transfer is now complete.

Finally at step the image transfer may be applied to a wide variety of materials including rough and or porous materials such as leather. At substep the image may be transferred to the substrate material by a roller to substrate process or through a heat stamping process in both cases using conventional presses. In both cases the differential pressure of the transfer film with toner versus the transfer film without toner is the factor that controls the selective release according to the present invention. More specifically at substep the dried adhesive on the printed area of the image encounters more pressure due to the additional thickness added by the toner and thus the printed areas of image attach to the target material. After the transfer film contacts the target substrate the transfer film may be peeled away. The printed image transfers to the target substrate as the web separates. The adhesive on the printed area attaches to the target surface and pulls the printed image off the transfer film and onto the target substrate. The process does not leave a lacquer halo around the printed images as in conventional transfer processes.

Where a heat stamping process is used the stamping press may be used a second time directly onto the transferred image to imbed the printed image into the selected substrate.

This differential pressure is obtained by the difference in thickness between the areas of the film that are imprinted with the image and areas where there is no image. Although it is imperceptible to the naked eye the transfer is thicker in the areas where the toner has been applied. The image is transferred selectively through the interaction of the release layer image and adhesive and the target substrate. The release layer and adhesives being specifically formulated to exploit this differential pressure.

The invention has generally been described for use in security of an information system. The invention can be used for other applications for example version control archiving and destruction monitoring and gathering usage metrics of various components of an information system indexing and retrieving files valuation resource allocation and ownership management.

This written description uses examples to disclose the invention including the best mode and also to enable any person skilled in the art to practice the invention including making and using any devices or systems and performing any incorporated methods. The patentable scope of the invention is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal languages of the claims.

