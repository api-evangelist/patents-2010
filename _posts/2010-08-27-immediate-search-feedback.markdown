---

title: Immediate search feedback
abstract: Providing immediate search feedback is disclosed. Search input is received within a search field of a web browser application. Based on characteristics of the search input, a determination is made whether to automatically submit a query to a search engine. In one aspect, the query is automatically submitted to the search engine. The query is based on the received first search input. Results are displayed within the web browser application, the results web page returned from the query submitted to the search engine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08185529&OS=08185529&RS=08185529
owner: Apple Inc.
number: 08185529
owner_city: Cupertino
owner_country: US
publication_date: 20100827
---
This application is a continuation of U.S. patent application Ser. No. 11 076 473 filed on Mar. 8 2005 now U.S. Pat. No. 7 788 248.

This disclosure relates generally to user interfaces for digital processing systems and in particular relates to a graphical user interface that presents immediate search feedback.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings hereto Copyright 2004 Apple Computer Inc. All Rights Reserved.

Users of modern data processing systems such as general purpose computer systems often desire to find information stored on remote computer systems or networks such as for example information accessible through the Internet. The Internet is typically defined as a computer network consisting of a worldwide network of computer networks that use the TCP IP network protocols to facilitate data transmission and exchange. One common method for locating information available on the Internet is to submit a search request or query to a search engine. A search engine is typically a computer program that retrieves documents files or data from a database or from a computer network such as the Internet usually based on keywords input by a user. The search engine may include functionality for searching the Internet in general or the search engine may be limited to a particular network domain website or computing system accessible through the Internet. A user typically interacts with a search engine through a graphical user interface GUI in which the user inputs text describing the desired search terms or parameters. Search engines are often accessible by a user through a GUI of a web browser application. generally describes a prior art method of performing an Internet search. In use a user is typically presented with an input field in which to enter text describing the information sought. Once a user has completely entered the desired search terms the user enters an express command to submit the search request to the search engine such as for example by depressing the Return or Enter key on a keyboard or clicking a GUI element such as a Submit button within the browser application or on a web page presented by a web browser application. The search request is then submitted to the search engine based on the complete search terms input by the user. Results from the search request typically in the form of links to other websites documents or files are then presented to the user for review and selection . Should a user desire to refine or revise the search terms the user may add to or modify the text previously entered into the input field and then is required to again manually submit the search request by entering a submit command such as by depressing a Return button.

While the conventional interaction between user and search engine e.g. completely entering search terms manually submitting them waiting for the results to be displayed reviewing the results modifying the search terms manually resubmitting the search request etc. is the conventional paradigm there are drawbacks and inefficiencies associated with this process. For example a user must wait until the search terms have been completely typed in by the user before any results are displayed. Furthermore a user must proactively issue a submit command in order for an input search request to be submitted to the search engine which can be tedious.

The present invention relates to immediate search feedback. In one aspect as a user enters search terms for submission to a search engine results based on the received input appear as the user is typing. Search query strings are automatically submitted to a search engine using received portions of the input text.

In one aspect immediate search feedback is provided. Search input is received within a search field of a web browser application. Based on characteristics of the search input a determination is made whether to automatically submit a query to a search engine. In one aspect the query is automatically submitted to the search engine. The query is based on the received search input. Results are presented in a results web page displayed by the web browser application. The results web page is received in response from the query submitted to the search engine. In one aspect the search field is included in a web page presented by the web browser application.

In another aspect text input is received within an integrated search field of a web browser application. Based on characteristics of the text input a determination is made whether to automatically submit a query to a search engine. The query is then automatically submitted to the search engine. The query is based on the received search input. A web page returned from the search engine based on the query is displayed within the web browser application. After the returned web page is displayed the focus is automatically maintained within the integrated search field. In one aspect the returned web page is prevented from controlling the focus.

In another aspect text input is received within a search field of a web page displayed by a web browser application. A determination is made based on characteristics of the text input whether to automatically submit a query to an Internet search engine. The query is automatically submitted to the search engine. The query is based on the received search input. Results returned from the query submitted to the search engine are presented within the web page. In one aspect the search field for receiving text input is presented within a first frame of the web page and the first results are presented within a second frame of the web page.

The present invention is described in conjunction with systems clients servers methods and machine readable media of varying scope. In addition to the aspects of the present invention described in this summary further aspects of the invention will become apparent by reference to the drawings and by reading the detailed description that follows.

In the following detailed description of embodiments of the invention reference is made to the accompanying drawings in which like references indicate similar elements and in which is shown by way of illustration specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention and it is to be understood that other embodiments may be utilized and that logical mechanical electrical functional and other changes may be made without departing from the scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

The following description of is intended to provide an overview of computer hardware and other operating components suitable for implementing embodiments of the invention described below but is not intended to limit the applicable environments. One of skill in the art will immediately appreciate that the invention can be practiced with other computer system configurations including hand held devices cellular telephones multiprocessor systems microprocessor based or programmable consumer electronics appliances network PCs minicomputers mainframe computers and the like. Embodiments of the invention can also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network.

The web server is typically at least one computer system which operates as a server computer system and is configured to operate with the protocols of the World Wide Web and is coupled to the Internet. Optionally the web server can be part of an ISP which provides access to the Internet for client systems. The web server is shown coupled to the server computer system which itself is coupled to web content which can be considered a form of a media database. It will be appreciated that while two computer systems and are shown in the web server system and the server computer system can be one computer system having different software components providing the web server functionality and the server functionality provided by the server computer system which will be described further below.

Client computer systems and can each with the appropriate web browsing software view HTML pages provided by the web server . The ISP provides Internet connectivity to the client computer system through the modem interface which can be considered part of the client computer system . The client computer system can be a personal computer system consumer electronics appliance a network computer a Web TV system a handheld device or other such computer system. Similarly the ISP provides Internet connectivity for client systems and although as shown in the connections are not the same for these three computer systems. Client computer system is coupled through a modem interface while client computer systems and are part of a LAN. While shows the interfaces and as generically as a modem it will be appreciated that each of these interfaces can be an analog modem ISDN modem DSL modem cable modem satellite transmission interface or other interfaces for coupling a computer system to other computer systems. Client computer systems and are coupled to a LAN through network interfaces and which can be Ethernet network or other network interfaces. The LAN is also coupled to a gateway computer system which can provide firewall and other Internet related services for the local area network. This gateway computer system is coupled to the ISP to provide Internet connectivity to the client computer systems and . The gateway computer system can be a conventional server computer system. Also the web server system can be a conventional server computer system.

Alternatively as well known a server computer system can be directly coupled to the LAN through a network interface to provide files and other services to the clients without the need to connect to the Internet through the gateway system .

It will be appreciated that the computer system is one example of many possible computer systems which have different architectures. For example personal computers based on an Intel microprocessor often have multiple buses one of which can be an input output I O bus for the peripherals and one that directly connects the processor and the memory often referred to as a memory bus . The buses are connected together through bridge components that perform any necessary translation due to differing bus protocols.

Network computers are another type of computer system that can be used with the present invention. Network computers do not usually include a hard disk or other mass storage and the executable programs are loaded from a network connection into the memory for execution by the processor . A Web TV system which is known in the art is also considered to be a computer system according to the present invention but it may lack some of the features shown in such as certain input or output devices. A typical computer system will usually include at least a processor memory and a bus coupling the memory to the processor.

It will also be appreciated that the computer system is controlled by operating system software which includes a file management system such as a disk operating system which is part of the operating system software. One example of an operating system software with its associated file management system software is the family of operating systems known as the Mac OS operating system from Apple Computer Inc. of Cupertino Calif. and their associated file management systems. The file management system is typically stored in the non volatile storage and causes the processor to execute the various acts required by the operating system to input and output data and to store data in memory including storing files on the non volatile storage .

As used herein a web browser is a software application program that is used to read display locate download or otherwise access documents e.g. web pages or other data resources on the Internet which includes the World Wide Web. Web browsers are capable of interpreting or processing marked up or coded documents typically Hypertext Markup Language HTML that reside on servers and interpret the coding to render a web page. Most web browsers are graphical browsers which are capable of displaying both text and graphics from web pages. In addition most browsers are capable of presenting multimedia information including sound and video. An example of a conventional web browser is the Safari web browser version 1.2.4 available from Apple Computer Inc. the assignee of the present application.

At block the method determines whether the user has issued a submit command. A submit command is a user issued command that triggers a search request based on the search input received at that point in time such as for example depressing a Return Enter or Submit key or button. For example if a user types in three characters then presses the Return key on their keyboard or clicks a Submit button in their web browser application block a search request is submitted block to the search engine using the three characters typed in. This may be considered a manual search since the search request only occurred in response to an express user command to submit the search request.

Another type of user issued or manual submit command is the manual selection of a suggested search term or phrase such as that presented by auto complete or auto correction features of a software application. For example in one embodiment upon typing a few characters of search input an auto complete feature of a software application may present the user with one or more suggested terms in an attempt to anticipate what the user may be trying to type based on the characters already input by the user. For example if a user types in part of a keyword in the search field the browser automatically completes the rest of the keyword for the user according to previously input keywords. To perform a search query on one of the suggested terms the user may select e.g. using a pointing device to click on one of the terms. The auto complete suggestions may come from a standard dictionary of words or may be personalized based on words or phrases previously input by the user. In another embodiment an auto correct feature suggests correctly spelled search terms when a user appears to have typed a misspelled word.

If a user issued submit command is not received at block the method continues to block . At block the method determines whether to automatically process a search request or query using the search input that has been received up to that point in time. In one embodiment the determination at block is made as a user is typing or entering the search input. In one embodiment the determination is whether enough search input and associated information has been received such that a search request should be automatically processed using the search input that has been received. The determination may be based on the cumulative search input received e.g. text characters at the time of the determination as well as other characteristics of the search input e.g. pauses while typing . Embodiments of the processing represented by block are described in greater detail below with respect to .

If the method determines at block that a search request should not be automatically processed at that time the method returns to block to wait for receiving additional search input or other input characteristics e.g. a sustained period without further text input .

If a determination is made at block that a search request should be automatically submitted the method submits a search request at block based on the cumulative search input received up to that point in time. For example if at the time the determination is made to automatically process a search request a user had input a three characters into a search field at block the method would automatically submit a search request using a query string including the three characters. By automatically submitting a search request it is meant that the user is not necessarily required to issue an express command to submit the search request such as by pressing an Return key or clicking a Submit button rather the method is capable of automatically submitting a search request using the received search input while a user continues to input their desired search terms. Thus a search may be performed before the user has completely input their desired search terms and in one embodiment while a user is actively inputting search terms. The end result to the user is that substantially immediate search feedback i.e. search results is provided as a user inputs their search terms.

At block the method displays search results returned based on the prior search request submitted at block . In one embodiment the results are presented as part of a web page. The method then returns to block to wait to receive additional or revised search input. In one embodiment if further search results are submitted results associated with these requests replace the previously displayed results.

Thus in one embodiment as a user enters additional search input the displayed results are gradually updated to reflect the cumulative search input received without the user being required to issue an express submit command to the search engine. Incremental search feedback is provided through the presentation of results based on partial query strings as search terms continue to be input. This search as you type aspect allows a user to be presented with search results before the user has necessarily completed their intended search input which may result in the user finding their desired result s more quickly than they would have otherwise e.g. if they had to enter a complete query and then manually submit the search request . Furthermore in one embodiment as a user is presented with incremental search results they can revise their search terms if needed to receive more relevant results or they may even continue adding search terms to further refine their query.

Since the results are automatically updated to reflect the recent queries the user may consider whether to modify the search terms input. For example many typical results web pages include excerpts or snippets of text from the respective web pages linked to by each of the results often showing the queried terms in boldface. These excerpts also present the user with the context in which the queried search terms appear on the web page. In the course of viewing these excerpts from the results the user may often see additional terms or keywords that may be more relevant for their desired search. The user may then simply add on these terms to their query by continuing to type these terms into the search field. This incremental and iterative process may quickly lead a user to their desired results. As a user adds additional search terms the results may become more and more specific with the most relevant search results eventually appearing in the results page. The presentation of intermediate results to the user during the input of the terms may have a synergistic effect on the user s entire search experience since the query input by the user may be influenced by the intermediate results leading to more specific queries and thus assisting the user to find their desired results more quickly and efficiently.

In one embodiment if additional search input is received while there is a pending or in progress search request i.e. the results for a submitted search request have not yet been received the pending search request may be cancelled and replaced by a new search request including the additional received search input. Thus in one embodiment this may conserve bandwidth by prioritizing more complete or more recent input from the user and using this more complete or more recent input to perform searches.

In another embodiment search input may include non textual input from a user as part of the search such as selected checkboxes radio buttons or other graphical elements selected by the user to specify parameters of the search. Search parameters may include for example options for limiting the number of displayed results limiting the date range of results limiting the file format of the results the language of the results the domain of the results whether the terms are exactly matched in the results whether all terms entered must be in the results among other common search parameters. For example in one embodiment indicating a search parameter may trigger an automatic search.

In yet another embodiment search input may include audio input from a user such as spoken words from a user. For example a speech recognition software application or module may convert words spoken by a user into text which is input into the search input field or otherwise submitted as part of the search request. Such features may be combined with various aspects of the embodiments describe above. For example as a user speaks each additional word a new search query is issued incorporating the additional word in submitted the query string.

At block the method determines whether temporal characteristics of the received search input satisfy a time based trigger. In one embodiment a time based trigger refers to a characteristic of the user s search input pattern having to do with time i.e. temporal such as the speed at which the user types in search input including for example pauses while typing search input or the elapsed time period after the last character was typed or input without having received further input i.e. delay . For example a user may naturally momentarily pause while typing search terms either in the middle of a search term or between terms. In one embodiment use of a time based trigger is advantageous for conserving network resources i.e. bandwidth processing etc. as the time trigger may be used to avoid performing a search after each individual character is typed even where a user types relatively quickly which may slow down the user interaction and unnecessarily consume bandwidth. In one embodiment a pause while inputting search terms serves as a trigger or cue for the method to initiate an automatic search request at block using the search input that has been received up to the user s pause. If a time based trigger has not been met at block the method continues its analysis of the search input at block .

In one embodiment a time threshold or heuristic is associated with the time based trigger. For example in one embodiment the time threshold is about 1 second. Thus in such an embodiment when a user pauses momentarily for at least 1 second after typing search input i.e. after last receiving input no further input is received for 1 second the method will automatically submit a search request using the received input at that point. In another embodiment a time threshold may be a fraction of a second such as 1 10 of a second. It will be appreciated that longer or shorter predetermined time thresholds may be used. In one embodiment the time threshold may be set or adjusted manually by the user. For example an embodiment of a user interface for setting or adjusting the time threshold and other characteristics for immediate search feedback is discussed below with reference to . In another embodiment the time threshold is set by a learning algorithm based on a particular user s typing characteristics as may be gained from past search input by the user. For example in a training mode for a particular user the algorithm may time the average delay or pause between successive input characters when a user interacts with the search field. Alternatively in one embodiment the learning algorithm may record the average pause delay between characters in other software applications used on the computing device such as a word processing application. Once an average pause delay has been determined based on a suitable number of observed samples the time threshold may be set to this average time. In one embodiment the average pause delay used to set the time threshold may change over time based on the input characteristics of the user. Furthermore in one embodiment different time thresholds may be associated with particular users based on their own respective typing habits. In yet another embodiment the duration of the time threshold used for triggering an automatic submission is substantially the same as other time thresholds used in other applications of a particular user s computing system.

At block the method analyzes the substantive characteristics of the search input for a substantive trigger. In one embodiment the substantive characteristics of the search input include characteristics of the individual characters input by the user e.g. what was the last character input as well as the cumulative search input of the user e.g. the entire string of search input . Substantive characteristics of the search input that may be analyzed by the method may include length number of characters semantics syntax grammatical numerical linguistic and other characteristics of the content of the search input. In one embodiment a substantive trigger may be met by a substantive characteristic of the search input that when identified by the method causes the method to automatically submit a search request based on search input received from the user at that point. When a substantive trigger is met or satisfied by the received search input at block the method automatically submits a search request based on the received search input at block . If a substantive trigger is not satisfied by the received search input at block the method returns to block to wait to receive additional search input.

In one embodiment a substantive trigger may be satisfied by grammatical numerical or character based characteristics of the search input. For example in one embodiment when a user types a space between search terms a substantive trigger is met since a space typically indicates the completion of a search term. In one embodiment when a substantive trigger is met the method automatically submits at block a search request using the search input received up to the time the substantive trigger was met. The search request may consist of the exact input entered at the time of the automatic submission e.g. if the automatic submission is triggered after the user had typed cat then the query may simply include cat. In another embodiment the method may add a wildcard to the received input e.g. cat or cat to extend the search by querying for multiple matching terms to be returned based on a shared characteristic e.g. the first three letters being cat . Examples of two common wildcard symbols are the question mark which stands for any single character and the asterisk which stands for any character string of any length. In another embodiment when input triggers an automatic search submission the method may search for synonyms of words used in the query. In another embodiment when input triggers an automatic search submission the method may use stemming to expand the scope of the submitted query. Stemming involves using linguistic analysis to reduce a search term or word to its root form and then matching all forms of a word in a search query to all forms of the same word. For example search input including the word active might also return documents containing the words actively activate proactive and activity.

It will be appreciated that aspects for expanding the search results for a given search input may be implemented by the search engine to which the query is submitted. It will also be appreciated that in another embodiment the exact characters that trigger the automatic submission are submitted to the search engine as a query and then additional processing to expand the scope of returned results may be implemented on the server side of the search engine. For example where cat triggers an automatic submission by a client browser application the query submitted to the search engine site by the client may only consist of cat but the server side of the search engine will perform local processing of the query to expand the query to include e.g. cat or other derivatives of the partial search string.

In one embodiment an auto complete feature may be used in conjunction with the automatic submission of queries. For example where a user has partially typed a search term an auto complete feature may automatically complete the partial search term with letters from a matching term used previously and then automatically submit a query using the complete search term without requiring an express submit command from the user. Thus results for a complete search may be presented to a user automatically. As described above the auto complete terms may come from a standard dictionary of words or may be personalized based on words or phrases previously input by the user.

In one embodiment as a user types characters of a search term the input may be compared to a dictionary of known complete words and if there is a match e.g. the cumulative input characters match a portion of the letters for a known word then a query is automatically submitted using the auto completed word. For example as a user is typing in the term groundhog after the user has typed groundh a corresponding complete term groundhog may be matched from a dictionary since the first letters match as a predicted complete search term after which a query is automatically submitted using groundhog. Thus even though the user may have only typed groundh results from a query using groundhog may appear automatically. In another embodiment the auto complete may use an algorithm to predict next characters or words based on the frequency with which certain letters or word combinations are used. This may be used to automatically submit queries in which the received input from the user is supplemented with anticipated search terms or characters the results of which are automatically presented to the user.

Some search engines such as the Google search engine include spell checking software that automatically analyzes a submitted query and checks to see if the query uses the most common version of a word s spelling. If it is calculated that more relevant search results will be generated with an alternative spelling of a submitted keyword or search term results pages returned by the Google search engine will suggest a more common spelling e.g. by presenting a hyperlink to a search for the more common spelling such as Did you mean more common spelling . Clicking on the suggested spelling will launch a search for that term. In one embodiment the spell checking features of a search engine such as the Google search engine may be leveraged to automatically revise submitted queries. In one embodiment where a user inputs text into a search field having the immediate search feedback functionality the browser application determines whether the results page returned by the search engine includes a suggestion by the search engine for an alternate spelling of a submitted search term and if so automatically submits a subsequent search using the suggested spelling of the term. In another embodiment rather than automatically submitting the search term the browser presents the user with a suggestion for the corrected spelling such as through an auto complete feature.

There are numerous types of substantive triggers contemplated. In various embodiments a substantive trigger may include punctuation such as a period comma question mark exclamation mark colon semicolon hyphen dash parentheses bracket ellipsis apostrophe accent mark quotation mark etc. In other embodiments a substantive trigger may include a slash ampersand asterisk underscore or other non alphanumeric characters in addition to special characters or operators. In various other embodiments a substantive trigger may include mathematical symbols such as a plus sign or a minus sign as well as Boolean operators etc. In another embodiment a substantive trigger may include complete words. For example as a user types their search input the method determines if the cumulative received input matches an entry in a dictionary of words i.e. the input characters form a known word a search query may be automatically submitted using the input received up to that point. This may result for example in an automatic submission of a term without the user inputting a space character i.e. the search is submitted as soon as the cumulative received input recognized as constituting a known word. Furthermore in one embodiment conjunctions or other grammatical constructs may be used as substantive triggers. In still yet other embodiments a substantive trigger may include nouns verbs adjectives or adverbs. Furthermore in other embodiments specific characters e.g. vowels or specific letters such as letters which occur with high frequency like r s t l n and or e may be set as substantive triggers.

In one embodiment a substantive trigger may be met when a threshold number of characters are input. For example in one embodiment a substantive trigger is met when three characters are input and thus a search will automatically be submitted after three characters are input. In another embodiment capitalization may be a substantive trigger. In yet another embodiment a syllable or other standardized subdivision of a word may serve as a substantive trigger.

It will be appreciated that one or more temporal or substantive triggers may be used together in combination. For example in one embodiment a temporal trigger may be longer e.g. 2 seconds if two characters have been typed as compared to a shorter temporal trigger e.g. 1 10 second after six characters have been typed.

In one embodiment the automatic submission determination method analyzes received search input to determine if an automatic search request should be delayed i.e. whether the method should wait for additional search input before automatically submitting a search request. For example in one embodiment where a user desires to search for a specific phrase the user may begin the search input by typing a quotation mark prior to the phrase. Since by typing a quotation mark the user indicates that he she desires only results having a specific phrase the method will determine that an automatic search request should be delayed until for example a subsequent corresponding close quotation mark is entered by the user indicating completion of the desired search phrase. In addition to a quotation mark other punctuation or operators such as for example a wildcard e.g. a character such as or that can be used to represent any other character or series of characters in a query or a symbol e.g. to require the subsequent search term to be present in a returned result may be substantive triggers.

Furthermore in one embodiment of the automatic submission determination method the various temporal or substantive triggers or thresholds may be varied depending on the speed of the user s connection to the search engine. For example where a user s computing device is connected to the Internet via a relatively high speed connection e.g. a Digital Subscriber Line DSL having a download speed of about 1.5 megabits per second and an upload speed of about 128 kilobits per second the method may automatically submit a query after 1 second without further input whereas the method would wait 3 seconds if the connection speed was relatively slower e.g. a modem connection having a speed of about 56 kilobits per second .

In another embodiment the immediate search feedback method may be tuned to perform well on both computing devices having relatively slow network connection speeds as well as those having relatively fast connection speeds. For example in one embodiment on a computing device having a relatively slow network connection e.g. 56 kilobits per second a user still receives search results while typing but due to the latency of responses to automatically submitted queries fewer intermediate results pages are presented to the user as the user types e.g. due to those queries for which results are pending being cancelled superceded by the submission of more recent queries . This has the effect of minimizing the amount of refreshing reloading of the search results web page which may potentially be distracting to the user if it occurs frequently. It also has the effect that the search results based on the partial queries are displayed for a longer sustained period without being refreshed or updated which may provide the user a greater opportunity to refine their query based on the intermediate results. On the other hand users having relatively higher connection speeds e.g. a DSL connection may experience the advantage of seemingly instantaneous feedback as they type in their search terms due to the low latency of their connection. Of course it will be appreciated that the frequency with which result pages are refreshed reloaded with more recent results may be adjusted or controlled regardless of the connection speed. For example in one embodiment the returned results may be refreshed or reloaded no more than once every two seconds.

In one embodiment by way of example consider a user seeking information on the iPod mobile digital device available from Apple Computer Inc. In such an example a likely initial search term the user may use is ipod. A user may initiate a search by sequentially typing the text of the desired search term into the search field . In the embodiment illustrated in the letter i is shown as having been input into the search field as the user begins to sequentially type the constituent letters of the search term ipod . Conventionally input entered into the search field is not submitted to a search engine as part of a search query until the user issues an express submit command such as by pressing a Return button on a keyboard. According to one embodiment of the present invention a search query may be submitted automatically while a user inputs the search terms into a search field. Thus in one embodiment upon receiving the input of the first character e.g. i into the search field the web browser application automatically submits a query to the search engine e.g. www.google.com using the as of then received input from the search field . Thus referring to the address bar includes the URL containing the query submitted http www.google.com search q i ie UTF 8 oe UTF 8 wherein the i immediately following search q represents the i character typed into the search field . The results from the submitted query based on the text input into search field of are displayed in the web page of results shown in .

Thus as a user types the characters of the search term s partial search strings are sent to the search engine at designated intervals or as certain triggers are satisfied. By partial it is meant that the query only includes the as yet received input of the search term the search string itself is otherwise complete enough to be in a format which will allow it to be appropriately processed by the search engine. Referring to search field of the user continues to type the desired search input by typing the next character p of the search term ipod. Upon receiving this next character of the search term the web browser application automatically submits another query to the search engine incorporating the additional input. Thus referring to a web page of results for a query based on the input characters ip are displayed. These new results for the ip query update or replace the results from the previous i query. In this manner immediate feedback in the form of dynamic or real time results are provided while a user is in the process of entering their desired search term. The address bar is updated to reflect the URL associated with the query which elicited the displayed responses e.g. http www.google.com search q ip ie UTF 8 oe UTF 8. Search field of illustrates that the user continues to input the search term by inputting the next character o. Again a new query including the cumulative input received in the search field e.g. ipo is automatically submitted upon receiving input of the o character. Results for this query are subsequently automatically displayed after receiving them from the search engine as illustrated in . Likewise as the user enters the final character of the search term d into the search field of a new query is submitted to the search engine incorporating the entire search term ipod and the corresponding received results are displayed as illustrated in .

Thus referring collectively to the embodiments illustrated by as a user inputs a search term partial search strings are incrementally automatically submitted to the search engine which causes results for each of the partial queries to be automatically displayed and updated as the user types without requiring the user to issue an express submit command. One advantage of this is that while typing a search term a user may see a desired result in the web page before the user has completely typed in their intended search terms the user may select this result e.g. by clicking on its hyperlink thereby allowing the user to access desired information more quickly than they might have otherwise e.g. if they had been required to completely enter their search term s and manually submit the query. Additionally the immediate search feedback provided by the live or dynamic updating of the search results based on returned results for the most recently automatically submitted query allows a user to modify a query before they have completely input their intended query. For example this is particularly useful if a user misspells a search term since the user may notice as they type that the results are not what was expected and may accordingly modify their search terms.

It should be noted that for purposes of clarity and their corresponding description illustrate embodiments in which a search query is automatically submitted after receiving each additional character of text input i.e. a type of substantive trigger it will be appreciated that use of other triggers for automatically submitting a search such as those described above with respect to are contemplated.

Referring again to in one embodiment the immediate search feedback aspect of the present invention may be implemented through a search field presented within a web page itself as opposed to a search field that is integrated into the toolbar of a web browser application window . For example a user may visit a web page and begin to type search terms into a search field presented on the web page . As the user types the characters of the search terms partial search strings are generated and submitted to a search engine. The results corresponding to these partial queries may be presented such as is illustrated in . In one embodiment the web page based search field may be implemented alone or in combination with the integrated search field . In one embodiment a web page based search field having immediate search feedback capabilities may be implemented through a self submitting form on a web site using for example JavaScript that detects input on a field and then periodically submits a new query string causing the page to be reloaded displaying the results of the new query string. Such a form may be used to automatically submit the partial search strings at specific intervals or upon the satisfaction of certain triggers as described above with respect to . In one embodiment application code implemented on the server side of the web page may generate the partial search strings and their immediate search feedback results. In another embodiment a search field having immediate search feedback capabilities may be positioned in a first frame of a web page while results based on queries generated from the input into the search field are displayed in a second frame of the web page. A frame is typically a subsection of a web page that is displayed independently of other portions of the page. For example as a user types search terms into the field of the first frame the second frame of the web page is reloaded to display returned results for each automatically submitted search.

In one embodiment where a search field is presented as part of a web page the search engine to which the partial strings are automatically submitted does not necessarily have to be associated with the same domain as that of the URL of the web page . For example if a search field is presented on a web page accessible at www.google.com the input entered into the search field may be used to automatically create partial search strings submitted to a search engine located at www.example.com.

Some web pages include script e.g. JavaScript to automatically place focus on a designated text input field on the web page as soon the web page is loaded. The focus refers to an onscreen element e.g. a text input field to which user generated input e.g. keyboard input is directed. For example if a text input field has focus or is focused the text input field will react when the user next types text input i.e. the typed characters will be inserted into the text field. Directing the focus is often implemented to allow a user to directly input text into a form field without having to direct a mouse cursor to the field. In certain embodiments of the present invention since a user may be presented with a web page of results as the user continues to type search terms into a search field it is important to maintain focus within the designated search field despite contradictory commands that may be received from a web page that is loaded. For example it may interfere with or slow down a user s interaction if each time a results page is loaded the user is required to manually redirect the focus from a form on the web page back to the browser application s integrated search field e.g. field of . As such in one embodiment the present invention automatically maintains focus on the integrated search field by preventing a web page from redirecting the focus from the desired search field until the user manually redirects the focus for example by clicking the mouse cursor onto some other field or object.

In one embodiment maintaining focus on the search field despite commands received from a retrieved web page may be limited only to the search engine results web page itself to avoid interference with the operation of substantive non search results pages such as individual pages referenced by the search results page. For example in the context of using the Google search engine in one embodiment the browser application may prevent focus from being redirected from the search field while conducting searches on http www.google.com however once the user selects a returned search result or visits a page other than http www.google.com e.g. a non search engine page control of the focus reverts back to the visited web page thereby preserving the function of any focus control script on the visited non search engine page. In another embodiment if a web page including a search page such as that located at http www.google.com directs the focus to a field in the page e.g. field the browser application may momentarily permit this redirection of the focus from the search field however once the focus is redirected from the search field if the user does not interact with the targeted web page field e.g. by inputting text within a specified period of time e.g. ten seconds the focus is returned to the search field . In another embodiment if the user does not interact with the search field within a specified period of time the focus dictated by the loaded web page if any is allowed to occur. Additionally in an embodiment where a search field having immediate feedback capability is presented as part of a web page such as field of the focus may be maintained on the web page search field .

Many web browser applications include a history feature which records the URLs of web pages that have been recently visited. Web browser applications typically allow you to view the history and click on any URL therein to revisit the respective web page. Many browsers also allow users to specify how many days of history to keep and provide the ability to delete the history record. The immediate search feedback method of the present invention may be used in conjunction with a web browser s history function. In one embodiment during the course of typing a search term a plurality of URLs for search results pages may be visited by the user. By way of example as illustrated by the sequence of in one embodiment if a user types ipod into the search field four distinct results pages may be presented to the user during the course of the input one displaying results for a query based on the string consisting of i another with results for ip another displaying results for ipo and another for the full query ipod. The first three results pages i.e. those for the i ip and ipo queries may be referred to as intermediate search results pages since they represent results of queries using intermediate or partial search strings partial meaning they typically include fewer characters than the final complete search string entered by the user. The cumulative input string prior to a user selecting one of the results presented by the results web page or otherwise navigating away from the results page may be referred to as a final or complete query string.

In another embodiment intermediate results pages are not stored as part of the history but only the most recently displayed results page presented to a user just prior to selecting one of the displayed results this page may be referred to as the final results page is stored in the history. For example consider the situation of a user typing in the two consecutive search terms cat dog into a search field. After being presented with the results of the cat dog search the user revises the search by backspacing over dog and typing canine. After being presented with the results of the cat canine search the user clicks on one of the hyperlinks presented on the cat canine results page. In this embodiment only the results page for the cat canine search is stored in the history since the user s input clicking on one of the results of that page indicates that that particular results page was likely the most interesting and relevant to the user since its results elicited a positive response from the user e.g. clicking on one of the displayed results . Any intermediate results pages such as that for the cat dog search would be omitted from the history records of the browser. This may reduce cluttering the history list with unnecessarily duplicative incomplete or redundant entries while preserving the results pages that are most likely to be relevant and of importance to the user. In one embodiment a user may select whether to keep all intermediate searches in the history or only those deemed likely to be relevant by the browser application as described above.

In one embodiment the functionality of the back button e.g. of of the browser may be configured similarly to that of the history function. A back button in a browser is typically used to return to the last page viewed. In one embodiment after a search using the immediate search feedback aspect has been performed the back button may be used to return to the last non results page visited. For example consider the situation where a user is browsing www.apple.com then types ipod into the browser s integrated search field. In this example three intermediate pages those for i ip and ipo may be presented to the user before the final complete ipod search results page is displayed. In one embodiment clicking on the back button of the browser once will return the browser to the results page for the ipo search since it was the last page visited. In an alternative embodiment clicking on the back button of the browser once will return the browser to the www.apple.com web page since it was the last page visited before the ipod search was initiated by the user.

In one embodiment the user interface is presented as a window with control elements therein. In one embodiment the user interface includes a slider control to adjust the time delay before a query is automatically submitted based on the received input i.e. the temporal trigger . The slider control allows a user to choose from a continuous range of allowable values. For example in one embodiment a user may manipulate a slider to adjust the time delay between about 0 seconds and about 3 seconds. Other ranges of time may be used with other embodiments. In another embodiment a user may specify a number of input characters after which a query is automatically submitted. For example a user may input a number into field such as 4 in such a case after four characters are input into a search field such as search field of a search query is automatically submitted. In one embodiment various checkboxes or other control elements such as radio buttons may be used to allow a user to control other aspects of the immediate search feedback such as for example whether to turn the auto complete feature on as described above whether to delay a search until the input matches a recognized complete word as described above whether to append wildcards to automatically submitted search query strings as described above and whether to automatically adjust the automatic submission thresholds based on a connection speed as discussed above .

In one embodiment an application programming interface API may be provided in a computing system to allow an application program to set or adjust the settings relating to immediate search feedback such as the temporal and substantive triggers for automatically submitting a query. An API is an interface through which an application program can access an operating system of a computing device. For example in one embodiment a first software component may monitor a user s typing behavior pattern to determine a timing parameter. For example the first software component may monitor or record timing characteristics when a plurality of keys are actuated e.g. the average time delay pause between successive input of text characters within a word processing application . Based on the observed typing pattern a timing parameter is set. In one embodiment for example the timing parameter may be the average time elapsed between successive input of text characters. Through an API the first software component may call a second software component e.g. the operating system to set a temporal threshold specified by the second software component. The temporal threshold may then be used to determine when to automatically submit a query to a search engine i.e. the threshold specifies the duration of the pause when receiving text input after which a search query may be automatically submitted .

The methods described above constitute computer programs made up of computer executable instructions illustrated as blocks acts within the flow charts of . Describing the methods by reference to a flow chart enables one skilled in the art to develop such programs including such instructions to carry out the methods on suitably configured computers the processor of the computer executing the instructions from computer readable media including memory . The computer executable instructions may be written in a computer programming language or may be embodied in firmware logic. If written in a programming language conforming to a recognized standard such instructions can be executed on a variety of hardware platforms and for interface to a variety of operating systems. In addition embodiments of the invention are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein. Furthermore it is common in the art to speak of software in one form or another e.g. program procedure process application module logic . . . as taking an action or causing a result. Such expressions are merely a shorthand way of saying that execution of the software by a computer causes the processor of the computer to perform an action or produce a result. It will be appreciated that more or fewer processes may be incorporated into the methods illustrated in without departing from the scope of the invention and that no particular order is implied by the arrangement of blocks shown and described herein.

The above description of illustrated embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of and examples for the invention are described herein for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification and the claims. Rather the scope of the invention is to be determined entirely by the following claims which are to be construed in accordance with established doctrines of claim interpretation.

