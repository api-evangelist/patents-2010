---

title: Copy on write storage conservation systems and methods
abstract: Systems and methods for copy on write storage conservation are presented. In one embodiment a copy on write storage conservation method includes creating and mounting a snapshot; mounting a snapshot; monitoring interest in the snapshot; initiating a copy on write discard process before a backup or replication is complete; and deleting the snapshot when the backup or replication is complete. In one embodiment the method also includes marking a file as do not copy on write. In one embodiment, the copy on write discard process includes discarding copy on write data when a corresponding read on the file in the snapshot is successful. Initiating a copy on write discard process can be done at a variety of levels (e.g., a file level, an extent level, a block-level, etc.).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09015430&OS=09015430&RS=09015430
owner: Symantec Corporation
number: 09015430
owner_city: Mountain View
owner_country: US
publication_date: 20100302
---
Electronic systems and circuits are often utilized in a number of applications to achieve advantageous results. Numerous electronic technologies such as computers video equipment and communication systems facilitate increased productivity and cost reduction in analyzing and communicating information in most areas of business science education and entertainment. Frequently these activities involve storage of vast amounts of information and significant resources are expended storing and processing the information. Maintaining accurate replicated backup storage of the information is often very important for a variety or reasons e.g. disaster recovery corruption correction etc. .

Accurately duplicating the information in a consistent manner is typically very important. Some traditional backup and replication approaches utilize snapshots or checkpoints in an attempt to allow Applications to continue to write to the primary file system while a backup or replication is in progress without burdening the application making use of that file system. The storage checkpoints or file system snapshots are often utilized for ensuring a backup and replication is taken of an image at a consistent point in time. Depending upon the amount of data to be processed from the snapshot the lifetime of the snapshot can be quite long especially if the backup replication application requires a persistent snapshot during the entire backup replication process. Some conventional approaches utilize copy on write COW mechanisms as part of the snapshot operations. The COW is typically used to preserve earlier data of a file that is overwritten and there can be COW overhead for the lifetime of the snapshot even for those blocks that have already been read by a consumer or backup or replication application.

Conventional approaches typically require the entire backup or replication to be complete before snapshot information can be discarded. However as more and more changes come in more and more storage is consumed for preserving the snapshot image. If the backup or replication cannot finish before the system runs out of free space the snapshot is discarded prematurely and backup or replication fails. For systems with limited free space backup or replication may never complete successfully. Some conventional approaches may attempt to add significant amounts of storage capacity to enable free space to be available however this approach can be very resource intensive and costly or infeasible.

Systems and methods for copy on write storage conservation are presented. In one embodiment a copy on write storage conservation method includes creating and mounting a snapshot mounting a snapshot monitoring interest in the snapshot initiating a copy on write discard process before a backup or replication is complete and deleting the snapshot when the backup or replication is complete. In one embodiment the method also includes marking a file as do not copy on write. In one embodiment the copy on write discard process includes discarding copy on write data when a corresponding read on the file is successful. In one exemplary implementation the copy on write discard process includes a signal to delete copy on write blocks and the signal is a close function of the file indicating reads of information from the file are finished. The copy on write discard process can include determining backup or replication applications that read file data in peculiar patterns and discarding the copy on write data for a particular file when it is safe in accordance with the peculiar pattern. Initiating a copy on write discard process can be done at a variety of levels e.g. a file level an extent level a block level etc. . In one embodiment a public application program interface is available to set the snapshot in an aggressive de allocation mode initiated before the completion of the backup or replication.

In one embodiment a computer readable storage medium has stored thereon computer executable instructions that when executed by a computing device cause the computing device to perform a copy on write storage conservation method. In one embodiment a system is utilized to perform a copy on write storage conservation method. The system can include a computer system having a processor coupled to a computer readable storage media and executing computer readable code which causes the computer system to perform a copy on write storage conservation method.

Reference will now be made in detail to the preferred embodiments examples of which are illustrated in the accompanying drawings. While the invention will be described in conjunction with the preferred embodiments it will be understood that they are not intended to limit the invention to these embodiments. On the contrary the invention is intended to cover alternatives modifications and equivalents which may be included within the spirit and scope as defined by the appended claims. Furthermore in the following detailed description numerous specific details are set forth in order to provide a thorough understanding. However it will be obvious to one ordinarily skilled in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail as not to unnecessarily obscure aspects of the current invention.

The present systems and methods facilitate efficient and effective memory backup and replication operations including copy on write storage conservation. Present storage systems and methods minimize resource occupation and time expenditure of time associated with backup or replication operations. The present systems and methods facilitate automated aggressive recovery of copy on write storage before completion of backup or replication operations. The copy on write date deletion or discard operations can be directed at data that has not changed since the beginning of the backup or replication and also data that has changed since the beginning of the backup or replication process. Backups and replication are important use cases for snapshots and present systems and methods can facilitate improvements that decrease the consumption of storage space in backup snapshot scenarios. Present systems and methods can be implemented with zero or minor changes in a backup or replication application. It is also appreciated that present systems and methods can apply to a file system in general.

In block storage of copy on write data is monitored. In one embodiment the location of copy on write data is monitored.

In block an analysis is made to determine if a consumer application is no longer interested in the copy on write data. In one embodiment the analysis includes examining whether the copy on write data has been read before by a consumer application e.g. a backup operation replication operation etc. .

In block the copy on write data is deleted when the results of the analysis indicate the consumer application is not interested in the copy on write data. In one embodiment the copy on write data is deleted when the consumer application has read the copy on write data.

It is appreciated that a variety of mechanisms for activating present systems and methods are readily implemented. In on embodiment a public application program interface is available to facilitate setting the snapshot in an aggressive de allocation mode initiated before the completion of the backup or replication. In one exemplary implementation an aggressive de allocation mode can be automatically triggered in response to various scenarios e.g. in response to an application initiation or condition in response to a low available storage space indication etc. .

In block a snapshot is created and mounted. In one embodiment creating and mounting a snapshot is preformed in a conventional manner. In one exemplary implementation the snapshot including associated copy on write data is essentially a copy of the data set corresponding to a point in time that can be utilized by a system to perform the replication or backup while allowing applications to continue writing to their data with minimal or no down time.

In block interest in snapshot information is monitored. In one embodiment whether a consumer application e.g. backup application replication application etc. has read or not read snapshot information including copy on write data is monitored. In one exemplary implementation if a backup or replication application has read the copy on write data an extrapolation is made that the backup or replication application is no longer interested in the copy on write data.

It is appreciated that the present systems and methods can be readily adapted to facilitate a variety of implementations and scenarios in which the backup or replication reads the same block more than once. In one embodiment a signal to delete COW blocks may be taken to be a close function of the file indicating reads e.g. backup related reads replication related reads etc. of information from the file are finished or when the full file has been read. This approach facilitates accurate deletion of backup or replication storage space even if backup or replication applications read a file more than once but open and close it exactly once.

In one embodiment peculiar patterns associated with a backup or replication are analyzed and the results utilized in snapshot storage reclamation operations. In one exemplary implementation a determination is made if backup or replication applications read file data in peculiar patterns. If there is a peculiar pattern the COW data for a particular file is discarded when it is safe in accordance with the peculiar pattern. The backup or replication application can signal the snapshot as to when it is safe to discard the COW data for a particular file. The signal can be some system call overloaded for this purpose e.g. a truncate unlink ioctl etc. .

In block a discard process initiated before the backup or replication process is complete. It is appreciated the discard process can be implemented in a variety of approaches. In one embodiment as the backup or replication application reads a file block the snapshot deletes or discards COW data associated with the block after a corresponding read on the block is successful. The deletion of the copy on write data is initiated before completion of the backup or replication. In one exemplary implementation the initiation of the deletion does not wait for the backup or replication application to finish reading all blocks in all files. In one embodiment the snapshot can continue to treat a block associated with deleted copy on write data as already snapshotted so that fresh writes associated with a primary resource do not generate a COW again. It is appreciated that a present copy on write discard process can be done at a variety of levels e.g. a file level an extent level a block level etc. .

In block a file is marked as do not copy on write. In one embodiment when a backup or replication application finishes reading a file it is marked as do not COW so that no storage is consumed for writes to this file generating COW blocks. Such marking can be done at file extent or block level.

In block a snapshot can be unmounted and remaining snapshot information can be deleted when the backup or replication is complete. In one embodiment a backup or replication is finished or complete when all file blocks from all files associated with the backup or replication have been read by the backup or replication application. In one exemplary implementation deleting remaining snapshot information when the backup or replication is complete can include deleting all information associated with a snapshot including the snapshot itself.

The components of backup environment cooperatively operate to perform various functions associated with application and backup of corresponding information. Application runs on computer system utilizing information from file system and information on storage volume . Backup agent can forward or copy file information across to the backup storage media through optional backup server . In one embodiment where optional backup server is not included in the architecture the backup agent can forward the file information directly to backup storage media .

In one embodiment application performs a regular mount of file system and application can read data from and write data to file system . In one embodiment an operating system mounts file system so that an application can access the files in the storage volume for reads and writes. File system facilitates coordination of information transfers between application and storage volume . File system also facilitates coordination of information transfers between backup agent and storage volume . While the illustration in includes directional indicators or arrows on the respective lines connecting file system to application and backup agent and the arrows indicate application and backup agent respectively mount file system it is appreciated that information can flow both directions between file system and application and backup agent . It is also appreciated information can also flow from backup server media to backup server and from backup server to backup agent e.g. control related information write confirmation indication etc. . In one embodiment file system utilizes snapshots to coordinate accurate backup of the information in storage volume .

Once a snapshot is taken the snapshot can be mapped in a separate file system that is accessed as part of a snapshot mount. So the backup agent does not really need the files to be available though the standard mount and they remain available to the application rather the backup agent accesses the files through the snapshot mount. In one embodiment the backup agent can traverse the whole set of files from the file system that are available through the snapshot mount read operations. File system can also perform file level snapshot creation and management including copy on write storage conservation in accordance with one embodiment of the present invention.

In addition to COW based snapshot approaches it is appreciated the present systems and methods can be implemented in various implementations e.g. ROW Redirect on write aka DOW Divert on write etc. . In one embodiment the difference between a COW approach and a ROW approach includes block addresses that are switched between two inodes. For example a new block s similar to shown in would be allocated to primary Mode replacing the value b. Before that however value b would be preserved in the snapshot Mode replacing the second 1 . The COW operates on the block addresses rather than on the blocks as it were. Subsequently data e is written to block s. As is readily apparent once the write completes there is no difference how the data is arranged. For example the new data can be with the primary Mode and the old data can be preserved in the snapshot Mode. Thus present systems and methods can work equally well in this case.

In one embodiment a computer readable medium includes modules of instructions directed at performing copy on write storage conservation. is a block diagram of copy on write storage conservation module which includes instructions for directing a processor in performance of a copy on write storage conservation e.g. copy on write storage conservation method etc. . Copy on write storage conservation module includes copy on write data storage monitoring module copy on write data consumer application interest analysis module and aggressive copy on write data deletion module . Copy on write data storage monitoring module includes instructions for performing a copy on write data storage monitoring process. In one embodiment copy on write data storage monitoring module includes instructions for performing block . Copy on write data consumer application interest analysis module includes instructions for performing a copy on write data consumer application interest analysis process. In one embodiment copy on write data consumer application interest analysis module includes instructions for performing block . Aggressive copy on write data deletion module includes instructions for performing an aggressive copy on write data deletion process. In one embodiment aggressive copy on write data deletion module includes instructions for performing block .

Copy on write storage conservation methods and can be implemented on a variety of devices as for example a server computer system workstation computer system desktop computer system laptop computer system handheld device etc. Computer readable media for storing information associated with copy on write storage conservation methods and can also be a number of different types of media that can be accessed by computer system and can include but is not limited to removable and non removable computer storage media flash memory hard disk optical disk drive compact disk CD etc. . It should further be noted that the copy on write storage conservation methods and can have some most or all of its functionality implemented by a distributed computer system having a large number of dispersed computing nodes as would be the case where the functionality of the copy on write storage conservation methods and are partly or wholly executed using a cloud computing environment.

In one embodiment copy on write storage conservation methods and can be implemented on a network. is a block diagram depicting a network architecture in which client systems and as well as storage servers A and B any of which can be implemented using computer system are coupled to a network . Storage server A is further depicted as having storage devices A N directly attached and storage server B is depicted with storage devices B N directly attached. Storage servers A and B are also connected to a SAN fabric although connection to a storage area network is not required for operation of the disclosure. SAN fabric supports access to storage devices N by storage servers A and B and so by client systems and via network . Intelligent storage array is also shown as an example of a specific storage device accessible via SAN fabric . In one embodiment server A includes copy on write storage conservation module . In one embodiment copy on write storage conservation module is similar to similar to copy on write storage conservation module . It is appreciated that present systems and methods are compatible with a variety of implementations. For example portions of information and instructions associated with can be distributed in various resources.

Bus allows data communication between central processor and system memory which may include read only memory ROM or flash memory neither shown and random access memory RAM not shown as previously noted. In one embodiment instructions for performing a copy on write storage conservation method e.g. similar to copy on write storage conservation method are stored in one or more memories of computer system e.g. in memory location . The RAM is generally the main memory into which the operating system and application programs are loaded. In one embodiment RAM includes backup copy on write storage conservation module . In one embodiment copy on write storage conservation module is similar to copy on write storage conservation module . The ROM or flash memory can contain among other code the Basic Input Output system BIOS which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system are generally stored on and accessed via a computer readable medium such as a hard disk drive e.g. fixed disk an optical drive e.g. optical drive floppy disk unit or other storage medium. Additionally applications can be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via network modem or interface .

Storage interface as with the other storage interfaces of computer system can connect to a standard computer readable medium for storage and or retrieval of information such as a fixed disk drive . Fixed disk drive may be a part of computer system or may be separate and accessed through other interface systems. Modem may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider ISP . Network interface may provide a direct connection to a remote server via a direct network link to the Internet via a POP point of presence . Network interface may provide such connection using wireless techniques including digital cellular telephone connection Cellular Digital Packet Data CDPD connection digital satellite data connection or the like.

Many other devices or subsystems not shown may be connected in a similar manner e.g. document scanners digital cameras and so on . Conversely all of the devices shown in need not be present to practice the present disclosure. The devices and subsystems can be interconnected in different ways from that shown in . Code to implement the present disclosure can be stored in computer readable storage media such as one or more of system memory fixed disk optical disk or floppy disk . The operating system provided on computer system may be MS DOS MS WINDOWS OS 2 UNIX Linux or another known operating system.

Moreover regarding the signals described herein those skilled in the art will recognize that a signal can be directly transmitted from a first block to a second block or a signal can be modified e.g. amplified attenuated delayed latched buffered inverted filtered or otherwise modified between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next other embodiments of the present disclosure may include modified signals in place of such directly transmitted signals as long as the informational and or functional aspect of the signal is transmitted between blocks. To some extent a signal input at a second block can be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved e.g. there will inevitably be some attenuation and delay . Therefore as used herein a second signal derived from a first signal includes the first signal or any modifications to the first signal whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and or final functional aspect of the first signal.

With reference to computer system modem network interface or some other method can be used to provide connectivity from each of client computer systems and to network . Client systems and are able to access information on storage server A or B using for example a web browser or other client software not shown . Such a client allows client systems and to access data hosted by storage server A or B or one of storage devices A N B N N or intelligent storage array . depicts the use of a network such as the Internet for exchanging data but the present disclosure is not limited to the Internet or any particular network based environment.

Again it is appreciated that the present copy on write storage conservation approaches can be readily utilized in a variety of implementations. In one embodiment initiating a copy on write discard process can be done in the context of block level snapshot drivers using change block bitmap tracking. The systems and methods can include a feature for snapshot drivers to be aware of what blocks are of interest to the applications which are consumers of the snapshot like backup or replication solutions and use that knowledge for improving copy on write operations. The snapshot driver can maintain a bitmap for the blocks in the volume and implement an application programming interface API that the consumer application can call to set the bits in this bitmap. The consumer uses this API to set a bit whenever the corresponding block is successfully read backed up replicated . The snapshot driver in turn refers to this bitmap for potential copy on writes on a block and goes ahead if the corresponding bit is not set. If the bit is set present systems and methods can utilize this as an indication the backup or replication application does not have an interest in the copy on write data anymore and the copy on write data can be deleted. In one embodiment when the copy on write data is deleted the storage space becomes available or reclaimed .

Portions of the detailed description are presented and discussed in terms of a method. Although steps and sequencing thereof are disclosed in figures herein describing the operations of this method such steps and sequencing are exemplary. Embodiments are well suited to performing various other steps or variations of the steps recited in the flowchart of the figure herein and in a sequence other than that depicted and described herein. Some portions of the detailed description are presented in terms of procedures steps logic blocks processing and other symbolic representations of operations on data bits that can be performed within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. A procedure computer executed step logic block process etc. is here and generally conceived to be a self consistent sequence of steps or instructions leading to a desired result. The steps include physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical magnetic optical or quantum signals capable of being stored transferred combined compared and otherwise manipulated in a computer system. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions it is appreciated that throughout discussions utilizing terms such as processing computing calculating determining displaying accessing writing including storing transmitting traversing associating identifying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Computing devices can include at least some form of computer readable media. Computer readable media can be any available media that can be accessed by a computing device. By way of example and not limitation computer readable medium may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile discs DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a computing device. Communication media typically embodies carrier waves or other transport mechanism and includes any information delivery media. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared other wireless media and combinations of any of the above.

Some embodiments may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or distributed as desired in various embodiments.

The foregoing descriptions of specific embodiments have been presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed and many modifications and variations are possible in light of the above teaching. The embodiments were chosen and described in order to best explain the principles and its practical application to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope be defined by the Claims appended hereto and their equivalents.

