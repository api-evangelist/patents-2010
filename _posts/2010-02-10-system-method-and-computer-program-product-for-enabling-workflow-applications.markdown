---

title: System, method, and computer program product for enabling workflow applications
abstract: A facility is described for enabling workflow applications. The facility receives a request to identify an optimized resource list that identifies resources capable of performing a workflow process task. The workflow process task can be associated with a document type relating to a document associated with a workflow envelope. The workflow envelope can store multiple documents of at different document types. The facility includes a workflow engine and a simulation engine. The workflow engine performs workflow process tasks based on the tasks identified in the workflow envelope. The simulation engine can employ modeling and historical data from a workflow metrics data source to generate the optimized resource list and identify identifying resources matching the workflow process tasks identified in the workflow envelope.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08090611&OS=08090611&RS=08090611
owner: Open Text S.A.
number: 08090611
owner_city: Grand Duchy
owner_country: LU
publication_date: 20100210
---
This patent application is a continuation of U.S. patent application Ser. No. 11 669 662 entitled WORKFLOW APPLICATIONS and filed on Jan. 31 2007 which claims the benefit of the assignee s U.S. Provisional Patent Application Ser. No. 60 763 681 entitled Workflow Application and filed on Jan. 31 2006 U.S. Provisional Patent Application No. 60 800 056 entitled Data Binding For Workflow and filed on May 12 2006 and U.S. Provisional Patent Application No. 60 799 804 entitled Workflow Simulator and filed on May 12 2006 which are hereby incorporated herein in their entireties by reference.

Computers have been networked to exchange data between them for decades. One important network the Internet comprises a vast number of computers and computer networks interconnected through communication channels. The Internet is used for a variety of reasons including electronic commerce exchanging information such as electronic mail retrieving information and doing research and the like. Many standards have been established for exchanging information over the Internet such as electronic mail Gopher and the World Wide Web WWW . The WWW service allows a server computer system i.e. web server or web site to send graphical web pages of information to a remote client computer system. The remote client computer system can then display the web pages. Each resource e.g. computer or web page of the WWW is uniquely identifiable by a Uniform Resource Locator URL . To view a specific web page a client computer system specifies the URL for that web page in a request e.g. a HyperText Transfer Protocol HTTP request . The request is forwarded to the web server that supports that web page. When that web server receives the request it sends the requested web page to the client computer system. When the client computer system receives that web page it typically displays the web page using a browser. A browser is typically a special purpose application program for requesting and displaying web pages.

Currently web pages are often defined using HyperText Markup Language HTML . HTML provides a standard set of tags that define how a web page is to be displayed. When a user makes a request to the browser to display a web page the browser sends the request to the server computer system to transfer to the client computer system an HTML document that defines the web page. When the requested HTML document is received by the client computer system the browser displays the web page as defined by the HTML document. The HTML document contains various tags that control the display of text graphics controls and other features. The HTML document may contain URLs of other web pages available on that server computer system or on other server computer systems.

New protocols exist such as Extensible Mark up Language XML and Wireless Access Protocol WAP . XML provides greater flexibility over HTML. WAP provides among other things the ability to view web pages over hand held wireless devices such as cell phones and portable computers e.g. PDA s . All of these protocols provide easier ways to provide information to people via various data processing devices. Many other protocols and means for exchanging data between data processing device continue to develop to further aid the exchange of information.

Computer networks can be employed to create and track workflows such as by using workflow applications. Workflow applications manage or track documents and or tasks through one or more workflow processes. Multiple people components and documents may be involved in completing a workflow process. Many workflow applications conventionally associate a single document with a workflow. As an example a workflow application may associate a purchase order with one workflow and an invoice with a different separate workflow even though these workflows may be related. The purchase order and invoice may have different document types. As an example the purchase order may be a word processing document and the invoice may be a spreadsheet file.

A workflow facility facility for handling workflow processes is described. In various embodiments the facility enables multiple document types to be associated with a workflow envelope. The workflow envelope associates primary documents supporting documents metadata navigation interfaces information search interfaces workflow process management tools metadata management tools and other information such as decision making criteria a user provides. Documents can be dynamic or static. A dynamic document is a document that is dynamically created based on data stored outside the document. A workflow envelope can contain no documents in some cases such as when designing or testing workflow applications.

The workflow envelope can accumulate objects such as documents data and metadata relating to the documents. The workflow envelope can accumulate these objects under user control or based on inputs received by a workflow application. Thus the workflow envelope can accumulate documents in a single environment in the context of performing a specific workflow operation. As an example when a workflow process involves reviewing and approving a document based on business criteria the workflow envelope can contain data to cause the document to be routed to an appropriate person enable that person to modify some portions of the document but not others store information from the document into a database and so forth.

The facility can define a workflow envelope using an extensible markup language XML a predefined document collection object references to existing documents or a combination thereof. The workflow envelope is compatible with various operating systems such as MICROSOFT WINDOWS or LINUX and computing devices such as client computing devices server computing devices and so forth. In some embodiments a web service may provide workflow envelope services. Thus an envelope can store workflow information such that a workflow application can determine workflow process interactions without resorting to executable components such as dynamic link libraries. The following provides an example XML schema for a workflow envelope 

Workflow tasks defined for a workflow envelope operate on documents in the workflow envelope whether to just carry the documents to the next workflow task or to modify the documents based on user input or some external set of conditions. Workflow envelopes may also have security attached to them so that they encrypt documents they contain so that only those users with the appropriate credentials are allowed to open the documents. Once a user s access credentials are determined or verified and the user s role and task are defined a component of the facility can communicate with a data source that propagates the workflow envelopes. The data source can provide forms templates and so forth. The component can direct the workflow based on form type or other identifier indicated in a header section of the pertinent workflow envelope. The component can set document disposition options in a document viewing pane and display the status of the workflow in a workflow pane. These panes are sections of windows providing graphical user interfaces associated with the facility.

Components associated with the facility can retrieve information relating to workflows from a data source of pre defined workflow forms and templates which propagates one or more individual workflow envelopes direct workflow processes based on the type of document or form or other identifier contained in the header section of the workflow envelope set document disposition options on the document viewing page and provide access to documents and data using a set of design canvases or application displays. Examples of design canvasses include an image or document viewer a metadata search canvas and a workflow deployment and management canvas. The facility employs the image or document viewer design canvas to display the contents of documents the metadata search canvas to search for display or receive metadata relating to documents workflow processes and workflow envelopes. The components can also provide a development environment in which data sources and design tools for business applications can be used interactively with the viewer metadata and workflow canvases facilitate development of workflow processes by enabling a drag and drop design canvas inspection of data and program objects and automated synchronization of changes in the workflow enable access to multiple documents and data sources in a single unified development environment and provide a deployment environment for workflow applications by asserting constraints on the workflow environment at runtime based on a user s role or rights that can be assigned programmatically.

Conventionally workflow applications are designed in one environment and deployed using another. Developers or users may employ different programming paradigms to design workflow applications than to deploy them. The facility unifies these disparate software design and programming paradigms. The facility can provide a unified environment that enables users to develop deploy and use workflow applications. Thus this unified environment can provide features for document viewing workflow process design and control and characterization and application of metadata or data in the workflow.

This unified environment can contain tools for workflow design and runtime deployment and integrates with other deployment environments such as Microsoft SharePoint and with third party development environments such as Microsoft Visual Studio. The workflow environment can accomplish this by using standards such as XML and by managing all of the viewer metadata and data sources and workflow processes rather than by relying on custom programming of those third party deployment environments. Thus the facility achieves rapid development of business process management BPM packages for multiple documents and workflow tasks in a single unified environment.

This results in a development and workflow deployment framework which may selectively create read update and delete data from external databases such as an Oracle 9i data store selectively integrate send and receive information with middleware products such as IBM MQ store and retrieve documents including images parse XML files such as authorization requests integrate with external document services such as those on an outbound fax server and provide document centric data operations such as mail merge functionality using letter or document templates.

The workflow envelope is a working environment which also may be used interactively with a simulation engine as one of its components. Such a simulation engine may be used to model the workflow process to adapt modify or otherwise control the workflow such as in a predictive manner. Typically such a simulation engine can evaluate environmental and task performance conditions and adapt the workflow to avoid errors or delays optimize the workflow process or function as a software and BPM design and testing tool to detect and correct errors in workflow applications such as be used during interactive use with design canvases. The simulation engine can function as a service to provide optimization of resource information including without limitation tasks such as user load balancing task prioritization choice optimization using constraints such as time cost or availability based on data provided by Business Activity Monitor BAM metrics. Resources can include hardware software people and so forth. Such metrics can be stored and queried from an On Line Analytical Processing OLAP data cube. The simulation engine can determine that a particular type of task e.g. document type is backlogged and attempt to identify that additional resources may be required. The simulation engine can also predict resource availability such as based on historical productivity or efficiency of a resource or schedule for the resource. As an example a first data entry clerk may work from 8 00 a.m. to 4 00 p.m. and may be able to handle a task in 25 minutes but a second data entry clerk may work from 7 00 a.m. to 12 00 p.m. and may be able to handle a task in 15 minutes. The simulation engine can analyze the availability of these resources to predict that an additional data entry clerk may be required at an identified time.

Integration of the simulation engine may take the form illustrated in . is a flow diagram illustrating use of a simulation engine with a workflow engine in various embodiments. In illustrated embodiment the simulation engine returns a list of optimal choices or settings that may be processed by the workflow application.

According to the illustrated embodiment a client application requests an optimized resource list from a workflow engine to complete a step in a workflow process. The workflow engine saves metrics about the workflow process such as in a workflow metrics store and provides the request the client application generates to a simulation engine to compute the optimized resource list. The workflow metrics store may include BAM metrics. The simulation engine employs models and historical data from a workflow metrics data source to populate for the workflow. The simulation engine then runs multiple scenarios to determine which resources of a resource pool best match the request based on various optimization criteria such as load time cost and so forth. The simulation engine then returns the list of potential choices.

Information returned from the simulation can be used to test a workflow application optimize a workflow at runtime dynamically or predict the outcome of a workflow. The simulation engine can also evaluate possible workflow output and performance scheduling parameters and using such information it can adaptively configure one or more workflow processes in accordance with business rules and heuristics and to implement preferred state changes and optimize performance and scheduling results in the workflow. The following provides an example of the simulation engine modifying a workflow process definition. Suppose a workflow process contains a business rule for expense claims that states if amount 10 000 then reroute claim for manager approval. Ideally the amount value would be set as high as possible so that the manager does not get involved and thereby increase the financial overhead of processing a claim yet not so high as to incur risk. Determining appropriate threshold values for business rules is normally performed manually by the workflow designer by comparing other workflow values. In an embodiment properties such as user item location and so forth can all affect the threshold value. The simulation engine would run many different scenarios in the background to determine what the optimal threshold value would be. This is done by setting the threshold to an initial value for the first iteration and then modifying it after each additional iteration based on other output values. Finally the new threshold value could be applied to the business rule.

The facility can employ a simulation engine to anticipate workflow response patterns to prompt client activities or to obtain workflow input via other servers such as other document servers. The facility can employ standard communications methods e.g. voicemail e mail instant messaging PPG SMS fax fax over IP Internet or web protocols to obtain workflow input or to provide output. The following provides an example of optimizing resource allocation. The simulation engine can execute e.g. in the background one or more scenarios to determine the minimum number of users that are required for each role in the workflow. Accounting for time cost and resource bottlenecks the simulation can run one or many iterations of the scenario making adjustment each time to try and optimize when resources are used. The simulation engine could then return a list of the users for each role to be used across one or more workflows.

The workflow envelope may also interact with other specialized programs using standard application programming interfaces APIs or web services as well as modifications to the workflow application made by using the workflow development environment. As an example custom actions or custom activities may be created to provide specialized input or processing steps not generally available in an application that is created using object libraries that are intended for the creation of common steps in a workflow process. Decision making applications often require comparison with external data or have dependencies on other business conditions or approval steps which a general purpose program cannot anticipate. Methods used to generate and associate a custom action with a specific workflow are set forth in the assignee s U.S. patent application Ser. No. 10 938 396 entitled Custom and Customizable Components Such As For Workflow Applications filed on Sep. 10 2004 and incorporated herein by reference in its entirety.

Custom actions or custom activities can be programmed using custom action workflow program developers tools. Custom actions can include a modification in the workflow envelope such as to change workflow process tasks route documents to specified resources change data associated with a dynamic document and so forth. As an example a custom action can specify a document view that is delivered to the end user.

The facility can have an associated user interface that separates tasks from documents. are user interface diagrams illustrating aspects of a user interface associated with a workflow facility in some embodiments and which illustrate aspects of this feature. These figures are related sequentially using encircled letters A B C and D. User interface of illustrates a custom action approach to creating workflow. Using this user interface the user can select a template and view a preview of the template. When the user selects a Next pushbutton the user interface displays panel illustrated in . In this user interface the user can select web parts to add. When the user selects a Next pushbutton the user interface displays a panel or illustrated in or B respectively. Using the user interface illustrated in the user can then select a webpart category and a webpart for addition to the user interface user defines. A webpart is a customization tool that affects the appearance and content displayed in a workspace such as in a form. Examples of webparts are various viewers such as for workflow processes and related forms and data bound fields that retrieve information from a data store and display the information. The user can specify properties relating to webparts the user adds. Upon selecting a Next pushbutton the user interface displays a panel illustrated in . Using the user interface illustrated in the user can provide additional properties relating to webparts such as data providers e.g. data sources data consumers e.g. webparts and so forth. When the user selects a Next pushbutton the user interface displays panel illustrated in . Using the user interface illustrated in the user can deploy a workflow application such as by specifying a title path and so forth.

The user interface also illustrates multiple designer toolboxes that can be employed by business information developers BIDs . The toolboxes provide user interface elements associated with workflow processes that a user can drag and drop onto the various canvases such as the metadata interaction canvas.

Thus the facility provides a three pane application that business users can employ to lay out navigation metadata and so forth. When the application is run by a user generated documents can be dynamically displayed in an image viewer canvas.

A specific implementation of the generic user interface illustrated in is provided in which is a user interface diagram illustrating a user interface associated with a workflow application. The specific implementation illustrates a workflow application that is associated with health care treatment and prescription approvals. The user interface includes workflow actions in workflow interaction canvas forms for entering or viewing various patient or drug related information in metadata interaction canvas and a prescription viewer in image viewer canvas . The environment can contain components that may be used and displayed in a number of different workflows such as the metadata browser. In the illustrated embodiment the workflow component includes a view of a task s execution options based on the workflow model the user role and the current workflow task. The figure illustrates the richness of the deployed application metadata forms workflow management document viewer are all operating in the runtime deployment. A knowledge worker is the typical user of this workflow application.

Various embodiments of the technology are described above. The description provides specific details for a thorough understanding and enabling description of these embodiments. One skilled in the art will understand however that the technology may be implemented or practiced without many of these details. Additionally some well known structures or functions may not be shown or described in detail so as to avoid unnecessarily obscuring the relevant description of the various embodiments.

The terminology used in the description is intended to be interpreted in its broadest reasonable manner even though it is being used in conjunction with a detailed description of identified embodiments.

In general the detailed description of the embodiments is not intended to be exhaustive or to limit the claims appended hereto to the precise form disclosed above. While specific embodiments and examples are described above for illustrative purposes various equivalent modifications are possible as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed in parallel or may be performed at different times.

Aspects of the technology may be stored or distributed on computer readable media including magnetically or optically readable computer discs hard wired or preprogrammed chips e.g. EEPROM semiconductor chips nanotechnology memory biological memory or other data storage media. Indeed computer implemented instructions data structures screen displays and other data under aspects of the technology may be distributed over the Internet or over other networks including wireless networks on a propagated signal on a propagation medium e.g. an electromagnetic wave s a sound wave etc. over a period of time or they may be provided on any analog or digital network packet switched circuit switched or other scheme . Those skilled in the relevant art will recognize that portions of the technology reside on a server computer while corresponding portions reside on a client computer such as a mobile or portable device and thus while certain hardware platforms are described herein aspects of the technology are equally applicable to nodes on a network.

The teachings provided herein can be applied to other systems not necessarily the system described herein. The elements and acts of the various embodiments described herein can be combined to provide further embodiments.

Any patents applications and other references including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the described technology can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further embodiments.

These and other changes can be made in light of the above Detailed Description. While the above description details certain embodiments and describes the best mode contemplated no matter how detailed various changes can be made. Implementation details may vary considerably while still being encompassed by the technology disclosed herein. As noted above particular terminology used when describing certain features or aspects of the technology should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the technology with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the claims to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the claims encompasses not only the disclosed embodiments but also all equivalents.

