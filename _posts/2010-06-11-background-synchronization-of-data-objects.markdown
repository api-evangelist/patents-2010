---

title: Background synchronization of data objects
abstract: Background synchronization of data objects may be provided. A background thread associated with an application may be created. A first data item associated with the application may be opened by the background thread and a copy of the first data item may be created. A modification may be performed on a property of the first data item. If no second data item is associated with a pending modification, the first data item may be replaced with the modified copy of the first data item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08504520&OS=08504520&RS=08504520
owner: Microsoft Corporation
number: 08504520
owner_city: Redmond
owner_country: US
publication_date: 20100611
---
Background synchronization of data objects is a process for applying bulk changes to objects in a data store. In some situations sets of changes may need to be applied in bulk to the items in a data store such as a Messaging Application Programming Interface MAPI compliant application s data objects. For example sets of items may need to be mirrored from a customer relationship management CRM system to an e mail application store or a data set may need to be imported into a MAPI store. In conventional systems main application threads are blocked while the bulk data operation is performed. This may result in users experiencing delays and non responsive applications.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter. Nor is this Summary intended to be used to limit the claimed subject matter s scope.

Background synchronization of data objects may be provided. A background thread associated with an application may be created. A first data item associated with the application may be opened by the background thread and a copy of the first data item may be created. A modification may be performed on a property of the first data item. If no second data item is associated with a pending modification the first data item may be replaced with the modified copy of the first data item.

Both the foregoing general description and the following detailed description provide examples and are explanatory only. Accordingly the foregoing general description and the following detailed description should not be considered to be restrictive. Further features or variations may be provided in addition to those set forth herein. For example embodiments may be directed to various feature combinations and sub combinations described in the detailed description.

The following detailed description refers to the accompanying drawings. Wherever possible the same reference numbers are used in the drawings and the following description to refer to the same or similar elements. While embodiments of the invention may be described modifications adaptations and other implementations are possible. For example substitutions additions or modifications may be made to the elements illustrated in the drawings and the methods described herein may be modified by substituting reordering or adding stages to the disclosed methods. Accordingly the following detailed description does not limit the invention. Instead the proper scope of the invention is defined by the appended claims.

Background synchronization of data objects may be provided. Consistent with embodiments of the present invention the modification of data items may be allowed without blocking an application s main thread for the duration of those operations. The data items may be accessed through a MAPI interface to allow multithreaded modifications without impacting application responsiveness.

Messaging Application Programming Interface MAPI comprises a messaging architecture similar to a Component Object Model based API. MAPI may allow client programs to become e mail messaging enabled aware or based by calling MAPI subsystem routines that interface with certain messaging servers. MAPI comprises simple MAPI a subset of 12 functions that may enable developers to add basic messaging functionality and extended MAPI which allows complete control over a messaging system on a client computer creation and management of messages management of the client mailbox service providers etc. MAPI includes facilities to access message transports message stores and or directories.

From stage method may advance to stage where computing device may open the first object. For example the background thread of e mail application may open a first data object stored in application data store associated with one of the pending plurality of data operations. Consistent with embodiments of the invention the first data object may be opened without blocking the main thread of e mail application and or preventing e mail application from interacting with and or modifying the first data object.

From stage method may advance to stage where computing device may create a copy of the first object. For example the background thread of e mail application may create a new MAPI object comprising each of the properties and values associated with the original object.

From stage method may advance to stage where computing device may modify the copy of the data object. For example the data object may comprise a contact record comprising a plurality of properties such as name address phone number e mail etc. A change to a contact s phone number may have been made in CRM application and the value of the phone number property may be modified in the copy of the data object associated with that contact.

From stage method may advance to stage where computing device may update any dependent properties. For example the data object may comprise a contact record and an update may be made to the contact s full name. Computing device may determine whether any other data properties depend on the full name property such as an initials property. If any properties depend on the updated property those properties may be updated in turn.

From stage method may advance to stage where computing device may determine whether any other changes to the first object are pending. For example changes to a contact record in CRM application may comprise a new phone number and an updated e mail address. Once the first property e.g. the phone number is updated and propagated to any dependent properties the background thread may return to stage to update the next property if necessary.

Once all pending changes to the first object are made and propagated method may advance to stage where computing device may determine whether any more data objects are associated with pending changes. If so method may return to stage and open a second data object for updating.

Once all pending changes to all objects associated with the plurality of data operations have been completed method may advance to stage where computing device may save the updated objects. For example the background thread may replace data objects in application data store with their corresponding updated copies.

Consistent with embodiments of the invention computing device may perform a conflict resolution if necessary. The conflict resolution may comprise determining whether a data object to be replaced with an updated copy has been modified since the copy was created. If so computing device may determine whether the modification to the copy of the first data object and the change to the first data object are each associated with a same property and for example discard the copy of the data object updated by the background thread or overwrite the changed data object with the updated copy according to a configuration value and or a user input indicating which version to retain. If the modification to the copy of the first data object and the change to the first data object are not each associated with a same property the copy of the data object may be discarded a new copy may be created and updated with the pending change s as described above and the data object may be replaced with the up to date copy. Method may then end at stage .

An embodiment consistent with the invention may comprise a system for providing object synchronization. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to create a background thread associated with an application open a first data item associated with the application create a copy of the first data item in the background thread perform a modification to the copy of the first data item and determine whether a second data item is associated with a pending modification. In response to determining that the second data item is not associated with a pending modification the processing unit may be operative to replace the first data item with the modified copy of the first data item. The processing unit may be further operative to determine whether the first data item has been changed since the copy of the first data item was created and if so perform a conflict resolution between the first data item and the copy of the first data item.

Another embodiment consistent with the invention may comprise a system for providing object synchronization. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to create an object processing thread associated with an application comprising at least one main thread open a first object associated with the application by the object processing thread without blocking the at least one main thread create a copy of the first object modify a first property of the copy of the first object and replace the first object with the copy of the first object. The processing unit may be further operative to update a user interface of the application to display the replaced first object determine whether a second property comprises a dependency on the modified first property of the first object and if so update the second property.

Yet another embodiment consistent with the invention may comprise a system for providing object synchronization. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to create an object processing thread associated with an application comprising at least one main thread wherein the application comprises a Messaging Application Programming Interface MAPI compliant e mail client application open a first object associated with the application by the object processing thread without blocking the at least one main thread create a copy of the first object modify a first property of the copy of the first object determine whether at least one first pending modification is associated with a second property of the first object and if so modify the second property of the copy of the first object and determine whether a second object is associated with at least one second pending modification. In response to determining that the second object is associated with the at least one second pending modification the processing unit may be operative to create a copy of the second object modify a property of the copy of the second object according to the at least one second pending modification and replace the second object with the copy of the second object. The processing unit may be further operative to determine whether the first object has been changed since the copy of the first object was created and if so perform a conflict resolution between the first object and the copy of the first object. The processing unit may be further operative to replace the first object with the copy of the first object and update a user interface of the application to display the replaced first object.

With reference to a system consistent with an embodiment of the invention may include a computing device such as computing device . In a basic configuration computing device may include at least one processing unit and a system memory . Depending on the configuration and type of computing device system memory may comprise but is not limited to volatile e.g. random access memory RAM non volatile e.g. read only memory ROM flash memory or any combination. System memory may include operating system one or more programming modules and may include a MAPI application such as e mail application . Operating system for example may be suitable for controlling computing device s operation. Furthermore embodiments of the invention may be practiced in conjunction with a graphics library other operating systems or any other application program and is not limited to any particular application or system. This basic configuration is illustrated in by those components within a dashed line .

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by a removable storage and a non removable storage . Computing device may also contain a communication connection that may allow device to communicate with other computing devices such as over a network in a distributed computing environment for example an intranet or the Internet. Communication connection is one example of communication media.

The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all computer storage media examples i.e. memory storage. Computer storage media may include but is not limited to RAM ROM electrically erasable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as a keyboard a mouse a pen a sound input device a touch input device etc. Output device s such as a display speakers a printer etc. may also be included. The aforementioned devices are examples and others may be used.

The term computer readable media as used herein may also include communication media. Communication media may be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media.

As stated above a number of program modules and data files may be stored in system memory including operating system . While executing on processing unit programming modules e.g. MAPI application may perform processes including for example one or more of method s stages as described above. The aforementioned process is an example and processing unit may perform other processes. Other programming modules that may be used in accordance with embodiments of the present invention may include electronic mail and contacts applications word processing applications spreadsheet applications database applications slide presentation applications drawing or computer aided application programs etc.

Generally consistent with embodiments of the invention program modules may include routines programs components data structures and other types of structures that may perform particular tasks or that may implement particular abstract data types. Moreover embodiments of the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Furthermore embodiments of the invention may be practiced in an electrical circuit comprising discrete electronic elements packaged or integrated electronic chips containing logic gates a circuit utilizing a microprocessor or on a single chip containing electronic elements or microprocessors. Embodiments of the invention may also be practiced using other technologies capable of performing logical operations such as for example AND OR and NOT including but not limited to mechanical optical fluidic and quantum technologies. In addition embodiments of the invention may be practiced within a general purpose computer or in any other circuits or systems.

Embodiments of the invention for example may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process. Accordingly the present invention may be embodied in hardware and or in software including firmware resident software micro code etc. . In other words embodiments of the present invention may take the form of a computer program product on a computer usable or computer readable storage medium having computer usable or computer readable program code embodied in the medium for use by or in connection with an instruction execution system. A computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific computer readable medium examples a non exhaustive list the computer readable medium may include the following an electrical connection having one or more wires a portable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber and a portable compact disc read only memory CD ROM . Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Embodiments of the present invention for example are described above with reference to block diagrams and or operational illustrations of methods systems and computer program products according to embodiments of the invention. The functions acts noted in the blocks may occur out of the order as shown in any flowchart. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality acts involved.

While certain embodiments of the invention have been described other embodiments may exist. Furthermore although embodiments of the present invention have been described as being associated with data stored in memory and other storage mediums data can also be stored on or read from other types of computer readable media such as secondary storage devices like hard disks floppy disks or a CD ROM a carrier wave from the Internet or other forms of RAM or ROM. Further the disclosed methods stages may be modified in any manner including by reordering stages and or inserting or deleting stages without departing from the invention.

All rights including copyrights in the code included herein are vested in and the property of the Applicant. The Applicant retains and reserves all rights in the code included herein and grants permission to reproduce the material only in connection with reproduction of the granted patent and for no other purpose.

While the specification includes examples the invention s scope is indicated by the following claims. Furthermore while the specification has been described in language specific to structural features and or methodological acts the claims are not limited to the features or acts described above. Rather the specific features and acts described above are disclosed as example for embodiments of the invention.

