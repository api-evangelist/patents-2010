---

title: Cross-browser web dialog platform
abstract: A cross-browser dialog platform is provided for supporting hosted web pages in a dialog, such that a web page may be used inside or outside the dialog. Select elements on the hosted page may be hidden when in a dialog, different behavior may be specified for hyperlinks inside or outside the dialog, and a proper size of the dialog may be inferred from its contents without designer input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793598&OS=08793598&RS=08793598
owner: Microsoft Corporation
number: 08793598
owner_city: Redmond
owner_country: US
publication_date: 20100414
---
Web applications are becoming more popular for client server communication. Web applications can be located on servers within an enterprise or online hosted offering and accessed by clients for a wide variety of operations. Document sharing search analysis reporting data mining are just a few examples of web applications. Users access a web application usually through a browsing application that enables them to select among available documents and or services. During the interaction a user may provide various inputs such as names of requested documents services etc. The user may also edit and or view documents through the browsing application with the help of a user interface that is similar to one of a local application.

Pop ups dialog boxes and task panes are user interfaces that may be used by a web application but not necessarily in a consistent manner. The appearances of these user interfaces may differ. Furthermore as the browser processes a navigation event the user also processes the event and may be taken out of her current context e.g. new pages being opened .

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to exclusively identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to a cross browser dialog platform that supports hosting web pages in a dialog such that a web page may be used inside or outside the dialog. According to some embodiments select elements on the hosted page may be hidden when in a dialog different behavior may be specified for hyperlinks inside or outside the dialog and a proper size of the dialog may be inferred from its contents without designer input.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory and do not restrict aspects as claimed.

As briefly described above web pages may be hosted with a dialog through hiding select elements of the hosted web page when in a dialog implementing different behaviors for hyperlinks inside or outside a dialog and inferring a size of a dialog from its contents. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and comparable computing devices. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer implemented process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program that comprises instructions for causing a computer or computing system to perform example process es . The computer readable storage medium can for example be implemented via one or more of a volatile computer memory a non volatile memory a hard drive a flash drive a floppy disk or a compact disk and comparable media.

Throughout this specification the term platform may be a combination of software and hardware components for managing computer and network operations which may provide web applications with hosted web pages and dialog interactions. Examples of platforms include but are not limited to a hosted service executed over a plurality of servers an application executed on a single server and comparable systems. The term server generally refers to a computing device executing one or more software programs typically in a networked environment. However a server may also be implemented as a virtual server software programs executed on one or more computing devices viewed as a server on the network. More detail on these technologies and example operations is provided below.

In a conventional system a user has locally installed applications on their computing device for editing or viewing documents performing computations or analyses storing data and other tasks. Such applications not only consume resources but they also present the challenge of each user s machine having to be set up initially maintained with hardware and software upgrades debugged individually in case of problems etc.

Increasingly popular web applications are replacing the individual computing model in a networked environment. In a typical operation a user may access web application through a browsing application executed on their client device . The services are usually provided through one or more web pages. For example the user may access a document sharing service. The service may present a list of available documents through a graphical user interface in a first web page. Upon selection of a document from the list the selected document may be made available through a second web page. The user may be enabled to edit view or perform similar tasks on the selected document through user interface elements provided on the second web page. If the user performs multiple tasks successively such as editing the document viewing it then editing more and viewing again a new web page may be opened each time or at least a complete change may occur introducing breaks in the context for the user.

In a system according to embodiments user access to web application is provided through web page . Dialog may be opened within web page to enable the user make selections provide input etc. A subsequent step in the user web application interaction may involve web page which may provide additional services to the user with a different set of user interface elements. For example web page may provide a list of available documents from a document sharing service. By clicking on a control the user may activate dialog which may enable the user to indicate desired document s provide credentials for authentication purposes select various options etc. Upon completion of the user s entries or selections in the dialog web page enabling the user to edit the selected document s may be opened within dialog while user interface elements of web page are hidden e.g. grayed . A size of dialog may be automatically adjusted to accommodate web page and hyperlink behaviors within the dialog and or web page may be modified for compatible operations. Thus the user may experience a consistent context as they navigate through the web application.

The example system in has been described with specific servers client devices web applications and interactions. Embodiments are not limited to systems according to these example configurations. A cross browser web dialog platform may be implemented in configurations employing fewer or additional components and performing other tasks. Furthermore specific protocols and or interfaces may be implemented in a similar manner using the principles described herein.

The example web application may include a number of top level web pages such as Team Site and Shared Pages which may be presented using tabs or similar presentation methods. In the example of the user is at the Shared Pages top level page of the web application. A tree structure menu of available pages may be provided on one side of the displayed web page. The top page of the web application Shared Pages presents a list of available web pages with additional information such as page type modification date owner etc. as well. User interface elements such as graphical controls enable the user select tasks associated with the listed web pages. For example the user may select one of the pages and then click on print publish store or share icons. Similarly controls for creating a new page and opening a folder are also provided. Operations associated with the top level page of the web application may further be presented in a tabbed format where relevant operations and views may be grouped under predefined categories like New Actions or Settings .

If the user selects to the option to create a new page by clicking on the new page icon a new web page may be opened in a new view pane of the browsing application or loaded in place of the existing view as shown in reference numeral according to conventional systems. In the process old content may disappear. This results in the user being taken out of their context during the navigation event. Thus the navigation process includes a blank page during the transition as represented in .

The web page New Page displayed by the browsing application in provides the user with user interface controls for editing the new page. According to the illustrated example three distinct sets of functionalities are provided by tabs read format text and insert . These are examples of basic web page content creation and viewing. Of course other functionalities such as addition and processing of graphic elements audio video content and others may also be provided in a similar manner. The user may be prompted to enter a name for the new page and the content . When the user is done they may indicate completion by clicking on create button which may prompt transitioning into yet another view of the browsing application as shown in reference numeral .

The view in displays the Shared Pages of the web application again. This time the newly created web page content is displayed along with the three example tabs read tab selected and controls which enable the user to print publish store or share the newly created page. The tree structure page list on the left side of the view is also updated with the addition of the new page. The transition from the edit user interface of to the read view of results in another break in the context as discussed above represented by the blank page of .

The example web application in includes a Team Site and a Shared Pages top level pages of which Sales Presentations is displayed to the user. Sales Presentations may be part of the Team Site as indicated by the highlighted Team Site tab. A tree structure menu of available pages is provided on one side of the displayed web page. In the menu Presentations is selected as indicated by the highlight box on the selected item. The main view pane of the user interface provides a list of documents available under the selected item.

The list of available documents is presented in a tabbed format categorizing functionalities according to three example groups Read Documents and Menus . Graphical controls as discussed above are also provided on top of the list of available documents . Among the list of available documents a document called Marketing Report is selected as indicated by the textual highlighting.

Dialog includes a limited number of controls e.g. Edit Copy Link and View to enable to the user to interact with the dialog while keeping the elements of the dialog to a manageable number. As discussed previously a full menu of controls may not fit into a smaller dialog. On the other hand employing a large dialog or a completely new web page may break the context for the user. Dialog further includes summary information about the selected document such as owner title description creation date and modification date.

Thus the user may select to edit the selected document view in a web page or copy the link to the selected document to be pasted later . Upon selection of the Edit control the browsing application may transition to user interface as shown in . In user interface the user is provided with options to modify the name of the owner the title and description of the document through text boxes within dialog . At this initial phase of modification another limited set of controls e.g. Save Delete Check may be provided. Another set of controls for editing content properties may be hidden e.g. through graying because they are not applicable yet.

In a web dialog according to embodiments a subset of page contents may be shown inside the dialog such that common elements with the main web page user interface are not displayed when the page is in a dialog. This may be accomplished by providing a Cascading Style Sheet CSS class that is applied when the page is hosted in a dialog and any elements that have the same CSS class applied are hidden when the page renders. CSS is a style sheet language for describing presentation semantics i.e. look and formatting of a document written in a markup language. CSS enables primarily the separation of document content written in a markup language from document presentation including elements such as the layout colors and fonts.

Browsing application user interface illustrates the change in dialog when the user begins entering text or other content into the text boxes provided for modifying the selected document. Since the user is in content input mode now the first set of controls associated with saving deleting or checking the entire document are hidden e.g. grayed . Content property controls are made active. As discussed above these controls may be limited such that an overlap with the main page user interface is avoided. Upon completion of the editing the user may be provided with the option to save and close the document and the document may be made available in the document list of in its new form.

Modal dialog implementations provided by web browsers may differ in Application Programming Interface API and or functionality and some browsers may not provide one. To create a cross browser implementation a system according embodiments may employ a cross browser script and CSS which hosts a web page in a frame element of the parent page. The cross browser script may be according to European Computer Manufacturers Association ECMA International Specification or a similar standardized script. Scripts are distinct from a core code of the application as they are typically written in a different language and may often be created or at least modified by the end user. Scripts may often be interpreted from source code or byte code where the applications they control are traditionally compiled to native machine code. A script language or extension language is a programming language that allows control of one or more software applications. Script languages are frequently embedded in the applications they control.

Another aspect of a web dialog platform according to embodiments is the ability to automatically size the dialog properly for a wide variety of content and viewport sizes. This may be achieved by rendering the page content at a fixed size outside the viewport determining the scrollable width and height of the body element of the hosted page determining the size of the viewport of the parent page and setting the new width and height of the dialog to the lesser of the width and height of the body element of the hosted page and the viewport of the parent page. The auto sizing of the dialog may adjust the width and height independently.

Dialog auto sizing may be applied under different scenarios where the contents of the page hosted in the dialog may change dynamically. For example on a document sharing web page listing available documents users may add remove columns which may add remove fields on a list form and thus changing the form size. According to another example a localized application may change the strings on a page to a different language and cause the size of the page to shrink or grow. Imposing an initial fixed size for these scenarios may inevitably result in a dialog that is too small and has scrollbars or is too large and has a lot of unnecessary white space. A dialog according to embodiment may calculate the size of the contents and resize itself accordingly.

Yet a further aspect of a web dialog platform according to embodiments includes the ability to specify different behavior for hyperlinks on a page based on whether the page is hosted in a dialog or a full browser user interface. This may be accomplished by defining navigation options for a link within the dialog in a new browser window or in the parent browser window using a markup language attribute for a link between two pages e.g. the rel HTML attribute or a parameter on the hyperlink s query string to define the navigation behavior on page load of the hosted page iterating through anchor tags on the hosted page to find hyperlinks with either the relevant markup language attribute or query string key and modifying the hyperlinks on the hosted page to use the dialog specific behavior when selected.

When a dialog contains a link the target of selecting that link may depend on a desired user experience. In some cases the user may want the link to change the dialog contents and in other cases the user may want to have it open in a new browser window. A dialog platform according to embodiments may interpret links based on both markup and query string parameters.

The examples in and have been described with specific document types user interface elements configurations and interactions. Embodiments are not limited to systems according to these example configurations. A cross browser web dialog platform may be implemented in configurations using other types of documents user interface elements and configuration in a similar manner using the principles described herein. For example instead of CSS a Extensible Markup Language XML namespace with semantic markup may be employed as a filter.

Client applications executed on any of the client devices may interact with a web application through a browsing application on the servers or on individual server . User interface elements of the hosted page may be hidden selectively when in a dialog different behavior may be specified for hyperlinks inside or outside the dialog and or a proper size of the dialog may be inferred from its contents without designer input as discussed previously. The web application may retrieve relevant data from data store s directly or through database server and provide requested services e.g. document editing to the user s through client devices .

Network s may comprise any topology of servers clients Internet service providers and communication media. A system according to embodiments may have a static or dynamic topology. Network s may include secure networks such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s may also coordinate communication over other networks such as Public Switched Telephone Network PSTN or cellular networks. Furthermore network s may include short range wireless networks such as Bluetooth or similar ones. Network s provide communication between the nodes described herein. By way of example and not limitation network s may include wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources and data distribution systems may be employed to implement a platform for cross browser web dialog. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

Web application may provide web based services such as viewing editing and comparable processing of documents to remote users through a browsing application on the user s client device. Through the dialog module web application may display hosted web pages inside or outside a dialog hide select elements of the hosted web page when in a dialog and specify different behavior for hyperlinks inside or outside the dialog as discussed previously. Moreover a web application according to embodiments may support multiple layers of dialogs that may be opened at the same time. Web application and dialog module may be separate applications or an integral component of a hosted service. This basic configuration is illustrated in by those components within dashed line .

Computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer readable storage media. Computer readable storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer readable storage media may be part of computing device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device and comparable input devices. Output device s such as a display speakers printer and other types of output devices may also be included. These devices are well known in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other devices such as over a wired or wireless network in a distributed computing environment a satellite link a cellular link a short range network and comparable mechanisms. Other devices may include computer device s that execute communication applications other web servers and comparable devices. Communication connection s is one example of communication media. Communication media can include therein computer readable instructions data structures program modules or other data. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Example embodiments also include methods. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where a web page is presented to a user through a browsing application on a client machine associated with the user. At operation a user selection is received indicating the user s desire to create edit view remove a document or perform comparable actions on the web application. In response to the received user selection at least a portion of the web page elements may be hidden as discussed previously at operation and a dialog presented within the browsing application user interface on top of the hidden web page elements at operation .

Contents of the dialog may reflect a selection of controls and or information associated with the user indicated action in operation . At operation another user selection or input based on the presented controls may be received. For example the user may select to edit an existing document create a new document or perform a similar action. Based on the received user selection or input a new web page displaying relevant controls associated with the desired action s may be presented on top of the hidden elements within a dialog at operation . Before the new web page is displayed within the dialog a size of the dialog may be adjusted based on contents of the new web page at operation preceding operation . Moreover portions of controls on the new web page may be dynamically hidden and activated based on user activity. A portion of the elements within the dialog may also be hidden by selectively removing the elements from the displayed web page. A behavior of hyperlinks within the presented content of the new web page may be specified by the platform depending on inferred user intention such as opening a new web page inside the dialog or outside the dialog.

The operations included in process are for illustration purposes. A cross browser web dialog platform may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

