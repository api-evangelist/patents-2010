---

title: Determining when to perform a maintenance operation on a computing device based on status of a currently running process or application on the computing device
abstract: A method for determining when to perform an operation on a computing device is described. The computing device receives a direction to perform an operation. A deferral configuration including at least one criterion is also received. The computing device determines whether a criterion is met and defers performance of the operation if it is met. The computing device performs the operation if a criterion is not met.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09229773&OS=09229773&RS=09229773
owner: Crimson Corporation
number: 09229773
owner_city: Dover
owner_country: US
publication_date: 20100630
---
The present disclosure relates generally to computers and computer related technology. More specifically the present disclosure relates to determining when to perform an operation on a computing device.

Computer and communication technologies continue to advance at a rapid pace. Indeed computer and communication technologies are involved in many aspects of a person s day. Computers commonly used include everything from hand held computing devices to large multi processor computer systems.

Computers are used in almost all aspects of business industry and academic endeavors. More and more homes are using computers as well. The pervasiveness of computers has been accelerated by the increased use of computer networks including the Internet. On a network one or more servers may provide data services and or may be responsible for managing other computers. The managed computers are often referred to as nodes. A computer network may have hundreds or even thousands of managed nodes.

Most companies have one or more computer networks and also make extensive use of the Internet. The productivity of employees often requires human and computer interaction. Improvements in computers and software have been a force for bringing about great increases in business and industrial productivity.

Maintaining and supporting computer systems is important to anyone who relies on computers. Whether a computer or computing device is in a home or at a business at least some maintenance and or support is often needed. For example problems with computer hardware may arise at times. In addition computer hardware is often upgraded and replaced with new components. Similarly computer software is also frequently upgraded or replaced. New computer hardware and software is continually being integrated into systems across the world. Furthermore computer systems may need to be scanned in order to detect and mitigate security threats.

Often end user issues may arise when a computing device is in need of performing maintenance or some other operation but also needs the use of system resources to accomplish an important objective such as running a critical application or displaying a presentation. For example if an end user s presentation to a large group of people is interrupted or slowed by an operating system update the end user may be frustrated or disappointed with his computer s performance.

As shown from the above discussion there is a need for systems and methods that will improve the ability to manage and support computer systems while avoiding or managing interruptions or performance degradations with an end user s computer use. Improved systems and methods may enable a person performing computer support to meet system maintenance needs while satisfying the end user s need for system resources to meet their objectives.

Many computers now perform a variety of automated operations e.g. the end user does not explicitly start the operation . For example operating system updates or software updates are sometimes automatic. The systems and methods disclosed herein help manage these kinds of operations to minimize or at least lessen the likelihood that such operations will negatively affect an end user s computer activities.

Often a computing device may need to perform an operation e.g. install software display a message etc. or be in need of maintenance e.g. installing a software patch uninstalling harmful or unauthorized software etc. but may also need to perform another task e.g. perform presentation functions perform video conferencing functions run an important application etc. . These tasks may include interactions with corporate customers or groups of users where the priority of the task being performed on the computing device is greater than the priority of remediating a system vulnerability or prompting a user e.g. to allow patch installation or reboot . There may be many applications that should not be slowed or interrupted by performing maintenance operations or even by prompting to perform a maintenance operation. Some examples when slowing or interrupting activities on a computing device should be avoided include when the computing device is currently running WebEx i.e. conferencing software currently showing a full screen video presentation from a DVD or running other third party software of concern etc. The list of examples may be potentially large yet difficult to identify and automatically handle ahead of time e.g. program into maintenance software . Thus systems and methods that allow identifying applications or device activities that should not be slowed or interrupted may be beneficial.

Simply checking for the existence of such applications or activities may not be enough however. It may often be beneficial to consider what state the application or device is in. For example an application may simply be running in the background while a user is not actually using it. Or a presentation application may be in the foreground but the user may just be working on a presentation but not actually presenting to others.

Systems and methods for determining when to perform certain operations on a computing device are disclosed. One example of one such operation is a maintenance operation. Since maintenance operations may slow or even interrupt activities occurring on the computing device these systems and methods may enhance centralized control of when maintenance operations are performed. This can be accomplished by assessing activity occurring on the computing device. Thus the needs of a computing device user may be balanced with the needs of computer support personnel to provide maintenance for that computing device.

Software that performs maintenance operations may often be seen in a negative light by some users. Although such software may be valued by computer support personnel the user s experience in encountering the software may only be when the software slows or even interrupts activities to perform maintenance e.g. patching on the user s computing device. By reducing the impact this software may cause on the computing device the user experience may be improved. This way computer support personnel may have more confidence when using software to perform maintenance during the day when quicker feedback may be had or when system vulnerabilities may be mitigated more rapidly and yet still avoid possibly slowing or interrupting important actions that users may be paid to perform.

A method for determining when to perform an operation on a computing device is disclosed. The method includes receiving a direction to perform an operation on a computing device receiving a deferral configuration that includes at least one criterion and determining whether the criterion is met. Performance of the operation is deferred on the computing device if the criterion is met. The operation is performed if the criterion is not met.

The deferral configuration may include multiple criteria that define multiple conditions as to when performance of the operation is to be deferred. The criterion may include a name of a running process a name of a running application or a name of a running process or application having a foreground user interface window.

The deferral configuration may be configurable to add or delete process or application names and to add or delete one or more criteria. At least one criterion may be when a process or application is associated with a foreground user interface window the foreground user interface window includes a specified caption or class and a name of the process or application is on a list of process or application names.

The criterion may be when a process or application is associated with a foreground user interface window the foreground user interface window occupies at least an entire allowable client area and a name of the process or application is on a list of process or application names. The criterion may be when a process or application is associated with a foreground user interface window the foreground user interface window occupies at least an entire allowable client area on at least one virtual desktop and a name of the process or application is on a list of process or application names.

The criterion may be when a process or application is associated with a user interface window that has a property indicating that the user interface window is maximized and a name of the process or application is on a list of process or application names. The criterion may be when a process or application is using a specified hardware device and a name of the process or application is on a list of process or application names.

The criterion may be when a process or application is using a specified amount of CPU resources and a name of the process or application is on a list of process or application names. The criterion may be when a process or application has loaded a specified software control and a name of the process or application is on a list of process or application names. The operation may be a maintenance operation.

A computing device that is configured for determining when to perform an operation is also disclosed. The computing device includes a processor and instructions stored in memory. The computing device receives a direction to perform an operation and a deferral configuration that includes at least one criterion. The computing device determines whether the at least one criterion is met and defers performance of the operation if the criterion is met. The computing device performs the operation if the criterion is not met.

A computer readable medium for determining when to perform an operation is also disclosed. The computer readable medium includes instructions for receiving a direction to perform an operation receiving a deferral configuration that includes at least one criterion and determining whether the criterion is met. Instructions are also included for deferring performance of the operation if the criterion is met and performing the operation if the criterion is not met.

Various configurations are now described with reference to the Figures where like reference numbers may indicate identical or functionally similar elements. The present systems and methods as generally described and illustrated in the Figures herein could be arranged and designed in a wide variety of different configurations. Thus the following more detailed description of several configurations of the present systems and methods as represented in the Figures is not intended to limit the scope of the systems and methods as claimed but is merely representative of the configurations of the systems and methods.

The administrative system may include a management application . The management application may include a user interface . The administrative system may also include software or one or more updates as well as one or more installation scripts triggers or overrides . The administrative system may also include one or more deferral configurations . The managed node s may include a management agent . The management agent for example is software used to perform management tasks on the managed node . The deferral configurations may be saved in a particular scan and repair setting associated with the management agent . The deferral configurations may comprise data instructions or both. For example a deferral configuration is a configuration file stored on the administrative system or elsewhere on the network . The deferral configurations may comprise several criteria that define several conditions as to when to defer performing an operation. The deferral configurations could be stored as an XML file executable file or other file type.

The management application may manage the managed node s . For example the user interface provides an interface for computer support personnel to manage the managed node s . The software or updates may be computer programs or updates used to maintain or update managed node s . An update can be a software patch or upgrade for example. The software or updates may be stored on the administrative system or on another network node. For example the software or updates could be stored on an intranet server or on a computing device connected to the Internet .

The installation scripts triggers or overrides may be software data or both. Installation scripts may be used to instruct managed node s via the management agent to install or uninstall software or updates . Triggers may be used to instruct the management agent on when to run or execute. Overrides may be used to instruct the management agent to perform an action regardless of whether or not the managed node was recently scanned or rebooted or regardless of whether any deferral criteria may be met. The deferral configurations may include data instructions or both used to cause the management agent to defer performing a maintenance operation on the managed node when certain criteria are met. Users or computer support personnel may modify add or delete deferral configurations .

Each configurable names list or other configurable option s may be associated with configurable deferral criteria. Configurable deferral criteria may be data instructions or both indicating when a management agent should not perform a maintenance operation. In one configuration deferral criteria associated with the running names list requires a management agent to defer performing a maintenance operation when an application or process identified in the running names list is currently running on a managed node . For example if a named financial application is currently running on a managed node the management agent defers performing a maintenance operation.

In another configuration deferral criteria requires a management agent to defer performing a maintenance operation when a named application or process owns a user interface that is currently displayed in the foreground on a managed node . For example if Microsoft Word is named on the foreground user interface names list and is currently displayed in the foreground on a managed node the management agent defers performing a maintenance operation.

In yet another configuration deferral criteria associated with a maximized user interface names list requires deferral of a maintenance operation if a named application or process has a user interface in the display foreground that occupies a certain amount of displayable area e.g. of the desktop or a virtual desktop . Alternatively these deferral criteria could require the management agent to defer performing a maintenance operation when a named application or process is in a presentation mode or has a maximized user interface in the display foreground. For example a management agent may defer performing a maintenance operation when Microsoft PowerPoint is in presentation mode has its window in the foreground occupying a certain amount of the display or if its window is maximized in the foreground.

The configurable deferral criteria associated with other configurable option s may require a management agent to defer performing a maintenance operation when a specific criterion is e.g. or criteria are met. In one example the management agent defers a maintenance operation if an application or process named in the configurable option is using a specified hardware device on the managed node . In another example a maintenance operation is deferred if an application or process named in configurable option is using a certain amount of Central Processing Unit CPU resources. In one instance a maintenance operation is deferred according to the configurable option when Microsoft Visual Studio is utilizing a specified amount of CPU resources e.g. possibly indicating that compiling is in progress . Other examples of deferral criteria associated with configurable option may include searching for a Topmost style window with a particular caption or class or when a particular application or process has loaded a specified software e.g. ActiveX control or controls.

The user interface may also include a series of checkboxes or a drop down list. The checkboxes or drop down lists may be used to set or indicate which deferral criteria is associated with the names lists or other option s . Alternatively the application or process names may be in a single list where a series of checkboxes or a drop down list may be used to set or indicate which application or process name is associated with which criteria.

A deferral configuration may also include node association s . The node association s may indicate which node or group of nodes a deferral configuration applies to. A deferral configuration may apply to a single node any group of nodes or all of the nodes on the network . That is different managed nodes may be associated with one or more different deferral configurations . A particular deferral configuration may be a default deferral configuration that any node or group of nodes on the network may use in the absence of a specific node association . A particular deferral configuration may also be tied to the performance of a specific maintenance operation. For example even though a deferral configuration has a specific node association that node association may be overridden by a deferral configuration for a specific maintenance operation. That is a deferral configuration may override other deferral configurations on any node or group of nodes in order to perform a specific maintenance operation at repair time. Users or computer support personnel may use the user interface to designate which node s a particular deferral configuration applies to via the node association .

A deferral configuration may also include a user response requirement . Users or computer support personnel may use the user interface to designate whether or not a user response e.g. approval is required before performing a maintenance operation on the managed node . If the user response requirement is activated the management agent may notify the user of a managed node of an imminent maintenance operation or prompt the user of a managed node to allow or deny the performance of a maintenance operation on the managed node . Furthermore the user of a managed node may or may not be prompted to allow the managed node to reboot.

In one example a user of the managed node is using an application ABC that is not on any of the name lists . The managed node proceeds to perform a maintenance operation possibly slowing the managed node s performance or perhaps even interrupting the user with a reboot. If the user complains to computer support personnel that the managed node should not be slowed or interrupted while running application ABC then the administrator may use the user interface to add the application name ABC to the running names list . The computer support personnel may also designate the user s managed node through the use of the node association such that a maintenance operation will be deferred when ABC is running. Thus the next time the user is using ABC and a maintenance operation is pending the maintenance operation may be deferred or the user prompted before proceeding e.g. in accordance with the user response requirement .

The management agent may be a software application or program used to manage the managed node . That is the management agent may perform maintenance operations and provide other functionality. For example the management agent performs maintenance operations on the managed node as instructed by the administrative system . More specifically the management agent can download and or install uninstall application s or software updates or patches from the administrative system or from some other intranet or Internet address. The management agent may scan the managed node for application s or operating system s in need of maintenance e.g. the application s or the operating system s are in need of a software update or patch . Furthermore the management agent may scan the managed node for unauthorized application s security threats e.g. viruses Trojans worms malware spyware etc. or other unwanted software e.g. adware .

The management agent may include trigger s . The triggers may cause the management agent to perform maintenance operations on the managed node . The triggers may be initially included in the management agent or may be downloaded from or modified by the administrative system . For example the triggers are events occurring at the managed node. One example of a trigger is receiving an instruction to perform a maintenance operation from the administrative system . Other examples of triggers are when the managed node is logged off on locked unlocked transitioned into out of screen saver mode or rebooted. Other examples include when a piece of hardware is added or used e.g. attaching or running a Digital Video Disc DVD drive a Compact Disc CD drive a Universal Serial Bus USB thumb drive or when connecting to a network etc. when the managed node has an Internet Protocol IP address change or when a scheduled time or interval occurs e.g. a scheduled periodic scan a time designated by the administrative system etc. .

The management agent may include a deferral configuration . The deferral configuration may be initially coded into the management agent or may be downloaded from or modified by the administrative system . As discussed above a deferral configuration may be configurable allowing the addition deletion or modification of name lists or other option s with varying deferral criteria.

If a scan or reboot was not recently performed and the scan or reboot requirement is not overridden the management agent may report to the administrative system a reason why a maintenance operation was not performed. For example a managed node may be instructed either to reboot if necessary e.g. by checking the managed node state or to reboot regardless of the managed node state. If the command is to reboot if necessary then the managed node may determine whether a reboot is needed e.g. by checking a managed node registry etc. . However if the managed node determines that it should defer rebooting the managed node may schedule a local task e.g. to launch itself again to perform the reboot . In one configuration the scheduled task may be stored in a volatile portion of the registry for a Windows operating system. Thus if the managed node is rebooted for any reason the scheduled task is lost and will no longer attempt to reboot. Once a scan or reboot has been performed the management agent may query the administrative system whether the maintenance operation is still needed.

If a scan or reboot was recently performed or the scan or reboot requirement is overridden the management agent may download a software update or patch if needed. For example if the desired maintenance operation requires a software update or patch the software update or patch may be downloaded from the administrative system or other intranet or Internet address. However if the desired maintenance operation does not require a software update or patch e.g. an uninstall a scan an update rollback etc. or if a required software update or patch was previously downloaded then a software update or patch may not be downloaded .

The management agent may determine whether to defer performing a maintenance operation. For example the management agent may determine whether a particular named process or application is running and whether one or more deferral criteria are met. If the management agent determines that a maintenance operation should be deferred then the management agent may defer performing a maintenance operation and or report to the administrative system that the maintenance operation was not performed. The management agent may also report to the administrative system any reason s for deferring performance of the maintenance operation. If the management agent determines that the maintenance operation should not be deferred then the management agent may perform the maintenance operation and or report to the administrative system that the maintenance operation has been performed. In performing the maintenance operation the management agent may prompt or notify the user of the managed node according to the user response requirement . Alternatively the management agent may not prompt or notify the user of the managed node according to the user response requirement .

If any defer criterion is met for any of the process or application names on the list s or other option s the management agent may defer performing the maintenance operation and or report to the administrative system that the maintenance operation was not performed. The management agent may also report to the administrative system the reason s why the maintenance operation was not performed. If none of the defer criteria are met for any of the process or application names on the list s or other configurable option s then the management agent may perform the maintenance operation and or report to the administrative system .

Thus the systems and methods disclosed herein may allow automatic deferral of a maintenance operation. For example this may be accomplished by comparing running processes foreground windows and maximized windows to a predefined list of applications that should not be interrupted. While a user of the managed node could be prompted e.g. asked whether it is a good time to repair or reboot it may be desirable instead to automatically detect whether it is an opportune time to repair or reboot. In this way the user of a managed node would not be interrupted at all e.g. with a prompt when using the managed node in a particular way.

The management agent may wait for a condition to occur before attempting to perform the maintenance operation again. For example if the reason for deferring performance of a maintenance operation was that an important financial application was running on the managed node then the management agent may periodically determine whether any defer criteria are met. The management agent may thus effectively defer performing a maintenance operation at least until the important financial application is no longer running on the managed node . Optionally the management agent may periodically check to determine whether the machine was in a low use state such as when the managed node was logged off locked or in a screen saver. At that point the management agent may perform the maintenance operation and or report regardless of whether the important financial application is still running on the managed node . Optionally the management agent may simply wait for a specified time to expire and then perform the maintenance operation and or report to the administrative system that the maintenance operation has been performed.

The management agent may determine a first condition whether any of the foreground user interfaces covers at least the allowable client area for its corresponding virtual desktop e.g. is maximized . Alternatively the management agent may determine whether any of the foreground user interfaces are in a MAXIMIZED state. Either approach may be useful but it should be noted that some applications may not use the MAXIMIZED state when running in a full screen mode such as Microsoft Internet Explorer for example. The management agent may also determine a second condition whether any of the maximized user interfaces belongs to an application or process whose name is included in the list associated with criteria to defer performing a maintenance operation when any of those identified applications or processes own a user interface that is both in the foreground and maximized on one of the virtual desktops. If both conditions are met then the management agent may defer performing the maintenance operation and or report to the administrative system that maintenance has been deferred and any reason s for deferring. Otherwise the management agent may perform the maintenance operation or continue to determine whether any other defer criterion is met.

The administrative system and or managed node may include a processor and memory . The memory may include instructions and data . The processor controls the operation of the administrative system and or managed node and may be for example a microprocessor a microcontroller a digital signal processor DSP or other device known in the art. The processor typically performs logical and arithmetic operations based on program instructions and or data it loads from the memory .

The administrative system and or managed node typically may include one or more communication interfaces for communicating with other electronic devices. The communication interfaces may be based on wired communication technology wireless communication technology or both. Examples of different types of communication interfaces include a serial port a parallel port a Universal Serial Bus USB an Ethernet adapter an IEEE 1394 bus interface a small computer system interface SCSI bus interface an infrared IR communication port a Bluetooth wireless communication adapter and so forth.

The administrative system and or managed node typically may include one or more input devices and one or more output devices . Examples of different kinds of input devices include a keyboard mouse microphone remote control device button joystick trackball touchpad lightpen etc. Examples of different kinds of output devices include a speaker printer etc. One specific type of output device which may be typically included in a computer system is a display device . Display devices used with configurations disclosed herein may utilize any suitable image projection technology such as a cathode ray tube CRT liquid crystal display LCD light emitting diode LED gas plasma electroluminescence or the like. A display controller may also be provided for converting data stored in the memory into text graphics and or moving images as appropriate shown on the display device .

Of course illustrates only one possible configuration of an administrative system and or managed node . Various other architectures and components may be utilized.

In the above description reference numbers have sometimes been used in connection with various terms. Where a term is used in connection with a reference number this is meant to refer to a specific element that is shown in one or more of the Figures. Where a term is used without a reference number this is meant to refer generally to the term without limitation to any particular Figure.

The term determining encompasses a wide variety of actions and therefore determining can include calculating computing processing deriving investigating looking up e.g. looking up in a table a database or another data structure ascertaining and the like. Also determining can include receiving e.g. receiving information accessing e.g. accessing data in a memory and the like. Also determining can include resolving selecting choosing establishing and the like.

The phrase based on does not mean based only on unless expressly specified otherwise. In other words the phrase based on describes both based only on and based at least on. 

The term processor should be interpreted broadly to encompass a general purpose processor a central processing unit CPU a microprocessor a digital signal processor DSP a controller a microcontroller a state machine and so forth. Under some circumstances a processor may refer to an application specific integrated circuit ASIC a programmable logic device PLD a field programmable gate array FPGA etc. The term processor may refer to a combination of processing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The term memory should be interpreted broadly to encompass any electronic component capable of storing electronic information. The term memory may refer to various types of processor readable media such as random access memory RAM read only memory ROM non volatile random access memory NVRAM programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable PROM EEPROM flash memory magnetic or optical data storage registers etc. Memory is said to be in electronic communication with a processor if the processor can read information from and or write information to the memory. Memory that is integral to a processor is in electronic communication with the processor.

The terms instructions and code should be interpreted broadly to include any type of computer readable statement s . For example the terms instructions and code may refer to one or more programs routines sub routines functions procedures etc. Instructions and code may comprise a single computer readable statement or many computer readable statements.

The term computer readable medium refers to any available medium that can be accessed by a computer. By way of example and not limitation a computer readable medium may comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and Blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers.

Software or instructions may also be transmitted over a transmission medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of transmission medium.

The methods disclosed herein comprise one or more steps or actions for achieving the described method. The method steps and or actions may be interchanged with one another without departing from the scope of the claims. In other words unless a specific order of steps or actions is required for proper operation of the method that is being described the order and or use of specific steps and or actions may be modified without departing from the scope of the claims.

It is to be understood that the claims are not limited to the precise configuration and components illustrated above. Various modifications changes and variations may be made in the arrangement operation and details of the systems methods and apparatus described herein without departing from the scope of the claims.

