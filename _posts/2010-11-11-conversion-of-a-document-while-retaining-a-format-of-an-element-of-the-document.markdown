---

title: Conversion of a document while retaining a format of an element of the document
abstract: One or more techniques and/or systems are disclosed for high fidelity conversion of a document to a less rich format. A bounding area can be identified in the document that comprises an unsupported element, and/or a blending of elements that is not supported in the less rich format. The bounding area that comprises the unsupported element(s) can be rasterized, by creating an image and identifying raster data for the image. Those elements in the document that are outside the bounding area are not rasterized, and their vector data-based format is retained in the converted document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09218342&OS=09218342&RS=09218342
owner: Microsoft Technology Licensing, LLC
number: 09218342
owner_city: Redmond
owner_country: US
publication_date: 20101111
---
In a computing environment documents such as those produced and or rendered by word processors browsers and other document creation application can comprise vector data and or raster data. Vector data can comprise code based descriptions of graphical elements of the document text based elements of the document and or or images in the document. For example the vector data may describe the letter of a word the font used the size of the character and the color of the character. Raster data can comprise descriptions of the respective pixels that make up one or more elements in an image of the document. For example raster data may indicate a value for color channels for the pixel such as the red green and blue RGB color channels. Some types of vector data may not be supported for rendering in some types of applications configured to display the document therefore some vector data is rasterized for display in applications that don t support the vector data.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Vector based elements in a document are described by vector data and may not be affected by a zoom level or display resolution for a final visual display of the document. For example because the vector data describes the element when a user zooms into a graphical element in the document the vector based element can retain a same fidelity. However rasterized elements in a document are described by raster data and they can be affected by zooming and or display resolution. For example because the raster data describes a color for a pixel when zooming into the element it can lose resolution and become very granulated e.g. pixilated because the display only knows what the color at that pixel is supposed to be.

Because some applications cannot support all types of vector data e.g. some vector data is proprietary and or unknown to some applications in order to view the document that comprises unsupported vector data it needs to be converted. Typically converting a vector based document to a less rich format e.g. less vector data comprises rasterizing the entire document. Rasterizing the entire document is relatively easy and straight forward but the size of the document may be increased fidelity may be lost in the converted document and a user may be limited in uses for the document.

Accordingly one or more techniques and or systems are disclosed that provide for rasterizing merely a portion of the document for conversion for example where the rasterized portions comprise unknown and or unsupported vector data. For a portion of the document where vector data is unsupported a raster image can be created and combined with the portion of the document that is non rasterized. Further where elements are blended such as supported elements blended with unsupported elements merely the portion of the document comprising this type of blending can be rasterized and combined with unrasterized elements. In this way for example the converted document can retain a higher amount of vector data while mitigating an amount of raster data thereby producing a higher fidelity yet relatively compact document than previous techniques.

In one embodiment for high fidelity conversion of a document to a less rich format one or more bounding areas are identified in the document where the one or more bounding areas respectively comprise a blending of elements that is not supported in the less rich format such as a blending of unsupported elements and supported elements. Further the elements in the respective one or more bounding areas are rasterized e.g. converted to raster data and a format of a non rasterized element in the document those that are outside the one or more bounding areas is retained such as in the converted document.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

A method may be devised that provides for efficient use of vector data retained in a document e.g. maximizing the vector data retained when converting the document from a rich format to a less rich format. Documents that are displayed in applications such as browsers and word processors can comprise a mix of raster data and vector data. When converting these document from a rich format e.g. supports more vector types to a less rich format e.g. supports less vector types vector data is commonly rasterized. Rasterizing vector data can result in a loss of fidelity for high frequency data e.g. data comprising a high contrast between edges and or colors such as text paths etc. . Using the techniques described herein a higher fidelity document may be provided by retaining more vector data in the converted document.

At the elements in the respective one or more bounding areas are rasterized. Raster data can describe pixels in a raster image for example where the raster image comprises color data e.g. color values for red green and blue RGB color channels for respective pixels. In one embodiment rasterizing contents of the bounding area can comprise converting the contents to a raster image comprising raster data for the respective pixels in the bounding area. For example an image can be created from the vector data and the image can be converted to raster data such as by identifying the color channel information for the pixels.

At in the exemplary method an image format of one or more non rasterized elements that are outside the one or more bounding areas of the document is retained. That is for example those elements outside the identified bounding area s of the document may be described by vector data. In this example during the conversion the vector data is retained in the converted document for these non rasterized elements. In this way in this embodiment merely those blended elements having vector data that is not supported in the rendering application are rasterized while elements whose vector data is supported in the rendering application e.g. unblended elements retain their vector data in the converted document. By selectively rasterizing merely unsupported elements thereby maintaining more vector data for example the converted document can comprise a higher fidelity than one that is completely rasterized.

Having rasterized the bounding area s and retained the format of the non rasterized element s the exemplary method ends at .

As another illustrative example a source application may create documents in a rich format that comprises vector data where vector data describes the elements e.g. instead of describing the pixels as in raster data . In this example the requesting application may not know how to render certain vector data and or blended elements. Often applications may utilize vector data that is proprietary and or merely supported by a few applications. Further for example a user may wish to view the document that comprises the vector data from the source application but the requesting application does not have support for understanding the vector data from the source application.

At in the example embodiment a number of elements comprised in the document is reduced. For example reducing a number of elements in the document can reduce a number of elements that are checked to determine if rasterization is to be utilized and or can reduce a number of elements for rasterization. Reducing the number of elements can comprise flattening a user interface markup language UIML vector tree at for the document to comprise separate rendering UIML elements for respective clipping canvas children.

For example documents that comprise vector data can utilize a UIML which is a markup language such as extensible markup language XML used for rendering and describing graphics and controls. UMILs are typically read by a sub application at runtime to be interpreted as program code for processing and rendering in a desired form for the document particularly when processed by a browser application for example. As another example a UMIL may also be described as a graphics markup language where the markup language describes the graphical elements of the document.

In one embodiment the UMIL for the document can be organized in a tree where respective nodes have at least one parent and zero or more children. Further leaves of the tree e.g. terminal nodes can comprise visible elements of the document and their parents can comprise container elements. In this embodiment the UMIL tree can be flattened so that the parent node s for a leaf are collapsed down to the leaf for example such that merely the respective leaves of the tree remain. In one embodiment the flattening can comprise creating a representation of the vector tree that merely comprises leaf graphical elements associated with parent container element s .

Further at the reducing of the elements can comprise grouping compatible blending elements. In one embodiment the grouping can comprise grouping UIML elements that exhibit compatible blending with each other into a group from the separate rendering UIML elements. Compatible blended elements can comprise normal blended elements for example where respective normal blended elements can share a same transform and or clipping region for example.

In this example those normal blended elements can be grouped into a same container. As an illustrative example the container may deal with a visual component of a graphical element such as color font size format etc. In this example a transform can comprise an application of a graphics operation e.g. change position clipping part of text or graphic etc. to a basic element that transforms them into another form.

Further in one embodiment when flattening the tree and grouping elements text based UIML elements may not be grouped together. For example text fidelity can be important for the document particularly if the user wishes to zoom in to text. In this example if text is rasterized e.g. when two text elements are grouped into one visual element container merely the pixels are described for the text therefore when zooming in the text may exhibit pixilation e.g. jagged lines . Alternately when text is described by vector data e.g. by keeping the text elements in separate visual containers the fidelity is retained for the text even when zooming in for example.

In one embodiment when flattening the tree and grouping elements a second group of compatible blending elements can be started for grouping elements in the tree when a number of elements in a first group meets a desired threshold. For example normal blended elements can be grouped into a visual graphic container until the container is full where the number of elements that comprise full can be set by a threshold value. As an illustrative example empirical testing may determine that more than a particular number of elements e.g. 40 in the visual graphics container can reduce a fidelity and or conversion efficiency of the document.

In this way for example the number of elements for the document can be reduced by flattening the tree and grouping elements having a compatible e.g. normal blending. In the exemplary embodiment reducing of the number of elements can result in one or more groups of blended elements and on or more groups of unblended elements .

At non trivial blended elements are identified. For example non trivial blended elements can comprise those graphical elements text and or images that overlap with each other. Further in this example the overlapping comprises a non trivial e.g. necessary blending such that a final visual display of the blended elements incorporates the blending to produce a desired visual effect.

As an illustrative example two graphical elements may be overlayed in a way where a portion of a top element is partially transparent such that a portion of an underlying element can be seen through the top element. In this illustrative example it may be important to incorporate the blending in order to mitigate one of the elements completely cover ring or being hidden by the other. As another illustrative example colors of elements can be blended and or portions of one element having a desired color may be designed to show through or over another color of another element. In this illustrative example a design and or use of colors between overlapping elements can comprise a non trivial blending.

Further the order in which the elements are laid out using the vector data for the document can have an effect on how the blending may be trivial versus non trivial. For example two overlapping elements can comprise non trivial blending and a third overlapping element while not blended can be laid in a desired manner such that its color comprises the top visual effect. In this example if an order of lay out for the third element is between the first and second the third element may need to be included in a bounding area comprising the non trivial blended elements so that its color can be seen on top in the visual display.

At in the exemplary embodiment for respective non trivial blended elements groups a bounding area is created around the non trivial blended elements in a group at . In one embodiment a bounding area can be identified for the one or more non trivial blended element groups. In this embodiment an initial bounding area can be identified that comprises the elements associated with the blending.

For example as illustrated in the exemplary embodiment and of respectively a first element may be laid out first and a second element is laid on top of the first element in order. Further a third element may be laid on top of the second element in the document. In this example the first and second elements and comprise a non trivial blending where the first element may be desired to show through the second element . In the exemplary embodiment an initial bounding area comprises the first and second elements and as well as a portion of the third element .

Returning to at the initial bounding area can be modified to comprise merely the elements associated with the blending. For example in the elements comprised in the initial bounding area can be examined to determine which elements comprise non trivial blending and therefore will be rasterized and which ones may not need to be rasterized. In this embodiment those elements that may not need to be rasterized can be removed from the group of elements in the initial bounding area.

As illustrated in the example embodiment of the third element comprises a portion that overlaps the bounding area . However as the third element was laid down after the first and second elements and and the visual lay out comprises the overlapping portion of the third element to be displayed on top the initial bounding area can be modified to remove the third element such that the bounding area merely comprises the first and second elements. That is because the third element is applied after the first and second elements and it will cover a corner of the second element as desired even if it is not included in the initial bounding area .

In one embodiment the modifying the bounding area can comprise reducing the bounding area to mitigate a number of elements in the bounding area. For example an initial bounding area may comprise all of the first second and third elements and of the exemplary embodiment . In this example the initial bounding area can be reduced e.g. as in of to merely incorporate the first and second elements and so that merely those non trivial blended elements are incorporated in the bounding are.

In another embodiment the modifying the bounding area can comprise expanding the bounding area to comprise compatible blended elements that overlap one or more elements in the initial bounding area. For example in the example of text elements and may be laid out in the document prior to a seventh element . In this example the seventh element overlaps the text element A is such a way that may obscure the text in a final display. However the non trivial blending of the elements and can comprise having the text show over the seventh element .

Further in the exemplary embodiment of a bounding area can comprise the non trivial blending of the two elements and . As an illustrative example if an eighth element not shown comprised an non trivial blending by overlapping both the first element and the seventh element the initial bounding area can be expanded to comprise the eighth element seventh element and the text element as well as the first and second elements and .

Returning to at the bounding area comprising merely those non trivial blended elements is rasterized. For example rasterizing of the bounding area can comprise creating an image of the bounding area and identifying the raster data for the image such as the color channel values for respective pixels in the image. In this example the raster data can comprise a raster image of the non trivial blended elements in the bounding area where a blended image of the rasterized elements in the bounding area is generated. At if another group of non trivial blended elements is identified for the document e.g. the seventh element and text element of the rasterizing process through can be performed.

In one embodiment the conversion of the document can comprise converting a browser based document. For example a rich vector based document e.g. PDF XPS etc. can comprise vector data that may not by supported by most browsers. Therefore in this example the rich vector based document can be converted to a less rich format that can be rendered in the browser. Further in this embodiment identifying the bounding area can comprise identifying a blending of graphical elements that are not supported in the less rich format. That is for example the browser does not support the vector data for the blended graphical elements for the document.

In another embodiment identifying the bounding area can comprise identifying a graphical element that is not supported in the less rich format. For example the browser may not be able to identify the vector data associated with a particular graphical element even if it is not blended with another element. In this example the bounding area and therefore the area of rasterizing can comprise merely the element that is not supported in the less rich format.

At the vector graphics e.g. serialized UIML format of the non rasterized elements can be combined with the raster images e.g. the images of the non trivial blended elements in the bounding area s to produce the converted high fidelity document . In this way for example the converted document can comprise a mixture of rasterized images and vector data where an amount of vector data retained in the converted document is maximized and an amount of raster images is minimized.

A system may be devised that is configured to convert a rich document to a less rich format where loss of vector data is mitigated in the converted the document. Converted documents can comprise a mix of raster data and vector data however using the systems described herein a higher fidelity document may be provided by retaining more vector data in the converted document.

A rasterization component is operably coupled with the bounding area identification component and it rasterizes merely the blended graphical elements in the bounding area in order to generate raster images for one or more portions of the document. In this way for example the raster images created by the rasterization component can be combined with those elements in the document that are not rasterized to produce the converted high fidelity document.

The bounding area identification component can comprise an initial bounding area identification component that identifies an initial bounding area which comprises at least the blended graphical elements. Further the bounding area identification component can comprise a bounding area modifier component that modifies the initial bounding area to comprise merely the blended graphical elements .

A graphical element reduction component can flatten a vector tree for user interface markup language UIML graphical elements of the document so that the vector tree comprises merely leaf UIML graphical elements that are associated with parent container elements of the tree. Further the graphical element reduction component can group the leaf UIML graphical elements that exhibit compatible blending with each other into a group. In this way for example the bounding area identification component can identify the bounding area that comprise merely the non trivial blended elements for example reducing a number of elements analysis iterations.

In one embodiment the bounding area can comprise a rectangle that merely encompasses the blended graphical elements such as and of . In one embodiment the blended elements can comprise two or more non trivial blended graphical UIML elements that have a different z order where the elements overlap in a layout of the document. That is for example the z order can comprise an order in which the elements in a vector document are laid out when rendered. Further elements comprising a different z order can overlap each other such that a first element in the z order may be overlapped by a second element in the z order.

In one embodiment the document may comprise vector graphical elements that are not supported in the less rich format. In this embodiment the bounding area identification component can be configured to identify the bounding area in the document that comprises one or more vector graphical elements that are not supported in the less rich format. For example the graphical elements in the bounding area may not comprise blended elements but merely vector data based elements that are not supported in the less rich format. In this embodiment these elements can be rasterized by the rasterizing component yielding raster images that can be combined with the vector graphics to produce the converted document .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method such as at least some of the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as at least some of the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

