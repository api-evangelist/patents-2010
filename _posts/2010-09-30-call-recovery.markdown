---

title: Call recovery
abstract: A system for call recovery, according to one embodiment of the present invention comprises a first device, a second device, a switch and a failover device. The first device, second device and failover device are communicatively coupled to the switch. The switch has a first communicative connection with a first device and a second communicative connection with a second device. The first and second communicative connections form a call between the first and second devices. The switch determines a recovery rule for the call and identifies the failover device based on the recover rule. The switch determines a call failure event during the call between the second device and the first device. The failover device builds a new communicative connection to the switch so that the failover device is communicatively coupled to the switch responsive to the call failure event, and connected on a call with the second device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08634534&OS=08634534&RS=08634534
owner: ShoreTel, Inc.
number: 08634534
owner_city: Sunnyvale
owner_country: US
publication_date: 20100930
---
The present invention relates to telephony systems such as those using Voice over Internet Protocol VoIP . In particular the present invention relates to recovering calls to a failover device after a call failure event.

An Internet Protocol IP based private branch exchange involves numerous telephony endpoints connected across a network. A typical telephone call will establish a connection between two different IP devices with voice traffic flowing between those two endpoints. If network interruption occurs between those endpoints the call is typically disconnected at each of the isolated endpoints. Similarly if one endpoint in a two party call were to fail the other endpoint will typically disconnect the call. This is particularly troublesome if one of the endpoints is not a live person. For example if one of the endpoints is an Interactive Voice Response module IVR or automated attendant then the call will be lost forever.

The present invention overcomes the deficiencies and shortcomings of the prior art by providing system and method for call recovery. The system of the present invention is particularly advantageous because it allows telephony call to be recovered if a call failure event occurs. In one embodiment the system of the present invention comprises a first device a second device a switch and a failover device. The first device second device and failover device are communicatively coupled to the switch. The first device has a first communicative connection with the switch and the second device has a second communicative connection with the switch. The first and second communicative connections form a call between the first and second devices. The switch determines a recovery rule for the call between the first device and the second device and identifies the failover device based on the recover rule. The switch sends the recovery rule to the failover device and determines a call failure event during the call between the second device and the first device. In one embodiment the switch comprises various modules that provide the functionality of the switch. The failover device builds a new communicative connection to the switch so that the failover device is communicatively coupled to the second device responsive to the call failure event.

A system and method for call recovery in telephony is described. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the invention. For example the present invention is described in one embodiment below with reference to system operation and particular hardware. However the present invention applies to any type of computing device that can receive a data and commands and any peripheral devices providing services.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a non transitory computer readable memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a non transitory computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

Enterprises often have several offices or call centers that are located in a plurality of disparate locations. These sites include a number of first devices e.g. IP phone softphone etc. that are configured for communications with first and second telephony devices e.g. mobile phone devices plain old telephone devices voicemail etc. . From time to time there is a failure of the first device or the network that is being used to connect the call. This is referred to herein as a call failure event. This is particularly important when the first device is operating an Interactive Voice Response IVR or auto attendant application to provide an automated call experience to the user of a second device. Here since a live person is not connected on the first device side of the call the call will likely be lost forever due to the call failure event. The embodiments described herein provide a system and method for recovering calls in response to call failure events.

In one embodiment of the present invention the network is a partially public or a wholly public network such as the Internet. The network can also be a private network or include one or more distinct or logical private networks e.g. virtual private networks Wide Area Networks WAN and or Local Area Networks LAN . Additionally the communication links to and from the network can be wireline or wireless i.e. terrestrial or satellite based transceivers . In one embodiment of the present invention the network is an IP based wide or metropolitan area network.

The software that supports the computer integrated functionality of providing the above described telephony services is generally implemented as a client server environment in which the participants or clients distributed telephony users communicate with a server A B C. Computer integrated features rely not only on a server s application platform but also on the availability of the network bandwidth that connects the switches A B C servers A B C and application services.

The first site A includes a server A a switch A three endpoints analog phone A IP phone A and software phone A and a storage device A. The switch A represents a Voice over Internet Protocol VoIP device to which a number of endpoints can be coupled such as analog phones A P phones A software phones softphones A and the Interactive Voice Response module A IVR A comprised within the server A. The IVR A is described in further detail below.

In the illustrated embodiment the switch A is coupled to the network . The switch A is also coupled to the server A via signal line A and to the Public Switched Telephone Network PSTN trunk via an analog or digital trunk line e.g. a T1 or E1 interface or a Session Initiation Protocol SIP trunk service provider. In the illustrated configuration the switch A provides an interface for calls originating from or terminating on the PSTN or SIP trunk . The PSTN is coupled to any number of Plain Old Telephone phone Service phone POTS phone and a mobile voice network coupled to any number of mobile phones represented by mobile phone . Thus POTS phone calls and mobile phone calls can originate on the switch A via the PSTN .

A first device is any telephony device. For example a first device is one of the analog phone the IP phone the software phone the switch the IVR the mobile phone the POTS phone .

A second device is any telephony device that is initially connected on a call with the first device. For example the second device is one of the analog phone the IP phone the software phone the switch the IVR the mobile phone the POTS phone .

In some portions of this description the POTS phone and mobile phone are referred to herein individually as an the second device or collectively as the second devices. Similarly the analog phones IP phones software phones switches and IVRs are referred to herein as individually as an the first device or collectively as the first devices. Such descriptions are examples of embodiments of the present invention and not intended to be limiting since the second device is not required to be external to a site e.g. POTS phone mobile phone and the first device is not required to be internal to a site e.g. analog phones IP phones etc. .

In one embodiment the first device is a mobile phone connected to a switch that acts as a gateway that enables the mobile phone to act as an enterprise telephony device.

Although only a single switch A B C per site A B C is shown in those skilled in the art will recognize that a particular site such as the first site A may include a plurality of switches . The switches A B C will be described in more detail below with reference to .

In one embodiment the switch A is comprised within the server A so that the server A can provide the functionality of the switch A. For example in one embodiment the sever A stores computer code and routines on a memory not pictured that is executable by a processor not pictured to provide the functionality of the switch A i.e. the sever A stores and is configured to execute a softswitch . In another embodiment the server A comprises electronic circuits that are configured to provide the functionality of the switch A. A person having ordinary skill in the art will recognize that there are other ways for configuring the server A so that the server A provides the functionality of the switch A.

An endpoint enables a user to carry on a phone call. Although in the illustrated embodiment the first site A has three endpoints one analog phone one IP phone A and one softphone in other embodiments the first site A has different numbers and types of endpoints. Examples of endpoints include a video conferencing device a Multipoint Control Unit MCU a conference bridge an Analog Terminal Adapter ATA and any other device that originates and or terminates a media stream. An endpoint is coupled to the switch A the server A or both. Each of the endpoints can also include a display device not shown that is used in conjunction with the phone of the endpoint.

In one embodiment an endpoint is a conference bridge adapted to have the functionality of a switch A. For example the conference bridge includes hardware that provides the conference bridge with the functionality of a switch A. Such hardware includes for example one or more electronic circuit boards one or more processors and or a non transitory storage device e.g. RAM hard drive etc. storing data and or software e.g. a call manager as depicted in element and these components are configured to work together with the other components of the conference bridge so that the conference bridge has the functionality of a switch A. In another embodiment the conference bridge has among other things a processor and a non transitory storage device that stores a call manager that when executed by the processor causes the conference bridge to have the functionality of a switch A. For example in one embodiment an endpoint is a conference bridge and the bandwidth manager and the settings manager are components of a call manager stored on a storage device that is comprised within the conference bridge.

In one embodiment an endpoint has a user interface to send data to and receive data from a user. The analog phone A has for example a Telephone User Interface TUI that sends data through a speaker and receives data through a microphone and a keypad. The IP phone A has for example both a TUI and a Graphical User Interface GUI that sends data through a display device associated with the IP phone A. In one embodiment the IP phone s graphical user interface also receives data from a touch screen display device associated with the IP phone A. The softphone A has for example a software application that runs on a computer and sends data through a display device and a speaker and receives data through a microphone a keyboard and a pointing device.

The server A is configured to implement features or functions of the telephony system in accordance with the present invention. The server A is coupled to the network and although not shown can also be coupled to one or more endpoints such as IP phone A and softphone A. In one embodiment the server A implements a server architecture according to one embodiment of the present invention. The server A is a hardware server and includes a processor not pictured . The processor can be a conventional processing device such as a general purpose microprocessor. Server A also includes a non transitory computer readable memory the memory or a memory . The memory includes program instructions or functional units that in one embodiment implement features of the present invention. Specifically in one embodiment the memory includes a Telephony Management Software TMS unit a Telephony Application Programming Interface TAPI unit and a directory unit. In one embodiment the memory also includes one or more application units that interact with the TMS unit and the TAPI unit to enable a specific computer integrated function. An application unit uses the TAPI unit to exchange data with the TMS unit. The TMS unit is able to communicate with and manage one or more switches . For example with reference to the TMS unit included in the server A can manage the switches A B C. Through the TAPI unit the TMS unit presents an application with Computer Telephony Integration CTI view of these switches A B C. This allows the application to manage the switches A B C. Such switches A B C operate without an associated TMS unit if CTI features are not being used. The server A has a user interface to send data to and receive data from a user. The user interface interacts with TMS in order to allow a user with administrative rights to manage the switches A B C and change the configuration settings of the switches A B C. The user can access the user interface at the server or at an endpoint e.g. soft phone .

In one embodiment the server A includes an application unit and or a directory unit. The application unit assists the switch in providing one or more phones communicatively coupled to the switch with access to conventional PBX applications e.g. among others instant messaging collaboration tools sidebar conversations between two or more users during ongoing PBX calls chat sessions between two or more users and or APIs for integrating third party applications with the standard PBX functions provided by the switch . For example the application unit is data and routines stored on a non transitory computer readable medium comprised within the server . In one embodiment the server does not include the application unit and the switch can provides PBX functionality without assistance from the switch.

In general the directory unit enables a phone to access a directory and use the directory in conjunction with other phone functions. In one embodiment the directory unit is implemented as a service that interacts with TMS unit. Communication or data exchange is between the TMS unit and the directory unit. The directory unit can be distributed among computing devices as is known to one of skill in the art. For example the functionality enabled by directory unit can be implemented in a client server fashion by having the client user s local system such as a general purpose computer or endpoint perform some functions and having the server directory unit perform others. As another example some or all of the functionality enabled by the directory unit can be implemented by having a switch perform some or all functions.

The server A also stores an Interactive Voice Response module A IVR A . The IVR A is computer code and routines stored on a non transitory computer readable medium not pictured comprised within the server A and executable by a processor not pictured of the server A or comprised within the switch A to provide users of second devices such as for example POTS phone and or mobile phone with an automated and or interactive communication experience. For example in one embodiment a user of the mobile phone is connected to the IVR A by the switch A. The IVR A greets the user and plays a script that prompts the user for answers to questions that are included in the IVR script. The user can answer the questions with verbal response inputs and or keypad inputs to the mobile phone . The IVR A receives these inputs and moves to a different point in the IVR script responsive to these inputs. The user inputs are stored for example in a non transitory memory such as storage device A and or a memory comprised within the server A. A person having ordinary skill in the art will recognize additional functionality of the IVR A. The IVR A is described in further detail with reference to .

In one embodiment the server A stores and executes an application not pictured having similar functionality as the IVR A. For example the server A stores an application that performs similar or different functions as the IVR A and is adapted to function as a telephony device e.g. a failover device a first device within the system . The application is computer code and routines stored on a non transitory computer readable medium not pictured comprised within the server A and executable by a processor not pictured of the server A or comprised within the switch A to provide users of the second device with an automated and or interactive communication experience. For example the application answers the call and plays music until the second device is transferred to a different failover device or until a user of the second device hangs up the call. A person having ordinary skill in the art will recognize that the application can have different functionality than those described in the above example. In one embodiment the server A stores and executes the application and the IVR A. In another embodiment the server A stores and executes one of the application and the IVR A.

The storage device A is a non transitory computer readable medium that stores for example directory information. The directory information includes directory entries and associations between directories and phones. In one embodiment the storage device A also includes information regarding which users have administrative rights to access the server s user interface and make changes to call failure rules that are stored for example in one or more switches e.g. A B C and or one or more servers e.g. A B C . For example the storage device A will include the user name and password of users with administrative rights. A user having administrative rights can access the user interface of the server and modify add and or delete the call failure rules.

In one embodiment the storage A includes data that is accessed by the switches A B C in order to operate. For example in one embodiment the storage A includes data described with reference to as stored in the switch storage module . In the illustrated embodiment the storage device is directly coupled to the server . In an alternate embodiment the storage device is coupled to the server via the network .

One skilled in the art will appreciate that additional networking devices not shown can be added to the first site A for example if needed to support additional endpoints servers A switches A or other systems. For example the first site A can include a second switch and an edge router to couple the first site A to the network and to provide local area connectivity for the first and second switches . One skilled in the art will also recognize that numerous configurations of switches and communication links are contemplated. For example PSTN links can be coupled to multiple switches at several points within the topology and soft switches can also be used.

The second site B includes endpoints analog phone B P phone B software phone B a switch B a server B and a storage device B. The third site C includes endpoints analog phone B P phone B software phone B a switch B a server B and a storage device B. The elements of the second site B and the third site C work similar to the elements of the first site A described above and so that description will not be repeated here. Similar elements have similar reference numerals.

Referring now to an embodiment of the switch according to one embodiment of the present invention is shown. The depicted switch is similar to switches A B and C described above for . In this embodiment switch is configured to implement features or functions of the present invention. In one embodiment the switch includes one or more processors not shown . The processor can be a conventional processing device such as a general purpose microprocessor. In a different embodiment the switch does not include a processor but is instead controlled by a processor comprised within a server at the same site and or a server at a different site . Switch also includes a non transitory computer readable memory. The memory stores software and routines not shown conventionally used to operate a switch in a VoIP telephony system. For example the switch includes software routines for performing call monitoring transferring calls placing calls on hold establishing hunt groups automated attendant functions etc. The memory also stores program instructions or functional units that implement the features of the present invention. The switch also includes a switch storage module and a call manager .

The switch storage module is for storing information utilized by the call manager to perform its functions. The switch storage module is communicatively coupled to the call manager via coupling . In one embodiment the switch storage module is a portion of the memory of the switch . The storage module stores a failover device list one or more recovery rules and call profile data storage module .

The failover device list includes a list of one or more failover devices. A failover device is an endpoint to which a call can be rerouted to if a call failure event is detected by the call manager . For example the failover device list includes one or more analog phones e.g. A B C IP phones e.g. A B C software phones e.g. A B C and IVRs e.g. A B C . In one embodiment failover device list includes one or more switches e.g. A B C having one or more automated attendant modules . Thus in one embodiment a switch storing an automated attendant module is an endpoint. In one embodiment the failover device list is prioritized and calls are rerouted to an available failover device having the highest priority ranking in the list . For example the list is prioritized based on which of the failover devices is closest to the switch upon which the call is initially terminated. A person having ordinary skill in the art will recognize that other prioritization schemes are possible.

The recovery rules are a list of rules for recovering calls when a call failure event is detected or predicted by the call manager . The term recovering calls means to reroute the call to a failover device so that the call continues for the user of the second device . Recovery rules specify how a call is rerouted upon detection of a call failure event.

The recovery rules can be either static or dynamic. Dynamic recovery rules are either call specific or device specific. A call specific rule applies only to a particular call. A device specific rule applies to all calls for the given device either first device or second device . Dynamic rules are determined when 1 the call is initially connected or 2 after a call failure event occurs. Dynamic recovery rules are described in further detail with reference to the dynamic rule module discussed below with reference to . In one embodiment when both a dynamic rule and a static rule is applicable to a given call the dynamic rule takes priority over the static rule so that the dynamic rule is applied by the call manager and the static rule is not applied by the call manager .

Static recovery rules are default rules for handling calls responsive to call failure events. In one embodiment static recovery rules are pre loaded on the switch . In another embodiment static recovery rules are determined by the call manager after the switch is installed into the system . In one embodiment static recovery rules are not call specific. For example in one embodiment the list of recovery rules includes the static rule that when a call failure event is detected by the call manager the call manager reroutes the call to the highest priority switch that is both 1 available and 2 has an automated attendant module comprised within the switch . The automated attendant module then greets and informs the user of the error and or options for reconnecting the call. The automated attendant module is discussed in further detail below. Additional examples of static and dynamic recovery rules are described for . A person having ordinary skill in the art will recognize that other recovery rules are possible.

In one embodiment devices having administrative rights can access the interface of the server to specify different static recovery rules and different criteria for determining dynamic recovery rules. In one embodiment only one of static rules and dynamic rules are stored in the rules list . In another embodiment both static rules and dynamic rules are stored in the rules list . A device having administrative rights is a telephony device e.g. and endpoint such as the server A B C that is configured to add delete or modify static recovery rules and different criteria for determining dynamic recovery rules. The administrative rights can be device specific or user specific. For example a device has device specific administrative rights if the device itself has a persistent token cookie or some other persistent identifier that grants the device administrative rights. A device has user specific administrative rights for example if the device has administrative rights because a human user of the device entered a password or code into the device that resulted in the device being assigned a temporary token or cookie providing the device temporary administrative rights.

The call profile data storage module stores data describing the calls terminated on the switch . For example the call profile data describes one or more of 1 the user s progress through the IVR script i.e. the last prompt answered by the user 2 the inputs provided by the user responsive to the prompts in the script 3 information describing the first device that is a party to the call 4 information describing the second device that is a party to the call and 5 information describing the call quality experienced by the user during the call. Persons having ordinary skill in the art will recognize that other call profile data are possible. In one embodiment devices having administrative rights can access the interface of the server to specify different call profile data that should be collected and stored for calls.

The storage module and call manager are coupled by a signal line to the server . In one embodiment the signal line is one of a wired connection or wireless connection. For example the signal line is a wireless connection such as a LAN. The server uses the signal line to download information to the configuration storage module and call manager . The information downloaded by the server includes the information noted above to allow the call manager to perform its functions. In accordance with the present invention the server also uses signal line to transmit dynamic recovery rules to the call manager in embodiments where the dynamic rules are determined by a dynamic rule module comprised within the server discussed with reference to the dynamic rule module shown in .

A device such as the processor of the switch runs the call manager software application and is coupled to and controls one or more endpoints e.g. and with which it is associated. While shown as operational and as part of the switch in those skilled in the art will recognize that in other embodiments the call manager may be operational as a separate module in a site or as part of a server .

Although in the illustrated embodiment each site has only one call manager in the switch in other embodiments the site has a different number of call managers . Also more than one call manager can control the same endpoint. The association between a call manager and an endpoint that it controls is accessed through the server . Furthermore although not shown the second switch includes its own call manager .

In one embodiment the trunk is a SIP trunk and provides connectivity to SIP compatible devices. One having ordinary skill in the art will recognize that network also provides connectivity for SIP compatible devices.

As shown in the call manager is coupled to the PSTN or SIP trunk and the network . The call manager comprises an extension module a trunk module a location service engine a bandwidth manager a call recovery module and an automated attendant module . Here the automated attendant module is depicted by a rectangle formed from a hashed line to indicate that it is an optional feature of the call manager .

The extension module communicates with endpoints coupled to the call manager in order to allow a user to perform call related functions on an endpoint. In addition the extension module is used to communicate with other call managers in the telephony system .

The trunk module is coupled to and controls the interaction between the endpoints and and the PSTN or SIP trunk . In particular the call manager switch is often coupled to a trunk line. The trunk module of the call manager manages the usage of the trunk line by multiple endpoints and optimizes the usage of the trunk line. The trunk module also manages trunk services such as caller identification direct inward dial etc.

The location service engine resolves the dialed numbers converts raw dialed digits into routable contacts and routes the call to the destination endpoint such a phone trunk hunt group auto attendant pickup group etc.

The bandwidth manager is coupled to the network and allocates bandwidth necessary to support calls handled by the call manager . The call recovery module is described with reference to .

The automated attendant module is a conventional automated attendant that receives calls provides the user with one or more of a greeting an explanation for a dropped call and instructions for reconnecting the call.

In one embodiment one or more of the above described components of the call manager i.e. the extension module trunk module location service engine bandwidth manager call recovery module and automated attendant module are codes and routines stored on a memory comprised within the switch and executable by the switch s processor to provide the functionality described above.

In another embodiment one or more of the above described components of the call manager are a specialized hardware devices configured to perform the function of the particular components. For example one or more of the extension module trunk module location service engine bandwidth manager call recovery module and automated attendant module is a combination of one or more electronic circuit boards configured to provide the above described functionality for that component. In one embodiment the one or more electronic circuit boards that comprise the component include one or more of 1 a processor 2 a non transitory computer readable memory e.g. RAM a hard drive a buffer a circular buffer etc. communicatively coupled to the processor and 3 processor executable firmware stored on the non transitory memory.

The failover list module interrogates the telephony system to determine one or more failover devices and stores an indication of the failover devices in the failover device list . In one embodiment the interrogation performed by the failover list module also identifies an auto attendant or IVR comprised within the failover device. In one embodiment the failover list module also determines the proximity of the different failover devices and or mapping information for the failover devices. The proximity information is stored is stored in the failover device list and used by the call recovery module to prioritize the failover device list . For example failover devices that are closer to the switch upon which the call is terminated are prioritized higher in the failover device list. The mapping information is stored in the failover device list and used by the call recovery module to reroute failed calls to the failover devices indicated by the failover device list .

A failed call is a call for which a communicative connection between one or more switches A B C and another endpoint is either lost or deteriorated to a predefined unacceptable level. A call includes at least one switch A B C and any number of endpoints. For example a call includes a POTS phone and an IP phone A B C connected via a single switch A B C. A person having ordinary skill in the art will recognize that the call can be connected using more than one switch A B C. In one embodiment the switch A B C is comprised within a conference bridge. A communicative connection is a state in which communicative signaling occurs between any number of switches A B C and an endpoint. The communicative signaling is the signaling that occurs between an endpoint and at least one switch in order to connect and maintain a call with another endpoint. In general a two party call has two communicative connections a three party call has three communicative connections and so on. A communicative connection is also referred to as a call leg. For example for a two party call between a first endpoint and a second endpoint a first communicative connection exists between the first endpoint and a first switch A B C and a second communicative connection exists between a second endpoint and the first switch A B C. A failed call occurs if a first endpoint hangs up since the first communicative connection is lost responsive to the hang up. A person having ordinary skill in the art will recognize that different switching topologies are possible and that the example described above is not intended to limit the scope of the above described embodiment.

The priority module ranks the devices in the failover device list in a priority order. In one embodiment the priority module retrieves the proximity information and prioritizes the failover devices included in the failover device list based on a proximity relative to the switch upon which the call is originally terminated. A person having ordinary skill in the art will recognize that other prioritization schemes are possible. For example failover devices that have historically had better call quality are prioritized higher in the failover device list versus failover devices having historically poorer call quality.

The dynamic rule module determines and updates dynamic recovery rules that are stored in the rules list . In one embodiment the dynamic rule module determines dynamic recovery rules either on 1 a call by call basis or 2 a device by device basis. For example the dynamic rule module analyzes data for the call for example the call profile data and determines dynamic recovery rules for the call based on this data or a subset of this data. The dynamic rule module determines dynamic recover rules based on one or more of 1 the identity of the trunk on which the first device is terminated 2 the telephone number of the first device 3 the telephone number of the second device 4 the availability of an IVR 5 the number of calls currently connected system wide 6 the recent performance of the network e.g. whether recent network performance indicates that network failure is likely 7 a distance between the site which the first device belongs to and the other sites 8 the number of human operators available to take a failover call and 9 a particular IVR to which the second device is originally connected for the certain mandatory prompts. A person having ordinary skill in the art will recognize that other factors can be considered by the dynamic rule module when determining dynamic rules.

In one embodiment the dynamic rules for a specific call change over time. Thus the dynamic rule module can determine more than one dynamic rule for any specific call and the dynamic rule for a call can change over time. In one embodiment how and when the dynamic rule for a specific call changes is specific to an IVR to which the first device is originally connected. For example

In one embodiment dynamic rules that are applied on a call by call basis only apply to a particular call. For example for a particular call the call is connected to an IVR application e.g. a Contact Center or Call Center application that provides customer support and the user of the second device is provided with certain mandatory prompts from the IVR script. A first communicative connection is present between the second device and a first switch and a second communicative connection is present between the switch and the IVR . After the second device is connected to the IVR the dynamic rule module works with the rule determination module and the failover device list to determine 1 whether the failover device list includes a first device that is within a predetermined proximity to the switch 2 the priority ranking of each of these devices and 3 whether one or more of these devices are available for a failover call. Of the available devices that are within the predetermined proximity the rule determination module identifies the highest ranked device as the failover device i.e. the determined failover device . The dynamic rule module then determines the dynamic recovery rule that for this particular call if a call failure occurs the second device will be connected to the determined failover device. In one embodiment the dynamic rule module determines the dynamic recover rule that the failover device will build a new communicative connection e.g. a new call leg between the second device and the failover device responsive to the determined call failure event. In other words the dynamic recovery rule indicates that a third call connection will be built between the switch and the failover device so that the second device is connected on a call with the failover device.

In one embodiment dynamic rules that are applied on a device by device basis apply to 1 all devices of a same type 2 one or more devices at a same site A B C or 3 all devices of a particular type when the call occurs during a predefined period of time. A person having ordinary skill in the art will recognize that there are other ways for applying dynamic rules on a device by device basis. For example dynamic rule module determines a particular dynamic rule applies to all calls in which the first device is an IVR and for any type of call failure occurring for call connected to the IVR the second device is connected to an automatic attendant e.g. module depicted in that will provide the user of the second device with a prompt that explains the reason for the call failure such as Your call was interrupted due to a network timeout. . Examples of static and dynamic recovery rules are provided with reference to .

In one embodiment the dynamic rule module determines dynamic recovery rules either on 1 a call by call basis or 2 a device by device basis. For example the dynamic rule module analyzes data for the call for example the call profile data and determines dynamic recovery rules for the call based on this data or a subset of this data. The dynamic rule module determines dynamic recover rules based on one or more of 1 the identity of the trunk on which the first device is terminated 2 the telephone number of the first device 3 the telephone number of the second device 4 the availability of an IVR 5 the number of calls currently connected system wide 6 the recent performance of the network e.g. whether recent network performance indicates that network failure is likely during the call 7 a distance between the site which the first device belongs to and the other sites 8 the number of human operators available to take a failover call 9 a particular IVR to which the second device is originally connected for the mandatory prompts 10 the time at which the call began 11 the time at which a call failure is detected 12 an account code for the call 13 input provided by a first user of the first device indicating that the second user of the second device should receive better treatment than other users and 14 call processing data saved in the call profile data . A person having ordinary skill in the art will recognize that other factors can be considered by the dynamic rule module when determining dynamic rules.

In one embodiment the dynamic rules for a specific call change over time. Thus the dynamic rule module can determine more than one dynamic rule for any specific call and the dynamic rule for a call can change over time. In one embodiment how and when the dynamic rule for a specific call changes is specific to the IVR to which the first device is originally connected for the mandatory prompts and one or more other factors described in the paragraph immediately above with reference to the dynamic rule module . For example for a given call the determined dynamic rule is based on the IVR to which the first device was originally connected to for the mandatory prompts and the identity of the trunk on which the first device is terminated.

In one embodiment the dynamic rule module determines the failover device based on current call processing data saved in the call profile data . The call processing data and the call profile data are stored in a non transitory computer readable storage medium e.g. the switch storage . For example there are multiple first devices and the first devices are telephony devices in a call center used by first users e.g. sales agents customer service agents etc the different first devices are assigned to different groups e.g. the sales group the customer service group etc. and the second device is a telephony device used by a second user e.g. a customer connected on a call with the call center. The call profile data contains information such as 1 an identity of the second user of the second device that is on the call 2 which group this call belongs to and 3 which first user of the first device the second user of the second customer had talked to. The dynamic rule module determines dynamic rules based on 1 the identity of the second user e.g. a how important this customer is b whether this customer is on a critical account list 2 the group the call belongs to e.g. a a call to a sales group that is likely to represent a sales opportunity b a call to a customer service group that is likely to involve a request for customer support and 3 the identity of the first user e.g. does the first user have an assistant that can help the first user .

In another embodiment as the second user of the second device works through the IVR script e.g. provides answers to the IVR prompts the dynamic rule module determines a new dynamic rule based on input provided by the second user responsive to the IVR prompts. For example if the second user provides an answer indicating that the second user is an important person the dynamic rule module determines a new dynamic rule that gives the second user better treatment e.g. the new dynamic rule generated by the dynamic rule module indicates that the second device is connected to a human user of an IP phone instead of an automated attendant in the event of a call failure.

In another embodiment the dynamic rule module changes the dynamic rule based on input provided by a first user of the first device. For example the first user is a human sales representative that works in a sales group as described above and the second user is a potential client. The first user is making cold sales calls. The second user agrees to a sale and the first user provides an input indicating that the second user should receive different treatment in the event of call failure. The dynamic rule module determines a new dynamic rule responsive to the input provided by the first user e.g. the new dynamic rule generated by the dynamic rule module indicates that the second device is connected to a human user of an IP phone instead of an automated attendant in the event of a call failure.

The failure tracking module tracks calls for call failures. Call failures include network quality failures network error failure first device hang up failures and bandwidth failures. A network quality failure occurs when 1 packet losses reach or exceed a predetermined threshold and or 2 packet latency exceeds a predetermined threshold. A network error failure occurs when there is a loss of network connectivity between 1 one or more switches and the network or the devices on the network e.g. IP phone software phone IVR etc. and or 2 one or more servers and the network or the devices on the network e.g. IP phone software phone IVR etc. . A network error failure also occurs for example when the connection times out between the switch and the network or the devices on the network e.g. IP phone software phone IVR etc. and or the server and the network or the devices on the network e.g. IP phone software phone IVR etc. . A first device hang up error occurs when the first device that is a party to the call hangs up. A bandwidth failure occurs when there is insufficient bandwidth to sustain the call. The failure tracking module is communicatively coupled to provide the functionality described above. A person having ordinary skill in the art will recognize that devices such as the IP phone software phone and the IVR are referred to herein as being on the network since in one embodiment they are communicatively connected wired or wireless e.g. via a LAN to send and receive data and or information either directly or indirectly via the network .

A person having ordinary skill in the art will recognize that call failure events can be referred to as failed calls. For example the failure tracking module monitors for failed calls e.g. insufficient bandwidth available on the network and signals to indicate a call failure event responsive to a detected failed call. In one embodiment the failure tracking module stores the historical call quality data in a memory such as the switch storage module .

The rule determination module determines which rule to apply to a call when a call failure event occurs. If both a static rule and a dynamic rule apply the rule determination module applies the dynamic rule. In one embodiment the rule determination module is communicatively coupled to the switch storage module the failure tracking module and the call rerouting module . The rule determination module retrieves rules from the switch storage module and determines a failover device for the call based on the rules and the failover device list. The rule determination module selects one or more of the rule to apply to the call and the failover device 1 before a call is connected 2 cotemporaneous with connecting the call or 3 after a call failure event is detected by the failure tracking module . The rule determination module selects the rule and the failover device at different times. In one embodiment the rule determination module accesses mapping information from the switch storage and sends the mapping information for the failover device to the call rerouting module so that the call rerouting module sends call profile data to the failover device and connect a new communicative connection between the second device and the failover device responsive to receiving from the failure tracking module an indication that a call failure event has occurred.

The call rerouting module transmits the call recovery rule and the call profile data to the failover device and sends invites to a switch or server communicatively coupled to the failover device in order to connect a new communicative connection between the second device and the failover device responsive to a call failure event. In one embodiment the failover device uses the call recovery rule and or the call profile data to connect a new communicative connection with the second device if the switch upon which the call was initially terminated or some other endpoint associated with the initial call experiences a call failure. For example if the second device is initially connected on a call with IP phone B and then one or more of the IP phone B switch B or server B experience a call failure event assuming IP phone A is the failover device and has received the call recovery rule from the switch B IP phone A connects a new communicative connection with the second device even though IP phone B switch B and or server B are no longer connected to the network .

In one embodiment the call rerouting module is communicatively coupled to the rule determination module the failure tracking module the network and the PSTN or SIP trunk .

The call rerouting module receives the call recovery rule from the rule determination module . In one embodiment the rule determination module stores the determined recovery rule in the call profile data stored on switch storage and the call rerouting module retrieves the call recover rule from the switch storage . The call rerouting module retrieves the call recovery rule at the same time or a different time as when it retrieves the call profile data. The call rerouting module sends the call recovery rule to the failover device at the same or a different time as when it sends the call profile data. In one embodiment the call rerouting module only sends the recovery rule to the failover device once and sends call profile data to the failover device two or more times.

The call rerouting module retrieves call profile data from the switch storage module . In one embodiment the call rerouting module transmits all the call profile data to the failover device at one or more intervals. In one embodiment an interval is a predetermined time period or a predetermined point in an IVR script. For example the call rerouting module retrieves the call profile data for the call and transmits all of the call profile data for the call to the failover device at each interval.

In one embodiment the transmission of call profile data to the failover device is optimized to minimize the impact on the network bandwidth. For example the call data module is adapted to receive an indication that the user of the second device has provided input responsive the IVR script. The call rerouting module is communicatively coupled to the call data module and the call data module signals the call rerouting module when the user provides a new input responsive the IVR script. The call rerouting module receives this input from the call data module and retrieves only the call profile data added since the last time the user provided an input. This portion of the call profile data is referred to as the delta of the call profile data and the process of the call rerouting module retrieving only the call profile data added since the last user input is referred to as retrieving the delta of the call profile data. The call rerouting module then transmits the delta of the call profile data to the failover device.

Upon detecting a call failure the failure tracking module signals a call failure event to the call rerouting module . The call rerouting module then builds a new communicative connection between the second device and the failover device by sending an invite to the failover device. The failover device uses the call profile data to continue the call.

It will be understood to persons having ordinary skill in the art that the terms invitation invite or invite message are not intended to limit the scope of the disclosure to devices that use session initiation protocol SIP . Instead the communication agents e.g. call manager server etc. described herein can use SIP H.323 Media Gateway Control Protocol Simple Gateway Control Protocol and or protocols that are predecessors successors derivative and or similar to any of these protocols. For example in one embodiment the apparatuses and methods described herein use a proprietary protocol based on SIP i.e. a protocol that is a derivative of SIP . In another embodiment different communication agents use different protocols and the call manager includes conventional technology for translating communications between the different protocols.

In another embodiment the server comprises an automated attendant . The automated attendant has the same functionality as described above for .

In another embodiment the server comprises a survey engine which prompts the user of the second device with questions. The questions are part of a survey script. In one embodiment the user of the second device provides answers to the questions and the answers are stored by the survey engine in tangible non transitory computer readable memory such as a memory comprised within the server e.g. RAM or a hard drive .

The first call description describes the call prior to a call failure event. Here the call description describes a second device connected on a call with a first device. For example the mobile phone is connected to IVR B for a number of mandatory prompts and is then connected on a call with IP phone B as shown in . The user of IP phone B is a live person in a Contact Center interacting with the user of the mobile phone . The first call failure description that triggers the first recovery rule is a hang up failure. The failover device is a specified IVR. In this example the rule determination module C comprised within the switch C determines that the failover device list specifies IVR C as the failover device see since it is the highest priority failover device that is available. In other words in this example proximity is not considered by the call recovery module when determining the failover device. In other embodiments proximity is considered. Thus the dynamic rule module C comprised within the switch C determines a dynamic recovery rule that indicates that if an first device e.g. IP phone B hangs up on the second device e.g. mobile phone the call manager C recovers the call by building a new communicative connection between the second device e.g. mobile phone and the specified IVR e.g. IVR C . The user of the second device e.g. mobile phone is connected to a post call survey at the specified IVR e.g. IVR C . In one embodiment the post call survey greets the user and then asks the user questions and prompts the user for answers to these questions. For example in the post call survey the user is asked questions about the user experience that led to the call failure and the user is prompted to provide answers about this experience.

Mobile phone transmits a signal A through mobile voice network and PSTN or SIP trunk that terminates at the switch C. The mobile phone is connected for a period of time to the IVR C that plays a number of mandatory prompts. After the mandatory prompts are completed the switch C transmits a signal A connecting the call with IP phone B. The user of the mobile phone interacts with the user of the IP phone B. The rule determination module C comprised within the switch C determines that IVR C is the failover device for this call. The call rerouting module C comprised within the switch C periodically transmits call profile data to the IVR C or server C via switch C . In one embodiment the recipient of the call profile data stores the call profile data for later use and when the call failure event occurs the call profile data is used to rebuild the call and or to continue the call with the second device so that no call failure event is evident to the user of the second device. The dynamic rule module C comprised within the switch C determines the recovery rule described for and upon failure tracking module C detecting a hang up by phone B the call rerouting module C transmits a signal B with an invite message to the server C. The call manager C comprised within the switch C works with the server C to build a new communicative connection between IVR C and the mobile phone .

The second call description shows a second device connected on a call with a first device. For example the POTS phone is connected to the IVR C for a mandatory number of prompts and is then connected on a call with IP phone C as shown in . The second call failure description that triggers the second rule is a network error failure. For example the connection between the switch C and the network or the devices on the network times out. The rule determination module C comprised within the switch C determines that the second failover device is a specified IVR. In this example the rule determination module C determines that the failover device list specifies IVR C as the failover device see . The rule determination module C determines that the recovery rules includes a static rule that indicates that if a first device e.g. IP phone C experiences a network error the call manager recovers the call by building a new communicative connection between a specified IVR e.g. IVR C and the switch C so that 1 the second device e.g. POTS phone is connected on a call with the specified IVR and 2 the user of the second device e.g. POTS phone is connected to an auto attendant e.g. automated attendant of at the specified IVR e.g. IVR C . In one embodiment the automated attendant greets the user of the second device and then explains the network error such as Your call was disconnected due to a network error. .

POTS phone transmits a signal A through the PSTN or SIP trunk that terminates at the switch C. The IVR C is notified of the call and the POTS phone is connected to the IVR C for a period of time while the mandatory prompts are played. Once the mandatory prompts are completed the switch C transmits a signal A connecting the POTS phone on a call with IP phone C. In this example the rule determination module C comprised within the switch C determines from the failover list that IVR C is the failover device. The rule determination module C also determines from the recovery rules the static recover rule described above for . The call rerouting module periodically transmits call profile data to the IVR C so that if a call failure event occurs the IVR C is connected on a newly built communicative connection with the POTS phone . Upon the failure tracking module C detecting a network failure the call rerouting module transmits a signal B with an invite message to the server C so that a new communicative connection is built between the IVR C and the switch C so that the POTS phone is connected on a call with the IVR C.

In one embodiment the call recovery rule depicted in is a default static call recovery rule pre programmed into the switch A B C. Had their been a dynamic recovery rule the dynamic recovery rule would have been applied and the static recovery rule would have been ignored.

The third call description describes a second device connected on a call with a first device. For example the POT phone is connected on a call with IP phone C as shown in . The third call failure description that triggers the first rule is a first device hang up. The third failover device is a specified IP phone. In this example the rule determination module C comprised within the switch C determines that the failover device list specifies IP phone B as the failover device see since it is the highest priority failover device that is both available and within a predetermined proximity. The dynamic rule module C comprised within the switch C determines a dynamic recovery rule indicating that if a call hang up failure is detected the call manager C recovers the call by building a new communicative connection between a specified IP phone e.g. phone B and the switch C so that the second device e.g. POT phone and the specified IP phone are connected on a call via the switch C.

POT phone transmits a signal A through the PSTN or SIP trunk that terminates at the switch C. The POT phone is connected to the IVR C for a mandatory number of prompts. After the mandatory number of prompts is completed the switch C transmits a signal A connecting the call with IP phone C. The dynamic rule module C determines that a device specific recovery rule applies to all calls connected to IP phone B. In this example the rule determination module C determines from the device specific recovery rule that IP phone B is failover device for all calls connected to IP phone C. The call rerouting module C periodically transmits call profile data to the IP phone B. In one embodiment the recipient of the call profile data stores the call profile data for later use and when the call failure event occurs the call profile data is used to rebuild the call and or to continue the call with the second device so that no call failure event is evident to the user of the second device. For example the user of the IP phone B is provided a list of questions asked by the user of the IP phone C and the corresponding answers provided by the user of POT phone so that in this way the user of IP phone B can continue the phone conversation with the user of POT phone . The dynamic rule module C determines the device specific dynamic recovery rule described above for . The call rerouting module C transmits a signal B with an invite message to switch B. The call manager C works with the switch B to build a communicative connection between IP phone B and the switch C by sending signal B to connect IP phone B on a call with the POT phone . The switch C acts as a gateway between the POT phone and IP phone B.

Turning to a first call rerouting module comprised within the first switch sends the call recovery rule to the first failover device. In one embodiment this step is performed cotemporaneous with step in which call profile data is sent to the first failover device. A first failure tracking module comprised within the first switch tracks the call for call failure events while the second device is connected to the IVR . A first call data module comprised within the first switch records call profile data and stores the call profile data on non transitory computer readable memory such as the first storage device communicatively coupled to one or more of the first switch or the first server . In one embodiment the call profile data includes 1 the progress through the IVR script 2 the answers received from the second device or 3 the progress through the IVR script and the answers received from the second device. In one embodiment the first failover device uses the call profile data to continue the mandatory questions for the second device so that the second device has no indication that the call failure event occurred.

The first call rerouting module sends the call profile data to one of 1 a second switch communicatively coupled to the first failover device 2 a second server communicatively coupled to the first failover device and 3 the first failover device itself In one embodiment the call recovery rule is sent at the same time as the call profile data the first time the call profile data is sent but then the call recovery rule is not resent on subsequent instances of step so that the call recovery rule is only sent to the failover device once. In one embodiment the call rerouting module sends the delta of the call profile data to the failover device. In one embodiment the call profile data is sent to the second server via the second switch . The first failure tracking module determines whether a call failure event has occurred. If no call failure event has occurred at step the method goes to step . If a call failure event occurs at step the first call rerouting module builds a new communicative connection with the first failover device by sending an invite to the second server via the second switch and the first call rerouting module works with the second server to build a new call between the second device and the first failover device. The above described step of building a new communicative connection between the second device and the failover device is referred to as building a failover call. In one embodiment the failover device is a second IVR and the user of the second device is prompted by questions from a post call survey.

At step the call manager determines whether the IVR has completed the mandatory prompts. In one embodiment the step of determining whether the IVR has completed the mandatory prompts is determined by the IVR sending a signal to the call rerouting module when the last prompt is completed and the call rerouting module reroutes the call so that the second device is connected with the IP phone specified by the initial call request. In one embodiment the call rerouting module connects the second device on a first available IP phone i.e. and IP phone not already connected on a call with another device . If at step the mandatory prompts are not completed the method goes back to step .

In one embodiment the first failover device is located within the same site as the original endpoint for which the call was directed and the site does not include two or more switches or two or more servers . In this embodiment the call profile data described with reference to step is sent to one of 1 the first switch 2 first server and 3 the failover device itself. Also the invite described with reference to step is sent to the first server .

Referring now to the second device is connected with the IP phone . In this method the IP phone is at a different site than the IVR described for and is coupled to a different switch than the first switch described for .

A second call rerouting module comprised within the second switch sends the call recovery rule to the second failover device. In one embodiment this step is performed cotemporaneous with step in which call profile data is sent to the second failover device. In another embodiment the call recovery rule is only sent to the second failover device once.

A second dynamic rule module comprised within the second switch determines whether a dynamic rule applies and the second rule determination module comprised within the second switch determines the second failover device for the call and a recovery rule that applies while the call is connected to the IP phone .

The second failure tracking module comprised within the second switch tracks the call for call failure events while the second device is connected to the IP phone .

A second call data module comprised within the second switch records call profile data and stores the call profile data on non transitory computer readable memory such as a second storage device communicatively coupled to one or more of the second switch or a second server .

The second call rerouting module sends the call profile data to one of 1 a third switch communicatively coupled to the second failover device 2 a third server communicatively coupled to the second failover device and 3 the second failover device itself. In one embodiment the second call rerouting module sends the delta of the call profile data. In one embodiment the call profile data is sent to the third server via the third switch .

The second failure tracking module determines whether a call failure event has occurred. If no call failure event has occurred at step the method goes to step . If a call failure event occurs at step the second call rerouting module builds a new communicative connection with the second failover device by sending an invite to the third server via the third switch and the second call rerouting module works with the third server to build a new communicative connection between the second device and the second failover device. In one embodiment the second failover device is an IVR having an automated attendant module see and the second device is provided with a message explaining the call failure.

The foregoing description of the embodiments of the present invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the present invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the present invention be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the present invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the present invention or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the present invention can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the present invention is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally the present invention is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the present invention which is set forth in the following claims.

