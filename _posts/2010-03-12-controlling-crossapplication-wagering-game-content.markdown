---

title: Controlling cross-application wagering game content
abstract: A wagering game system and its operations are described herein. In embodiments, the operations can include determining content from both a first wagering game application and from a second wagering game application. The first and second wagering game applications can be independent wagering game applications played by a player account during a wagering game session. The operations can further include determining some portion of the second content (e.g., three-dimensional objects) that appears to originate from a second-application domain (e.g., from within confines of the second wagering game application), and presenting the portion of the second content within a first-application domain (e.g., within confines of the first wagering game application). In some embodiments, the operations can further include presenting the portion of the second content interacting with the first content within the first-application domain (e.g., presenting three-dimensional objects from the second application interacting with three-dimensional objects of the first application).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08668565&OS=08668565&RS=08668565
owner: WMS Gaming, Inc.
number: 08668565
owner_city: Waukegan
owner_country: US
publication_date: 20100312
---
This application claims the priority benefit of U.S. Provisional Application Ser. No. 61 159 598 filed Mar. 12 2009.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. Copyright 2010 WMS Gaming Inc.

Embodiments of the inventive subject matter relate generally to wagering game systems and networks that more particularly control cross application wagering game content.

Wagering game machines such as slot machines video poker machines and the like have been a cornerstone of the gaming industry for several years. Generally the popularity of such machines depends on the likelihood or perceived likelihood of winning money at the machine and the intrinsic entertainment value of the machine relative to other available gaming options. Where the available gaming options include a number of competing wagering game machines and the expectation of winning at each machine is roughly the same or believed to be the same players are likely to be attracted to the most entertaining and exciting machines. Shrewd operators consequently strive to employ the most entertaining and exciting machines features and enhancements available because such machines attract frequent play and hence increase profitability to the operator. Therefore there is a continuing need for wagering game machine manufacturers to continuously develop new games and gaming enhancements that will attract frequent play.

This description of the embodiments is divided into five sections. The first section provides an introduction to embodiments. The second section describes example operating environments while the third section describes example operations performed by some embodiments. The fourth section describes additional example operating environments while the fifth section presents some general comments.

There is a continuing need for wagering game machine manufacturers to continuously develop new games and gaming enhancements that will attract frequent play but that are easy to use control and configure. Some gaming enhancements have included providing secondary e.g. bonus games that are associated with primary wagering games e.g. base games . Wagering game developers however have faced challenges developing secondary games in conjunction with primary wagering games as the secondary game content e.g. assets code etc. is developed in conjunction with e.g. combined with compiled into etc. the primary wagering game s content thus extending the development cycle of the primary wagering game. Further when the programming for a secondary game is modified the potential for affecting the primary wagering game increases and vice versa because the game code assets content etc. for the primary wagering game are tied to the secondary game s code assets content etc.

Some embodiments describe examples of presenting one or more secondary applications e.g. secondary games secondary wagering games bonuses etc. in conjunction with a primary wagering game in a wagering game session. However the primary wagering game and the one or more secondary applications are separate such that their content code assets etc. are not programmed together and run as separate applications. Nevertheless in some embodiments the needs of the secondary application can integrate with functionality information or other features available from or through the primary wagering game. For instance the primary wagering game can have wagering functionality and other game control features. The one or more secondary applications can utilize the wagering functionality or other game control features of the primary wagering game to conduct wagers within the secondary game e.g. in a secondary wagering game associated with the primary wagering game . Further in other examples the primary wagering game can access financial data or account information that the secondary application also accesses. Some embodiments therefore can provide the wagering functionality financial data account information or other features and information of the primary wagering game to the secondary application via application programming interfaces APIs available for the primary wagering game application and the secondary application. During the course of configuration play or at other times some embodiments can also share content data across wagering game applications such as passing three dimensional object data from one wagering game application to another adapting content from one application to stylistic data environmental data state data or other data from another application utilizing physics of one application to objects originating from another application etc.

In some embodiments a secondary application can be referred to as a secondary game as an example of a possible secondary application that is triggered requested supported etc. by a primary wagering game and which in some embodiments interacts with the primary wagering game. However it should be noted that the secondary application is not limited to game applications but could also be related to other secondary applications e.g. promotional applications social networking applications player tracking applications etc. that can interact with the primary wagering game. Further the terms secondary and primary can in some embodiments refer to respective importance presentation order or priority. In other embodiments however the terms secondary and primary can imply a separation of application processing function presentation content etc. e.g. indicating that applications are independent of each other in programming although they can have functionality that integrates cooperates etc. . Also in some embodiments herein a player can be referred to interchangeably as a player account or vice versa. Account based wagering systems often utilize player accounts when transacting and performing activities at the computer level that are initiated by players. Therefore a player account is often referred to herein as a representative of the player at a computerized level. Therefore for brevity to avoid having to describe the interconnection between player and player account in every instance a player account can be referred to herein in either context. Further in some embodiments herein the word gaming can be used interchangeably with the word gambling . Further the words wagering game are used to indicate electronic e.g. electromechanical digital computerized etc. games e.g. slot games electronic poker electronic bingo etc. that use e.g. process a form of are based on are funded by etc. a monetary bet or wager.

Further although describes some embodiments the following sections describe many other features and embodiments. Some embodiments may include other configurations different from . For example although includes servers e.g. a primary wagering game server a secondary wagering game server a cross application content control server some embodiments may include one or more wagering game machines or other devices e.g. peer to peer that transfer and control object data between applications.

This section describes example operating environments and networks and presents structural aspects of some embodiments. More specifically this section includes discussion about wagering game system architectures.

The wagering game system architecture can include a primary wagering game server configured to control primary wagering game content provide random numbers and communicate wagering game information account information and other information to and from a wagering game machine . The primary wagering game server can include a content controller configured to manage and control presentation of primary content on the wagering game machine . For example the content controller can generate game results e.g. win loss values including win amounts for games played on the wagering game machine . The content controller can communicate the game results to the wagering game machine . The content controller can also generate random numbers and provide them to the wagering game machine so that the wagering game machine can generate game results. The primary wagering game server can also include a content store configured to contain content to present on the wagering game machine . The primary wagering game server can also include an account manager configured to control information related to player accounts. For example the account manager can communicate wager amounts game results amounts e.g. win amounts bonus game amounts etc. to an account server . The primary wagering game server can also include a communication unit configured to communicate information to the wagering game machine and to communicate with other systems devices and networks. The primary wagering game server can also include an API controller configured to control interface between applications including controlling data communications between applications to pass content data including three dimensional object data for three dimensional objects between applications. The primary wagering game server can also include a content coordinator configured to control data associated with content content data including three dimensional objects. The content coordinator is also configured to determine object properties characteristics physics geometry and other object data. The content coordinator can use the content data to cause content from one application to leave the domain of the application and interact or appear to interact with content from another application. The content coordinator can be configured to control the interactions according to governing rules instructions or other programming of one or the other applications or a mixture of from both. The content coordinator can also be configured to package the content data and deliver it to applications so that the applications can decipher the data and use it to control objects change stylistic data adapt to environmental conditions combine content render data control priorities etc.

The wagering game system architecture can also include the wagering game machine configured to present wagering games and receive and transmit information to control cross application wagering game content. The wagering game machine can include a content controller configured to manage and control content e.g. primary content secondary content tertiary content etc. and presentation of content on the wagering game machine . The wagering game machine can also include a content store configured to contain content to present on the wagering game machine . The wagering game machine can also include a cross application content control module configured to control content interaction between applications on the wagering game machine . For example the cross application content control module can be configured to receive data from the content coordinator regarding three dimensional object e.g. object graphics object sounds object properties object functions object physics object dimensions etc. . The cross application content control module can use that data to control the objects when they leave the domain control confines etc. of one application and enter the domain control confines etc. of another application. In some embodiments the cross application content control module can provide data for applications running on the wagering game machine to the cross application content control server and or to the primary wagering game server to control the object interactions and other content activity that occurs or appears to occur between applications on the wagering game machine or on other wagering game machines connected to the communications network .

The wagering game system architecture can also include a secondary wagering game server configured to provide content for one or more of the applications associated with the wagering game machine . The secondary wagering game server can provide secondary content or content for secondary games presented on the wagering game machine . In some embodiments secondary content can be passed between applications thus becoming or falling under the control of primary content or primary applications. In some embodiments the secondary wagering game server can have a similar architecture as that of the primary wagering game server .

The wagering game system architecture can also include a web server configured to present content in a web format. In some embodiments the web server can cause content interactivity e.g. cause objects from one web application to leave the web application s domain and enter the domain of another web application presented within a web browser .

The wagering game system architecture can also include a community game server configured to provide and control content for community games including networked games social games competitive games or any other game that multiple players can participate in at the same time.

The wagering game system architecture can also include a cross application content control server configured to control content that moves and or appears to move between applications on the communications network including one or more wagering game applications on the wagering game machine . The cross application content control server can include an object controller configured to store receive send and control object data for objects including three dimensional type objects associated with multiple applications. The object controller can also be configured to receive overall stylistic data environmental data state data etc. of various applications and cause objects to adapt to the stylistic data environmental data state data etc. The cross application content control server can also include a content coordinator configured to coordinate priorities of interactivity between objects of multiple applications. The cross application content control server can also include a cross platform controller configured to control the format of content data to ensure that different platforms in a wagering game network can receive object data from many different types of applications on the network and use the content data to depict object interactions e.g. three dimensional object interactions . The cross application content control server can also include a presentation controller configured to generate presentation data e.g. rendering data for content e.g. three dimensional objects that is passed between applications or that appears to be passed between applications. The presentation coordinator can also be configured to present the content as appearing to interact within the domain of one of the applications.

Each component shown in the wagering game system architecture is shown as a separate and distinct element connected via the communications network . However some functions performed by one component could be performed by other components. For example the primary wagering game server can also be configured to perform functions of the cross application content control server and other network elements and or system devices. Furthermore the components shown can all be contained in one device but some or all can be included in or performed by multiple devices as in the configurations shown in or other configurations not shown. For example the account manager and the communication unit can be included in the wagering game machine instead of or in addition to being a part of the primary wagering game server . Further in some embodiments the wagering game machine can determine wagering game outcomes generate random numbers etc. instead of or in addition to the primary wagering game server . The wagering game machine or other wagering game machines described herein can take any suitable form such as floor standing models handheld mobile units bar top models workstation type console models surface computing machines etc. Further the wagering game machines can be primarily dedicated for use in conducting wagering games or can include non dedicated devices such as mobile phones personal digital assistants personal computers etc.

In some embodiments wagering game machines and wagering game servers work together such that wagering game machines can be operated as a thin thick or intermediate client. For example one or more elements of game play can be controlled by the wagering game machines client or the wagering game servers server . Game play elements can include executable game code lookup tables configuration files game outcome audio or visual representations of the game game assets or the like. In a thin client example the wagering game server can perform functions such as determining game outcome or managing assets while the wagering game machines can present a graphical representation of such outcome or asset modification to the user e.g. player . In a thick client example the wagering game machines can determine game outcomes and communicate the outcomes to the wagering game server for recording or managing a player s account.

In some embodiments either the wagering game machines client or the wagering game server s can provide functionality that is not directly related to game play. For example account transactions and account rules can be managed centrally e.g. by the wagering game server s or locally e.g. by the wagering game machines . Other functionality not directly related to game play can include power management presentation of advertising software or firmware updates system quality or security checks etc.

Furthermore the wagering game system architecture can be implemented as software hardware any combination thereof or other forms of embodiments not listed. For example any of the network components e.g. the wagering game machines servers etc. can include hardware and machine readable media including instructions for performing the operations described herein. Machine readable media includes any mechanism that provides i.e. stores and or transmits information in a form readable by a machine e.g. a wagering game machine computer etc. . For example tangible machine readable media includes read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory machines etc. Machine readable media also includes any media suitable for transmitting software over a network.

This section describes operations associated with some embodiments. In the discussion below some flow diagrams are described with reference to block diagrams presented herein. However in some embodiments the operations can be performed by logic not described in the block diagrams.

In certain embodiments the operations can be performed by executing instructions residing on machine readable media e.g. software while in other embodiments the operations can be performed by hardware and or other logic e.g. firmware . In some embodiments the operations can be performed in series while in other embodiments one or more of the operations can be performed in parallel. Moreover some embodiments can perform more or less than all the operations shown in any flow diagram.

The flow continues at processing block where the system determines one or more second content second content from a second wagering game application. The first wagering game application and the second wagering game application are independent applications. The second content like the first content can include multi dimensional objects e.g. three dimensional objects and two dimensional objects . For example in the coins can be three dimensional objects that are controlled by the secondary wagering game application second application . The second application can include other objects such as the bet control that a player can use to place bets for the second application . In some embodiments the second application can react to programming that initiates operations to integrate some of its objects e.g. the coins into one or more other applications such as incorporating the coins into the first application .

The flow continues at processing block where the system presents a portion of the second content as leaving a domain of the second wagering game application and entering a domain of the first wagering game application. The domain of the second application can include boundaries borders or some perceived space wherein the content of the second application normally resides. Likewise the domain of the first application can also include boundaries borders or some perceived space wherein the content of the primary application usually resides. In some embodiments the domain of the second application can appear to overlap or appear to reside within a space controlled by the primary application but distinguished by its own domain. For example in the second application includes the boundary from with the coins originate normally reside in exist in are controlled by or otherwise are associated with the second application according to the programming and or control of the second application . The system e.g. the second application can direct some the coins to appear to leave the boundary . The coins appear to move beyond the boundary or otherwise terminate or stop being displayed or presented within the second application and concurrently or at the same time appear to enter the areas under the control or within the domain of the first application . The first application also includes a boundary that encloses content for the first application . However the boundary resides entirely within the boundary . The system can cause the coins to appear to burst from the boundary of the second application and pour onto the game reels within the boundary e.g. as a result of a large win a jackpot etc. . In other embodiments however the boundary can abut or share the boundary and not reside within the boundary . In other embodiments the boundary can be separated from the boundary by space e.g. a domain of a third application an operating system domain etc. . In other embodiments the boundary can reside on a different display e.g. on a peripheral display of the wagering game machine or even on a different device e.g. on a neighboring wagering game machine . In some embodiments the coins do not burst from the boundary e.g. does not involve boundary destruction but can pass over the boundary . In yet other embodiments the coins can disappear from within the boundary and reappear outside the boundary though within the boundary . In other embodiments the coins can leave and return to the domain of the second application .

The flow continues at processing block where the system presents the portion of the second content interacting with the first content within the domain of the first wagering game application. For example in when the coins leave the boundary some of the coins can appear to fall behind the game reels some of the coins can appear fall in front while some of the coins can appear to hit and react with the game reels . For instance coin A appears to bounce off the top of one of the game reels . Some of the coins can appear to interact with some objects according to intelligent reactions e.g. artificial intelligence programming . For example the strawberry graphic can appear to see coin B and react to the coin B e.g. have a scared expression swat the coin B away appear to eat the coin B etc. . Some of the coins can interact with other some elements of the game reels in ways that can affect or appear to affect the outcome of a wagering game presented on the game reels . For example coin C can collide with a Lucky7 graphic and knock it off the game reels . The first application can replace the Lucky7 graphic with a mystery graphic an award a wild card an avatar one of the other game play elements or some other object in place of the Lucky7 graphic . In some embodiments the system can affect the function or math of the first application as the coin C knocks the Lucky7 graphic from the game reels and replaces it with a winning or losing symbol.

The flow continues at processing block where the system determines second content object data that governs one or more second content objects from a second application. The second content objects are included in a second content for the second application. For example in the second application can also include objects e.g. border coin and object data associated with the objects e.g. border object data associated with the border and coin object data associated with the coin . The second application can also have domain rules that govern object activity within the domain of the second application e.g. within the border . In some embodiments the system determines the object data from the content within the second application second content object data . The second content object data governs one or more objects included in a portion of the second content. The coin for example is an object from the second content. The system can determine the coin object data via an application programming interface API . The coin object data provides via the API or other such mechanism a package of data related specifically to the coin . The system can use the coin object data to govern the behavior and or appearance of the coin beyond the domain of the second application . In some embodiments the second application provides the coin object data including the objects physics attributes presentation attributes functions etc. to the first application . In some embodiments the second application also provides state data about the objects from the second application such as the coin . The state data can include location data e.g. coordinates vertices movement data e.g. velocity trajectory spin momentum etc. temperature etc. all of which are related to the current state of the object. The second application can provide the state data in the coin object data subcategorized as state data versus long term defining attributes. In some embodiments however the second application can provide data that is not categorized and can transfer any or all data between applications at any time. The first application can receive the coin object data and use it to calculate an initial object state e.g. initial velocity initial coordinates initial trajectory initial temperature etc. for the coin as it initially enters the first application s domain. In some embodiments the system can also provide other data including file formats for graphics player data sounds associated assets etc. which can be related to current or future activity appearance behavior etc. of the object e.g. the coin while it is within the first application s domain. In some embodiments the system can transmit e.g. transfer copy pass reflect etc. multi dimensional e.g. 3D object information e.g. 3D object position orientation etc. physics data and other object data using a specialized data container. For example the system can package the coin object data into a special data container or data package which can be passed between applications e.g. a platform independent data container . When the first application receives the coin object data it can read e.g. translate load use etc. the data instantiate the object within its own domain and use the coin object data to control the coin as if the coin were a native object of the first application . In some embodiments the system can use a fixed format for the data or the data package so that multiple manufacturers can use the fixed format to transfer data across applications built on different platforms. The system can transmit the application data object data state data etc. using an open standard so that any device that receives the data can interpret it and use it. In some embodiments the system can access object data and control objects via remote procedure call RPC communication via inter process communication IPC communication via API communication etc. In some embodiments the system can transfer multi dimensional objects from one machine to another e.g. from the wagering game machine to the second wagering game machine . The system can obtain the data e.g. machine data object data application data domain data environmental data control data etc. from one or more devices on the network such as via management servers configuration servers floor layout servers wagering game servers account servers application asset servers wagering game machines etc.

The flow continues at processing block where the system obtains object control for the one or more second content objects. In some embodiments the system obtains object control from the second application. For example the system can obtain authorization control rights control signals etc. from the second application. In some embodiments the first application can receive the control directly from the second application. In some embodiments the system obtains object control by instantiating a new object within the first application programming as soon as the original object begins to exit or appears to exit the second application s domain e.g. the system stop rendering the original instance of the object when it touches the border and generates a copy or new instance of the object for the first application to use and enters the first object s domain e.g. as the object instance passes over the boundary of the second application into a space controlled by the first application . The instantiation can include rendering a new instance of the object within the first application s space and then controlling the new instance of the object as if it were a native object of the first application e.g. incorporating the object s data into the first application s programming and allowing the programming to control object interactions and state . As a result the first application could have complete control of the object. In some embodiments the system can utilize a same instance of the object e.g. the system passes along the location in memory of the object data but provides control of the instance over to the first application to access and use. The instance of the new object can have an identical appearance behavior or other attribute of the original object causing an effect on a graphical display that appears that the original object is passing from the first application s space to the second application s space.

The flow continues at processing block where the system presents the one or more second content objects in a first application domain and controls object interactivity of the second content objects and one or more first content objects according to first application domain data. The system can control the presentation of the second content according to object interactivity rules of the first wagering game application. For example in the system can present the coin as leaving the border and introduce the coin into the confines of the first application with one or more predetermined motion vectors possessed by the coin . The system can map the motion of the coin along a trajectory based on an object layout grid. The system can propel the coin along the trajectory within the object layout grid based on the one or more predetermined motion vectors. The system can apply physics rules from the first application to the physical behavior of the coin as soon as the coin is within the confines of the first application . The system can determine physical interactions between the coin with one or more additional objects already within the confines of the first application e.g. the border the reel the reel character and control the interaction of the coin with the one or more additional objects according to object interactivity rules of the first application e.g. the object rules within the domain data . In some embodiments the system can indicate how long the coin will exist within the confines of the first application e.g. indicate in the coin object data a lifetime for the coin indicate based on the domain data that incorporated foreign objects dissolve destruct when they collide with the border etc. . In some embodiments other applications or services not just the first application can use the control interactions between objects. For instance the cross application content control server can receive all of the domain data e.g. object data application data etc. from the first application and the second application and control the physical interactions between objects as they interact within the domain of the first application or the second application . The system can also control collision sounds e.g. the coin object data can include different coin collision sounds to play when the coin hits objects with different object densities .

The flow continues at processing block where the system determines first application domain data that governs the first content. illustrates an example. In a wagering game system system includes a wagering game machine connected to a communications network . The system also includes a second wagering game machine and a cross application content control server connected to the communications network . The wagering game machine presents a display of a first application and a second application . Similar to described previously the first application can include programming related to objects that are part of the first applications programming. Some examples of objects that are part of the first application include a border a reel and a reel character . Each of the objects can have object data that define the object s appearance behavior etc. The object data for the objects are associated with the objects e.g. border object data is associated with the border reel object data is associated with the reel reel character object data is associated with the reel character etc. . The first application also has domain data that can include programming related to an environment that objects encounter within the domain of the first application . The domain data can also include object rules that govern interaction of objects presentation of objects and other object activity.

The flow continues at processing block where the system determines second application domain data that governs the second content. For example in the second application can also include objects e.g. border coin and object data associated with the objects e.g. border object data associated with the border and coin object data associated the coin . The second application can also have domain rules that govern object activity within the domain of the second application e.g. within the border . In some embodiments the second application can request all data e.g. object attribute data object location data object physics data object state data object motion data etc. for objects outside of the domain of the second application as described at the processing block . The second application can already know the information for the processing block and in some embodiments does not need to perform the processing block . The second application can perform subsequent operations described at processing blocks through . In some embodiments the first application can perform the processing block but not necessarily the processing block . In other embodiments however other devices or services such as the cross application content control server can perform processing blocks through . The cross application content control server can constantly track content data on all wagering game machines e.g. wagering game machines etc. on the communications network . however illustrates one embodiment where the first application delivers its object data e.g. the reel object data the border object data and the reel character object data and application data e.g. the domain data to the second application to utilize.

The flow continues at processing block where the system simulates interactions between one or more objects in the first content and one or more objects in the second content. The system can simulate the interactions according to both the second content s object data the second content s application data the first content s object data and the first content s application data. For instance in the second application generates a simulation that places all of the first application s three dimensional objects e.g. the reel the reel character the border along with their respective object attributes physics behavior etc. into the second application s object activity and combines the activity of the first application s objects with the second applications objects in virtual rendition of what would occur.

The flow continues at processing block where the system generates rendering data of what the interactions would look like and renders object interactions using the render data. illustrates an example. In a first application delivers reel object data for reels . A second application receives the reel object data and generates reel masks that approximate the locations dimensions attributes physics appearance functions state and other object data associated with the reels . The second application runs a simulation that shows an interaction of its own objects e.g. coins as they would behave if the objects were to move beyond the second application s domain and enter the first applications domain with possible object interactions e.g. the coins moving in front of behind and or interacting with the reel masks . The second application takes into consideration the reel object data and does simulation masking blocking clipping overlaying etc. and to simulate the imagery of the coins and the reels as composite imagery. For instance the second application can run a rendering pass and generate rendering data of what the interactions of objects would look like as composite imagery e.g. layers of reels and layers of coins appearing to physically interact based on locations of the reels and coins and based on object physics data but moving independently within their own layers and provide the rendering data to the first application . The first application can then use the rendering data to render the appearance of the coins interacting with the reels . In other embodiments the second application can provide the rendering data to other application devices servers etc. in addition to or in place of the first application to display the rendering of the composite images of object interactions. Returning to the flow illustrates one example of generating the appearance of object interactions by transferring object data but without having to transfer control of objects between applications.

The flow continues at processing block where the system periodically queries for updates of object data to update rendering data. Updates can include state data e.g. information about current priorities presentation state control instructions game outcomes limitations etc. . For example in the second application can continuously request the reel object data in a loop and re render the interactions between the coins and the reels because the reels can have activity that limits the interference of the coins . The rendering can be done per frame per object or in other ways. The updates can also include updates physics data attributes data etc.

The flow continues at processing block where the system determines a second content from a second wagering game application second application . The second content can include multiple objects assets or other items used in the content of the second application. The first application and the second application are independent applications. The second application can also include other stylistic data that is different from the stylistic data for the first application. In other words the first application has a first stylistic schema e.g. look and feel theme environment etc. and the second application has a second schema but the two schemas are designed to be different.

The flow continues at processing block where the system adapts the stylistic appearance of the second content using the stylistic data of the first application. The system can replace the second stylistic schema with the first stylistic schema causing the second application to adapt to the style of the first application. In effect the system causes the second application to reconfigure itself to appear similar to the style or theme of the first application. In some embodiments the function of the second application does not change. For instance in some embodiments the second game does not change the activities that it performs. However the environment in which game elements like reels cards picker grids etc. are set can change for example to have similar fonts similar backgrounds similar colors etc. Thus the system can cause the second application to appear to be a module or child of the first application or vice versa while still being separate applications and having separate functions. The system can cause the second application to change in some embodiments by passing parameters assets settings configurations etc. to the second application to use. In some embodiments the system can re skin the second application. In some embodiments the stylistic data can be broken down into subcategories. The system can access the stylistic data according to the subcategories and provide some or all of the stylistics data to the second application. The second application can use some or all of the stylistic data e.g. some categories versus other categories . For example the system can change only the font styles of the second application to match the first applications font styles. The system can also cause the first application to adapt to the style data of the second application. In some embodiments the system can also cause the first and second applications to change to a style of another application a network broadcast or other content provided by another device service etc. For instance a progressive server can award a jackpot to a player account. Other player accounts can use several different types of applications on various wagering game machines across a wagering game network. The system can cause the several applications on the various machines to take on a theme or stylistic schema for a wagering game application that won the progressive jackpot.

The flow continues at processing block where the system introduces one or more objects from the second application into the first application. The system can cause the objects from the second application to interact with the one or more objects of the first content. The system can adapt the objects to the stylistic schema of the first application. For instance following the example of the progressive game described in the paragraph above when the player account wins the progressive jackpot the player account in one embodiment is playing a fighter jet themed game e.g. a wagering game based on the theme of the movie Top Gun . The system in return can initiate an operation that will send an image of a fighter jet across the network to display the amount of the jackpot and include a graphic of an avatar for the player account who won the jackpot. However when the system sends the fighter jet across machine displays the system can determine the color for the fighter jet and the font of the information on the fighter jet to be adapted to the colors and fonts for games that other players are playing on the wagering game machines on the network. Thus for example the fighter jet can fly onto a display of a first wagering game machine played by a first player account. The system can cause the jet to have a red color and a serif font according to stylistic configurations from a primary game application on the first wagering game machine. However when the fighter jet flies across the display of a second wagering game machine used by a second player account the system can adapt the color of the jet to be blue and adapt the font to be a san serif font according to stylistic configurations of a primary game application on the second wagering game machine.

The flow continues at processing block where the system incorporates one or more objects from the first content into the second application. illustrates an example. In a wagering game system system includes a first wagering game machine connected to a communications network . The system can also include a second wagering game machine and a cross application content control server also connected to the communications network . The first wagering game machine presents a first display where a first wagering game application e.g. a Star Trek themed game includes application data e.g. stylistic data environmental data state data etc. and object data e.g. a Starship Enterprise object data . The system can receive the application data and object data from the first wagering game application first application and provide it to a second application e.g. a group racing competition game . The system can utilize the object data during the presentation of content for the second application . For example the second application can provide vehicles for players to race during the course of play for the second application . The system can determine that a first player account e.g. Larry Johnson is logged in to the first wagering game machine and is playing the first application as the primary wagering game. The system can utilize the Starship Enterprise object data from the first application and incorporate an Enterprise object into the second application as a representative vehicle for the first player account to utilize while participating in a competitive group race. In a similar fashion a second player account e.g. Bruce Davis is playing a different primary wagering game or a third wagering game application third application on the second wagering game machine . The system can determine that the third application e.g. a Top Gun game utilizes its own application data e.g. stylistic data environmental data etc. and its own themed object data e.g. fighter jet object data . The system can utilize the fighter jet object data from the third application and incorporate a fighter jet object into the second application as a representative vehicle for the second player account to utilize while participating in the competitive group race. The system can also utilize application data for the first application and the third application to respectively adapt the appearance of the second application . For example the system causes the background of the second application on the first display to present a space environment similar to an environment used by the first application . At the same time the system causes the background of the second application on a second display for the second wagering game machine to appear as a sky environment similar to an environment used by the third application .

The flow continues at processing block where the system generates one or more composite objects that include at least some elements of one or more first content objects with at least some elements of one or more second content objects. illustrates an example. In a wagering game system system includes a wagering game machine connected to a communications network . The system also includes a cross application content control server . The wagering game machine presents a display . The display includes a first application and a second application . The first application can include a specific theme such as a Star Trek theme with reels that depict some Star Trek characters. For instance one Star Trek character Spock can be associated with first content object data e.g. Spock object data . For example the system can provide the Spock object data which can include assets for a Spock character graphic to the second application . The second application includes a second content object and associated data e.g. car object data related to a car object native to the content of the second application . The system can combine the objects e.g. combine the Spock character graphic with the car object to generate a composite object e.g. composite object of Spock driving a car .

The flow continues at processing block where the system presents the one or more composite objects in one or more of the first content and the second content. For example in the system sends the composite object into the first application s domain. Returning to in another example the system can generate and incorporate composite objects into multiple applications based on a common activity performed by or attribute shared by a group of players. For example if the group of players is playing a secondary group game the system can send modified assets i.e. composite objects back to the base games for all of the players based on the base game s theme. For instance the system can determine that eight 8 players are playing a secondary group game and generate eight composite objects of characters from the player s primary games all in cars utilized as competitive vehicles in the secondary game. In some embodiments the system can generate a different vehicle based on objects from the primary application e.g. generate Spock character in an Enterprise ship for one player playing a Star Trek themed game as their primary application generate a Harry Callahan character in a police vehicle for a player playing a Dirty Harry themed game as their primary application etc. and send those distinct composite objects into each of the group player s primary game as a chain of composite objects racing through the primary application. The activity performed by the composite vehicles can be based on the general activity of the second application e.g. racing boating flying shooting fighting etc. . In some embodiments the system can combine stylistic data for the composite object from its child objects. For example in the system can apply stylistic data to the car portion of the composite object according to a stylistic schema for the second application e.g. color the car green but the Spock character portion of the composite object can match a stylistic schema for the first application e.g. color Spock s outfit blue . In other embodiments however the system can instead apply stylistic data for only the first application e.g. apply a metallic space ship type of skin to the car and make Spock s outfit blue according to first application stylistic data or only the second application e.g. color the car green and make Spock s outfit a Hawaiian style according to second application stylistic data .

The flow continues at processing block where the system controls interactions between the composite object and one or more other objects. For example the system can introduce the composite object into the first wagering game application to interact with the first content. In the system sends the object into the first application s domain and the composite object can interact with the reels of the first application or other objects not shown.

The flow continues at processing block wherein the system adapts the stylistic appearance of the composite object using stylistic data from the first application. For example in the car object can be the red in color while within the second application s domain but when the system sends the composite object into the first application s domain the system can utilize stylistic data from the Star Trek game and change the car on the composite object to a silver color or coat it with a metallic plating to appear like a spaceship. In some embodiments the system can even modify the car to the theme of the first application while it is in the first application s domain such as to change from a car into a space ship e.g. the Starship Enterprise . The system can affect the change based on triggers within the first application such as after a specific event e.g. after a win .

This section describes example operating environments systems and networks and presents structural aspects of some embodiments.

The CPU is also connected to an input output I O bus which can include any suitable bus technologies such as an AGTL frontside bus and a PCI backside bus. The I O bus is connected to a payout mechanism primary display secondary display value input device player input device information reader and storage unit . The player input device can include the value input device to the extent the player input device is used to place wagers. The I O bus is also connected to an external system interface which is connected to external systems e.g. wagering game networks . The external system interface can include logic for exchanging information over wired and wireless networks e.g. 802.11g transceiver Bluetooth transceiver Ethernet transceiver etc. 

The I O bus is also connected to a location unit . The location unit can create player information that indicates the wagering game machine s location movements in a casino. In some embodiments the location unit includes a global positioning system GPS receiver that can determine the wagering game machine s location using GPS satellites. In other embodiments the location unit can include a radio frequency identification RFID tag that can determine the wagering game machine s location using RFID readers positioned throughout a casino. Some embodiments can use GPS receiver and RFID tags in combination while other embodiments can use other suitable methods for determining the wagering game machine s location. Although not shown in in some embodiments the location unit is not connected to the I O bus .

In some embodiments the wagering game machine can include additional peripheral devices and or more than one of each component shown in . For example in some embodiments the wagering game machine can include multiple external system interfaces and or multiple CPUs . In some embodiments any of the components can be integrated or subdivided.

In some embodiments the wagering game machine includes a cross application content control module . The cross application content control module can process communications commands or other information where the processing can control cross application wagering game content.

Furthermore any component of the wagering game machine can include hardware firmware and or machine readable media including instructions for performing the operations described herein.

The mobile wagering game machine includes several input output devices. In particular the mobile wagering game machine includes buttons audio jack speaker display biometric device wireless transmission devices e.g. wireless communication units and microphone and card reader . Additionally the mobile wagering game machine can include tilt orientation ambient light or other environmental sensors.

In some embodiments the mobile wagering game machine uses the biometric device for authenticating players whereas it uses the display and the speaker for presenting wagering game results and other information e.g. credits progressive jackpots etc. . The mobile wagering game machine can also present audio through the audio jack or through a wireless link such as Bluetooth.

In some embodiments the wireless communication unit can include infrared wireless communications technology for receiving wagering game content while docked in a wager gaming station. The wireless communication unit can include an 802.11G transceiver for connecting to and exchanging information with wireless access points. The wireless communication unit can include a Bluetooth transceiver for exchanging information with other Bluetooth enabled devices.

In some embodiments the mobile wagering game machine is constructed from damage resistant materials such as polymer plastics. Portions of the mobile wagering game machine can be constructed from non porous plastics which exhibit antimicrobial qualities. Also the mobile wagering game machine can be liquid resistant for easy cleaning and sanitization.

In some embodiments the mobile wagering game machine can also include an input output I O port for connecting directly to another device such as to a peripheral device a secondary mobile machine etc. Furthermore any component of the mobile wagering game machine can include hardware firmware and or machine readable media including instructions for performing the operations described herein.

The described embodiments can be provided as a computer program product or software that can include a machine readable medium having stored thereon instructions which can be used to program a computer system or other electronic device s to perform a process according to embodiments s whether presently described or not because every conceivable variation is not enumerated herein. A machine readable medium includes any mechanism for storing or transmitting information in a form e.g. software processing application readable by a machine e.g. a computer . The machine readable medium can include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory or other types of medium suitable for storing electronic instructions. In addition embodiments can be embodied in an electrical optical acoustical or other form of propagated signal e.g. carrier waves infrared signals digital signals etc. or wireline wireless or other communications medium.

This detailed description refers to specific examples in the drawings and illustrations. These examples are described in sufficient detail to enable those skilled in the art to practice the inventive subject matter. These examples also serve to illustrate how the inventive subject matter can be applied to various purposes or embodiments. Other embodiments are included within the inventive subject matter as logical mechanical electrical and other changes can be made to the example embodiments described herein. Features of various embodiments described herein however essential to the example embodiments in which they are incorporated do not limit the inventive subject matter as a whole and any reference to the invention its elements operation and application are not limiting as a whole but serve only to define these example embodiments. This detailed description does not therefore limit embodiments which are defined only by the appended claims. Each of the embodiments described herein are contemplated as falling within the inventive subject matter which is set forth in the following claims.

