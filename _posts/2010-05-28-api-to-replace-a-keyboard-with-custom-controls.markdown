---

title: API to replace a keyboard with custom controls
abstract: A method and system for display a user interface object. A user interface object for receiving user input to the application program is determined and the user interface object is displayed on the display. A first set of characteristics of the user interface object is control in accordance with the application program. The first set of characteristics include appearance of the user interface object and user interactions with the application program via the user interface object. A second set of characteristics of the user interface different form the first set of characteristics are controlled in accordance with the control program. The second set of characteristics include the display state of the user interface object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09052894&OS=09052894&RS=09052894
owner: Apple Inc.
number: 09052894
owner_city: Cupertino
owner_country: US
publication_date: 20100528
---
This application claims priority to U.S. Provisional Application Ser. No. 61 295 676 filed Jan. 15 2010 entitled API to Replace a Keyboard with Custom Controls which is incorporated herein by reference in its entirety.

This application is related to the following applications 1 U.S. patent application Ser. No. 12 789 658 filed May 28 2010 Automatic Keyboard Layout Determination 2 U.S. patent application Ser. No. 12 789 666 filed May 28 2010 Automatically Displaying and Hiding an On Screen Keyboard and 3 U.S. patent application Ser. No. 12 789 684 filed May 28 2010 System and Method for Issuing Commands to Applications Based on Contextual Information. Each of these applications is incorporated by reference in its entirety.

The disclosed embodiments relate generally to electronic devices with touch sensitive surfaces and more particularly to electronic devices with touch sensitive surfaces that display user interfaces.

The use of touch sensitive surfaces as input devices for computers and other electronic computing devices has increased significantly in recent years. Exemplary touch sensitive surfaces include touch pads and touch screen displays. Such surfaces are widely used to manipulate user interface objects on a display.

Some electronic devices e.g. a mobile phone a portable game console etc. provide a user interface that includes an on screen keyboard also called a soft keyboard that allows a user to enter text into the user interface by touching virtual keys displayed on a touch sensitive display device sometimes called a touch screen display . Typically the on screen keyboard is a system keyboard that is provided by the operating system of the electronic device. In addition to providing the system keyboard the operating system of the device handles the display behavior of the system keyboard. A application developer may want to create custom user interfaces because the standard interfaces don t have visual appearances or functionalities that are desired by the application developer. For example on a small screen an on screen keyboard may obscure valuable portions of a displayed application. In another example a game developer may want to have a custom game interface that includes game related functionality instead of a standard user interface that does not include game related functionality.

Existing methods for creating custom user interfaces are time consuming and inefficient because they require an application developer to specify all aspects of a custom user interface including the display behavior of the custom user interface.

Accordingly there is a need for computing devices with faster more efficient methods and interfaces for displaying custom user interfaces with the display behavior of a standard user interface. Such methods and interfaces may complement or replace conventional methods for displaying custom user interfaces with the display behavior of a standard user interface. Such methods and interfaces reduce the cognitive burden on a user and produce a more efficient human machine interface. For battery operated computing devices such methods and interfaces conserve power and increase the time between battery charges.

The above deficiencies and other problems associated with user interfaces for computing devices with touch sensitive surfaces are reduced or eliminated by the disclosed devices. In some embodiments the device is a desktop computer. In some embodiments the device is portable e.g. a notebook computer tablet computer or handheld device . In some embodiments the device has a touchpad. In some embodiments the device has a touch sensitive display also known as a touch screen or touch screen display . In some embodiments the device has a graphical user interface GUI one or more processors memory and one or more modules programs or sets of instructions stored in the memory for performing multiple functions. In some embodiments the user interacts with the GUI primarily through finger contacts and gestures on the touch sensitive surface. In some embodiments the functions may include image editing drawing presenting word processing website creating disk authoring spreadsheet making game playing telephoning video conferencing e mailing instant messaging workout support digital photographing digital videoing web browsing digital music playing and or digital video playing. Executable instructions for performing these functions may be included in a computer readable storage medium or other computer program product configured for execution by one or more processors.

In accordance with some embodiments a method is provided to display a custom user interface in accordance with at least some of the display behaviors of a standard system user interface. The application programming interface API for the system provides functions that allow a programmer to replace the appearance and functionality of a standard user interface object. As a result the standard user interface object will appear and function in accordance with the instructions corresponding to the custom user interface while retaining all other functionality of the standard user interface such as display behavior. Such methods enhance the user s experience as all user interfaces whether custom or standard have behaviors that are consistent with the standard input interface provided by the device. Such methods also a programmer to create custom user interfaces without having to specify at least some of the display behaviors of the custom user interfaces thereby decreasing application development time.

In accordance with some embodiments a computer implemented method is performed at an electronic device with one or more processors a touch screen display and memory storing one or more programs including an application program and a control program. The method includes determining a user interface object for receiving user input to the application program and displaying the user interface object on the display. The method also includes in accordance with the application program controlling a first set of characteristics of the user interface object. The first set of characteristics include appearance of the user interface object and user interactions with the application program via the user interface object. The method further includes in accordance with the control program controlling a second set of characteristics of the user interface object different from the first set of characteristics wherein the second set of characteristics include display state of the user interface object.

In accordance with some embodiments an electronic device includes a touch screen display one or more processors memory and one or more programs the one or more programs are stored in the memory and configured to be executed by the one or more processors and the one or more programs include instructions for performing the operations of any of the methods described above. In accordance with some embodiments a graphical user interface on an electronic device with a touch screen display a memory and one or more processors to execute one or more programs stored in the memory includes one or more of the elements displayed in any of the methods described above which are updated in response to inputs as described in any of the methods above. In accordance with some embodiments a computer readable storage medium has stored therein instructions which when executed by an electronic device with a touch screen display cause the device to perform the operations of any of the methods described above. In accordance with some embodiments an electronic device includes a touch screen display and means for performing the operations of any of the methods described above. In accordance with some embodiments an information processing apparatus for use in an electronic device with a touch screen display includes means for performing the operations of any of the methods described above.

Thus electronic devices with touch screen displays are provided with faster more efficient methods and interfaces for displaying custom user interfaces with the display behavior of a standard user interface thereby increasing the effectiveness efficiency and user satisfaction with such devices. Such methods and interfaces may complement or replace conventional methods for displaying custom user interfaces with the display behavior of a standard user interface.

Reference will now be made in detail to embodiments examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the present invention. However it will be apparent to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures components circuits and networks have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.

It will also be understood that although the terms first second etc. may be used herein to describe various elements these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example a first contact could be termed a second contact and similarly a second contact could be termed a first contact without departing from the scope of the present invention. The first contact and the second contact are both contacts but they are not the same contact.

The terminology used in the description of the invention herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used in the description of the invention and the appended claims the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will also be understood that the term and or as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms includes including comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

As used herein the term if may be construed to mean when or upon or in response to determining or in response to detecting depending on the context. Similarly the phrase if it is determined or if a stated condition or event is detected may be construed to mean upon determining or in response to determining or upon detecting the stated condition or event or in response to detecting the stated condition or event depending on the context.

Embodiments of computing devices user interfaces for such devices and associated processes for using such devices are described. In some embodiments the computing device is a portable communications device such as a mobile telephone that also contains other functions such as PDA and or music player functions. Exemplary embodiments of portable multifunction devices include without limitation the iPhone and iPod Touch devices from Apple Inc. of Cupertino Calif. Other portable devices such as laptops or tablet computers with touch sensitive surfaces e.g. touch screen displays and or touch pads may also be used. It should also be understood that in some embodiments the device is not a portable communications device but is a desktop computer with a touch sensitive surface e.g. a touch screen display and or a touch pad .

In the discussion that follows a computing device that includes a display and a touch sensitive surface is described. It should be understood however that the computing device may include one or more other physical user interface devices such as a physical keyboard a mouse and or a joystick.

The device supports a variety of applications such as one or more of the following a drawing application a presentation application a word processing application a website creation application a disk authoring application a spreadsheet application a gaming application a telephone application a video conferencing application an e mail application an instant messaging application a workout support application a photo management application a digital camera application a digital video camera application a web browsing application a digital music player application and or a digital video player application.

The various applications that may be executed on the device may use at least one common physical user interface device such as the touch sensitive surface. One or more functions of the touch sensitive surface as well as corresponding information displayed on the device may be adjusted and or varied from one application to the next and or within a respective application. In this way a common physical architecture such as the touch sensitive surface of the device may support the variety of applications with user interfaces that are intuitive and transparent.

The user interfaces may include one or more soft keyboard or on screen keyboards embodiments. As used herein soft keyboard and on screen keyboard are used interchangeably. The soft keyboard embodiments may include standard QWERTY and or non standard configurations of symbols on the displayed icons of the keyboard such as those described in U.S. patent application Ser. No. 11 459 606 Keyboards For Portable Electronic Devices filed Jul. 24 2006 Ser. No. 11 459 615 Touch Screen Keyboards For Portable Electronic Devices filed Jul. 24 2006 and 61 210 331 Smart Keyboard Management for a Multifunction Device with a Touch Screen Display filed Mar. 16 2009 the contents of which are hereby incorporated by reference in their entireties. The keyboard embodiments may include a reduced number of icons or soft keys relative to the number of keys in existing physical keyboards such as that for a typewriter. This may make it easier for users to select one or more icons in the keyboard and thus one or more corresponding symbols. The keyboard embodiments may be adaptive. For example displayed icons may be modified in accordance with user actions such as selecting one or more icons and or one or more corresponding symbols. One or more applications on the device may utilize common and or different keyboard embodiments. Thus the keyboard embodiment used may be tailored to at least some of the applications. In some embodiments one or more keyboard embodiments may be tailored to a respective user. For example one or more keyboard embodiments may be tailored to a respective user based on a word usage history lexicography slang individual usage of the respective user. Some of the keyboard embodiments may be adjusted to reduce a probability of a user error when selecting one or more icons and thus one or more symbols when using the soft keyboard embodiments.

Attention is now directed toward embodiments of portable devices with touch sensitive displays. are block diagrams illustrating portable multifunction devices with touch sensitive displays in accordance with some embodiments. Touch sensitive display is sometimes called a touch screen for convenience and may also be known as or called a touch sensitive display system. Device may include memory which may include one or more computer readable storage mediums memory controller one or more processing units CPU s peripherals interface RF circuitry audio circuitry speaker microphone input output I O subsystem other input or control devices and external port . Device may include one or more optical sensors . These components may communicate over one or more communication buses or signal lines .

It should be appreciated that device is only one example of a portable multifunction device and that device may have more or fewer components than shown may combine two or more components or may have a different configuration or arrangement of the components. The various components shown in may be implemented in hardware software or a combination of both hardware and software including one or more signal processing and or application specific integrated circuits.

Memory may include high speed random access memory and may also include non volatile memory such as one or more magnetic disk storage devices flash memory devices or other non volatile solid state memory devices. Access to memory by other components of device such as CPU and the peripherals interface may be controlled by memory controller .

Peripherals interface can be used to couple input and output peripherals of the device to CPU and memory . The one or more processors run or execute various software programs and or sets of instructions stored in memory to perform various functions for device and to process data.

In some embodiments peripherals interface CPU and memory controller may be implemented on a single chip such as chip . In some other embodiments they may be implemented on separate chips.

RF radio frequency circuitry receives and sends RF signals also called electromagnetic signals. RF circuitry converts electrical signals to from electromagnetic signals and communicates with communications networks and other communications devices via the electromagnetic signals. RF circuitry may include well known circuitry for performing these functions including but not limited to an antenna system an RF transceiver one or more amplifiers a tuner one or more oscillators a digital signal processor a CODEC chipset a subscriber identity module SIM card memory and so forth. The RF circuitry may communicate with networks such as the Internet also referred to as the World Wide Web WWW an intranet and or a wireless network such as a cellular telephone network a wireless local area network LAN and or a metropolitan area network MAN and other devices by wireless communication. The wireless communication may use any of a plurality of communications standards protocols and technologies including but not limited to Global System for Mobile Communications GSM Enhanced Data GSM Environment EDGE high speed downlink packet access HSDPA wideband code division multiple access W CDMA code division multiple access CDMA time division multiple access TDMA Bluetooth Wireless Fidelity Wi Fi e.g. IEEE 802.11a IEEE 802.11b IEEE 802.11g and or IEEE 802.11n voice over Internet Protocol VoIP Wi MAX a protocol for e mail e.g. Internet message access protocol IMAP and or post office protocol POP instant messaging e.g. extensible messaging and presence protocol XMPP Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions SIMPLE Instant Messaging and Presence Service IMPS and or Short Message Service SMS or any other suitable communication protocol including communication protocols not yet developed as of the filing date of this document.

Audio circuitry speaker and microphone provide an audio interface between a user and device . Audio circuitry receives audio data from peripherals interface converts the audio data to an electrical signal and transmits the electrical signal to speaker . Speaker converts the electrical signal to human audible sound waves. Audio circuitry also receives electrical signals converted by microphone from sound waves. Audio circuitry converts the electrical signal to audio data and transmits the audio data to peripherals interface for processing. Audio data may be retrieved from and or transmitted to memory and or RF circuitry by peripherals interface . In some embodiments audio circuitry also includes a headset jack e.g. . The headset jack provides an interface between audio circuitry and removable audio input output peripherals such as output only headphones or a headset with both output e.g. a headphone for one or both ears and input e.g. a microphone .

I O subsystem couples input output peripherals on device such as touch screen and other input control devices to peripherals interface . I O subsystem may include display controller and one or more input controllers for other input or control devices. The one or more input controllers receive send electrical signals from to other input or control devices . The other input control devices may include physical buttons e.g. push buttons rocker buttons etc. dials slider switches joysticks click wheels and so forth. In some alternate embodiments input controller s may be coupled to any or none of the following a keyboard infrared port USB port and a pointer device such as a mouse. The one or more buttons e.g. may include an up down button for volume control of speaker and or microphone . The one or more buttons may include a push button e.g. . A quick press of the push button may disengage a lock of touch screen or begin a process that uses gestures on the touch screen to unlock the device as described in U.S. patent application Ser. No. 11 322 549 Unlocking a Device by Performing Gestures on an Unlock Image filed Dec. 23 2005 which is hereby incorporated by reference in its entirety. A longer press of the push button e.g. may turn power to device on or off. The user may be able to customize a functionality of one or more of the buttons. Touch screen is used to implement virtual or soft buttons and one or more soft keyboards.

Touch sensitive display provides an input interface and an output interface between the device and a user. Display controller receives and or sends electrical signals from to touch screen . Touch screen displays visual output to the user. The visual output may include graphics text icons video and any combination thereof collectively termed graphics . In some embodiments some or all of the visual output may correspond to user interface objects.

Touch screen has a touch sensitive surface sensor or set of sensors that accepts input from the user based on haptic and or tactile contact. Touch screen and display controller along with any associated modules and or sets of instructions in memory detect contact and any movement or breaking of the contact on touch screen and converts the detected contact into interaction with user interface objects e.g. one or more soft keys icons web pages or images that are displayed on touch screen . In an exemplary embodiment a point of contact between touch screen and the user corresponds to a finger of the user.

Touch screen may use LCD liquid crystal display technology LPD light emitting polymer display technology or LED light emitting diode technology although other display technologies may be used in other embodiments. Touch screen and display controller may detect contact and any movement or breaking thereof using any of a plurality of touch sensing technologies now known or later developed including but not limited to capacitive resistive infrared and surface acoustic wave technologies as well as other proximity sensor arrays or other elements for determining one or more points of contact with touch screen . In an exemplary embodiment projected mutual capacitance sensing technology is used such as that found in the iPhone and iPod Touch from Apple Inc. of Cupertino Calif.

A touch sensitive display in some embodiments of touch screen may be analogous to the multi touch sensitive touchpads described in the following U.S. Pat. No. 6 323 846 Westerman et al. U.S. Pat. No. 6 570 557 Westerman et al. and or U.S. Pat. No. 6 677 932 Westerman and or U.S. Patent Publication 2002 0015024A1 each of which is hereby incorporated by reference in its entirety. However touch screen displays visual output from portable device whereas touch sensitive touchpads do not provide visual output.

A touch sensitive display in some embodiments of touch screen may be as described in the following applications 1 U.S. patent application Ser. No. 11 381 313 Multipoint Touch Surface Controller filed May 2 2006 2 U.S. patent application Ser. No. 10 840 862 Multipoint Touchscreen filed May 6 2004 3 U.S. patent application Ser. No. 10 903 964 Gestures For Touch Sensitive Input Devices filed Jul. 30 2004 4 U.S. patent application Ser. No. 11 048 264 Gestures For Touch Sensitive Input Devices filed Jan. 31 2005 5 U.S. patent application Ser. No. 11 038 590 Mode Based Graphical User Interfaces For Touch Sensitive Input Devices filed Jan. 18 2005 6 U.S. patent application Ser. No. 11 228 758 Virtual Input Device Placement On A Touch Screen User Interface filed Sep. 16 2005 7 U.S. patent application Ser. No. 11 228 700 Operation Of A Computer With A Touch Screen Interface filed Sep. 16 2005 8 U.S. patent application Ser. No. 11 228 737 Activating Virtual Keys Of A Touch Screen Virtual Keyboard filed Sep. 16 2005 and 9 U.S. patent application Ser. No. 11 367 749 Multi Functional Hand Held Device filed Mar. 3 2006. All of these applications are incorporated by reference herein in their entirety.

Touch screen may have a resolution in excess of 100 dpi. In some embodiments the touch screen has a resolution of approximately 160 dpi. The user may make contact with touch screen using any suitable object or appendage such as a stylus a finger and so forth. In some embodiments the user interface is designed to work primarily with finger based contacts and gestures which can be less precise than stylus based input due to the larger area of contact of a finger on the touch screen. In some embodiments the device translates the rough finger based input into a precise pointer cursor position or command for performing the actions desired by the user.

In some embodiments in addition to the touch screen device may include a touchpad not shown for activating or deactivating particular functions. In some embodiments the touchpad is a touch sensitive area of the device that unlike the touch screen does not display visual output. The touchpad may be a touch sensitive surface that is separate from touch screen or an extension of the touch sensitive surface formed by the touch screen.

In some embodiments device may include a physical or virtual wheel e.g. a click wheel as input control device . A user may navigate among and interact with one or more graphical objects e.g. icons displayed in touch screen by rotating the click wheel or by moving a point of contact with the click wheel e.g. where the amount of movement of the point of contact is measured by its angular displacement with respect to a center point of the click wheel . The click wheel may also be used to select one or more of the displayed icons. For example the user may press down on at least a portion of the click wheel or an associated button. User commands and navigation commands provided by the user via the click wheel may be processed by input controller as well as one or more of the modules and or sets of instructions in memory . For a virtual click wheel the click wheel and click wheel controller may be part of touch screen and display controller respectively. For a virtual click wheel the click wheel may be either an opaque or semitransparent object that appears and disappears on the touch screen display in response to user interaction with the device. In some embodiments a virtual click wheel is displayed on the touch screen of a portable multifunction device and operated by user contact with the touch screen.

Device also includes power system for powering the various components. Power system may include a power management system one or more power sources e.g. battery alternating current AC a recharging system a power failure detection circuit a power converter or inverter a power status indicator e.g. a light emitting diode LED and any other components associated with the generation management and distribution of power in portable devices.

Device may also include one or more optical sensors . show an optical sensor coupled to optical sensor controller in I O subsystem . Optical sensor may include charge coupled device CCD or complementary metal oxide semiconductor CMOS phototransistors. Optical sensor receives light from the environment projected through one or more lens and converts the light to data representing an image. In conjunction with imaging module also called a camera module optical sensor may capture still images or video. In some embodiments an optical sensor is located on the back of device opposite touch screen display on the front of the device so that the touch screen display may be used as a viewfinder for still and or video image acquisition. In some embodiments an optical sensor is located on the front of the device so that the user s image may be obtained for videoconferencing while the user views the other video conference participants on the touch screen display. In some embodiments the position of optical sensor can be changed by the user e.g. by rotating the lens and the sensor in the device housing so that a single optical sensor may be used along with the touch screen display for both video conferencing and still and or video image acquisition.

Device may also include one or more proximity sensors . show proximity sensor coupled to peripherals interface . Alternately proximity sensor may be coupled to input controller in I O subsystem . Proximity sensor may perform as described in U.S. patent application Ser. No. 11 241 839 Proximity Detector In Handheld Device Ser. No. 11 240 788 Proximity Detector In Handheld Device Ser. No. 11 620 702 Using Ambient Light Sensor To Augment Proximity Sensor Output Ser. No. 11 586 862 Automated Response To And Sensing Of User Activity In Portable Devices and Ser. No. 11 638 251 Methods And Systems For Automatic Configuration Of Peripherals which are hereby incorporated by reference in their entirety. In some embodiments the proximity sensor turns off and disables touch screen when the multifunction device is placed near the user s ear e.g. when the user is making a phone call .

Device may also include one or more accelerometers . show accelerometer coupled to peripherals interface . Alternately accelerometer may be coupled to an input controller in I O subsystem . Accelerometer may perform as described in U.S. Patent Publication No. 20050190059 Acceleration based Theft Detection System for Portable Electronic Devices and U.S. Patent Publication No. 20060017692 Methods And Apparatuses For Operating A Portable Device Based On An Accelerometer both of which are which are incorporated by reference herein in their entirety. In some embodiments information is displayed on the touch screen display in a portrait view or a landscape view based on an analysis of data received from the one or more accelerometers. Device optionally includes in addition to accelerometer s a magnetometer not shown and a GPS or GLONASS or other global navigation system receiver not shown for obtaining information concerning the location and orientation e.g. portrait or landscape of device .

In some embodiments the software components stored in memory include operating system communication module or set of instructions contact motion module or set of instructions graphics module or set of instructions text input module or set of instructions Global Positioning System GPS module or set of instructions and applications or sets of instructions . Furthermore in some embodiments memory stores device global internal state as shown in B and . Device global internal state includes one or more of active application state indicating which applications if any are currently active display state indicating what applications views or other information occupy various regions of touch screen display sensor state including information obtained from the device s various sensors and input control devices and location information concerning the device s location and or attitude.

Operating system e.g. Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks includes various software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communication between various hardware and software components.

Communication module facilitates communication with other devices over one or more external ports and also includes various software components for handling data received by RF circuitry and or external port . External port e.g. Universal Serial Bus USB FIREWIRE etc. is adapted for coupling directly to other devices or indirectly over a network e.g. the Internet wireless LAN etc. . In some embodiments the external port is a multi pin e.g. 30 pin connector that is the same as or similar to and or compatible with the 30 pin connector used on iPod trademark of Apple Inc. devices.

Contact motion module may detect contact with touch screen in conjunction with display controller and other touch sensitive devices e.g. a touchpad or physical click wheel . Contact motion module includes various software components for performing various operations related to detection of contact such as determining if contact has occurred e.g. detecting a finger down event determining if there is movement of the contact and tracking the movement across the touch sensitive surface e.g. detecting one or more finger dragging events and determining if the contact has ceased e.g. detecting a finger up event or a break in contact . Contact motion module receives contact data from the touch sensitive surface. Determining movement of the point of contact which is represented by a series of contact data may include determining speed magnitude velocity magnitude and direction and or an acceleration a change in magnitude and or direction of the point of contact. These operations may be applied to single contacts e.g. one finger contacts or to multiple simultaneous contacts e.g. multitouch multiple finger contacts . In some embodiments contact motion module and display controller detects contact on a touchpad. In some embodiments contact motion module and controller detects contact on a click wheel.

Contact motion module may detect a gesture input by a user. Different gestures on the touch sensitive surface have different contact patterns. Thus a gesture may be detected by detecting a particular contact pattern. For example detecting a finger tap gesture includes detecting a finger down event followed by detecting a finger up lift off event at the same position or substantially the same position as the finger down event e.g. at the position of an icon . As another example detecting a finger swipe gesture on the touch sensitive surface includes detecting a finger down event followed by detecting one or more finger dragging events and subsequently followed by detecting a finger up lift off event.

Graphics module includes various known software components for rendering and displaying graphics on touch screen or other display including components for changing the intensity of graphics that are displayed. As used herein the term graphics includes any object that can be displayed to a user including without limitation text web pages icons such as user interface objects including soft keys digital images videos animations and the like.

In some embodiments graphics module stores data representing graphics to be used. Each graphic may be assigned a corresponding code. Graphics module receives from applications etc. one or more codes specifying graphics to be displayed along with if necessary coordinate data and other graphic property data and then generates screen image data to output to display controller .

Text input module which may be a component of graphics module provides soft keyboards for entering text in various applications e.g. contacts e mail IM browser and any other application that needs text input .

GPS module determines the location of the device and provides this information for use in various applications e.g. to telephone for use in location based dialing to camera as picture video metadata and to applications that provide location based services such as weather widgets local yellow page widgets and map navigation widgets .

The applications may include the following modules or sets of instructions or a subset or superset thereof 

Examples of other applications that may be stored in memory include other word processing applications other image editing applications drawing applications presentation applications JAVA enabled applications encryption digital rights management voice recognition and voice replication.

In conjunction with touch screen display controller contact module graphics module and text input module the contacts module may be used to manage an address book or contact list e.g. stored in application internal state of contacts module in memory or memory including adding name s to the address book deleting name s from the address book associating telephone number s e mail address es physical address es or other information with a name associating an image with a name categorizing and sorting names providing telephone numbers or e mail addresses to initiate and or facilitate communications by telephone video conference e mail or IM and so forth.

In conjunction with RF circuitry audio circuitry speaker microphone touch screen display controller contact module graphics module and text input module the telephone module may be used to enter a sequence of characters corresponding to a telephone number access one or more telephone numbers in the address book modify a telephone number that has been entered dial a respective telephone number conduct a conversation and disconnect or hang up when the conversation is completed. As noted above the wireless communication may use any of a plurality of communications standards protocols and technologies.

In conjunction with RF circuitry audio circuitry speaker microphone touch screen display controller optical sensor optical sensor controller contact module graphics module text input module contact list and telephone module the videoconferencing module includes executable instructions to initiate conduct and terminate a video conference between a user and one or more other participants in accordance with user instructions.

In conjunction with RF circuitry touch screen display controller contact module graphics module and text input module the e mail client module includes executable instructions to create send receive and manage e mail in response to user instructions. In conjunction with image management module the e mail client module makes it very easy to create and send e mails with still or video images taken with camera module .

In conjunction with RF circuitry touch screen display controller contact module graphics module and text input module the instant messaging module includes executable instructions to enter a sequence of characters corresponding to an instant message to modify previously entered characters to transmit a respective instant message for example using a Short Message Service SMS or Multimedia Message Service MMS protocol for telephony based instant messages or using XMPP SIMPLE or IMPS for Internet based instant messages to receive instant messages and to view received instant messages. In some embodiments transmitted and or received instant messages may include graphics photos audio files video files and or other attachments as are supported in a MMS and or an Enhanced Messaging Service EMS . As used herein instant messaging refers to both telephony based messages e.g. messages sent using SMS or MMS and Internet based messages e.g. messages sent using XMPP SIMPLE or IMPS .

In conjunction with RF circuitry touch screen display controller contact module graphics module text input module GPS module map module and music player module workout support module includes executable instructions to create workouts e.g. with time distance and or calorie burning goals communicate with workout sensors sports devices receive workout sensor data calibrate sensors used to monitor a workout select and play music for a workout and display store and transmit workout data.

In conjunction with touch screen display controller optical sensor s optical sensor controller contact module graphics module and image management module camera module includes executable instructions to capture still images or video including a video stream and store them into memory modify characteristics of a still image or video or delete a still image or video from memory .

In conjunction with touch screen display controller contact module graphics module text input module and camera module image management module includes executable instructions to arrange modify e.g. edit or otherwise manipulate label delete present e.g. in a digital slide show or album and store still and or video images.

In conjunction with touch screen display controller contact module graphics module audio circuitry and speaker video player module includes executable instructions to display present or otherwise play back videos e.g. on touch screen or on an external connected display via external port .

In conjunction with touch screen display system controller contact module graphics module audio circuitry speaker RF circuitry and browser module music player module includes executable instructions that allow the user to download and play back recorded music and other sound files stored in one or more file formats such as MP3 or AAC files. In some embodiments device may include the functionality of an MP3 player such as an iPod trademark of Apple Inc. .

In conjunction with RF circuitry touch screen display system controller contact module graphics module and text input module the browser module includes executable instructions to browse the Internet in accordance with user instructions including searching linking to receiving and displaying web pages or portions thereof as well as attachments and other files linked to web pages.

In conjunction with RF circuitry touch screen display system controller contact module graphics module text input module e mail client module and browser module calendar module includes executable instructions to create display modify and store calendars and data associated with calendars e.g. calendar entries to do lists etc. in accordance with user instructions.

In conjunction with RF circuitry touch screen display system controller contact module graphics module text input module and browser module widget modules are mini applications that may be downloaded and used by a user e.g. weather widget stocks widget calculator widget alarm clock widget and dictionary widget or created by the user e.g. user created widget . In some embodiments a widget includes an HTML Hypertext Markup Language file a CSS Cascading Style Sheets file and a JavaScript file. In some embodiments a widget includes an XML Extensible Markup Language file and a JavaScript file e.g. Yahoo Widgets .

In conjunction with RF circuitry touch screen display system controller contact module graphics module text input module and browser module the widget creator module may be used by a user to create widgets e.g. turning a user specified portion of a web page into a widget .

In conjunction with touch screen display system controller contact module graphics module and text input module search module includes executable instructions to search for text music sound image video and or other files in memory that match one or more search criteria e.g. one or more user specified search terms in accordance with user instructions.

In conjunction with touch screen display controller contact module graphics module and text input module notes module includes executable instructions to create and manage notes to do lists and the like in accordance with user instructions.

In conjunction with RF circuitry touch screen display system controller contact module graphics module text input module GPS module and browser module map module may be used to receive display modify and store maps and data associated with maps e.g. driving directions data on stores and other points of interest at or near a particular location and other location based data in accordance with user instructions.

In conjunction with touch screen display system controller contact module graphics module audio circuitry speaker RF circuitry text input module e mail client module and browser module online video module includes executable instructions that allows the user to access browse receive e.g. by streaming and or download play back e.g. on the touch screen or on an external connected display via external port send an e mail with a link to a particular online video and otherwise manage online videos in one or more file formats such as H.264. In some embodiments instant messaging module rather than e mail client module is used to send a link to a particular online video. Additional description of the online video application can be found in U.S. Provisional Patent Application No. 60 936 562 Portable Multifunction Device Method and Graphical User Interface for Playing Online Videos filed Jun. 20 2007 and U.S. patent application Ser. No. 11 968 067 Portable Multifunction Device Method and Graphical User Interface for Playing Online Videos filed Dec. 31 2007 the content of which is hereby incorporated by reference in its entirety.

As discussed in greater detail in the discussion of the control module determines the display behavior of a user interface object.

As discussed in greater detail in the discussion of user created applications are applications that include custom user interfaces and or accessory view interfaces .

As discussed in greater detail in the discussion of the event handler system handles event messages between the control module and the user created applications .

Each of the above identified modules and applications correspond to a set of executable instructions for performing one or more functions described above and the methods described in this application e.g. the computer implemented methods and other information processing methods described herein . These modules i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. For example video player module may be combined with music player module into a single module e.g. video and music player module . In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

In some embodiments device is a device where operation of a predefined set of functions on the device is performed exclusively through a touch screen and or a touchpad. By using a touch screen and or a touchpad as the primary input control device for operation of device the number of physical input control devices such as push buttons dials and the like on device may be reduced.

The predefined set of functions that may be performed exclusively through a touch screen and or a touchpad include navigation between user interfaces. In some embodiments the touchpad when touched by the user navigates device to a main home or root menu from any user interface that may be displayed on device . In such embodiments the touchpad may be referred to as a menu button. In some other embodiments the menu button may be a physical push button or other physical input control device instead of a touchpad.

Device may also include one or more physical buttons such as home or menu button . As described previously the menu button may be used to navigate to any application in a set of applications that may be executed on device . Alternatively in some embodiments the menu button is implemented as a soft key in a GUI in touch screen .

In one embodiment device includes a touch screen menu button push button for powering the device on off and locking the device volume adjustment button s Subscriber Identity Module SIM card slot head set jack and docking charging external port . Push button may be used to turn the power on off on the device by depressing the button and holding the button in the depressed state for a predefined time interval to lock the device by depressing the button and releasing the button before the predefined time interval has elapsed and or to unlock the device or initiate an unlock process. In an alternative embodiment device also may accept verbal input for activation or deactivation of some functions through microphone .

The operating system includes procedures for handling various basic system services and for performing hardware dependent tasks.

The communication module facilitates communication with other devices via the one or more communication network interfaces wired or wireless and one or more communication networks such as the Internet other wide area networks local area networks metropolitan area networks cellular networks and so on.

The graphics module displays graphics on the touch screen or other display the graphics include various user interfaces such as on screen keyboards virtual game controllers sliders pickers wheels and virtual knobs.

The user interface module receives commands from the user via the input devices e.g. touch screen keyboard mouse touchpad . The user interface module also generates user interface objects in the display device . In some embodiments the user interface module provides on screen keyboards for entering text to various applications e.g. contacts e mail IM browser and any other application that needs text input . In some embodiments the user interface module provides on screen keyboard display behavior data to the control module and to the display behavior database . In some embodiments the display behavior data includes display behavior rules for a user interface object. Each rule specifies an event and the corresponding display action. For example a rule may specify when the event of rotating the device occurs the corresponding display action is updating the orientation of the displayed user interface object.

The user created applications include custom user interfaces and accessory view interfaces . A custom user interface is created by a programmer of a user created application and is specific to the user created application . For example the custom user interfaces could be virtual knobs virtual wheels virtual game controllers sliders pickers selection boxes and on screen keyboards. In some embodiments a custom user interface replaces a standard interface. An accessory view interface is a user interface that display icons corresponding to graphical user interfaces. An accessory view allows a programmer to associate more than one user interface with a field. For example for an input field a user may associate a custom on screen keyboard the standard on screen keyboard a font picker and a symbol picker. The user interfaces associated with an accessory view may be standard user interfaces e.g. standard on screen keyboard or custom user interfaces. A programmer may want to associate multiple user interfaces with an input field to provide a user with multiple input options. For example for a text field the accessory view interfaces may include an on screen keyboard font picker and icon selector. In this example a user may select the on screen keyboard input some text into the field select the font picker change the font of the entered text and select the icon to insert symbols into the text field.

The display behavior database includes display behavior data for user interface objects. In some embodiments the display behavior data includes behavior data for standard interface objects and custom user interface objects. The display behavior for a respective interface object may include a set of rules defining events and actions. For example for an on screen keyboard an event may be rotating the device and the action may be updating the on screen keyboard to a position and orientation corresponding to the new orientation of the device. The event includes some sort of user action with respect to the device. For example the user action may include rotating the device selecting an icon or area jiggling the device coming into close proximity to the device or smacking the device. The action is the corresponding display action of an object. In some embodiments the action also includes the location to display an object. For example the action includes displaying the object hiding the object and redisplaying the object at a different position and orientation.

The event handling system is discussed further in the discussion of . The event handling system handles messages between the control module and the user created applications . The event handling system in the device may be implemented in various alternate embodiments within the control module and or the applications as described herein.

The control module displays custom user interfaces in accordance with display behavior of a standard interface object. A standard user object is a user interface that is provided by the user interface module to one or more modules on the device . The standard interface object is not specific to any application. Generally users cannot modify the standard interface objects.

In some embodiments the control module detects whether a custom user interface is associated with at least some display behavior of a standard user object. In some embodiments in conjunction with the event handling system the control module detects whether a custom user interface is associated with at least some display behavior of a standard user object. For example the control module may receive a message from the event handling system indicating that an application is displaying a custom user interface that has been associated with display behavior for a standard interface object. In some embodiments the control module detects whether a standard user object has had its appearance and functionality replaced by a custom user interface.

In some embodiments the control module sends display instructions to the application to display the custom user interface in accordance with the display behavior of a standard user object. In some embodiments the display instructions are sent through the event handling system . Display behavior can include when an object is displayed or hidden when a custom object is displayed or hidden where the object is displayed and how the object behaves when a user interacts with the device. In some embodiments user interactions include rotating the device jiggling the device slapping the device coming into close proximity to the device and answering a call. In some embodiments the control module works in conjunction with the user interface module the event handling system the graphics module the accelerometers the proximity sensors and contact motion module to display a custom user interface. In some embodiments the standard user interface objects and custom user interface objects associated with at least some display behavior of a standard user interface objects are displayed in accordance with display behavior of a user interface object described in U.S. patent application Ser. No. 12 789 666 Automatically Hiding and Displaying an On screen Keyboard filed May 28 2010.

In some embodiments the control module retrieves display behavior data e.g. from the display behavior database or the user interface module .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Attention is now directed towards embodiments of user interfaces UI that may be implemented on a portable multifunction device .

In some embodiments user interface B includes the following elements or a subset or superset thereof 

Additionally while the following examples are given primarily with reference to finger inputs e.g. finger contacts finger tap gestures finger swipe gestures it should be understood that in some embodiments one or more of the finger inputs are replaced with input from another input device e.g. a mouse based input or stylus input . For example a swipe gesture may be replaced with a mouse click e.g. instead of a contact followed by movement of the cursor along the path of the swipe e.g. instead of movement of the contact . As another example a tap gesture may be replaced with a mouse click while the cursor is located over the location of the tap gesture e.g. instead of detection of the contact followed by ceasing to detect the contact . Similarly when multiple user inputs are simultaneously detected it should be understood that multiple computer mice may be used simultaneously or a mouse and finger contacts may be used simultaneously.

Event sorter receives event information and determines the application and application view of application to which to deliver the event information. Event sorter includes an event monitor and an event dispatcher module .

In some embodiments application includes application internal state which indicates the current application view s displayed on touch sensitive display when the application is active or executing. As discussed in further detail below an application view or user interface window is made up of controls and other elements that a user can see on the display. In some embodiments the application internal state data includes active field data and displayed user interface data of the current application view. Active field data includes the active fields and whether the user interface or interfaces associated with the active fields are associated with at least some display behavior of standard interface objects. Displayed user interface data includes which user interfaces are displayed whether the displayed user interfaces are associated with at least some display behavior of standard interface objects and the orientation of user interfaces displayed in the current application view s .

Application internal state however is not directly accessible by control module because the memory location s of the application internal state is are not known to control module or the memory location s of the application internal state is are not directly accessible by the control module and or because application stores information in application internal state in a manner e.g. using data structures formats metadata or the like unknown to control module .

In some embodiments application internal state includes additional information such as one or more of resume information to be used when application resumes execution user interface state information that indicates information being displayed or that is ready for display by application a state queue for enabling the user to go back to a prior state or view of application and a redo undo queue of previous actions taken by the user.

In some embodiments device global internal state is used by event sorter to determine which application s is are currently active and application internal state is used by event sorter to determine application views to which to deliver event information.

In some embodiments application internal state includes additional information such as one or more of resume information to be used when application resumes execution user interface state information that indicates information being displayed or that is ready for display by application a state queue for enabling the user to go back to a prior state or view of application and a redo undo queue of previous actions taken by the user.

Event monitor receives event information from peripherals interface . Event information includes information about a sub event e.g. a user touch on the touch sensitive display device as part of a multi touch gesture . Peripherals interface transmits information it receives from I O subsystem e.g. the system keyboard the custom keyboard etc. or a sensor such as proximity sensors accelerometer s and or microphone through audio circuitry . Information that the peripherals interface receives from I O subsystem or includes information from the touch sensitive display device i.e. a touch sensitive display or display having a touch sensitive surface and sensors .

In some embodiments the event monitor sends requests to the peripherals interface at predetermined intervals. In response the peripherals interface transmits event information. In other embodiments peripherals interface transmits event information only when there is a significant event e.g. receiving an input beyond a predetermined noise threshold and or for more than a predetermined duration .

In some embodiments the event sorter also includes a hit view determination module and or an active event recognizer determination module .

Hit view determination module provides software procedures for determining where a sub event has taken place within one or more views e.g. the application views when the touch sensitive display device displays more than one view. Views are made up of controls and other elements that a user can see on the display.

Another aspect of the user interface associated with an application is a set of views sometimes herein called application views or user interface windows in which information is displayed and touch based gestures occur. The application views of a respective application in which a touch is detected may correspond to programmatic levels within a programmatic or view hierarchy of the application. For example the lowest level view in which a touch is detected may be called the hit view and the set of events that are recognized as proper inputs may be determined based at least in part on the hit view of the initial touch that begins a touch based gesture.

The hit view determination module receives information related to sub events of a touch based gesture. When an application has multiple views organized in a hierarchy the hit view determination module identifies a hit view as the lowest view in the hierarchy which should handle the sub event. In most circumstances the hit view is the lowest level view in which an initiating sub event occurs i.e. the first sub event in the sequence of sub events that form an event or potential event . Once the hit view is identified by the hit view determination module the hit view it typically receives all sub events related to the same touch or input source for which it was identified as the hit view.

Active event recognizer determination module determines which view or views within a view hierarchy should receive a particular sequence of sub events. In some embodiments the active event recognizer determination module determines that only the hit view should receive a particular sequence of sub events. In other embodiments active event recognizer determination module determines that all views that include the physical location of a sub event are actively involved views and therefore determines that all actively involved views should receive a particular sequence of sub events. In other embodiments even if touch sub events were entirely confined to the area associated with one particular view views higher in the hierarchy would still remain as the actively involved views.

The event dispatcher module dispatches the event information to an event recognizer e.g. event recognizer . In embodiments including the active event recognizer determination module the event dispatcher module delivers the event information to an event recognizer determined by the active event recognizer determination module . In some embodiments the event dispatcher module stores in an event queue the event the event information which is retrieved by a respective event receiver module .

In some embodiments the operating system includes the event sorter . Alternatively the application includes the event sorter . In yet other embodiments the event sorter is a stand alone module or a part of another module stored in memory such as contact motion module .

In some embodiments the application includes a plurality of event handlers and one or more application views each of which includes instructions for handling touch events that occur with a respective view of the application s user interface. Each application view of the application includes one or more event recognizers . Typically a respective an application view includes a plurality of event recognizers . In other embodiments one or more of the event recognizers are part of a separate module such as a user interface kit not shown or a higher level object from which application inherits methods and other properties. In some embodiments a respective application view also includes event data . The interface information includes which interfaces are currently displayed and whether each user interface is associated with display behavior of a standard user object. In some embodiments a respective event handler also includes one or more of data updater object updater GUI updater and or event data received from event sorter . Event handler may utilize or call data updater object updater or GUI updater to update the application internal state . Alternatively one or more of the application views includes one or more respective event handlers . Also in some embodiments one or more of data updater object updater and GUI updater are included in a respective application view .

A respective event recognizer receives event information e.g. event data from the event sorter and identifies an event from the event information. The event recognizer includes an event receiver and an event comparator . In some embodiments the event recognizer also includes at least a subset of metadata event delivery instructions and or sub event delivery instructions .

The event receiver receives event information from the event sorter . The event information includes information about a sub event for example a touch or a movement. Depending on the sub event the event information also includes additional information such as a location e.g. a physical location of the sub event. When the sub event concerns motion of a touch the event information may also include speed and direction of the sub event. In some embodiments events include rotation of the device from one orientation to another e.g. from a portrait orientation to a landscape orientation or vice versa and the event information includes corresponding information about the current orientation also called device attitude of the device.

Event comparator compares the event information to predefined event or sub event definitions and based on the comparison determines an event or sub event or determines or updates the state of an event or sub event. In some embodiments event comparator includes event definitions . Event definitions contain definitions of events e.g. predefined sequences of sub events for example event event and others. In some embodiments sub events in an event include for example touch begin touch end touch cancellation and multiple touching. In one example the definition for event is a double tap on a displayed object. The double tap for example comprises a first touch touch begin on the displayed object for a predetermined phase a first lift off touch end for a predetermined phase a second touch touch begin on the displayed object for a predetermined phase and a second lift off touch end for a predetermined phase. In another example the definition for event is rotating the device . Other examples of events include jiggling the device smacking the device and coming into close proximity to the device . In some embodiments the event also includes information for one or more associated event handlers for respective event e.g. .

In some embodiments an event definition includes a definition of an event for a respective user interface object. In some embodiments the event comparator performs a hit test to determine which user interface object is associated with a sub event. For example in an application view in which three user interface objects are displayed on a touch sensitive display such as the display device when a touch is detected on the display device the event comparator performs a hit test to determine which of the three user interface objects is associated with the touch sub event . If each displayed object is associated with a respective event handler the event comparator uses the result of the hit test to determine which event handler should be activated. For example the event comparator selects an event handler associated with the sub event and the object triggering the hit test.

In some embodiments the definition for a respective event also includes delayed actions that delays delivery of the event information until after it has been determined whether the sequence of sub events does or does not correspond to the event recognizer s event type.

When a respective event recognizer determines that the series of sub events do not match any of the events in the event definitions the respective event recognizer enters an event impossible event failed or event ended state after which it disregards subsequent sub events of the touch based gesture. In this situation other event recognizers if any that remain active for the hit view continue to track and process sub events of an ongoing touch based gesture.

In some embodiments a respective event recognizer includes metadata with configurable properties flags and or lists that indicate how the event delivery system should perform sub event delivery to actively involved event recognizers. In some embodiments metadata includes configurable properties flags and or lists that indicate how event recognizers may interact with one another. In some embodiments metadata includes configurable properties flags and or lists that indicate whether sub events are delivered to varying levels in the view or programmatic hierarchy.

In some embodiments a respective event recognizer activates an event handler associated with an event when one or more particular sub events of an event are recognized. In some embodiments a respective event recognizer delivers event information associated with the event to the event handler . Activating an event handler is distinct from sending and deferred sending sub events to a respective hit view. In some embodiments the event recognizer throws a flag associated with the recognized event and an event handler associated with the flag catches the flag and performs a predefined process.

In some embodiments the event delivery instructions includes the sub event delivery instructions that deliver event information about a sub event without activating an event handler. Instead the sub event delivery instructions deliver event information to event handlers associated with the series of sub events or to actively involved views. Event handlers associated with the series of sub events or with actively involved views receive the event information and perform a predetermined process.

In some embodiments data updater creates and updates data used in application . For example data updater updates the telephone number used in contacts module or stores a video file used in video player module . In some embodiments object updater creates and updates objects used in application . For example object updater creates a new user interface object or updates the position of a user interface object. GUI updater updates the GUI. For example GUI updater prepares display information and sends it to graphics module for display on a touch sensitive display.

In some embodiments event handler s includes or has access to data updater object updater and GUI updater . In some embodiments data updater object updater and GUI updater are included in a single module of a respective application or application view . In other embodiments they are included in two or more software modules.

In some embodiments the control application event handler includes a query module a command module and a listener module . The modules of control application event handler form an application programming interface API for providing display behavior to application executed by device .

The query module queries the application for interface information. In some embodiments interface information includes displayed user interfaces whether the displayed interface are associated with at least some display behavior of a standard interface object the orientation of the displayed user interface the active fields and whether the user interfaces associated with the active fields are associated with at least some display behavior of a standard device. Orientation data includes the orientation of the device and the displayed user interfaces. Interface information obtained by the query module is used by the control module to update application internal state information retained by the control module for the application .

The interface information is used by the event handler to determine whether the display of the application needs to be updated. For example the interface information may indicate that the orientation of a custom user that is associated with display behavior of a standard user object does not match the orientation of the device .

The command module issues commands to the application based on the user interface display event and the obtained interface information. As discussed above the user interface display event is received from an event recognizer. When a user interface display event is received the command module may issues commands to the application to display all of the displayed custom user interfaces that are associated with at least some display behavior of standard user object in accordance with display behavior for a standard user object. For example the command module may in response to receiving an event indicating that a rotating event has occurred instruct the application to display a custom user interface object that is associated with at least some display behavior of a standard user object at an orientation corresponding to the orientation of the device . In another example the command module may in response to receiving an event indicating that a user has selected an icon or tap an area of the display to indicate that a displayed user interface is no longer required instruct the application to hide a user interface object. In yet another example the command module may instruct the application to display one or more user interface objects or icons representing one or more user interface objects in an accessory view.

The listener module listens to notifications by the application e.g. via a notification module of the application that the interface information obtained by the control module for application can no longer be relied upon by the control module .

As discussed in more detail in the discussion the control application event handler includes an input view function and an accessory view function . The input view function replaces the appearance and functionality of a standard user interface object that is associated with an input field with the appearance and functionality of a custom user interface object. The accessory view function associates or binds an accessory view to an input field.

In some embodiments the application event handler includes a responder module a command execution module and a notification module . The responder module responds to queries by the control module e.g. from the query module of the control module for interface information providing information for one or more events. The command execution module executes commands issued by the control module e.g. from the command module of the control module . For example the command execution module may hide a user interface or re display a user interface at an orientation corresponding to the orientation of the device. The notification module notifies the control module that the interface information obtained by the control module from the application can no longer be relied upon by the control module .

It shall be understood that the foregoing discussion regarding event handling of user touches on touch sensitive displays also applies to other forms of user inputs to operate the device with input devices not all of which are initiated on touch screens such as coordinating mouse movement and mouse button presses with or without single or multiple keyboard presses or holds user movements taps drags scrolls etc. on touchpads pen stylus inputs movement of the device rotation of the device oral instructions detected eye movements biometric inputs and or any combination thereof which may be utilized as inputs corresponding to sub events which define an event to be recognized.

Attention is now directed towards embodiments of user interfaces UI and associated processes that may be implemented on a multifunction device with a display and a touch sensitive surface such as device or portable multifunction device .

As described below the method provides a way to display a custom interface object with the display behavior of a standard interface object such as an on screen keyboard. The method allows a programmer to create a custom interface object without needing to program all aspects of the custom interface object s display behavior thereby reducing the programmer s development time. Programmers may desire that their custom interfaces are displayed in accordance with a standard interface object so that their interfaces are predictable to users.

In accordance with some embodiments a computer implemented method is performed at an electronic device that includes one or more processors a touch screen display and memory storing one or more programs including an application program and a control program. A user interface object for receiving user input to the application program is detected and the user interface object is displayed on the display . In some embodiments it is determined whether an input field is associated with an interface object that is associated with at least some display behavior of a standard user interface object. In some embodiments the input field is an active input field that a user has selected. In some embodiments the control module determines the user interface object by way of the event handling system . In some embodiments the user interface object is determined in response to a user action. For example the user interface object may be determined when a user selects an input field that requires the user interface object. In some embodiments the user interface object is selected from a group consisting of sliders virtual knobs virtual wheels virtual joysticks selection boxes and on screen keyboards. For example as shown in a user input object may be an icon selector .

A first set of characteristics of the user interface object is controlled in accordance with the application program . The first set of characteristics include appearance of the user interface object and user interactions with the application program via the user interface object . In other words the application determines the visual appearance of the user interface object and how a user interacts with the user interface object. For example as shown in an icon selector may be represented as a box with a plurality of icons. In this example as shown in when a user selects an icon the icon is displayed in field . In some embodiments the first set of characteristics are defined in the application program. The some embodiments application program is a user created application and the user interface object is a custom user interface object .

A second set of characteristics of the user interface object different from the first set of characteristics is controlled in accordance with the control program. The second set of characteristics include display state of the user interface object . In some embodiments the control of the display state comprises updating the display state of the user interface object as if the user interface object were a standard on screen user interface control associated with the electronic device . In other words the control program controls the display behavior of the user interface object of the application program. In some embodiments the standard on screen interface control is an on screen keyboard . In some embodiments the control program is the control module . In some embodiments the control module issues display instructions to the application program for application program to use when displaying the user interface object. In some embodiments the control module issues display instruction to the application program by way of the event handling system .

In some embodiments updating the display state comprises displaying and hiding the user interface object in accordance with user interaction with the electronic device . In some embodiments the user interaction is a user selection of an icon. For example as shown in the user interface object may be hidden in response to user selection of an icon. In some embodiments the user interaction is user selection of an area of the display that does not include the user interface object. In some embodiments the interaction includes jiggling or smacking the device .

Updating of the display state includes one or more of determining position of the user interface object on the display rotating the user interface object on the display in response to a rotation indication and hiding the user interface object in response to a hiding indication . In some embodiments the rotation indication comprises the user physical rotating the electronic device . For example the electronic device may be rotated from a portrait to landscape orientation or vice versa. When the electronic device is rotated the interface object is displayed in accordance with the orientation of the electronic device. For example as shown in the device is in a portrait orientation and the user interface object is also shown in a portrait orientation. As shown in the device is in a landscape orientation and the user interface object is also shown in a landscape portrait orientation.

In some embodiments hiding indication comprises the user interaction with a region of the display not associated with the application program . In some embodiments the rotation indication and the hiding indication are processed by the control program as if the user interface object were a standard on screen user interface control associated with the electronic device .

In some embodiments the user interface object is associated with an accessory view . The accessory view is associated with an input field and displays a plurality of interface object associated with the input field . An accessory view allows a programmer to associate multiple user interface objects with an icon or input field. In some embodiments an accessory view is displayed when a user selects an icon or input field. The accessory view as shown in display icons e.g. or or representations of user interfaces that a user can select from. In some embodiments the user interfaces associated with an accessory view are displayed in accordance with the display behavior of a standard interface object. In other words the control program controls the display behavior of the user interface selected from an accessory view.

The steps in the information processing methods described above may be implemented by running one or more functional modules in information processing apparatus such as general purpose processors or application specific chips. These modules combinations of these modules and or their combination with general hardware e.g. as described above with respect to B and are all included within the scope of protection of the invention.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

