---

title: Field extensibility for analytical reports
abstract: A system may include reception of an instruction to add an extension field to a node of a business object object model, identification of at least one multi-dimensional analytical view object model including a reference field referring to the node of the business object object model, determination of at least one report associated with the determined at least one multi-dimensional analytical view object model, reception of a selection of one of the at least one report, extension of the one of the at least one multi-dimensional analytical view object model associated with the report based on the extension field, and extension of the selected report based on the extension field.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08886646&OS=08886646&RS=08886646
owner: SAP SE
number: 08886646
owner_city: Walldorf
owner_country: DE
publication_date: 20101230
---
Some embodiments relate to business objects within a business process platform. More specifically some embodiments relate to the use of extension fields within consuming business entities of a business process platform.

An application platform may implement metadata models to support different business solutions. Metadata models may include generic models of a business object a floorplan i.e. a user interface layout user interface text a process component and a message type among others. A business object for example is a software model representing real world items used during the transaction of business. An instance of a business object metadata model may comprise a SalesOrder object model or an Organization object model. Instances of these object models in turn represent specific data e.g. SalesOrder 4711 ACME corporation .

An instance of a business object metadata model e.g. a SalesOrder object model or more generically a business object object model may specify business logic and or data having any suitable structure. The structure may be determined based on the requirements of a business scenario in which the instance is to be deployed. A business application for a particular business scenario may require many business object object models where the structure of each has been determined based on the requirements of the particular business scenario.

The data stored by an application platform is typically accessed according to one of two primary modalities. The first which may be referred to as an operational modality involves accessing and modifying the data during the day to day course of business. The operational modality may include for example reviewing and updating inventory inputting sales figures issuing paychecks based on salary and attendance data etc.

An analytical modality on the other hand generally consists of strategic analysis of business data. Activities of the analytical modality may include comparison of profit margins by location product and or year sales by brand etc. Of course some activities may be arguably classified as belonging to either the analytical modality or the operational modality.

A software solution may provide data queries user interfaces and reports for presenting the data underlying business object object models. These queries interfaces and reports are developed by the solution provider based on knowledge of the structure and semantics of the business object object models. Customers and partners may customize or develop similar queries interfaces and reports based also on the business object object models.

A customer deploying such a software solution might use pre defined user interfaces to interact with the business objects. Often however a customer will want to customize these user interfaces based on the business needs of the customer. For example a customer may wish to change a user interface associated with a SALES ORDER business object by adding a Sub Product Identifier field next to an existing Product Identifier field.

In order to maintain internal consistency of the software solution this change requires modification of the user interface and of the SALES ORDER business object. In particular the SALES ORDER business object is modified to include the extension field Sub Product Identifier . Commonly assigned co pending U.S. patent application Ser. No. 12 339 328 entitled UI Driven Binding Of Extension Fields To Business Objects describes systems for facilitating the above described change. The contents of U.S. patent application Ser. No. 12 339 328 are incorporated herein by reference for all purposes.

Although extension fields may be available for consumption by user interfaces print forms and service interfaces within the software solution conventional systems do not facilitate usage of extension fields within analytical reports. Improved systems for utilizing extension fields within analytical reports are desired.

All systems and processes discussed herein may be embodied in program code stored on one or more computer readable media. Such media may include for example a floppy disk a CD ROM a DVD ROM a Zip disk magnetic tape and solid state Random Access Memory RAM or Read Only Memory ROM storage units. Embodiments are therefore not limited to any specific combination of hardware and software.

System includes business service provider backend for providing business services to consumers not shown of system . For example business service provider backend might store customer information into and retrieve customer information from physical tables of data store . Data store may comprise a relational database a multi dimensional database an eXtendable Markup Language XML document or any other structured data storage system. The physical tables may be distributed among several relational databases dimensional databases and or other data sources. To provide economies of scale data store may include data of more than one customer. Business service provider backend includes mechanisms to ensure that a client accesses only the data that the client is authorized to access. Moreover the data of data store may be indexed and or selectively replicated in an index to allow fast retrieval thereof.

The structures of and relationships between the physical database tables may be complex and business object object models referred to henceforth as business objects may be used to shield developers and end users from these complexities. A business object may comprise for example a software model including nodes to encapsulate related data and methods. As described above a business object may be associated with a business entity such as a customer partner sales order product store time etc. represented in the data of a data source. Each instance of a business object may represent a particular instance of the entity represented by the business object. An instance of a SALES ORDER business object may for example provide a mapping to the underlying tables storing data associated with a particular sales order.

Repository includes metadata of various metadata models. These metadata models include metaobjects and instances of the metaobjects referred to herein as object models or objects. The metaobjects and object models are defined by metadata of repository .

As mentioned above the metaobjects may include generic models of a BI view a floorplan a business object a user interface text a process component and a message type but embodiments are not limited thereto. The metaobjects and object models may be embodied in any type of data structure including but not limited to eXtensible Markup Language files. As in the conventional storage of object instance data the metadata defining the specific metaobjects and object models may be stored in database tables and or any other suitable format.

Each metaobject may comprise an instance of a same meta metadata model or meta metaobject . The meta metaobject may consist of nodes composite associations associations elements structure and attribute properties. Development of specific business object metaobjects specific floorplan metaobjects etc. may therefore proceed using the same development technologies. Moreover access and lifecycle issues of the various specific metaobjects may be managed using similar or identical mechanisms.

Business object is an object model or class. The metadata of business object therefore provides information regarding the structure and attributes of the data of instances of business object . Accordingly backend uses the metadata to access corresponding data of data store . Business object may include reference fields and or extension fields as will be described below. Therefore an extension field that is modeled within the metadata of repository allows backend to store and retrieve data associated with the extension field.

Analysis services include any business services that are or become known. Examples include application programming interfaces APIs to access transient metadata master data transactional data and hierarchies. Analysis user interfaces UIs may access business service provider backend via analysis services . Analysis UIs may include for example dashboards spreadsheet applications proprietary portals etc.

Repository also includes metadata of one or more multi dimensional analytical view object models MDAVs which themselves are instances of an MDAV metadata model such as described in commonly assigned co pending U.S. application Ser. No. 12 847 409 the contents of which are incorporated herein by reference. Generally a multi dimensional analytical view describes a view on a business object. As described in U.S. application Ser. No. 12 847 409 entitled Common Modeling Of Data Access And Provisioning For Search Query Reporting And Or Analytics a query definition object not shown may define a query on a business object and a multi dimensional analytical view may define the results of the query as Key Figures or Characteristics. Moreover the multi dimensional analytical view may define rules which are used to calculate Key Figures and to define restrictions which will be used at runtime to set predefined filter parameters.

Metadata of analytical report may provide analysis UIs with a visual presentation of data underlying MDAV and business object . The ability to associate analytical report with MDAV may facilitate the incorporation of semantically rich information within analytical report . For example analytical report may simply refer to Key Figures which are calculated according to MDAV without having to define a query for particular data of business object or a calculation of the Key Figures based on that data.

According to some embodiments an MDAV may be associated with more than one business object and a business object may be associated with more than one MDAV. In some embodiments an MDAV may be associated with more than one analytical report.

MDAV includes reference field which is associated with node of business object . More particularly the properties of reference field indicate a path to node of business object . According to some implementations reference field of MDAV is a release stable anchor to node . For example a provider of MDAV might promise to not change reference field in future software updates. Clients and or partners might then confidently use reference field and its association with node to design extensions analytical reports or other entities consuming MDAV .

Business object also includes reference field according to some embodiments. Reference field may also comprise a release stable anchor which allows the creation of extension fields based thereon. Systems to create business object extension fields based on business object reference fields are described in commonly assigned co pending U.S. application Ser. No. 12 847 311 entitled Stable Anchors In User Interface To Support Life Cycle Extensions .

As will be described in detail below some embodiments may operate to extend a report e.g. analytical report based on an extension to a node of a business object underlying the report. Such extension may include determining a multi dimensional analytical view object model including a reference field referring to the node of the business object determining a report associated with the determined multi dimensional analytical view object model extending the multi dimensional analytical view object model associated with the report based on the extension field and extending the selected report based on the extension field.

Prior to process a developer of a business service provider may define reference fields for various consuming business entities. A reference field definition may point to a specific portion of a consuming business entity e.g. a location on a user interface and to a field in the data model of the user interface i.e. as representing the path down to a corresponding persistent business object node . The definition may also indicate the underlying business object.

At S a consuming business entity is presented to a user. The consuming business entity includes a reference field which in turn is associated with a node of the business object. For example the consuming business entity may comprise a user interface including reference field of business object node .

Embodiments may be used in conjunction with any user interface associated with any one or more business objects. Moreover the consuming business entity may comprise a user interface a form a report a message a service interface etc. The consuming business entity may be presented to the user at S in any suitable manner.

Next at S an instruction to add an extension field to the consuming business entity is received from the user. The extension field is to be added based on a reference field of the consuming business entity i.e. of the business object . As one example of S illustrates user interface and context menu . Context menu is presented in response to right clicking on the Country field of user interface . Context menu provides several options one of which is Add Extension Field . Selection of the Add Extension Field option results in reception of the instruction at S. In some embodiments of S the system automatically determines and proposes a reference field by evaluating the existing fields displayed on the screen.

Continuing with the present example dialog of may be presented to a user upon selection of the Add Extension Field option at S. Dialog includes input fields for specifying a Business Context of the extension field a Field Type e.g. string currency date etc. a Default Value a Field Label a Tooltip and a Reference Field. The user has input Sales Order as the Business Context Text as the Field Type Region as the extension field name and Region as the Tooltip. According to the example the Reference Field input field is pre populated with Country because the Country field was right clicked at S. The Reference Field input field may initially be blank or populated with a name of a different default field. The reference field need not be displayed in user interface . Such a situation may occur in a case that the reference field was proposed by the system.

Further attributes of the extension field may also be derived from the reference field. In some embodiments the properties of the extension field are identical to the properties of the reference field. Alternatively the properties of the reference field may be derived based on the properties of one or more other fields selected from user interface . Any property may be dependent on field values e.g. mandatory only in U.S. .

The extension field may be added to the business object at S upon selection of Save icon . According to some embodiments the metadata of the business object is changed to reflect the extension. In some implementations such as those described in commonly assigned co pending U.S. application Ser. No. 12 829 617 entitled Extensibility of Metaobjects the extension field is created by generating metadata of a new extension business object which is merged with the extended business object at runtime.

Also shown in pane is Further Usage link . A user may select Further Usage link to identify other consuming business entities to which the highlighted extension field may be added. Flow proceeds from S to S upon user selection of Further Usage link .

At least one MDAV object model is identified at S. Each of the identified MDAV object models includes a reference field which refers to the node of the business object to which the extension field was added. With reference to it is assumed that an extension field was added to node of business object based on reference field . Accordingly since MDAV includes reference field which refers to node of business object MDAV is identified at S. It should be noted that repository may include metadata of other MDAVs which also include reference fields referring to node . These MDAVs are also identified at S according to some embodiments.

Some MDAVs may be technically unsuitable for extension. Such MDAVs might not be identified at S even if they include a reference field which refers to the node of the business object to which the extension field was added. According to some embodiments S also includes determining which of the identified MDAVs are technically extendable and using only those MDAVs in subsequent execution of process . Similarly S may include determining which of the identified MDAVs are public i.e. open to partner and customer developers and using only those MDAVs in subsequent execution of process .

At S and also in response to selection of Further Usage link at least one report associated with at least one of the identified MDAVs is determined. According to some embodiments an analytical report is associated with an MDAV. More than one analytical report may be associated with a single MDAV. The MDAV with which a report is associated may be a union of several MDAVs. In some embodiments it is determined at S that no reports are associated with the at least one of the identified MDAVs.

The determined reports are presented to the user at S. shows user interface as presented to a user at S according to some embodiments. User interface indicates the extension field i.e. Region and its Business Context i.e. Sales Order .

Also shown are column listing data sources i.e. the MDAVs identified at S and column listing reports i.e. the reports determined at S . Column allows the user to select data sources and reports to be extended based on the extension field. Selection of a report to be extended automatically consists of selecting its associated data source. The user selects Add Field icon to transmit the selections.

The selections are received at S and consist of at least one report associated with at least one of the identified MDAVs. The MDAV associated with each selected report is extended at S. Finally the selected report or reports is extended at S.

If no reports are determined at S S may comprise presenting only indications of the at least one of identified MDAVs and S may comprise selection of at least one of the MDAVs for extension. The user may then create a report in the future based on the extended MDAV.

One or more of the extensions illustrated in may be implemented by a separate extension metadata object defining the extension field and merged with the original object at runtime. Such a feature may permit the delivery of updates and changes to any of the underlying objects without overwriting or disrupting any previously created extensions. Of course the updates and changes should not disturb the reference fields on which the extensions are based.

Turning to it is assumed that an extension field has been added to a business object node as described with respect to S of process . Several MDAVs of are marked H or UI to indicate that each of these MDAVs includes a reference field referring to the extended node. The MDAVs marked H are technical and will therefore be hidden from presentation to the user at S while the MDAVs marked UI and reports based on those MDAVs will be presented as shown in .

It will be assumed that the user selects report for extending at S. As described above all FSI views and MDAVs lying between the selected report and the extended business object node are then extended at S and S. illustrates extension of FSI views MDAVs and union MDAVs lying between report and the extended business object node as well as extension of report .

Apparatus includes processor operatively coupled to communication device data storage device one or more input devices one or more output devices and memory . Communication device may facilitate communication with external devices such as an external design tool. Input device s may comprise for example a keyboard a keypad a mouse or other pointing device a microphone knob or a switch an infra red IR port a docking station and or a touch screen. Input device s may be used for example to enter information into apparatus . Output device s may comprise for example a display e.g. a display screen a speaker and or a printer.

Data storage device may comprise any appropriate persistent storage device including combinations of magnetic storage devices e.g. magnetic tape hard disk drives and flash memory optical storage devices Read Only Memory ROM devices etc. while memory may comprise Random Access Memory RAM .

Program code of data storage device may be executable by processor to provide functions described herein including but not limited to process . Embodiments are not limited to execution of these functions by a single apparatus. Metadata may include metadata of metaobjects and objects as described herein including extension object metadata. Data storage device may also store data and other program code for providing additional functionality and or which are necessary for operation thereof such as device drivers operating system files etc.

The embodiments described herein are solely for the purpose of illustration. Those in the art will recognize other embodiments may be practiced with modifications and alterations limited only by the claims.

