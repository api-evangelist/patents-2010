---

title: Systems and methods for restoring web parts in content management systems
abstract: A computer-implemented method for restoring web parts in content management systems may include identifying a backup of a content management system. The computer-implemented method may also include identifying an instruction to restore at least one web part of the content management system. The computer-implemented method may further include retrieving the web part. The computer-implemented method may additionally include identifying at least one object referenced by the web part. The computer-implemented method may also include recreating the object within the content management system. The computer-implemented method may additionally include updating the web part to reference the recreated object. The computer-implemented method may also include restoring the web part to the content management system. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08726147&OS=08726147&RS=08726147
owner: Symantec Corporation
number: 08726147
owner_city: Mountain View
owner_country: US
publication_date: 20100312
---
In the digital age organizations must manage increasingly large volumes of data. Content management systems may help members of an organization to access shared organizational data. By providing each member with a customized view of the organization s data content management systems may provide flexible and user centric portals to the data relevant to that member.

Some content management systems may maintain a site or page for each user of the system. A site may include one or more components such as web parts which may refer to objects that draw on common data e.g. employee records calendar data etc. to display to a user. In some cases a user may wish to restore a site from a backup of a content management system. However restoring a web part of a site may require restoring objects to which the web part refers and an object restored within a content management system may have a new identification to which the web part must refer.

Traditional backup systems may perform granular backups on a content management system retrieving information about web parts via an Application Programming Interface API of the content management system and backing up that information along with metadata describing the relationships between web parts and the objects to which the web parts refer. Unfortunately this may result in increased backup time and resource consumption. Accordingly the instant disclosure identifies and addresses a need for restoring web parts in content management systems e.g. from a monolithic backup .

As will be described in greater detail below the instant disclosure generally relates to systems and methods for restoring web parts in content management systems. Embodiments of the instant disclosure may restore web parts in content management systems by retrieving a web part to be restored identifying at least one object to which the web part refers recreating the object in the content management system and then updating the web part to refer to the recreated object. For example a method may include identifying a backup of a content management system identifying an instruction to restore at least one web part of the content management system retrieving the web part identifying at least one object referenced by the web part recreating the object within the content management system updating the web part to reference the recreated object and then restoring the web part to the content management system.

Identifying the instruction to restore at least one web part of the content management system may happen in a variety of contexts. For example a user may select to restore a site of the content management system that includes the web part. Accordingly identifying the instruction to restore the web part may entail identifying an instruction to restore a site of the content management system. In some examples retrieving the web part may entail retrieving at least one web part included in the site. Retrieving the web part may include caching the web part.

Updating the web part to reference the recreated object may include looking up an identifier of the recreated object. In some examples looking up the identifier of the recreated object may include identifying a unique attribute of the object and searching for an object in the content management system with the unique attribute. The unique attribute may include any suitable attribute such as a uniform resource locator.

Restoring the web part to the content management system may include creating the web part in the content management system. Additionally or alternatively restoring the web part to the content management system may include modifying a pre generated web part in the content management system.

In some examples a system for restoring web parts in content management systems may include an identification module a retrieval module a recreation module an updating module a restoration module and at least one processor. The identification module may be programmed to identify a backup of a content management system and to identify an instruction to restore at least one web part of the content management system. The retrieval module may be programmed to retrieve the web part. The recreation module may be programmed to identify at least one object referenced by the web part and to recreate the object within the content management system. The updating module may be programmed to update the web part to reference the recreated object. The restoration module may be programmed to restore the web part to the content management system.

The identification module may be programmed to identify the instruction to restore at least one web part of the content management system in a variety of contexts. For example a user may select to restore a site of the content management system that includes the web part. Accordingly the identification module may identify the instruction to restore the web part in the course of identifying an instruction to restore a site of the content management system. In some examples the retrieval module may be programmed to retrieve the web part as part of retrieving at least one web part included in the site. The retrieval module may be programmed to cache the web part as part of retrieving the web part.

The updating module may be programmed to update the web part to reference the recreated object by looking up an identifier of the recreated object. In some examples the updating module may be programmed to look up the identifier of the recreated object by identifying a unique attribute of the object and searching for an object in the content management system with the unique attribute. The unique attribute may include any suitable attribute such as a uniform resource locator.

The restoration module may be programmed to restore the web part to the content management system by creating the web part in the content management system. Additionally or alternatively the restoration module may be programmed to restore the web part to the content management system by modifying a pre generated web part in the content management system.

In some embodiments a computer readable storage medium may include one or more computer executable instructions that when executed by at least one processor of a computing device may cause the computing device to identify a backup of a content management system identify an instruction to restore at least one web part of the content management system retrieve the web part identify at least one object referenced by the web part recreate the object within the content management system update the web part to reference the recreated object and then restore the web part to the content management system.

In some examples the computer executable instructions may cause the computing device to identify the instruction to restore the web part of the content management system as part of identifying an instruction to restore a site of the content management system.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

As will be described in greater detail below the instant disclosure generally relates to systems and methods for restoring web parts in content management systems. Systems and methods described herein may restore a web part to a content management system e.g. as part of restoring a site to a content management system by retrieving a web part from a backup of the content management system and identifying objects to which the web part refers. Systems and methods described herein may also recreate the objects within the content management system and remap the web part to refer to the recreated objects. Systems and methods described herein may additionally restore the web part to the content management system. By updating a web part e.g. after retrieving and caching the web part to refer to recreated versions of the objects on which it depends systems and methods described herein may restore a web part from a monolithic backup e.g. a backup of a database of the content management system preserving the characteristics of the web part without requiring multiple passes when backing up or restoring the web part.

The following will provide with reference to and detailed descriptions of exemplary systems for restoring web parts in content management systems. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

In addition and as will be described in greater detail below exemplary system may include a restoration module programmed to restore the web part to the content management system. Although illustrated as separate elements one or more of modules in may represent portions of a single module or application.

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. computing system and or server computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

Exemplary system in may be deployed in a variety of ways. For example all or a portion of exemplary system may represent portions of a cloud computing or network based environment such as exemplary system illustrated in . Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

As shown in system may include a computing system in communication with a server via a network . In one embodiment and as will be described in greater detail below computing system may include identification module retrieval module recreation module updating module and restoration module .

Identification module may identify a backup of a content management system. For example identification module may identify a backup of a content management system . Identification module may also identify an instruction to restore at least one web part of the content management system. For example identification module may identify an instruction to restore a web part .

Retrieval module may retrieve the web part. For example retrieval module may retrieve web part e.g. from server to computing system . Recreation module may identify at least one object referenced by the web part. For example recreation module may identify an object referenced by web part . Recreation module may also recreate the object within the content management system. For example recreation module may recreate object within content management system .

Updating module may update the web part to reference the recreated object. For example updating module may update web part to reference object as recreated in content management system . Restoration module may restore the web part to the content management system. For example restoration module may restore web part to content management system .

Computing system generally represents any type or form of computing device capable of reading computer executable instructions. Examples of computing system include without limitation laptops desktops servers cellular phones personal digital assistants PDAs multimedia players embedded systems combinations of one or more of the same exemplary computing system in or any other suitable computing device.

Server generally represents any type or form of computing device that is capable of storing backup data. Examples of server include without limitation application servers and database servers configured to provide various database services and or run certain software applications.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a wide area network a local area network a personal area network the Internet power line communications a cellular network e.g. a GSM Network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless or wired connections. In one embodiment network may facilitate communication between computing system and server .

As illustrated in at step one or more of the systems described herein may identify a backup of a content management system. For example at step identification module may as part of computing system identify backup of content management system .

As used herein the term content management system may refer to any system capable of providing one or more views and or interfaces for a collection of data. For example a content management system may provide document checkout services shared contacts formatted views of information from a database collaborative editing services etc. Examples of content management systems may include but are not limited to MICROSOFT SHAREPOINT and IGOOGLE.

Identification module may perform step in any suitable manner. For example identification module may identify the backup by reading a configuration file that identifies the backup. Additionally or alternatively identification module may identify the backup by receiving a message from an application that identifies the backup. In some examples the backup may include a monolithic backup of the content management system. For example the backup may include a backup of a database used by the content management system to store the state and or components of the content management system.

At step one or more of the systems described herein may identify an instruction to restore at least one web part of the content management system. For example at step identification module may as part of computing system identify an instruction to restore web part of content management system .

As used herein the term web part may refer to any module code gadget library and or page used within a content management system to view interface with and or access underlying data. Examples of web parts may include but are not limited to web parts in MICROSOFT SHAREPOINT and or gadgets in IGOOGLE. For example a web part may include a portion of code embedded e.g. directly or by reference in a web page such as an ASPX file . In some examples a page and or site may include multiple web parts.

Identification module may perform step in any suitable context. For example identification module may identify the instruction to restore the web part as part of identifying an instruction to restore a site of the content management system. To extend the example a user may select a site of the content management system to restore from backup. Since the user may have previously configured and or customized the web parts for the site the instruction to restore the site may implicitly include an instruction to restore each web part of the site. In some examples the instruction to restore the site may specify restoring only certain web parts with the site. For example a user may select a site of the content management system to restore but may exclude certain web parts included in the site for the restoration. In this example the web part may include one of the web parts not excluded by the user.

Using as an example this figure illustrates an exemplary system for restoring web parts in content management systems. Backup may include a site which may in turn include web part . Identification module may identify an instruction to restore site to content management system and accordingly identify an instruction to restore web part to content management system .

Returning to at step one or more of the systems described herein may retrieve the web part. For example at step retrieval module may as part of computing system retrieve web part from server . Retrieval module may perform step in any suitable manner. For example retrieval module may parse and or query the backup of the content management system to extract the web part. Additionally or alternatively retrieval module may access the web part from the backup through an appropriate API.

As mentioned earlier identification module may identify an instruction to restore the web part as part of identifying an instruction to restore a site of the content management system. Accordingly retrieval module may retrieve the web part as included in the site. In some examples retrieval module may retrieve all web parts included in the site. Using as an example retrieval module may retrieve site and web part .

In some examples retrieval module may cache the web part upon retrieving the web part. For example retrieval module may retrieve various components of a content management system site such as a primary page of the site web parts included in the site and or other objects included in the site and or referred to by the web parts of the site. Retrieval module may restore some of these components directly to the content management system as they are retrieved. However retrieval module may cache the web part e.g. along with all web parts of the site for future manipulation before restoring the web part to the content management system. Using as an example retrieval module may cache web part in a cache .

Returning to at step one or more of the systems described herein may identify at least one object referenced by the web part. For example at step recreation module may as part of computing system identify object referenced by web part . As an additional example in recreation module may identify object referenced by web part .

As used herein the term object may refer to any component of a content management system which may be referenced by a web part. For example an object may include a list in MICROSOFT SHAREPOINT.

Recreation module may perform step in any suitable manner. For example recreation module may identify the object by parsing the web part. Additionally or alternatively recreation module may identify the object by submitting a query to a database e.g. in the backup of the content management system for objects referenced by the web part.

At step one or more of the systems described herein may recreate the object within the content management system. For example at step recreation module may as part of computing system recreate object within content management system . As an additional example in recreation module may recreate object as a recreated object within content management system .

Recreation module may perform step in any suitable manner. For example recreation module may use an API of the content management system to recreate the object. In some contexts recreation module may recreate the object after the object was retrieved as part of restoring a site that references the web part. Additionally or alternatively recreation module may have recreated the object before identification module identified an instruction to restore a site that references the web part. In this example recreation module may identify the object after recreating the object.

At step one or more of the systems described herein may update the web part to reference the recreated object. For example at step updating module may as part of computing system update web part to reference object as recreated in content management system . As an additional example in updating module may update web part to reference recreated object .

Updating module may perform step in any suitable manner. For example updating module may search the web part for references to the object and replace the references with references to the recreated object.

In some examples updating module may first look up an identifier of the recreated object e.g. in order to update the web part with the identifier of the recreated object . Updating module may look up the identifier of the recreated object in any suitable manner. For example recreation module may have stored the identifier of the recreated object in relation to the web part. Updating module may then look up recreated objects referenced by the web part in a data structure stored by recreation module .

Additionally or alternatively updating module may look up the identifier of the recreated object by identifying a unique attribute of the object e.g. by parsing the object for a field that will uniquely identify the object by identifying metadata of the object that will uniquely identify the object etc. and searching for an object in the content management system with the unique attribute e.g. by querying the content management system for the unique attribute and identifying the recreated object returned in response to the query . In some examples the unique attribute may include a uniform resource locator of the object e.g. the object may include the uniform resource locator as metadata . In some examples updating module may also link fields in the list view in MICROSOFT SHAREPOINT to match the web part.

Using as an example updating module may look up an identifier of recreated object . Updating module may replace identifier e.g. within web part in cache with identifier so that web part may reference recreated object in content management system .

At step one or more of the systems described herein may restore the web part to the content management system. For example at step restoration module may as part of computing system restore web part to content management system . As an additional example in restoration module may restore web part e.g. from cache to content management system .

Restoration module may perform step in a variety of ways. For example restoration module may restore the web part to the content management system by creating the web part in the content management system. For example restoration module may create a new web part in the content management system identical to the web part. In another example restoration module may restore the web part to the content management system by modifying a pre generated web part in the content management system. For example when restoring a site to the content management system the restoration process may result in a template web part e.g. taking the place of the web part . For example in the process of restoring a site a content management system may use a template site with template web parts to create a base site on which to perform the restoration. Restoration module may accordingly modify the template web part to conform to the attributes of the web part.

In some examples restoration module may add a view structure e.g. of MICROSOFT SHAREPOINT for the web part to ensure that the view of the restored web part is the same as it was in the original site. In some additional examples restoration module may apply permission flags to the restored web part as they were at the time of backup. This may ensure that the web part is modifiable.

As mentioned earlier restoring the web part may occur in the context of restoring a site that includes the web part. Systems and methods described herein may accordingly serve for restoring a site of a content management system. For example systems and methods described herein may allow a user to select a site e.g. an ASPX file used by MICROSOFT SHAREPOINT to restore. Systems and methods described herein may then generate a list of web parts needed for the site as well as a list of objects needed for the web parts. Systems and methods described herein may subsequently cache the web parts and restore the site e.g. the ASPX file . Systems and methods described herein may then remap e.g. update the web parts to refer to restored objects on which the web parts depend and finally restore the updated web parts to the content management system. In some examples systems and methods described herein may allow a user to selectively restore web parts during the restoration of a web site.

By updating a web part e.g. after retrieving and caching the web part to refer to recreated versions of the objects on which it depends systems and methods described herein may restore a web part from a monolithic backup e.g. a backup of a database of the content management system preserving the characteristics of the web part without requiring multiple passes when backing up or restoring the web part.

Processor generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein. For example processor may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying retrieving caching recreating updating looking up searching restoring creating and or modifying steps described herein. Processor may also perform and or be a means for performing any other steps methods or processes described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation random access memory RAM read only memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an input output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an ISA PCI PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure . In certain embodiments memory controller may perform and or be a means for performing either alone or in combination with other elements one or more of the steps or features described and or illustrated herein such as identifying retrieving caching recreating updating looking up searching restoring creating and or modifying.

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface . I O controller may be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the identifying retrieving caching recreating updating looking up searching restoring creating and or modifying steps described herein. I O controller may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation SCSI host adapters USB host adapters IEEE 1394 host adapters SATA and eSATA host adapters ATA and PATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments communication interface may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying retrieving caching recreating updating looking up searching restoring creating and or modifying steps disclosed herein. Communication interface may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device. In at least one embodiment input device may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying retrieving caching recreating updating looking up searching restoring creating and or modifying steps disclosed herein. Input device may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

In certain embodiments storage devices and may be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the identifying retrieving caching recreating updating looking up searching restoring creating and or modifying steps disclosed herein. Storage devices and may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and physical media such as magnetic storage media e.g. hard disk drives and floppy disks optical storage media e.g. CD or DVD ROMs electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an application specific integrated circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a wide area network WAN a local area network LAN a personal area network PAN or the Internet.

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent network attached storage NAS devices configured to communicate with servers and using various protocols such as NFS SMB or CIFS.

Servers and may also be connected to a storage area network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network . Accordingly network architecture may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying retrieving caching recreating updating looking up searching restoring creating and or modifying steps disclosed herein. Network architecture may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for restoring web parts in content management systems.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules described herein may transform a computing system into a system for restoring web parts in a content management system.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms a or an as used in the specification and claims are to be construed as meaning at least one of. In addition for ease of use the words including and having as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

