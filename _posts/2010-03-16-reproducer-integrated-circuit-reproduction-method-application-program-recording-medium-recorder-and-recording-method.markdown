---

title: Reproducer, integrated circuit, reproduction method, application program, recording medium, recorder, and recording method
abstract: Provided is a playback device which is capable of correctly determining a construction status of a virtual package. An access is attempted to a state signaling file recorded in a local storage using a fixed address on a virtual file system assigned by merge management information (step S). The virtual package construction status is determined according to failure or success of the attempted access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08582958&OS=08582958&RS=08582958
owner: Panasonic Corporation
number: 08582958
owner_city: Osaka
owner_country: JP
publication_date: 20100316
---
The present invention relates to virtual file system techniques for utilizing a content stored on a recording medium such as a BD ROM in combination with a content downloaded via a network.

BD Blu ray technologies use a virtual file system VFS whereby a file acquired from a network and the like is stored in a local storage which is a different storage medium than a recording medium referred to below as the ROM disc such as a BD ROM disc a BD R and a BD RE and treated in a way as if it were recorded on the ROM disc.

In such a virtual file system by mapping on the ROM disc one or more files stored in the local storage files stored on the ROM disc and the files stored in the local storage are handled as data stored in a single virtual disc. The mapping makes use of a merge management information file which is a correspondence table between file paths in the virtual file system and file paths in the local storage. The single virtual disc recognized through the virtual file system is called a virtual package .

As one of conventional techniques regarding the virtual file system Patent Literature 1 is known for example.

It is often the case that a removable medium such as an SD memory card is employed as a local storage. When the removable medium is employed as a target local storage of constructing a virtual package once the local storage is connected or disconnected the virtual package needs to be reconstructed in the virtual file system. However reconstructing the virtual package during playback of image data and execution of an application program which are refererred to below as title playback involves a risk of destabilizing a condition of the device by for example changing a file structure of a file being currently accessed. It is therefore ensured in the virtual file system that the virtual package is constructed in a switching period after an interruption of the title playback and before a playback start of the next title. This brings about a situation i.e. prepared state where a file stored in the local storage cannot be read as the virtual package although the local storage is connected to the playback device.

However it should be noted that in a case also where the local storage is reconnected after a BD J application stored on a ROM disc has been executed the BD J application is able to directly access the file using a file path in the local storage. Accordingly in such a case the BD J application might not be able to correctly determine whether the virtual package is in the prepared state or a valid state resulting in a trouble.

For example as shown in suppose a situation where processing is performed to display a bonus selection menu in an application that acquires a bonus game file from a network or the like and adds the acquired file as the virtual package.

Firstly at a time point t in the local storage is connected to a playback device. Then in conjunction with the playback start of a title stored on the ROM disc at a time point t a BD J application associated with the title is executed. This BD J application has functions of detecting whether the bonus game file has been stored using the file path in the local storage and when the bonus game file has not been stored downloading the bonus game file and requesting for construction of the virtual package using the downloaded file. At the time point t the bonus game file is not stored in the local storage and the virtual file system is not constructed. Accordingly the BD J application tentatively displays a menu which does not contain a Game button for calling the bonus game as an option on the bonus selection menu. Subsequently the BD J application downloads the bonus game file from the network and the like and stores the downloaded file to the local storage. Then at a time point t the BD J application requests a virtual file control unit of the playback device to construct the virtual package. The virtual file control unit serves to control the virtual file system. In response to the request the virtual file control unit has completed creating the virtual package at a time point t when the title playback is started again. From the time period t since the construction of the virtual package has been completed a menu which contains the Game button for calling the bonus game is displayed.

Thus the virtual package has been constructed using the above procedures. From there when the local storage is removed from the playback device at a time point t the title being played back is force quit. With the force quit of the title playback the BD J application is also force quit and the construction of the virtual package is cancelled. Subsequently at a time point t once the title playback is started again with the local storage still removed from the playback device the BD J application associated with the title being played back is executed again. Here the BD J application is executed while the construction of the virtual package has not been completed. In this situation when the previously disconnected local storage is reconnected to the playback device at a time point t the BD J application can still access the previously downloaded file merely by directly designating the file path in the local storage even though the virtual package is not constructed. This causes the BD J application to incorrectly determine that the bonus game file has been downloaded and that the virtual package has been constructed. As a result the BD J application inadvertently displays a menu which contains the Game button for calling the bonus game in accordance with the incorrect determination.

However in fact even when the local storage is reconnected the virtual file control unit does not reconstruct the virtual package until a time point t when the title being played back is stopped and the playback is switched to the next title. Accordingly at the time point t the virtual package is in the prepared state and therefore any file stored in the local storage cannot be accessed as the virtual package and the bonus game cannot be executed. That is to say from the time point t to the time point t inconsistency is created between the menu being displayed and in execution of the bonus game even when the user selects the Game button on the displayed menu. If such an inconsistent situation often occurs where the user is not be able to actually execute a part of functions presented as executable to the user there is a risk that the user raises questions about a quality of the playback device whose operations are under control of such an application.

In view of the above problems an objective of the present invention is to provide a playback device an integrated circuit a playback method and an application program as well as a recording medium a recording device and a recording method for recording such an application program all of which allow correct determination about whether the virtual package constructed by a file stored on the ROM disc and a file stored in the local storage is in the prepared state or in the valid state.

In order to achieve the above objective one aspect of the present invention provides a playback device comprising a read unit operable to read an application program from a read only recording medium a program execution unit operable to execute the application program read by the read unit a connection unit to which a local storage is removably connected and a virtual file control unit operable to construct a virtual package by combining a file structure of the local storage with a file structure of the read only recording medium wherein the local storage stores therein a state signaling file a file path of the state signaling file on the virtual package does not correspond to any file recorded on the read only recording medium and the program execution unit determines while the local storage is connected whether the virtual package is in a prepared state or in a valid state by attempting to access the state signaling file via the virtual package.

The playback device of the present invention attempts to access the state signaling file stored in the local storage using the file path on the virtual package which does not correspond to any file on the read only recording medium. Accordingly the playback device is able to correctly determine a construction state of the virtual package even in the situation where simply the local storage is connected to the playback device while the virtual package has not been constructed.

This prevents malfunction of the application program in a period conventionally accompanied by the incorrect determination such as the period after the reconnection of the local storage during execution of the application program and before the stop of the application program.

The following describes a recording medium and a playback device pertaining to preferred embodiments of the present invention with reference to the drawings.

The BD ROM is a read only Blu ray disc BD i.e. a BD ROM disc. The BD ROM can be a different portable recording medium such as a BD R and a BD RE.

The playback device is mounted with a BD ROM drive which is an optical disc drive conforming to the BD ROM format. The playback device also includes an connection unit to which the removable medium is connectable. The removable medium can be an SD memory card Memory Stick Compact Flash Smart Media or Multimedia Card and a removable hard disk drive.

The television provides an interactive operation environment to a user by displaying a playback image of a movie work a menu and the like.

The remote control is an accessory of the playback device . The remote control receives a user operation to the playback device and transmits a command signal in accordance with the received user operation. This concludes the description of a usage pattern of the recording medium and the playback device according to the present invention.

Next a description is given of details of the BD ROM which is the recording medium according to the present invention.

The second part of the figure indicates a logical address space managed by a file system. The logical address space stores data starting from file system volume information followed by application data such as video data. The file system is a mechanism for representing data on a disc in units called directories or files and is UDF Universal Disc Format in the BD ROM . In an ordinary PC Personal Computer for daily use also data recorded on a hard disk with use of a directory file structure may be displayed on the PC through a file system called FAT or NTFS with usability improved. The file system makes it possible to read the logical data stored with use of the directory file structure like the ordinary PC does.

The first part of the figure indicates an application format of the BD ROM based on the file system. In the present embodiment the directory and file structure of the BD ROM is as follows. Immediately under a root directory ROOT a BDMV directory a CERTIFICATE directory an AACS directory and the like are located. In the BDMV directory data such as AV contents and management information handled on the BD ROM are recorded. The following mainly describes the BDMV directory.

Under the BDMV directory are an index file index.bdmv a movie object file MovieObject.bdmv a PLAYLIST directory a CLIPINF directory a STREAM directory a BDJO directory a JAR directory an AUXDATA directory a META directory and a BACKUP directory. The index file includes an index table defining a title. The movie object file defines a dynamic scenario. An AV clip 00001.m2ts storing multiplexed AV contents such as video and audio a clip information file 00001.clpi storing management information of the AV clip a playlist file 00001.mpls defining a logical playback path of the AV clip a BD J object file 00001.bdjo defining a JAR file to be executed and a method for the execution and a JAR file 00001.jar storing a BD J application are located under the STREAM directory the CLIPINF directory the PLAYLIST directory the BDJO directory and the JAR directory mentioned above respectively.

Firstly the index file Index. Bdmv is described. The index file is management information regarding the entire recording medium. After the recording medium is inserted into the playback device the playback device reads the index table file first thereby uniquely recognizing the disc. The index file further stores the index table indicating title numbers of a plurality of titles playable on the BD ROM in one to one correspondence with program files defining the titles in other words BD J objects or movie objects.

As shown in the index table defines correspondence between each title constituting a title structure of the BD ROM and an operation mode object defining an operation mode. The title structure is explained as follows. When the BD ROM is inserted playback of a title first play title is started which is accompanied by a warning display and a logo display from a content provider to the viewer. Once the first play title ends normal titles normal titles identified by serial numbers 1 2 and 3 constituting a main feature of the movie work is played back. After completion of the playback of the main feature a title for receiving a title selection top menu title is played back to wait for a user selection for a normal title. The top menu title is also played back when the user executes a command such as TOP MENU by operating the remote control. A relation between the movie work and the titles is a relation between the movie work and a plurality of versions of the movie work. That is to say in the movie work with only a single version a relation movie work title is satisfied. Each title of the BD ROM is one of the first play title the normal title and the menu title as mentioned above and is allocated with the operation mode object for defining the operation mode. This defines in details the operation mode by which each title is to be operated. The index table does not directly describe the relation between each title and the corresponding video stream but describes a relation between each title and the corresponding operation mode object through which the video stream is played back. This helps define a title which only causes an operation mode object to operate without AV playback.

As shown in the movie object file MovieObject. Bdmv defines one or more movie objects. Each movie object is identified by a movie object ID. The movie object is a program file that defines a control procedure to be performed by the playback device in the operation mode HDMV mode controlled by the command interpreter. The movie object includes one or more navigation commands such as a command to play back a playlist and a command to transition to another movie object or another title. The playback device sequentially executes a sequence of the navigation commands. For example when PlayPL N is described the playback device selects a file name of the corresponding playlist from among the PLAYLIST directory and plays back the selected playlist. For example when JumpObject N is described the playback device selects the corresponding movie object from among the movie object file and executes the selected movie object.

The BD J object file is a file with an extension bdjo xxxxx.bdjo where xxxxx is variable and the extension bdjo is fixed . The BD J object file stores a BD J object which defines a control procedure to be performed by the playback device in a BD J mode. The BD J object includes an application management table ApplicationManagementTable and is data for causing a platform to perform application signaling accompanied by title switching during playback of the BD ROM. This sort of application whose lifecycle is bound by the application management table is particularly called a BD J application . Specifically applicationManagementTable includes application id indicating a BD J application to be executed and application control code indicating control to be performed upon execution of the BD J application. An initial execution state of the application after a title selection is defined by application control code and it can be defined whether the BD J application is to be automatically started AUTOSTART after loaded in a virtual machine or the BD J application is not to be automatically started PRESENT after loaded in the virtual machine.

The AV clip is a stream file with the extension m2ts xxxxx. m2ts where xxxxx is variable and the extension m2ts is fixed and stores a digital stream in MPEG 2 transport stream format.

As shown in the first part each TS packet is a packet of a fixed length and divided into a four byte TS header and a 184 byte TS payload . The TS header includes information such as a PID for identifying the stream and the TS payload stores data. The above described PES packets are classified and stored in the TS payload. In a case of the BD ROM as shown in the second part each TS packet is provided with a four byte TP Extra Header and converted into a 192 byte source packet to constitute the AV clip. Such information as an ATS Arrival Time Stamp is described in TP Extra Header. The ATS indicates time at which the TS packet is to be transferred to a PID filter. In the AV clip as shown in the third part the source packets are arranged and numbers which increment from the beginning of the AV clip are called SPNs source packet numbers .

In addition to the TS packets of each stream e.g. video audio and graphics streams the AV stream also includes TS packets of a Program Association Table PAT a Program Map Table PMT a Program Clock Reference PCR and the like. The PAT indicates the PID of the PMT used in the AV clip and has its own PID registered as 0. The PMT includes the PIDs for the video the audio and the text subtitle streams included in the AV clip and attribute information of the streams associated with the PIDs. The PMT also includes various types of descriptors relating to the AV clip. The descriptors particularly include copy control information showing whether copying of the AV clip is permitted or not permitted. The PCR includes STC time information associated with the ATS showing when the PCR packet is to be transferred to the decoder in order to synchronize an ATC Arrival Time Clock which serves as a time axis of the ATS with a STC System Time Clock which serves as the time axis of the PTS and the DTS.

The clip information file with the extension clpi xxxxx. Clip where xxxxx is variable and the extension clpi is fixed is a management information piece associated on a one to one basis with the AV clip. As shown in the clip information file includes clip information stream attribute information and an entry map.

The clip information includes a system rate a playback start time and a playback end time as indicated by a leader line eg. In the playback device the TS packets belonging to the AV clip are transferred from a read buffer to a system target decoder. The system rate refers to the upper limit of the transfer rate. The interval between the ATSs of the source packets is set so that the transfer rate is limited to the system rate or lower. The playback start time indicates the PTS located at the beginning of the AV clip e.g. the PTS of the top video frame. The playback end time indicates the value of the STC delayed a predetermined time from the PTS located at the end of the AV clip e.g. the sum of the PTS of the last video frame and the playback time of one frame.

The stream attribute information registers for each PID the attribute information piece of the corresponding stream included in the AV clip as shown by the leader line eg. Each attribute information piece is different for the video stream the audio stream the presentation graphics stream and the interactive graphics stream. The attribute information corresponding to the video stream includes a codec type used for compressing of the video stream as well as a resolution aspect ratio and frame rate for each picture constituting the video stream. On the other hand the attribute information corresponding to the audio stream includes a codec type used for compressing the audio stream as well as the number of channels included in the audio stream a language and a sampling frequency of the audio stream. The playback device uses this attribute information to initialize the decoder prior to playback.

Here a pair of a PTS and the corresponding SPN indicated in one row in the table is called an entry point information piece. Also values starting from the top row as 0 and incremented for each entry point are called entry point IDs referred to below as EP IDs . Use of the entry point information pieces enables the playback device to specify a position of a file in the AV clip corresponding to any point on the time axis of the video stream as shown in . For example at the time of special playback such as fast forwarding and rewinding an I picture registered in an entry point information piece is specified and selected to be played back. This realizes effective processing without a need of analyzing the AV clip. Furthermore the entry point information pieces are created for the respective video streams multiplexed in the AV clip and managed by the PIDs.

Next a description is given of the playlist file with the extension mpls xxxxx. Mpls where xxxxx is variable and the extension mpls is fixed .

The playlist indicates a playback path of the AV clip. As shown in the playlist includes one or more playitems each indicating a playback section along the AV clip. Each playitem is identified by a playitem ID and described in the playlist in the playitems playback order. The playlist also includes marks each indicating a playback start point. The marks can be assigned to a playback section defined by a playitem and can be assigned to any point that can be a playback start point. The marks are used for searching for a playback start position during random access. For example when the playlist file specifies a playback path for a movie title the entry marks are assigned to the top of each chapter. Consequently the playback device can play back the movie title by chapters.

The following describes contents of each playitem with reference to . Each playitem includes a reference AV clip a playback start time a playback end time a connection condition and a stream selection table . The reference AV clip indicates the AV clip in which the playitem s playback section is defined with a name of the corresponding clip information file. Since the playback start time and the playback end time are time information pieces as shown in the lower part of the playback device acquires the SPNs corresponding to the specified playback start time and playback end time by referring to the entry map of the clip information file indicated by the reference AV clip . By doing so the playback device specifies the read start position and performs playback processing. Meanwhile a playback path of the sequence of playitems is defined as a main path here.

The stream selection table lists a plurality of stream entries each composed of a stream selection no. a stream path information piece and a stream identification information piece . The stream selection no. is a number incremented from the top stream entry listed in the stream selection table and used by the playback device to identify the stream. The stream path information piece indicates an AV clip in which the stream indicated by the corresponding stream identification information piece is multiplexed. For example the stream path information piece main path indicates that the stream is multiplexed in an AV clip of the playitem. On the other hand the stream path information piece sub path ID 1 indicates that the stream is multiplexed in an AV clip of the sub playitem corresponding to the playback section of the playitem on the sub path indicated by the sub path ID. The stream identification information piece is information such as the PID and indicates a stream multiplexed in the reference AV clip. Each stream entry also stores the attribute information of the corresponding stream. The attribute information herein refers to information indicating characteristics of the stream and includes a language attribute when the stream is the audio stream the presentation graphics stream or the interactive graphics stream for example.

The playlist may include one or more sub paths as shown in . The sub paths are assigned with IDs in order of the sub paths registration to the playlist. These IDs are used as sub path IDs for identifying the sub paths. Each sub path indicates a playback path sequence which is to be played back in parallel with the main path. There are two types of sub paths. One is a synchronous sub path which is played back in synchronization with playback of the main path and the other is a non synchronous sub path which can be played back without being synchronized with the playback of the main path. These types are described as sub path types of the respective sub paths. Like each playitem each sub playitem includes the reference AV clip the playback start time and the playback end time . When the sub path is of the synchronous type the playback start time and the playback end time of the sub playitem are represented by the same time axis as the main path. On the other hand when the sub path is of the non synchronous type the playback start time and the playback end time are represented by a different time axis than the main path. For example suppose that a stream entry registered in the stream selection table of a playitem stream indicates presentation graphics with the sub path ID 0. In this case the presentation graphics multiplexed in the AV clip of a sub playitem on the sub path with the sub path ID 0 which is to be played back in synchronization with the playback section of the playitem is played back in the playback section of the playitem . Also for example suppose that the stream entry registered in the stream selection table indicates secondary video with the sub path ID 2. In this case the secondary video multiplexed in the AV clip of the sub playitem on the sub path with the sub path ID 2 is played back in the playback section of the playitem .

Next a description is given of the JAR file with the extension jar xxxxx. jar where xxxxx is variable and the extension jar is fixed .

The JAR file stores a BD J application. The BD J application is a Java application operated in a Java platform fully provided with Java 2 Micro Edition J2ME Personal Basis Profile PBP 1.0 and Globally Executable MHP specification GEM1.0.2 for package media targets.

The BD J application is controlled by Application Manager through a xlet interface. The xlet interface has four states i.e. loaded paused active and destroyed states.

The above described Java platform includes a standard Java library for displaying image data of JFIF JPEG PNG and other formats. With this construction the Java application can realize a GUI framework that includes the HAVi framework defined in GEM1.0.2 and also includes a remote control navigation mechanism in GEM1.0.2.

With such a construction the Java application can realize a screen display that includes display of buttons and texts and an online display contents of BBS or the like based on the HAVi framework simultaneously with displaying a moving image on the same screen. In addition the screen display presented by the Java application can be controlled by the remote control.

Such a BD J application is composed of a series of files and these files are converted into a Java archive file which conforms to a specification described on the website http Java.sun.com j2se 1.4.2 docs guide jar jar.html. The Java archive file is in a Java specific zip format file whose contents can be viewed by using commercially available ZIP extraction software.

Note that a description is given later in details on operations of the BD J application and the BD J application has a program to perform the following five operations.

 1 Playing back a playlist through a playback control unit which is described later. The playlist playback herein refers to playback of an AV clip managed by the playlist.

 2 Acquiring an update kit from a WWW server such as the interne and stores the acquired update kit in the local storage.

 3 Instructing a virtual file control unit to construct a virtual file by combining the BD ROM with the update kit.

 5 Transferring to the system target decoder PNG JPEG formatted data for menu and game graphics and displays the decoded data.

The above operations can be flexibly performed according to a configuration of the program and a method for controlling the operations is determined according to a BD J application programming process in an authoring process.

This concludes the data structure of the BD ROM which is the recording medium according to the present invention.

Next a description is given of the playback device and a playback method according to the present invention.

The BD ROM drive reads out data from a BD ROM disc based on a request from the virtual file control unit . An AV clip read out from the BD ROM disc is transferred to the read buffer . From the BD ROM disc not only an AV clip but also an index file a movie object file a playlist file a clip information file a BD J object file and a JAR file are read out. These files are transferred to the virtual file control unit .

The read buffer is a buffer composed of for example a memory for temporarily storing data read by the BD ROM drive.

The local storage includes a built in media drive for accessing a hard risk and a removable media drive for accessing a semiconductor memory card such as the SD memory card. The local storage stores therein an update kit downloaded from an external I F such as the network module data to be used by applications and the like. An area for storing the update kits is divided into small areas that are in one to one correspondence with BD ROMs. Also an area for storing data used by applications is divided into small areas that are in one to one correspondence with applications. Data such as an update kit stored in the SD memory card or the like is read out by the local storage in accordance with a request from the virtual file control unit . From among the read data an AV clip is transferred to the read buffer . Note that a description is given later of a data structure of the update kit and the data read out by the local storage includes not only an AV clip but also an index file a movie object file a playlist file a clip information file a BD J object file a JAR file and a merge management information. Such data is transferred to the virtual file control unit .

The read buffer is a buffer composed of for example a memory for temporarily storing data read by the local storage .

The system target decoder decodes and plays back the streams by performing demultiplexing processing on the source packets read out into the read buffer and the read buffer . The system target decoder also performs processing of decoding and playing back the JPEG formatted and the PNG formatted graphics data for menu display and others upon being instructed by the program execution unit . A description is given later of details of the system target decoder .

The plane memory set is composed of a plurality of plane memories. The plane memories include a primary video plane a secondary video plane an IG plane a PG plane and a BD J plane.

The plane composition unit instantaneously superimposes data written in the respective memories of the plane memory set and outputs the superimposed images into the HDMI transmission reception unit .

The HDMI transmission reception unit performs an authentication phase and a negotiation phase in conformity to for example the HDMI standard HDMI High Definition Multimedia Interface and outputs image data to the television .

The playback control unit includes a playback engine and a playback control engine and controls playback of the playback device such as playback processing of an AV clip via the playlist information in accordance with a playback command from the program execution unit and a notification from the user event processing unit . The playback control unit also sets and updates various player variables in the register set in accordance with changes in playback states. Furthermore the playback control unit refers to the player variables to specify to the system target decoder an elementary stream to be decoded and offers information necessary for decoding the respective elementary streams.

The playback engine executes AV playback functions. The AV playback functions refer to a group of functions succeeded from DVD and CD players. the AV playback functions are processing such as starting playback stopping playback pausing canceling pausing canceling still image function fast forward performed by specifying an immediate value indicating the playback speed rewind performed by specifying an immediate value indicating the playback speed switching audio switching picture data for secondary video switching angle and the like.

The playback control engine executes playlist playback functions in response to a function call from the command interpreter which is the operator of the HDMV mode and the Java platform in which the BD J mode is operated . The playlist playback functions are processing of performing from among the aforementioned AV playback functions the playback start and the playback stop in accordance with the current playlist information constituting the current playlist and the current clip information.

The management information memory is a memory for storing the current playlist information and the current clip information. The current playlist information is a playlist information piece that is currently being a target of processing from among a plurality of playlist information pieces that can be accessed from the BD ROM the built in media drive or the removable media drive. The current clip information is a playlist information piece that is currently being a target of processing from among a plurality of clip information pieces that can be accessed from the BD ROM the built in media drive or the removable media drive.

The register set a player state setting register set is a set of registers for storing the player variables. There are two types of the player variables a system parameter SPRM and a general purpose parameter GPRM for storing arbitrary information that is to be used by program files. An SPRM indicates the playback state of the playback device . is a list of SPRMs. Each SPRM is assigned with a serial number and each serial number is associated with a unique variable value. The contents of major SPRMs are shown below. Here the numbers in parentheses indicate the serial numbers.

The SPRM indicates the PTS of the picture currently being decoded and is updated every time a picture is decoded and written into the primary video plane memory. Accordingly the current playback point can be known by referring to the SPRM .

The language code for audio stream in SPRM and the language code for text subtitle stream in SPRM show default language codes of the playback device . These codes may be changed by a user with use of the OSD or the like of the playback device or the codes may be changed by an application program via the program execution unit . For example if the SPRM shows English then during playback processing of a playlist the playback control unit first searches the stream selection table of the playitem for a stream entry having the language code for English . The playback control unit then extracts the PID from the stream identification information of the stream entry and transmits the extracted PID to the system target decoder . As a result an audio stream having the PID is selected and decoded by the system target decoder . These processes can be executed by the playback control unit with use of the movie object file or the BD J object file.

During playback processing the playback control unit controls the playback while checking values set as the player variables. The playback control unit updates the SPRM the SPRM the SPRM and the SPRM in particular. These SPRM respectively show in the stated order the stream numbers of the audio stream the text subtitle stream the secondary video stream and the secondary audio stream that are currently being processed. For example suppose that the SPRM indicating the STN of the audio stream has been changed by the program execution unit . In this case the playback control unit first refers to the STN shown by the new SPRM and retrieves the stream entry that includes this STN from the STN table of a playitem currently being processed. The playback control unit then extracts the PID from the stream identification information of the stream entry and transmits the extracted PID to the system target decoder . As a result an audio stream having the PID is selected and decoded by the system target decoder . This is how the audio stream to be played back is switched. The text subtitle stream and the secondary video stream to be played back can be similarly switched.

The program execution unit includes an HDMV module a BD J platform a middleware and a mode management module . The program execution unit is a processor for executing a program stored in a BD program file.

The HDMV module is a DVD virtual player in which the HDMV mode is operated. The HDMV module is also an executor of the HDMV mode. The HDMV module has a command interpreter and performs the control in the HDMV mode by interpreting and executing the navigation command constituting the movie object. The navigation command is described in a syntax that resembles a syntax used in the DVD Video. Accordingly it is possible to realize a DVD Video like playback control by executing the navigation command.

The BD J platform is a Java platform in which the BD J mode is operated and is fully implemented with Java2 Micro Edition J2ME Personal Basis Profile PBP 1.0 and Globally Executable MHP specification GEM 1.0.2 for package media targets. The BD J platform is composed of a class loader a byte code interpreter and an application manager. The BD J platform realizes various functions in accordance with a BD J application to be executed.

The class loader is one of system applications and loads a BD J application by reading out byte codes from the class file residing in the JAR archive file and storing the byte codes into the heap memory.

The byte code interpreter is what is called a Java virtual machine. The byte code interpreter converts i the byte codes constituting the BD J application stored in the heap memory and ii the byte codes constituting the system application into native codes and causes the MPU to execute the native codes.

The application manager is one of system applications and performs application signaling for the BD J application e.g. starts or ends the BD J application based on the application management table in the BD J object. This concludes the description of the internal structure of the BD J platform.

The middleware is an operating system for the embedded software and is composed of a kernel and a device driver. The kernel provides the BD J application with a function unique to the playback device in response to a call for the Application Programming Interface API from the BD J application. The middleware also realizes control of the hardware such as starting the interruption handler by sending an interruption signal.

The mode management module holds Index.bdmv that has been read out from the BD ROM built in media drive or removable media drive and performs mode management and branch control. The mode management by the mode management module is module assignment to cause either the BD J platform or the HDMV module to execute the dynamic scenario.

The program memory stores a current dynamic scenario and is used for processing performed by the HDMV module which is an operator of the HDMV mode and the Java platform in which the BD J mode is operated . The current dynamic scenario is one of the Index.bdmv the BD J object and the movie object recorded on the BD ROM which is currently being a target of execution. The program memory includes a heap memory. The heap memory is a stack region for storing byte codes of the system application byte codes of the BD J application system parameters used by the system application and application parameters used by the BD J application.

The network module is a module that controls data communication with an external network and acquires an update kit from the WWW server such as the interne and transfers the acquired update kit to the local storage.

The user event processing unit receives a user operation via a remote control and causes the program execution unit or the playback control unit to perform processing as instructed by the received user operation. For example when the user presses a button on the remote control the user event processing unit instructs the program execution unit to execute a command included in the button. For example when the user presses a fast forward or rewind button on the remote control the user event processing unit instructs the playback control unit to execute the fast forward or rewind processing on the AV stream of the playlist currently being played back.

The nonvolatile memory is a recording medium that is for example a readable writable memory and is a medium such as flash memory or FeRAM that can preserve the recorded data even if power is not supplied thereto. The nonvolatile memory is used to store a backup of data stored in the register set .

The virtual file control unit controls the BD ROM drive and the local storage and realizes functions of the virtual file system. The functions of the virtual file system refer to construction of a virtual package and control over access to a ROM disc or the local disc via the virtual package. The virtual package is a virtual BD ROM package on a memory obtained by combining a content recorded on a BD ROM disc with an update kit stored in the local storage based on the merge management information stored in the local storage . The constructed virtual package has the same format as the data structure of a BD ROM. On the virtual package it is possible not only to add a file into an original ROM disc but to replace an original file on the ROM disc with a file stored in the local storage. The construction of a virtual package by the virtual file control unit is triggered by insertion of a BD ROM disc and a command from the program execution unit to construct a virtual file and executed when playback of a title is interrupted e.g. at timing of switching a title being played back . A description is given later of the construction of a virtual package and the file access control via the virtual package.

A source depacketizer of the system target decoder interpretes each of the source packets transferred to the system target decoder extracts a TS packet from the source packet and transfers the extracted TS packet to the PID filter. In transferring the TS packet the source depacketizer adjusts the time of input into the decoder in accordance with the ATS of the source packet. Specifically the source depacketizer transfers only the TS packet to the PID filer according to the recording rate of the AV clip at a moment when the value of the ATC generated by the ATC counter becomes equal to the value of the ATS of the source packet.

Referring to the PIDs the PID filter transfers from among the TS packets output from the source depacketizer TS packets having a PID that matches a PID required for playback to a primary video decoder a secondary video decoder an IG decoder a PG decoder a primary audio decoder or a secondary audio decoder. For example in the case of the BD ROM the TS packets including the PID 0x1011 are transferred to the primary video video decoder the TS packes including the PIDs from 0x1B00 to 0x1B1F are transferred to the secondary video video decoder the Ts packets including the PIDs from 0x1100 to 0x111F are transferred to the primary audio decoder the TS packets including the PIDs from 0x1A00 to 0x1A1F are transferred to the secondary audio decoder the TS packets including the PIDs from 0x1200 to 0x121F are transferred to the PG decoder and the TS packets including the PIDS from 0x1400 to 0x141F are transferred to the IG decoder.

As shown in the system target decoder includes two pairs of the source depacketizer and the PID filter one pair processes an AV clip transferred from the read buffer and the other pair processes an AV clip transferred from the read buffer . An AV clip referred to by a main path is when the sub path is of the synchronized type played back in synchronization with an AV clip referred to by the sub path. An AV clip referred to by a main path is when the sub path is of the non synchronized type not played back in synchronization with an AV clip referred to by the sub path.

The primary video decoder includes a buffer storing data. The primary video decoder also removes information such as the TS headers and the PES headers from the stored data to take out coded pictures I picture P picture and B picture so that the respective images on the video stream are decoded at predetermined decoding times DTSs and a plurality of frame images are created. The primary video decoder outputs the created frame images to the primary video plane at the respective display times PTSs . Methods for compressing and encoding the video stream multiplexed in the AV clip include MPEG2 MPEG 4 AVC and VC1 and decoding methods for the compressed images are switched according to the attribute of the stream.

The secondary video decoder has the same structure as the primary video decoder decodes an secondary video stream input thereto and writes the resultant pictures to the secondary video plane in accordance with respective display times PTSs .

The IG decoder extracts an interactive graphics stream from the TS packets input from the source depacketizer decodes the extracted interactive graphics stream and writes the resultant uncompressed graphics data to the IG plane in accordance with respective display times PTSs .

The PG decoder extracts a presentation graphics stream from the TS packets input from the source depacketizer decodes the extracted presentation graphics stream and writes the resultant uncompressed graphics data to the PG plane in accordance with respective display times PTSs .

The primary audio decoder includes a buffer storing therein data. The primary audio decoder also removes the TS headers and the PES headers from the stored data to perform audio stream decode processing so that uncompressed LPCM audio data is obtained. The primary audio decoder outputs the created frame images to an audio mixer at the respective playback times PTSs . Methods for compressing and encoding the audio stream multiplexed in the AV clip include AC3 and DTS and decoding methods for the compressed audio are switched according to the attribute of the stream.

The secondary audio decoder has the same structure as the primary audio decoder decodes a secondary audio stream input thereto and outputs resultant uncompressed LPCM audio data to the audio mixer in accordance with respective playback times PTSs . Methods for compressing and encoding the audio stream multiplexed in the AV clip include DolbyDigitalPlus and DTS HD LBR and decoding methods for the compressed audio are switched according to the attribute of the stream.

The audio mixer mixes i.e. superimposes audio of the uncompressed audio data output from the primary audio decoder with the uncompressed audio data output from the secondary audio decoder and outputs the mixed audio data to a speaker or the like.

A BD J processor decodes the graphics data PNG JPEG transferred from the program execution unit and outputs the decoded graphics data to the BD J plane in accordance with the display time specified by the BD J application.

A description is given of the construction of a virtual package and the file access associated with the virtual package.

The virtual package is constructed by files stored on the BD ROM and an update kit stored in the SD memory card inserted into the local storage . First of all a description is given of a data structure of the update kit stored in the SD memory card .

The OrgID directory is a directory whose name is composed of eight characters and which represents by hexadecimal notation a 32 bit identifier OrganizationID for identifying the provider of the movie work described in the BD management information index file of the BD ROM recording layer. The successive 0 s at the head of the OrganizationID are omitted from the directory name. For example when the OrganizationID is 0x0000001A the directory name is 1A .

The DiscID directory is a directory which represents by hexadecimal notation four 32 bit parts that are obtained by separating the 128 bit identifier DiscID for identifying the BD ROM recording layer described in the BD management information index file of the BD ROM recording layer. As is the case with the OrganizationID the successive 0 s at the head of the DiscID are omitted from the directory name.

Under the DiscID directory update kit directories are provided in one to one correspondence with the update kits. An update kit is found under each update kit directory. In an example of an update kit named Update is stored under a DiscID directory with a directory name 0123456789abcdef0123456789abcdef .

Each update kit includes a merge management information file bumf. xml a signature information file merge. sf a state signaling file vp unit. info and other additional content data files e.g. game. bdjo game. jar resources. jar jun01. m2ts jun01. clip jun01. mpls jpn sub. m2ts and jpn sub. clpi .

The merge management information file bumf. xml stores the OrganizationID the DiscID and mapping information as shown in . The mapping information is a table that brings file paths referred to below as local storage file paths of additional content data files constituting the virtual package as well as the state signaling file in the SD memory card into one to one correspondence with virtual paths referred to below as VFS file paths for accessing these files on the virtual file system. Specifically as shown in in the mapping information the local storage file paths are described as relative paths for the update kit directory and the VFS file paths are described as relative paths for a disc root directory. The merge management information file further stores hash values of the respective additional content data files indicated by the mapping information.

The signature information file is a file indicating an electronic signature applied by the provider to the merge management information file and is stored immediately under the update kit directory with a file name MERGE.sf . The encrypted hash value is generated by calculating a hash value for the information that needs to be protected from tampering and encrypting the hash value using a predetermined private key. In the signature information file of the present embodiment the hash value for the merge management information file is encrypted using a private key corresponding to a public key contained in a merge certificate recorded in the BD ROM recording layer.

The merge certificate is a certificate that is used for authenticating the merge management information file and includes a public key publicized by the provider. The merge certificate provided from the provider is stored in BD ROM recording layer with a file name bd. cert . The file format of the merge certificate may be for example X.509.

The additional content data files are a group of files that are to be added updated with respect to the original contents recorded in the BD ROM recording layer. Playlist files AV clips clip information files movie object files BD J objects JAR files index files and the like are recorded here.

The state signaling file is a file that is used for determining the virtual package construction state by the BD J application in the playback device according to the present invention. In any update kit a fixed path BDMV JAR 11111NFSData. info shown in is assigned as the VFS file path of the state signaling file by the corresponding merge management information file. In the authoring process of a BD ROM it is prohibited to create a file corresponding to the file path BDMV JAR 11111 VFSData. info on the BD ROM.

Meanwhile a content of the state signaling file is no particular object for the purpose of determining the virtual package construction state. In the present embodiment a VP information file vp unit. info indicating the content of the update kit is used as the state signaling file. shows the content of the state signaling file according to the present embodiment. Specifically the OrganizationID and the DiscID of the associated ROM disc an identifier a name and a version number of the update kit details of the data included in the update kit a file name of a video image representing the update kit and text information in various languages representing the update kit are recordind in the state signaling file. The above information makes it possible to easily obtain the version of the update kit and detailed contents of the data included in the update kit. Note that the information recorded in the file of may be added or deleted as needed. For example the OrganizationID and the DiscID of the associated ROM disc may be deleted or a plurality of OrganizationIDs and a plurality of DiscIDs may be recorded. Furthermore the above information may be recorded in the state signaling file in a text format an XML Extensible Markup Language format a binary format or the like.

Next a description is given of processes of constructing a virtual package by the virtual file control unit with use of contents recorded on the BD ROM and contents recorded in the SD memory card based on the contents of the merge management information file.

The file control unit determines whether the merge management information file has been tampared with by calculating a hash value from the merge management information file and comparing a value obtained by decrypting with use of the public key contained in the merge certificate in the BD ROM storage layer a hash value of the merge management information file indicated by the signature information file with the calculated hash value. When the calculated hash value matches the decrypted hash value it is determined that the merge management information file has not been tampered with.

In the case where the merge management information file has not been tampered with file control unit confirms that the respective additional content data files reside on the local storage file paths indicated by the mapping information.

The file control unit calculates hash values for the respective additional content data files and compares the calculated hash values with hash values of the respective additional content data files recorded in the mapping information. When the calculated hash values match the recorded hash values it is determined that the additional content data files have not been tampered with.

In the case where the respective additional content data files whose correspondence is indicated by the mapping information have not been tampered with file control unit changes the additional content data files to read only attributes.

The file control unit reads the mapping information in the merge management information file creates a disc image in which the respective update kit files are allocated to the VFS file paths indicated by the mapping information and provides the created disc image to the playback control unit and the program execution unit .

The above processes are used to construct the virtual package. After that in response to an access request using a VFS path from the playback control unit and the program execution unit the virtual file control unit refers to the mapping information to check a recording medium recording thereon a substantial file and instructs one of the BD ROM drive and the local storage to read out the data.

Specifically upon receiving from the playback control unit and the program execution unit a read command specifying a file path on the virtual package the virtual file control unit refers to the mapping information and determines whether the specified file path is described as a VFS path in the mapping information. When the specified file path is not described in the VFS file path in the mapping information the virtual file control unit determines that the substantial data for the specified file is recorded on the BD ROM converts the file path on the virtual package into a file path on the BD ROM and transfers a read command to the BD ROM drive . On the other hand when the specified file path is described in the VFS file path in the mapping information the virtual file control unit determines that the substantial data for the specified file is recorded in the SD memory card converts the file path on the virtual package into a local storage file path as corresponded by the mapping information and transfers a read command to the local storage . Consequently the playback control unit and the program execution unit are enabled to access an additional content data file and the state signaling file recorded in the SD memory card using the file path on the virtual package. In this way when playing back the text subtitle audio video and the like added in the SD memory card just as data recorded on the ROM disc the playback control unit and the program execution unit request the above file accesses to the virtual file control unit and the virtual file control unit transfers the access commands to the files on the ROM disc or in the SD memory card . In other words when playing back the text subtitle audio video and the like the playback control unit and the program execution unit accesses the files on the ROM disc or in the local storage via the virtual file control unit .

Meanwhile upon receiving from the playback control unit and the program execution unit a read command specifying a file path on the virtual package while the virtual package is not constructed the virtual file control unit is not able to find any merge management information file to refer to. Accordingly the virtual file control unit converts the file path on the virtual package into a file path on the BD ROM and transfers the read command to the BD ROM drive .

The following three virtual package construction states may be considered a state where no update kit is recorded in the SD memory card inserted into the local storage a state where an update kit is recorded in the SD memory card but the virtual file control unit has not completed constructing a virtual package and a state where an update kit is recorded in the SD memory card and the virtual file control unit has completed constructing a virtual package.

Among the three states in the first state no update kit resides in the first place and an access to an update kit file is impossible. However in the second and the third states the BD J application is able to access an update kit file by directly specifying the file path in the SD memory card in a read command. So it is important to determine a difference between these two states. From now on the state where an update kit is recorded in the SD memory card but the virtual file control unit has not completed constructing a virtual package is called a prepared state and the state where an update kit is recorded in the SD memory card and the virtual file control unit has completed constructing a virtual package is called a valid state .

A description is given of occasions when the prepared state and the valid state of a virtual package happen with reference to . Firstly the prepared state happens in st and st in the figure. The state of st happens when from the state st where a virtual package is once constructed with use of an update kit recorded in the SD memory card and after the SD memory card is removed from the local storage and the virtual package is cancelled st the SD memory card is reinserted into the local storage st . Normally the virtual file control unit subsequently waits for title switching and reconstructs a virtual package before the next title is started to be played back thus bringing about the valid state st of the virtual package.

Regarding the prepared state at st the state happens when from the state st where the virtual package is once constructed and after the SD memory card is removed from the local storage and the virtual package is cancelled st execution of the BD J application is started st and then the SD memory card is reinserted into the local storage st . In this case the virtual file control unit waits for the BD J application to stop following the title switching and constructs the virtual package prior to re execution of the BD J application thus bringing about the valid state st of the virtual package.

As mentioned above the prepared state happens between the reinsertion and the title switching in the reconstruction process of the virtual package caused by the removal reinsertion of the SD memory card storing the update kit.

Note that the process 3 in the virtual package construction process may create a heavy processing load. For example when a large size file such as an AV clip is included in the update kit calculating the hash value for the file requires a heavy load. Upon each removal reinsertion of the SD memory card in which the update kit is recorded a virtual package needs to be reconstructed. It is not preferable to perform such processing that requires a heavy load every time from a viewpoint of improving efficiency in use of hardware resources. Accordingly another implementation where from among all the virtual package construction processes the processes 1 to 4 are performed only for one virtual package that is to be initially constructed and only the process 5 is performed for a virtual package that is to be reconstructed. Furthermore the processes 1 to 4 do not influence playback of a title on the BD ROM and therefore are executable in parallel with the title playback of the BD ROM . In contrast the process 5 must be performed during a time when the title playback is stopped. Accordingly it can also be considered that the state where the processes 1 through 4 have been finished equals the prepared state and the state where the process 5 has been performed equals the valid state.

The following describes a method for determining which of the prepared state and the valid state the virtual package construction state is.

The BD J application is incorporated with state signaling file position information in the BD J application programming process in the authoring process. The state signaling file position information is the VFS file path assigned to the state signaling file in the merge management information file of the update kit. The VFS file path assigned to the state signaling file is the predetermined file path which is fixed and commonly used in any update kits. In the present embodiment BDMV JAR 11111 VFSData. info is used as the VFS file path.

A virtual package construction state determination unit attempts a read command while specifying the file path indicated by the state signaling file and determines the virtual package construction state according to success or failure of the read command. Specifically the virtual package construction state determination unit determines that the virtual package is in the valid state when the read command is successful and that the virtual package is in the prepared state when the read command results in an error.

Actually when the virtual package is in the valid state a state signaling file is allocated on the virtual package. The virtual file control unit converts the path specified by the read command into the local storage file path before transferring the read command to the local storage . Consequently the virtual file control unit successfully reads out the state signaling file. On the other hand when the virtual package is in the prepared state the virtual file control unit converts the path specified by the read command into the file path on the BD ROM before transferring the read command to the BD ROM drive . However in the authoring process of the BD ROM it is prohibited to create a file corresponding to the file path BDMV JAR 11111 VFSData. info on the BD ROM. Accordingly a file with the same file path name cannot be recorded on the BD ROM and the read command inevitably results in an error.

The determination result of the virtual package construction state determination unit is used in a menu display unit for example to display an appropriate menu in accordance with the virtual package construction state.

Of course when the SD memory card is not inserted into the local storage of the playback device also the read command for the state signaling file inevitably results in an error. The virtual package construction state determination unit may determine that the virtual package is in the prepared state in such a case as well.

The above functions are realized by causing the computer to execute processing procedures shown in flowcharts of and described in object oriented compiler language.

The processing shown in is repeatedly performed during execution of the BD J application. In accordance with the determination result about whether or not the state signaling file is accessible by specifying the fixed VFS file path it is appropriately determined whether the virtual package is in the prepared state or in the valid state. This prevents a situation where the malfunction occurs as a result of the virtual package construction state incorrectly determined by the BD J application.

Note that the processing to determine the virtual package construction state may be performed immediately after s start of the BD J application. This reduces the number of access to the state signaling file. The reasons why the number of access is reduced is that the construction of the virtual package must always be completed at timing before execution of the BD J application is started and cannot be completed during the execution of the BD J application. Accordingly the determination result obtained immediately after a start of the BD J application does not change until the end of the application. For the above reasons by preserving the determination result obtained immediately after re execution of the BD J application and using the determination result throughout the operation period of the BD J application the state signaling file needs to be accessed for less number of times for determination of the virtual package construction state. This speeds up the processing of the BD J application.

The following describes the method for determining which of the prepared state and the valid state the virtual package construction state is. Meanwhile the operator of the processing procedures shown in the flowcharts of and may be the virtual file control unit . Furthermore another control unit may be provided in the playback device so that the control unit performs the processing procedures shown in and .

Alternatively the processing procedures shown in and may be implemented as APIs to be provided by the middleware of the program execution unit . By doing so the virtual file control unit or another control unit provided in the playback device may provide to the BD J application information about whether or not the virtual package is in the valid state.

It is also possible to describe the processing procedures shown in and in source cords of the BD J application and cause the program execution unit to perform the processing procedures by executing the BD J application.

Firstly after the SD memory card is inserted into the local storage at a time point t in the BD J application recorded on the BD ROM is started at t. At this time point the update kit is not recorded in the SD memory card. Accordingly in the state transitions diagram shown in the state st at the time point t transitions to the state st and further transitions to the state st where the application is executed. Here the BD J application determines the virtual package construction state. Since the virtual package has not been constructed in a period from t to t in the BD J application determines that the virtual package construction state is in the prepared state. Accordingly in the case of displaying a bonus selection menu in the period the BD J application displays the bonus function menu shown in containing only a Making button and a Trailer button as options. These buttons necessitate accessing the main feature or the bonus video of the movie recorded on the ROM disc. The bonus selection menu of contains neither an option for playing back the trailer of the coming movie nor an option for executing the bonus game and the user is not able to play back the trailer of the coming movie or execute the bonus game.

When it is determined that the virtual package construction state is in the prepared state the BD J application accesses the SD memory card inserted into the local storage using the local file path and determines whether the update kit is recorded or not. When the update kit is not recorded the BD J application downloads the update kit via the network module. After acquiring the update kit the BD J application records the update kit in the local storage . Subsequently the BD J application requests the virtual file control unit to construct the virtual file system.

Upon requesting the virtual file control unit to construct the virtual file system the BD J application requests the program execution unit to stop restart the title being played back. The reason why the title being played back is to be stopped restarted is that construction of the virtual file system must always be completed at the timing before the BD J application is executed. In other words even if the virtual file control unit is instructed to construct the virtual file system during execution of the BD J application the virtual package cannot be completely constructed unless the title being played back is once stopped and played back again. To put it another way a condition for completing construction of the virtual file system is that the virtual file control unit is able to read the merge management information file recorded in a predetermined position in the local storage and the additional content data file of the update kit corresponding to i.e. described in the merge management information file. Consequently the title being played back is stopped at t in and the construction of the virtual package is completed at the subsequent playback restart of the title at t. In the state transition diagram shown in the state st transitions to the state st as a result of the BD J application being stopped following the title playback stop and further transitions to the state st at the title playback restart where the construction of the virtual package is completed. Here once the BD J application is executed in the title whose playback is restarted the BD J application determines that the virtual package is in the valid state in a period from t to t in . Accordingly in the case of displaying a bonus selection menu in the period the BD J application displays the bonus function menu shown in containing a Trailer New button and the Game button in addition to the Making button and the Trailer button as options. Here in response to a user selection on the Trailer New button the trailer of the coming movie added into the local storage is played back and in response to a user selection on the Game button the bonus game added into the local storage is executed. This realizes the operation in which the main feature and the bonus video of the movie recorded on the ROM disc and the Japanese text subtitle the trailer of the coming movie and the bonus game in the local storage appear to be recorded in a single disc.

With the construction of the virtual package completed once the SD memory card is removed from the local storage at t in the title being played back is stopped and the BD J application is force quit. Subsequently the title playback is started with the SD memory card still removed from the local storage and the BD J application of the title being played back is executed without the construction of the virtual package completed. In the state transition diagram shown in due to the removal of the SD memory card the state st transitions to the state st. From there upon restart of the title playback the state transitions to the state st.

As mentioned above the condition for completing the construction of the virtual package is that the virtual file control unit is able to read the merge management information file recorded in the predetermined position in the SD memory card and the corresponding update kit. However in the example of the figure at the time point t before the title playback is restarted the SD memory card is removed from the local storage. Accordingly prior to the title playback start there is no update kit corresponding to the merge management information file and it is impossible to read the update kit corresponding to the merge management information file recorded in the predetermined position in the local storage. From this state even when the previously removed SD memory card is reinserted into the local storage again at t the reconstruction of the virtual package cannot be completed because the title is being played back. In the state transition diagram shown in due to the reinsertion of the SD memory card the state st transitions to the state st.

On the other hand in a conventional technique shown in due to the reinsertion of the SD memory card at t the BD J application inadvertently accesses the update kit recorded in the SD memory card by directly specifying the local address for the SD memory card thereby incorrectly determining that the virtual package is in the valid state where the construction is completed. Referring back to the state transition diagram due to the reinsertion of the SD memory card the BD J application according to the conventional technique incorrectly determines that the state st transitions to the state st as shown by a dash line arrow al. In accordance with the incorrect determination the BD J application of the conventional technique displays the bonus function menu of which ought to be displayed when the virtual package is in the valid state even though the virtual package is in the prepared state. This used to cause the unusual state where the contents of the menu display are not consistent with operations available by the displayed contents.

In contrast the BD J application of the present embodiment is able to correctly determine that the virtual package is in the prepared state in a time period from t to t by determining the virtual package construction state using the state signaling file by the processing procedure shown in . Accordingly in the case of displaying the bonus selection menu in the period the BD J application rightly displays the bonus function menu shown in which ought to be displayed when the virtual package is in the prepared state. In this way even in the situation accompanied by the unusual state with the BD J application using the conventional technique the BD J application of the present embodiment does not display in the bonus function menu a button for selecting the processing which necessitates accessing an additional content data file included in the update kit. As a result the consistency is retained between contents of the menu display and the operations available by the displayed contents.

Subsequently the title playback is stopped once at t and started again at t and the virtual package is constructed prior to the title playback start. Accordingly the construction of the virtual package is already completed upon and after the title playback restart and the BD J application of the title being played back determines that the virtual package construction state is the valid state. As a result the bonus selection menu shown in containing the Game button for executing the bonus game as an option is displayed.

As has been described according to the structure of the present embodiment the BD J application is able to correctly determine the virtual package construction whereby the BD J application is prevented from malfunctioning in the period after the reinsertion of the SD memory card into the local storage and before the stop of the BD J application.

Furthermore in the present first embodiment the predetermined fixed file path is used as the VFS file path assigned to the state signaling file. This enables the BD J application to correctly determine the virtual package construction state always using the same file path. Furthermore by using the fixed file path as the VFS file path assigned to the state signaling file it becomes easier to use a single application for a plurality of update kits or to use a plurality of applications for a single update kit.

Note that the file for use in the determination in the step S may be a file other than the file format shown in as far as the corresponding VFS file path is described in the merge management information. Such a file may be a file belonging to the update kit like the state signaling file a file additionally recorded in the recording medium embedded in the playback device or a data file within the BD J application. In the case where the file recorded in the recording medium embedded in the playback device or the data file within the BD J application is used for the determination the file needs to be recorded in the local storage together with the update kit at the time of downloading the update kit.

Meanwhile when the state signaling file is in an AV data format the AV data is unintentionally played back upon being accessed possibly causing inconvenience. Such inconvenience is avoided by making the state signaling file in a text format since the text file cannot be actually played back in the determination of access. Furthermore by reducing a size of the file for use in determining as much as possible a time required for acquiring and accessing the file is shortened and the processing of the BD J application is sped up.

Moreover in the case where the file additionally recorded in the recording medium embedded in the playback device or the data file within the BD J application is used for the determination in the step S the VFS file path information must be prepared for the BD J application to access the file. The VFS file path information may be referred to by the merge management information or may be recorded within the playback device or the BD J application.

In the first embodiment the virtual package is constructed using a single update kit for a single BD J application. However by preparing a plurality of update kits for a single BD J application a variety of virtual packages may be constructed from the single BD J application. In a present second embodiment a description is given of an implementation of the present invention in which a variety of virtual packages are constructed by a single BD J application with use of a plurality of update kits.

Under the update kit directory Update a merge management information file and a state signaling file relating to the update kit Update are located. Although not shown in the figure additional content data files relating to a content added by the update kit are also located under the update kit directory.

Similarly under the update kit directory Update a merge management information file a state signaling file relating to the update kit Update and additional content data files relating to a content added by the update kit are located.

Here in the state signaling file of the Update information relating to the update kit belonging to the Update is described in the format shown in . In the state signaling file of the Update information relating to the update kit belonging to the Update is described in the format shown in .

Furthermore the merge management information file and the merge management information file both indicate in the respective mapping information the common VFS file path BDMV JAR 11111NFSData. info as the local storage file path assigned to the state signaling file.

In the first embodiment with use of the processing shown in and the virtual package is determined to be in the valid state when the state signaling file is accessible by specifying the fixed file path BDMV JAR 11111NFSData. info on the virtual package. Then the bonus selection menu of is displayed on which the additional content included in the update kit is available. On the other hand the virtual package is determined to be in an invalid i.e. prepared state when the state signaling file is not accessible by specifying the fixed path. Then the bonus selection menu of is displayed on which the additional content included in the update kit is not available. However when the BD J application needs to handle the plurality of update kits as in the present second embodiment a problem might arise. Specifically upon determining that a virtual package is in the valid state the BD J application might display the bonus selection menu showing the additional content provided by an update kit different from the update kit used for the current virtual package being constructed.

The following describes an example of the above problem. The description is given of the case where there are the Update and the Update shown in for the BD ROM the Update is used for adding to the ROM disc the Japanese text subtitle the trailer of the coming movie and the bonus game and the Update is used for adding to the ROM disc the Chinese text subtitle and the trailer for China. In this case the virtual file control unit and the BD J application are not able to determine which one of the update kits is used for constructing the virtual file system while capable of executing the processing to determine the virtual package construction state as shown in . Hence the BD J application could inadvertently display the bonus selection menu shown in as a result of determining that the virtual package is in the valid state by the processing to determine the virtual package construction state shown in despite the fact that the virtual package is constructed by adding into the ROM disc the Chinese text subtitle and the trailer for China using the Update of . The bonus selection menu of thus displayed contains the Game button option for executing the bonus game. However even if the user selects the Game button the bonus game is not executable since the virtual package of is actually constructed. In other words in the above case the consistency is not established between contents of the bonus selection menu and the operations available by the displayed contents.

In view of the above problem the BD J application according to the second embodiment specifies the update kit used for the virtual package being currently constructed i.e. the current virtual package by checking the content of the state signaling file. As shown in the information contained in the state signaling file enables the BD J application to uniquely specify the update kit currently in use even when a plurality of different update kits reside in the SD memory card. Furthermore the above information enables the BD J application to specify the ROM disc with which the target update kit can be combined for constructing a virtual file system. The above information also enables the BD J application to easily obtain the version of the update kit and detailed contents of the data included in the update kit.

With the update kit used for the current virtual package thus specified the BD J application is able to check whether or not a file necessary for the processing the BD J application is to execute is contained in the update kit used for constructing the virtual package. Consequently the BD J application of the second embodiment performs control so that an appropriate bonus menu is displayed in accordance with the update kit used for the current virtual package. The above configuration of the BD J application prevents the BD J application from accessing an update kit other than the update kit used for constructing the current virtual package. This also prevents for example the situation where the contents of the bonus display menu are not consistent with operations available by the displayed contents.

In sum the BD J application according to the second embodiment determines which one of the update kits is used for constructing the virtual package and performs control to prohibit an access to an update kit other than the update kit used for constructing the virtual package.

Note that the information recorded in the file of may be added or deleted as needed. For example the OrganizationID and the DiscID of the associated ROM disc may be deleted or a plurality of OrganizationIDs and a plurality of DiscIDs may be recorded. Furthermore the information indicating the content of the update kit may be recorded in another file such as the merge management information file.

The above functions are realized by causing the computer to execute a processing procedure shown in a flowchart of described in the object oriented compiler language.

Here the step S where the BD J application determines that the virtual package is in the valid state is taken when the state signaling file is successfully read out in response to the read command using the fixed VFS file path issued in the step S. It should be noted that the state signaling file read out using the fixed VFS file path belongs to the current virtual package. So when determining that the virtual package is in the valid state in the step S the BD J application subsequently reads out the content of the state signaling file step S . In accordance with the information read in the step S the BD J application determines whether or not a file necessary for the processing the BD J application is to execute is included in the update kit used for the constructed virtual package step S . For example when the BD J application is to execute processing to display the bonus selection menu an item called details of data contained in update kit shown in is referred to and it is determined whether or not the additional contents of the bonus game and the trailer for the coming movie are included in the update kit step S . If it is determined that these contents are included step S Yes the BD J application permits display of the buttons for calling the additional contents included in the update kit such as the Game button and the Trailer New button step S upon display of the menu screen.

On the other hand when the state signaling file is not successfully read out using the fixed VFS file path and the BD J application determines that the virtual package is in the prepared state step S or when although the state signaling file is successfully read out using the fixed VFS file path it is determined that the bonus game and the trailer for the coming movie are not included in the item details of data contained in update kit of the read state signaling file step S No the BD J application prevents display of the Game button and the Trailer New button for calling the additional contents upon display of the menu screen step S .

This concludes the description of the procedure for processing of determining the virtual package construction state according to the second embodiment.

Note that the file for use in the determination in the step S may be a file other than the state signaling file. Such files include a file belonging to the update kit like the state signaling file a file additionally recorded in the recording medium embedded in the playback device and a data file within the BD J application. Note that however storing the information indicating the contents of the update kit together with the file for use in determining the virtual package construction state in a single file facilitates the determination of the virtual package construction state and the determination of the update kit being used by a single file read operation. The reason is that the read command is already issued for the state signaling file for the purpose of determining the virtual package construction state in the step S. Accordingly storing the contents of the update kit in the state signaling file omits a need for additionally issuing a read command in the step S after it is determined in the step S that the virtual package is in the valid state. Thus the effective processing is realized by making the file used for determining the virtual package construction state double as the file for storing the contents of the update kit.

Meanwhile when the file for use in the determination in the step S is in the AV data format the AV data is unintentionally played back upon being accessed possibly causing inconvenience. Such inconvenience is avoided by making the state signaling file in the text format since the text file cannot be actually played back in the determination of access. Furthermore by reducing the size of the file for use in the determination as much as possible the time required for acquiring and accessing the file is shortened and the processing of the BD J application is sped up.

Moreover in the case where the file additionally recorded in the recording medium embedded in the playback device or the data file within the BD J application is used for the determination in the step S the file path information must be prepared for the BD J application to access the file. The file path information may be recorded in the merge management information or within the playback device or the BD J application.

By using a fixed file path as the path the file path information indicates the BD J application is enabled to correctly determine the virtual package construction state always using the same file path. The use of the fixed file path further realizes use of a single application for a plurality of update kits in common reuse of the application or use of a plurality of applications for a single update kit creation of the common update kit with a plurality of titles . As a result the application s and the update kit s are effectively created.

Moreover as a method for determining the contents of the update kit it is possible to acquire only the information for uniquely specifying the update kit currently in use such as the identifier of the update kit. The acquired information may be used as a key to obtain other information namely information of data and file contents included in the update kit from the network or another recording medium. It is also possible to use as the key other files and the merge management information file included in the update kit.

As has been described according to the second embodiment the application is enabled to specify the update kit currently in use using the information indicating the contents of the update kit recorded in the file in the local storage in determining the virtual package construction state and control the processing of the application in accordance with the update kit used for constructing the virtual package. As a result even when there are a plurality of update kits the application is prevented from accessing an update kit other than the update kit used for constructing the virtual package. Furthermore the plurality of update kits are handled by a single application and the application is therefore effectively developed.

As above the second embodiment describes the structure for specifying the update kit used for the current virtual package by checking the content of the state signaling file in the situation where a variety of virtual packages are constructible from a single BD J application using a plurality of update kits. In this structure the common VFS file path BDMV JAR 11111NFSData. info is allocated for all signaling files in the mapping information of any merge management information files so that the state signaling file of each update kit is assigned with the common file path. This enables the BD J application to check for any update kit being used the content of the state signaling file always using the same file path.

In contrast it is also possible to allocate different VFS file paths for the state signaling files in the mapping information of the respective merge management information files so that the state signaling file of each update kit is assigned with a different one of the file paths. In this case the BD J application may specify the update kit being used by attempting to see whether or not the file paths of the state signaling files for the respective update kits are accessible.

In the above modification when there are two update kits of the Update and the Update for example BDMV JAR 11111NFSData update01.txt is registered as the VFS file path of the state signaling file in the mapping information of the merge management information file for the Update. On the other hand BDMV JAR 11111NFSData update02.txt is registered as the VFS file path of the state signaling file in the mapping information of the merge management information file for the Update.

Furthermore at the time of creating the BD J application a data file serving as state signaling file position information pieces about the respective update kits is incorporated into the JAR file that is a substance of the BD J application. Each state signaling file position information piece indicates the VFS file path assigned to the state signaling file in the corresponding update kit.

When the BD J application configured as above is executed the following processes are performed in determining the virtual package construction state. The BD J application attempts a read command by specifying the file paths indicated by the state signaling file position information pieces for the respective update kits and specifies the update kit used by the current virtual package according to which file path serves to read the state signaling file.

When there are two update kits of the Update and the Update mentioned above the BD J application determines that the Update is used for the current virtual package when the state signaling file is successfully read out by specifying the path BDMV JAR 11111NFSData update01.txt . On the other hand the BD J application determines that the Update is used for the current virtual package when the state signaling file is successfully read out by specifying the path BDMV JAR 11111NFSData update02.txt .

In a third embodiment a description is given of a structure for implementing a recording device and a recording method according to the present invention.

The recording device described here is called an authoring device deployed in a production studio for distribution of movie contents and used by an authoring staff member. In a usage pattern of the recording device according to the present invention digital streams compressed and encoded in accordance with the MPEG standards as well as a scenario describing how to play back a movie title are created in response to an operation from the authoring staff member. Then a volume image and an update kit are created. The volume image is to be stored in a BD ROM containing the data. An objective of the recording device according to the present invention is to create the recording medium and the update kit described in the first embodiment.

The material creation unit creates various streams such as a video stream an audio stream a presentation graphics stream and an interactive graphics stream. The material creation unit creates the video stream by encoding video images such as uncompressed bit map images in accordance with the compression methods such as MPEG4 AVC and MPEG2. The material creation unit also creates the audio stream by encoding uncompressed LinearPCM audio or the like in accordance with the compression method such as AC3. The material creation unit creates the presentation graphics stream that is the format of a text subtitle stream conforming to the BD ROM standards based on a text subtitle information file containing text subtitle images display timing and text subtitle effects such as fade in and fade out. The material creation unit creates the interactive graphics stream that is the format of a menu screen conforming to the BD ROM standards based on a menu file describing bit map images for use in a menu as well as transitions and display effects of buttons displayed on the menu.

The scenario creation unit creates the scenario i.e. BD ROM scenario data in a format conforming to the BD ROM standards in accordance with information about the respective streams created by the material creation unit and the operation from the authoring staff member via the GUI. The scenario herein refers to a set of files such as an index file a movie object file and a playlist file. The scenario creation unit also creates a parameter file describing streams constituting respective AV clips for performing multiplex processing.

In order to create the update kit scenario data which is desired to be applied when the virtual package is constructed i.e. post construction scenario data is created.

The BD J creation unit serves to program BD J applications. The BD J creation unit creates a BD J application by drafting source cords of a BD J application program in response to a user request via a user interface such as the GUI. At this time a data file serving as the state signaling file position information of is incorporated as an external file into the BD J application program.

The multiplex processing unit multiplexes the video stream the audio stream the text subtitle stream the button stream and others described in the BD ROM scenario data into an MPEG2 TS formatted AV clip. Simultaneously the multiplex processing unit creates the clip information file corresponding to the AV clip. The multiplex processing unit creates the clip information file by the following method. The multiplex processing unit creates mark information simultaneously with creating the AV clip. More specifically the multiplex processing unit detects whereabouts of I pictures when the video stream contained in the AV clip among the streams created by the material creation unit is in the MPEG2 format or a VC 1 format and detects whereabouts of I pictures or IDR pictures when the video stream contained is in the MPEG4 AVC format. The multiplex processing unit then registers as the mark information marks each indicating a display time of a different one of the pictures in correspondence with what number source packet of the MPEG2 TS formatted AV clip contains top data of the picture. When two types of the video stream namely the primary video stream and the secondary video stream are contained in the AV clip mark information is created simultaneously for both types. The multiplex processing unit creates the clip information file by pairing the mark information created by the unit itself with the attribute information indicating an audio attribute a video attribute or the like for each stream.

The format processing unit arranges the BD ROM scenario data created by the scenario creation unit or the post construction scenario data the BD J application created by the BD J creation unit the AV clip and the clip information file created by the multiplex processing unit in the format conforming to the BD ROM standards. By doing so the format processing unit creates a BD ROM disc image or a virtual package differential disc image in the UDF format which is the file system conforming to the BD ROM standards. The BD ROM is manufactured by converting the created BD ROM disc image into BD ROM data to be pressed and performing press processing on the BD ROM data.

Furthermore in accordance with descriptions of the post construction scenario data the format processing unit creates a file e.g. the state signaling file in the first and the second embodiments containing information for uniquely specifying the update kit to be created.

Note that the file containing the information for specifying the BD ROM disc image to be created may be created based on the BD ROM scenario data.

The difference extraction unit compares the two scenario data and extracts differential data. For example the difference extraction unit extracts a file which is not found in the original disc image or a file which is updated using a binary compare.

In accordance with the differential data extracted from the extraction unit and the virtual file system differential disc image the update kit creation unit creates the merge management information file the signature information file a network playlist and a clip in conformity to the aforementioned data format of update kits and arranges the files and directories in the format conforming to the BD ROM standards. In the merge management information file created here BDMV JAR 11111 VFSData. info is recorded as the VFS file path of the state signaling file.

With reference to a description is next given of a method for creating the BD ROM disc image according to the embodiment.

In step S the material creation unit creates the video stream the audio stream the IG stream and the PG stream.

In step S the scenario creation unit creates the BD ROM scenario data describing the playback scenario such as the index file the movie object file and the playlist file.

In step S the multiplex processing unit creates the AV clip and the clip information file based on the BD ROM scenario data.

In step S the format processing unit creates the disc image conforming to the BD ROM standards by rearranging the BD ROM scenario data a multiplexed AV clip the clip information file and a BD J application byte code data in the file directory structure according to the BD ROM standards.

With reference to a description is next given of a method for creating the update kit according to the embodiment.

In step S the material creation unit creates the video stream the audio stream the IG stream and the PG stream required for the virtual file system.

In step S the scenario creation unit creates the post construction playback scenario such as the index file the movie object file the playlist file and the network playlist file.

In step S the difference extraction unit compares the above two scenarios and extracts the differential data.

In step S the BD J creation unit creates the post construction BD J application program desired to be applied when the virtual file system is constructed.

In step S the multiplex processing unit creates the AV clip and the clip information file based on the differential data.

In step S in accordance with descriptions of the post construction scenario data the format processing unit creates the file recording the information for uniquely specifying the update kit to be created.

Note that the file created here may only record information which serves as the key and another file or data base may be created as the information which can be associated with the key for uniquely specifying the update kit.

In step S the format processing unit creates the virtual file system differential disc image by arranging the file created in the step S which records the information for uniquely specifying the update kit the post construction scenario data the BD J application the AV clip and the clip information file in the format conforming to the BD ROM standards.

In step S in accordance with the differential data extracted from the difference extraction unit and the virtual file system differential disc image the update kit creation unit creates the merge management information file the signature information file the network playlist and the clip in conformity to the aforementioned data format of update kits and arranges the files and directories in the format conforming to the BD ROM standards.

The present invention is described above based on the embodiments. However the present invention is of course not limited to the embodiments. The following modifications are also within the scope of the present invention.

 1 The present invention may be the methods for controlling the playback device and the recording device shown by the processing procedures in the flowcharts described in the embodiments. Also the present invention may be computer programs with program codes for causing computers to operate in accordance with the processing procedures or may be digital signals representing the computer programs.

Also the present invention may be a computer readable recording medium such as a flexible disk a hard disk a CD ROM an MO a DVD a DVD ROM a DVD RAM a BD Blu ray Disc or a semiconductor memory on which the computer programs or the digital signals are recorded.

Also the present invention may be the computer programs or the digital signals which are transmitted via an electronic communications circuit a wireless or fixed line communications circuit and a network like the Internet.

Also the present invention may be carried out by another independent computer system by transferring the computer programs or the digital signals which have been recorded on the recording media or by transferring the computer programs or the digital signals via the network or the like.

 2 In the first and the second embodiments the menu display by the BD J application is described in which the display function is limited in accordance with the virtual package construction state.

The present invention is applicable to control other types of processing that require an access to an additional content data file in the local storage in accordance with the determination about the virtual package construction state. Examples of such types of processing that require an access to an additional content data file in the local storage include playback of a text subtitle audio and video in the local storage and execution of the BD J application added into the local storage.

The BD J application can in some cases access a file in the local storage regardless of the virtual package construction state. Examples of such cases include when the BD J application records data which necessitates reading and writing from into the local storage such as user information e.g. account name mail address recorded into an ADA Application Data Area a game score an operation history e.g. playback status of warning which is played back only at initial viewing and a history of discs which have been viewed in the past and cash information. Such cases also include when there is no need for accessing a file in the local storage via the virtual file control unit such as when files in the local storage are played back as text subtitle audio and video data.

 3 In the first embodiment as the method for prohibiting an access to an update kit in the local storage while the virtual package is in the prepared state it is illustrated that any options requiring an access to the update kit are not displayed. Other methods may be used for prohibiting an access to an update kit in the local storage. As one exemplary method options may be displayed on a menu with when selectable their colors and shapes modified. This gives control to the user not to select options for executing functions which might cause the malfunction. As another method control may be performed when the user selects one of the options which might cause the malfunction to present the user a message that the selected option is unexecutable the reason why unexecutable a procedure necessary for executing the option and others. As another method when the user selects one of the options which might cause the malfunction the selected function may be made executable i.e. construction of the virtual package is completed and title playback is started before executing the selected function. Yet another method is to ignore the user operation. Also one or more of the above methods may be combined.

 4 In the first embodiment as the method for acquiring an update kit the method for downloading the update kit via the network is illustrated. However the update kit may be acquired not only via the network but from another recording medium.

 5 The BD ROM disc may be configured to record a disc information file CCC.DINFO containing a set of the video image representing the update kit and the text information on top of the file structure shown in .

For example the data structure shown in may be used for the disc information file. In the example of the figure the disc information file stores a relative path to a thumbnail video file representing the content included in the BD ROM as well as the text information for each of the languages representing the content included in the BD ROM. In the text information a title name or the like of the content included in the BD ROM is described.

The disc information file may be used to implement in the playback device a function of displaying an image of the video file and the text information by the GUI or the like. This enables the user to easily grasp the disc content.

In the case where the above function is implemented in the playback device the content of the update kit can be displayed on a GUI screen in the playback device by using the state signaling file which stores the information similar to the disc information file. At the same time the state signaling file can be used as the GUI for the user to delete the update kit.

Specifically before the application acquires the update kit from the network or another recording medium a thumbnail image representing the update kit along with the text information such as a name of the update kit for example may be displayed as the content of the update kit. This enables the BD J application or the playback device to provide the user interface with which the user can easily select an update kit they want to acquire in accordance with preference of the user even when there are a plurality of update kits.

Furthermore there may be a case where a plurality of update kits are already recorded in the local storage and some of the plurality of update kits need to be deleted in order to record an additional update kit to be acquired since available space in the local storage is small. In such a case thumbnail images representing the update kits along with the text information such as names of the update kits for example may be displayed as the contents of the update kits. This enables the BD J application or the playback device to provide the user interface with which the user can easily select an update kit they want to delete from the local storage even when a plurality of update kits is recorded in the local storage.

Moreover there may be a case where a plurality of update kits are already recorded in the local storage and construction of the virtual file system is completed using one of the plurality of update kits. In such a case as the content of the update kit used for constructing the virtual file system a thumbnail image representing the update kit along with the text information such as a name of the update kit for example may be displayed by referring to the description of the state signaling file. This enables the BD J application or the playback device to provide the user interface with which the user can easily check whether or not construction of the virtual file system is completed and when construction of the virtual file system is completed check the content of the update kit used for constructing the virtual file system even when a plurality of update kits is recorded in the local storage.

 6 It is desirable that part of the components of the playback device that is mainly composed of logic devices such as the system target decoder the playback control unit the program executing unit and the virtual file control unit is realized as a system LSI.

The system LSI is obtained by implementing a bear chip on a high density substrate and packaging them. The system LSI is also obtained by implementing a plurality of bear chips on a high density substrate and packaging them so that the plurality of bear chips have an outer appearance of one LSI such a system LSI is called a multi chip module .

The system LSI includes a QFP Quad Flat Package type and a PGA Pin Grid Array type. In the QFP type system LSI pins are attached to the four sides of the package. In the PGA type system LSI a lot of pins are attached to the entire bottom.

These pins function as an interface with other circuits. The system LSI which is connected with other circuits through such pins as an interface plays a role as the core of the playback device .

Such a system LSI can be embedded into various types of devices that can play back images such as a television a game machine a personal computer a one segment mobile phone as well as into the playback device .

The DPP is an SIMD type processor where a plurality of elemental processors perform a same operation. The DPP achieves a parallel decoding of a plurality of pixels constituting a picture by causing operating units embedded in the respective elemental processors to operate simultaneously by a single instruction.

The IPP includes a local memory controller that is composed of an instruction RAM an instruction cache a data RAM and a data cache a processing unit that is composed of an instruction fetch unit a decoder an execution unit and a register file and a virtual multi processing unit that causes the processing unit to execute a parallel execution of a plurality of applications.

The MPU block is composed of peripheral circuits such as ARM core external bus interface Bus Control Unit BCU DMA controller timer and vector interrupt controller and peripheral interfaces such as UART GPIO General Purpose Input Output and sync serial interface.

The stream I O block performs data input output with the drive device hard disk drive device and SD memory card drive device which are connected onto the external busses via the USB interface and the ATA packet interface.

The AV I O block which is composed of audio input output video input output and OSD controller performs data input output with the television and the AV amplifier.

The memory control block performs reading and writing from to the SD RAM connected therewith via the external buses. The memory control block is composed mainly of an internal bus connection unit for controlling internal connection between blocks an access control unit for transferring data with the SD RAM connected to outside of the system LSI and an access schedule unit for adjusting requests from the blocks to access the SD RAM.

The following describes a detailed production procedure. First a circuit diagram of a part to be the system LSI is drawn based on the drawings that show structures of the embodiments.

As the constituent elements of the target structure are realized buses connecting between the circuit elements ICs or LSIs peripheral circuits interfaces with external entities and the like are defined. Further the connection lines power lines ground lines clock signals and the like are defined. For these definitions the operation timings of the constituent elements are adjusted by taking into consideration the LSI specifications and band widths necessary for the constituent elements are secured. With other necessary adjustments the circuit diagram is completed.

After the circuit diagram is completed the implementation design is performed. The implementation design is a work for creating a board layout by determining how to arrange the parts circuit elements ICs LSIs of the circuit and the connection lines onto the board.

After the implementation design is performed and the board layout is created the results of the implementation design are converted into CAM data and the CAM data is output to equipment such as an NC machine tool. The NC machine tool performs the SoC implementation or the SiP implementation. The SoC System on Chip implementation is a technology for printing a plurality of circuits onto a single chip. The SiP System in Package implementation is a technology for packaging a plurality of circuits by resin or the like. Through these processes a system LSI of the present invention can be produced based on the internal structure of the playback device described in each embodiment above.

It should be noted here that the integrated circuit generated as described above may be called IC LSI ultra LSI super LSI or the like depending on the level of the integration.

It is also possible to achieve the system LSI by using the FPGA Field Programmable Gate Array . In this case a lot of logic elements are to be arranged in a lattice and vertical and horizontal wires are connected based on the input output combinations described in LUT Look Up Table so that the hardware structure described in each embodiment can be realized. The LUT is stored in the SRAM. Since the contents of the SRAM are erased during power off when the FPGA is used it is necessary to define the Config information so as to write onto the SRAM the LUT for realizing the hardware structure described in each embodiment.

This embodiment is realized by middleware and hardware part corresponding to the system LSI hardware part other than the part corresponding to the system LSI interface part for the middleware interface part for the middleware and system LSI interface with the hardware part other than the part corresponding to the system LSI and the user interface part and when these are embedded in a playback device these operate in cooperation with each other to provide unique functions.

By appropriately defining the interface part for the middleware and the interface part for the middleware and system LSI it is possible to separately develop in parallel the user interface part middleware part and system LSI part of the playback device. This makes it possible to develop the product more efficiently. Note that the interface can be segmented in various ways.

A playback device a playback method a recording medium a recording device a recording method and an integrated circuit according to the present invention are capable of correctly determining whether data acquired from a network or the like is added into a ROM disc and displaying to a user only executable menu items. This realizes distribution of movie contents such as movie titles more attractive than before to markets and hence activates a movie market and a commercial device market. Accordingly the playback device the playback method the recording medium the recording device the recording method and the integrated circuit according to the present invention are highly applicable in a movie industry and a commercial device industry.

