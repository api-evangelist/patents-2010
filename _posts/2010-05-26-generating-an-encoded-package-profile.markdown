---

title: Generating an encoded package profile
abstract: Generation of cached representations of an encoded package profile. A physical or virtual client machine can host a set of installed software packages, including operating system, application, and/or other software. A package manager installed on the client machine can track the installed package complement, and updates available for those packages. The package manager can be configured to capture attributes of the set of installed packages, and generate an encoded identification of the installed packages using a hash or other algorithm. The encoded identification can be transmitted to one or more package servers or other management platform. The package server(s) can receive and decode the identifier, and insert that identifier and other package-related data into a local package cache. The package server(s) or other platform can configure package update or other activity using the cached representation of package profiles for one or more client machines.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762931&OS=08762931&RS=08762931
owner: Red Hat, Inc.
number: 08762931
owner_city: Raleigh
owner_country: US
publication_date: 20100526
---
The present teachings relate to systems and methods for generating cached representations of an encoded package profile and more particularly to platforms and techniques for capturing the attributes of a set of installed packages on each host or client machine in a managed network generating and transmitting an encoded identification of that package complement to a package server and configuring package update or other activity based on the cached representations of the host machines.

Users of physical or virtual machines commonly install software packages including package updates to those machines. The software packages can contain a set of related files chosen to perform a given application or task such as for example a group of software applications drivers and or other resources used to install and use messaging or media applications. In instances a software package can contain application software operating system software drivers patches and or other software components grouped as a logical set.

Software package managers exist to help a user initiate and perform software package updates such as for example the yum Yellowdog update manager package update manager available from Red Hat Inc. and others. In general available software package managers are configured to interact with the set of installed packages on a client and with one or more software package repositories and associated package servers to directly connect to those databases and download available package updates.

The process of managing package installations and initiating software package updates can involve however a significant degree of processing overhead including when the managed network in which the host or client machines are installed is large. In those and other cases tracking the package complement on each host machine can involve a significant amount of storage and or a significant amount of communications overhead. In such conditions the package server and or other remote management platform may have to track interrogate send commands or distribute downloads to thousands hundreds of thousands or greater numbers of host machines so that querying or interrogating each machine or groups of machines can require a significant amount of bandwidth and time. In those large scale and other network architectures it would be advantageous to be able to consult a local or high speed storage record of the package complements installed on a machine or groups of machines without a need to communicate with those machines directly and without a need to generate reports from a package repository each time an update or other management task is desired. It may be desirable to provide systems and methods for generating cached representations of an encoded package profile in which a package server or other management platform can capture encoded identifications of package installations from client machines and store those encoded package identifications to a local cache memory for rapid access for use in package updating inventorying and or other management activities.

Embodiments of the present teachings relate to systems and methods for generating cached representations of an encoded package profile. More particularly embodiments relate to platforms and techniques for generating cached representations of an encoded package profile. A package server and or other remote management platform can receive an encoded identification of the set of installed packages hosted on a client or host machine. The encoded identification can be or include a hashed representation of the set of installed packages on a given target or client based on the package names file names installation dates and times sizes and or other attributes of the set of installed packages. The encoded identification can be transmitted to a set of one or more remote package servers which manages the package installations for the client or host machines in a managed network. The one or more remote package servers and or other remote management platform or logic can store the encoded identifications for the managed machines in a package cache record stored in a local high speed package cache such as high speed electronic memory and or other cache memory or storage. The one or more package servers can store the encoded identifications and associated package data in the package cache record keyed on machine IDs or other fields and sort or order the information based on machines having matching identifiers and therefore the same package installation image. The one or more package servers or other platform can then directly access the package cache record to determine the package complement update status and or other aspects of the machine state of the subject machines rather than interrogating the one or more clients across the managed network. The one or more clients can in aspects transmit a package update notification to the one or more package servers when updates are received or installed to trigger cache updates to the encoded identifiers or otherwise maintain cache coherency. When target machines are identified in the package cache record the one or more package servers can distribute package updates to the client machines. In aspects on each client machine a local package manager can track and manage the installation of one or more software packages and or updates to those packages which may be referred to together as a software package update on those client host target and or other machines. These and other embodiments described herein address the various noted shortcomings in known package update technology and provide a user with enhanced package and system management capability for inventorying encoding tracking updating and managing their software package resources with more storage and processing efficiency including less need for exchanges across the network to inventory client package sets as well as to perform additional management and configuration functions with enhanced capabilities.

Reference will now be made in detail to exemplary embodiments of the present teachings which are illustrated in the accompanying drawings. Where possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

In aspects each package in the set of installed packages can include a set of component files such as executable files and or other files or resources. In aspects the set of component files of the set of installed packages can contain executable files for or otherwise support or be associated with a set of applications installed on the one or more clients . In aspects the set of applications can be or include types of applications or other software such as for example messaging applications database applications media applications spreadsheet or modeling applications social networking applications word processing applications and or other applications or utilities and can in aspects include an operating system drivers and or components thereof. The set of installed packages and or the set of component files of those packages can have an associated set of package attributes which reflects or records the file names versions dates storage sizes software requirements an or other attributes related to the software packages including their updates installed on the one or more clients and reflected in the set of installed software packages .

In aspects the package manager can communicate with a network interface configured to connect to one or more networks such as the public Internet or other public or private networks. The package manager can thereby connect to one or more package servers and associated one or more package repositories hosting a set of software packages including application package updates and or other software related to packages and their associated resources.

In aspects the package manager can interact with the set of installed packages and one or more package servers and associated one or more package repositories to inspect inventory encode configure test update and or otherwise manage the set of installed packages operating on the one or more clients . The package manager can for example provide a user with a set of package update options displayed via a user interface such as a graphical user interface or others to select various test configuration and or other management activities on the set of installed packages . The set of package update options can include options such as one or more selections to select packages for inventorying installation and or update installation options and or other options or parameters for the downloading of package updates from the one or more package servers and their associated one or more package repositories to the set of installed packages .

In aspects the package manager can access set of installed packages and or set of component files of those packages to generate an encoded identifier of the set of installed packages . In aspects the encoded identifier can be based on encoded or derived from the set of package attributes package of the set of installed packages the set of component files and or other data. The encoded identifier can in aspects be generated by applying a hash function to the set of package attributes such as by applying a hash function to the package name file name package or file size installation date time installation location and or other data associated with the set of installed packages . The encoded identifier can thereby be generated as an alphanumeric string representing the package complement present and installed in the one or more clients . Other encoding algorithms data fields formats or information can be captured performed and or encoded in the encoded identifier . Once captured and generated the package manager can transmit the encoded identifier to the one or more package servers via the one or more networks .

As illustrated for example more particularly in the one or more package servers can receive the encoded identifier from each of the one or more clients in the managed network . The one or more package servers can place the encoded identifier from each of the one or more clients in a package cache record stored in a package cache . In aspects the package cache can be or include high speed electronic memory such as random access memory RAM or static random access memory SRAM and or other memory storage or media. In aspects the package cache can be installed or hosted in the one or more package servers themselves for instance via a system bus connected to a processor in the one or more package servers . In aspects the package cache can have a faster access time and or lower latency for data access than the one or more repositories . In aspects the one or more repositories can as noted store package updates and or other software or code for instance in a database or other data store. By accessing the package cache record stored in the comparatively high speed memory or storage of the package cache the one or more package servers can identify order and manage the one or more clients in the managed network in various aspects without having to access the one or more repositories and or incurring the overhead of communicating with the one or more clients to extract all necessary information for package updates or other management activities.

Thus for instance the one or more package servers can access the package cache record to determine which of the one or more clients in the managed network currently hosts or has installed a certain package such as Package jjk3q45af1de3a45ta28 which may be encoded in the encoded identifier as Package or other identifier. Those machines currently hosting that package in the set of installed packages can be scheduled to receive a package update such as an update of that package to the next available update version of that package. The one or more package servers can then initiate the distribution and installation of the package update to the one or more machines having that matching encoded identifier using files extracted from the one or more repositories and or other sources of package data. In aspects in conjunction with package update activities and for other reasons the package manager of the one or more clients can be configured to generate a package update notification each time a subject machine receives and installs a package update. The package manager can be configured to transmit the package update notification to the one or more package servers at the time of any package update and or at other times. According to embodiments receipt of the package update notification from the one or more clients can indicate to the one or more package servers that the subject client or host has changed state in terms of its set of installed packages . The one or more package servers to maintain data coherency or currency may then interrogate the one or more clients to request an updated encoded identifier for the set of installed packages on that machine. The one or more package servers can be configured to delay any update activity until all of the one or more clients reporting a package update notification have been queried inventoried and have transmitted an updated encoded identifier with the most recent set of installed packages reflected in the encoded identifier . In this manner the one or more package servers can be assured of distributing the most current or correct package update to the one or more clients based on their most recent package profile or machine state.

In aspects the one or more package servers can perform other network management operations besides package updates on one or more clients based on the encoded identifier and other data associated with the set of installed packages on those machines. For instance in aspects the administrator or other user of managed network may wish to inventory and identify all of the one or more client machines having a precisely equal encoded identifier . This may permit for instance the identification and or grouping of machines containing an identical set of package and or file images since the likelihood of any two machines randomly containing the same packages and or files without representing the same instance or image of a machine whether physical or virtual is low. The one or more package servers can thereby perform a discovery process on managed network and can in embodiments locate one or more clients to group or configure into a related set of targets for instance to define a class of clients or workstations grouped for a specific engineering financial and or other technical or other task. Other management actions can be performed on the one or more clients.

In aspects as shown the package cache record can encode and store information that can be keyed on a field identifying one or more clients by a machine ID such as a serial number media access control MAC address and or other address or identifier. In aspects the package cache record can store an encoded identifier of the set of installed packages for each host or client in the one or more clients which is recorded in the package cache record . As described herein the encoded identifier received from each individual machine in one or more machines can be encoded from the set of package attributes for each of the set of installed packages and or the set of component files contained with those packages. The package cache record can likewise store a set of additional attributes or data associated with each of the one or more clients and their associated set of installed packages including merely illustratively the installation date time package size installation location such as directory or library location and a field indicating whether a package update has been scheduled for each machine.

The package cache record can furthermore store a record of any package update notification received from a given host or client indicating to the one or more package servers that the subject machine has undergone an update to the set of installed packages since the last encoded identifier has been received and stored to the package cache record . In aspects the one or more package servers and or other logic can schedule individual machines having a package update notification to be interrogated to inventory their package complements and generate an updated encoded identifier . In aspects the one or more package servers and or other logic can schedule the machines having a package update notification at different times and or the same times and or based on different criteria of conditions. For example the one or more package servers and or other logic can collect a list of those machines for whom a package update notification has been received and request an updated encoded identifier from those machines at or around the time that a package update for those and or other machines is scheduled. In such cases the one or more package servers and or other can be assured that the encoded identifier for all the machines under management in the one or more clients is accurately reflected and up to date in the package cache record and that package update operations can therefore take place based on the correct package complements. In aspects the updating of the one or more clients for which a package update notification has been received can be performed at other times such as for example during overnight or other off peak periods in managed network so that a greater amount of bandwidth is available to distribute the package updates to those machines. Other times conditions and or criteria for carrying out the distribution of any package updates can be used.

In addition to fields reflecting the encoded identifier machine ID and a record of the package update notification the package cache record can likewise store other information related to the package complement and machine state for the one or more clients including for instance an indication of the execution state executing processes and or user authorizations for those machines. Other data fields identifiers attributes commands and or other information can be included in the package cache record .

In the package manager of one or more clients can generate the encoded identifier of the set of installed packages for each respective client or host. In aspects the encoded identifier can comprise an output or object generated using a hash function operating on text strings or other data reflecting one or more attributes in the set of package attributes . In cases where a hash function or hash operator is used the hash function can be or include SHA1 Secure Hash Algorithm 1 SHA2 Secure Hash Algorithm 2 SHA3 Secure Hash Algorithm 3 and or other hash functions operators or routines. In aspects the encoded identifier need not be based on a hash function but can in addition or instead be based on other classes of functions or algorithms.

In the package manager and or other logic can transmit the encoded identifier of the set of installed packages to the one or more package servers and or other remote management platform s . In the one or more package servers and or other remote management platform s can receive and decode the encoded identifier such as performing a lookup against a hash table and or performing other processing or decoding. In the one or more package servers can order and or store the encoded identifier the machine ID the package update notification and or other information related to the set of installed packages in the package cache record of the one or more package servers . The package cache record can for instance be stored in the package cache of the one or more package servers such as for example a local high speed electronic memory and or other memory or data store. In the one or more package servers can identify and or group the data related to the one or more clients in the package cache record based on the set of installed packages as decoded by the one or more package servers and or other logic. For instance in embodiments as illustratively shown in machines having an identical complement of set of installed packages and or set of component files and a resulting identical encoded identifier can be grouped or listed together in the package cache record since they in one regard can represent images of identically configured machines.

In the one or more package servers and or other remote management platforms or logic can generate a package update and or other management processes commands and or functions based on the package information contained in the package cache record . In aspects the package update and or other commands or data can be transmitted via a secure channel and or in an encoded format. In the one or more package servers can receive a package update notification from the one or more clients as appropriate. For instance the one or more clients can be configured to automatically generate a package update notification at any time the set of installed packages has been updated or changed. In aspects the package update notification can be generated at other times and or based on other conditions or criteria. In the one or more package servers and or other remote management platform or logic can receive an updated version of the encoded identifier for the one or more client machines . In aspects the one or more package servers and or other remote management platform or logic can receive an updated version of the encoded identifier for all of the one or more client machines . In aspects the one or more package servers and or other remote management platform or logic can receive an updated version of the encoded identifier for a subset of the one or more client machines which can be or include only those machines reporting or transmitting a package notification update . In aspects the updated version of the encoded identifier can be generated based on scheduling or conditions detected or processed by the package manager of the one or more clients themselves. In aspects the updated version of the encoded identifier can also or instead be generated based on a command or other data transmitted from the one or more package servers to the one or more clients on a demand pull or interrogation basis.

In the one or more package servers and or other remote management platform or logic can interrogate extract and or receive the updated version of the encoded identifier from the one or more clients based on the transmission of package server commands and or other remote management activity. In the one or more package servers and or other remote management platform or logic can update the package cache record in package cache as appropriate. In as understood by persons skilled in the art processing can return to a prior processing point jump to a further processing point or end.

The foregoing description is illustrative and variations in configuration and implementation may occur to persons skilled in the art. For example while embodiments have been described in which a unitary package manager locally installed one each machine in one or more clients is configured to control package update activity including the encoding and reporting of an encoded identification in embodiments multiple applications or software can interact to control the downloading installation testing and other management of software packages. For further example while embodiments have been described in which package update activity is conducted on one client of a set of one or more clients in embodiments multiple local or remote targets clients and or other machines can register to package manager and or other logic or resources to receive or perform package inventory update and or management activity. Other resources described as singular or integrated can in embodiments be plural or distributed and resources described as multiple or distributed can in embodiments be combined. The scope of the present teachings is accordingly intended to be limited only by the following claims.

