---

title: Generating and displaying active reports
abstract: Embodiments of the present invention enable the generation and display of active reports. Applications of the present invention include its use in embodiments of a web-based product for managing an Information Technology (IT) infrastructure although the present invention is not limited to such applications. In embodiments, an active report is an active report file comprising report data and a user interface (UI) reference to a network location of code that defines an interactive UI comprising graphical user interface (GUI) components to be rendered when displaying the report data. In embodiments, the interactive UI is defined by UI code (such as an Adobe Flash Small Web Format (SWF) file) that also defines the UI of a rich internet application (RIA). In embodiments, the UI reference may be a link designating a location to the location of the UI code on a network, such as the Internet.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208141&OS=09208141&RS=09208141
owner: ORACLE INTERNATIONAL CORPORATION
number: 09208141
owner_city: Redwood Shores
owner_country: US
publication_date: 20100205
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention pertains generally to data processing and display and relates more particularly to generating and displaying active reports.

Effective and efficient data management is an important objective for modern business enterprises and other organizations. A key aspect of data management is providing a variety of users with access to widely distributed sources of enterprise data. One strategy for providing this access is to develop a set of data reporting tools that present data to multiple sets of users based on their specific usability requirements.

In one example enterprise users involved in Information Technology IT system management must monitor and perform analysis on large amounts of system performance data being collected from the IT system platform. Much of this data is collected and stored so that analyses can be performed to identify current as well as historical system performance trends. Providing access to clear and complete data reports improves the quality of the analyses. Distributing data reports to users at different locations within the organization provides more efficient collaboration and improved user productivity.

System data from an IT infrastructure may be collected and presented to users in stand alone data reports. Examples of collected system data reports include diagnostic data reports performance tuning data reports and real time application testing data reports. Stand alone reports may be accessed by users who are connected to the data storage and receive live updates of the systems data and or accessed by users such as tech support personnel and application developers who are not connected to the data storage and cannot receive live updates of the data. Additionally stand alone reports may be used to complement system data being collected in real time by system administration software applications because stand alone reports enable access to system data which are often transient such as quality assurance QA runs in memory performance data and system workload statistics.

Typically stand alone data reports are formatted for display as plain text or formatted as a static Hypertext Markup Language HTML document. A stand alone data report having this type of formatting may then be transmitted to a user and rendered for display within a web browser text application or other application that is local to the user without requiring additional specialized software. depicts a screen shot of a browser view of an exemplary prior art data report that represents data collected during execution of a create index SQL statement. The report has been formatted as a static HTML document for display as a set of tables representing overall parameters of the execution event global statistics of system performance activity parallel execution details this query was executed on a grid IT platform and SQL plan execution details .

Despite providing more display features than a plain text format a data report formatted as an HTML document has limitations. HTML does not include built in support for graphics such as charts and interactive Graphical User Interface GUI widgets so a data report formatted as a single HTML document typically is displayed as a single static page in like manner to . This type of display has usability limitations such as being difficult for a user to discover data trends or to interact with the display in order to view related information about selected subsets of the report data. Adding features such as an interactive interface that improve the usability of a static HTML document by making it an active report typically requires explicitly incorporating additional non HTML entities such as images scripts or graphics code such as an Adobe Flash Small Web Format SWF file. These incorporated entities must either be available locally embedded in the HTML file or provided along with the HTML file as additional files and directories in order to display the additional features when the document is rendered. The additional non HTML entities associated with an HTML file may increase the size of data to be transported limiting the portability of the file. Additional local configuration requirements for users viewing a file may limit accessibility of the file.

In addition the same set of collected data may be accessed in real time by a user via the interactive GUI of a Rich Internet Application RIA as well as be accessed via a static display of a stand alone data report. A user accessing the same set of collected data may be required to learn both display presentation formats since the look and feel of the two display presentations are different. This user knowledge requirement limits user productivity and adds resource cost to an enterprise system.

Embodiments of the present invention enable the generation and display of active reports. Applications of the present invention include its use in embodiments of a web based product for managing an Information Technology IT infrastructure although the present invention is not limited to such applications. In embodiments an active report is an active report file comprising report data and a user interface UI reference to a network location of code that defines an interactive UI comprising graphical user interface GUI components to be rendered when displaying the report data. In embodiments the UI reference may be a link designating a location of the UI code on a network such as the Internet an intranet or an extranet.

In embodiments the interactive UI of the active report is the same or similar to an interactive UI available in rich internet applications RIAs . This allows a user who does not have access to the RIA to view and interact with the report data in an interactive UI that provides the same or similar interactive report functionality as the UI provided in the RIA. In alternative embodiments the interactive UI provided to a user viewing an active report may be different from the interactive UI provided to users of the RIA. In embodiments the active report may be shared with a non accessor of the native application that generated the report by sending the report via email or alternatively a non accessor may access the report from a shared file location.

Some features and advantages of the invention have been generally described in this summary section however additional features advantages and embodiments are presented herein or will be apparent to one of ordinary skill in the art in view of the drawings specification and claims hereof. Accordingly it should be understood that the scope of the invention shall not be limited by the particular embodiments disclosed in this summary section.

In the following description for purposes of explanation specific details are set forth in order to provide an understanding of the invention. It will be apparent however to one skilled in the art that the invention can be practiced without these details. Furthermore one skilled in the art will recognize that embodiments of the present invention described below may be implemented in a variety of ways including software hardware or firmware or combinations thereof. Accordingly the figures described herein are illustrative of specific embodiments of the invention and are meant to avoid obscuring the invention.

Components or modules shown in block diagrams are illustrative of exemplary embodiments of the invention and are meant to avoid obscuring the invention. It shall also be understood throughout this discussion that components may be described as separate functional units which may comprise sub units but those skilled in the art will recognize that various components or portions thereof may be divided into separate components or may be integrated together including integrated within a single system or component.

Furthermore connections between components within the figures are not intended to be limited to direct connections. Rather data between these components may be modified re formatted or otherwise changed by intermediary components. Also additional or fewer connections may be used. It shall also be noted that the terms coupled or communicatively coupled shall be understood to include direct connections indirect connections through one or more intermediary devices and wireless connections.

Reference in the specification to one embodiment preferred embodiment an embodiment or embodiments means that a particular feature structure characteristic or function described in connection with the embodiment is included in at least one embodiment of the invention and may be in more than one embodiment. The use of the phrases in one embodiment in an embodiment or in embodiments in various places in the specification are not necessarily all referring to the same embodiment or embodiments.

The use of certain terms in various places in the specification is for illustration and should not be construed as limiting. Usage of the term service is not limited to describing a single function usage of the term also may refer to a grouping of related functions or functionality. Similarly usage of the term resource is not limited to describing a single resource the term also may be used to refer to a set of resources that may either be distributed or aggregated within a computing environment.

The present invention provides an active report that may be used for example in a web based product for managing an Information Technology IT infrastructure such as Enterprise Manager Grid Control by Oracle International Corporation of Redwood Shores Calif. The examples discussed below are for illustrative purposes only and not intended to limit the invention to these examples. Those skilled in the art will recognize the general applicability of the present invention.

In embodiments of the present invention an enterprise application framework may support system administration applications which are rich internet applications RIAs that provide users such as subscribers or licensees with real time access to IT system data. As is well known to those skilled in the art rich internet applications RIAs are web applications having rich interactive user interfaces UIs that provide functionality and performance characteristics on a web client that are similar to the characteristics of UIs found in desktop applications. A rich interactive UI typically is displayed as a graphical user interface GUI that has sophisticated graphics features including for example charts images animation and GUI components e.g. widgets such as drop down menus sliders buttons and dynamic pop up windows.

The UI of an RIA is defined by a set of software components within the presentation tier of a rich internet application framework an RIA framework that are rendered locally on a web client. In addition to the UI software components an RIA framework also includes software components for delivering the RIA application UI to a web client as well as for interfacing the UI with other application components deployed into the RIA framework. Examples of RIA frameworks include Adobe Flash Adobe Flex AIR Java JavaFX Mozilla XUL and Microsoft Silverlight.

In embodiments of the invention an active report file enables a user receiving the file at a location disconnected from an RIA framework to view the report data within the file using the same rich interactive UI as displayed on a web client of an executing RIA. Thus in embodiments a user who does not have access to that functionality such as a non subscriber or non licensee is able to view and interact with the report data via a UI having the same look and feel as the RIA UI without requiring the user to either access the RIA framework or to locally install additional software assuming that the non accessor has software to render the UI which is typically readily available.

One example of RIA UI code is an Adobe Flash Small Web Format SWF file. A SWF file defines a display sequence of graphics objects and images that may include animation and sound. An RIA UI defined by a SWF file is processed and rendered locally on a web application client by an Adobe Flash Player application. Those skilled in the art will recognize that a variety of RIA frameworks and UI code implementations exist and that the RIA framework and UI code implementation choice is not critical to the invention.

In embodiments a web application user may issue a request to generate an active report file that includes an association of a set of data and UI code . In embodiments an active report file may be an HTML file although those skilled in the art will recognize that a variety of file formats exist and that the choice of file format is not critical to the invention. In embodiments an active report file comprises a UI reference to the code to be rendered when the active report is viewed. In various embodiments the UI reference may be a link such as a Uniform Resource Identifier URI to a location of the UI code at an external data source that is external to the active report file. For example the URI may link to a server or other location on a network such as the Internet an intranet or an extranet that stores the UI code.

One advantage of including a reference to the UI code in the active report rather than including the UI code directly in the active report is improved portability of the active report file. For example the UI code e.g. SWF file is typically a large file. Including the file in the active report would substantially increase the file size of the active report making storage or transmission of the active report more difficult. Further by including a reference to the UI code the UI may be updated with new versions at the network location so that the most recent version of the UI is available to the user accessing the active report. Further if there are multiple UI code implementations available the same active report may present a different UI to different groups of users. For example the UI reference provided in an active report file accessible to corporate internal users may be different from the UI reference provided in the active report file accessible to external users. Further since the UI and the corresponding data cannot be rendered in the active report without accessing the UI code from the network location the provider of the UI code may limit or even block access to the interactive UI features for certain users. For example the UI code may only be available for a day or two to provide a user with a demonstration or limited access time to the report data.

There are additional benefits for providing an interactive UI as opposed to static HTML text reports. For example one advantage of utilizing the same or similar UI for users and non user non accessor is that the same information is shared in the same or similar presentation format making it easier for the use and the non user to discuss the data. Furthermore a user when viewing an active report using the non accessor UI does not need to learn two UIs to view and interact with the data. In addition this also helps reduce development costs. And it should be noted that having a single solution for both improves quality of development and quality for usage.

In embodiments the UI code may be located within the application server platform that hosts the RIA application and or be located at an external data source such as a server on a network. In embodiments the UI code located within the application server platform may be the same as the UI code located at an external data source or in other embodiments UI code and UI code may be different versions of the same UI code.

In embodiments a user receiving an active report file views a locally rendered active report display of the data using an interactive UI defined by the referenced UI code. In embodiments the UI code to be rendered in the local browser of a user who is disconnected from the application server platform may be retrieved by accessing the UI code from the location e.g. a network location specified by the UI reference extracted from the active report. In embodiments user is a non accessor of the application running on the application server platform but is provided the same or similar interactive display and reporting functionality available to an accessor of the application e.g. web application user . In various embodiments a user may receive an active report file via email and or retrieve a saved active report file from data storage such as a file server or a database.

In embodiments an active report file may be generated by a web application user via interaction with an RIA UI displayed on a web client. In alternate embodiments a user who has command line access to a data file server such as a database may generate an active report file via a command line entry and or via an application programming interface API using a programming language such as SQL. In embodiments a generated active report file may be saved in data storage and or be emailed to another user.

Each figure depicts a different view or display screen of one of the tabbed frames which a user may select within the Details frame . In the plan statistics tab has been selected and the SQL plan execution data subset is displayed in the frame. By selecting a mouse right button the user may toggle the data displayed in the table between IO Requests and IO Bytes. This is an example of the interactive nature of an RIA UI compared to a static HTML UI as described with respect to .

In the parallel tab has been selected and the parallel execution data subset is displayed. As in the plan statistics tab view of the user may toggle the data displayed in the table between IO Requests and IO Bytes by selecting a mouse right button. In the activity tab has been selected and the system performance activity data subset is displayed in graphical form. The graph is updated in real time during the execution event from a database and or cached system data and will display a summary of execution behavior of the event over time. This data is not displayed in the static HTML report of .

In embodiments the interactive UI of the RIA may be defined by UI code provided by the application server platform . For example in one embodiment the UI code may comprise an Adobe Flash Small Web Format SWF file. In embodiments the UI code is provided to the user s web client browser from the application server platform and the defined UI is locally rendered along with the report data in the user s browser . For example if the UI code comprises a SWF file the UI and the report data are rendered for display within the user s browser by an Adobe Flash player installed in the browser . Those skilled in the art will recognize that a variety of UI code implementations exist and that the UI code implementation and display rendering choices are not critical to the invention.

In embodiments of the invention web application user may initiate a request to generate an active report of the data by selecting one of the buttons displayed in the RIA UI. In embodiments the generated report saves a snapshot of the data being collected at the instant the report is generated. By selection of one of the buttons the web application user may initiate requests to save or email the generated active report respectively. In other embodiments a request for the generation of an active report may be initiated from a command line interface to a data source as previously discussed. Thus in embodiments a user who does not have access to the application server platform and the real time RIA UI may request the generation of an active report file and additionally may use a command line interface to save and or email an active report.

Like the real time RIA UI the active report UI display view contains an Overview frame and a Details frame containing three tabbed data subset frames each of which can be viewed by selection of its respective tab. In embodiments an active report UI may include report specific UI components e.g. text and or graphics features not found within the real time RIA UI of and . For example the active report UI in and includes a drop down menu selection widget providing the user viewing the report with a choice of the report language used in the display. In embodiments the active report UI does not contain the buttons for generating emailing or storing an active report file that are displayed in the real time RIA UI since these functions are not relevant to the display of an active report.

In like manner to and and each depict a different view of one of the tabbed frames which a user may select within the Details frame . illustrates an analogous view to showing the plan statistics tab . Like the RIA UI the active report user may toggle the data displayed in the table between IO Requests and IO Bytes by selecting a mouse right button. illustrates an analogous view to showing the parallel tab . Like the RIA UI the active report user may toggle the data displayed in the table between IO Requests and IO Bytes by selecting a mouse right button. illustrates an analogous view to showing the performance activity tab . Because the active report represents a snapshot of collected data the active report activity graph simply summarizes the set of activity data collected during the execution event up to the time that the report was generated and does not update in real time like the graph represented in .

A user may display related information about the entities within the SQL execution plan by selecting any of the icons in the display. In the illustration the user has selected the hash join icon . The icon is highlighted indicating that it is selected and two dynamic popup windows are displayed which provide additional information that identifies the selected icon and additional details related to the icon .

In embodiments report data processor generates report data in response to receiving an active report generation task request . In embodiments the report data is data retrieved from data storage such as a data file server or database which may represent real time data at a particular point in time. In embodiments the received report data may be organized and formatted into a data report such as a structured document e.g. an XML document .

In embodiments active report generator generates an active report file. In embodiments the active report file comprises the report data and a reference to the UI code to be rendered when the active report is displayed. As previously discussed the UI code may define an interactive UI comprising one or more GUI components. In various embodiments the UI reference may be a link such as a Uniform Resource Identifier URI to a UI code location that is external to the active report file as previously described. For example the URI may be a universal resource locator URL that points to a server located on a network such as the Internet an intranet or an extranet that stores UI code.

In embodiments the active report generation task request may identify one or more sets of report data to be retrieved. In embodiments the set of retrieved report data may correspond to a subset of the data available for display by an RIA UI but be a superset of the data displayed by the RIA UI. For example the set of report data for an SQL Monitoring report see may be a different subset of available data from the set of report data for an SQL details report see .

In embodiments report file processor extracts report data and a UI reference from an active report file in response to receiving an active report display task request . In embodiments the UI reference may be a link such as a URI designating the location of the UI code that defines the UI and report file processor retrieves the UI code from the location identified by the URI. As previously discussed the link may designate a network location that is remote from the report file processor execution platform and the UI code may be retrieved from the remote location via a network connection.

In embodiments UI display framework generates an active report display by rendering the extracted report data and an interactive UI defined by the retrieved UI code on a display. In embodiments the UI code may be the same as the UI code that defines the UI rendered on an application client for a rich internet application RIA such as a UI defined by an Adobe Flash SWF file and rendered by an Adobe Flash Player installed on the application client. For example a user who does not have access to the RIA that provided the report data can still have interactive reporting functionality when viewing the active report by accessing the same or similar UI code used by the RIA application. In embodiments the interactive UI may comprise multiple display screens such as the active report UI designs illustrated in and . Those skilled in the art will recognize that a particular UI design choice is not critical to the invention.

In embodiments data is accessed and displayed to a user of an application via an application interactive UI . For example in embodiments a rich interactive application RIA accesses data in real time from a data source such as a database or other storage location and displays the data to a user via an application interactive UI.

In embodiments an active report generation task request is received . In embodiments an active report generation task request may be generated by the application user through the interactive UI of the RIA. In alternate embodiments a user who has command line access to the data source may generate an active report generation task request via a command line entry and or via an application programming interface API using a programming language such as SQL. In embodiments the active report generation task request may specify a type of active report to be generated. In embodiments an active report type may correspond to a type of report data.

In embodiments an active report file comprising a set of the accessed data and an associated UI reference is generated . In embodiments the set of accessed data is a snapshot of the real time data at a particular point in time. In embodiments report data may be retrieved from one or more local or remote data sources such as persistent data storage e.g. a database and or computer memory. In embodiments the set of report data to be retrieved may be specified in the active report generation task request . In embodiments the received report data may be organized and formatted into a data report such as a structured document e.g. an XML document . In embodiments of method the retrieved set of report data may correspond to the set of data displayed by an RIA UI. In alternate embodiments the retrieved set of report data may be a superset of the data displayed by the RIA UI and may be selected for retrieval based on procedural logic.

In embodiments the UI reference designates a network location of code that defines a second interactive UI as discussed previously. In embodiments the code is accessed from the network location and the second interactive UI is rendered when displaying the data from the active report file. In embodiments the second interactive UI is the same or similar to the application interactive UI. This allows a user who does not have access to the RIA application to view the report data in an interactive UI that provides the same or similar interactive report functionality that is available to the application user via the application interactive UI. In alternative embodiments the application interactive UI and the second interactive UI may be different interactive UIs that provide different report functionality.

In alternate embodiments of method the active report file may be generated by configuring an instance of an active report template as discussed previously.

In embodiments an active report file to be displayed is received . In embodiments the active report file to be displayed is included in an active report display task request . In embodiments the active report file comprises the report data and a reference to UI code to be rendered for display of the active report. As discussed previously the UI reference may be a link designating the location of the UI code that defines the UI. In embodiments the link may designate a location that is external to the active report file e.g. a server on the Internet or other network location .

In embodiments the report data are extracted from the active report file. In embodiments the associated UI code is accessed using the UI reference extracted from the active report file. In embodiments the UI code is retrieved from a remote location via a network connection. In embodiments an interactive display of the active report is generated by rendering the report data and an interactive UI defined by the UI code on a local display device such as a web browser on a computer.

It shall be noted that the present invention may be implemented in any instruction execution computing device or system capable of processing data. The present invention may also be implemented into other computing devices and systems. Furthermore aspects of the present invention may be implemented in a wide variety of ways including software hardware firmware or combinations thereof. For example the functions to practice various aspects of the present invention may be performed by components that are implemented in a wide variety of ways including discrete logic components one or more application specific integrated circuits ASICs and or program controlled processors. It shall be noted that the manner in which these items are implemented is not critical to the present invention.

An addressable memory coupled to processor may be used to store data and software instructions to be executed by processor . Memory may be for example firmware read only memory ROM flash memory non volatile random access memory NVRAM random access memory RAM or any combination thereof. In one embodiment memory stores a number of software objects otherwise known as services utilities components or modules. One skilled in the art will also recognize that storage and memory may be the same items and function in both capacities. In an embodiment one or more of the components of A B and may be modules stored in memory and or storage and executed by processor .

In an embodiment computing system provides the ability to communicate with other devices other networks or both. Computing system may include one or more network interfaces or adapters to communicatively couple computing system to other networks and devices. For example computing system may include a network interface a communications port or both each of which are communicatively coupled to processor and which may be used to couple computing system to other computer systems networks and devices.

In an embodiment computing system may include one or more output devices coupled to processor to facilitate displaying graphics and text. Output devices may include but are not limited to a display LCD screen CRT monitor printer touch screen or other device for displaying information. Computing system may also include a graphics adapter not shown to assist in displaying information or images on output device .

One or more input devices coupled to processor may be used to facilitate user input. Input device may include but are not limited to a pointing device such as a mouse trackball or touchpad and may also include a keyboard or keypad to input data or instructions into computing system .

In an embodiment computing system may receive input whether through communications port network interface stored data in memory or through an input device from a scanner copier facsimile machine or other computing device.

In embodiments computing system may include one or more databases some of which may store data used and or generated by programs or applications. In embodiments one or more databases may be located on one or more storage devices resident within a computing system . In alternate embodiments one or more databases may be remote i.e. not local to the computing system and share a network connection with the computing system via its network interface . In various embodiments a database may be a relational database such as an Oracle database that is adapted to store update and retrieve data in response to SQL formatted commands.

One skilled in the art will recognize no computing system is critical to the practice of the present invention. One skilled in the art will also recognize that a number of the elements described above may be physically and or functionally separated into sub modules or combined together.

It shall be noted that embodiments of the present invention may further relate to computer products with a computer readable medium that have computer code thereon for performing various computer implemented operations. The media and computer code may be those specially designed and constructed for the purposes of the present invention or they may be of the kind known or available to those having skill in the relevant arts. Examples of computer readable media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs and holographic devices magneto optical media and hardware devices that are specially configured to store or to store and execute program code such as application specific integrated circuits ASICs programmable logic devices PLDs flash memory devices and ROM and RAM devices. Examples of computer code include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. Embodiments of the present invention may be implemented in whole or in part as machine executable instructions that may be in program modules that are executed by a computer. Examples of program modules include libraries programs routines objects components and data structures. In distributed computing environments program modules may be physically located in settings that are local remote or both.

It will be appreciated to those skilled in the art that the preceding examples and embodiment are exemplary and not limiting to the scope of the present invention. It is intended that all permutations enhancements equivalents combinations and improvements thereto that are apparent to those skilled in the art upon a reading of the specification and a study of the drawings are included within the spirit and scope of the present invention. It is therefore intended that the following claims include such modifications permutation and equivalents as fall within the spirit and scope of the present invention.

