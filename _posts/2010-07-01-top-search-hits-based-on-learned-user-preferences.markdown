---

title: Top search hits based on learned user preferences
abstract: At least certain embodiments of the present disclosure include a method to identify top hits in search result based on learned user preferences. In one embodiment, a user search query for records is received from a user. The user search query may contain an alphanumerical string. Records in a multifunctional device are searched to find those that match the alphanumerical string. Based on records previously selected by the user, records in the search result are ranked to identify one or more top hits for the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08352468&OS=08352468&RS=08352468
owner: Apple Inc.
number: 08352468
owner_city: Cupertino
owner_country: US
publication_date: 20100701
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 321 762 filed on Apr. 7 2010 which is herein incorporated by reference in its entirety.

Conventionally data of various types is stored in computing devices ranging from desktop personal computers to portable personal devices such as multifunctional cellular telephones personal digital assistants etc. To make it easier and more convenient for users of computing devices to access data on the computing devices operating systems installed on the computing devices typically provide searching capabilities. A user of a computing device may enter a search query to look for records stored on the computing device that match the search query.

To make it easier for users to search some conventional operating system further identifies top hits among records in search result. The top hits generally include records that are commonly chosen by users at large. However every user may have one s own preferences in searching. For instance on one hand two users looking for the same record e.g. John Smith may use different search queries e.g. Jo and Smith respective . On the other hand two users entering the same user search query e.g. Do may be looking for different records e.g. Donald Smith and John Downs respectively . Thus the top hits identified in the above conventional approach may not be useful for every user.

Some embodiments include one or more application programming interfaces APIs in an environment with calling program code interacting with other program code being called through the one or more interfaces. Various function calls messages or other types of invocations which further may include various kinds of parameters can be transferred via the APIs between the calling program and the code being called. In addition an API may provide the calling program code the ability to use data types or classes defined in the API and implemented in the called program code.

At least certain embodiments include an environment with a calling software component interacting with a called software component through an API. A method for operating through an API in this environment includes transferring one or more function calls messages other types of invocations or parameters via the API.

Some embodiments of the present disclosure include a method for finding top hits in search result based on learned user preferences. In one embodiment a user search query for records is received from a user. The user search query may contain an alphanumerical string. Records in a multifunctional device are searched to find those that match the alphanumerical string. Based on records previously selected by the same user records in the search result are ranked to identify one or more top hits for the user. The top hits identified are records more likely to be selected by the user from the records in the search result based on prior selections made by the user.

Some embodiments of the present disclosure include a method for tracking a user s selection of records to build a top hit database. In one embodiment a user enters a search query in response to which a set of records are returned. The user selects a record out of the set of records. The user selection causes a top hit record associated with the record in a top hit database to be created if not existed yet or to be updated if already in existence. The top hit record may include a weight to indicate a likelihood of the user selecting the record when the user searches using the search query.

Various devices which perform one or more of the foregoing methods and machine readable media which when executed by a processing system cause the processing system to perform these methods are also described.

Various embodiments and aspects of the disclosure will be described with reference to details discussed below and the accompanying drawings will illustrate the various embodiments. The following description and drawings are illustrative of the disclosure and are not to be construed as limiting the disclosure. Numerous specific details are described to provide a through understanding of various embodiments of the present disclosure. However in certain instances well known or conventional details are not described in order to provide a concise discussion of embodiments of the present disclosure.

Some portions of the detailed descriptions which follow are presented in terms of algorithms which include operations on data stored within a computer memory. An algorithm is generally a self consistent sequence of operations leading to a desired result. The operations typically require or involve physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like can refer to the action and processes of a data processing system or similar electronic device that manipulates and transforms data represented as physical electronic quantities within the system s registers and memories into other data similarly represented as physical quantities within the system s memories or registers or other such information storage transmission or display devices.

The present disclosure can relate to an apparatus for performing one or more of the operations described herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a machine e.g. computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs erasable programmable ROMs EPROMs electrically erasable programmable ROMs EEPROMs flash memory magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a bus.

A machine readable medium includes any mechanism for storing or transmitting information in a form readable by a machine e.g. a computer . For example machines store and communicate internally and with other devices over a network code and data using machine readable media such as machine readable storage media e.g. magnetic disks optical disks random access memory read only memory flash memory devices phase change memory and machine readable communication media e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals digital signals etc. .

At least certain embodiments of the present disclosure include one or application programming interfaces in an environment with search software interacting with a software application. Various function calls or messages are transferred via the application programming interfaces between the search software and software applications. Transferring the function calls or messages may include issuing initiating invoking or receiving the function calls or messages. Example application programming interfaces transfer function calls to implement various operations e.g. search networking service discovery etc. for a device having a display region. An API may also implement functions having parameters variables or pointers. An API may receive parameters as disclosed or other combinations of parameters. In addition to the APIs disclosed other APIs individually or in combination can perform similar functionality as the disclosed APIs.

The display region may be in a form of a window. A window is a display region which may or may not have a border and may be the entire display region or area of a display. In some embodiments a display region may have at least one window and or at least one view e.g. web text or image content . The methods systems and apparatuses disclosed can be implemented with display regions windows and or views.

At least certain embodiments of the disclosure may be part of a portable electronic device such as a digital media player e.g. a portable music and or video media player which may include a media processing system to present the media a storage device to store the media and may further include a radio frequency RF transceiver e.g. an RF transceiver for a cellular telephone coupled with an antenna system and the media processing system. In certain embodiments data stored on a remote storage device may be transmitted to the portable electronic device through the RF transceiver. The data may be for example one or more of music or other audio still pictures or motion pictures etc.

The portable media player may include a media selection device such as a click wheel input device on an iPod or iPod Nano media player from Apple Computer Inc. of Cupertino Calif. a touch screen input device pushbutton device movable pointing input device or other input device. The media selection device may be used to select the media stored on the storage device and or the remote storage device. The portable media player may in at least certain embodiments include a display device which is coupled to the media processing system to display titles or other indicators of media being selected through the input device and being presented either through a speaker or earphone s or on the display device or on both display device and a speaker or earphone s . In some embodiments the display device and input device are integrated while in other embodiments the display device and input device are separate devices.

Embodiments of the disclosure described herein may be part of other types of data processing systems such as for example entertainment systems or personal digital assistants PDAs or general purpose computer systems or special purpose computer systems or an embedded device within another device or cellular telephones which do not include media players or multifunctional touch tablet devices or other multifunctional touch devices or devices which combine aspects or functions of these devices e.g. a media player such as an iPod portable media player combined with a PDA an entertainment system and a cellular telephone in one device an iPhone . Because these devices generally have multiple functionalities these devices may also be referred to as multifunctional devices hereinafter. In this disclosure electronic devices and consumer devices are types of devices.

In some embodiments a platform provides various search service discovery and networking operations. The platform includes hardware components and an operating system. The hardware components may include a processing unit coupled to an input panel and a memory coupled to the processor. The operating system includes one or more programs that are stored in the memory and configured to be executed by the processing unit. One or more programs include various instructions for transferring function calls or messages through an Application Programming Interface API in order to perform various search service discovery and networking operations.

One or more APIs may be used in some embodiments. An API is an interface implemented by a program code component or hardware component hereinafter API implementing component that allows a different program code component or hardware component hereinafter API calling component to access and use one or more functions methods procedures data structures classes and or other services provided by the API implementing component. An API can define one or more parameters that are passed between the API calling component and the API implementing component.

An API allows a developer of an API calling component which may be a third party developer to leverage specified features provided by an API implementing component. There may be one API calling component or there may be more than one such component. An API can be a source code interface that a computer system or program library provides in order to support requests for services from an application. An operating system OS can have multiple APIs to allow applications running on the OS to call one or more of those APIs and a service such as a program library can have multiple APIs to allow an application that uses the service to call one or more of those APIs. An API can be specified in terms of a programming language that can be interpreted or compiled when an application is built.

In some embodiments the API implementing component may provide more than one API each providing a different view of or with different aspects that access different aspects of the functionality implemented by the API implementing component. For example one API of an API implementing component can provide a first set of functions and can be exposed to third party developers and another API of the API implementing component can be hidden not exposed and provide a subset of the first set of functions and also provide another set of functions such as testing or debugging functions which are not in the first set of functions. In other embodiments the API implementing component may itself call one or more other components via an underlying API and thus be both an API calling component and an API implementing component.

An API defines the language and parameters that API calling components use when accessing and using specified features of the API implementing component. For example an API calling component accesses the specified features of the API implementing component through one or more API calls or invocations embodied for example by function or method calls exposed by the API and pass data and control information using parameters via the API calls or invocations. The API implementing component may return a value through the API in response to an API call from an API calling component. While the API defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API may not reveal how the API call accomplishes the function specified by the API call. Various API calls are transferred via the one or more application programming interfaces between the calling API calling component and an API implementing component. Transferring the API calls may include issuing initiating invoking calling receiving returning or responding to the function calls or messages in other words transferring can describe actions by either of the API calling component or the API implementing component. The function calls or other invocations of the API may send or receive one or more parameters through a parameter list or other structure. A parameter can be a constant key data structure object object class variable data type pointer array list or a pointer to a function or method or another way to reference a data or other item to be passed via the API.

Furthermore data types or classes may be provided by the API and implemented by the API implementing component. Thus the API calling component may declare variables use pointers to use or instantiate constant values of such types or classes by using definitions provided in the API.

Generally an API can be used to access a service or data provided by the API implementing component or to initiate performance of an operation or computation provided by the API implementing component. By way of example the API implementing component and the API calling component may each be any one of an operating system a library a device driver an API an application program or other module it should be understood that the API implementing component and the API calling component may be the same or different type of module from each other . API implementing components may in some cases be embodied at least in part in firmware microcode or other hardware logic. In some embodiments an API may allow a client program to use the services provided by a Software Development Kit SDK library. In other embodiments an application or other client program may use an API provided by an Application Framework. In these embodiments the application or client program may incorporate calls to functions or methods provided by the SDK and provided by the API or use data types or objects defined in the SDK and provided by the API. An Application Framework may in these embodiments provide a main event loop for a program that responds to various events defined by the Framework. The API allows the application to specify the events and the responses to the events using the Application Framework. In some implementations an API call can report to an application the capabilities or state of a hardware device including those related to aspects such as input capabilities and state output capabilities and state processing capability power state storage capacity and state communications capability etc. and the API may be implemented in part by firmware microcode or other low level logic that executes in part on the hardware component.

The API calling component may be a local component i.e. on the same data processing system as the API implementing component or a remote component i.e. on a different data processing system from the API implementing component that communicates with the API implementing component through the API over a network. It should be understood that an API implementing component may also act as an API calling component i.e. it may make API calls to an API exposed by a different API implementing component and an API calling component may also act as an API implementing component by implementing an API that is exposed to a different API calling component.

The API may allow multiple API calling components written in different programming languages to communicate with the API implementing component thus the API may include features for translating calls and returns between the API implementing component and the API calling component however the API may be implemented in terms of a specific programming language. An API calling component can in one embedment call APIs from different providers such as a set of APIs from an OS provider and another set of APIs from a plug in provider and another set of APIs from another provider e.g. the provider of a software library or creator of the another set of APIs.

It will be appreciated that the API implementing component may include additional functions methods classes data structures and or other features that are not specified through the API and are not available to the API calling component . It should be understood that the API calling component may be on the same system as the API implementing component or may be located remotely and accesses the API implementing component using the API over a network. While illustrates a single API calling component interacting with the API it should be understood that other API calling components which may be written in different languages or the same language than the API calling component may use the API .

The API implementing component the API and the API calling component may be stored in a machine readable medium which includes any mechanism for storing information in a form readable by a machine e.g. a computer or other data processing system . For example a machine readable medium includes magnetic disks optical disks random access memory read only memory flash memory devices etc.

In Software Stack an exemplary embodiment applications can make calls to Services or using several Service APIs and to Operating System OS using several OS APIs. Services A and B can make calls to OS using several OS APIs.

Note that the Service has two APIs one of which Service API receives calls from and returns values to Application and the other Service API receives calls from and returns values to Application . Service which can be for example a software library makes calls to and receives returned values from OS API and Service which can be for example a software library makes calls to and receives returned values from both OS API and OS API . Application makes calls to and receives returned values from OS API .

In some embodiments a user enters a user search query in text field to search for records on the multifunctional device. Typically the user search query includes an alphanumerical string e.g. Do J P2 etc. . Then the user may actuate the search button to submit the user search query to the application. For example the user may tap onto a location of a touch screen displaying search button to actuate search button .

In response to receiving the user search query the application searches for records on the multifunctional device that match the user search query. For instance the application may be an application for organizing contact information on the multifunctional device and the application can search for records with names that include the alphanumerical string in the user search query. In the current example illustrated in the user search query includes a string Do and records on the multifunctional device having names that include Do are Don Chan John Doe John Downs and Robert Downs. The records with names matching the string of the user search query are displayed in search result display region . The user may select one or more individual records displayed in search result display region for further processing. For instance the user may select a record such as John Doe in the current example in order to place a telephone call at a telephone number associated with the record.

Furthermore the application may examine selections associated with the user search query made by this user in the past in order to identify records that this user is now likely to select. In some embodiments the application may access a top hit database stored on the multifunctional device which stores information of records selected by this user and search queries associated with these selections. The application may further rank records in the current search result according to the information. All or some of the records ranked may be displayed in top hit display region in the order of their respective rankings. For example the record that is most likely to be selected by the user is displayed first in top hit display region followed by the record second in ranking and so forth. In some embodiments top hit display region may display only a predetermined number of records such as the top three 3 records among all records in search result.

In some embodiments the top hit database includes a column of chosen records a column of application a column of weights and a column for tracking user search queries associated with the chosen records hereinafter the query column . In some embodiments each field under Query column includes an array of twenty six 26 entries to track the first letter of each user search query associated with the respective chosen record. In other words the query column has a one letter resolution. In other embodiments the array may be expanded to cover longer strings e.g. the whole word in user search queries.

The first time a record is chosen by the user in search results generated from a first user search query the record does not exist in top hit database and thus the record is created as follows. The identifier or name of the record is entered into the top hit database under chosen record column . The application associated with the chosen record is then entered under application column . A weight of one 1 is entered under weight column . A slot within the array under query column corresponding to the first letter of the first user search query is set to one 1 while values in other slots of the array are initialized to be zero 0 . The next time the record is chosen by the user in search results generated from a second user search query which may or may not be the same as the first user search query the record is updated in top hit search database . In some embodiments the weight of this record is incremented by one 1 and the value in a slot of the array under query column corresponding to a first letter in the second search query is also incremented by one 1 . In other words the weight and the values in the array indicate how often the user chooses the record when submitting various user search queries. Such history or statistics of user selection can be used to determine how likely the record is going to be selected by the user when the user submits a user search query. Details of some examples of updating and using records in top hit database are discussed below.

In some embodiments processing logic receives a user search query from a user processing block . In response processing logic runs a search using the user search query to find records matching the user search query processing block . Then processing logic displays result of the search which may include a set of zero or more records processing block . Assuming there is at least one record in the result the user may select a record from the result to further act on it. Processing logic receives the user selection of the record processing block . Furthermore processing logic updates a top hit database such as the one illustrated in for the selected record processing block . If a top hit record associated with the selected record already exists in the top hit database processing logic may update a weight and a query array of the top hit record. Otherwise processing logic may create a top hit record associated with the selected record in the top hit database.

In some embodiments processing logic receives search result of a search performed in response to a user search query processing block . The search result may contain one or more records stored on a multifunctional device. Then processing logic may search a top hit database for top hit records associated with the records in the search result such as top hit database illustrated in processing block . As discussed above the top hit database stores information on user selection of records with respect to search queries previously submitted by the same user. In some embodiments the information in the top hit database includes weights for each record associated with various user search queries. Based on the weights of the records associated with the particular user search query currently submitted by the user processing logic ranks the records in the search result processing block . Then processing logic may display at least some of the records according to their rankings in a top hit display region such as top hit display region in processing block . To further illustrate the above concept of finding top search hits based on learned user preferences one example is discussed in details below.

In the current example a multifunctional device stores a set of records used by an application that organizes contact information for a user. The application is hereinafter referred to as a contact application. Each of the records includes a name of a person and contact information of that person e.g. telephone number electronic mail address home address etc. . In the current example the records include names and contact information of the following people Don Chan John Doe John Downs and Robert Downs. The records can be searched by the names in the records. For example the user may enter all or part of a name e.g. J Do etc. to search for records with names containing the name or partial name entered. As mentioned above results of the search can be displayed in search result region of GUI illustrated in and top hits in the search result can be displayed in top hit region of GUI illustrated in .

Initially the user may enter J to search for records with names containing the letter J. Because this is the first time the user searches for records on the multifunctional device there is no prior search history of the user and thus no top hit is found. Only the search result which includes John Doe and John Downs are displayed in search result region . Suppose the user selects John Doe from the search result. Then a record of John Doe is created in a top hit database such as top hit database illustrated in in response to the user selection. Because the first letter of the user search query entered is J the value in a slot in the array under a query column such as column in corresponding to the letter J is set to one 1 while the values in the remaining slots in the array are set to zero 0 . A weight of one 1 is also assigned to the record of John Doe in the top hit database.

Later the user may repeat the search by enter J as a user search query. Again a search result containing John Doe and John Downs is returned and displayed in search result region . Because there is prior search history of the user top hit among the search result may be determined. Specifically the top hit database is checked for records corresponding to the records in the search result. In the current example there is no record of John Downs in the top hit database but there is a record of John Doe in the top hit database. Furthermore the record of John Doe in the top hit database has a weight of 1 associated with a user search query beginning with J. Thus John Doe is returned as a top hit record in top hit region . Suppose the user selects John Doe again from either search result region or top hit region . In response to the user selection the record of John Doe in the top hit database is updated. Specifically the value in the slot of the array under the query column is incremented by one 1 resulting in a value of two 2 . The weight associated with the record of John Doe is also increased to two 2 .

Later the user searches for contact records again and enters a search query of Do. A search result containing Don Chan John Doe John Downs and Robert Downs is displayed in search result region . Because only a record of John Doe exists in the top hit database John Doe is identified as the top hit among the records in the search result and thus is displayed in top hit region . Suppose the user selects John Downs in search result region but not John Doe. In response to the user selection a record of John Downs is created in the top hit database. A value in the fourth slot in the array under the query column which corresponds to the letter D is set to one 1 while values in the remaining slots of the array are set to zero 0 because the selection of John Downs is associated with the user search query beginning with D. A weight of one 1 is assigned to the record of John Downs in the top hit database.

When the user searches again using a search query Do a search result containing Don Chan John Doe John Downs and Robert Downs is again displayed in search result region . Furthermore the top hit database is checked for records associated with the names in the search result. Because there is no record of Don Chan and Robert Downs in the top hit database they are not displayed in top hit region . Because the records of both John Doe and John Downs are found in the top hit database both records are evaluated to rank them with respect to the current user search query i.e. Do . The values of the fourth slot which corresponds to the first letter of the user search query D of the array under query column in the records of John Doe and John Downs are 0 and 1 respectively. Thus John Downs is ranked higher than John Doe with respect to the current user search query. As such John Downs is displayed as the first top hit record in top hit region followed by John Doe. Note that even though John Doe has been selected twice and John Downs has been selected only once by the user John Downs is ranked higher in top hit region because the user previously selected John Downs instead of John Doe when the user searched using the user search query Do. In other words the above approach selects a record that is more likely to be chosen by the user with respect to the current user search query entered based on a history of the user s selection.

In some embodiments the methods systems and apparatuses of the present disclosure can be implemented in various devices including electronic devices consumer devices data processing devices desktop computers portable computers wireless devices cellular devices tablet devices handheld devices multi touch devices multi touch data processing devices any combination of these devices or other like devices. illustrate examples of a few of these devices.

In certain embodiments of the present disclosure the device can be used to implement at least some of the methods discussed in the present disclosure.

Wireless device may also include a digital processing system to control the digital RF transceiver and to manage the voice digital data and or media signals. Digital processing system may be a general purpose processing device such as a microprocessor or controller for example. Digital processing system may also be a special purpose processing device such as an ASIC application specific integrated circuit FPGA field programmable gate array or DSP digital signal processor . Digital processing system may also include other devices as are known in the art to interface with other components of wireless device . For example digital processing system may include analog to digital and digital to analog converters to interface with other components of wireless device . Digital processing system may include a media processing system which may also include a general purpose or special purpose processing device to manage media such as files of audio data.

Wireless device may also include a storage device coupled to the digital processing system to store data and or operating programs for the Wireless device . Storage device may be for example any type of solid state or magnetic memory device. Storage device may be or include a machine readable medium.

Wireless device may also include one or more input devices coupled to the digital processing system to accept user inputs e.g. telephone numbers names addresses media selections etc. Input device may be for example one or more of a keypad a touchpad a touch screen a pointing device in combination with a display device or similar input device.

Wireless device may also include at least one display device coupled to the digital processing system to display information such as messages telephone call information contact information pictures movies and or titles or other indicators of media being selected via the input device . Display device may be for example an LCD display device. In one embodiment display device and input device may be integrated together in the same device e.g. a touch screen LCD such as a multi touch input panel which is integrated with a display device such as an LCD display device . The display device may include a backlight A to illuminate the display device under certain circumstances. It will be appreciated that the Wireless device may include multiple displays.

Wireless device may also include a battery to supply operating power to components of the system including digital RF transceiver digital processing system storage device input device microphone A audio transducer media processing system sensor s and display device . Battery may be for example a rechargeable or non rechargeable lithium or nickel metal hydride battery. Wireless device may also include audio transducers which may include one or more speakers and at least one microphone A. In certain embodiments of the present disclosure the wireless device can be used to implement at least some of the methods discussed in the present disclosure.

This device may also optionally include a display controller and display device which is coupled to the other components through the bus . One or more input output controllers are also coupled to the bus to provide an interface for input output devices and to provide an interface for one or more sensors which are for sensing user activity. The bus may include one or more buses connected to each other through various bridges controllers and or adapters as are well known in the art. The input output devices may include a keypad or keyboard or a cursor control device such as a touch input panel. Furthermore the input output devices may include a network interface which is either for a wired network or a wireless network e.g. an RF transceiver . The sensors may be any one of the sensors described herein including for example a proximity sensor or an ambient light sensor. In at least certain implementations of the device the microprocessor may receive data from one or more sensors and may perform the analysis of that data in the manner described herein.

In certain embodiments of the present disclosure the device can be used to implement at least some of the methods discussed in the present disclosure.

In the foregoing specification the disclosure has been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the disclosure as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

