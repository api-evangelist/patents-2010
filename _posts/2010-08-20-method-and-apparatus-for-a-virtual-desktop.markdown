---

title: Method and apparatus for a virtual desktop
abstract: An approach is provided for managing desktop components. A device determines to facilitate access to at least one interface for subscribing to one or more inputs of one or more desktop components, advertising the availability of one or more subscriptions to one or more outputs of the one or more desktop components, publishing the one or more outputs of the one or more desktop components, or a combination thereof. The one or more desktop components generate the one or more outputs based, at least in part, on the one or more inputs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08966377&OS=08966377&RS=08966377
owner: Nokia Corporation
number: 08966377
owner_city: Espoo
owner_country: FI
publication_date: 20100820
---
Service providers and device manufacturers e.g. wireless cellular etc. are continually challenged to deliver value and convenience to consumers by for example providing compelling network services. One area of interest has been the development of methods for integrating the services on for instance a common desktop e.g. a desktop user interface on a user device . For example service providers often enable or provide client applications e.g. widgets that can be organized on a desktop interface for access to the data features functions etc. of one or more of the services. However with the advent of a growing array of new services and devices service providers and device manufacturers face significant challenges to enabling users to efficiently organize associate or otherwise manipulate these services via the desktop over one or more devices.

Therefore there is a need for an approach for efficiently managing applications and related components on a virtual desktop that potentially spans multiple devices.

According to one embodiment a method comprises determining to facilitate access to at least one interface for subscribing to one or more inputs of one or more desktop components advertising the availability of one or more subscriptions to one or more outputs of the one or more desktop components publishing the one or more outputs of the one or more desktop components or a combination thereof. The one or more desktop components generate the one or more outputs based at least in part on the one or more inputs.

According to another embodiment an apparatus comprises at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause at least in part the apparatus to determine to facilitate access to at least one interface for subscribing to one or more inputs of one or more desktop components advertising the availability of one or more subscriptions to one or more outputs of the one or more desktop components publishing the one or more outputs of the one or more desktop components or a combination thereof. The one or more desktop components generate the one or more outputs based at least in part on the one or more inputs.

According to another embodiment a computer readable storage medium carries one or more sequences of one or more instructions which when executed by one or more processors cause at least in part an apparatus to determine to facilitate access to at least one interface for subscribing to one or more inputs of one or more desktop components advertising the availability of one or more subscriptions to one or more outputs of the one or more desktop components publishing the one or more outputs of the one or more desktop components or a combination thereof. The one or more desktop components generate the one or more outputs based at least in part on the one or more inputs.

According to another embodiment an apparatus comprises means for determining to facilitate access to at least one interface for subscribing to one or more inputs of one or more desktop components advertising the availability of one or more subscriptions to one or more outputs of the one or more desktop components publishing the one or more outputs of the one or more desktop components or a combination thereof. The one or more desktop components generate the one or more outputs based at least in part on the one or more inputs.

Still other aspects features and advantages of the invention are readily apparent from the following detailed description simply by illustrating a number of particular embodiments and implementations including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments and its several details can be modified in various obvious respects all without departing from the spirit and scope of the invention. Accordingly the drawings and description are to be regarded as illustrative in nature and not as restrictive.

Examples of a method apparatus and computer program for maintaining a virtual desktop are disclosed. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent however to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.

Technical challenges can arise for instance when enabling interoperability of one or more desktop component and when sharing one or more desktop components over multiple devices. For example challenges are present in implementing and maintaining a virtual desktop that can be extended in multiple dimensions e.g. multiple semantic dimensions such as when grouping components by semantically derived topics and or categories and can be shared across heterogeneous devices e.g. mobile devices personal computers tablet computers etc. . In certain embodiments semantic dimensions can be implemented using methods and technologies that allow devices to understand the meaning or semantics of information associated with the respective desktop components.

To address this problem a system of introduces the capability to manage desktop components e.g. applications services etc. in a virtual desktop through a publication subscription framework. More specifically the system enables one or more desktop components to obtain subscriptions to one or more data sources e.g. user input output from other desktop components databases etc. as their inputs e.g. data on which the components operate or function advertise the availability of their outputs e.g. to inform other components the outputs are available for subscription and then to publish the output for other components that have subscriptions to retrieve. In this way the system links the components in a desktop in a data or content centric manner based on relationships established between the input of one desktop component and the output of another desktop component. These relationships may be extended to any number of desktop components e.g. widgets applications etc. to create an endless desktop of any collection components. For example a calendar desktop component can subscribe to the output of a social networking component so that social networking updates can be reflected in a user s calendar. The calendar output can in turn be provided by subscription to yet another component e.g. a mapping component that can provide maps directions navigation etc. to appointments in the calendar.

In one embodiment the virtual desktop can be maintained by defining the desktop in a multi semantic space. By way of example a multi dimensional semantic space can be implemented by subscribing component interfaces to content available from one or more desktop components. These desktop components can be located at different physical locations e.g. different devices as well as different semantic or logical locations e.g. different categories relationships etc. . Moreover the component subscriptions can be recursive and or include information subscribed to by other components that can process the data and published them to other subscriptions. As such the recursive combination of components can be utilized to combine or process information in unique modular combinations to form more robust component interfaces.

As shown in user equipment UEs can be utilized to communicate with a cloud hosting platform via a communication network . The cloud hosting platform can be utilized to implement the system to allow access to one or more components of a respective desktop of a UE to one or more other UEs . The system can additionally be implemented via a publication subscription pub sub interface. In certain embodiments the pub sub is a messaging paradigm where publishers senders of messages send their messages based on one or more criteria. Published messages can be characterized into classes. These classes can be categorized without any knowledge of who the subscribers if any are. Subscribers express interest in one or more classes e.g. by subscribing to the classes . As such subscribers may only receive messages that are pertinent. Further the subscribers may also have no knowledge of who the publishers are. As such publishers and subscribers can be decoupled. A pub sub interface can be implemented via e.g. an HTTP or Representational State Transfer REST protocol for pub sub interfaces. Further a customized protocol for pub sub can be developed e.g. to includes various criteria . Customized protocols can include one or more distributed system buses or messaging busses.

The cloud hosting platform can be utilized to facilitate access to an interface for subscribing to one or more inputs for a component . Thus an API can be provided to one or more UEs to access components associated with other UEs . By way of example a component of UE can subscribe to a component of UE . When the desktop component is updated the desktop component can publish its information via a channel that is associated with the subscription. As such the API can publish one or more outputs of desktop component to the subscribing desktop component . As further detailed in UE can publish the update directly to the channel or can update a replicated desktop component stored in a desktop replication database associated with the cloud hosting platform .

Further the cloud hosting platform can facilitate access to the availability of one or more subscriptions to outputs of one or more desktop components . For example and as further detailed in the availability of one or more subscriptions obtained by the cloud hosting platform maintained and provided to UEs . The subscriptions can be advertised via a semantic space. By way of example the semantic space can be associated with metadata describing the desktop components availability of the desktop components e.g. security and or limitations associated with the subscription or the like. Metadata can be data about data. For example metadata can be data e.g. a version number one or more associations such as authorship or ownership type of component such as a calendar clock social networking information or the like date of creation etc. about a desktop component . As such metadata can be utilized to organize and search for available subscriptions.

Thus a first desktop component of a first UE can provide information associated with an output of the first desktop component to the cloud hosting platform . The cloud hosting platform can store this information and advertise the availability of first the desktop component . A second component of a second UE can then search for and find the first component . Then the second UE can subscribe to the output of the first component . Once subscribed when the first component updates the first component the second component can receive the update e.g. via a channel associated with the subscription . In one scenario this update can happen automatically e.g. when the update is published to a channel the update can be pushed to the second component . In another scenario the update can send a notification of the update along with a location to allow the second component to download the update. With this approach the first desktop component can update its output to multiple other desktop components e.g. component subscribing to the output of the first desktop component.

Further information associated with desktop components can be chained. That is the first network component can be subscribed to by the second network component the second network component may transform the input from the first network component and output information to a third network component not shown . Multiple such chains can be formed. Further chains can include various different components from the same UE . Additionally the components can recursively subscribe to themselves or to other components that subscribe to them.

Moreover in certain embodiments the pub sub components can be utilized to create a desktop or other information conveying format on a web page. The web page can be hosted via the cloud hosting platform a UE or other device e.g. a server .

Additionally the pub sub operations may be supported by one or more software or hardware layers on a protocol stack. For example in certain scenarios the pub sub operations can be managed to feed information to one or more graphics processors associated with a UE . As such content can be directly published from a memory of the UE or a network component e.g. the cloud hosting platform directly to a frame buffer and or video memory.

By way of example the communication network of system includes one or more networks such as a data network not shown a wireless network not shown a telephony network not shown or any combination thereof. It is contemplated that the data network may be any local area network LAN metropolitan area network MAN wide area network WAN a public data network e.g. the Internet short range wireless network or any other suitable packet switched network such as a commercially owned proprietary packet switched network e.g. a proprietary cable or fiber optic network and the like or any combination thereof. In addition the wireless network may be for example a cellular network and may employ various technologies including enhanced data rates for global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. worldwide interoperability for microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi wireless LAN WLAN Bluetooth Internet Protocol IP data casting satellite mobile ad hoc network MANET and the like or any combination thereof.

The UE is any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia computer multimedia tablet Internet node communicator desktop computer laptop computer notebook computer netbook computer tablet computer Personal Digital Assistants PDAs audio video player digital camera camcorder positioning device television receiver radio broadcast receiver electronic book device game device or any combination thereof including the accessories and peripherals of these devices or any combination thereof. It is also contemplated that the UE can support any type of interface to the user such as wearable circuitry etc. .

By way of example the UEs and the cloud hosting platform communicate with each other and other components of the communication network using well known new or still developing protocols. In this context a protocol includes a set of rules defining how the network nodes within the communication network interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node from generating and receiving physical signals of various types to selecting a link for transferring those signals to the format of information indicated by those signals to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection OSI Reference Model.

Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises 1 header information associated with a particular protocol and 2 payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols the packet includes 3 trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet its destination the length of the payload and other properties used by the protocol. Often the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks such as the Internet typically include a physical layer 1 header a data link layer 2 header an internetwork layer 3 header and a transport layer 4 header and various application headers layer 5 layer 6 and layer 7 as defined by the OSI Reference Model.

The first interface can subscribe to a mix of local and cloud desktop components . As such some of the subscriptions may be maintained by the cloud hosting platform and other subscriptions may be maintained by the hosting UE . Further as noted previously the subscription can be managed by the cloud hosting platform while the component is hosted by the UE . In this example the first interface can have a desktop component that subscribes to component from the cloud hosting platform and another component hosted on the hosting UE .

The user of the first interface can additionally configure the user s subscriptions to filter one or more updates. For example the first interface subscribes to component that subscribes to multiple desktop components for information. The user can set filters so that the user only receives updates for one or more types of information and or from one or more associated users. This information can be stored as metadata in associated publications as well as for implementation of subscriptions. Further filtering can allow for utilization of specific component interfaces as well as selection of only a subset of content emitted by a component e.g. by filtering out a portion of the information associated with the component .

The second interface in this example can subscribe to the same components as the first interface as well as to a component associated with the first interface . In certain scenarios second interface can subscribe to the same components indirectly by subscribing to components associated with the first interface . Additionally the components associated with the first interface may transform or manipulate one or more of the components. Further a mix of components from the first interface other hosting UEs and the cloud hosting platform can be presented.

In one example the first interface can be hosted on a personal computer of a user. The second interface can then be another UE of the user that subscribes to components of the personal computer. The third interface can additionally be implemented to share the user s desktop with other users. With these implementations different security parameters can be utilized to prevent unwanted or unauthorized use of desktop components. For example the users of the third interface may have only read only access.

Control logic can be utilized to control one or more processes of the cloud hosting platform . The control logic can further be utilized to maintain a pub sub interface as well as maintain one or more components.

In one embodiment the communication interface can be used to communicate with one or more UEs or other devices. Certain communications can be via methods such as an internet protocol messaging e.g. Short Message Service SMS Multimedia Messaging Service MMS etc. or any other communication method e.g. via the communication networks .

As noted above the pub sub module can be utilized to send and receive messages via publications and subscriptions. The control logic can control subscriptions to one or more components. Additionally the control logic can maintain replicated components in a desktop replication database . The components in the desktop replication database can subscribe to one or more other components. As such the control logic can control subscription of the components to one or more channels via the pub sub module to listen for relevant messages e.g. messages associated with updates to the respective components . Further the control logic can be used by replicated components to publish information it wishes to communicate via the pub sub module . Additionally the control logic can provide a subscription interface and store subscription information in a memory as further detailed in .

In one embodiment the communication interface can be used to communicate with the cloud hosting platform and or other UEs . Certain communications can be via methods such as an internet protocol messaging or any other communication method e.g. via the communication network . In some examples the UE can send and receive subscription requests via the communication interface by utilizing the runtime module and or pub sub module . The pub sub module can be utilized to control subscriptions and or publications associated with one or more desktop components of the UE . Moreover the subscriptions can be tied to particular desktop components and or a combination of desktop components.

The power module provides power to the UE . The power module can include any type of power source e.g. battery plug in etc. . Additionally the power module can provide power to the components of the UE including processors memory and transmitters. Additionally power information associated with the power module can be collected and store in memory . This information may be utilized for use in a desktop component and or for publication of updates.

Further the location module can determine a user s location e.g. if the UE is mobile . The user s location can be determined by a triangulation system such as global positioning system GPS Assisted GPS A GPS Cell of Origin or other location extrapolation technologies. Standard GPS and A GPS systems can use satellites to pinpoint the location of a UE . A Cell of Origin system can be used to determine the cellular tower that a cellular UE is synchronized with. This information provides a coarse location of the UE because the cellular tower can have a unique cellular identifier cell ID that can be geographically mapped. The location module may also utilize multiple technologies to detect the location of the UE . Location coordinates can be determined using the location module . These location coordinates can be used by the runtime module to display a user location on a map on a user interface of the UE . Further the current location of the UE can be utilized in other navigational calculations e.g. movement readjusting search locations based on the location of the UE etc. . This location information can be utilized in one or more desktop components as well as published as updates for desktop components subscribing to the one or more desktop components.

The user interface can include various methods of communication. For example the user interface can have outputs including a visual component e.g. a screen an audio component a physical component e.g. vibrations and other methods of communication. User inputs can include a touch screen interface a scroll and click interface a button interface a microphone etc. Moreover the user interface may be used to display one or more desktop components.

In one scenario the desktop components can be presented on the user interface . As previously indicated the desktop components can be updated via a pub sub interface e.g. using the pub sub module as well as the communication interface . Further the desktop components may be updated via the user interface e.g. via an input . As such when the desktop components are updated an update for the desktop components can be published. As previously noted the UE can publish the update directly or send a message to the cloud hosting platform hosting a replicated desktop component to publish.

The desktop component can thus subscribe to input. As shown the subscription can be based on an input range associated with metadata. This input range can be managed by the cloud hosting platform . For example the desktop component can subscribe to information associated with other desktop components with associated metadata including celebrity name and status. In certain scenarios one or more different of the desktop can be utilized that can subscribe to different information and or different filters to information. For example the desktop component may include one or more size parameters. As such a basic user interface element of the desktop component can be presented via a user interface of a UE . This user interface element when selected can subscribe to different desktop components and or different information. For example filters may be utilized to limit e.g. due to size constraints information presented during normal display. However when selected the desktop component can be resized to allow for greater information to be displayed. As such the desktop component can present information associated with additional and or alternative subscriptions.

Moreover in certain scenarios the desktop component can provide output that other desktop components can subscribe to. As such the desktop component can advertise an output range e.g. associated metadata via the cloud hosting platform . The cloud hosting platform can address such information using a metadata space using virtual coordinates. As such the desktop component can be one of a vast amount of desktop components available via the cloud hosting platform . The UE associated with the desktop component and or other components of UEs can thus subscribe to the output of the desktop component . As noted earlier these subscriptions can be chained and or recursive.

In certain scenarios a desktop on a user interface of a UE includes desktop components . The input subscriptions of the desktop components and the output advertisements of the desktop components can define the boundaries of the desktop. This desktop space can be partitioned and or replicated over one or more UEs and cloud components e.g. servers .

Moreover desktop component can include subscriptions to other desktop components and or information from the other desktop components . For example if desktop component was a calendar component the calendar component can include entries from the user s personal calendar as part of component entries from other people s calendars as part of component and or other material e.g. a web page from component . Further the desktop component can support multiple views at multiple resolutions and or provide simple structured data in a format e.g. Extensible Markup Language XML Scalable Vector Graphics SVG HTML or other suitable format . Moreover as part of the metadata space other components that have access to the desktop component e.g. due to security parameters can subscribe to the content of the whole of the desktop component . Also this information can be filtered as detailed in . For example a corporate web page subscribing to the information may choose to reformat desktop component to show components and as part of a corporate calendar including the user and another employee. Additionally or alternatively such information can be published via a social networking site. In certain embodiments the desktop component can subscribe to itself and allow other users to publish to it. As such other users may be able to interact with information associated with the desktop component .

The control logic can determine to facilitate access to at least one interface e.g. an API for subscribing to one or more inputs of one or more desktop components step . A part of such an interface can include advertising the availability of one or more subscriptions to one or more outputs of the one or more desktop components . In certain embodiments advertising the availabilities of one or more subscriptions can include the capability of the interface to accept one or more subscriptions and or the capability of the desktop components to accept the one or more subscriptions. Additionally the interface can include publishing of the one or more outputs of the one or more desktop components . By providing the interface the cloud hosting platform can assist in the management of providing desktop component information to other desktop components .

Through the interface the control logic can receive an advertisement from a desktop component e.g. via an application operating system etc. of an associated UE of output associated with the desktop component . The desktop component can be associated with metadata that can be utilized as an address in a metadata space. The metadata can be utilized as criteria that can be used to select desktop components to subscribe to. These desktop components can be utilized to generate one or more desktops at UEs by subscribing desktop components . As noted in these desktops can be part of a personalized desktop a shared desktop etc. The control logic can then store the metadata information in memory e.g. in a data structure defining the metadata space . Further the advertisement can be made available e.g. as a publication on a channel that one or more UEs subscribe a web page another interface etc. to UEs and components . A desktop component of a UE can receive the advertisement and respond with a request for subscription.

At step the control logic receives a request over the interface from one or more desktop components for a subscription to at least one of the one or more outputs of the desktop component . As noted above the subscription request can occur in response to the advertisement. Further as the subscription can be associated with a desktop component the subscription can provide at least one input to the desktop component .

These inputs to the desktop components of a particular user interface can define respective boundaries of the desktop space. For example the desktop interface from can be defined using locally hosted desktop components desktop components hosted at other UEs cloud hosted desktop components other devices e.g. network servers etc. or a combination thereof. Moreover because the desktop space can include inputs from various locations the desktop space can comprise desktop components or information associated from desktop components of one or more devices e.g. UEs servers network components a combination thereof etc. When a runtime module of a UE selects desktop components to make up the desktop of the UE the desktop can be generated based on the desktop components which can be selected based on one or more criteria e.g. metadata used to subscribe to desktop component inputs .

Once the subscription request is received at step the control logic can determine a subscription based at least in part on a semantic analysis of the request. The semantic analysis can parse out any metadata associated with the request e.g. flat labels key words one or more identifiers e.g. identifying an author identifying a subject such as a celebrity identifying subject matter such as cars homes people locations etc. one or more types of desktop components e.g. based on size based on functionality such as calendar function social networking function or the like based on accessibility or the like etc. . Once parsed the request can be mapped to one or more subscriptions meeting the criteria. Further Boolean operations can be utilized on the parsed information to sort and or otherwise determine subscriptions. In certain embodiments the matching or partially matching subscriptions can be ranked based on a relevancy and one or more of the subscriptions can be selected. As earlier discussed the subscriptions can be recursive and or chained to allow for additional customization of desktop components .

Then at step the control logic can receive an update of a desktop component that is subscribed to. One or more parameters e.g. security parameters such as username and password device identifiers location identifiers of an updating UE permission or security certificates etc. can be utilized to ensure that only UEs with permission to update e.g. publish to the subscription are allowed to post updates. The cloud hosting platform can update a replicated version of the desktop component stored in an associated memory. Further the control logic can update a data structure e.g. a table mapping updates and available updates to subscription channels.

At step the control logic can cause publication of the update on a channel associated with subscriptions to the desktop component or information associated with the desktop component . The publication can occur by notifying a subscribed UE or subscribed desktop component to the update or by publishing the actual content on the channel.

With the above approaches a seamless virtual desktop that supports dynamically pluggable components is provided. The pub sub nature of the approach allows for an efficient manner to combine components together and to direct asynchronous updates across various devices including a cloud. Further the pub sub manner of approach lends itself well to hierarchical and recursive constructions as one component can be updated after another. Moreover in embodiments using mobile devices the device can publish one update to update a plurality of different components subscribing to the information of the mobile device.

The processes described herein for maintaining a virtual desktop may be advantageously implemented via software hardware firmware or a combination of software and or firmware and or hardware. For example the processes described herein may be advantageously implemented via processor s Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. Such exemplary hardware for performing the described functions is detailed below.

A bus includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors for processing information are coupled with the bus .

A processor or multiple processors performs a set of operations on information as specified by computer program code related to maintain a virtual desktop. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and or the computer system to perform specified functions. The code for example may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set e.g. machine language . The set of operations include bringing information in from the bus and placing information on the bus . The set of operations also typically include comparing two or more units of information shifting positions of units of information and combining two or more units of information such as by addition or multiplication or logical operations like OR exclusive OR XOR and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions such as an operation code of one or more digits. A sequence of operations to be executed by the processor such as a sequence of operation codes constitute processor instructions also called computer system instructions or simply computer instructions. Processors may be implemented as mechanical electrical magnetic optical chemical or quantum components among others alone or in combination.

Computer system also includes a memory coupled to bus . The memory such as a random access memory RAM or other dynamic storage device stores information including processor instructions for maintaining a virtual desktop. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory is also used by the processor to store temporary values during execution of processor instructions. The computer system also includes a read only memory ROM or other static storage device coupled to the bus for storing static information including instructions that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus is a non volatile persistent storage device such as a magnetic disk optical disk or flash card for storing information including instructions that persists even when the computer system is turned off or otherwise loses power.

Information including instructions for maintaining a virtual desktop is provided to the bus for use by the processor from an external input device such as a keyboard containing alphanumeric keys operated by a human user or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus used primarily for interacting with humans include a display device such as a cathode ray tube CRT or a liquid crystal display LCD or plasma screen or printer for presenting text or images and a pointing device such as a mouse or a trackball or cursor direction keys or motion sensor for controlling a position of a small cursor image presented on the display and issuing commands associated with graphical elements presented on the display . In some embodiments for example in embodiments in which the computer system performs all functions automatically without human input one or more of external input device display device and pointing device is omitted.

In the illustrated embodiment special purpose hardware such as an application specific integrated circuit ASIC is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display cryptographic boards for encrypting and decrypting messages sent over a network speech recognition and interfaces to special external devices such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.

Computer system also includes one or more instances of a communications interface coupled to bus . Communication interface provides a one way or two way communication coupling to a variety of external devices that operate with their own processors such as printers scanners and external disks. In general the coupling is with a network link that is connected to a local network to which a variety of external devices with their own processors are connected. For example communication interface may be a parallel port or a serial port or a universal serial bus USB port on a personal computer. In some embodiments communications interface is an integrated services digital network ISDN card or a digital subscriber line DSL card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments a communication interface is a cable modem that converts signals on bus into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example communications interface may be a local area network LAN card to provide a data communication connection to a compatible LAN such as Ethernet. Wireless links may also be implemented. For wireless links the communications interface sends or receives or both sends and receives electrical acoustic or electromagnetic signals including infrared and optical signals that carry information streams such as digital data. For example in wireless handheld devices such as mobile telephones like cell phones the communications interface includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments the communications interface enables connection to the communication network for the UE .

The term computer readable medium as used herein refers to any medium that participates in providing information to processor including instructions for execution. Such a medium may take many forms including but not limited to computer readable storage medium e.g. non volatile media volatile media and transmission media. Non transitory media such as non volatile media include for example optical or magnetic disks such as storage device . Volatile media include for example dynamic memory . Transmission media include for example coaxial cables copper wire fiber optic cables and carrier waves that travel through space without wires or cables such as acoustic waves and electromagnetic waves including radio optical and infrared waves. Signals include man made transient variations in amplitude frequency phase polarization or other physical properties transmitted through the transmission media. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read. The term computer readable storage medium is used herein to refer to any computer readable medium except transmission media.

Logic encoded in one or more tangible media includes one or both of processor instructions on a computer readable storage media and special purpose hardware such as ASIC .

Network link typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example network link may provide a connection through local network to a host computer or to equipment operated by an Internet Service Provider ISP . ISP equipment in turn provides data communication services through the public world wide packet switching communication network of networks now commonly referred to as the Internet .

A computer called a server host connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example server host hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system can be deployed in various configurations within other computer systems e.g. host and server .

At least some embodiments of the invention are related to the use of computer system for implementing some or all of the techniques described herein. According to one embodiment of the invention those techniques are performed by computer system in response to processor executing one or more sequences of one or more processor instructions contained in memory . Such instructions also called computer instructions software and program code may be read into memory from another computer readable medium such as storage device or network link . Execution of the sequences of instructions contained in memory causes processor to perform one or more of the method steps described herein. In alternative embodiments hardware such as ASIC may be used in place of or in combination with software to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware and software unless otherwise explicitly stated herein.

The signals transmitted over network link and other networks through communications interface carry information to and from computer system . Computer system can send and receive information including program code through the networks among others through network link and communications interface . In an example using the Internet a server host transmits program code for a particular application requested by a message sent from computer through Internet ISP equipment local network and communications interface . The received code may be executed by processor as it is received or may be stored in memory or in storage device or other non volatile storage for later execution or both. In this manner computer system may obtain application program code in the form of signals on a carrier wave.

Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor for execution. For example instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system receives the instructions and data on a telephone line and uses an infra red transmitter to convert the instructions and data to a signal on an infra red carrier wave serving as the network link . An infrared detector serving as communications interface receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus carries the information to memory from which processor retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory may optionally be stored on storage device either before or after execution by the processor .

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to maintain a virtual desktop. The memory also stores the data associated with or generated by the execution of the inventive steps.

Pertinent internal components of the telephone include a Main Control Unit MCU a Digital Signal Processor DSP and a receiver transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of maintaining a virtual desktop. The display includes display circuitry configured to display at least a portion of a user interface of the mobile terminal e.g. mobile telephone . Additionally the display and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry includes a microphone and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone is fed to a coder decoder CODEC .

A radio section amplifies power and converts frequency in order to communicate with a base station which is included in a mobile communication system via antenna . The power amplifier PA and the transmitter modulation circuitry are operationally responsive to the MCU with an output from the PA coupled to the duplexer or circulator or antenna switch as known in the art. The PA also couples to a battery interface and power control unit .

In use a user of mobile terminal speaks into the microphone and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter ADC . The control unit routes the digital signal into the DSP for processing therein such as speech encoding channel encoding encrypting and interleaving. In one embodiment the processed voice signals are encoded by units not separately shown using a cellular transmission protocol such as global evolution EDGE general packet radio service GPRS global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX Long Term Evolution LTE networks code division multiple access CDMA wideband code division multiple access WCDMA wireless fidelity WiFi satellite and the like.

The encoded signals are then routed to an equalizer for compensation of any frequency dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream the modulator combines the signal with a RF signal generated in the RF interface . The modulator generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission an up converter combines the sine wave output from the modulator with another sine wave generated by a synthesizer to achieve the desired frequency of transmission. The signal is then sent through a PA to increase the signal to an appropriate power level. In practical systems the PA acts as a variable gain amplifier whose gain is controlled by the DSP from information received from a network base station. The signal is then filtered within the duplexer and optionally sent to an antenna coupler to match impedances to provide maximum power transfer. Finally the signal is transmitted via antenna to a local base station. An automatic gain control AGC can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone other mobile phone or a land line connected to a Public Switched Telephone Network PSTN or other telephony networks.

Voice signals transmitted to the mobile terminal are received via antenna and immediately amplified by a low noise amplifier LNA . A down converter lowers the carrier frequency while the demodulator strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer and is processed by the DSP . A Digital to Analog Converter DAC converts the signal and the resulting output is transmitted to the user through the speaker all under control of a Main Control Unit MCU which can be implemented as a Central Processing Unit CPU not shown .

The MCU receives various signals including input signals from the keyboard . The keyboard and or the MCU in combination with other user input components e.g. the microphone comprise a user interface circuitry for managing user input. The MCU runs a user interface software to facilitate user control of at least some functions of the mobile terminal to maintain a virtual desktop. The MCU also delivers a display command and a switch command to the display and to the speech output switching controller respectively. Further the MCU exchanges information with the DSP and can access an optionally incorporated SIM card and a memory . In addition the MCU executes various control functions required of the terminal. The DSP may depending upon the implementation perform any of a variety of conventional digital processing functions on the voice signals. Additionally DSP determines the background noise level of the local environment from the signals detected by microphone and sets the gain of microphone to a level selected to compensate for the natural tendency of the user of the mobile terminal .

The CODEC includes the ADC and DAC . The memory stores various data including call incoming tone data and is capable of storing other data including music data received via e.g. the global Internet. The software module could reside in RAM memory flash memory registers or any other form of writable storage medium known in the art. The memory device may be but not limited to a single memory CD DVD ROM RAM EEPROM optical storage or any other non volatile storage medium capable of storing digital data.

An optionally incorporated SIM card carries for instance important information such as the cellular phone number the carrier supplying service subscription details and security information. The SIM card serves primarily to identify the mobile terminal on a radio network. The card also contains a memory for storing a personal telephone number registry text messages and user specific mobile terminal settings.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims it is contemplated that these features can be arranged in any combination and order.

