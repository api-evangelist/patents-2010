---

title: Goal state communication in computer clusters
abstract: Goal state indicators can be communicated from a fabric controller of a computer cluster to each of multiple compute instances in the computer cluster managed by the fabric controller. The goal state indicators can be formatted according to a structured protocol that defines multiple possible goal states. Additionally, status reports can be received from the compute instances. Each of the status reports can indicate a current state of one of the compute instances relative to a goal state previously indicated in a goal state indicator communicated to that one of the compute instances.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08719402&OS=08719402&RS=08719402
owner: Microsoft Corporation
number: 08719402
owner_city: Redmond
owner_country: US
publication_date: 20101021
---
Many computing activities are moving toward cloud computing environments such as computer clusters. A computer cluster as used herein includes a set of real and or virtual machines that are commonly managed by a controller entity to perform actions such as storage and computations. The controller entity which is referred to herein as a fabric controller is a computing module that allocates resources in the computer cluster. The fabric controller may be hosted on a single machine or spread over multiple machines and it may be inside and or outside the computer cluster. The fabric controller of the computer cluster can include a network of interconnected nodes where each node can be hosted on one or more real and or virtual machines.

The fabric controller can interact with compute instances which can perform computations as requested by the fabric controller and the requests of the fabric controller can depend on input provided by customers requesting the use of computer cluster resources. A compute instance may be for example a real machine or a virtual machine hosted on a real machine. Within a compute instance one or more roles may be running. A role is a deployed module such as an application that is running within a compute instance to perform computations.

Whatever the advantages of previous cloud computing tools and techniques they have neither recognized the computer cluster goal state communication tools and techniques described and claimed herein nor the advantages produced by such tools and techniques.

In one embodiment the tools and techniques can include communicating goal state indicators from a fabric controller of a computer cluster to each of multiple compute instances managed by the fabric controller in the computer cluster. The goal state indicators can be formatted according to a structured protocol that defines multiple possible goal states. Additionally status reports can be received from the compute instances. Each of the status reports can indicate a current state of one of the compute instances relative to a goal state which was previously indicated in a goal state indicator communicated to that one of the compute instances.

As used herein goal state for a compute instance refers to a state that the compute instance is expected to reach. For example the goal state may be a state of the overall compute instance and or a state of one or more roles within the compute instance. For example the goal state may include a started or stopped state of the compute instance or of one or more roles role within the compute instance. As another example a goal state may be a started state with one or more configurations being applied to a compute instance and or a role in that started state.

As used herein a status report is a data structure message file etc. that indicates the status i.e. the current state and or health of a compute instance. A current state of a compute instance relative to a goal state is a current state of the compute instance with regard to the parameter s specified by the goal state. As just one example if a goal state is a role being in a started state examples of current states may include the following for that role stopped starting and started. The health of the compute instance refers to current health attributes of the compute instance other than the current state of the compute instance relative to the goal state.

In another embodiment of the tools and techniques a goal state indicator can be communicated from a fabric controller of a computer cluster to a compute instance in the computer cluster. The goal state indicator can indicate a goal state for the compute instance. In response to receipt of the goal state indicator at the compute instance the compute instance can transition toward the goal state. While the compute instance is transitioning toward the goal state a status report can be communicated from the compute instance to the fabric controller. The status report can indicate a current state of the compute instance relative to the goal state.

In yet another embodiment of the tools and techniques goal state indicators can be communicated from a fabric controller of a computer cluster to compute instances in the computer clusters. This communication can include delivering the goal state indicators to different compute instances formatted according to different versions of a structured protocol. Status reports can be received from the compute instances at the fabric controller and each of the status reports can include a current state of one of the compute instances relative to a goal state indicated in a goal state indicator previously communicated to that one of the compute instances.

This Summary is provided to introduce a selection of concepts in a simplified form. The concepts are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Similarly the invention is not limited to implementations that address the particular techniques tools environments disadvantages or advantages discussed in the Background the Detailed Description or the attached drawings.

Embodiments described herein are directed to techniques and tools for improved communication of state information between a computer cluster fabric controller and compute instances in a computer cluster. The goal state communications may provide various benefits such as allowing compute instances in a computer cluster to have added independence as they drive themselves toward achieving goal states rather than being actively driven toward goal states by the computer cluster fabric controller. Such improvements may result from the use of various techniques and tools separately or in combination.

Such techniques and tools may include using a protocol such as a structured protocol to present a compute instance with an indication of its goal state as well as to receive from the compute instance a status report that can indicate the compute instance s current state and possibly also the compute instance s health. A fabric controller of the computer cluster may support multiple versions of the protocol at one time so that different compute instances can use different versions of the protocol to communicate with the same fabric controller. For example this may be useful if one or more compute instances can communicate using older versions of the protocol but cannot communicate using the most recent version of the protocol that is being used by the fabric controller. The fabric controller can respond to status reports from compute instances by taking appropriate actions if the reports indicate deficiencies in the compute instances that warrant such actions. For example a role in the instance may be unresponsive or the instance may be responsive but may not be transitioning toward a goal state that was previously communicated to the instance. The fabric controller may inform a user of problems in a particular compute instance reboot the instance migrate a role in the compute instance from one physical machine to a different one or take other appropriate action depending on the nature of the deficiency. The response may be constrained in a way that does not trust reports of one compute instance to the detriment of other compute instances. For example the fabric controller may send a communication to shut down a virtual machine compute instance but it may avoid shutting down a physical machine that is hosting that virtual machine compute instance as well as other virtual machine compute instances. Accordingly the fabric controller s response may affect the compute instance from which the fabric controller received a status report but the response may be limited to avoid adversely affecting other compute instances in response to the report.

The subject matter defined in the appended claims is not necessarily limited to the benefits described herein. A particular implementation of the invention may provide all some or none of the benefits described herein. Although operations for the various techniques are described herein in a particular sequential order for the sake of presentation it should be understood that this manner of description encompasses rearrangements in the order of operations unless a particular ordering is required. For example operations described sequentially may in some cases be rearranged or performed concurrently. Techniques described herein with reference to flowcharts may be used with one or more of the systems described herein and or with one or more other systems. For example the various procedures described herein may be implemented with hardware or software or a combination of both. Moreover for the sake of simplicity flowcharts may not show the various ways in which particular techniques can be used in conjunction with other techniques.

The computing environment is not intended to suggest any limitation as to scope of use or functionality of the invention as the present invention may be implemented in diverse general purpose or special purpose computing environments.

With reference to the computing environment includes at least one processing unit and memory . In this most basic configuration is included within a dashed line. The processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory or some combination of the two. The memory stores software implementing goal state communication in computing in a computer cluster.

Although the various blocks of are shown with lines for the sake of clarity in reality delineating various components is not so clear and metaphorically the lines of and the other figures discussed below would more accurately be grey and blurred. For example one may consider a presentation component such as a display device to be an I O component. Also processors have memory. The inventors hereof recognize that such is the nature of the art and reiterate that the diagram of is merely illustrative of an exemplary computing device that can be used in connection with one or more embodiments of the present invention. Distinction is not made between such categories as workstation server laptop handheld device etc. as all are contemplated within the scope of and reference to computer computing environment or computing device. 

A computing environment may have additional features. In the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and may include non transitory computer readable storage media such as magnetic disks magnetic tapes or cassettes CD ROMs CD RWs DVDs or any other medium which can be used to store information and which can be accessed within the computing environment . The storage stores instructions for the software .

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device a network adapter a CD DVD reader or another device that provides input to the computing environment . The output device s may be a display printer speaker CD DVD writer network adapter or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. Thus the computing environment may operate in a networked environment using logical connections to one or more remote computing devices such as a personal computer a server a router a network PC a peer device or another common network node. The communication medium conveys information such as data or computer executable instructions or requests in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired or wireless techniques implemented with an electrical optical RF infrared acoustic or other carrier.

The tools and techniques can be described in the general context of computer readable storage media. Computer readable storage media are any available non transitory storage media that can be accessed within a computing environment. By way of example and not limitation with the computing environment computer readable storage media include memory storage and combinations of the above.

The tools and techniques can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing environment on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing environment. In a distributed computing environment program modules may be located in both local and remote computer storage media.

For the sake of presentation the detailed description uses terms like determine choose adjust and operate to describe computer operations in a computing environment. These and other similar terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being unless performance of an act by a human being such as a user is explicitly noted. The actual computer operations corresponding to these terms vary depending on the implementation.

Communications between the manager and the compute instances may utilize one or more agents to assist in forwarding messages through the computer cluster . For example a proxy or host agent may be present on a physical machine that hosts one or more of the compute instances and or as virtual machine s running on the physical machine or a host agent for a compute instance may exist elsewhere in the fabric controller . The fabric controller may include multiple host agents such as one host agent for each physical machine in the computer cluster that is a compute instance or or that hosts one or more compute instances and or . Additionally the compute instances and may contain agents that assist in communications. For example a compute instance or may include a guest agent that communicates with the host agent in the fabric controller . Accordingly the host agent may be hosted on a physical machine and the guest agent may be hosted on a virtual machine being hosted by that physical machine. Alternatively the host agent and the guest agent may be running in the same physical machine.

Each compute instance and can run one or more roles . For example a role may be a web role customized for web application programming a worker role for generalized development or a machine role e.g. a virtual machine role that can allow more generalized and independent use of a compute instance and than web roles or worker roles. The roles may also be other types of roles.

The computer cluster may also include additional components and modules such as storage components. As an example the computer cluster may be running a Windows Azure cloud services operating system that includes support for computer cluster goal state communications as described herein.

A service model can be used to describe the composition of a service to be run in the computer cluster . This may include a description of the service s constituent applications or roles and their individual resource requirements. The service model may be a declarative model so that resources outside the definition are not to be used by the service. The instantiation of a service in the computer cluster can be referred to as a deployment. The service model can also indicate constraints to be satisfied as a service is instantiated into a deployment. For example a simple service with one front end may define a service model indicating that the service includes a front end and what resources the front end will use. The service model can also indicate the instances of the front end in the form of roles . The resources to be used by the front end could be for example an amount of processing capacity a size of storage resources network endpoints memory size etc. to be made available to the front end. Additionally a configuration specified for the front end could include a background color of a webpage a title of the webpage etc. Thus a service deployment running in the computer cluster may include one or more roles running in one or more of the compute instance and . This may include running a service s roles in one instance or in multiple instances.

The manager can be a kernel of the operating system for the computer cluster . The manager may use service models which provide static descriptions as noted above to allocate resources in the computer cluster between deployments of different services at particular times. The operating system of the computer cluster may also expose a service management API to control the lifecycle of service deployments.

Different events may trigger changes in the goal state of an instance or . These events may include service model updates platform updates hardware failures in the compute instances or etc. For example user input may be provided where the input indicates an update to the background color of a front end role by updating the configuration described in the service model. As another example a user may provide user input indicating that instances and or running roles for that user are to be stopped. The computer cluster can deliver such goal states to the compute instances and and can monitor the current state and health of the compute instances and as the compute instances and transition toward their goal states and .

Each compute instance and can learn the goal state that the compute instance and is to be running in. To do this each compute instance and can establish a communication channel with the fabric controller . This may be done in various ways such as by publishing a fixed public IP address for which the computer cluster can set up a route so that communications directed to that public IP address will be redirected to the right entity which can respond with the desired state of the compute instance or . For example communications to the public IP address may be forwarded to the host agent which can in turn forward communications to the compute instance or such as to a guest agent within the compute instance or . Communications through the communication channels can be formatted according to a protocol which can treat each compute instance and as a black box to which goal state indications are sent and from which the current status reports are received.

The protocol can be a structured protocol to facilitate structured communications of goal state and related information across the communication channels . Accordingly the protocol formatted communications across the communication channels can provide for each compute instance and an interface for communications between the compute instance and and the fabric controller . The protocol could be any of various types of protocols. For example the protocol can be a REST Representational State Transfer based protocol which can utilize HTTP formatted messages. The REST based protocol can use a pull model from the perspective of the compute instances and so that the compute instances can initiate requests to the fabric controller . The fabric controller can process the requests and return responses.

Referring to some examples of request response exchanges in a computer cluster between a fabric controller and a compute instance using the REST based protocol will be discussed. The fabric controller and the compute instance can have an established communication channel as described above such as by having the fabric controller supply an IP address which may be the IP address of a host agent for the compute instance using a DHCP option and having the compute instance communicate on that IP address or having the compute instance publish a public IP address to which messages from the fabric controller can be sent .

The computer cluster may support multiple versions of the protocol at the same time. Accordingly the compute instance can discover what protocol versions are currently supported and can choose one of those protocol versions to communicate with the fabric controller . The compute instance may send a version information query to the fabric controller . For example the version information query may be an HTTP GET request formatted as follows 

In this example is a placeholder for a base URI for overall resources specified according to the protocol and comp versions specifies the sub resource with version information.

In response to the version information query the fabric controller can send version information . For example the version information may be in the form of an XML document with text such as the following 

Using the protocol over a communication channel with the fabric controller the compute instance can issue queries to the fabric controller and can receive in return an indication of the goal state of the compute instance from the perspective of the fabric controller . That goal state may include one or more of various state parameters indicating a state that is expected of the compute instance. For example the goal state may include one or more of the following an expected runtime state of the overall compute instance a list of one or more roles to be running in the compute instance and their expected runtime states from the perspective of the fabric controller configuration information for specific roles configuration information for the compute instance such as a network configuration for the compute instance and secrets e.g. certificates and passwords for the compute instance and its roles which can be sent in a secured manner such as by encrypting the certificates and passwords using public and private key techniques .

The compute instance can receive the goal state indicator and work toward achieving the indicated goal state. As the compute instance transitions toward the goal state by performing actions to achieve that state the compute instance can continue sending status reports to the fabric controller . The status reports can indicate the state of the compute instance relative to the goal state which can include the state of roles running in the compute instance . The status report can also indicate health of the overall compute instance and its roles which can include information in addition to the state of the instance relative to the goal state. The status report can be used by the fabric controller to perform operations in response like continuing with updates or pausing for things to settle down . Information from the status report can also be exposed to users to present the users with a complete picture of the status of the deployment of their service which may be running on one compute instance or spread over multiple compute instances .

The protocol can provide a structured way to expose an interface for the compute instance to report its instance level status e.g. health of the overall compute instance and information on accounts created on the compute instance and the status of individual roles within the compute instance . As the status of the compute instance changes the compute instance can continue sending status reports to indicate the changes. As discussed above the queries responses and reports can be provided by the compute instance in one or more of various different structured ways such as different protocols or different versions of a protocol.

Referring still to some examples of communications between the compute instance and the fabric controller will be discussed. The compute instance can send a goal state query to the fabric controller which can request the goal state for the compute instance . For example the goal state query can be an HTTP GET request against a URI for the goal state of the compute instance . For example the goal state query may be formatted as follows 

In response to the goal state query the fabric controller can send a goal state indicator . Following is an example of an HTTP response with such an indicator in XML format 

The goal state indicator can indicate a version of the protocol being used 2010 03 31 and can include an incarnation indicator 12 . The incarnation indicator can be used later by the compute instance to determine whether a newer incarnation of the goal state indicator is available as will be discussed more below. The goal state indicator can indicate the goal runtime state for the overall compute instance indicated as Started which indicates that the goal state for the overall compute instance is for the compute instance to be started. Similarly if the goal runtime state of the compute instance were to be stopped this could be indicated as Stopped . The goal state indicator can also include a listing of roles which can each be specified by a different instance ID e.g. R1 . Additionally for each role the goal state indicator can indicate configuration indications specified in the . . . . section for each listed role that are available and can be requested by the compute instance.

Using the configuration indications from the goal state indicator the compute instance can send configuration queries to request the configuration indicators which can specify the configurations. The configurations may be specified in various ways. Some or all of the configurations may not be understood by the fabric controller e.g. the hosting environment configuration information while other information may be understood by and useable by the fabric controller e.g. the shared configuration information . Accordingly at least a portion of the configuration information may be specific to the roles running in the compute instance . Other configuration information may be shared by many roles throughout the computer cluster . As an example to receive the hosting environment configuration indicator specified in the example above the compute instance can send an HTTP GET request for the URI http host ip machine C1 R1 comp config type hostingEnvironmentConfig incarnation 12 . The response can include the configuration indicator such as in the form of XML contents specified for that role R1 as specified in container C1 . Similar configuration queries can be sent from the compute instance to the fabric controller for shared configurations for that role and for other roles if configurations of other roles were indicated in the goal state indicator .

Referring still to the compute instance can also send certificate queries and the fabric controller can respond by sending the certificates in a secure manner such as using public and private keys. Following is an example of a certificate query 

Additionally the compute instance can send a user account details query to request details for a user account in the compute instance . The fabric controller can respond with the requested user account details . Some or all of the user account details e.g. passwords can be sent in a secure manner such as by using public and private keys.

In addition to sending the queries discussed above the compute instance can send a status report to the fabric controller . The status report can indicate the current state and health of the compute instance and its roles. The compute instance can repeatedly send a current status report to the fabric controller at some periodic interval such as every 5 seconds or every 15 seconds. This can be done whether the compute instance is transitioning toward its goal state or has already reached its goal state. Accordingly the fabric controller can continue to monitor the status of the compute instance whether the compute instance is transitioning toward a goal state or already at a goal state by examining the status report or by noticing that the compute instance has ceased sending status reports for a specified period of time. Following is an example of a status report that indicates the state of two roles R1 and R2 and that is sent using an HTTP PUT message 

As can be seen the state of role R1 is indicated as ready while the state of role R2 is indicated as not ready. Details of R2 s health are also provided along with its not ready state. Specifically there is a sub status indication that the role failed to start. Other sub status indications could include for example indications that the role is initializing busy stopped aborted unresponsive or unhealthy. For each of these additional details can be provided as a string in the Description field. The compute instance can also indicate its overall compute instance level state. For example the compute instance state may be indicated as started or stopped healthy or unhealthy etc. The status report could also indicate whether specific configuration changes have been successfully implemented. For example the status report could indicate whether a particular role had implemented a configuration change that had been requested e.g. a color change to a background of a front end web application . Such changes can be considered to be transitions to different states and their details can be reported in the status report .

In response to the status report the fabric controller can respond with a current goal state incarnation number . The compute instance can compare the received goal state incarnation number with the incarnation number for the goal state indicator that was received most recently by the compute instance . If the numbers are different then the compute instance can send a goal state query to retrieve the most recent goal state indicator as well as other related updated information new configuration indicators etc. .

The specifics of communicating the goal state indicator from the fabric controller to the compute instance could be different. For example a different protocol could be used e.g. a WCF Windows Communication Foundation based protocol using standard web services bindings or an HTTP based protocol where the fabric controller pushes the goal state indicator and other information to the compute instance . As another example a goal state indicator could also include configuration indicators certificates user account details and or other information within a single message. As yet another alternative the information in the goal state indicator could be broken into smaller segments and sent in even more messages. Additionally the request response exchanges in a computer cluster could be reordered from what is depicted in and described above. For example the queries could be reordered. Moreover one or more status reports like the status report could be sent before information was received by the compute instance in response to some or all of the queries and or and also before some or all of the queries and or were sent.

Several computer cluster goal state communication techniques will now be discussed. Each of these techniques can be performed in a computing environment such as the environments of . For example each technique may be performed in a computer system that includes at least one processor and a memory including instructions stored thereon that when executed by the at least one processor cause the at least one processor to perform the technique a memory stores instructions e.g. object code and when the processor s execute s those instructions the processor s perform s the technique . Similarly one or more computer readable storage media may have computer executable instructions embodied thereon that when executed by at least one processor cause the at least one processor to perform the technique.

Referring to a computer cluster goal state communication technique will be described. In the technique goal state indicators can be communicated from a fabric controller of a computer cluster to each of multiple compute instances managed by the fabric controller in the computer cluster. For example the communication of the goal state indicators can be done in response to requests from the compute instances. The goal state indicators can be formatted according to a structured protocol that defines multiple possible goal states. Additionally status reports can be received from the compute instances. Each of the status reports can indicate a current state of one of the compute instances relative to a goal state previously indicated in a goal state indicator communicated to that one of the compute instances. The status reports can be formatted according to the structured protocol.

The computer cluster can be operable to deliver goal state indicators to different compute instances in the computer cluster with the goal state indicators formatted according to different versions of the structured protocol.

The technique of can further include determining whether a status report indicates a deficiency in a first compute instance in the environment that warrants a response. If so then one or more actions can be taken in response to the indicated deficiency. The one or more actions can be limited to avoid adversely impacting one or more compute instances in the computer cluster other than the first compute instance. The first compute instance can include at least a portion of a deployment of a first service and the one or more compute instances other than the first compute instances can include at least a portion of one or more deployments of one or more services other than the first service.

Referring now to another computer cluster goal state communication technique will be described. The technique can include communicating a first goal state indicator from a fabric controller of a computer cluster to a compute instance in the computer cluster. For example the compute instance can be a virtual machine. The first goal state indicator can indicate a first goal state for the compute instance. In response to receipt of the first goal state indicator at the compute instance the compute instance can transition toward the first goal state. The compute instance can transition toward the first goal state without being driven toward the first goal state by external modules such as the fabric controller or components within the fabric controller. While the compute instance transitions toward the first goal state a first status report can be communicated from the compute instance to the fabric controller.

Additionally a second goal state indicator can be communicated from the fabric controller to the compute instance. The second goal state indicator can supersede the first goal state indicator and can indicate a second goal state for the compute instance. The second goal state indicator may be communicated before the compute instance reaches the first goal state. In response to receipt of the second goal state indicator at the compute instance the compute instance can transition toward the second goal state. While the compute instance is transitioning toward the second goal state a second status report can be communicated from the compute instance to the fabric controller. The second status report can indicate a current state of the compute instance relative to the second goal state and can also indicate a current health of the compute instance.

One or both of the goal state indicators can be communicated and or in response to a request from the compute instance. Additionally one or both of the status reports can be communicated without the compute instance receiving a request for that status report from the fabric controller. Also the computer cluster can be operable to generate and deliver goal state indicators to different compute instances formatted according to different versions of a structured protocol. The goal state indicators and the status reports can be formatted according to a structured protocol such as a structured REST based protocol. The first and or second goal states can be selected from a group consisting of starting a specified role in the compute instance stopping a specified role in the compute instance and combinations thereof.

While the compute instance is transitioning toward the second goal state and possibly also while the compute instance is transitioning toward the first goal state additional status reports can be communicated from the compute instance to the fabric controller. The additional status reports can each indicate a current state of the compute instance relative to the goal state. Moreover another status report can be communicated from the compute instance to the fabric controller when the compute instance has reached the goal state. The other status report can indicate a current state of the compute instance as having reached the goal state.

The technique of may also include determining whether one or more of the status reports indicates a deficiency that warrants a response. For example determining whether a deficiency warrants a response may be done by consulting rules that dictate what types of deficiencies warrant responses how long to allow a deficiency to exist before it warrants a response and what responses are to be taken for specified types of deficiencies. Additionally one or more responses can be taken by the fabric controller in response to the indicated deficiency. For example the one or more actions can include moving an instance of a role in the compute instance from a first physical machine to a second physical machine. Such response may be limited to responses that do not adversely affect other compute instances in the computer cluster.

Referring now to yet another computer cluster goal state communication technique will be described. The technique can include communicating goal state indicators from a fabric controller of a computer cluster to compute instances in the computer cluster. Communicating the indicators can include delivering the goal state indicators to different compute instances formatted according to different versions of a structured protocol. Additionally status reports can be received from the compute instances by the fabric controller. Each of the status reports can include a current state of one of the compute instances relative to a goal state indicated in a goal state indicator previously communicated to that one of the compute instances. Each of the status reports can be received from a corresponding compute instance and each can be formatted according to a version of the protocol used to communicate a goal state indicator to that corresponding compute instance.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

