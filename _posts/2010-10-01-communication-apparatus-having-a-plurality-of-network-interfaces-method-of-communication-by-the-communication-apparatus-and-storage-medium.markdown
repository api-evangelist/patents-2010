---

title: Communication apparatus having a plurality of network interfaces, method of communication by the communication apparatus, and storage medium
abstract: A communication apparatus which is capable of performing multicasting or broadcasting using a user-desired network interface. An MFP implementing the communication apparatus includes a plurality of network interfaces and performs multicasting or broadcasting via at least one of the network interfaces. A controller unit provides an application programming interface to an application that operates on the MFP. An operator of the MFP operates an operation unit to set a transmission condition for transmitting a multicast packet and a broadcast packet via a predetermined network interface. When a plurality of active network interfaces are detected, one of the plurality of detected active network interfaces which satisfies the set transmission condition is selected and multicasting or broadcasting is performed via the selected network interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08411682&OS=08411682&RS=08411682
owner: Canon Kabushiki Kaisha
number: 08411682
owner_city: 
owner_country: JP
publication_date: 20101001
---
The present invention relates to a communication apparatus and a method of communication by the communication apparatus as well as to a storage medium storing a program for implementing the method and more particularly to a technique for constructing a platform which makes it possible for a communication apparatus having a plurality of network interfaces to operate without requiring an application operating in an upper layer to be conscious of the number of the network interfaces.

Conventionally a method called multicast or broadcast is generally employed when an application operating in a multifunction peripheral or a printer searches for another multifunction peripheral or printer a personal computer a server etc. on a TCP IP network.

Multicast is a method of simultaneously transmitting data to a plurality of nodes on a network. This method makes it possible to transmit the same data to nodes belonging to a specific group called a multicast group. In a search performed using multicast a device a printer a multifunction peripheral etc. as a search target which is searched for belongs to a predetermined multicast group and a device which performs the search sends out a multicast packet addressed to the multicast group. Upon receipt of the multicast packet the device as the search target sends a response packet to the sender using unicast. The sender i.e. the device which performs the search refers to address information and name information on a node contained in the response packet to thereby identify the node. In general a device search using multicast is performed in the above described procedure. It should be noted that above mentioned unicast is a method in which a single node is designated as a destination.

On the other hand broadcast is a technique of simultaneously transmitting a packet to an unspecified number of nodes on a network. In a search performed using broadcast a device which performs the search transmits a broadcast packet. When receiving the broadcast packet a device as a search target sends a response packet to the sender using unicast. The sender i.e. the device which performs the search refers to address information and name information on a node contained in the response packet to thereby identify the node. In general a device search using broadcast is performed in the above described procedure.

Recently in developing software which operates on a multifunction peripheral or a printer there has been an increasing tendency to improve development efficiency by using a source code that is common for different platforms and device models. This is useful for developing software in a shorter time period in recent product planning in which it is general to develop a plurality of models in parallel at the same time. More specifically by using a common source code as much as possible between models different in hardware configuration or optional equipment it is possible to reduce the number of software development steps to thereby develop a product in a shorter time period and at lower costs.

As a technique of sharing the source code of an application program between such products a method of installing a Java registered trademark platform in a printer a multifunction peripheral or the like is coming into widespread use. Java registered trademark software operates without being dependent on a specific OS Operating System or a CPU Central Processing Unit . Therefore an application developer is required to create a single application using Java registered trademark whereby it is possible to support all products on which the Java registered trademark platform is installed.

Further in recent printers and multifunction peripherals there have been an increasing number of models having a plurality of network interfaces as standard equipment or optional equipment. In one example of configuration a model has an Ethernet registered trademark interface as standard equipment and a wireless LAN Local Area Network interface as optional equipment. These network interfaces can be used at the same time. A system configuration enabling the simultaneous use of multiple network interfaces is called multihoming and it is employed not only in a printer or a multifunction peripheral. It should be noted that the number of multiple network interfaces is not limited to two. Although not general a device which is capable of operating three or more network interfaces at the same time is also considered to be multihomed. For example there has been proposed a technique of configuring a multihomed device such that a packet received via one network interface is transferred to another network interface depending on specific conditions see e.g. Japanese Patent Laid Open Publication No. 2004 32076 .

However in a case where an application for performing multicast or broadcast transmission is operated on a multihomed device having the above described system configuration of multihoming there occur problems described below. For example if a program code for executing multicast or broadcast transmission is described using a standard code using the language as a general program language or Java registered trademark it usually can send packets to a single interface alone. In general in a case where an application that operates on a multihomed device transmits a multicast or broadcast packet so as to search for a device on a network it is envisaged as a basic operation to transmit the packet from all network interfaces of the device.

Further when an application developed using the language or Java registered trademark mentioned above is operated on a multihomed device a packet is delivered to only one of multiple network interfaces and hence it sometimes occurs that only nodes connected to the network interface can be searched. In such a case if it is attempted to cause a multicast or broadcast packet to be delivered to all the network interfaces constituting the multihome it is required to write a dedicated program code. For example to cause a multicast packet to be delivered to a plurality of network interfaces by a program code written using the language it is required to describe a sequence of processes for designating IP MULTICAST IF as the fourth argument of setsockopt and designating the interfaces to which the multicast packet is to be sent. As described above in order to develop an application that delivers a multicast or broadcast packet to all network interfaces on a multihomed device it is required to incorporate a dedicated code in the application.

On the other hand an application developed for a conventional device provided with a single network interface does not incorporate a dedicated code for performing multicast or broadcast transmission in a multihome environment which makes it impossible to make the code common between different devices. Particularly in the case of a Java registered trademark application for recent multifunction peripherals specifications of the Java registered trademark platform of each multifunction peripheral is disclosed and application development is being executed based on the premise of the use of a Java application in the multifunction peripheral. In such a case it can be envisaged to use an application originally developed assuming the use of a single network interface also in a multihomed device which brings about a significant problem.

Further in Japanese Patent Laid Open Publication No. 2004 32076 mentioned above there has been proposed a method of controlling a plurality of network interfaces including transferring a packet received via one network interface to another network interface on a multihomed device. In addition for a general route a technique has conventionally been proposed in which a packet received via one network interface is transferred to another single interface or other network interfaces. However these techniques perform control by software coded specifically for a device having a particular device configuration and hence are not suitable for the use of an application being operated on a plurality of hardware devices having various different device configurations.

Further there is a need for controlling interfaces via which a multicast or broadcast packet is to be transmitted from the viewpoint of security and userfriendliness. For example a user who logs in to a multifunction peripheral may be a guest user or a highly authorized user and hence there is sometimes a case where an accessible network is desired to be limited according to user s rights. Now let it be assumed that one network interface of a multihomed device is connected to a first LAN accessible by a guest user and the other network interface of the same is connected to a second LAN with high confidentiality. In this case it is preferred that when a guest user accesses the network by operating the multifunction peripheral the multifunction peripheral can only connect to the first LAN alone whereas when a highly authorized user operates the multifunction peripheral the multifunction peripheral can connect to both the first LAN and the second LAN. In other words besides the problem that multicast or broadcast transmission cannot be performed via all the network interfaces of the multihomed device there is also a problem unless a network interface via which a packet is to be transmitted cannot be controlled it is undesirable from the viewpoint of security and userfriendliness.

The present invention provides a communication apparatus which is configured as a multihomed device and is capable of performing multicasting or broadcasting using a user desired network interface without developing an application incorporating a dedicated code.

In a first aspect of the present invention there is provided a communication apparatus including a plurality of network interfaces and a communication unit for performing multicasting or broadcasting via at least one of the network interfaces comprising a control unit configured to provide an application programming interface to an application that operates on the communication apparatus a detection unit configured to detect any active network interface among the plurality of network interfaces and a setting unit configured to set a transmission condition for transmitting a multicast packet and a broadcast packet via a predetermined network interface wherein when the detection unit detects a plurality of active network interfaces the communication unit selects one of the plurality of detected active network interfaces which satisfies the transmission condition set by the setting unit and performs multicasting or broadcasting via the selected network interface in response to the control unit receiving a multicast or broadcast transmission request from the application.

In a second aspect of the present invention there is provided a communication apparatus including a plurality of network interfaces and a communication unit for performing multicasting or broadcasting via at least one of the network interfaces comprising a control unit configured to provide an application programming interface to an application that operates on the communication apparatus and a detection unit configured to detect any active network interface among the plurality of network interfaces wherein when the detection unit detects a plurality of active network interfaces the communication unit performs multicasting or broadcasting via the plurality of active network interfaces detected by the detection unit in response to the control unit receiving a multicast or broadcast transmission request from the application.

In a third aspect of the present invention there is provided a method of communication by a communication apparatus that includes a plurality of network interfaces and performs multicasting or broadcasting via at least one of the network interfaces comprising providing an application programming interface to an application that operates on the communication apparatus detecting any active network interface among the plurality of network interfaces setting a transmission condition for transmitting a multicast packet and a broadcast packet via a predetermined network interface selecting when a plurality of active network interfaces are detected one of the plurality of detected active network interfaces which satisfies the set transmission condition and performing multicasting or broadcasting via the selected network interface in response to receiving a multicast or broadcast transmission request from the application.

In a fourth aspect of the present invention there is provided a method of communication by a communication apparatus that includes a plurality of network interfaces and performs multicasting or broadcasting via at least one of the network interfaces comprising providing an application programming interface to an application that operates on the communication apparatus detecting any active network interface among the plurality of network interfaces and performing when a plurality of active network interfaces are detected multicasting or broadcasting via the plurality of detected active network interfaces in response to receiving a multicast or broadcast transmission request from the application.

In a fifth aspect of the present invention there is provided a non transitory computer readable storage medium storing a computer executable program for causing a computer to execute a method of communication by a communication apparatus that includes a plurality of network interfaces and performs multicasting or broadcasting via at least one of the network interfaces wherein the method comprises providing an application programming interface to an application that operates on the communication apparatus detecting an active network interface among the plurality of network interfaces setting a transmission condition for transmitting a multicast packet and a broadcast packet via a predetermined network interface selecting when a plurality of active network interfaces are detected one of the plurality of detected active network interfaces which satisfies the set transmission condition and performing multicasting or broadcasting via the selected network interface in response to receiving a multicast or broadcast transmission request from the application.

In a sixth aspect of the present invention there is provided a non transitory computer readable storage medium storing a computer executable program for causing a computer to execute a method of communication by a communication apparatus that includes a plurality of network interfaces and performs multicasting or broadcasting via at least one of the network interfaces wherein the method comprises providing an application programming interface to an application that operates on the communication apparatus detecting an active network interface among the plurality of network interfaces and performing when a plurality of active network interfaces are detected multicasting or broadcasting via the plurality of detected active network interfaces in response to receiving a multicast or broadcast transmission request from the application.

According to the present invention the communication apparatus as a multihomed device is capable of performing multicasting or broadcasting using a user desired network interface without developing an application incorporating a dedicated code.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings .

The present invention will now be described in detail below with reference to the accompanying drawings showing embodiments thereof.

Referring to reference numeral denotes the above mentioned MFP provided with two network interfaces. One of the two network interfaces is connected to a LAN Local Area Network A and the other is connected to a LAN B . It is assumed that each of the LAN A and the LAN B is implemented by an Ethernet registered trademark .

Connected to the LAN A are an MFP and an MFP such that the MFPs and can communicate with the MFP using an IP protocol. It should be noted that no router exists between the MFP and the MFPs and . More specifically the network is configured such that a broadcast packet or a multicast packet from the MFP can reach the MFPs and .

Connected to the LAN B are an MFP and an MFP such that the MFPs and can communicate with the MFP using an IP protocol. It should be noted that no router exists between the MFP and the MFPs and . More specifically the network is configured such that a broadcast packet or a multicast packet from the MFP can reach the MFPs and .

A controller unit controls the overall operation of the MFP . The controller unit is connected to a scanner unit that reads an image and a printer unit that prints an image and performs control for realizing a copy function of causing the printer unit to print out image data read by the scanner unit .

Further the controller unit is provided with component elements described below. A CPU Central Processing Unit starts up an operation system OS by a boot program stored in a ROM Read Only Memory and executes application programs hereinafter abbreviated as applications stored in an HDD Hard Disk Drive on the OS to thereby carry out various operations. A RAM Random Access Memory is used as a work area for the CPU . The RAM is also used as an image memory for temporarily storing image data.

The HDD stores not only the above mentioned applications but also image data. Connected to the CPU via a system bus are an operation unit interface I F a network interface A a network interface B a modem and an image bus interface .

The operation unit interface provides interface for communication with an operation unit having a touch panel and image data to be displayed on the operation unit is output to the operation unit via the operation unit interface . Further the operation unit interface transfers information input by a user via the operation unit to the CPU .

The network interface A which is formed by integrating an network interface card NIC into an ASIC Application Specific Integrated Circuit is connected to the LAN A . Similarly the network interface B is formed by integrating an NIC into an ASIC and is connected to the LAN B . It is assumed that the network interface A is implemented by an Ethernet registered trademark while the network interface B is a wireless LAN.

The modem is connected to a public communication line WAN Wide Area Network to transmit and receive information via the WAN .

The image bus interface is a bus bridge that connects the system bus with an image bus that is for use in high speed transfer of image data and performs conversion of data format. The image bus is implemented by a PCI bus or an IEEE 1394. On the image bus there are provided a raster image processor RIP a device interface a scanner image processor a printer image processor an image rotation unit and an image compression unit .

The RIP is a processor that rasterizes PDL code into a bitmap image. The device interface is connected to the scanner unit and the printer unit and performs synchronous to asynchronous or asynchronous to synchronous conversion of image data. The scanner image processor corrects manipulates and edits input image data. The printer image processor performs correction resolution conversion etc. of image data to be printed out such that the image data conforms to a printer. The image rotation unit rotates image data. The image compression unit compresses multi valued image data into JPEG data and binary image data into JBIG MMR or MH formatted data as well as performs expansion of the compressed data.

A login application authenticates an operator user of the MFP and performs login processing. A UI User Interface section is an application for causing the MFP to display a UI User Interface screen. A bitmap image generated by the UI section is displayed on the operation unit via the operation unit interface .

A configuration DB is a database DB storing various kinds of configuration information on the MFP . The various kinds of configuration information include an IP address of the MFP set e.g. by the user via the operation unit and user rights information to be referred to by the login application .

An NW APP is an application group of applications that operate on the MFP using a network. The NW APP includes an application that receives a print job via a network such as an LPD Line Printer Daemon or an IPP Internet Printing Protocol . Further the NW APP includes software programs such as an SNMP Simple Network Management Protocol program and an SLP Service Location Protocol program which provide functions of device management service search and so forth. Furthermore software that provides a function of searching for a device on a network is also included in the NW APP . This software is used so as to search for a device or a service on the network using a protocol such as the SNMP or the SLP to thereby cause the present MFP to function in cooperation with found device.

A Java registered trademark APP is an application group of applications written in Java registered trademark . Similarly to the NW APP the Java registered trademark APP is developed to use the network function of the MFP and performs device search using broadcasting or multicasting. A Java registered trademark VM Java Virtual Machine is provided to operate the Java registered trademark APP . A socket API wrapper is a wrapper function group for a socket API referred to hereinafter. The NW APP and the Java registered trademark VM do not call a socket API Application Programming Interface provided by the OS but call the socket API wrapper .

Upon receiving an API call from the NW APP or the Java registered trademark VM the socket API wrapper calls an associated API of the socket API according to the content of the received call. The socket API is an API group for providing general socket functions and is incorporated in the OS as standard equipment. A protocol stack is responsible for communication function of IP protocols and is incorporated in the OS as standard equipment.

A network driver A is a device driver that controls the network interface A . A network driver B is a device driver that controls the network interface B .

The above mentioned software group ranging from the login application to the network driver B is generally stored in the HDD and each software program is loaded into the RAM as required and is executed by the CPU . Applications ranging from the login application to the socket API wrapper operate in the application space on the OS while applications ranging from the socket API to the network driver B operate in the kernel space on the OS. It should be noted that the OS on which the software programs operate and software groups for realizing the other functions of the multifunction peripheral are also stored in the HDD and are each loaded into the RAM as required for execution.

Next a description will be given of operation processes executed by the MFP for transmitting a multicast packet via both the network interface A and the network interface B .

Unless otherwise specified as settings concerning a user logged in or other conditions whenever the NW APP or the Java registered trademark APP issues a multicast transmission request the MFP performs multicast transmission via all the network interfaces provided therein. That is e.g. when a user is not registered by the login application or when a network interface via which a multicast packet is to be transmitted is not set the MFP performs multicast transmission via all the network interfaces.

Referring to in a step S the socket API wrapper determines whether or not a processing command received when its own wrapper API is called is for multicast transmission. The socket API wrapper represents wrappers of standard functions in C programming language and the wrappers include the wrapper of the socket API as well. If a called API is an API for use in multicast transmission such as sendto it is checked whether or not a destination IP address is a multicast address. In sendto the IP address is contained in the structure of the fifth argument. If the destination IP address is a multicast address i.e. if the address assumes a value in a range between 224.0.0.0 and 239.255.255.255 it is determined that the command received from a higher order application is a multicast transmission command YES to the step S . On the other hand if the received command is not a multicast transmission command NO to the step S the socket API wrapper immediately transfers the processing command to the socket API without modifying the content of the command.

In the present embodiment the NW APP and the Java registered trademark APP use the SLP Service Location Protocol to search for a service on the network. The NW APP and the Java registered trademark APP transmits data shown in . This means that the data shown in is set as the second argument of sendto in the program code C language forming the NW APP or the Java registered trademark APP . shows an example of SLD data. It should be noted that although the data shown in is divided into field units so as to visualize the contents of the data the data is set as hexadecimal data in the actual program code.

Referring again to if it is determined in the step S that the command received from the higher order application is a multicast transmission command YES to the step S the process proceeds to a step S. In the step S the socket API wrapper determines whether or not the self apparatus MFP in the present example where the socket API wrapper operates is a multihomed device. A multihomed device means a device configured to enable simultaneous use of a plurality of network interfaces as described hereinbefore.

In the step S the socket API wrapper queries the OS to find currently active network interfaces of the MFP . If there are detected a plurality of active network interfaces the socket API wrapper determines that the self apparatus MFP in the present example is a multihomed device. On the other hand if the MFP is not a multihomed device NO to the step S the socket API wrapper immediately transfers the processing command to the socket API without modifying the content of the command. In the present embodiment the two network interfaces i.e. the network interface A and the network interface B exist as active ones and therefore the MFP is determined as a multihomed device.

Then in a step S the socket API wrapper sets a socket option such that the multicast packet can be sent to each of the currently active network interfaces. This processing is performed by designating IP MULTICAST IF as the third argument of setsockopt . At the same time the IP address of an interface desired for multicast transmission is set in the fourth argument. Therefore the socket API wrapper acquires an IP address associated with the network interface A and sets the value of the acquired IP address in the fourth argument of setsockopt to execute the command. Then the socket API wrapper acquires an IP address associated with the network interface B and sets the value of the acquired IP address in the fourth argument of setsockopt to execute the command. Thus the command issued by the higher order application in the step S for transmitting a multicast packet is registered in a protocol stack such that the packet is to be delivered to both the network interface A and the network interface B .

Then in a step S the socket API wrapper executes transmission of the multicast packet using sendto In this case the arguments set in sendto are the same as the contents called by the higher order application in the step S. In this timing the multicast packet is transferred from the socket API wrapper to the socket API and is passed to the network driver A and the network driver B via the protocol stack . Thereafter the multicast packet is transmitted from the network interface A and the network interface B . Thus the multicast packet can reach the MFP and the MFP existing on the LAN A and the MFP and the MFP existing on the LAN B .

The multicast packets shown in are the SLP protocol packets transmitted in the step S. The SLP protocol packets are distinguished from each other only by MAC addresses and IP addresses assigned to the network interface A and the network interface B . Therefore the packets are different from each other in sender MAC address and sender IP address but identical in the other values. In both of the two packets a destination MAC address and a destination IP address are multicast addresses. The SLP data is the same as that shown in .

Next a description will be given of operation processes executed by the MFP for transmitting a multicast packet via one or both of the network interface A and the network interface B depending on a user having logged in the MFP .

First screens for associating a user name registered in association with a user of the MFP and a network interface to be used for multicast packet transmission are shown in .

Referring to user names registered in the MFP are displayed in a list in an enumerated manner. Information on settings of network interfaces registered in association with respective users as ones from each of which a multicast packet is to be transmitted is displayed in a list . For example a network interface associated with a user name Maki is Ethernet registered trademark . This means that when the user Maki has logged into the MFP the MFP transmits a multicast packet only from the network interface A implemented by the Ethernet registered trademark .

Further a network interface associated with a user name Yokokura is All . This means that when the user Yokokura has logged into the MFP the MFP delivers a multicast packet to all the network interfaces. More specifically the multicast packet is delivered to both the network interface A and the network interface B .

Furthermore a network interface associated with a user name Inoue is Wireless . This means that when the user Inoue has logged into the MFP the MFP transmits a multicast packet only from the network interface B implemented by the wireless LAN.

A button is used to switch the display screen to a screen for changing the setting of a network interface associated with each user for use in transmission of a multicast packet. When a desired user is designated in the list by the operator and an input by the button is detected the MFP switches the display screen to a screen shown in .

The screen dialog shown in is displayed when a network interface associated with a user Shouno is designated. A button is used to designate all the network interfaces of the MFP i.e. the network interface A and the network interface B . A button is used to designate the Ethernet registered trademark interface of the MFP i.e. the network interface A . A button is used to designate the wireless LAN interface of the MFP i.e. the network interface A I F B .

When one of the buttons to is selected by the operator and an input by an OK button is detected the network interface associated with the user Shouno is registered. Then the registered information network interface configuration information is stored in the configuration DB as a transmission condition for transmitting a multicast packet and a broadcast packet via a predetermined network interface.

Referring to in a step S the socket API wrapper determines whether or not a processing command received when its own wrapper API is called is for multicast transmission. If the called API is an API for use in multicast transmission such as sendto it is checked whether or not a destination IP address is a multicast address. In sendto the destination IP address is contained in the structure of the fifth argument. If the destination IP address is a multicast address i.e. if the address assumes a value within a range between 224.0.0.0 and 239.255.255.255 it is determined that the command received from a higher order application is a multicast transmission command YES to the step S . On the other hand if the received command is not a multicast transmission command NO to the step S the socket API wrapper immediately transfers the processing command to the socket API without modifying the content of the command.

If it is determined in the step S that the command received from the higher order application is a multicast transmission command YES to the step S the process proceeds to a step S. In the step S the socket API wrapper determines whether or not the self apparatus MFP in the present example where the socket API wrapper operates is a multihomed device.

In the step S the socket API wrapper queries the OS to find currently active network interfaces of the MFP . If there are detected a plurality of active network interfaces the socket API wrapper determines that the self apparatus MFP in the present example is a multihomed device. On the other hand if the MFP is not a multihomed device NO to the step S the socket API wrapper immediately transfers the processing command to the socket API without modifying the content of the command. In the present embodiment the two network interfaces i.e. the network interface A and the network interface B exist as active ones and therefore the MFP is determined as a multihomed device.

Then in a step S the socket API wrapper refers to the network interface configuration information registered on a user by user basis by the method described with reference to and checks a network interface configuration associated with the currently logged in user. Specifically the socket API wrapper queries the login application as to the identification information of the user having currently logged into the MFP . Then the socket API wrapper refers to the network interface configuration information stored in the configuration DB and acquires the configuration information on the network interface associated with the user having currently logged into the MFP for use in transmission of a multicast packet. Thus when an operation of the user having currently logged into the MFP gives a trigger to transmit a multicast packet it is possible to acquire the network interface information of a network interface via which the multicast packet is to be transmitted.

Then in a step S the socket API wrapper sets a socket option such that the multicast packet can be sent to the network interface designated in the network interface configuration information acquired in the step S. This processing is performed by designating IP MULTICAST IF as the third argument of setsockopt . At the same time the IP address of an interface desired for multicast transmission is set in the fourth argument. The socket API wrapper acquires an IP address associated with the network interface designated for transmission of the multicast packet from the configuration information acquired in the step S and sets the value of the acquired IP address in the fourth argument of setsockopt to execute the command.

Then in a step S the socket API wrapper transmits the multicast packet using sendto . In this case the arguments set in sendto are the same as the contents called by the higher order application in the step S. In this timing the multicast packet is transferred from the socket API wrapper to the socket API and is passed to the network interface designated for transmission of the multicast packet via the protocol stack . Thereafter the multicast packet is transmitted from the network interface designated for transmission of the multicast packet. Thus the multicast packet can reach devices on a LAN to which is connected the network interface designated for transmission of the multicast packet in association with the user having currently logged into the MFP . Although the above description is given of a case where multicasting is performed the same processing is executed for broadcasting.

Although in the above described embodiment the process shown in and the process shown in are described separately this is not limitative but for example the processes may be configured such that after execution of the step S in the socket API wrapper may determine whether or not the operator of the MFP has logged in and if the operator has not logged in the steps S et seq. in may be executed whereas if the operator has logged in the steps S et seq. in may be executed.

Alternatively the socket API wrapper may determine after execution of the step S in whether or not the operator of the MFP is an unregistered user. In this case if the operator is an unregistered user the socket API wrapper may cause an image to be displayed so as to prompt the operator to perform registration. Further a network interface to be used for packet transmission may be selected according to a user operation or the steps S et seq. may be executed.

According to the above described first embodiment it is possible to enable a communication apparatus configured as a multihomed device to perform multicasting or broadcasting using a user desired network interface without developing an application incorporating a dedicated code. Further even in a case where an application developed with an intention to operate for a single network interface is operated on a multihomed device it is possible to prevent a multicast or broadcast packet from being delivered to an unintended network interface.

Further it is possible to change a network interface via which a multicast or broadcast packet is to be transmitted according to the rights of an operator of a multihomed device to thereby prevent the packet from being sent to a network undesirable from the viewpoint of access rights and security.

Next a second embodiment of the present invention will be described. An MFP which is an image forming apparatus as a communication apparatus according to the second embodiment is identical in configuration to the MFP in the first embodiment which is described hereinabove with reference to . Therefore component elements corresponding to those in the first embodiment are denoted by identical reference numerals and description thereof is omitted.

The second embodiment is distinguished from the first embodiment in that a network interface via which a multicast packet is to be transmitted is determined not based on a user name as described above in the first embodiment but based on a multicast destination address.

The screen shown in is displayed on the operation unit of the MFP and is operated by the operator of the MFP . Reference numeral denotes an entry box for allowing the operator to input a multicast address as a destination to which a multicast packet is to be transmitted. Reference numeral denotes a button for designating Ethernet registered trademark for a network interface via which the multicast packet is to be transmitted to the multicast address designated in the entry box . Reference numeral denotes a button for designating Wireless for the network interface via which the multicast packet is to be transmitted to the multicast address designated in the entry box .

In short the entry box and the buttons and are operated by the operator of the MFP so as to designate a transmission source network interface associated with a multicast address. It should be noted that information network interface configuration information configured by the operator is stored in the configuration DB as transmission conditions for transmitting a multicast packet and a broadcast packet via a predetermined network interface.

Next with reference to a description will be given of a network interface configuring process executed by the MFP based on the configuration information set by the method described with reference to for multicast transmission.

Referring to in a step S the socket API wrapper refers to the network interface configuration information stored in the configuration DB and checks a transmission source network interface configuration associated with the multicast address. Specifically the socket API wrapper queries the configuration DB to obtain the transmission source network interface configuration information associated with the multicast address designated by the NW APP or the Java registered trademark APP . This information is configured on the screen shown in by the operator of the MFP . More specifically in the information one of 1 Ethernet registered trademark network interface A 2 Wireless LAN network interface B and 3 Both Ethernet and Wireless LAN is associated with each multicast address.

Then in a step S the socket API wrapper sets a socket option such that the multicast packet can be sent to the network interface designated in the network interface configuration information acquired in the step S. This processing is performed by designating IP MULTICAST IF as the third argument of setsockopt . At the same time the IP address of an interface desired for multicast transmission is set in the fourth argument. Thus the socket API wrapper acquires an IP address associated with a network interface designated in the network interface configuration information acquired in the step S for transmission of a multicast packet and sets the value of the acquired IP address in the fourth argument of setsockopt to execute the command.

Then in a step S the socket API wrapper transmits the multicast packet using sendto . In this case the arguments set in sendto are the same as the contents called by the higher order application in the step S in . In this timing the multicast packet is transferred from the socket API wrapper to the socket API and is passed to the network interface designated for transmission of the multicast packet via the protocol stack . Thereafter the multicast packet is transmitted from the network interface designated for transmission of the multicast packet.

According to the above described second embodiment it is possible to provide the same advantageous effects as provided by the first embodiment. Further a multicast packet can be transmitted via a network interface designated for transmission of the multicast packet according to a multicast destination address set by a user which makes it possible to improve userfriendliness.

Next a third embodiment of the present invention will be described. An MFP which is an image forming apparatus as a communication apparatus according to the third embodiment is identical in configuration to the MFP in the first embodiment which is described hereinabove with reference to . Therefore component elements corresponding to those in the first embodiment are denoted by identical reference numerals and description thereof is omitted.

The third embodiment is distinguished from the first embodiment in that a network interface via which a multicast packet is to be transmitted is determined not based on a user name as described above in the first embodiment but based on a port number of a UDP packet.

The screen shown in is displayed on the operation unit of the MFP and is operated by the operator of the MFP . Reference numeral denotes an entry box for allowing the operator to input a port number of a destination to which a multicast packet is to be transmitted. A reference numeral denotes a button for designating Ethernet registered trademark for a network interface associated with the port number designated in the entry box . A reference numeral denotes a button for designating Wireless for the network interface associated with the port number designated in the entry box . In short the entry box and the buttons and are operated by the operator of the MFP so as to designate a transmission source network interface associated with a multicast address. It should be noted that information network interface configuration information configured by the operator is stored in the configuration DB as transmission conditions for transmitting a multicast packet and a broadcast packet via a predetermined network interface.

Next with reference to a description will be given of a network interface configuring process executed by the MFP based on the configuration information set by the method described with reference to for multicast packet transmission.

Referring to in a step S the socket API wrapper refers to the network interface configuration information stored in the configuration DB and checks a transmission source network interface configuration associated with a port number. Specifically the socket API wrapper queries the configuration DB to obtain transmission source network interface information associated with the port number designated by the NW APP or the Java registered trademark APP . This information is configured on the screen shown in by the operator of the MFP . More specifically in the information one of 1 Ethernet registered trademark network interface A 2 Wireless LAN network interface B and 3 Both Ethernet and Wireless LAN is associated with each port number.

Then in a step S the socket API wrapper sets a socket option such that the multicast packet can be sent to the network interface designated in the network interface configuration information acquired in the step S. This processing is performed by designating IP MULTICAST IF as the third argument of setsockopt . At the same time the IP address of an interface desired for multicast transmission is set in the fourth argument. Thus the socket API wrapper acquires an IP address associated with the network interface designated in the network interface configuration information acquired in the step S for transmission of the multicast packet and sets the value of the acquired IP address in the fourth argument of setsockopt to execute the command.

Then in a step S the socket API wrapper transmits the multicast packet using sendto . In this case the arguments set in sendto are the same as the contents called by the higher order application in the step S in . In this timing the multicast packet is transferred from the socket API wrapper to the socket API and is passed to the network interface designated for transmission of the multicast packet via the protocol stack . Thereafter the multicast packet is transmitted from the network interface designated for transmission of the multicast packet.

According to the above described third embodiment it is possible to provide the same advantageous effects as provided by the first embodiment. Further a multicast packet can be transmitted via a network interface designated for transmission of the multicast packet according to a port number of a UDP packet which makes it possible to improve userfriendliness.

Although in the first to third embodiments the present invention is applied to the MFP as an image forming apparatus as the communication apparatus this is not limitative but it is to be understood that the present invention can be applied to information processing apparatuses terminal units etc. which have a communication capability.

Aspects of the present invention can also be realized by a computer of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiments and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiments. For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device e.g. computer readable medium .

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2009 230594 filed Oct. 2 2009 which is hereby incorporated by reference herein in its entirety.

