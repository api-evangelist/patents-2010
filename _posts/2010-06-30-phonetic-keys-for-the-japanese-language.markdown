---

title: Phonetic keys for the Japanese language
abstract: Various embodiments of phonetic keys for the Japanese language are described herein. A Kana rule set is applied to Kana characters provided by a user. The Kana characters are defined in an alphabetic language based on the sound of the Kana characters. A full phonetic key is then generated based on the defined Kana characters. A replaced-vowel phonetic key is generated by replacing a vowel in the full phonetic key and a no-vowel phonetic key is generated by removing the vowel in the full phonetic key. Kana records in a database are then processed to determine a relevant Kana record that has a phonetic key identical to at least one of the full phonetic key, the replaced-vowel phonetic key, and the no-vowel phonetic key. The relevant Kana records are then presented to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08315851&OS=08315851&RS=08315851
owner: Business Objects Software Limited
number: 08315851
owner_city: Dublin
owner_country: IE
publication_date: 20100630
---
The field relates generally to language processing systems. More particularly the field is related to phonetic keys for the Japanese Kana language system.

Phonetic keys for the English language have been used in many applications. In computer related applications phonetic keys can be used for data searching and database record searching. Typically a phonetic key is a series of characters that capture the sound of one or more words. The characters in a phonetic key can include a combination of numbers symbols and alphabets.

Several methods have been developed to produce phonetic keys for a given word in English or some Latin based languages. Soundex Metaphone and Double Metaphone are some of the methods used for producing phonetic keys. Soundex technique produces a phonetic code consisting of a letter followed by three numbers. Generally the letter is the first letter of a word and the numbers encode the remaining consonants. The Metaphone method produces variable length phonetic keys unlike the fixed length keys of the Soundex method. Similar sounding words share the same keys in the Metaphone method. The Double Metaphone method produces two phonetic keys namely a variable length primary key as in the Metaphone method and a variable length secondary key to account for alternate pronunciations.

However Soundex Metaphone Double Metaphone and other similar methods are suitable for English and Latin based languages. These methods may not be applicable to complex languages such as the Japanese language. Developing phonetic keys for the Japanese language would be desirable.

Various embodiments of phonetic keys for the Japanese language are described herein. A user can provide Kana characters either in Hiragana form or Katakana form. The Kana characters are received and a Kana rule set is applied to the Kana characters. The Kana characters are then defined in an alphabetic language such as English based on the sound of the Kana characters. A full phonetic key is then generated based on the defined Kana characters. A replaced vowel phonetic key is generated by replacing a vowel in the full phonetic key and a no vowel phonetic key is generated by removing the vowel in the full phonetic key. If there are alternate sounds for the same Kana characters a set of full phonetic keys replaced vowel phonetic keys and no vowel phonetic keys are generated for each sound. Kana records in a database are then processed to determine a relevant Kana record that has a phonetic key identical to at least one of the full phonetic key the replaced vowel phonetic key and the no vowel phonetic key. The relevant Kana records are then presented to the user.

These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof presented in connection with the following drawings.

Embodiments of techniques for phonetic keys for the Japanese language are described herein. In the following description numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

At a Kana rule set is applied to the Kana characters. The Kana rule set includes a set of rules that are applied to the Kana characters. Depending on the Kana characters the rules may partially modify the Kana characters. According to one rule if the Kana characters include a punctuation mark the punctuation mark is omitted. Examples of Kana punctuation marks include shown in square brackets and . According to another rule if the Kana characters include a space between them the space is omitted to obtain continuous Kana characters.

Kana characters can include a special character combination that represents a v sound and long sound character such as or . According to another rule this special character combination is recognized as a single character. According to another rule the long sound character is omitted from the Kana characters.

Kana can be written in both small form and long form. According to another rule if the Kana characters include two or more identical and adjoining small form vowel characters only one of the small form vowel characters are retained. For example consider the following Kana characters . This set of Kana characters includes two identical and adjoining small form vowel characters namely . Therefore by applying this rule the Kana characters are converted to . 

According to another rule if the Kana characters include a first small form character followed by a second small form character the second small form character is converted into a large form character. For example consider the following Kana characters . This set of Kana characters includes a first small form character followed by a second small form character . The second small form character is therefore converted to its respective large form i.e. . By applying this rule the Kana characters are converted to . 

According to another rule if the Kana characters include a small form character followed by a large form character of the same character then the small form character is omitted. For example consider the following Kana characters . This set of Kana characters includes a small form character followed by a large form character . The small form character is omitted by applying this rule and the Kana characters are converted to . 

According to another rule if the Kana characters include a small tsu character the small tsu character is converted into a non Japanese special character or mark. The small tsu character has a pause sound. In one embodiment the small tsu character is converted into . According to another rule if the Kana characters include a moraic nasal sound character the moraic nasal sound character is converted into another non Japanese special character or mark such as . The character has a moraic nasal sound.

After applying the rule set at the Kana characters are defined in an alphabetic language at based on their sound. In one embodiment the Kana characters are defined in the English language. Since the Kana script Hiragana and Katakana is a syllabic script Kana characters include a syllable or combination of syllables. The syllables can be defined in English based on their sound. For example the Kana syllable in Hiragana sounds like na in English. The Kana syllable in Hiragana sounds like ga in English the Kana syllable in Hiragana sounds like sa in English and the Kana syllable in Hiragana sounds like ki in English. Therefore if the user provides the Kana characters then they are defined as nagasaki in English. show a list of Kana syllables both Hiragana and Katakana that are defined in English.

At a primary full phonetic key is generated from the defined Kana characters. In one embodiment if the defined Kana characters from include two or more adjoining vowels then the primary full phonetic key is generated by retaining only one vowel. For example a primary full phonetic key oki is generated from the defined Kana characters ookii . Also if the defined Kana characters include a vowel combination of ei or ou then the primary full phonetic key is generated by retaining only the vowel e or o respectively. If the defined Kana characters do not include adjoining vowels or the vowel combination of ei or ou then the defined Kana characters form the primary full phonetic key.

Some Kana words may have alternate sounds. If a Kana word has two different sounds then a primary full phonetic key is generated for a first sound at and a secondary phonetic key is generated for a second sound at . A single full phonetic key is generated if there is no alternate sound. Consider the following Kana characters . These Kana characters have two different sounds. Specifically has two sounds namely wo and uo. A primary full phonetic key worumato is generated for a first sound and a secondary full phonetic key uorumato is generated for a second sound.

After the primary full phonetic key is generated a primary replaced vowel phonetic key is generated . The primary replaced vowel phonetic key is generated by replacing all the vowels in the primary full phonetic key with a non Japanese special character such as an underscore mark. For example worumato has vowels o u a and o . Therefore w r m t  is primary replaced vowel phonetic key can be generated from the primary full phonetic key worumato. Similarly if there is a secondary full phonetic key a secondary replaced vowel phonetic key can be generated at by replacing the vowels in the secondary full phonetic key with an underscore mark. But a first vowel in the primary full phonetic key or the secondary full phonetic key is retained if the primary full phonetic key or the secondary full phonetic key starts with the first vowel. For example the secondary full phonetic key uorumato has vowels u o u a and o in the same order. The first or starting vowel is the first u. Therefore u r m t  is the secondary replaced vowel phonetic key.

A primary no vowel phonetic key is generated at using the primary full phonetic key. The primary no vowel phonetic key is generated by removing the vowels in the primary full phonetic key. For example the primary full phonetic key worumato has vowels o u a and o. Therefore wrmt is the primary no vowel phonetic key that will be generated. Similarly if there is a secondary full phonetic key a secondary no vowel phonetic key can be generated at by removing the vowels in the secondary full phonetic key. A first vowel in the primary full phonetic key or the secondary full phonetic key is not removed if the primary full phonetic key or the secondary full phonetic key starts with the first vowel. For example the secondary full phonetic key uorumato has vowels u o u a and o with the first or starting vowel u. Therefore urmt is the secondary no vowel phonetic key that will be generated.

The primary full phonetic key the primary replaced vowel phonetic key and the primary no vowel phonetic key can then be used in several applications. In one embodiment a single phonetic key full replaced vowel or no vowel or a combination of these phonetic keys are used to query a database at . And if an alternate sound exists the secondary full phonetic key the secondary replaced vowel phonetic key and the secondary no vowel phonetic key are also generated and used to query a database.

In another example consider the Kana characters . By applying the Kana rule set is converted into . The character sounds like i sounds like ko and sounds like ku. Therefore the Kana characters are defined as i koku. Therefore the full phonetic key is i koku the replaced vowel phonetic key is i k k  and the no vowel phonetic key is i kk. 

As another example consider the Kana Katakana characters . The last character is the long sound character. This long sound character is omitted according to one rule of the rule set as discussed previously. The Kana characters can then be defined in English by referring to . has two sounds namely ui and wi. sounds like su and sounds like ki. Therefore the Kana characters are defined as uisuki. Since there no identical and adjoining vowels or the vowel combination of ei or ou the primary full phonetic key is uisuki. The primary replaced vowel phonetic key is u s k  and the primary no vowel phonetic key is usk. Similarly the secondary full phonetic key is wisuki the secondary replaced vowel phonetic key is w s k  and the secondary no vowel phonetic key is wsk. Other keys in are similarly generated.

The phonetic keys can be used in several ways and environments. According to one embodiment as shown in the phonetic keys can be used to find relevant Kana words in a database. For a Kana character provided by a user a full phonetic key a replaced vowel phonetic key and a no vowel phonetic key are generated at according to the method described in . In one embodiment the phonetic keys can be truncated at to a desired or specified length. This length can be a system configuration. For example if the phonetic key length is specified as six characters or less then the generated full phonetic key replaced vowel phonetic key and no vowel phonetic key are truncated at if they have more than six characters.

At Kana records in a database are processed to determine a relevant Kana record. The Kana records include Kana words or any data in Kana. As part of processing phonetic keys of the Kana records in the database are compared with the full phonetic key the replaced vowel phonetic key and the no vowel phonetic key. A relevant Kana record can then be determined as the word or words having a phonetic key identical to any one of the full phonetic key the replaced vowel phonetic key and the no vowel phonetic key. The phonetic keys of the Kana records in the database can be determined using the procedure described in i.e. by applying rule set defining in English and generating full replaced vowel and no vowel phonetic keys and stored in the database. The relevant Kana record is then presented to the user at .

At the full phonetic key the replaced vowel phonetic key and the no vowel phonetic key can be selectively used based on the level of similarity required between the user entered Kana characters and database records. For example if there is a requirement for closest or exact match the full phonetic key can be used to retrieve records from the database. If the requirement is to find similar matches the replaced vowel phonetic key can be used which increases the number of records obtained from the database. An even lower level of similar matches can be obtained using the no vowel phonetic key which further increases the number of records obtained from the database.

As part of the processing multiple keys can be used to find relevant results in an efficient way. For example the full phonetic key can be used first to retrieve records from the database. If the results are satisfactory the process of searching with replaced vowel and no vowel phonetic keys can be stopped. If good results are not returned or if there are no records obtained by using the full phonetic key the match criteria can be broadened using the replaced vowel phonetic key to get more similar matches. If the results are still not satisfactory the no vowel phonetic key can be used to find less similar matches.

As an example a user may enter a Kana word without specifying any length for the phonetic keys. Following which a full phonetic key kyoto a replaced vowel phonetic key ky t  and a no vowel phonetic key kyt are generated. The full phonetic key kyoto is used to find an almost exact match when searching in a database. Kana words or data that can be spelled differently but have the same sound can be found using the full phonetic key. For example the Kana word has the same sound sounds like Kyoto as the Kana word provided by the user though spelled differently. The full phonetic key of the Kana word is kyoto which is identical to the full phonetic key of the Kana word provided by the user . Therefore can be determined as a relevant Kana word or record using the full phonetic key kyoto. 

The replaced vowel phonetic key ky t  can be used to find Kana words or data that have a similar sound. For example the Kana words sounds like kyoto sounds like kyoto and sounds like cute have the same replaced vowel key ky t . Therefore and can be determined as the relevant Kana words using the replaced vowel phonetic key ky t . 

The no vowel phonetic key kyt can be used to broaden the search to find Kana words or data with lesser extent of similarity. The Kana words sounds like kyoto sounds like kyoto sounds like cute and sounds like coyote have the same no vowel key kyt. Therefore and can be determined as the relevant Kana words using the no vowel phonetic key kyt. 

The phonetic keys can be truncated to a desired or specified length. This length can be part of the system configuration. The processor then processes data in the database to determine relevant Kana words. The processor refers to the phonetic key generator to determine which Kana records in the database have phonetic keys identical to the generated phonetic keys. In one embodiment the full replaced vowel and no vowel phonetic keys for the Kana records in the database are generated and stored in the database . These stored phonetic keys can be readily used to compare with the generated phonetic keys. The relevant Kana records include Kana words that have phonetic keys identical to at least one of the generated phonetic keys. The relevant Kana records are then presented to the user on the display . Any additional data in Kanji or other language associated with the relevant Kana records can also be presented to the user on the display . The processor can selectively use any one or combination of the generated phonetic keys full replaced vowel or no vowel based on the level of similarity required between the user entered Kana characters and Kana records in the database. This level of similarity can be configured in the system .

Some embodiments of the invention may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components may be implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. Examples of computer readable storage media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment of the invention may be implemented using Java C or other object oriented programming language and development tools. Another embodiment of the invention may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open DataBase Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of and examples for the invention are described herein for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather the scope of the invention is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

