---

title: Coding for crossbar architecture
abstract: A method for encoding bits to be stored within a crossbar memory architecture performed by a physical computing system includes designating, with the physical computing system, a subset of crosspoints within a crossbar matrix, the crossbar matrix comprising a number of disjointed intersecting wire segments, the subset corresponding to a predetermined path through the crossbar matrix; and encoding, with the physical computing system, a number of data bits to be placed along the predetermined path; in which the encoding causes bits pertaining to at least one of the wire segments to be subject to a constraint when the data bits are placed along the predetermined path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09142287&OS=09142287&RS=09142287
owner: Hewlett-Packard Development Company, L.P.
number: 09142287
owner_city: Houston
owner_country: US
publication_date: 20100312
---
This invention has been made with government support. The government has certain rights in the invention.

Electronic data is typically represented using a binary number system. The binary number system is one in which values may take on one of two states typically represented by a 1 and a 0 . Various types of memory systems have been developed which include small programmable devices that store a single bit as either a 0 or a 1 . For example a transistor may be used as a switch which is either in an ON state or an OFF state. The ON state may be used to represent a 1 while the OFF state may be used to represent a 0 .

One type of memory architecture being developed is crossbar memory architecture. Crossbar architecture includes two sets of interconnecting wire segments. A programmable device may be placed at each crosspoint between each wire segment. In one example crossbar architecture may employ memristors as programmable devices. A memristor is a resistor which is able to change the value of its resistance in response to various programming conditions. A memristor may represent a 1 while in a low resistance state and a 0 while in a high resistance state.

When memristive devices are placed in crossbar architecture it may be desirable to limit the number of memristive devices in a low resistive state along a particular wire segment of the crossbar architecture. Having too many devices in a low resistive state along a particular wire segment may allow too much electric current to pass through. Too much electric current passing through the wire segments may potentially interfere with read write operations.

Throughout the drawings identical reference numbers designate similar but not necessarily identical elements.

As mentioned above it may be beneficial for the number of memristive devices in a low resistance state along a wire segment of a crossbar array to be subject to a constraint. In general it is better that less than half of the programmable devices along crosspoints of a wire segment are in a low resistive state. Having more than half of the crosspoints in a low resistive state may allow too much electric current to pass through the wire segments. Too much electric current flowing through the wire segments may add extra noise that will interfere with the data signals used for read write operations.

In light of this and other issues the present specification relates to a method of encoding data bits so that when the data bits are scanned into and stored in a memory having crossbar architecture the number of crosspoints being in a low resistive state may be limited for each wire segment within the crossbar array.

According to certain illustrative embodiments a number of subsets of the total number of crosspoints within a crossbar matrix may be designated as included crosspoints. Included crosspoints are ones in which data bits may be stored. Each subset of crosspoints may correspond to a predetermined path through the crossbar matrix. The data bits may then be encoded so that when placed along the predetermined path associated with each subset the number of bits representing a low resistive state is subject to a constraint. The constraint may be that no more than half of the crosspoints per wire segment may be in a low resistive state.

An encoding method or system embodying principles described herein may allow data bits to be encoded so that they may be scanned and stored on crossbar memory architecture without adversely affecting the optimal operating conditions of the memory architecture.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present systems and methods. It will be apparent however to one skilled in the art that the present apparatus systems and methods may be practiced without these specific details. Reference in the specification to an embodiment an example or similar language means that a particular feature structure or characteristic described in connection with the embodiment or example is included in at least that one embodiment but not necessarily in other embodiments. The various instances of the phrase in one embodiment or similar phrases in various places in the specification are not necessarily all referring to the same embodiment.

Throughout this specification and in the appended claims the term disjointed intersecting of wire segments is to be broadly interpreted as a crossbar array in which the end crosspoints of two parallel wire segments do not intersect the same vertical wire segments.

Throughout this specification and in the appended claims a run length limited process is to be broadly interpreted as an encoding scheme for a set of data bits the scheme including two parameters d k . The parameter d indicates the minimum number of zeros to be placed between two ones and the parameter k indicates the maximum number of zeros which may be placed between two ones.

Referring now to the figures is a diagram showing an illustrative physical computing system . According to certain illustrative embodiments a physical computing system may be used to encode the bits which are to be stored in a crossbar memory structure. A physical computing system may include a processor a memory having encoding and decoding software and data bits stored thereon.

The physical computing system may be embodied as several different types of computing devices including but not limited to a server laptop computer a desktop computer or a Personal Digital Assistant PDA or a general processing device. In some embodiments the physical computing system may be a piece of hardware designed specifically for encoding or decoding bits. According to a number of frameworks the system may be distributed geographically. For example the user interface may be running on a client computer with the memory and processor running on a server computer. The physical computing system may include a form of memory including but not limited to a magnetic disk drive a solid state drive and or an optical disc drive.

The encoding software stored by the memory may be embodied as computer readable code configured to cause a processor to execute various instructions related to encoding data bits to be stored on a crossbar memory structure.

According to certain illustrative embodiments the programmable crosspoint devices may be memristive devices. Memristive devices exhibit a memory of past electrical conditions. For example a memristive device may include a matrix material which contains mobile dopants. These dopants can be moved within a matrix to dynamically alter the electrical operation of an electrical device. The motion of dopants can be induced by the application of a programming condition such as an applied electrical voltage across a suitable matrix. The programming voltage generates a relatively high electrical field through the memristive matrix and alters the distribution of dopants. After removal of the electrical field the location and characteristics of the dopants remain stable until the application of another programming electrical field. For example by changing the dopant configurations within a memristive matrix the electrical resistance of the device may be altered. The memristive device is read by applying a lower reading voltage which allows the internal electrical resistance of the memristive device to be sensed but does not generate a high enough electrical field to cause significant dopant motion. Consequently the state of the memristive device may remain stable over long time periods and through multiple read cycles.

Additionally or alternatively the programmable crosspoint devices may be memcapacitive devices. According to one illustrative embodiment memcapacitive devices share operational similarities with memristors except the motion of dopants within the matrix primarily alters the capacitance of the device rather than its resistance.

According to certain illustrative embodiments the crossbar architecture may be used to form a non volatile memory array. Non volatile memory has the characteristic of not losing its contents when no power is being supplied. Each of the programmable crosspoint devices may be used to represent one or more bits of data. Although individual crossbar lines in are shown with rectangular cross sections crossbars may also have square circular elliptical or more complex cross sections. The lines may also have many different widths diameters aspect ratios and or eccentricities. The crossbars may be nanowires sub microscale wires microscale wires or wires with larger dimensions.

According to certain illustrative embodiments the crossbar architecture may be integrated into a complimentary metal oxide semiconductor CMOS circuit or other conventional computer circuitry. Each individual wire segment may be connected to the CMOS circuitry through a via . The via may be embodied as an electrically conductive path through the various substrate materials used in manufacturing the crossbar architecture. This CMOS circuitry can provide additional functionality to the memristive device such as input output functions buffering logic configuration or other functionality. Multiple crossbar arrays can be formed over the CMOS circuitry to create a multilayer circuit.

Each horizontal wire segment may cross over three vertical wire segments . Thus each wire segment will include three crosspoints . The disjoint layout may be achieved by shifting adjacent vertical wire segments as well as shifting adjacent horizontal wire segments . For example a horizontal wire segment may be placed one space to the right in relation to the horizontal wire segment above it. Likewise a vertical wire segment may be placed one space down in relation to the vertical wire segment to its left. In some embodiments the horizontal wire segments may be on an upper layer while the vertical wire segments may be on a lower layer. In such an embodiment a top view would allow the horizontal wire segments to be seen fully and the vertical wire segments may be seen in part.

As mentioned above the number of crosspoints in a low resistive state along a wire segment may be subject to a constraint. This constraint may allow for optimum operating conditions. For example a constraint may be to have no more than half of the crosspoints along a given wire segment in a low resistive state. In the case of a crossbar matrix having wire segments with three crosspoints no more than one crosspoint may be in a low resistive state per wire segment. Thus only one bit per wire segment may be set to a 1 .

The precluded crosspoint may be initially set to a high resistive state thus representing a 0 . The remaining included crosspoints may be used to store data bits. However the data bits stored along the included crosspoints should not both be set to a low resistive state. The data may be encoded and scanned in so as not to allow two values of 1 on a given wire segment.

In one embodiment a scanning path may be determined by starting with the middle crosspoint of a horizontal wire segment in the first or second row of wire segments. The next position may be the leftmost crosspoint of the same wire segment. Next the position may shift down two spaces and continue with the middle crosspoint of a different horizontal wire segment. This pattern may be repeated until reaching the end of the crossbar matrix. The crosspoints along a particular path may be defined as a subset of all crosspoints within the crossbar matrix. Multiple paths may be formed throughout the crossbar matrix using the pattern described above and illustrated in .

Data bits may represent a wide variety of information. For example text audio video and other file types are represented by vast numbers of bits. As will be appreciated by one skilled in the relevant art there typically will be many cases in a string of binary data that a 1 will be immediately preceded or followed by another 1 .

Various encoding schemes may be used to encode the data bits in a manner such that in the resulting set of encoded bits no 1 is immediately preceded or followed by another 1 . In one example each 0 may be replaced with a 00 and each 1 may be replaced with a 01 . Thus the resulting set of encoded bits is such that no 1 is next to another 1 as shown in . Such an encoding scheme is reversible. A reversible scheme is one that can be reversed and the original set of data bits may be retrieved accurately from the set of encoded bits .

As will be appreciated by one skilled in the relevant art there may be other encoding schemes which result in a set of bits in which no 1 is next to another 1 . For example in one encoding scheme a 0 may be inserted after every 1 . To decode such a scheme a 0 may be removed after each 1 . A further encoding scheme may be a Run Length Limited RLL scheme. RLL schemes generally comprise two parameters. For example a 1 infinity RLL scheme indicates that there is no upper limit on the number of zeros that may be placed between two ones but that no 1 may neighbor another 1 . Encoding schemes may be designed to reduce the number of bits which are placed into the final encoded bit structure while maintaining the desired functionality of being reversible and having no 1 neighbor another 1 . A system or method embodying principles described herein may use any suitable encoding scheme which applies the proper constraints. In some embodiments it may be useful to place constraints on the number of 1 s within any group of B consecutive bits along an encoded sequence in which B is a prescribed group size.

The bits may be scanned along the path illustrated in . For example the sequence of bits 100010 may be scanned in by starting with the first bit at the middle crosspoint of a wire segment in the top row. The next bit is placed on the leftmost crosspoint of the same wire segment. The next bit may then be placed on the middle crosspoint of a wire segment two spaces below the first wire segment as shown in . This pattern may continue until the edge of the crossbar matrix is reached.

In general a crossbar matrix may be much larger than the crossbar matrices illustrated. As memory space becomes more valuable especially in smaller electronic devices it is desirable that each space able to store a bit be used. Precluding a bit from each wire segment and setting it to a zero may prevent the wire segment from violating a constraint but doing so essentially wastes a crosspoint which may be used to store a data bit.

In some cases a precluded crosspoint may not need to be constrained. For example if the other two crosspoints from both the vertical and horizontal wire segments of a given precluded crosspoint are storing a 0 then that initially precluded crosspoint may become a usable crosspoint . The encoding scheme used to encode the data bits may be designed so that more zeros are placed between any two ones. This may cause the encoded data bits to take up more space throughout the crossbar matrix. However it may provide more opportunities for the precluded crosspoints to become usable. A function may be applied which will determine the proper coding scheme to maximize the efficiency of storing data bits in the crossbar matrix. For the example of enumerative coding techniques known in the art may be used to reversibly encode data such that among all pairs of consecutive bits in the encoded sequence roughly 60 percent may be 00 20 percent may be 01 and 20 percent are 10 . This distribution may achieve a good tradeoff between the space taken up by the encoded bits for a given amount of encoded data and the number of usable precluded crosspoints.

After such a cyclical shift of path the initially precluded crosspoint may become a usable crosspoint . The usable crosspoint now has only zeros stored on both its associated horizontal wire segment and its associated vertical wire segment. Thus the usable crosspoint is no longer constrained and may be used as a data bit having a value of either 1 or 0 .

Each path throughout the crossbar matrix may be cyclically shifted a number of times to maximize the number of precluded crosspoints which will become usable. Various functions may be developed which will find the optimum shift of the data bits along each path.

In some embodiments the number of cyclic shifts taking place may be designed to bring the encoding scheme to a fixed rate scheme. A fixed rate scheme may refer to an encoding scheme that allows the number of usable precluded crosspoints in a crossbar matrix to be the same despite the data being encoded. A variable rate scheme is one in which the number of usable precluded crosspoints is dependent upon the data being encoded. For example when data is scanned in and no cyclical shifts have taken place there will be a certain number usable precluded crosspoints based on the data itself. Each set of data may present a different number of situations where a precluded crosspoint may become usable. Thus the encoding scheme may be considered a variable rate scheme. In some cases it may be desirable to bring the variable rate encoding scheme to a fixed rate scheme. To do so the cyclical shift may be performed only a certain number of times until the total number of usable precluded crosspoints reach a predetermined number. Thus the total number of usable precluded crosspoints may be made equal across different sets of data.

After the encoding process is complete the encoded bits may be scanned into their appropriate locations within a crossbar matrix. When the data is to be retrieved the encoded bits may be read along their appropriate predetermined paths. After the bits have been read they may then be decoded using the reverse process to which they were encoded.

The above illustrated embodiment is for the case that each wire segment includes three crosspoints. As will be appreciated by one skilled in the relevant art crossbar arrays may be designed in which each wire segment includes four or more crosspoints. The above described encoding scheme may be adapted for the number of crosspoints per wire segment in a given array. For any number of crosspoints per wire segment a certain number may be designated as precluded crosspoints. A path through the crossbar array may then be determined and an encoding scheme designed so that when bits are scanned along the path the proper constraints are satisfied.

In sum an encoding method or system embodying principles described herein may allow data bits to be encoded so that they may be scanned and stored on crossbar memory architecture without adversely affecting the optimal operating conditions of the memory architecture.

The preceding description has been presented only to illustrate and describe embodiments and examples of the principles described. This description is not intended to be exhaustive or to limit these principles to any precise form disclosed. Many modifications and variations are possible in light of the above teaching.

