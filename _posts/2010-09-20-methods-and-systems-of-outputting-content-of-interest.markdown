---

title: Methods and systems of outputting content of interest
abstract: A method can output content of interest of a structured electronic document from a computer or distributed computer system having a processor and memory. The method includes loading a common expression and a data structure definition into memory, the common expression identifying a content element in a first structured electronic document, the data structure definition defined according to the common expression; creating in memory an instance of a data structure defined by the data structure definition; applying with the processor the common expression to a second structured electronic document to extract a content element from the second structured electronic document; storing the extracted content element in the instance of the data structure; and populating a template structured electronic document using the instance of the data structure to produce an output structured electronic document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566702&OS=08566702&RS=08566702
owner: BlackBerry Limited
number: 08566702
owner_city: Waterloo
owner_country: CA
publication_date: 20100920
---
The present description relates to methods and systems for extracting content from a structured electronic document.

A portion of the disclosure of this patent document contains material to which the claim of copyright protection is made. The copyright owner has no objection to the facsimile reproduction by any person of the patent document or the patent disclosure following publication of the application as it appears in the U.S. Patent and Trademark Office file or records but reserves all other rights whatsoever.

It can be desirable to access content from a structured electronic document for example to utilize the content for another purpose. Identifying the content within the structured electronic document so that it can be accessed in an automated fashion for example programmatically can be a laborious process.

Often one goes back to the original source of the content and retrieves it from the source. In many cases the source is not available for access or determining how to gain such access makes access impractical.

It is desirable to provide improved or alternate methods of identifying such content. It is also desirable to provide improved or alternate methods tools and systems to assist with the identification of content within structured electronic documents.

Referring to an example browser page displays weather information for Waterloo Ontario. Such a page displays specific content elements . In this description content elements are referred to generically using reference numeral . A specific content element may be referred to using reference numeral followed by a letter for example

Referring to a common expression is stored in a computer readable storage medium . A data structure definition is also stored on a computer readable storage medium . The common expression identifies one or more content elements in a structured electronic document . A structured electronic document is an electronic document structured in accordance with one or more structured definition languages such as HTML Hyper Text Markup Language XML Extensible Markup Language or WSDL Web Service Definition Language . The structured electronic document can for example be used to render page see . The data structure definition defines a data structure . The data structure definition is defined according to the common expression . The common expression and data definition can be used together to extract content elements from a structured electronic document . Extracted content elements can be used for example to render a page see .

A common expression and data structure definition can be utilized to output content of interest to a first structured electronic document from a second structured electronic document . The second structured electronic document can for example be another instance of the structured electronic document used to form the common expression . For example the structured electronic document from which the common expression is formed can be a weather page for an earlier date whereas the second structured electronic document can be a weather page created at the time the common expression is to be applied.

It is recognized that the common expression and data structure definition can be stored together on one medium or distributed across different storage media . The common expression and data structure definition can be stored in a single file.

The common expression and data structure definition can together form a content extraction document CED to extract content elements from a structured electronic document which CED can be stored in the same file in the storage medium.

For ease of reference this description will primarily describe a CED embodiment however it is understood that the description also applies to distributed embodiments of a common expression and data structure definition .

CED stored on a computer readable medium has a common expression and a data structure definition . The data structure definition can include a data element identifying section identifying data elements for the identified content elements and a relationship definition section defining relationships between the identified data elements .

An electronic device has processor input device and display device . The input device can include for example a pointing device such as a mouse track ball tablet joystick or other pointing device. As a further non traditional example content elements could be highlighted on the rendered document with a unique reference such that the content elements can be selected utilizing a microphone and voice recognition software operating on the electronic device . For example various content elements could be identified by unique references etc. Then the third content element could be chosen by speaking 3 and speaking the unique reference to the microphone. Keyboard may be similarly used to indicate a particular content element . The input device can also include a keyboard . The keyboard may act as a pointing device by highlighting and indicating selection of a content element for example. The processor may be for example any processing device configured to carry out the functions described herein for the device . Example processing devices can include a suitably programmed microprocessor or an appropriately configured application specific integrated circuit ASIC . The electronic device can be for example a personal computer or other computing device. The electronic device can include memory typically random access memory RAM within the processor to store any applicable computer programs for execution. Such memory may be further used to store other components described herein such as the common expression and the data structure definition and the data structure . Alternatively memory external to the processor and internal to the electronic device or memory externally accessible to the electronic device may be utilized. Computer readable storage medium can form the memory or . Alternatively the computer accessible medium can be longer term storage such as a hard drive CD ROM disk or flash memory. It is recognized that some forms of flash memory can be used as both RAM and long term storage.

Referring to as an example related to weather the CED can identify data elements which correspond to content elements . For example icon representing weather conditions and alphanumeric weather temperature conditions temperature units and location correspond to respective content elements such as icon temperature conditions temperatureUnits and location . Further data elements could include a short term weather forecast and additional weather condition icon conditions temperature day and time corresponding to icon conditions temperature day and time

The CED can define a relationship between the identified data elements for example by grouping them together in a group data element implying a common characteristic between the data elements within the group for example implying that the icon represents the weather conditions with a temperature for the location with short term weather forecast . A further relationship between the identified data elements can be defined by defining short term weather forecast as containing a further group of icon conditions temperature day and time for example implying that for the short term weather conditions are represented by the icon with temperature on the day at the time . Other aspects of the defined relationship can include for example that the short term weather can contain multiple versions of the group the version contains. For example there can be a short term weather collection for a morning time of the given day a collection for an afternoon time and a collection for an evening time

Referring to and a data structure can be defined to include data elements that correspond to respective content elements within a structured electronic document . The data structure definition can be defined according to the common expression as the common expression identifies respective content elements within a structured electronic document . In this description data elements are referred to generically using reference numeral . A specific data element may be referred to using reference numeral followed by a letter for example . The data elements can be stored in the data structure . The data structure can include the entirety of the identified data elements and the relationships between the data elements .

Referring again to the sections and have been illustrated as separate sections for ease of comprehension. It is to be understood that the sections and can be merged into one or more sections. Further functions of the sections can be explicit or implicit such that identification or definition can be expressly made or can be implied by other expressions. As an example defining relationships between elements can impliedly identify those elements. Also sections can be split into further sections with the functions of section and performed by more than one section. It is understood that each of these alternatives is encompassed within the illustration of the sections as sections and in .

As part of a common expression for an electronic device to identify content elements within a structured electronic document the CED can identify the location of the structured electronic document . For example the CED can specify a URL Uniform Resource Locator for the document . Alternatively the document can be dynamic such that an action needs to be carried out at a first structured electronic document such as a search request page in order to generate a structured electronic document such as a search results page . The required action at the first structured electronic document can be defined in the CED along with all necessary inputs to the first structured electronic document. Alternatively some structured electronic document hosts may allow inputs to be included in a URL to bypass a first structured electronic document.

As part of a common expression for an electronic device to identify content elements within a structured electronic document the CED can identify the locations of the content elements within the structured electronic document .

Referring to in order to identify respective content elements within a structured electronic document a path can be used. A path is made up of a sequence of path parts. Each path part may be considered a step. Within each step is an element and optionally an index if the element is an array element. A path part can also have an identifier that is included after an element name after a number sign or hash or other suitable separator. A path root is the highest level element from which the steps begin. The highest element can be the leftmost element. In the examples used herein the steps are separated by a forward slash . Steps at the same level are herein referred to as corresponding steps. Solutions can be implemented employing other separators.

As an example path a content element path can be structured as an XPath. For example the path bookstore book title might specify all titles for books on a bookstore page. Where bookstore is a root element and book and intervening element in the structured electronic document .

The content elements within the structured electronic document can be identified for example using paths based on the XML Path Language XPath http www.w3.org TR xpath commonly referred to as an XPath. The XML Path Language is a language defined by the World Wide Web Consortium for selecting nodes from an XML document. It is to be recognized that XPath expressions are typically used in queries to return a result set however expressions using an XPath syntax are used herein to identify content elements within the structured electronic document .

Referring to relationships between the data elements in the data structure can be defined based upon the structure of paths identifying content elements within the structured electronic document .

Referring to to output content from a structured electronic document at common expression and a data structure definition are loaded into memory . The common expression identifies a content element in a first structured electronic document . The data structure definition is defined according to the common expression. At a data structure is created in memory using the data structure definition .

At the common expression is applied with a processor to a second structured electronic document to extract a content element from the second structured electronic document .

At a template structured electronic document see is populated using the data structure to produce an output structured electronic document see .

Referring to at content elements can be indicated by receiving through an input device an indication of a plurality of content elements within a structured electronic document . At the portions can be determined with the processor from indicated content elements . Determined portions can be for example individual content elements or arrays of content elements .

At the common expression can be formed with processor based on determined portions of the structured electronic document associated with each content element . When the common expression is applied to another structured electronic document another content element is extracted from the other structured electronic document.

At a data structure can be defined according to the common expression . The data structure can be further defined by a data structure definition that is defined according to the common expression .

Referring to content extraction according to the CED document can be performed by remote server through a content processing module that performs functions similar to the browser extension to carry out the retrieval of the structured electronic document parsing of the CED and the document filling of the data structure and formatting for presentation with the assistance of presentation tier prior to transmission to the browser . Typically the developer portion of the program described earlier will remain as an extension to a browser as the developer will likely be working at an electronic device that is a desktop computer in order to perform development functions. Users of the additional structured electronic documents as opposed to the developer can utilize other forms of electronic device without extension .

The network infrastructure can be accessible to the electronic device through a public or private network . Similarly the remote server can be accessible through a public or private network . The networks can be the same network and can also be a combination of private and public networks. Content extraction according to the CED at the handheld infrastructure is particularly well suited to use in association with wireless handheld devices as electronic device by reducing quantity of data transmitted to the wireless network device and off loading the processing requirements to the remote server . It is also to be recognized that the content extraction by a content processing module according to the CED to create and fill a data structure and provide the data structure to presentation tier could occur at the remote server or another remote server or be distributed across remote servers. For example corresponding CEDs could be stored at the remote server for the markup documents stored at the remote server so that a website provider can provide parallel websites for different browser configurations such as one using the structured electronic documents for an electronic device that is a desktop computer and another providing handheld browser optimized user interface screens using a CED .

A listener in the remote server can listen for a request to perform content extraction according to CED or presentation template . If such a request is received the listener can begin the initiation process for the template or CED . For example a request might be inferred by the listener where a CED or presentation template is associated with a particular URL requested by a browser . For example the listener can listen for a request on an HTTP over TCP IP HyperText Transport Protocol over Transmission Control Protocol Internet Protocol transport layer. The listener may also listen on other transport protocols.

The remote server may also allow the initiation of content processing according to the CED by a user and presentation of the content elements to a user through transport protocols other than HTTP HyperText Transport Protocol such as email SMTP or other messaging protocols such as SMS Short Message Service . A combination of transport protocols can be used for example initiation by HTTP and presentation by SMTP. Automatic initiation of a CED is also possible. For example a CED can be initiated automatically once per day to send out a weather report by email.

By default content elements may be transmitted to the address from which the request is received. As part of the registration of a CED a remote server can also receive user choices for desired protocols on which to listen for requests and on which to transmit content elements. For example an email address can be associated with the CED such that the content elements are transmitted to the email address after content extraction according to the CED .

The content processing module can include a markup language parser typically an HTML parser for parsing HTML for most documents and a content extraction engine . First the parser parses the received structured electronic document and generates a DOM document object model . The DOM may be represented in many ways as is known to those of skill in the art. In this description the DOM will be graphically represented as a tree structure. The DOM is processed by the content extraction engine . The content extraction engine processes the DOM according to the CED to create a data structure in accordance with the data structure definition in the CED . The content extraction engine then populates the data structure with the associated content elements identified in the CED . The content extraction engine traverses the paths of the DOM specified in the CED to find the specified content elements . The content extraction engine then populates the data structure with the content elements in accordance with the associations in the CED .

Relationships between data elements can be defined by defining the data structure for the elements. A data structure definition can include a path wherein a separator between data elements indicates that a data element to the right of the separator is nested within a data element to the left of the separator and wherein an array representation indicates that a data element to the left of the array representation contains an array of data elements. For example a data structure can have paths such as responseElement. ShortTermDay x .temperature. Elements are separated by a . dot . A . dot indicates that the element to the right is nested within the element to the left and x indicates that the element to the left has an array of elements. For example shortTermDay has an array of ShortTermDay elements one array record for different times of a day for example morning afternoon evening . A rResponseElement is a top level container data element of the data structure . The responseElement contains the other data elements.

Relationships between data elements can be defined through the use of XML schema. Data elements can be defined within an XML schema. Using XML schema data elements can be combined into arrays and complex types. Additionally data types can be defined for data elements.

As an example structured electronic document can contain hypertext markup language HTML content containing HTML content elements . HTML content can be utilized from for example a web page by treating the HTML as a data source. Other markup language formats can be used such as for example the XML Extensible Hypertext markup Language XHTML and others.

The Web Services Definition Language WSDL can be used as the basis format for a CED . Although WSDL was originally created for web services WSDL is extensible and can be used for other purposes. WSDL is suited for use with a CED as WSDL allows the definition of a service to obtain a structural electronic document is extensible to incorporate the use of other structured definition languages. WSDL is a standard and there are various WSDL processing tools available.

A WSDL CED can be made up of a plurality of sections. Examples of these sections will now be described for an example CED used with reference to a structured electronic document which displays on a browser page of a display as shown in in response to a request for weather information for Waterloo Ontario.

A WSDL types section contains an XML Schema XS that defines relationships between data elements using complex types. Continuing with the weather example of an example WSDL types section with XML schema relating various named data elements to a top level responseElement data element to define a data structure providing a data structure definition can include 

Referring to the data structure responseElement defined in the XML schema includes a collection of elements such as icon temperature conditions temperatureUnits and location which correspond in to the respective content elements such as icon temperature conditions temperatureUnits and location . The responseElement also defines a ShortTermDay data element that is a group that includes a further collection of elements such as icon conditions temperature day and time corresponding to the icon conditions temperature day and time elements in .

A common expression to identify content elements within a structural electronic document is provided in the remainder of the WSDL.

A WSDL message definition section defines an input message named Search Request and an output message named Search Response . The SearchRequest message contains the marked form elements as parts and the SearchResponse message contains the responseElement data structure as a part. Continuing with the weather example of an example WSDL message section can include 

A WSDL Port Types section defines a port type SearchInterface with an operation Search to be carried out using the input messages and the output messages. Continuing with the weather example of an example WSDL Port Type section can include 

A WSDL Binding section defines a binding Binding of the port types Search Interface with the operation Search and the input messages SearchRequest and the output messages SearchResponse . Also associated with the binding is an HTML binding an extension element of content elements paths to the respective data element of the data structure response element. The bindings provide an association between the data elements in the data structure and the content elements in the document . Continuing with the weather example of an example WSDL Binding section can include 

With the operation defined in the binding section a binding fills in information about the inputs adding in the HTTP Method of the form either GET or POST through proprietary tags.

Binding paths represent a hierarchy in which the output node data element is stored within the WSDL binding. Binding paths map HTML paths content element path to internal names which can look like responseElement. ShortTermDay x .temperature. Again a . dot indicates that the item to the right is nested within the item to the left and x an x within square brackets indicates that the output node contains an array of elements.

Lastly a service is defined which associates the binding with a port. Within the port the address is set to the action attribute of the marked input form or if no input form was marked it is set to the URL of the output page.

A WSDL Service section defines a service Service and a port Port for the service. A specific resource for obtaining the structured electronic document is associated with the Port by listing an HTML reference within the WSDL Port definition. Continuing with the weather example of an example WSDL Service section can include 

It is to be noted that throughout the above examples the expression html is a reference to a non WSDL element that is not part of the WSDL standard. XML Schema references are non WSDL elements that are part of the WSDL standard. Namespaces for these can be referenced at the outset of the CED so that the WSDL parser will know what action to take.

In order to extract content according to a CED in the WSDL format with html and xml references a WSDL parser could initially generate a WSDL structure including the data structure from the XML references. The structured electronic document can be retrieved and passed to an HTML parser to create an HTML DOM document object model . The DOM can then be processed in accordance with the paths specified in the binding to obtain the content elements specified by the paths. The content elements can then be used to fill the data structure specified in the WSDL structure in accordance with the bindings.

In order to recognize path structure to obtain content elements appropriate computer readable instructions can be executed to process the paths to obtain the content elements and to fill the data structure in accordance with the bindings. The instructions will depend on the specific implementation of the path language chosen and the environment within which the instructions are to be run. For example the instructions could be provided as a separate program from the HTML parser. As an alternative the instructions or a portion thereof for path parsing can be incorporated into the HTML parser such that the resulting HTML DOM is expressed only in terms of the specified path language. This can result in a much smaller HTML DOM that can be processed more quickly to find the content elements to populate the WSDL structure.

The generation of such computer readable instructions will be within the skill of a person skilled in art utilizing their common general knowledge and the information contained in this disclosure.

After the data structure is filled it can then be used in conjunction with various presentation tiers including associated presentation templates for the structured electronic document . The templates can be associated to the data structure by the URL of the presentation template . Example presentation tiers and presentation template include those used for example in association with JavaServer Pages JSP and Java Server Faces JSF . JavaServer JavaServer Pages and JavaServer Faces are trademarks of Sun Microsystems.

Although reference is made herein to examples utilizing HTML the principles described herein are not limited to HTML. Also the WSDL examples are similarly not limited to WSDL. Embodiments include the use of any computer readable markup language. HTML has been used as an example as many computer readable structured electronic documents utilize some form of HTML.

An example tool implemented for example as an extension to a browser or independently therefrom will be described. The tool provides automated generation of a CED based upon user selection of content elements from a rendered structured electronic document .

The tool provides visual content element selection pattern recognition for array path conversion and path merging grouping and automated generation from identified content elements of a data structure definition with associated identification of content elements within a structured electronic document . The data structure definition with associated identification of content elements are embodied within a WSDL document however it is to be recognized that the definition and associated identification could be embodied in other formats such as a data structure with associated identification of content elements that are used to populate the data structure . In this case the data structure defines a copy of itself.

Referring to the electronic device can extract content according to the CED to obtain content elements from the structured electronic document . The common expression and data structure definition can be loaded into memory or . An instance of the data structure defined by the data structure definition can be created in memory or . The processor can apply the common expression to a structured electronic document to extract one or more identified content elements from the structured electronic document to extract one or more identified content elements from the structured electronic document . Each extracted content element is stored in the instance of the data structure . A template structured electronic document see and related description can be populated from the instance of the data structure to produce an output structured electronic document such as described herein with regard to structured electronic document see .

The electronic device can make the content elements available to a presentation tier for formatting for display as part of a user interface screen on a display of an electronic device for example executing a computer program on the processor . The computer program can be for example a browser with an extension sometimes referred to as a plug in or add in the browser . There are many well known commercially available software programs commonly referred to as browsers which can be executed on the electronic device as the browser . In the document is shown as accessible on a remote server through a network . The network may be a public network such as the Internet or a private network such as an intranet. The remote server is an originating server as the structured electronic document originates for the remote server based on CED from the remote server . The computer programs described herein such as program together with a computer readable medium such as memory in which the program is stored can be a computer program product.

General techniques for generating an extension to a browser are well known. Specific extensions for use in association with a CED will be within the skill of those skilled in the art based upon such general techniques their common general knowledge and the information contained herein. In the case of a wireless device browser limits such as screen size and bandwidth can be alleviated by displaying content rearranged or reduced in accordance with the CED to the user. Rearrangement or reduction to take into account the limitations of a particular device is often referred to as optimization.

In extracting content according to the CED the browser with extension parses the CED in order to identify the data elements to determine the relationships between the data elements to identify a respective content element within a structured electronic document for each identified data element and to extract the content elements . The CED can be structured such that publicly available parsers can be used for this purpose. As is discussed herein the CED can be structured in accordance with publicly available languages in order to allow the extension to use publicly available parsers where possible. The extension can be provided with custom instructions for interpreting the CED for specific applications as required.

After retrieving the content elements the browser with extension can fill the data elements with the extracted content elements . Referring again to if desired the data elements can be stored in a data structure including the entirety of the identified data elements and the relationships between the data elements . The data structure can then be made available to the presentation tier . The content elements are thus being made available to the presentation tier through the data structure . The extension can utilize browser features to carry out some functions of the extension for example through application programming interface API calls from the extension to the browser . The extension is a content extraction module similar to the content extraction module discussed below.

The methods described herein are particularly well suited to wireless networks. Accordingly embodiments will be further described with reference to remote server as network infrastructure of a wireless service provider in place of remote server . Although embodiments are described herein with reference to the remote server as network infrastructure it is to be recognized that other remote servers not forming part of a network infrastructure could be used to carry out the methods described herein. It is also recognized that the term remote server is to be broadly interpreted and may for example include distributed systems that distribute the functions of the remote server among more than one server. The remote server will include one or more processors which can be similar to processor and associated memory which can be similar to memory to store and execute the computer programs and instructions discussed herein.

Referring to multiple CEDs . . . can be stored for use in association with multiple structured electronic documents . . .

Referring to in order to identify content elements on a structured electronic document for grouping a user may select the content elements on a user interface screen where the structured electronic document has been rendered to a display . Selection may be performed for example by using a mouse or keyboard or other user input device see . Example embodiments of techniques for content element selection are further described with respect to a tool embodiment later in this description.

A computer program running on electronic device for example an extension of a browser contains computer readable instructions stored on a computer readable medium accessible to the electronic device for execution on the electronic device to associate the selected content elements with their respective content paths. Extensions are also sometimes referred to as add ins add ons or plug ins. Visual feedback of user selection of a content element can be provided for example by highlighting the rendered content element on the screen such as shown by the graphical outlines of rendered content elements . As shown in and the graphical outline can include a cancel indicator for example an encircled x the selection of which deselects the associate element of content .

Browser extensions can have access to a DOM structure of a structured electronic document and can utilize various browser features. For example extensions to a browser distributed by Mozilla under the trademark Firefox and available at www.mozilla.com can be written using XUL XML User Interface Language and JavaScript languages. Similarly the browser could be a browser distributed by Microsoft Corporation under the trademark Internet Explorer. JavaScript is a trademark of Sun Microsystems. Other browsers may be used.

At the time of selection of a group a user can input a name for the group. For example the name can be input into a text box in a pop up window in a similar manner to pattern naming described herein with respect to . The name can then be incorporated by the computer program into the data structure definition as the name of the group array element. This can simplify use of the data structure as opposed to for example allowing the computer program to generate group names such as group group etc. Techniques for naming of element for example groups arrays and other elements are discussed herein. It is to be recognized that other techniques for naming elements will be evident to those skilled in the art and can be used in place of the described techniques.

In order to allow more efficient selection of elements for grouping the computer program can highlight on the user interface screen previously grouped content elements for which content element grouping has previously been performed.

In order to identify groups content element paths can be in a form that contains whole array elements. Methods of identifying content elements by paths are discussed herein. In addition methods of identifying elements within content elements paths that can be represented as whole array elements are discussed herein. The computer program can incorporate computer readable instructions to carry out such methods to first express content element paths in an array element form with array element.

In order to allow more efficient selection of elements for grouping the computer program can highlight on the user interface screen content elements paths that have been previously expressed in an array element form as shown by the differently highlighted elements in the highlighting being outlining in this example. Pattern recognition for Identification of content elements for array representation and merger of array representation are discussed below.

Referring to individual rendered content elements can be named in a similar manner to groups using input text box and pop up window . These names can be used to name the data elements of the data structure .

Data structure definitions for grouped data structures can be utilized in for example a computer readable content extraction document CED for further use by a computer program executing on the electronic device such as browser with extensions to create an instance of the data structure in memory in accordance with the CED and fill the data elements with corresponding content elements and to utilize the filled data structure for example in a presentation tier as discussed herein. It is recognized that the filled data structure could be used for other purposes for example automatic filling of web forms generation of word processing documents from templates or the population of a database for later use. Many other uses will be evident to those skilled in the art based upon the principles described herein.

Grouping as discussed above allows grouping of separate data elements into complex types structures . Grouping can improve the efficiency and usability of the data structure .

Referring to a method is shown to identify content of interest in a structured electronic document such that for example the content can be used to form a common expression .

At at least two separate indications of content elements within the structured electronic document are received through the input device .

At an array of related content elements within the rendered structured electronic document are identified with the processor . The array of related content elements include the indicated content elements and a further content element within the structured electronic document . The further content element is identified as sharing a common characteristic with the indicated content elements .

With reference to a method of processing paths that identify content elements within the structured electronic document to define a data structured definition including relationship definitions according to a common expression can involve at comparing a plurality of content paths wherein each content path identifies a respective content element in a structured electronic document . At the method can further involve determining if there is a plurality of content paths that have whole array elements and determine the least number of array elements in the paths. At in a data structure definition with data elements corresponding to the content elements identified by the content paths and for each whole array element in the determined content path the method can further include defining an array group element in the data structure definition and nesting the corresponding data elements under the array group element. A whole array element represents all elements of an array for example T X is an entire array representing all individual elements T T etc. of the array T where X is a variable index. Grouping can bring together otherwise disconnected elements under a common parent complex element.

For example three paths identifying content elements such as a weather icon text describing weather conditions and text indicating temperature can be as follows 

Without grouping as discussed in the method above a data structure might define relationships between data elements corresponding to the content elements such that each data element is a separate array element for example icon x conditions x temperature x extending from a root element responseElement of the data structure such that the data structure has data element paths 

In this case icon x is an array of weather icons conditions x is an array of weather conditions and index for temperature x is an array of temperatures.

As discussed previously a data element is an element of the data structure whereas a content element is a content element of the structured electronic document .

After grouping a group array element shortTermDay x is inserted into the data structure and the whole array data elements are converted to individual data item elements such that the individual data elements no longer represent whole arrays e.g. icon x becomes icon with the result that 

It is to be recognized that the grouping method can be performed on more complex content elements paths such that group array elements may be nested within group array elements.

For example without grouping as discussed in the method above a data structure might be defined as follows with the initial content element path on the left of the operator and the resulting data structure path on the right 

After grouping a second group array element author y is nested within a first group array element book x 

Referring to as a further embodiment of a method to create a data structure definition defining a data structure at let P represent the set of content element paths selected for grouping. At let A represent the path with the smallest multiplicity i.e. number of variable indices for example x y in the path shown above . At let Prepresent the paths in P with the same multiplicity as A. At let C be a root complex type element e.g. responseElement for data structure .

At define a complex type G and the elements represented by the paths in Pare added as elements of complex type G.

Referring to elements of paths for content elements that may be represented as array elements can be identified using computer readable instructions comprised in computer program which when executed on electronic device carry out the following method. Typically the program executing the method will be used by a developer of an output structured electronic document to define paths that identify content elements in an existing structured electronic document such that the content of the content element can be extracted from the existing structured electronic document in the output structured electronic document such as page see however the program can be used to define paths to the content elements to use for other purposes.

To compare the paths of two content elements at starting from the path root for each step in the respective paths determine if the element is the same. At if any corresponding element in a step is not the same comparison ceases as a pattern has failed to be recognized. At for corresponding steps where the respective elements are the same identify if indices match in the two paths. At if so the element is recognized at one that can be represented as an array. Prior to pattern recognition at at structured electronic document can be rendered to display device and pattern recognition utilizing arrays is a method of identifying with a processer a common characteristic between at least two content elements in a structured electronic document . At least two separate indicators of content elements within the structured element document can be received through input device . At further content elements in the structured document that share the common characteristic can be identified for example by iterating through array indices in a path. Further content elements that share the common characteristic can be highlighted of the display device to a user.

When using the example path language described herein in further detail a determination if the element is the same at can be performed by determining if the element name and element ID are the same.

Where pattern recognition results in elements in the respective paths that can be represented as an array the elements can be replaced in the paths by an array element.

Hence n dimensional arrays can be identified for paths according to the above method instructions and program . Such arrays can be identified from paths for two content elements . In the example above a 2 dimensional array is identified and any element with the matching path having indices in place of x and y can be identified by the path.

In use paths specified using n dimensional arrays can be utilized by one or more computer programs executing on electronic device to identify content elements for example by iterating through the array indices based on a single path. This can provide a simple and efficient method to identify content elements within a structured electronic document .

The paths can be used in for example a CED for further use in identifying content elements in a structured electronic document . CED can be used by one or more computer programs to identify content elements . For example a path can be used in a structured electronic document that is a CED .

Further aspects of pattern recognition including receipt of at least two indications of content elements within a rendered structured electronic document are described herein with regard to an example tool embodiment.

Content elements within structured electronic document can be identified by paths that are similar to XPath paths but with available markup language elements to define the path selected from a subset of markup language elements such that the path is less susceptible to changes in the structured electronic document . For example it is possible to restrict the path to include only structural parents i.e. the elements that define the structure of the document as opposed to its decoration. For example in HTML the element defines structure but the element only defines element decoration. Ignoring non structural elements in a path improves element identification immunity to changes in the structured electronic document.

An example method to restrict the path to include only structural elements for an HTML document is to require the path nodes to be selected from a subset of HTML elements such as head div span form table thead tfoot tr td th h1 h2 h3 h4 h5. In this case any other elements not included in the subset would be considered non structural for the purpose of paths for elements within the structured electronic document. It is recognized that the above listed subset is not an exhaustive listing of all elements that might otherwise be considered structural. Other structural elements could be included in this subset if desired. For example structured electronic documents in specific content areas for example documents using Chemical Markup Language CML can have other markup language structural elements used on a regular basis. The above listed subset is considered to result in sufficiently unambiguous paths while resisting susceptibility to changes between structured electronic documents for example between an instance of a structured language document used to create the common expression and the data structure definition and an instance of a structured electronic document to which the common expression and data structure definition are applied to extract content elements .

Paths can identify parent child relationships element indices element ids and the whole or partial array of elements.

A polynomial in place of an index can indicate that a portion of the array is identified e.g. element 2x all elements with even index .

The last part of the path indicates what the path represents. If it is an attribute name the path represents the value of that attribute if it is the keyword text the path represents the textual content of the element.

Further details of a possible path language for a subset of markup language elements are described in Table 1.

For example the path div div div short table tr x td a href identifies an href element of content within the following HTML structure 

It is understood that there could be any number of non structural nodes surrounding the nodes specified in the path and that between the nodes specified in the path there could be any number of other nodes with different names than those specified.

As the path does not include non structural nodes it is more resistant to subtle changes in the markup language code of the document than a corresponding path in accordance with the XPath.

Since the above path language captures only the structure of content elements by paths it does not matter which search results page instance is used to choose content elements for creation of a CED .

The structural element path language approach assumes that two page instances for the same page type have similar structure. For example depending on which keyword is entered in an Amazon.com search a different web page containing search results will be produced. Amazon is a trademark of Amazon.com Inc. However both search results page instances will correspond to the same structure. The structural resemblance assumption will usually hold because dynamic web content is usually produced by the same template e.g. a template scripted in a scripting language such as JSP Active Server Pages ASP and PHP .

Also the above path language allows an index variable to be used to indicate a list of elements. In the example above this is shown on the table row tr element indicating that all table row tr elements of the parent table are to be included when the elements are fetched from the path.

While some content elements are independent others can be combined into groups. Grouping can be incorporated into the data structure to permit a node array element that includes elements that are themselves arrays. For example a search of Amazon.com produces a structured electronic document with a list of items. Each item has a title and price. The data structure can include a data element that is an array of complex types including title and price rather than two parallel arrays.

Referring to the tool displays to the user a screen shot rendered version of the document with content elements . For example the document can be rendered in a browser window such that the document will look similar to how the document would ordinarily appear in a browser window.

In order to select content elements in the document the tool receives a user indication from pointing device when a cursor is located over a content element in the rendered document . To assist in visual selection the tool can highlight a content element at the pointing device before receiving an indication of the content element .

Selection ambiguity resolution can be utilized to identify a selected content element based upon a selected visible content element . It is to be recognized as with other aspects described herein that selection ambiguity together with or separate from visible selection can be utilized separate from other aspects described herein to identify as selected content element . Selection ambiguity resolution can significantly assist users in working with structured language document content elements.

It is to be understood that various aspects of the tool can be embodied independently of other aspects or utilized in embodiments other than the specific tool embodiment described herein.

Referring to for example an embodiment of the tool will be described that embodies a method to provide initial visual selection of content elements at selection ambiguity resolution associate a path of content element with data element path array pattern recognition array path conversion and array path merger and array grouping . Each of these aspects can be embodied independently of one another and of the tool and each of these aspects may be used independently of one another.

Referring to the tool stores gathered information in memory in a data structure such as an object structure for example if the tool is a Firefox plug in the structure would typically be based on JavaScript objects .

The tool keeps an OperationDefinition object containing Element objects . Each Element object points to two Path objects one Path object representing a data element path elementPath within data structure and a second Path object representing a content element path htmlPath in document . Each Path object contains PathPart objects that make up the path. Each Element object further specifies whether or not the object represents an array element in array property and the type of the element in a type property and a defaultValue property for the element.

Referring to an example data structure contains sample data for one OperationDefinition named Search with three Elements Element Element Element. Element has an elementPath iconURL and an htmlPath idiv img.src . Element has an elementPath author x and an htmlPath idiv table tr x td text . Element has an elementPath temperature and an htmlPath idiv table tr td text . Element and Element are not arrays while Element is an array.

Although the data structure is described for one operation the principles can be extended to multiple operations in which case there will be multiple OperationDefinition objects in the data structure in memory.

Referring to many HTML nodes are invisible but still clickable on the rendered page. For example a hyperlink content element is not visible by itself it covers other visible content elements such as image or text. Where one element of content surrounds another element of content the elements of content are coincident In order to resolve ambiguities between visible and invisible clickable elements the tool at by default initially recognizes the visible content elements as the selected content elements . It is recognized that the tool could default to the invisible element if desired. The tool can receive instructions regarding the content element being selected by the user to assist in resolving the ambiguity such as for example whether the content element is text hyperlink or image.

Referring to for example the tool can determine at if there is an ambiguity with respect to a type of the content element when the cursor is positioned over the location of a rendered content element and if so at the tool can provide the user with the ability to access a right click menu from which one of the possible content element types may be selected. Once the type is selected the tool at seeks an associated content element that meets the selected type. If at an associated content element is found then the tool at recognizes a found content element as the selected content element . If the tool cannot find an associated content element then the tool fails to find an associated content element and returns an error message at to the user for example through the display . For example the error message could be a selected content element type not found .

In another example non content elements for example structural elements such as for example in HTML tables divs rows columns etc surrounding the desired content element may not be visible but they may be clicked if a cursor is outside a clickable portion of a desired visible content element when a user click is received content element. For example a user may be attempting to select a text content element but the cursor is located outside the text content element over a table row tr element containing the desired text content element .

Referring to the tool assumes that a user is attempting to select content elements such as for example text hyperlink or image. The tool at examines the initially selected element to determine if it is one of the recognized types for a content element . If so then the tool has resolved a non content type ambiguity and the content element is recognized at as the selected content element . If not then the tool at seeks a recognized type of content element that is associated with the selected element. If the tool at finds a recognized type of content element then unless there is a further ambiguity at in a content element that is found the tool at recognizes a found content element as the selected content element . If the tool cannot find an associated content element at then the tool fails to find an associated content element and returns an error message at to the user for example through the display . For example the error message could be Associated content element not found. . At and the tool can for example utilize the prior method beginning at to resolve a content type ambiguity before the tool at recognizes a found content element as the selected content element .

Referring to as a further alternative example the tool can be programmed to execute on the electronic device computer program containing instructions to the computer to execute in accordance with the following method to select a desired content element based upon an element identified through a user input device from a rendered structured electronic document .

An example embodiment of the method including pre order traversal through the identified element s children can perform as follows 

Referring to as an example starting from a Hello text content element identified through a user input device from a rendered structured electronic document . identified element Hello text the tool will try to find an associated hyperlink element . Example HTML might be 

The user indicates desire for a hyperlink content element for example using a right click menu as discussed previously and clicks with the cursor over the Hello text element . The tool checks children first no children and then it will find the hyperlink content element as clicked element s Hello text parent element.

The tool also determines a markup language path of a selected element for example content element from the example described immediately above. A markup language path can be determined for example by performing a pre order transversal through the elements of document starting from the root and looking for the selected element . While doing traversal the tool can record element indices for elements in the path.

An example Java based pseudo code embodiment of the method can be expressed as follows where elements of the document are referred to as nodes 

As previously described with respect to the tool shows a pop up window asking the user to enter the element name for the selected content element .

The user enters an element name and clicks button ok. Additional data input fields such as input boxes or selection buttons not shown can be provided on pop up windows or further pop up windows not shown can be provided for the user to specify element type such as string integer date duration etc. Element type information can enable content extraction engine to produce a more useful DOM structure . For example if an element of type date is specified content extraction engine puts a date object as opposed to string in data structure for example by loading data in ISO 8601 format. This would allow presentation tier to format date as specified in the template. Similarly further date entry fields or pop up windows not shown can be provided for the user to specify an element default value and the content extraction engine would substitute a default value in the data structure if the value is not found in the extracted content.

Following element naming as set out above the tool adds a new element for the selected content element to the data structure as follows assuming that the markup language of the document is HTML 

Referring again to following element naming and addition to the data structure the tool highlights the selected content element in the rendered structured electronic document . The selected content element can be highlighted for example by providing a colored overlay over the selected content element as represented by dashed outline . Other highlighting techniques such as for example an outline will be evident to those skilled in the art.

At this point the tool has completed user selection of a content element from the structured electronic document . The path of the content element in the structured electronic document is known named and stored.

Referring to and the previous description with respect to an embodiment of an example pattern recognition method incorporated into a tool can involve a user selecting at least two elements . Typically a user will select elements that the user believes participate in a desired pattern. Element selection can be performed for example as described above by indication through a pointing device . For pattern recognition the tool for example keeps a Pattern object containing Element object for content elements to be considered in pattern recognition sample elements and resulting array element information.

A pattern can be determined by selecting two elements participating in the pattern. However to potentially improve refinement of pattern recognition the tool can allow choosing more than two elements for pattern recognition.

For each selected content element a user holds a cursor over the element and provides a key press such as pressing a plus sign key on a keyboard to indicate the selection of the element for pattern recognition. Other key presses or indications could be used to indicate the selection of the element for pattern recognition. The key press is received by the tool as a user indication that pattern recognition is desired for the selected element . Once the key is pressed the element is highlighted to indicate that it is to be part of pattern recognition and a corresponding Element object for the selected element is added to the Pattern object as a sample element. A previously indicated content element can be cancelled for example by receiving from the pointing device an indication to cancel through a cancel indicator such as cancel indicator .

Once two elements have been chosen in the pattern the tool shows a pop up window asking the user to enter a pattern name for the pattern in a textbox see . The user enters the array name optionally the user can enter element type and default value and indicates acceptance of the user name for example by indicating OK on button .

With the selected elements the tool performs pattern recognition on the markup language paths HTML paths in the examples used herein although pattern recognition is not limited to HTML paths associated with the Elements in Pattern object elements selected for pattern recognition . Pattern recognition outputs a single markup language path for the selected elements containing variables in place of some indices an array element path .

The tool can for example perform array pattern recognition and array path conversion in accordance with the following pseudocode 

The tool can then create a corresponding array data element path Element Path for the array content element path htmlPath created above. For example the tool can determine an array data element path employing an embodiment of a method reflected in the following pseudocode 

For example given an HTML path table tr x td y text x and user entered array name author the array data element will be L x .L y .L z .author.

The tool then creates an Element object and sets this element as arrayElement in the Pattern object. The created Element object contains 

For each sample element in the Pattern object the element is removed from the OperationDefinition object . An arrayElement from the Pattern object is added to the OperationDefinition object . This results in a merged array content element path for the selected elements. This also generates a data structure definition with corresponding merged array data elements .

The tool then highlights all elements whose HTML element paths match the array HTML element path e.g. by providing a colored overlay over the selected node as discussed previously from arrayElement in Pattern object. For example the literal paths div table tr td text and div table tr td text each match array element path div table tr x td text path and would be highlighted as a match.

The tool can further incorporate grouping of array data content elements . For example the tool may embody instructions to carry out the following method 

The tool can then generate a content definition which may for example form a CED . The content definition has the common expression and data structure definition previously referenced. The data structure definition defines the structure for instances of data structure . The service definition service input definition request message response message and port type and bindings all form part of a common expression identifying content elements in a structured electronic document . The data structured definition is defined according to the common expression as set out above. For this example it is assumed that the operation name is Search .

Content definition generation is initiated for example by the tool presenting a user input interface to a user to request generation. Such an input interface might be for example a generate WSDL button on a toolbar. Other forms of input interfaces such as for example a menu item will be evident to those skilled in the art. As an alternative the content definition may be generated automatically as required information is obtained by the tool.

As part of content definition generation the tool for example for content definition in a WSDL format as discussed elsewhere herein a wsdl service can contain a wsdl port further containing an html address location element pointing to an endpoint URL. For example 

The tool then generates primitive string elements for each input parameter under requestElement complex type for types section. For example 

The tool then generates data structure definition elements corresponding to element paths in OperationDefinition under responseElement complex type for types section. For example elements with paths 

If element type and default values are specified they can be included in the data structure definition as part of the element definition for example a type of xs.string is provided for the title element above.

Tool then generates a binding for each element in OperationDefinition object including htmlPath and bindingPath elementPath for example 

The CED can be associated with one or more presentation templates such that the content elements retrieved from the document can be put in a format for display by the electronic device or the device . The templates can be registered with the remote server in a manner similar to the CED . Alternatively if a presentation template is not available the content elements can be sent as data structure for example in JavaScript Object Notation JSON or XML format to electronic device or device .

It is to be recognized that a CED can be associated with a presentation template such that content extraction according to CED can be used to initiate presentation generation according to template . For example once the content elements have been extracted then the CED invokes a presentation tier to perform presentation generation according to template . A CED and presentation template can be otherwise associated with one another. For example the presentation template can trigger content extraction according to CED rather than pre fetching content according to CED and then initiating presentation generation.

A series of CEDs and presentation templates may be strung together to perform a sequence of operations on structured electronic documents each CED or template calling the next or being called under the control of a main CED or template . For example it may be required to enter information at a search request page prior to receiving search results. A CED can be used for the search request page with a presentation template to display the search request page. A further CED can be used for the search result page. For interactions requiring multiple CEDs without user input multiple CEDs can be initiated sequentially before a presentation template provides information for transport to a user. Multiple operations can also be defined in a single CED for example using multiple port types in a WSDL format. Other configurations of CED and presentation templates can be possible depending on the allowed methods of retrieving the document . For example it may be possible to directly address the search result page in an URL to prompt the return of a results page in one step. An example presentation template for the weather example discussed herein might include the following template where elementPath is replaced with a value for the specified element path for the data elements in the data structure and arrayPathhtml arrayPath repeats the specified HTML for each array element in the array specified by arrayPath 

Such a template would render an output structured electronic document similar to that shown in for the weather example described herein. One can see that the page can be more compact and mobile browser screen friendly. It can also exclude elements of the structured electronic document that might not be renderable by a mobile browser. Other formats of the output structured electronic document are possible at the discretion of the designer. The benefits of the output structured electronic document are not limited to presentation on mobile devices and can extend to other platforms.

Referring again to on a personal content delivery embodiment a user registers a content extraction document CED with a remote server such as a computer executing a computer program and accessible through a public or private network . The CED defines a common expression for the remote server to find a respective content element within a structured electronic document . The structured electronic document can for example be located on a remote server accessible through a public or private network . The remote server associates the CED with the user. The remote server can use a variety of computer based techniques to associate the CED with the user. For example the remote server can associate the CED with a user account that requires authentication such as a password from the user. The remote server can associate the CED with an address for example an Uniform Resource Identifier URI on remote server that is known to the user. The remote server can associate the CED with a particular electronic device . The electronic device can be identified when the electronic device communicates with the remote server through the network . The electronic device can be for example a wireless handheld device such as for example by a device serial number transmitted from the electronic device to the remote server .

As the device is an electronic device it contains similar components although in alternate configurations appropriate to a handheld format. Accordingly similar reference numerals for the components of the device will be used for the components of the device for example display device input device processor keyboard pointing device and memory . For simplicity the description of the components of the device will not be repeated nor will the components of the device be independently identified in the FIGS.

The remote server can utilize cookies that identify the electronic device associated with the user. A combination of techniques to associate a user with the CED can be used. Such techniques can be used sequentially such that each step must be performed or in parallel to allow alternative ways to associate the CED with a user.

Data to determine the association of the CED with the user when extracting content according to the CED is stored on a computer readable medium which is accessible to the remote server such as memory or a disk drive.

Content element structured electronic document. The CED can be created at an electronic device executing a computer program . The computer program can for example comprise a browser with extension or plug in as discussed herein. It is recognized that the electronic device can be a wireless device though it is further recognized that a handheld wireless device can be limited in its speed and screen size among other resources which can make it impractical for this purpose. Alternatively other computer programs running on a computer can be provided for use in creating a CED . Computer program for creating a CED could be accessed remotely. For example the wireless service provider could run a web enabled application on a remote server for users to create a CED . For ease of use a CED may be created utilizing a desktop computer as the electronic device with a display see of sufficient size for the work and to avoid any wireless network charges.

Automated generation of a CED can be implemented through a tool such as the tool described herein. Such automated generation can allow a CED to be created without access to underlying coding technologies for example structured definition languages such as HTML XML or WSDL. This makes it possible for users to create their own CEDs for registration. It is also possible for developers to generate CEDs in an automated manner. Although developers can have the knowledge necessary to manually create a CED based upon the principles described herein the use of a tool with automated generation capabilities can make the creation much more efficient.

Upon registration the remote server provisions the CED on the network such that the remote server will initiate content extraction according to the CED when the remote server receives a request to process content according to the CED associated with the user. As an example the identifier could be a uniform resource locator URL pointing to a location in the remote server that the remote server associates with the CED . The identifier can also be the identifier for finding the original structured electronic document such as the URL of the document and the remote server can be provisioned to initiate content extraction according to the CED whenever the user uses the original URL. As a further alternative if a remote server other than the remote server is used then the identifier could direct the electronic device to the remote server. The identifier could for example be saved as a favorite by the user on the electronic device .

When the user wishes to view the content elements from the structured electronic document as defined in the CED the user uses the identifier to initiate content extraction according to the CED by the remote server . The remote server accesses the CED finds the content elements and transmits them to the electronic device in a form suitable for rendering to a display see for the user. Rendering may occur in a browser .

It is to be recognized that the computer for creating the CED the electronic device for registering the CED with the remote server and the electronic device for viewing the content elements need not be the same electronic device. Each of these electronic devices is exemplified by the electronic device . For example the computer for creating the CED can be a desktop computer. For example the computer for registering the CED could be either a desktop computer or a wireless handheld device. Requests to initiate content extraction can be made from the computer at which the user wishes to view the content elements . The remote server can be set to recognize requests from the computer as a request from the user provided the computer meets any authentication requirements such as those discussed below.

The remote server may be restricted to recognize requests from a particular electronic device associated with the user s account for example a wireless handheld device . Similarly transmissions in a form suitable for rendering to a display could be restricted to a particular electronic device associated with the user s account for example a wireless handheld device . For example in the case of a wireless handheld device device restrictions can be enforced based on a device identification number associated with a user account. A password cookie or other authentication technique could be used where for example a device serial number is not available.

The CED could be registered in many ways. If using a wireless handheld device the CED could be downloaded to the wireless handheld device for uploading to the remote server . Alternatively the CED could remain on the remote server associated with a user s account if created there by a user. Then a user could use a wireless handheld device to register the CED with the remote server for example by using a web interface or sending an email to the infrastructure .

After successful provisioning on the remote server of CED once the electronic device or device makes a request to initiate content processing according to CED the remote server obtains the content elements defined in the CED and transmits them to the electronic device or the device in a form suitable for rendering to a display of the user.

The computer readable storage medium can be for example a random access memory storage area network SAN magnetic disk drive hard drive or other computer readable storage medium accessible to the remote server .

Further example details for creating and for using an example CED for personalized content delivery have been previously set out. These details are being provided as examples only. Within the example description have been described other aspects and embodiments that have applicability beyond the creation and use of a CED . Within the example description have been described other aspects and embodiments that have applicability to personalized content delivery. It is to be understood that such other aspects and embodiments are included within the scope of the principles described herein and not limited to the creation and use of a CED or to personalized web delivery. Also personalized web delivery could be carried out utilizing other forms of CED created in another manner or utilizing the techniques described herein other than with a CED .

In this description various aspects and embodiments of such aspects have been described. For example an aspect of an embodiment provides a method of outputting content of interest of a structured electronic document from a computer or distributed computer system having a processor and memory. The method includes loading a common expression and a data structure definition into memory the common expression identifying a content element in a first structured electronic document the data structure definition defined according to the common expression creating in memory an instance of a data structure defined by the data structure definition applying with the processor the common expression to a second structured electronic document to extract a content element from the second structured electronic document storing the extracted content element in the instance of the data structure and populating a template structured electronic document using the instance of the data structure to produce an output structured electronic document.

The method can include optimizing the output structured electronic document for delivery to a mobile electronic device. The second structured electronic document can be a result of a search performed using an input field associated with the common expression.

The common expression and data structure definition can be in a single file. The common expression is stored in a web services description language.

The method can include displaying the output structured electronic document on a display device. The display device can be part of a mobile electronic device to which the computer or distributed computer system is wirelessly connected.

In another example aspect an embodiment can provide a computer program product stored on a computer readable medium. The computer program product includes instructions which when executed by computer or distributed computer system having a processor and memory cause the computer or distributed computer system to carry out loading a common expression and a data structure definition into memory the common expression identifying a content element in a first structured electronic document the data structure definition defined according to the common expression creating in memory an instance of a data structure defined by the data structure definition applying with the processor the common expression to a second structured electronic document to extract a content element from the second structured electronic document storing the extracted content element in the instance of the data structure and populating a template structured electronic document using the instance of the data structure to produce an output structured electronic document.

The instructions can be extensions of a browser forming part of the computer or distributed computer system for rendering structured electronic documents to a display device. The instructions can be instructions for a computer or distributed computer system that is a remote server and the computer readable medium is accessible to the remote server.

The remote server can be part of network infrastructure of a wireless network of mobile electronic devices. The instructions can have access to a DOM tree of structured electronic documents.

In a further example aspect an embodiment can provides a computer or distributed computer system. The computer or distributed computer system includes a computer program and memory on which the computer program is stored and a processor executing in accordance with the stored computer program. The computer program includes instructions which when executed by the computer or distributed computer system cause the computer or distributed computer system to carry out loading a common expression and a data structure definition into memory the common expression identifying a content element in a first structured electronic document the data structure definition defined according to the common expression creating in memory an instance of a data structure defined by the data structure definition applying with the processor the common expression to a second structured electronic document to extract a content element from the second structured electronic document storing the extracted content element in the instance of the data structure and populating a template structured electronic document using the instance of the data structure to produce an output structured electronic document.

The instructions can be extensions to a browser stored in memory of the computer or distributed computer system. The computer or distributed computer system can be part of network infrastructure of a wireless network of mobile electronic devices.

Other aspects and embodiments are also described in the above description and other aspects and embodiments will be evident from the above description.

Throughout this description various components are described along with methods and apparatuses for utilizing such components. Unless the context requires otherwise such methods are carried out utilizing computer readable instructions stored on a computer readable medium accessible to a computer to cause the computer to carry out the methods. Such computer readable instructions to carry out the methods form part of the description herein.

This description describes many different embodiments of a variety of aspects. Among other reasons some embodiments are being described together to provide example context for ease of understanding.

Although some aspects may be incorporated within or together with other aspects it is to be understood that the scope of the embodiments and aspects described herein is not limited to incorporation within or together with such other aspects.

As use of structured electronic documents is best known for rendering in browsers this description typically refers to examples utilizing browsers however it is to be understood that the embodiments and aspects are not limited to structured electronic documents that are rendered only in browsers. For example email clients and other applications can also render structured electronic documents through embedded rendering engines or API calls to a rendering engine.

As an example some embodiments relate to a content extraction document CED examples of which are discussed herein with particular reference to . Other embodiments relate to systems and methods that perform content extraction according to a CED and still further embodiments relate to methods and tools for creating a CED . Further embodiments relate to methods and system that utilize a common expression to provide content elements from a structured electronic document . Other example embodiments include methods and systems independently or in combination for identifying content elements for selecting content elements for converting elements in a path of a content element to arrays and for grouping elements in a path of a data structure associated with array elements in paths of content elements .

Further it is understood that features and functions of one embodiment or aspect may be utilized in other embodiments and aspects without requiring that the description of the features and functions for the one embodiment or aspect be repeated in this description for the other embodiments and aspects.

One of skill in the art will appreciate that the methods described herein can be used with the apparatuses described herein but could also be used with other apparatuses. Accordingly some primary steps are presented in a generalized form that does not rely on the particular apparatuses described herein. It is noted in the description of certain steps and substeps that such steps can be performed by specific elements of the apparatuses however the association of steps and apparatuses is done by way of example but not limitation and it is to be understood that these steps could be performed by other apparatuses. Moreover the term step is used to refer to both the general steps associated with the methods and to more detailed substeps which can be comprised as part of a more general step. Some steps are optional. Optional substeps can be omitted or replaced by other specific method steps that implement or embody the function of the primary step. Although discrete steps are mentioned it will be understood by one of skill in the art that in some embodiments the functions defined in the steps can be performed as continuous processes.

The steps or operations described herein are just for example. There can be many variations to these steps or operations. For instance the steps can be performed in a differing order or steps can be added deleted or modified. Parts of one embodiment can be used in another embodiment without requiring all of the steps of any one embodiment.

The embodiments described herein are examples. Thus it will be appreciated that although the embodiments are described in terms of specific technologies other technologies could be used to implement systems.

Although example implementations of the embodiments have been depicted and described in detail herein it will be apparent to those skilled in the relevant art that various modifications additions substitutions and the like can be made and these are therefore considered to be within the embodiments described herein.

Embodiments in other specific forms can be made without departing from the spirit or essential characteristics thereof. Certain adaptations and modifications will be obvious to those skilled in the art. Therefore the above discussed embodiments are considered to be illustrative and not restrictive.

