---

title: Database application including spilt views
abstract: A database application is provided which includes functionality for providing split views. The database application includes an object model having a number of objects, methods, and properties. The object model preferably includes a form object which includes a split view representation. A number of properties are associated with the split view which provides for the presentation of data to a user of the database application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08380762&OS=08380762&RS=08380762
owner: Microsoft Corporation
number: 08380762
owner_city: Redmond
owner_country: US
publication_date: 20100608
---
This application is a continuation of application Ser. No. 11 159 763 filed Jun. 23 2005 now U.S. Pat. No. 7 734 664 which is incorporated herein by reference in its entirety.

Current desktop database applications allow a user to manipulate data in a variety of ways. A desktop database application can be used to organize and maintain data associated with the many different applications. For example a desktop database application may be used for organizing and maintaining a construction project schedule. As another example a desktop database application may be used for organizing and maintaining personal or business contacts. Additionally a desktop database application may be used to track inventory orders and shipping dates related to certain inventory. In these instances and others it is not unusual for a desktop database application to include large amounts of data. Consequently a user can be overwhelmed and thus frustrated when working with large amounts of data. There are occasions when a user would prefer to view a large amount of data while editing one or more portions of that data. For example a user may want to view many records on a screen at one time while simultaneously viewing and or editing details of a single record from the record set. Unfortunately current desktop database applications do not provide such a mechanism.

It is with respect to these considerations and others that the various embodiments of the present invention have been made.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Exemplary embodiments of the present invention provide methods and computer readable medium for providing a database application having various views. The database application includes an object model having a number of objects which provide programmatic access and implement various views to a user including split views. In preferred embodiments the object model includes a form object. The form object preferably includes a number of visualizations one of which is a split view which includes a number of properties and associated settings for presenting data to a user of the database application. The split view can be utilized with any data schema and type.

The database application can be used to create tables queries forms reports etc. According to a preferred embodiment the database application is a desktop database application and is operable to provide different split views which enable a user to view and or modify a variety of data at a given time. According to the preferred embodiments a user is able view and or edit multiple records and record details at a time using split views of the database application. A user can configure the split view according to user preference using a user interface or other programming interface if desired. For example a user using the database application can configure the split view in horizontal and vertical orientations and simultaneously view data as part of a datasheet and a form.

These and other features and advantages which characterize the present invention will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the invention as claimed.

Exemplary embodiments of the present invention provide methods and computer readable medium for providing a database application having various views. The database application includes an object model having a number of objects modes and properties for providing various views to a user including split views. In preferred embodiments the object model includes a form object. The form object preferably includes a number of visualizations one of which is a split view which includes a number of properties and associated settings for presenting data to a user of the database application. The split view can be utilized with any data schema and type. A visualization can be described as a way to display data. Single record forms is another visualization which depict one record from the data set at a time. Continuous forms is a visualization which show many records at one time in a custom layout. Datasheets is another visualization which show many records at a time in a grid.

The database application can be used to create tables queries forms reports etc. According to preferred embodiments the database application is operable to provide split views which enable a user to simultaneously view and or edit multiple records and record details. Using the database application a user can view and edit a particular record in simultaneous views. A user can configure the split view according to user preference using a user interface or other programming interface if desired. For example a user using the database application can configure the split view in horizontal and vertical orientations and adjust the split view according to preference.

Referring now to the drawings in which like numerals represent like elements various aspects of the present invention will be described. In particular and the corresponding discussion are intended to provide a brief general description of a suitable computing environment in which embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with program modules that run on an operating system on a personal computer those skilled in the art will recognize that the invention may also be implemented in combination with other types of computer systems and program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative operating environment for embodiments of the invention will be described. As shown in computer comprises a general purpose desktop laptop or other type of computer capable of executing one or more application programs. In particular according to the various embodiments of the invention the computer is operative to execute a database application . As known to those skilled in the art a database application program provides functionality including but not limited to organizing accessing and sharing information. According to a preferred embodiment the database application program includes an object model described in detail below.

According to one preferred embodiment of the invention a database application comprises the ACCESS database application program hereby incorporated by reference in its entirety from MICROSOFT CORPORATION of Redmond Wash. After using the database application the information may be saved to a data file on the mass storage device . Additional details regarding the operation of the ACCESS 2003 application program are publicly available from MICROSOFT CORPORATION of Redmond Wash. It should be appreciated however that the various aspects of the invention described herein may be utilized with other database applications and other related programs from various manufacturers.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed or utilized by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments of the invention the computer may operate in a networked environment using logical connections to remote computers through a network such as a local network or the Internet for example. The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse etc. not shown in . Similarly an input output controller may provide output to a display screen a printer or other type of output device.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer such as the WINDOWS XP operating system from MICROSOFT CORPORATION of Redmond Wash. The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store a database application program as described above and other application programs such as a word processing application a spreadsheet application e mail application etc. As briefly described above the database application can comprise an application program for organizing accessing and sharing information.

Referring now to a block diagram depicts a database application in accordance with an embodiment of the invention. The database application includes an object model that can include a number of different types of objects as described below. Each object can include one or more methods and or properties. The methods and properties are used to control and or provide various functions or features for the database application . Furthermore the methods and properties can be accessed and utilized by a programming interface for further application.

For example certain object methods and properties can be used to display data to store and manage data including data entry and deletion to provide programming functionality and or respond to events such as but not limited to data modification like creating new records or changing existing records or user interaction like moving keyboard or mouse focus from one field to another. Typical events in MICROSOFT ACCESS include BeforeUpdate and AfterUpdate OnCurrent OnFormat OnLoad OnUnload etc. A programming application such as VISUAL BASIC from MICROSOFT CORPORATION can be used to create control and manage the different types of objects methods and properties of the database application . While the programming interface is shown as a separate application in FIG. it will be appreciated that the programming interface can be implemented as part of the database application .

As described above the database application preferably includes an object model . The object model provides an application programming interface for using creating and controlling objects methods properties and or related structure resident in the database application . Code can be used to manipulate these features of the database application .

In a preferred embodiment the object model includes but is not limited to a table object query object form object and a report object . The table object query object form object and the report object each include one or more methods and or properties. According to this preferred embodiment the form object includes visualizations which provide for viewing and manipulating data forms datasheets and other information when using the database application . Preferably visualizations of the form object include but are not limited to a design view continuous form view datasheet view single form view and a split view .

In one embodiment the split view preferably contains within it a rendering of a datasheet and a form. A user can select the split view option from a menu icon or other application command. For example the split view can be enabled using a drop down menu tool bar or some other user interface mechanism. A user who enables the split view can simultaneously view and manipulate a form and datasheet when using the database application . Once the split view has been enabled the user can adjustably locate the form and datasheet horizontally or vertically resizing and manipulating the view according to the user s preference as described further below.

According to an embodiment of the invention the object model can be used to display a datasheet above or below a form. Or the object model can be used to display a datasheet to the right or to the left of a form. As described below a user using a user interface of the database application can also utilize a splitter bar provided by the database application . The splitter bar operates to delineate a boundary between a datasheet and a form. A user using a mouse or other input device can manipulate the splitter bar to adjust the height or width of the form and or the data sheet. As described below the split view can also be output to a printer for printing.

The table below illustrates an exemplary object model corresponding to the split view . The exemplary object model for the split view includes a number of properties and associated settings for implementing and controlling the split view . Each property of the split view preferably includes one or more settings which provide various methods for viewing and manipulating data when using the split view of the database application . The exemplary object model can be implemented and manipulated using a programming interface such as VISUAL BASIC or included as part of the functionality of database application .

Each property can be individually set either through the user interface or the object model in order to achieve a specific behavior or look for the split view. For example in order to turn a single form view into a split form view you would set the DefaultView property to Split Form . To further refine the split form you could select a specific split form orientation i.e. Split Form Orientation Datasheet on Bottom . This would create a form as a split form with the datasheet on bottom. Each of these properties can be set to create the required environment for the developer of the database.

As shown in the Table above the exemplary object model enables the database application to provide various split views to a user. As described above the split view preferably depends from and is based on the form object . The split view can be viewed on a display such as an LCD or other display device and also output to an output device such as a printer. According to this embodiment the first property of the split view shown in the Table is the Default View property. The Default View property can be used to provide a mechanism for enabling the split view to thereby simultaneously display a form and datasheet to a user when using the database application .

As shown in a user is viewing a form and a datasheet while using split views of the database application . depicts a split horizontal view. The dual rendering includes contact information pertaining to a number of contacts. A splitter bar can also be rendered to divide the view so that the user can adjust the split form and datasheet views. As described below the splitter bar can be made adjustable allowing the user to adjust the size of the rendered view. Accordingly the user using split views can now view a large number of data entries while also viewing specific information related to a particular entry.

The second property of the split view is the Split Form Orientation property. According to a preferred embodiment the Split Form Orientation property includes four settings which are available when using the split view . The first setting of the Split Form Orientation property is configured to display the datasheet above the form see the horizontal configuration of . The second setting of the Split Form Orientation property is configured to display the datasheet below the single form.

The next property of the split view is the Split Form Datasheet property. Preferably the Split Form Datasheet property has two settings. The first setting of the Split Form Datasheet property is configured to allow edits to be made to the data displayed in the split view . The second setting of the Split Form Datasheet property is configured to not allow edits to be made to the data in the datasheet while using the split view . For example when the first setting is implemented a user can directly edit data of a datasheet. If the second setting is implemented the datasheet is read only meaning no edits are allowed to the data populating the datasheet.

Continuing to refer to the Table above the next property is the Split Form Splitter Bar property. Preferably the Split Form Splitter Bar property has two settings. The first setting of the Split Form Splitter Bar property is configured to render a splitter bar between a form and a datasheet when using the split view . The second setting of the Split Form Splitter Bar property is configured to not render the splitter bar between a form and a datasheet when using the split view . For example when the first setting is implemented a splitter bar is rendered in a vertical or horizontal orientation based on the Split Form Orientation property setting. The objective of this property is to allow or disallow user resizing of the split forms.

The next property in the Table is the Split Form Printing property. According to a preferred embodiment the Split Form Printing property has two settings. The first setting of the Split Form Printing property is configured to print a single form when using the split view . The second setting of the Split Form Printing property is configured to print the datasheet only. For example when the first setting is implemented the user is able to print a particular form that has been rendered when using the split view . When the second setting is implemented the user is able to print a particular datasheet that has been rendered when using the split view .

The next property Save Splitter Bar Position preferably has two settings which allow the position of the splitter bar to be persisted or not. Thus using this property a user can save the splitter bar location so that the next time the user is using the split view the splitter bar will be automatically rendered at the previously saved location. Preferably the splitter bar can be used to adjust the size of the form not the datasheet. Thus when the size of the form is reduced more rows are shown than were previously shown on the datasheet for example. It is also preferred that the top row visible is anchored to the top of the window it occupies either the splitter bar or the window during resize. When the form is enlarged fewer rows are shown than were previously shown on the datasheet. The splitter bar may be used to resize the datasheet space to relative non existence.

Using the foregoing properties of the split view a user or another application can implement split views when using database application . Furthermore the properties can be used to provide programmatic access for developing code to further utilize aspects of the database application . It will be appreciated that the database application can be implemented such that an object model is mapped to the user interface which includes features for allowing a user of the database application to implement the split view . Moreover the properties of the split view may be set in design mode using code or a property sheet. The property sheet allows mapping functionality for setting various behaviors of objects etc. Using the user interface a user can control how the form and datasheet will be displayed when using the split view . The user can also rearrange the view while in split view . Thus when a user wishes to view data using split views the database application can enable the selected view through a property sheet automatically or upon user input.

According to a preferred embodiment of the invention when the split view is implemented a user can use the interface for multi select operations. Moreover a selected item in a datasheet can be used to determine what is shown in the associated form. In the case of multi select preferably there will be a selected record for either multi selecting rows or columns. It is also preferred that the form and the datasheet are in synchronization with respect to one another meaning that at all times the primary selection in the datasheet is rendered in the form view. Additionally the record displayed in the form view will be selected in the datasheet. Therefore regardless of what mechanism an end user navigates with the recordset and cursor are in the same place. This goes beyond simple record level navigation and the cell focus is also reflected in selection. Filter and sort properties preferably apply to both the datasheet and form when the split view is implemented. The user interface can implement the split view from a drop down menu button macro or other user interface selectable by a keyboard mouse stylus or other pointing or selecting interface. It will be appreciated that the particular interface for availing the split view can be designed and or implemented in a variety of ways and the invention is not intended to limited to any particular embodiments or examples discussed herein.

It will be appreciated that objects associated with a database application and the view that the user chooses can be determined by the user to address the specific data task that they are trying to accomplish. Whether this means to allow for data entry display single pieces of information or to display and edit complex pieces of data in multiple views to make it easier to read and understood by the end user etc. For example setting some available properties on the same form can enforce a data integrity rule requiring all addresses to have a state associated therewith. As another example if a user wants to update addresses in his her customer list the user might create one particular type of view like a single record form . If the user wanted to see a full list of all customers another view might be more appropriate like a datasheet . The split view allows for a combination of both single record forms and datasheets.

It should be appreciated that various embodiments of the present invention can be implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly logical operations including related algorithms can be referred to variously as operations structural devices acts or modules. It will be recognized by one skilled in the art that these operations structural devices acts and modules may be implemented in software firmware special purpose digital logic and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims set forth herein.

Although the invention has been described in connection with various exemplary embodiments those of ordinary skill in the art will understand that many modifications can be made thereto within the scope of the claims that follow. Accordingly it is not intended that the scope of the invention in any way be limited by the above description but instead be determined entirely by reference to the claims that follow.

