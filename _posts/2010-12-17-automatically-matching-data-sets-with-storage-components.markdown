---

title: Automatically matching data sets with storage components
abstract: An administrator of an enterprise storage set may be tasked with storing a large number and variety of data sets on a large number and variety of storage components. However, the manual selection of a physical schema by an administrator may be time-consuming, may generate inefficient physical schemata, and may not be easily reevaluated as the data sets and storage set change. Presented herein are techniques for automatically determining a physical schema by comparing the storage factors of each data set (e.g., data size, relationships with other data sets, and usages of the data set by users) with the storage capabilities of the storage components, selecting a suitable storage component, and implementing the storage of the data set on the storage component. An embodiment of these techniques may thereby achieve an automated identification of a physical schema with improved efficiency and flexibility of the physical schema while conserving administrative resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949293&OS=08949293&RS=08949293
owner: Microsoft Corporation
number: 08949293
owner_city: Redmond
owner_country: US
publication_date: 20101217
---
Within the field of computing many scenarios involve two or more data sets that are to be stored among two or more storage components. For example administrators of an enterprise information technology environment for a large company may be tasked with configuring a storage set comprising a set of storage components to store a large number of data sets on behalf of a large number of users. This task may be complicated e.g. by the large variety of storage components comprising the storage set e.g. database servers network file systems archival systems and data warehouses and cloud storage services the properties and features of the different storage components e.g. total and available storage capacity bandwidth and throughput querying capabilities and security and the variety and properties of the data sets e.g. data set size relationships with other data sets and uses of the data sets by the users of the enterprise organization . In many contemporary scenarios the administrator may first examine the data sets and determine a conceptual and or logical schema and may consider the relationships and usages of the data sets and may then have to select a physical schema for the storage of the data sets e.g. by choosing a storage component having suitable features matching the properties of the data set provisioning storage on the storage component and initiating the storage of the data set by the storage component. The administrator may then have to implement the storage selection e.g. by provisioning storage on the selected storage components configuring devices and software processes to utilize the provisioned storage component storing the data onto the storage component and instructing other users regarding the storage component. Additionally the administrator may have to reevaluate of the selections of storage components for data sets as the number and details of the data sets and or the storage set change.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

While an administrator may adequately select storage components to match various data sets a manual selection of storage components may have some disadvantages. As a first example the selection of a physical schema may consume the attention and resources of the administrator and may involve a significant amount of administrative attention of the administrator to design implement and maintain. As a second example a manual design of a physical schema may be inefficient in several respects e.g. failing to utilize the storage capacities and features of the storage set with high efficiency particularly as the number variety and complexity of storage components and or data sets increases. As a third example an administrator may be reluctant to reevaluate a manually designed physical schema e.g. in view of changes in the data sets and or the storage set including an addition or removal of storage components.

Presented herein are techniques for automatically selecting storage components of a storage set in order to store a potentially large number and variety of data sets. In accordance with these techniques for each storage component a set of storage capabilities may be identified e.g. available storage capacity bandwidth a capability of executing queries remote accessibility and a security level and for each data set a set of storage factors may be identified e.g. the estimated size of the data set the structure and content of the data set whether or not users are likely to execute simple or complex queries against the data set whether or not users are likely to access the data set remotely and a sensitivity level of the data comprising the data set . When presented with a particular data set an embodiment of these techniques may compare the storage capabilities of the storage components with the storage factors of the data set automatically select a suitable storage component provision space on the storage component to store the data set and initiate the storage of the data set in that storage component. In this manner a physical schema for storing the data sets within the storage set may be automatically generated thereby conserving the attention of administrators achieving a highly efficient and suitable physical schema and enabling a reevaluation and reconfiguration of the physical schema as the data sets and or storage set change.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Within the field of computing many scenarios involve the storage of data within a storage set comprising one or more storage components such as a set of one or more hard disk drives solid state storage devices tape backup drives memory caches network attached storage devices virtual storage devices cloud storage services or a combination thereof. On such storage components many types of data may be stored in many types of storage systems such as various types of file systems and database systems. Particularly in enterprise scenarios these storage sets may scale up to include very large amounts of storage possibly reaching many petabytes or exabytes and very large numbers of storage components. Each storage component may have various storage capabilities including physical properties such as capacity throughput and reliability e.g. mean time between failures MTBF and the ease of recovering from data failure and usage properties such as security e.g. who administrates and may physically access the storage component and backup e.g. how often data archiving of the storage component is performed . Additionally such storage capabilities may be Boolean or gradient in nature e.g. whether or not a particular storage component provides support for queries such as Structured Query Language SQL vs. the per megabyte cost of acquiring and expanding each storage component .

These storage devices may be used to store many types of data including files comprising an operating environment of a computer personal documents media libraries records in one or more database tables and email mailboxes comprising sets of email messages. Each data set may have particular storage factors such as a data size access patterns e.g. sequential streaming or random access large or small numbers of individual units such as files concurrent access by several users and support for queries and minimum acceptable access rates such as minimum rates for streaming media objects without interruption security e.g. security considerations for where the data may be stored who may access the data the types of credentials to be presented before granting access and the sensitivity of the data and accessibility e.g. whether the data is to be restricted to local access over a local area network or ubiquitously available . Again such storage factors may be Boolean or gradient in nature e.g. whether a particular data set involves queries and an estimate of the advantage of providing higher throughout for a particular data set .

Within such complex scenarios the task of administrating the storage set becomes nontrivial and administrators may have to spend considerable effort and resources in acquiring configuring testing and maintaining such storage components as well as identifying provisioning and backing up sets of data stored on each component. In particular the task of selecting a storage component for a particular data set may be complex. This task often involves identifying the various storage factors for a data set and matching the storage factors with a storage component featuring storage characteristics that match the storage factors of the data set. Once a data component has been selected the administrator may have to provision a sufficient amount of storage on the storage component e.g. creating a storage volume on the storage component record the selection in a storage catalog and configure devices and instruct individuals in accessing the provisioned storage.

Faced with such storage factors of the data sets and such storage capabilities of such storage components the user may be presented with the task of selecting a suitable storage component for each data set . The user may therefore evaluate various properties of the storage selection such as the entity relationships e.g. relationships of data in a first data set with data in a second data set usage mappings e.g. considerations of the usage patterns of each data set such as the locations of users and processes that will access the data set and the access patterns of such usage and logical schema e.g. the components of each data set such as the sizes types and interrelationships of files within a file system or tables in a relational database .

As a result of these considerations the user may generate a physical schema comprising a mapping of the data sets to the storage components based on the matching of storage factors of the data sets with the storage capabilities of the storage components . The user may then have to implement the selected physical schema by provisioning storage on the storage component e.g. creating a logical volume and setting up access parameters recording the provisioning in a storage catalog configuring devices and software processes to use the provisioned storage and notifying and instructing other users in the details of the allocated storage. Additionally the user may have to perform various maintenance tasks such as archiving or backing up the storage components periodically testing the integrity of the storage components upgrading storage components to provide more capacity and replacing malfunctioning hardware.

It may be appreciated that the exemplary scenario of involves a significant amount of effort on the part of the user particularly as the number and variety of data sets and the number and variety of storage components increase. The process of matching data sets to suitable storage components and implementing such selections may involve large amounts of skill and resources and inefficient decisions may result in wasted resources data loss and inadequate performance e.g. slow network transfer rates and inadequate storage capacity . Moreover once a physical schema has been selected the reevaluation of the physical schema may present a daunting challenge. For example reevaluating reallocating storage in view of changes to the data set group and the storage set e.g. the addition of new data sets and or new storage components may comprise a difficult and resource intensive process particularly for a large number of data sets and storage components . Even if this process is desirable the resources involved in evaluating the physical schema reconfiguring storage components moving data among storage components reconfiguring devices and software processes and reinstructing other users may simply not be cost effective. As a result inefficiencies may arise in the physical schema that reduce the performance capabilities and usage of the storage set .

Presented herein are techniques for facilitating reducing or eliminating the selection of a physical schema by a user . In accordance with the techniques presented herein an automated matching process may be devised to for each data set having particular storage factors automatically select a storage component presenting suitable storage characteristics. In general the problem of selecting the physical schema may be viewed as a best fit problem wherein elements having different sizes shapes and properties are to be arranged in one or more storage containers having various properties. Accordingly the process of matching data sets to storage components may be automatically resolved using various best fit techniques. The matchings may be recorded in a storage catalog which may comprise a storage catalog describing the storage set the data sets stored on each storage set and the rationale for choosing such selections. Therefore and according to the techniques presented herein an automated matching of data sets with storage components may be performed to achieve a more suitable physical schema in a more efficient manner than may be selected by a user resulting in improved throughput greater available capacity and or reduced costs. Moreover the selection may be automatically implemented by provisioning storage on each storage component and configuring devices and software processes to use the provisioned storage e.g. automatically configuring network mappings on computers to point to correct volumes . As still further advantages an automated process may be able to identify the storage capabilities of the storage components e.g. identifying the throughput of each storage component through bandwidth testing and to reevaluate the physical schema in view of changes in the data set group and the storage set e.g. identifying changes to the physical schema that may present various improvements in the performance of the storage set and even implementing such changes . Indeed once a user creates a representation of the data factors of the data sets the automated process may be able to handle the entire process of choosing implementing and continuously reevaluating the physical schema thereby achieving significant improvements in the performance of the storage set and at much lower administrative costs.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. Such computer readable media may include e.g. computer readable storage media involving a tangible device such as a memory semiconductor e.g. a semiconductor utilizing static random access memory SRAM dynamic random access memory DRAM and or synchronous dynamic random access memory SDRAM technologies a platter of a hard disk drive a flash memory device or a magnetic or optical disc such as a CD R DVD R or floppy disc encoding a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein. Such computer readable media may also include as a class of technologies that are distinct from computer readable storage media various types of communications media such as a signal that may be propagated through various physical phenomena e.g. an electromagnetic signal a sound wave signal or an optical signal and in various wired scenarios e.g. via an Ethernet or fiber optic cable and or wireless scenarios e.g. a wireless local area network WLAN such as WiFi a personal area network PAN such as Bluetooth or a cellular or radio network and which encodes a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein.

An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of storing a data set in a storage set such as the exemplary method of . In another such embodiment the processor executable instructions may be configured to implement a system for storing a data set in a storage set such as the exemplary method of . Some embodiments of this computer readable medium may comprise a non transitory computer readable storage medium e.g. a hard disk drive an optical disc or a flash memory device that is configured to store processor executable instructions configured in this manner. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary method of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized. As a first variation these techniques may be utilized to store a large variety of data sets including files comprising an operating environment of a computer personal documents media libraries records in one or more database tables and email mailboxes comprising sets of email messages. Additionally such data sets may comprise a wide variety of storage factors selected from a storage factor set such as a data set size factor e.g. the total current or predicted size of the data set a data set type factor e.g. the type of data stored in the data set a data set querying factor e.g. whether or not queries of various types are to be applied to the data set a data set access rate factor e.g. the minimum acceptable access rate of the data set and a data set security factor e.g. the minimum degree and nature of security to be applied to the data set .

As a second variation of this first aspect these techniques may be utilized to store such data sets on a wide variety of storage components e.g. hard disk drives solid state storage systems high performance memory circuits cloud storage services and tape archives . Such storage components may feature various types of file systems e.g. disk file systems and network file systems and or protocols e.g. a File Transfer Protocol FTP Server Message Block SMB Hypertext Transfer Protocol HTTP and Web Based Distributed Authoring and Versioning WebDAV . Such storage components may also comprise database servers configured to store various types of relational and or non relational databases comprising various types of database objects such as records tables relationships and stored procedures and email servers configured to store email messages in email mailboxes. These storage components may also feature various types of storage capabilities selected from a storage capability set including various types of features such as a storage component type factor e.g. the type of the storage component a storage capacity factor e.g. the total available or achievable storage capacity of the storage component a storage access rate factor e.g. the achievable rates of upload and download access and latency to the storage component a storage querying interface factor e.g. whether or not the storage component supports various types of queries and a storage security factor e.g. the degree and details of security of the storage component such as encryption and user authentication. The details of such storage capabilities may include factors other than the device e.g. the storage access rate factor may be limited to the achievable throughput of the network connecting the storage component to an end user and the storage security factor may include social policies such as which individuals of an organization are permitted physical access to the storage component . Those of ordinary skill in the art may devise many types of data sets and storage components to which the techniques presented herein may be applied.

A second aspect that may vary among embodiments of these techniques relates to the manner of identifying the storage capabilities of a particular storage component . As a first variation a user such as an administrator may specify to an embodiment the storage capabilities of the storage component . As a second variation a storage component may indicate to an embodiment the storage capabilities of the storage component . For example the storage component may be able to report its storage capabilities such as a set of supported protocols. As a third variation an embodiment may identify the storage capabilities of a storage component through detection or monitoring. For example an embodiment may perform various throughput tests on a storage component to determine its practical sustainable throughput rate within the computing environment. Alternatively an embodiment may have access to a storage log comprising storage events involving at least one storage component e.g. records of data transfers performed over a network and may be able to evaluate the storage log to identify the storage capabilities of the storage components . Those of ordinary skill in the art may devise many ways of identifying the storage capabilities of various storage components in accordance with the techniques presented herein.

A third aspect that may vary among embodiments of these techniques involves the manner of selecting a storage component to store any particular data set . As a first variation the matching may involve many types of heuristics that compare the storage factors of the data set with the storage capabilities of respective storage components to make a suitable match. As a first example the data set may comprise a first entity that has a relationship with a second entity stored in a second data set e.g. a dependency between software objects a resource embedded in a document or application a data driven software application and a corresponding data set or an interrelationship between relational database tables . An embodiment of these techniques may be able to identify the entity relationship between these entities and may utilize this relationship as a storage factor of the storage set such as a heuristic specifying a storing together of the data sets having the entity relationship on the same storage component . As a second example a data set may have a particular usage mapping such as a set of users or software processes that utilize the data set or an access pattern describing the manner in which the data set may be accessed. The device may therefore utilize this usage mapping as a storage factor of the storage set such as a heuristic specifying a selection of a storage device that not only meets the minimum criteria of the data set but that facilitates the usage mapping e.g. by facilitating the usage mappings. As a third examine a data set may have a particular logical schema. For example the logical schema may define that a data set comprises two or more data set components such as a file system having subsets of files hierarchically organized into folders or a database comprising a set of tables. The device may therefore utilize this logical schema as a storage factor of the storage set such as a heuristic specifying that a first storage component is to be stored on a first storage component while a second storage component is to be stored on a second storage component that is different from the first storage component.

As a second variation of this third aspect rather than choosing storage components on an ad hoc basis for each data set an embodiment may holistically evaluate the data set group and the storage set in order to identify a physical schema . As one such example the embodiment may invoke a best fit selection heuristic to choose the physical schema . For example the best fit selection heuristic may first select storage components for the data sets having large or specialized storage factors e.g. very large data sets data sets involving high concurrency or having usage mappings involving high access rates or highly sensitive data sets and may then select storage components for the data sets having smaller and more generalized storage factors e.g. small data sets that are accessed in general ways and that may be placed anywhere . Those of ordinary skill in the art may devise many ways of selecting storage components for data sets in accordance with the techniques presented herein.

A fourth aspect that may vary among embodiments of these techniques involves the manner of implementing a physical schema selected for a data set group and a storage set . As a first variation an embodiment may automatically implement the physical schema e.g. by automatically provisioning storage on the storage components for assigned data sets and automatically configuring devices and software processes to utilize the provisioned storage component . Alternatively the embodiment may inform one or more users e.g. administrators of the physical schema e.g. by providing the storage catalog to the user and possibly with instructions for implementing the physical schema on the storage components .

As a second variation an embodiment of these techniques may participate in the implementation e.g. by persistently connecting data consumers e.g. data driven applications to data components wherein the data sets are stored. As a first such example an embodiment may store different data set components of a data set on different storage components or may store two data sets having a relationship on two different storage components . When a user or application presents a request such as a query specifying the data set the embodiment may represent the data set as a unified data set e.g. by contacting the first storage component and the second storage component accessing the data set stored on each storage component e.g. retrieving a first data subset from the first storage component and a second data subset from the second storage component and aggregating the responses or data to present the user or application with a combined result set e.g. a single query response or a single data set . Those of ordinary skill in the art may devise many ways of involving an embodiment in these techniques in the implementation of the automatically selected physical schema in accordance with the techniques presented herein.

A fifth aspect that may vary among embodiments of these techniques involves the updating of the storage catalog to reflect changes in the data set group and or the storage set . As a first example upon receiving a notification of an added storage component an embodiment may detect at least one storage capability of the added storage component and may represent the added storage component in the storage catalog . Conversely upon receiving a notification of a removed storage component an embodiment may remove the removed storage component from the storage catalog optionally relocating any data sets stored therein to other storage components .

As a second variation of this fifth aspect an embodiment may occasionally reevaluate the storage catalog to identify potential improvements. For example after storing a data set on a storage component an embodiment may compare the storage capabilities of the selected storage component for storing the data set with the storage capabilities of other storage components of the storage set and upon identifying a second storage component having storage capabilities having a higher match with the storage factors of the data set than the storage capabilities of the selected storage component may relocate the data set to the second storage component and update the storage catalog to associate the data set with the second storage component . This reevaluation may be performed occasionally e.g. periodically or upon detecting a change to the data set group and or the storage set in order to identify potential improvements therein that may improve the available capacities or performance of the storage set . Those of ordinary skill in the art may devise many ways of configuring an embodiment of these techniques to update the data catalog in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

