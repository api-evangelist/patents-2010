---

title: Multi-machine atomic seamless migration
abstract: A technique migrates data from source arrays to target arrays. The array devices operate in either active mode, passive mode, or stalled-active mode. The technique involves providing active-to-passive instructions to transition the source devices from active to passive while a host initially accesses host data from the source arrays using MPIO software (the target devices being in stalled-active mode), and monitoring whether the source devices successfully transition to passive during a predefined time period. If so, the technique involves operating the target devices in active mode and transferring data from the source devices to the target devices to enable the host to access the host data from the target arrays using the MPIO software. However, if a source device remains passive, the technique involves providing passive-to-active instructions to transition the source devices back to active to enable the host to access the host data from the source arrays.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370592&OS=08370592&RS=08370592
owner: EMC Corporation
number: 08370592
owner_city: Hopkinton
owner_country: US
publication_date: 20100330
---
Multipath I O MPIO is a feature which provides a host with the ability to utilize multiple physical paths to a data storage array. In particular if the host is unable to perform an I O operation on the data storage array through one physical path the host is able to retry the I O operation on that array through another physical path. PowerPath which is offered by EMC Corporation of Hopkinton Mass. is an example of a multipathing software product.

After a data storage array has been in use for a period of time the owner of the array may wish to replace that original array with a newer array i.e. to migrate from the original array to a replacement array perhaps with more capacity faster processors newer components additional features etc. Open Replicator for Symmetrix ORS which is offered by EMC Corporation is an example of a software product which facilitates creation of point in time copies of data to enable effective data migration from an original array to a replacement array while a host maintains online access to host data i.e. online data migration. Another example is Symmetrix Remote Data Facility SRDF which is also offered by EMC Corporation. There are other replication software products available as well.

One conventional approach to online data migration involves making the replacement array available to a host even though some or all of the host data may have not yet been transferred to the replacement array from the original array. That is the replacement array starts copying the host data from the original array i.e. a background copy task but behaves to the host as if all of the host data already resides on the replacement array. Along these lines if the replacement array receives a host I O request for particular host data that has not yet been copied from the original array the replacement array immediately copies that host data in response to the I O request i.e. a copy on demand operation. Once the replacement array receives the requested host data from the original array the replacement array provides that host data to the host as well as stores that host data thereafter. This process of hot pulling host data from the original array in response to host I O requests can continue in conjunction with standard background data copying until all of the host data has been copied from the original array to the replacement array.

Some data migration endeavors may impose special requirements. For example suppose that a database owner stores a first portion of a particular database or a first consistency group on a first original array and a second portion of the database or a second consistency group on a second original array. Further suppose that the database owner wishes to migrate the first database portion from the first original array to a first new array and the second database portion from the second original array to a second new array.

One migration approach is simple online migration in which the owner transfers the first and second database portions from the original arrays to the respective new arrays while a host maintains access to the database. In this approach the owner independently performs i a first migration operation which transfers the first database portion from the first original array to the first new array and ii a second migration operation which transfers the second database portion from the second original array to the second new array.

Since it is possible that one migration operation will successfully complete while the other migration operation encounters a problem and does not successfully complete there may be risks associated with the simple online migration approach. For example if the database is to remain accessible to the host during migration it may critical for the owner to perform the first and second migration operations substantially simultaneously e.g. within a minute within two minutes etc. due to complexities of the particular database. Nevertheless in this simple online migration approach it is possible for only one migration operation to complete so that the host has online access to one new array while the other migration operation fails leaving the host with online access to the original array. Such a partial migration outcome could present significant problems to the database owner e.g. database performance or corruption issues . As a result the database owner may view this as an unacceptable potential situation and choose against applying the simple online migration approach.

Another migration approach is offline migration in which the database owner migrates the database portions from the original arrays to the respective new arrays while the arrays are offline to the hosts. In this approach the database owner prohibits hosts from accessing the database while the owner performs both migration operations. Since the data is static i.e. the host cannot change the data since the arrays are offline to it it is unnecessary to perform the migration operations simultaneously. Accordingly the offline migration approach offers greater safety but at the very high cost of bringing the database offline during migration.

In contrast to the above described approaches to data migration improved techniques provide multi machine atomic seamless migration. In particular data migration from multiple source arrays to multiple target arrays occurs while a host runs multipath I O MPIO software to maintain online access to host data. Due to smart management of the source and target arrays the migration process is performed as an atomic operation in the sense that the process completes with either i all target arrays providing the host data or ii all source arrays providing the host data due to failing back to all of the source arrays in the event that a failure occurs during the migration process. That is if at least one storage device of the multiple source arrays fails to transition from active mode to passive mode as will be explained later as part of the migration process the migration process stops and the storage devices of the multiple source arrays transition back to active mode to enable the host to maintain online access to the host data via the multiple source arrays. However if all of the source arrays properly transition from active mode to passive mode the host can immediately access the host data via the multiple target arrays. Thus the improved techniques are able to prevent host data access in a situation in which one source array successfully completes migration to a target array while another source array fails to complete migration to another target array.

One embodiment is directed to a method of migrating data from multiple source arrays to multiple target arrays. The storage devices of the arrays operate in either active mode or passive mode. The method includes providing active to passive instructions e.g. small computer system interface or SCSI commands to the multiple source arrays to transition the source devices from active to passive while a host initially accesses host data from the source arrays using MPIO software and monitoring whether the source devices successfully transition to passive during a predefined time period. If so the method includes operating the target devices in active mode and transferring data from the source devices to the target devices to enable the host to access the host data from the target arrays using the MPIO software. However if at least one source device has not transitioned to passive the method includes providing passive to active instructions to the multiple source arrays to transition the source devices back to active to enable the host to access the host data from the source arrays using the MPIO software.

Some embodiments are directed to a migration control server which communicates directly with the target arrays and indirectly with the source arrays through the target arrays to carry out a multi machine atomic seamless migration technique. In some arrangements communications from the migration control server to the target arrays are in the form of system calls and SCSI commands. Furthermore communications from the migration control server to the source arrays through the target arrays are in the form of system calls i.e. a target array performs a short task which includes providing one or more SCSI commands to a source array in response to a system call .

Additionally some embodiments are directed to a computer program product including a computer readable storage medium storing instructions which cause a computer to operate as the migration control server to carry out a multi machine atomic seamless migration technique. In some arrangements the instructions are compiled and linked executable code. In other arrangements the instructions are scripts or rules which are dynamically translated and then performed by the computer.

Furthermore some embodiments are directed to a data storage array which operates as one of the target arrays. Here the data storage array is equipped to receive control signals from a migration control server and participate in a multi machine atomic seamless migration process based on the control signals commands.

Also some embodiments are directed to a computer program product including a computer readable storage medium storing instructions which cause a data storage array to operate as a target array to carry out a multi machine atomic seamless migration process based on control from the migration control server. In some arrangements the instructions are compiled and linked executable code. In other arrangements the instructions are scripts or rules which are dynamically translated and then performed by the target array.

An improved technique provides multi machine atomic seamless migration. Along these lines data migration from multiple source arrays to multiple target arrays occurs while one or more hosts run multipath I O MPIO software to maintain online access to host data. With smart management of the source and target arrays the migration process is atomic in that the process completes with either i all target arrays providing the host data or ii all source arrays providing the host data due to failing back to the source arrays . For example if at least one storage device of the source arrays fails to transition from active mode to passive mode as part of the migration process the migration process stops and the storage devices of the source arrays transition back to the active mode to enable each host to maintain online access to the host data via the source arrays. On the other hand if all of the source arrays properly transition from the active mode to the passive mode each host can immediately access the host data via the target arrays. As a result the improved technique prevents an outcome in which the hosts have access to host data from both a target array and a source array.

The communications medium is constructed and arranged to convey electronic signals between the various components of the computerized environment . Along these lines the communications medium may implement a variety of protocols such as small computer system interface SCSI Fibre Channel FICON TCP IP Ethernet combinations thereof and the like. Furthermore at least part of the communications medium is illustrated as a network cloud since the communications medium i may include various additional components e.g. cables switches gateways bridges other SAN NAS communications devices and interfaces etc. and ii is capable of having a variety of topologies e.g. switched fabric hub and spoke ring backbone multi drop point to point irregular combinations thereof etc. .

Each host e.g. see host includes computerized circuitry e.g. a set of processors memory host bus adaptors etc. which is constructed and arranged to perform host input output I O operations on the arrays . To this end each host is equipped with a variety of software constructs see host including an operating system multipath I O software and other applications e.g. a database application .

Furthermore each source array includes source array processing circuitry and source storage devices i.e. source devices which initially store host data which is accessed by the hosts . For example the source array includes source array processing circuitry and source devices . Additionally the source array includes source array processing circuitry and source devices and so on. For illustration purposes only the host data is shown in as a block exchanged between a host and the source array . It should be understood that the host data initially resides in a distributed manner across the source devices of all of the source arrays .

Similarly each target array includes target array processing circuitry and target storage devices i.e. target devices . For example the target array includes target array processing circuitry and target devices . Furthermore the target array includes target array processing circuitry and target devices and so on.

In some arrangements the processing circuitry of one or more of the arrays includes front end adaptors FAs a cache e.g. global memory and disk adaptors DAs . In these arrangements the FAs which are sometimes referred to as front end directors or host adaptors operate as interfaces between the hosts and the cache. Similarly the DAs which are sometimes referred to as back end directors or disk controllers operate as interfaces between the cache and the storage devices . For these arrangements appropriately configured Symmetrix storage systems which are provided by EMC Corporation of Hopkinton Mass. are suitable for use as one or more of the data storage arrays .

As shown in multiple physical links e.g. four physical links lead to each array . In particular multiple physical links A lead to multiple FA ports of the source array and multiple physical links B lead to multiple FA ports of the source array . Similarly multiple physical links C lead to multiple FA ports of the target array and multiple physical links D lead to multiple FA ports of the source array .

Each array is equipped with an array identification number i.e. an array ID . Additionally within each array each FA port has a FA port identification number i.e. a FA port number . The hosts coordinate their access to the various arrays and their storage devices using uniquely named logical pathnames or channels i.e. unique combinations of array IDs and FA port numbers.

Each host routinely updates its view of what logical pathnames and data storage resources are currently available in the environment . Accordingly each host stores and manages similar logical pathname information for the source array as well. However at least initially the target arrays are not online and thus are not yet visible to the hosts .

In connection with the storage devices of the arrays it should be understood that in some arrangements the storage devices are physical devices. Such physical devices may include non volatile memory storage units such as magnetic disk drives flash memory drives and so on.

However in other arrangements the storage devices are not physical device but are logical devices which correspond to identifiable actual physical storage within the arrays . Examples of suitable logical devices are logical units or volumes . Each logical unit is identifiable by a logical unit number LUN and corresponds to specific storage such as a portion of a physical device a particular physical device multiple physical devices portions or stripes across multiple physical devices multiple logical devices and so on.

The processing circuitry of the arrays is constructed and arranged to present to the hosts each storage device as operating in either an active mode or a passive mode. In active mode a storage device is able to perform host read write I O operations e.g. SCSI read or write operations to access host data in response to host read write I O requests as well as host control operations e.g. respond to inquiry and mode sense SCSI commands from the hosts .

In passive mode a storage device is only able to perform host control operations e.g. inquiry mode sense read capacity etc. . If a storage device receives a host read write I O request while in passive mode that storage device immediately responds with an error message e.g. responds with a check condition status code and does not perform the requested read write I O operation.

Additionally the processing circuitry of the target arrays is constructed and arranged to provide a stalled active behavior to be further explained shortly for the storage devices of the target arrays in which the hosts perceive the target devices as being in active mode. Accordingly the hosts continue to operate as if the target devices are able to properly perform host read write I O operations in response to host read write I O requests.

In particular when the processing circuitry of the target arrays operate the target devices of the target arrays in stalled active mode the hosts are able to send control requests e.g. inquiry and mode sense SCSI commands to the target devices and immediately receive back status responses from the target devices and the processing circuitry e.g. a success status code perhaps with additional status information .

However if a host sends a host read write I O request to a target device while the target device is in the stalled active mode the host does not immediately receive back a response. Rather the processing circuitry delays or stalls for up to a predefined time limit e.g. 20 seconds . Such stalling provides time for certain under the hood operations to complete but still preserves the hosts view of the target device being in active mode i.e. the hosts do not see the target devices reject read or write commands. Such under the hood operations may include waiting for the source devices of the source arrays to transition from the active mode to the passive mode and subsequently for the target devices of the target arrays to transition from the passive mode to the active mode. Although the host does not receive a subsequent I O related message e.g. a data frame a transfer ready frame etc. from the target devices the simple but delayed response from the target devices in stalled active mode enables the hosts to maintain normal and smooth operation.

Accordingly operating the target devices in stalled active mode while the source devices are transitioning from active mode to passive mode is useful since it prevents a situation in which both source devices and corresponding target devices are simultaneously in passive mode. In some arrangements the processing circuitry simply sends back an acceptable status response at the end of the predefined time limit e.g. a task aborted status code which may cause the requesting host to retry the host I O operation . In other arrangements if the under the hood operation completes and leaves enough time for the processing circuitry to carry out the host I O operation the processing circuitry transitions the target device from stalled active mode to active mode completes the I O operation on the target device and then sends an acceptable status response before the host I O request times out i.e. a timeout would signal that there is a problem .

Prior to migration and as shown in the hosts are able to perform I O operations on the source arrays through the communications medium e.g. see the dashed lines within the cloud . Here each source storage device of the source arrays is initially in the active mode. Along these lines each host runs the MPIO software which is appropriately configured i.e. established switch zones established logical pathnames etc. to robustly and reliably enable the host applications to access the host data distributed across the source arrays .

For example the applications running on the hosts may include a database application and portions of the database initially may be distributed across multiple machines. In particular one portion of the database initially may reside in the source array while another portion of the database initially resides in the source array .

While the hosts have online access to the source arrays the migration control server is capable of communicating with various components of the computerized environment through the communications medium i.e. see the arrow in . For example the migration control server can communicate directly with the target arrays using system calls. Here it is assumed that the target arrays are contemporary machines which are constructed and arranged to receive and implement configuration instructions from the migration control server as well as properly respond to such instructions e.g. to provide operational status of the individual target devices .

Additionally the target arrays and the source arrays are constructed and arranged to communicate with each other directly through the communications medium . Along these lines the target arrays are able to exchange data with the source arrays directly and to provide control instructions to the source arrays . For example the target arrays are able to provide standard SCSI commands to the source arrays as well as receive standard SCSI responses e.g. SCSI status codes from the source arrays . Accordingly it is not necessary that the migration control server be able to communicate directly with the source arrays although such a situation may be possible.

Rather if the source arrays are not equipped to handle system calls from the migration control server directly the migration control server is able to control the source arrays via system calls and or SCSI commands to the target arrays . In turn target arrays send standard commands and or vendor unique commands to the source arrays i.e. command tunneling . Similarly the migration control server can receive status from the source arrays by configuring the target arrays to relay status that the target arrays obtain from the source arrays perhaps with additional information as the source arrays respond to the standard commands from the target arrays .

As will now be explained in further detail the migration process will result in successful data migration to all target arrays or fail back to all source arrays . Due to this atomic migration behavior while the hosts maintain online access to the host data the hosts perceive the migration process as a multi machine atomic seamless migration operation. In particular such operation avoids a potential data performance issue in which a host would otherwise obtain direct online access to a target array and a source array.

As mentioned above in some arrangements the migration control server communicates directly with the target arrays and indirectly with the source arrays through the target arrays i.e. command tunneling . Such arrangements alleviate the potential need for the source arrays to be fully compliant with any contemporary protocols or application programming interfaces APIs that are currently utilized by the migration control server e.g. the source arrays may be legacy equipment or may be running legacy software .

Initially as illustrated in step the migration control server establishes communications with the source and target arrays and gathers information from both arrays e.g. queries the arrays for configuration information and status . In particular the migration control server builds a list of storage device entries to monitor and coordinate the operation of the storage devices . Along these lines the migration control server learns the array IDs the FA port numbers and the device IDs as well as other configuration information from the source arrays e.g. indirectly via command tunneling through the target arrays using inquiry and mode sense SCSI commands among others. This initial data gathering task may be performed by the migration control server in an automated manner e.g. an automatic discovery routine. Alternatively the task may be performed manually by a user of the migration control server .

It should be understood that the migration control server is constructed and arranged to treat all of the source devices of all of the source arrays as belonging to a stretched consistency group. That is the migration control server manages a set of consistency group rules and views the source devices of the source arrays as one consistency group even through the source devices are distributed across multiple machines i.e. multiple source arrays . Accordingly the migration control server will now work to switch host access to all of the target devices of all of the target arrays or fail back to all of the source devices of all of the source arrays in an atomic manner. As a result an outcome of a host being able to access host data directly from a target array and a source array is avoided.

During step the migration control server allows the hosts to continue to enjoy robust and reliable communication with the source arrays using the MPIO software also see dashed lines in . Along these lines the source arrays operate the source devices in active mode and provide the hosts with highly available access to the host data through multiple established logical pathnames i.e. identified by array IDs and FA port numbers for fault tolerant redundancy also see the established logical pathname information for the source array in .

At this initial point the target arrays may be powered up. However the target arrays are awaiting configuration in the sense that they may not yet be equipped with array IDs and FA port numbers. Moreover although the host data is distributed across the source devices of the source arrays no host data currently resides on the target devices of the target arrays . Accordingly all of the FA ports of the target arrays are offline to prevent the hosts from having any access to the target devices .

In step the migration control server readies the target arrays to replace the source arrays . That is the migration control server confirms that the target array is at least as well provisioned as the source array . In particular the migration control server verifies that there are at least as many target devices in the target array as there are source devices in the source array and that the respective storage capacities of the target devices are at least as great as the storage capacities of the source devices . Similarly the migration control server confirms that the target array is at least as well provisioned as the source array .

Additionally in step the migration control server performs a spoofing configuration task. In particular the migration control server configures the target array to use the same array ID as the source array . Similarly migration control server configures the target array to use the same array ID as the source array and so on. However the migration control server purposely configures the FA port numbers of the target arrays to use different FA port numbers than those used by the corresponding source array .

Furthermore the migration control server configures the target devices of the target array with the same device IDs as the source devices of the source array e.g. by referencing and updating its managed list of storage devices . Likewise the migration control server configures the target devices of the target array with the same device IDs as the source devices of the source array and so on. As a result the device IDs of the source devices and the target devices are now the same.

These ID matching tasks are referred to as spoofing since these tasks will enable the hosts to concurrently communicate with source arrays and target arrays . For example the hosts will view the source array and the target array simply as a single augmented array offering many logical pathnames some of which may only be available in passive mode. Since each logical pathname is a combination of an array ID and a FA port number it should be understood that the FA port numbers used by the target arrays are different than the FA port numbers used by the source arrays to maintain uniqueness among the logical pathnames . As will be explained in further detail shortly such spoofing enables the hosts to smoothly transition their access from the source devices to the target devices in a seamless manner.

The migration control server confirms that the target devices of the target arrays are initially in passive mode. If not the migration control server has the capability of transitioning the target devices to passive mode.

In step the migration control server puts all of the target devices in passive mode and brings the FA ports of the target arrays online. The migration control server then exposes the target devices to the hosts . In response MPIO software running on the hosts establishes new logical pathnames to the target arrays . Preferably the migration control server introduces the FA ports of the target arrays and the target devices to the hosts incrementally or in small groupings. As a result the hosts discover and establish the new logical pathnames to the target devices gradually so that performance of the hosts and the MPIO software running on the hosts is not disrupted.

Other logical pathname information is added to the hosts views as the other target array FA ports are brought online. As a result of step the hosts now have updated views of all eight logical pathnames relating to the source and target arrays as well similar information for other source and target arrays e.g. for the source and target arrays .

Following step the migration control server can optionally communicate with the hosts to confirm that the hosts have properly created logical pathnames for the target devices . For example the migration control server can direct each host to perform inquiry and mode sense SCSI commands with the target arrays to verify that the hosts can see and perform control operations on the target devices which are in passive mode. However if a host sends a read write I O request to any of the target arrays the host receives a failure response e.g. a check condition status code perhaps causing the host to retry the I O operation down a different path leading to a source array .

The source and target arrays are now ready to enter an atomic switchover portion of the migration process in which either all of the source arrays directly provide access to the host data or all of the target arrays directly provide access to the host data . Up to this point the hosts have maintained access to the host data from the source arrays . That is all of the source devices are currently in active mode in parallel. In contrast the target devices of the target arrays can now communicate with the hosts e.g. the target devices offer the same pre presentation as the source devices but the target devices are currently in passive mode and do not have the host data . Preferably the switchover portion of the process is conducted during a period of relatively low activity e.g. at a time of the day or week where there is only light or low traffic from the hosts .

With reference back to the migration procedure in step the migration control server receives a switchover command from the user and in response starts a timer and provides migration instructions for all of the storage devices in the stretched consistency group also see . In particular the switchover command triggers the migration control server to instruct all of the target arrays to transition their target devices from passive mode to the stalled active mode and then all of the source arrays to transition their source devices from active mode to passive mode.

The timer is constructed and arranged to expire after a predefined amount of time passes e.g. 15 seconds . That is the timer defines a time window for all of the source devices to transition from active mode to passive mode. Since it may be desirable for to migrate from the source arrays to the target arrays within one I O cycle the amount of time within this time window is preferably set to be below the maximum amount of time allowed to complete a host I O operation so that the hosts lose at the most one I O cycle. Along these lines if the maximum amount of time for a host I O operation to complete is 30 seconds before timing out a time window of 15 seconds is well suited for enabling the source devices to become passive and the target devices to become active.

In some arrangements the migration control server sends system calls to the target arrays . In response to a particular system call each target array i transitions a particular target device to become stalled active and ii subsequently sends an active to passive instruction to a corresponding source array directing a particular source device to become passive i.e. command tunneling . Accordingly the target device transitions from passive mode to the stalled active mode before the corresponding source device transitions from active mode to passive mode. The active to passive instruction may be a vendor unique SCSI command that the source array is capable of handling even if the source array is legacy equipment.

In other arrangements the migration control server sends i separate active to passive instructions e.g. vendor unique SCSI commands one at a time to the source arrays to individually transition each source device from active mode to passive mode and ii additional transition instructions to the target arrays to transition each target device from passive mode to stalled active mode. Each active to passive instruction to a source device receives a response indicating whether the transition was or was not successful. Similarly each transition instruction to a target device receives a response indicating whether the transition was or was not successful.

It should be understood that a source device on a source array is unable to perform further host read write I O operations once it transitions from active mode to passive mode. In particular the corresponding source array blocks any new host read write I O requests as well as any new reservations to the particular source device . Along these lines if a host sends a read write I O request to a source device which is now in passive mode the host will receive an error response e.g. check condition status and will likely resend the same read write I O request down a different path perhaps leading to a target array i.e. the host retries the I O request .

Similarly the target array provides a stalled active behavior for any new host I O requests to the particular target device . Along these lines if a host sends an I O request to a target device which is now in stalled active mode the response to the host is delayed up to a predefined amount of time. Eventually the host receives an acceptable response from the target device e.g. command aborted status and will likely retry the same I O request perhaps at a time in which the target device is available in active mode.

In step the migration control server checks to see whether all of the source devices properly transitioned from active mode to passive mode. Here the migration control server polls the source devices individually either directly or indirectly through the target arrays i.e. command tunneling . The migration control server may also poll the target arrays for transition status of the target devices .

In some arrangements the migration control server waits until the timer expires and then checks to see if there is still at least one source device remaining in active mode. In other arrangements the migration control server updates a locally managed list of storage devices of the arrays and as soon as the migration control server detects that all of the source devices are in passive mode the migration control server proceeds further even if the timer has not yet expired. If all of the source devices of the source arrays transition from active mode to passive mode within the predefined amount of time step proceeds to step . However if there is at least one source device which failed to transition from active mode to passive mode and if the timer has now expired step proceeds to step .

In step since all of the source devices of the source arrays are now in passive mode the migration control server instructs the target arrays to transition their target devices from stalled active mode to active mode in parallel i.e. for the entire stretched consistency group . In some arrangements the migration control server sends separate transition instructions e.g. vendor unique SCSI commands to the target arrays to individually transition each target device from stalled active mode to active mode. Each transition instruction receives a response indicating whether the transition was or was not successful.

Additionally in step the migration control server instructs the arrays to begin background data copying and hot pulling operations as necessary. Furthermore the migration control server instructs the target arrays to perform donor updates as necessary in order to keep the data on the source arrays fully updated i.e. the source arrays maintain a fully updated copy of the host data at all times.

Also as part of step the migration control server directs the target arrays to start background data copying. In response the target arrays perform host I O operations as higher priority tasks and begin copying the host data from the source devices to the target devices as lower priority background tasks until all of the data is copied from the source arrays to the target arrays . If a target array does not have the host data identified by a particular host I O request the target array performs a copy on demand operation from the appropriate source device i.e. the target array hot pulls the particular host data from the appropriate source array and provides that host data to the host in response to the I O request as if the host data had already resided on the target array . The target array is then able to save the hot pulled host data locally thus alleviating the need to re copy the host data from the source array at a later time. Once the target arrays have copied all of the data from the source arrays step then proceeds to step .

It should be understood that some of the host I O operations performed by the target arrays may be write operations in which existing host data is updated e.g. read modify write or new host data is written to the target devices . While performing these write operations the target arrays concurrently provide donor update instructions to the source arrays which direct the source arrays to perform the same write operations while the source devices are in passive mode. That is although the source devices are technically in the passive mode with respect to I O requests directly from the hosts the source devices are still configured to process I O requests from the target arrays i.e. the donor update instructions. A target array preferably does not acknowledge to a host that a write operation has successfully completed until it receives a confirmation that the donor update instruction to the corresponding source array has been completed as well.

Since the source arrays have an up to date version of all of the host data as a result of the donor update operations if there is a failure during the migration process the hosts will be able to regain access the host data from the source arrays . For example if communications to the target arrays is lost the source arrays are equipped to offer a complete up to date version of the host data . Accordingly no host data is lost regardless of the outcome.

In step since at least one of the source device remains in active mode the migration control server does not switchover any host access from the source arrays to the target arrays . Rather the migration control server provides an atomic behavior by failing back to the source arrays for host access. That is the migration control server instructs the source arrays to transition their source devices from passive mode back to active mode e.g. by sending vendor unique SCSI commands to the source arrays and instructs the target arrays to transition the target devices from stalled active mode to passive mode.

In some arrangements the migration control server sends separate passive to active instructions e.g. vendor unique SCSI commands to the source arrays through the target arrays to individually transition each source device from passive mode back to active mode. Each passive to active instruction receives a response indicating whether the transition was or was not successful. Once all of the source devices have transitioned back to active mode step proceeds to step .

In step the migration control server provides the results of the migration process to a user. If the migration process is successful the hosts are now able to access the host data from the target arrays . However if the migration process is unsuccessful the host are still able to access the host data from the source arrays and the user will be able to identify which source devices were unable to properly transition and then re attempt the migration.

If the migration process is successful the target devices of the stretched consistency group are now available via the target arrays i.e. data has now fully migrated from the source devices of the source arrays to the target devices of the target arrays . At this time the user may then perform some additional housekeeping i.e. cleanup tasks to remove switch zones and logical pathnames which are no longer in use. For example once the data is fully migrated from the source arrays to the target arrays the original logical pathname information can be removed from the hosts .

If the migration process is unsuccessful the user may assess what source devices failed to transition to passive mode from the migration results and attend to remedying the situation. The user is then able to re perform the migration process using the migration control server .

Since the switchover portion of the migration process was handled atomically i.e. either the hosts access all of the target arrays or all of the source arrays there is no opportunity for a host to concurrently have online read write access to a source array and online read write access to a target array . Accordingly the multi machine online seamless migration process avoids a partial migration outcome which could otherwise present significant problems e.g. database corruption issues .

As shown in the migration control server includes an interface a controller and memory . The interface includes circuitry e.g. a network interface card which enables the migration control server to connect to the communications medium also see and communicate with external devices through the communications medium . Additionally the interface includes circuitry e.g. a keyboard a mouse a display etc. which enables the migration control server to receive input from a user and provide information back to the user.

The controller is formed by processing circuitry e.g. a microprocessor a set of processor modules etc. and is constructed and arranged to provide central control over the migration process. Such control is based on user input provided through the interface . Along these lines the controller is configured to perform the procedure also see and and preferably includes a variety of control mechanisms which are utilized during the migration process such as the timer for measuring the predefined amount of time within which the source devices are to transition from the active mode to the passive mode also see step in .

The memory stores a variety of memory constructs which are executable and or accessible by the controller . In particular the memory includes an operating system a migration application and migration process data . The operating system allows the migration control server to make efficient use of various resources e.g. compute cycles memory etc. . The migration application runs the migration process. The migration process data among other things enables the migration application to direct and monitor various operation details during the migration process.

It should be understood that one or more of the memory constructs e.g. the migration application is capable of being delivered to and installed on the migration control server from a computer program product illustrated generally by a diskette icon . Such a computer program product includes a computer readable storage medium which stores in a non volatile manner information that is utilized by the controller . Examples of suitable computer readable storage media include CD ROM magnetic disk or tape cartridges flash memory disk memory and the like.

The list includes entries which correspond to the storage devices of the arrays also see . Each entry includes a device identifier field an array identifier field a mode status field and other fields . The contents of the device identifier field of each entry uniquely identifies a particular storage device corresponding to that entry . The contents of the array identifier field identifies an array location i.e. which array of the identified storage device . The contents of the mode status field identifies the mode status of the identified storage device e.g. active passive stalled active offline failed etc. . The other fields contain other control status information associated with the identified storage device such as the device s serial number type capacity zone consistency group RAID group and so on.

Along these lines entry s corresponds to a storage device of an array s e.g. the source array entry s corresponds to another storage device of the array s and so on. Similarly entry s corresponds to a storage device of an array s e.g. the source array entry s corresponds to another storage device of the array s and so on. Likewise entry t corresponds to a storage device of a target array t e.g. the target array and entry t corresponds to a storage device of another target array t e.g. the target arrays etc.

It should be understood that the controller is able to update the mode status fields of the source device entries as it sends instructions e.g. system calls which result in vendor unique SCSI commands to the source arrays to individually transition each source device from the active mode to the passive mode and receives back responses step . In particular each response indicates whether the transition was or was not successful. Additionally the controller routinely polls the source devices for updated mode status e.g. via command tunneling through the target arrays . For example the controller has determined that storage device s  of the source array s is in the passive mode see entry s of the list . In this manner the controller is able to monitor progress and determine when all of the source devices have transitioned to from the active mode to the passive mode.

Similarly the controller updates the mode status fields of the target device entries . As a result the controller maintains a comprehensive view of the various storage devices involved in the migration process.

As described above improved techniques provide multi machine atomic seamless migration. In particular data migration from multiple source arrays to multiple target arrays occurs while hosts run MPIO software to maintain online access to host data . Due to smart management of the source and target arrays the migration process is performed as an atomic operation in the sense that it is possible to fail back to all of the source arrays in the event that a failure occurs during the migration process. That is if at least one storage device of the multiple source arrays fails to transition from active mode to passive mode as part of the migration process the migration process stops and the storage devices of the multiple source arrays transition back to the active mode to enable the hosts to maintain online access to the host data via the multiple source arrays . However if all of the source arrays properly transition from the active mode to the passive mode the hosts can immediately access the host data via the multiple target arrays . Therefore the improved techniques are able to prevent a situation in which one source array successfully completes migration to a target array while another source array fails to complete migration to another target array.

While various embodiments of the invention have been particularly shown and described it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims.

For example it should be understood that the migration process was described above as migrating multiple source arrays to multiple target arrays . The migration process is also well suited for data migration involving consolidation of multiple arrays. In particular the same migration process can be applied to migrate at least two source arrays to a single target array e.g. at least two source arrays to one target array three source arrays to two target arrays etc. . In this situation the number of target devices on the target array is at least as large as the total number of source devices on the corresponding multiple source arrays .

Additionally it should be understood that modifications and enhancements can be made to the computerized environment also see . For example any of the hosts can be modified to operate as the migration control server . Similarly the migration control server can be modified to operate as a host .

Furthermore it should be understood that the hosts may operate as a cluster of nodes to achieve a common overall body of work. Alternatively the hosts may perform different specialized operations. Moreover in addition to accessing the arrays the hosts may perform other operations including backup mirroring and or an administrative operations.

Additionally it should be understood that the communication medium may be a network connection bus and or other type of data link such as a hardwire or other connections known in the art. For example the communication medium may be the Internet an intranet network or other connection s by which the host and the migration control server may access and communicate with the data storage arrays .

Moreover the processing circuitry included in the hosts and the migration control server may be any one of a variety of commercially available single or multi processor systems such as an Intel based processor or other type of commercially available processor able to support each particular embodiment and application.

Furthermore it should be understood that the failback operation between the arrays can be overridden. For example the operator of the arrays may decide that it is acceptable if one or more of the source devices fails to transition from active to passive. In some arrangements the arrays offer an override parameter or an override threshold to enable the operator to identify the amount of failure that is tolerable before failback occurs. For a failed source device if the migration process is allowed to complete and the operator can manually complete the migration process for the failed source device .

It should be noted that the particulars of the hardware and software included in each of the hosts and the migration control server as well as those components that may be included in the data storage arrays may vary with each particular embodiment and within an embodiment. Along these lines the hosts and the migration control server may be located at the same physical site or alternatively may also be located in different physical locations. Furthermore different portions of the communication medium may vary in data format and communications technique e.g. Connectrix or other Fibre Channel switching equipment Ethernet phone line repeaters a multiplexers satellite etc. Such modifications and enhancements are intended to belong to various embodiments.

