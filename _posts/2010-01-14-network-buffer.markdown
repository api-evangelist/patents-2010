---

title: Network buffer
abstract: Systems, methods, and other embodiments associated with generating a network buffer are provided. A network data model is input that includes a set of network elements, such as nodes and links, and respective costs associated with respective network elements. A center network element around which to generate the network buffer and an offset cost to define a boundary of the network buffer are also input. A network buffer is generated by determining a buffer coverage and cost. The network buffer is made up of a set of buffer network elements located within the offset cost with respect to the center network element. The cost for each buffer network element is determined as the cost associated with travelling a path with minimum cost from the center network element to the corresponding buffer network element. The buffer coverage and costs are output for subsequent analysis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08605608&OS=08605608&RS=08605608
owner: Oracle International Corporation
number: 08605608
owner_city: Redwood Shores
owner_country: US
publication_date: 20100114
---
Many applications in Geographic Information Systems GIS Social Sciences and Life Sciences are modeled as networks. A common analysis performed on network models is to generate a buffer representing a region that is equi distant to certain network elements. Many approaches have been implemented on geographic data to generate geographic buffers around certain geographic features. These approaches typically represent a buffer as a circle or polygon that describes a region around a given geographic feature based on spatial proximity to the geographic feature. In network applications objects of interest have constrained motion that is they can only traverse along nodes and links of the network. For these applications spatial representation may not accurately represent the buffer zone in terms of network distance often associated with the concept of cost with respect to the geographic feature.

In many applications including the Oracle Network Data Model ONDM objects and capabilities are modeled as nodes and links in a network. The network model contains logical information such as connectivity relationships among nodes directions of links and costs associated with nodes and links. With this logical network information the user can analyze a network and answer questions many of them related to path computing and tracing. For example for a biochemical pathway the user can find all possible reaction paths between two chemical compounds. For a road network the user can find the shortest distance or fastest travel time path between two cities or the closest hotel to a specific airport. For a social network the user can find a group of people having a specific relationship to a given individual.

The node table which is illustrated in simplified form in includes a list of nodes in the network nodes N N and a cost associated with the node. A cost associated with a node may be for example a toll or time delay associated with passing through the node. The node table may also include hierarchical information not shown that relates a node to an overall hierarchy and category information not shown that expresses a type or category of the node i.e a four way intersection with stop signs a traffic light a gas station and so on .

The link table which is illustrated in in simplified form includes a list of links L L connecting nodes in the network. The links shown in are directional meaning that they may be travelled in only a single direction such as a one way street. In other embodiments links may be bi directional or individually designated as directional or bi directional. The link table lists the link the nodes connected by the link the order of the nodes may indicate the direction in which the link may be travelled and a cost associated with traveling the link. The cost may be for example an estimated time it will take to drive the link or a geographic distance covered by the link. The link table may also include category information not shown that expresses a type or category that has been assigned to the link. In a network data model a reachable node is any node that can be reached from a given node. A reaching node is a node that can reach the given node. If links are directional a reaching node for a given node may not be reachable by the given node.

The network data model may also include one or more points of interest POIs that may not be nodes in the network but may have importance for analysis purposes. POIs might include restaurants gas stations tourist attractions rest stops and so on. In the example shown in POIs are stored in a separate POI table. The location of a POI is expressed as a percentage of travel along a given link. For example a POI x is located on link L at a point that is 25 of the distance between nodes N and N. Additional information about POIs may also be stored such as a category that can be used to filter POIs during analysis. In some embodiments a POI may not lie directly on a link. In this case the POI may be projected onto a nearby link to provide an approximate location for analysis purposes or analysis may be performed on a most proximate node.

The following includes definitions of selected terms employed herein. The definitions include various examples and or forms of components that fall within the scope of a term and that may be used for implementation. The examples are not intended to be limiting. Both singular and plural forms of terms may be within the definitions.

References to one embodiment an embodiment one example an example and so on indicate that the embodiment s or example s so described may include a particular feature structure characteristic property element or limitation but that not every embodiment or example necessarily includes that particular feature structure characteristic property element or limitation. Furthermore repeated use of the phrase in one embodiment does not necessarily refer to the same embodiment though it may.

 Computer readable medium as used herein refers to a medium that stores signals instructions and or data. A computer readable medium may take forms including but not limited to non volatile media and volatile media. Non volatile media may include for example optical disks magnetic disks and so on. Volatile media may include for example semiconductor memories dynamic memory and so on. Common forms of a computer readable medium may include but are not limited to a floppy disk a flexible disk a hard disk a magnetic tape other magnetic medium an ASIC a CD other optical medium a RAM a ROM a memory chip or card a memory stick and other media from which a computer a processor or other electronic device can read.

In some examples database is used to refer to a table. In other examples database may be used to refer to a set of tables. In still other examples database may refer to a set of data stores and methods for accessing and or manipulating those data stores.

 Data store as used herein refers to a physical and or logical entity that can store data. A data store may be for example a database a table a file a list a queue a heap a memory a register and so on. In different examples a data store may reside in one logical and or physical entity and or may be distributed between 2 or more logical and or physical entities.

 Logic as used herein includes but is not limited to hardware firmware software stored as computer executable instructions on a computer readable medium or in execution on a computer and or combinations of each to perform a function s or an action s and or to cause a function or action from another logic method and or system. Logic may include a software controlled microprocessor a discrete logic e.g. ASIC an analog circuit a digital circuit a programmed logic device a memory device containing instructions and so on. Logic may include one or more gates combinations of gates or other circuit components. Where multiple logical logics are described it may be possible to incorporate the multiple logical logics into one physical logic. Similarly where a single logical logic is described it may be possible to distribute that single logical logic between multiple physical logics.

 Query as used herein refers to a semantic construction that facilitates gathering and processing information. A query may be formulated in a database query language e.g. SQL structured query language an OQL object query language a natural language and so on.

 Software as used herein includes but is not limited to one or more executable instruction that cause a computer processor or other electronic device to perform functions actions and or behave in a desired manner. Software does not refer to stored instructions being claimed as stored instructions per se e.g. a program listing . The instructions may be embodied in various forms including routines algorithms modules methods threads and or programs including separate applications or code from dynamically linked libraries.

 User as used herein includes but is not limited to one or more persons software computers or other devices or combinations of these.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a memory. These algorithmic descriptions and representations are used by those skilled in the art to convey the substance of their work to others. An algorithm here and generally is conceived to be a sequence of operations that produce a result. The operations may include physical manipulations of physical quantities. Usually though not necessarily the physical quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated in a logic and so on. The physical manipulations create a concrete tangible useful real world result.

It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers and so on. It should be borne in mind however that these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise it is appreciated that throughout the description terms including processing computing determining and so on refer to actions and processes of a computer system logic processor or similar electronic device that manipulates and transforms data represented as physical electronic quantities.

In the network buffer for Node with offset cost when links are directional is shown in heavy line and is indicated generally by . The network buffer can be seen to include Nodes and . Referring to the link table in Links and connect Node to Nodes and respectively with a cost of 3. Thus Nodes and are included in the network buffer because they can be reached by or can reach Node with a cost of no more than 4. Node is outside of the network buffer because the cost to reach Node from Node is the cost of Link 3 plus the cost of Node 0 plus the cost of Link 7 or . Due to the direction of links Node cannot be reached by Node . The network buffer also includes the whole of links and and parts of Links and . The parts of Links and that are included in the buffer can be reached with a cost of 1 from Nodes and respectively. Since Nodes and have a cost of 3 with respect to Node the parts of Links and in the network buffer can be reached from Node by incurring the additional cost of 1 to reach the total offset cost of 4.

The network buffer for Node with offset cost 4 when links are bi directional includes both the network buffer in heavy line as well as Link and Node shown in dashed line and indicated generally by . Link and Node are included because when the links are bidirectional Node can reach or be reached by Node with a cost of 4 the cost of Link as specified in link table .

A network buffer logic determines a network buffer that includes a network buffer coverage and a cost for each network element that is part of the network buffer coverage. The buffer coverage is determined as a set of buffer network elements located within the offset cost with respect to the center network element. In the illustrated example the buffer network elements are Nodes and and Links when links are directional. The buffer network elements are Nodes and and Links when the links are bi directional.

The network buffer logic determines a respective cost associated with travelling between respective buffer network elements and the center network element on a path constrained to buffer network elements. In the illustrated example the cost associated with Nodes and is which is the minimum cost to travel to these nodes from Node the center network element for the buffer as determined from the network data model . Likewise the cost of Node is 4 which is the cost to travel to Node from Node .

The respective cost of links is determined as the cost to travel on the link between nodes in the network buffer. Thus Links and which are wholly included in the network buffer have a cost of 3 as determined from the network data model . Link has a cost of 4 also determined from the network data model. Portions of Links and are included in the network buffer. This is because reaching Nodes and from Node incurs a cost of 3 meaning that an additional cost of 1 may be incurred to reach the offset cost of 4. Thus 1 7 0.14 of Link which has a total cost of 7 is included in the network buffer. Likewise 0.25 of Link which has a total cost of 4 is included in the network buffer.

An output logic outputs for subsequent analysis the buffer coverage and the respective costs associated with the respective buffer network elements in the buffer coverage. In the example shown in the buffer coverage and respective costs are provided in the form of a node buffer table and a link buffer table . In the link table a start and end point for the link are stored to indicate whether the entire link or a portion of the link is included in the network buffer . It is to be appreciated that the buffer coverage and cost may be provided in any suitable manner that facilitates processing queries on the network buffer data.

The system may also include a query logic that receives queries on the network buffer and returns results from the network buffer. Some example queries will be discussed below with respect to . Because buffer coverage is represented as a set of network elements set operations such as intersection union subtraction and so on may be performed in a straight forward manner. Further union and intersection operations may also be performed at least two network buffers having the same offset cost and different center network elements.

A union operation may be performed on at least two network buffers by performing a union on the buffer coverage for the at least two network buffers and associating a respective cost with buffer network elements in the union. The cost for a buffer network element in the union is selected as a minimum cost associated with travelling between the buffer network element and the center network elements of the at least two network buffers on a path constrained to buffer network elements. The resulting network buffer will have the same offset cost as the at least two network buffers. An intersection operation may be performed on at least two network buffers having the same offset cost and different center network elements by performing an intersection operation on the buffer coverage for the at least two network buffers. A respective cost is associated with each buffer network element in the intersection that corresponds to a minimum cost associated with travelling between the buffer network element and the center network elements of the at least two network buffers on a path constrained to buffer network elements. The resulting network buffer will have the same offset cost as the at least two network buffers.

Other operations that can be performed on buffers include determining a sub buffer of a network buffer by generating a network buffer with the same center but with a smaller offset cost. Likewise a super buffer can be determined for a network buffer by augmenting the network buffer with network elements that have a larger offset cost and determining the cost of the additional network elements with respect to the center network element.

Example methods may be better appreciated with reference to flow diagrams. While for purposes of simplicity of explanation the illustrated methodologies are shown and described as a series of blocks it is to be appreciated that the methodologies are not limited by the order of the blocks as some blocks can occur in different orders and or concurrently with other blocks from that shown and described. Moreover less than all the illustrated blocks may be required to implement an example methodology. Blocks may be combined or separated into multiple components. Furthermore additional and or alternative methodologies can employ additional not illustrated blocks.

While illustrates various actions occurring in serial it is to be appreciated that various actions illustrated in could occur substantially in parallel. By way of illustration a first process could receive a network data model a center network element and an offset cost a second process could determine buffer coverage and a third process could determine costs. While three processes are described it is to be appreciated that a greater and or lesser number of processes could be employed and that lightweight processes regular processes threads and other approaches could be employed.

Network buffers can be stored and queried at a later time. Network buffers may also be used together with stored POI information to answer queries like What are the POIs within a given cost ordered by cost . This allows for the pre computation and storage of network buffers of desired cost centered at major locations such as highway exits hospitals and so on. By preprocessing and storing network buffers for some POIs a range query on the stored network buffers can be used to easily determine which POIs are nearby a given location on the network. Thus in many cases having stored network buffers eliminates the need to perform a network analysis each time a user s location changes.

As more analysis is performed network buffers with a larger offset cost may be merged with network buffers having the same center network element but a smaller offset cost. In this case reachable and reaching coverage should be treated separately. To quickly determine if one or more POIs expressed as a link identifier and a percentage of travel along the link are located within a given network buffer a join may be performed on the POI link identifiers and the network buffer. POIs may also be analyzed by performing coverage and cost analysis for a base node near the POI and then adding the cost of travelling to the POI from the base node.

In one example methods described herein may be implemented as computer executable instructions. Thus in one example a computer readable medium may store computer executable instructions that if executed by a machine e.g. processor cause the machine to perform a method that includes receiving a network data model and generating a network buffer. A center network element around which to generate the network buffer may be selected for example in response to a user query. An offset cost to define a boundary of the network buffer may be selected for example in response to a user query. A buffer coverage including a set of buffer network elements located within the offset cost with respect to the center network element is determined. A respective cost associated with travelling between respective buffer network elements and the center network element on a path constrained to buffer network element is also determined. The buffer coverage and the respective costs associated with the respective buffer network elements in the buffer coverage are stored for subsequent analysis.

While executable instructions associated with the above method are described as being stored on a computer readable medium it is to be appreciated that executable instructions associated with other example methods described herein may also be stored on a computer readable medium.

Thus logic may provide means e.g. hardware firmware for inputting a network data model that includes a set of network elements and respective costs associated with respective network elements where the network elements comprise nodes and links between nodes a center network element around which to generate the network buffer and an offset cost to define a boundary of the network buffer.

Logic may also provide means e.g. hardware firmware for means for generating a network buffer by determining a buffer coverage comprising a set of buffer network elements located within the offset cost with respect to the center network element and determining a respective cost associated with travelling between respective buffer network elements and the center network element on a path constrained to buffer network elements. Logic may also provide means for outputting for subsequent analysis the buffer coverage and the respective costs associated with the respective buffer network elements in the buffer coverage. The means may be implemented for example as an ASIC application specific integrated circuit programmed to perform fragment matching. The means may also be implemented as computer executable instructions that are presented to computer as data that are temporarily stored in memory and then executed by processor .

Generally describing an example configuration of the computer the processor may be a variety of various processors including dual microprocessor and other multi processor architectures. A memory may include volatile memory and or non volatile memory. Non volatile memory may include for example ROM read only memory PROM programmable ROM and so on. Volatile memory may include for example RAM random access memory SRAM synchronous RAM DRAM dynamic RAM and so on.

A disk may be operably connected to the computer via for example an input output interface e.g. card device and an input output port . The disk may be for example a magnetic disk drive a solid state disk drive a floppy disk drive a tape drive a Zip drive a flash memory card a memory stick and so on. Furthermore the disk may be a CD ROM compact disk drive a CD R CD recordable drive a CD RW CD rewriteable drive a DVD digital versatile disk and or digital video disk ROM and so on. The memory can store a process and or a data for example. The disk and or the memory can store an operating system that controls and allocates resources of the computer .

The bus may be a single internal bus interconnect architecture and or other bus or mesh architectures. While a single bus is illustrated it is to be appreciated that the computer may communicate with various devices logics and peripherals using other busses e.g. PCI peripheral component interconnect PCIE PCI express 1394 USB universal serial bus Ethernet . The bus can be types including for example a memory bus a memory controller a peripheral bus an external bus a crossbar switch and or a local bus.

The computer may interact with input output devices via the i o interfaces and the input output ports . Input output devices may be for example a keyboard a microphone a pointing and selection device cameras video cards displays the disk the network devices and so on. The input output ports may include for example serial ports parallel ports and USB ports.

The computer can operate in a network environment and thus may be connected to the network devices via the i o interfaces and or the i o ports . Through the network devices the computer may interact with a network. Through the network the computer may be logically connected to remote computers. Networks with which the computer may interact include but are not limited to a LAN local area network a WAN wide area network and other networks.

While example systems methods and so on have been illustrated by describing examples and while the examples have been described in considerable detail it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems methods and so on described herein. Therefore the invention is not limited to the specific details the representative apparatus and illustrative examples shown and described. Thus this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims.

To the extent that the term includes or including is employed in the detailed description or the claims it is intended to be inclusive in a manner similar to the term comprising as that term is interpreted when employed as a transitional word in a claim.

