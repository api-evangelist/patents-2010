---

title: System image customization tool
abstract: A system image customization tool provides an efficient and cost effective way to implement a highly customizable system image for a digital device. The system image customization tool controls application installation, device settings, and selection, delivery methods and licensing options for products, applications and services with minimal or no customer interaction from the customer's first out of box experience with the device and through the lifecycle use of the device. The system image customization tool provides retailers, original equipment manufacturers and products, applications and services providers a way to create new distribution channels and partnerships.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09047156&OS=09047156&RS=09047156
owner: Accenture Global Services Limited
number: 09047156
owner_city: Dublin
owner_country: IE
publication_date: 20100714
---
This application claims the benefit of U.S. Provisional Application Ser. No. 61 225 908 filed Jul. 15 2009.

This disclosure concerns efficiently implementing a highly customizable system image for a digital device. In particular this disclosure relates to controlling application installation device settings and selection delivery methods and licensing options for products applications and services with minimal or no customer interaction from the customer s first out of box experience with the device and through the lifecycle use of the device.

Today original equipment manufacturers OEM of digital devices pre load on the digital devices the OEM s configuration of trial and fully functional products applications and services PAS pre selected communications settings e.g. internet settings and connectivity options e.g. telecommunications service providers . The OEM controls the initial settings options and PAS SOPAS configurable for the digital device e.g. personal computers PC personal data assistants PDAs and other such devices that employ an operating system including anti virus and productivity office suites pre selected internet settings e.g. browser homepage search tool favorites and toolbar and tools to manage music photos and video and internet connectivity options. The customer s first interaction with the digital device e.g. the out of box experience OOBE as controlled by OEMs requires the customer to expend significant effort and interaction with the device in order to configure and manage the SOPAS to the satisfaction. This is true in part because any range of SOPAS may or may not be desired by the customer.

In other words OEMs provide a closed approach OOBE and control the PAS branding delivery methods and licensing options. The closed approach OOBE prevents retailers from customizing PAS and the operating system image. The closed approach OOBE determines the revenue streams to PAS providers limits the retailer s relationship with the customer to the point of sale POS of the device and limits the distribution channels and partnership opportunities between PAS providers and retailers. The closed approach OOBE does not provide customers the flexibility to select PAS delivery methods and licensing options e.g. trial advertiser sponsored per use fully paid and subscriptions . The closed approach OOBE also prevents the customer from choosing when and to what extent the customer engages the retailer and PAS providers.

The system image customization tool ICT provides a customer with a personalized computing experience that empowers the customer to take control and manage their device settings and PAS selections from initial operating system OS OOBE and throughout the lifecycle use of the device. The ICT provides the customer with the ability to customize the computing environment in order to best meet the customer s needs by seamlessly presenting settings options and PAS SOPAS to the customer for installation with minimal or without customer interaction.

A digital device installed with the ICT invokes the ICT when the customer turns on the device. In one implementation the digital device invokes the ICT the first time the device is turned on or whenever the customer turns the device on and has not previously completed the ICT when requested by the customer or at other selected times. The digital device may also condition execution of the ICT upon customer login to the device. The ICT includes a setup installer that creates a scheduled task in a task manager of the operating system of the device. The schedule task is configured to launch the ICT automatically as noted above e.g. at device start up and customer log on. The ICT may consequently execute whenever the customer logs on to the device. The ICT executes with elevated administrator privileges in order to execute administrative tasks without security exceptions so that the ICT may check for updates download and install PAS updates and execute silent installations for selected PAS e.g. digital shelf offerings . For example the ICT may execute under the administrators group with the highest privileges to prevent and or suppress user access control UAC prompts. The ICT when invoked may modify the scheduled task to enable disable or recreate all or particular aspects of the ICT. On uninstall the ICT setup removes the scheduled task from the task manager and may remove all components of the ICT.

In one implementation the system image customization tool ICT comprises setup installer instructions e.g. setup installer executable by a processor coupled to a memory of a digital device e.g. target system that cause the processor to create and schedule task instructions that are executable by the processor the first time the device is turned on or whenever the customer turns the device on and has not previously completed the ICT when requested by the customer or at other selected times. The scheduled task instructions comprise a location identifier for system image customization instructions executable by the processor and an execution level identifier that identifies a level of execution privileges to use to execute the system image customization instructions SICI . The setup installer instructions set the execution level identifier for the scheduled task to the highest execution privilege e.g. administrator privilege in order to prevent the processor from presenting a user access account control UAC prompt when the processor executes the scheduled task instructions. The setup installer instructions cause the processor to store in the memory at the location specified by the location identifier the SICI. The SICI cause the processor to display on a graphical user interface of the target system e.g. digital device digital shelf offerings e.g. PAS to a customer when the customer logs onto the target system e.g. digital device . The SICI receive through the graphical user interface e.g. user interface a customer selection of at least one of the digital shelf offerings and configure the at least one of the digital shelf offerings .

The memory of the digital device includes a system image customization tool ICT that includes the ICT setup installer SICI and a digital shelf offering of PAS for customer selection. The digital shelf offering may include products applications services and hardware the customer may select for install through the SICI . The memory also includes various components of the operating system for the digital device including a task manager where the ICT setup installer creates and schedules a scheduled task . The scheduled task includes schedule task instructions a location identifier and an execution level identifier . The location identifier identifies the location e.g. memory and or another storage area where the SICI may be stored for retrieval. The execution level identifier identifies a level of execution privileges the processor may use to execute the SICI . The setup installer sets the execution level identifier to the highest execution privilege e.g. administrator privilege in order to prevent the processor from presenting a user access account control UAC prompt through a user interface e.g. graphical user interface . When the digital device starts and or when the customer selects the SICI from a start menu the SICI displays a ICT user interface ICT UI through the user interface . The ICT UI displays the digital shelf offerings e.g. and for customer selection e.g. PAS selections and or hardware selections . The SICI receives the customer s PAS selections and or hardware selections the SICI configures the products applications services and or hardware corresponding to the PAS selections and or hardware selections . The SICI may determine installed products installed applications installed services and installed hardware in order to create and or update a PAS manifest that identifies detail information about the digital device configuration.

In one implementation the retailer may assign a stocking keeping unit SKU number to the digital device . The customer purchases the digital device and communicates PAS selections and or hardware selections to the retailer . In one implementation the customer may identify the PAS selections and or hardware selections in advance of the purchase of the digital device and communicate the PAS selections and or hardware selections to the retailer at the point of sale POS of the digital device to the customer . The retailer generates a PAS key that the SICI later retrieves e.g. retrieved PAS key based on the customer s PAS selections and or hardware selections and the SKU number assigned to the device. The retailer stores the PAS key for retrieval by the SICI . The customer may provide the retailer with account information for the SICI to use to submit payment for PAS selections and or hardware selections during the installation of the PAS selections and or hardware selections . When the customer starts the device and the SICI retrieves the PAS key and the SICI installs the PAS selections and or hardware selections without customer interaction. The ICT system configuration also includes a products applications services PAS keys repository where the retailer may store PAS keys for the SICI to retrieve for install of customer selected PAS without customer interaction. The ICT system configuration may also include a feedback database discussed in detail below.

In one implementation a retailer provides the ICT to OEMs and retailer s technical staff for install on the devices. The OEM s distribution channels for the devices and PAS providers may partner with the retailer in order to coordinate integration of the ICT with the devices and the PAS offered under the digital shelf offering including integration of production and delivery time lines. The OEMs may conduct testing and certification of the ICT with the device and the PAS offered under the digital shelf offering .

The installation of at least one anti virus anti spam AV AS product may be pre installed with or prior to the install of the ICT. OEMs may configure devices only with the ICT and OEM hardware specific utilities and device drivers. In one implementation the ICT setup installer creates and configures a scheduled task in Microsoft Vista task scheduler so that the scheduled task executes at logon for a customer . The setup installer may export the task into an xml file e.g. task.xml that includes the location identifier for the SICI also referred to as the system image customization program . The location identifier may be a token that the setup installer replaces using token replacer instructions upon execution with a particular location the setup installer retrieves from a key certificate and or the internet e.g. retailer specified remote location . The setup installer stores the task.xml file and the token replacer instructions in configurable locations on the device. In one implementation the setup installer stores Microsoft Windows Installer code MSIcode in configurable locations on the device to execute the token replacer instructions in order to replace the token in the task.xml file with the location of the SICI . In one implementation the token replacer instructions employ the following parameters file path token to replace identifier and replacement string.

In one implementation the setup installer employs InstallAware available from Macrovision Corporation in the United States to create the scheduled task instructions using the task.xml file as a configuration. The setup installer may use InstallAware to recreate the scheduled task in the Vista task scheduler in the event the scheduled task instructions are deleted from the Vista task scheduler. The setup installer may also use the InstallAware to configure the device with the SICI and digital shelf offerings e.g. PAS and place a shortcut for ICT on the start menu of the device. In one implementation the setup installer configures the ICT so that a customer may uninstall the ICT from the Programs and Features widget in the control panel of the device.

The SICI and dynamic link library files DLL s are signed with a software signing certificate issued by a trusted authority in order to package and sign the setup installer . Signing the SICI causes the device to present a Vista UAC prompt to the customer whenever the customer executes the ICT. The setup installer may be configured to install the SICI in interactive or silent mode. In one implementation the setup installer is configured as a Web Build so that when the setup installer executes the setup installer automatically locates the SICI on the device without prompting for original source media by displaying a media browser to the customer. The setup installer performs manual update checking and monitoring URL and verifies the version of the setup installer the SICI digital shelf offerings e.g. PAS and patches and updates to ensure proper installation of the offerings patches and updates. In one implementation the ICT supports patching of PAS without performing a full reinstall. The ICT setup installer may increment a product version identifier for the ICT setup installer in the PAS manifest with each update of the ICT setup installer . In one implementation the ICT setup installer does not cache the digital shelf offerings or the pre requisites for the digital shelf offerings after installation.

In one implementation the ICT e.g. setup installer and SICI executes on the Vista SP1 operating system and is built with .Net Framework 3.5 SP1 and the setup installer detects whether .Net Framework 3.5 SP1 is installed on the device. In the event the setup installer does not detect the .Net Framework 3.5 SP1 the setup installer installs the .Net Framework 3.5 SP1. In one implementation the setup installer installs natively on 32 bit and 64 bit operating systems so that the setup installer may install the SICI to the Program Files directory on 64 bit machines and write to the correct 64 bit section of the registry. The setup installer may also deploy a single digital shelf e.g. PAS for selection by a customer containing x86 and x64 installers. The setup installer determines the device s architecture and sets the mode e.g. 32 bit and 64 bit of installation to match the device s architecture.

In one implementation the ICT uses Microsoft Windows Installer MSI technology which provides a mechanism for checking installation conditions installing files for all customers creating shortcuts performing self repair and rollbacks on failures and cleanly uninstalling the SICI . In one implementation the setup installer installs the SICI a digital shelf file that includes the installers for the PAS and .Net Framework 3.5 SP1 installer. In one implementation the ICT deploys the digital shelf file as a Lempel Ziv Markov chain Algorithm LZMA compressed file. The setup installer stores the digital shelf file on the device and the SICI extracts the digital shelf file to a configurable location within a SICI resources folder.

Table 1 shows an example MSIscript that the ICT may configure to check for the presence of the digital shelf file.

Table 2 shows example code that may be included in a Perform First Time or Maintenance Installation region following execution of an Apply Install command in order to configure the setup installer and subsequently to configure a patch or update.

In one implementation the setup installer stores the installation packages for the digital offerings e.g. installation bits or bits for the PAS that include instructions executable by the processor in a folder accessed by the SICI when the device starts. The setup installer may store the bits in a hidden location so that the customer of the device cannot locate or delete the bits.

The SICI welcome display presents a description of the purpose and benefits of using the SICI . The SICI welcome display also includes a media block that presents a multimedia presentation that describes the purpose benefits and procedure for using the SICI . The SICI welcome display present a customer selectable customer install object e.g. button or check box that the customer may select to acknowledge the customer s desire to customize the install using the SICI . The SICI welcome display may further present system information security information and system storage information for the digital device. The SICI welcome display may include logo s and or icons e.g. for the system information security information and system storage information . The SICI welcome display presents contact information e.g. a toll free number for technical staff support and additional settings for the customer to customize the ICT and installation of selected digital shelf offerings . The SICI welcome display also presents a customer selectable uninstall object that the customer may select to uninstall the SICI and the ICT components e.g. ICT setup installer and digital shelf offerings . The customer continues the SICI custom install by selecting the next object. When the customer selects the next object the SICI presents the next tab e.g. the productivity category .

The SICI provides the customer with the choice of installing offerings selected by the customer e.g. offerings added to a shopping cart in a managed batch e.g. multiple offerings selected for installation . In one implementation the ICT configures the bits to execute in a silent mode so that the bits install with default options and with minimal or no customer interaction. Under the managed install the bits execute with minimal prompts in all UAC configuration and customer account combinations. The managed installation option may suppress reboots and provide progress updates through the SICI user interface.

Alternatively the SICI provides the customer with the choice to install offerings in an unmanaged e.g. install it now experience that causes the SICI to initiate a native installer e.g. unmanaged installer for each offering. Under the unmanaged install the SICI initiates execution of each bit e.g. an individual installation package for a product application or service as an unmanaged native installation. The native installer executes independent of the SICI in a separate window e.g. shell and allows the customer to interactively configure the offering. In one implementation the SICI does not monitor the unmanaged installation. The unmanaged installer may execute without command line options display the native installer s user interface prompt the customer and otherwise operate as though the customer initiated the native installer from outside the SICI . Under the unmanaged install the SICI also defers the End User License Agreement EULA display and acceptance to the native installer.

In one implementation the ICT employs the Windows Management Instrumentation WMI to manage data and operations on Windows based operating systems. The SICI may use WMI queries to determine the pre existing applications configured on the device so that the SICI do not attempt to install over the pre existing applications. The ICT employs a PAS manifest e.g. a PAS manifest file stored on the device that includes a list of the offerings e.g. PAS installed on the device. In one implementation the setup installer initially stores the PAS manifest on the device and the SICI updates and maintains the PAS manifest as the customer selects digital offerings e.g. PAS throughout the lifecycle use of the device. The installation status of a digital offering may be unavailable for querying through the WMI e.g. Internet Explorer shortcuts . When the installation status of a digital offering is unavailable the SICI may consider the digital offering installed in the event the PAS manifest includes an entry for the successful installation of the offering. In one implementation the PAS manifest includes other details such as feedback information used by a feedback service discussed in detail below.

In one implementation the SICI does not disable non digital shelf offerings e.g. products applications and services previously installed on the device that the SICI does not identify as included with the digital shelf offering . The SICI allows the customer to select non digital shelf offerings for installation even though the non digital shelf offerings may be previously installed on the device. The SICI reports the non digital shelf offerings as installed to a feedback service discussed in detail below in the event the PAS manifest includes an entry indicating the successful installation of the non digital shelf offering even in the event the non digital shelf offering may not be installed at the time of the feedback. For example in the event the PAS manifest includes an entry indicating the previous install of a desktop shortcut but the shortcut was actually deleted by the customer after being installed the desktop shortcut would report back to the feedback service as installed.

In one implementation the SICI employs the windows presentation foundation WPF programming model and the Extensible Application Markup Language XAML to present the customer with a rich user interface UI media and documents. XAML includes native support for many different user interface concepts such as 2 D and 3 D drawing animations control containment control and document flow as well as a rich data binding model to support a model for developing applications. The SICI includes a status icon bound to the InstallationStatus property which allows the ICT UI to display visual indicators that indicate the installation progress for each offering installation. The SICI combines the name and category properties to display in an offering label for each offering. In one implementation the SICI includes a progress fraction indicator bound to the sum offerings in installation success or fail states the total number of offerings being installed . The SICI include a time remaining indicator bound to the sum AverageInstallTime for each of the offerings that the SICI identifies as in NotInstalled or Installing states minus the time since the last item e.g. offering install completed. The SICI may combine these properties into a ViewModel based on the Model View ViewModel MVVM pattern which exposes calculated values needed by ICT UI for a shopping cart object of offerings.

The SICI defines installation process specifics in install methods for each offering subclass e.g. application offering class and desktop shortcut class . The SICI includes an installation manager that leverages the offering install methods to perform the actual installation. The installation manager e.g. InstallationManager class provides common logic not specific to each offering installation implementation and wraps each installation e.g. such as serializing the installations initializing each of the installation processes and updating the PAS manifest . The InstallationManager class manages the installation of each offering. The InstallationManager class performs the managed and unmanaged installations. The offering object defines an install method to call in order for the offering to install itself. The SICI includes a status property to track the install progress of each offering. The status property may include the following status values NotInstalled Installing SuccessfullyInstalled and InstallFailed. After the installation of each offering the SICI updates the PAS manifest to reflect the installation of each offering.

Table 3 shows an example application offering class install method that may be generalized for the install methods for products and services as well offered under the digital shelf offering .

In one implementation the SICI presents a Microsoft setup screen that is not changed by the first out of box experience OOBE for the customer. The SICI controls the messaging and windows presented to the customer during the OOBE. The SICI displays a retailer welcome screen to the customer. The welcome screen explains that the SICI will lead the customer through an extended setup process for the digital device. The SICI welcome UI presents the customer a description and purpose for the SICI process. In a visually engaging way the SICI description and purpose provide the customer with information necessary for the customer to determine the value and intended benefits expected for the customer as a result of performing the extended setup process.

In one implementation when the customer starts the device the setup screens e.g. Microsoft setup screens may prompt the customer for a username a password and regional information and the device boots and presents the customer with the desktop e.g. MS Windows . In one implementation two windows open when the customer starts the device for example a welcome screen and a window where the SICI executes. The welcome screen is suppressed by the SICI and the SICI suppresses unnecessary icons so that the device presents the customer with a clean desktop e.g. no icons on the desktop other than the recycle bin . The SICI may also allow the clock gadget to install and be visible e.g. MS Windows default to the customer. The ICT setup installer may permit hardware specific applications installed by the OEM e.g. special button drivers to execute. The ICT setup installer may configure a retailer version of one or more PAS that the OEMs pre install on the device.

The SICI includes a welcome screen with a welcome video and written description of the SICI functions. The SICI welcome screen provides an introduction and explanation of each category of digital shelf offering e.g. productivity search music photos video gaming services personalize and OEM applications . In one implementation the SICI employs the windows presentation foundation WPF programming model to present the customer with a rich user interface UI media and documents. The SICI presents vendor specific PAS icons and animations and transitions. Each PAS offered with the digital shelf offerings may include video presentations and or other multimedia presentations. The customer may choose to uninstall the SICI and or exit the SICI from the welcome screen. In the event the customer chooses to close the SICI without uninstalling the SICI the SICI will remain available for execution from the start menu and or a desktop shortcut and the control panel for uninstall. In the event the customer exits or uninstalls the SICI without clicking a first entry button the SICI may prompt the customer with an explanation and or warning message to confirm the customer s decision. The customer may bypass e.g. exit the personalization process and return to the SICI at a later time by selecting the exit SICI button. The SICI presents the customer with configuration options to customize the desktop including desktop themes and custom desktop backgrounds.

In one implementation the SICI provides two modes for viewing the ICT UI including browse view mode and view all mode. In the browse mode the ICT UI displays offerings and corresponding videos by category when the customer selects one of the various categories. In the view all mode all offerings may be presented in the ICT UI simultaneously. The ICT UI may provide detailed information to the customer when the customer hovers over an offering with a pointing device. The customer may add offerings to a shopping cart in both the browser mode and the view all mode. The ICT UI includes a description for each offering e.g. PAS within a category. The SICI prompts the customer to confirm whether the customer already has the application when the customer attempts to add a PAS to the customer s shopping cart. The SICI presents the customer with a favorites category where the ICT UI presents a list box to the customer from which the customer may choose favorites to add to the browser e.g. internet Explorer IE . The OEM tab presents the device manufacturer s PAS as offerings. In one implementation the SICI does not include the OEM offerings with the batch installation process and OEM offerings may be available in the browse mode. The ICT UI may present the customer with the default PAS that are bundled with the operating system e.g. Vista defaults such as Windows Media Player and IE . For example under the music and movie categories the category description may indicate that Windows Media Player is already installed as a consequence of the operating system e.g. Vista previously being installed on the device. In one implementation the OEM may install a term limited anti virus anti spam AV AS PAS e.g. first 30 days free PAS . In another implementation the SICI does not install or monitor AV AS PAS. The SICI may present an estimated time to complete the install of each PAS and the estimated time to complete the install of the batch of PAS. The ICT UI presents the customer with basic personalization options such as antivirus and anti spam AV AS browser search engine and toolbar as well as more elaborate personalization options. In one implementation the SICI prevents the customer from selecting an AV AS for install through the ICT UI when the SICI determines an AV AS is already installed.

In one implementation the ICT UI presents the customer with an automated installation option for offerings e.g. PAS from various vendors that provide a silent packaged installer that does not include customer prompts for the customer to click through. Under the automated installation option the SICI may present the customer with the option to choose from a list of AV AS trial PAS. The ICT UI presents a shopping cart and a checkout screen for the customer to review and confirm PAS selections. In one implementation the customer provides account information during the shopping cart checkout so that when the SICI starts the install of the select offerings SICI submits payment to the PAS providers for selected offerings during the install process without further customer interaction. Under the automated installation option when the customer completes the selection of offerings the customer initiates the installation of the selected PAS and the SICI installs the selected PAS without prompting the customer. The SICI maintains the customer s PAS selections so that in the event the shopping process is interrupted when the customer resumes SICI the customer can view previously selected offerings and resume selection of additional offerings. The SICI provides an installation log the customer may view during and or after installation of the selected offerings.

The ICT UI presents the customer with a batch end user license agreement EULA when the customer selects the install button on a review and install screen . The SICI displays the EULA in a scrollable text area that contains the EULAs for the selected offerings. The SICI presents the customer with the option to accept or decline the EULAs. In the event the customer accepts the EULAs the SICI initiates installation of the offerings. In one implementation selecting the accept option indicates that the customer accepts all the EULAs for the selected offerings so that in the event the customer does not select the accept option the SICI presents the review and install screen to the customer so that the customer may deselect those offerings for which the customer did not choose to accept the EULAs.

In one implementation the SICI presents the customer with a custom installation option and install buttons for each offering selected. In the event the offering supports a native installation the SICI presents the customer with the option to launch the native installer by clicking on an install now button. In one implementation the install now button may be located in a hover bubble in the view all mode. When the customer launches a native installer the SICI may no longer be the customer focus.

The SICI may detect whether an AV AS product is already installed on the computer. The SICI may prevent a customer from installing an AV AS product when the SICI detects that the AV AS is already installed. In one implementation when the SICI starts the SICI performs a check of the device and in the event the AV AS is detected the SICI may not present the AV AS category to the customer. In one implementation each offering e.g. PAS may be identified by a unique retailer identifier that the SICI communicates to the PAS vendors to confirm that the offering was installed from the SICI .

In one implementation each offering may reside in a hidden directory and or compressed e.g. cabinet file format CAB to prevent installation and use of the offerings unless installed through the SICI . In another implementation the SICI removes the AV AS offerings after an AV AS offering is installed. In one implementation the SICI may be certified by the operating system OS vendor e.g. Microsoft for distribution with the OS by the OEM of the device. The retailer OEM and or technical staff of the retailer and the customer may configure the SICI with a culture and language option so that the SICI presents ICT UI for a particular culture languages and dialectics. The SICI may use satellite assemblies and resource files to implement the culture and language option. In one implementation the SICI presents offerings compatible with hardware and anti virus PAS from market leader vendors e.g. Asus and TrendMicro in order to minimize compatibility and integration issues between and among the ICT components the devices and the digital shelf offerings e.g. PAS . The SICI and digital offering shelf may be deployable via a packaged installer and the SICI may be downloadable from the Internet.

The SICI captures and stores in a PAS manifest file the customer selected offerings so the information can be communicated to the retailer and or PAS providers and utilized by the SICI when the customer executes the SICI on subsequent occasions. The SICI may communicate device information make model software build MAC address serial no. to the retailer and or the OEM of the device and PAS providers e.g. PAS vendors . In one implementation the SICI may collect only non personal information. The SICI may inform the customer of the automated feedback service and provide the customer with the option to opt out of providing the feedback information. The SICI may provide the customer with a disclaimer that notifies the customer that the SICI captures offering selections to send back to the retailer . The SICI stores the feedback information locally and may send the feedback information to the retailer and or feedback service when the SICI closes.

The retailer may assign a stock keeping unit SKU number to each device that indicates the device is configured with the ICT e.g. ICT setup installer the SICI and digital shelf offerings . In one implementation at the point of sale POS of the device by the retailer to the customer the retailer generates a PAS key based on the customer s PAS selections and the SKU number so that when the customer first starts the device e.g. the first OOBE the device retrieves the PAS selections and installs the selected PAS without customer interaction. For example the customer purchases a device from a retailer and communicates PAS selections to the retailer at the POS of the device which the retailer uses to generate the PAS key prior to the customer s first OOBE with the device. The retailer stores the PAS key in a location for the SICI to retrieve such as a website and or a universal serial bus USB memory stick and or an RFID embedded receipt the retailer gives to the customer at the POS of the device. In one implementation the retailer communicates the PAS key to a customer designated location e.g. a PDA and email account and the SICI configured device retrieves the PAS key via wireless communication e.g. Bluetooth and Wi Fi from the customer designated location. When the customer starts the device e.g. the first OOBE with the device the SICI retrieves the PAS key based on the SKU number and installs the selected PAS without customer interaction. In one implementation the customer may select PAS for install without purchasing the selected PAS during the POS of the device but the customer may authorize the SICI to use account information provided to the retailer during the POS of the device to also submit payment for selected PAS during the installation performed by the SICI . The SICI may retrieve the account information with the PAS key . In another implementation the customer provides the retailer with information for multiple accounts during the POS of the device and the customer authorizes the SICI to use individual and or combinations of accounts from which to submit payments for the selected PAS.

The SICI may provide a revenue recognition report to the retailer that the retailer may use to account to the various OEMs and PAS vendors of the digital shelf offerings . The SICI provides a reconciliation report to the retailer so that the number of devices configured with the digital shelf offerings and the number of offerings installed by the customers of the device reconcile. The feedback service provides logging and exception handling reports e.g. Enterprise Library 4.0 .

The SICI detects whether the device is connected to the internet and upon startup checks for updates of the SICI and the digital shelf offerings . In the event the SICI detects available updates the customer may be prompted. The ICT UI may prompt the customer to confirm whether to install the updates. In the event the customer elects to install the updates SICI downloads and installs the updates shuts down and then the SICI restarts.

In one implementation the SICI comprises a feedback service that provides a mechanism for the SICI to communicate feedback information about the customer s experience with the device the SICI and the digital shelf offerings selected by the customer. The customer may opt in in order for the feedback information to be communicated to the retailer . The feedback information may include device specifications as well as a listing of the digital shelf offerings installed by the SICI . In one implementation the feedback service is a .NET 3.5 WCF Service hosted in internet information services IIS . The SICI may use a WCF proxy class to communicate with the WCF service using the service oriented architecture protocol SOAP over hypertext transfer protocol HTTP .

A feedback database e.g. MS SQL Server may be used to store the feedback information on a server. In one implementation the feedback database includes a schema definition tables and data context information to store feedback information. The feedback information stored in the feedback database may include information about the offerings installed on the customer s device details about the customer s device customer favorites and logging information for errors and installation information.

In one implementation the feedback service uses Entity Framework to communicate with the feedback database . Entity Framework implements a data access layer that contains three layers including storage metadata schema SSDL conceptual schema CSDL and C S mapping. The feedback service may employ the language integrated query LINQ to entity feature of Entity Framework to perform create read update and delete CRUD operations and wrap the CRUD operations into a separate class inside the service assembly. Entity Framework may expose the feedback database as an object relational mapping ORM e.g. a virtual object database .

The feedback service employs a feedback save method that saves feedback information in the feedback database . In one implementation the feedback save method creates a connection to the feedback database for each customer device executing the SICI and performs database operations for a feedback service request under a single transaction. The feedback save method may check each request for SQL injection and reject a request in the event the feedback save method identifies SQL injection. In the event the feedback save method identifies the feedback information as originating from a same client e.g. customer the feedback save method clears the previously stored feedback information and then inserts the new feedback information. Before saving feedback information to the feedback database the feedback save method may validate the feedback information. The feedback service determines whether the feedback service request includes device information for the customer s device e.g. client PC and obtains the IP address of the client PC. The feedback service may use the IP address to detect repeated feedback requests from the same client PC. In the event the feedback service determines that the number of feedback requests have exceeded a configurable threshold number the feedback service may ignore further feedback requests from the particular IP address for a configurable period of time e.g. 24 hours . In the event the feedback service identifies an error during a transaction the feedback service may throw an exception rollback the transaction and log the exception details.

In one implementation the feedback service uses DataContext object to perform CRUD operations for LINQ to SQL. DataContext object may be configured to retrieve objects from the feedback database and submits changes to the feedback database . The feedback service exposes entity classes e.g. machine customer s device offering favorite OfferingMachine error log as properties to DataContext on which CRUD operations are performed. For each feedback request a DataContext object may be created at method scope. CRUD operations may be performed in a single transaction in order to keep the data consistent. In the event an operation completes successfully then the feedback database commits the feedback information but in the event the operation fails the feedback database rolls back the feedback information. When a CRUD operation completes successfully the feedback service releases the DataContext object.

In one implementation the feedback request comprises device information that identifies the customer s device e.g. target system and configuration selected offerings configured on the customer s device favorites e.g. URIs and URLs desktop shortcuts and feedback error information. The device information may include an operating system product identifier e.g. MS Windows product identifier used to uniquely identifier the customer s device the serial number of the device e.g. and or SKU number the time zone settings for the device the language and cultural settings configured for the device the keyboard setting and keyboard type the country settings to use for the customer operating system version number e.g. MS Windows operating system edition e.g. MS Windows Home Edition the number of times the SICI executes prior to the feedback service communicating feedback information to the feedback server and the version number of the SICI e.g. and or ICT components . The device information may further include the RAM size of the customer s device total size of physical hard disk the CPU architecture e.g. x86 32 bit and x64 64 bit the total number of CPU s on the customer s device the number of core per CPU e.g. 2 cores and 4 cores the clock speed of the CPU s the MAC address the IP address and operating system architecture e.g. 32 bits and 64 bits .

In one implementation the feedback information includes information about the selected offerings including a PAS identifier that identifies each selected offering the version number of each selected offering the frequency of use by the customer of each selected offering the date and time of installation of each selected offering and the amount of disk space occupied by each selected offering. The feedback information may include feedback error information such as an error code that uniquely identifies the feedback error a description of the feedback error an error source identifier that identifies the source of the feedback error e.g. the SICI and the selected offering installed through the SICI the date the feedback error occurred and a PAS error identifier that identifies the selected offering to which the feedback error relates.

The feedback information may identify the favorites e.g. URIs uniform record identifiers and URLs uniform record locators configured for the customer s device including a URI offering identifier and a date of installation of the favorite. The feedback information may identify the desktop shortcuts configured for the customer s device including a desktop shortcut name desktop shortcut offering identifier for a corresponding offering the date of installation of the desktop shortcut the disk space occupied by the desktop shortcut and the elapse time to install the desktop shortcut and or the elapse time to install the offering to which the desktop shortcut corresponds. The feedback service may include a feedback response to a feedback request where the feedback response includes a feedback request status and a description of the feedback information.

In one implementation the feedback service includes a feedback frequency limit e.g. no more than 5 times per day per hour and or per month . The feedback service may evaluate the feedback service communicates feedback information to the feedback service and the date on which the feedback service communicated the feedback information to determine whether to communicate additional feedback information within a particular period of time e.g. hour day month . The feedback service may maintain a feedback last updated time property that indicates the last time the feedback service communicated feedback information from the customer to the feedback database . The feedback service may also limit the frequency e.g. hours days months and the maximum number of times e.g. twice per month and no more than once per day that the feedback service communicates feedback information to the feedback database .

In one implementation the feedback service considers the customers as anonymous and accepts anonymous web service requests. The feedback service encrypts the feedback information to protect the privacy of the customer. The feedback information comprises non personal information installed offerings and error information. The feedback service comprises a security model design that protects the feedback information from attackers that may attempt to compromise the feedback service. The security model of the feedback service addresses threats and vulnerabilities to the feedback service including access to non personal information unauthorized access to the feedback service unwanted erroneous and malicious data being entered into the feedback database that may invalidate the integrity of the feedback database choking the feedback service by endless looped requests unauthorized listener on the transport level and unauthorized communication interceptors.

The feedback service may be secured using a security web service e.g. WS Security to ensure that the feedback service securely communicates feedback service message contents. In one implementation the feedback service uses wsHttpBinding class with an encryption algorithm that ensures that the feedback service communicates the feedback information securely. The feedback service relies on the ws standard based ws policy and ws security. In one implementation the identity and resource access of a feedback request and the feedback service is based upon a trusted sub system model whereby the feedback service employs an application pool account configured as a least privileged customer account with permissions to update the feedback database and write log files to a folder on a feedback server e.g. a web server . The feedback service may also be configured to prevent the feedback service from impersonating a requester identity.

The subject matter described in this specification can be implemented as a method or as a system or using computer program products tangibly embodied in information carriers such as a CD ROM a DVD ROM a semiconductor memory and a hard disk. Such computer program products may cause a data processing apparatus to conduct one or more operations described in this specification. In addition the subject matter described in this specification can also be implemented as a system including a processor and a memory coupled to the processor. The memory may encode one or more programs that cause the processor to perform one or more of the method acts described in this specification. Further the subject matter described in this specification can be implemented using various machines.

Selected aspects features and components of the implementations described above are depicted as stored in memories. However all or part of the systems including logic such as computer executable instructions for implementing the methods may be stored on distributed across or read from a wide variety of machine or computer readable media. The media may include storage devices such as hard disks flash memory floppy disks and CD ROMs or other forms of ROM or RAM either currently known or later developed. The logic may also be encoded in a transitory or non transitory signal that encoded the logic as the signal propagates from a source to a destination.

The logic that implements the system may include any combination of hardware and software which may vary widely in implementation. For example a processor may be implemented as a microprocessor a microcontroller a DSP an application specific integrated circuit ASIC discrete logic or a combination of other types of circuits or logic. Similarly memories may be DRAM SRAM Flash or any other type of memory. The functionality of the system may be distributed among multiple computer systems. Parameters databases and other data structures may be separately stored and managed may be incorporated into a single memory or database or may be logically and physically organized in many different ways. Any of the logic described may be implemented with programs that are parts of a single program as separate programs or distributed across several memories and processors. The logic may be organized into software libraries including dynamic link libraries DLLs application programming interfaces APIs or other libraries.

