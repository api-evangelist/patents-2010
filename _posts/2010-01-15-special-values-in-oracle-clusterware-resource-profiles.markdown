---

title: Special values in oracle clusterware resource profiles
abstract: A method and computer-readable storage representing resources in a cluster by a plurality of attribute-value pairs that together are part of a “resource profile,” in which each attribute-value pair defines all, or a portion of, a management policy that applies to the resource. A clusterware manager configures a resource according to the resource profile, and follows a resource profile syntax that specifies a runtime value for the resource in which an actual value is substituted at runtime.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098334&OS=09098334&RS=09098334
owner: ORACLE INTERNATIONAL CORPORATION
number: 09098334
owner_city: Redwood Shores
owner_country: US
publication_date: 20100115
---
 1 application Ser. No. 12 688 715 entitled Local Resource Type As A Way To Automate Management Of Infrastructure Resources In Oracle Clusterware filed on Jan. 15 2010 

 2 application Ser. No. 12 688 723 entitled Unidirectional Resource and Type Dependencies In Oracle Clusterware filed on Jan. 15 2010 

 3 application Ser. No. 12 688 735 entitled Self Testable HA Framework Library Infrastructure filed on Jan. 15 2010 

 5 application Ser. No. 12 688 769 entitled Dispersion Dependency In Oracle Clusterware filed on Jan. 15 2010 and

 6 application Ser. No. 12 688 800 entitled Conditional Dependency in a Computing Cluster filed on Jan. 15 2010 the entire contents of each of the above applications is hereby incorporated by reference as if fully set forth herein. The applicants hereby rescind any disclaimer of claim scope in the related applications.

The present invention relates to management of applications and resources in a clustered computing environment.

Clusterware is a general term that refers to a software product that is used to combine a set of nodes or computers into a single entity all members working together as a logical unit. The single entity is referred to as a cluster or computer cluster. Clusterware allows this cluster to be controlled as a unit. For example five nodes may be combined into a cluster each node with its own combination of applications that may be supported by the cluster as a whole. An example of an application that may be installed on some or each of the nodes is a database management system DBMS such as those produced by Oracle Corporation 500 Oracle Parkway Redwood Shores Calif.

Clusterware may be implemented as middleware residing between the operating system and any applications. Clusterware may also be implemented as part of the operating system. A cluster manager or a node with management authority manages the resources and services of a cluster. A component of the cluster manager known as the policy engine is the portion of clusterware responsible for managing services on the cluster.

Services such as membership services are provided by the clusterware. Membership determines what computers or nodes are parts of the cluster and which computers and nodes remain in the cluster. If a node that is part of the cluster fails for example clusterware membership services determine which other nodes should be included in the cluster.

Resource management is another service provided by clusterware. Resource management techniques may vary with each clusterware product. In some implementations clusterware considers everything under management as a resource and with knowledge of resources defined in a resource profile for that resource. A resource is an allocation of hardware and storage such as one or more operating system processes and volatile virtual memory and or volatile memory allocated to running a particular software module or application. In order to function properly resources may depend on other computer components to be online and or be configured in a certain way. Such computer components are also referred to as resources.

To manage a resource means to perform activities related to that resource. These activities may for example cause the resource to behave be provisioned in a particular manner or brought online on a particular node. For example putting an Internet Protocol IP address in the proper configuration location for a web server is a way of managing an IP address while restarting the web server is a way of managing the web server.

In some implementations the resource profile controls what the clusterware will do when managing the resource. A resource profile is a collection of attributes having values that define the properties of the resource associated with the value. The attributes and properties may be made up of common or generic attributes and properties or may be application specific. For example if the resource crashes the resource profile defines whether or not the particular resource given the particular circumstance will be restarted. As another example if the resource keeps crashing it may be relocated to another node in the cluster based on the configuration in the resource profile. Resource profiles may be grouped together to make up a logical group of profiles.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

Resources in a cluster may be represented by a plurality of attribute value pairs that together are part of a resource profile in which each attribute value pair defines all or a portion of a management policy that applies to the resource. Designating some values of attributes to be evaluated at run time enhances the ability to rearrange one or more members of a cluster that hosts a resource and permits items such as scripts binaries and other files for the resource to be placed at different locations within each node.

A clusterware manager then configures a resource according to the resource profile and follows a resource profile syntax that specifies a runtime value for the resource in which an actual value is substituted at runtime. Evaluation of the actual value and substitution of the actual value is not fixed in time. For example evaluation and substitution may occur in response to a resource request may occur upon initialization of a resource or may occur upon termination or disconnection of a resource. Additionally evaluation and substitution may occur in response to an action external to the resource such as a check action performed by an application executing on a node an operating system running on a node or the clusterware manager itself.

Users in the user group access network through physical platforms such personal computers workstations notebook computers netbook computers and handheld devices not shown in having network connectivity. Network connectivity may be provided by physically wired connections such as Ethernet USB or FireWire or may be provided by wireless connections such as Wi Fi Bluetooth or IrDA . Network provides users access to one or more clustered servers with sample connection illustrated by dashed line .

Interconnect is a private local area network among one or more clustered servers . Interconnect is used for inter node messaging and may operate using User Datagram Protocol.

Each of one or more clustered servers is connected to interconnect . Servers comprising each of one or more clustered servers may be any computer having a network capable operating system and providing network services. In an embodiment servers comprising each of one or more clustered servers may have different operating systems and or architectures. In an embodiment servers comprising each of one or more clustered servers share a common operating system and common architecture for example 32 bit or 64 bit. Examples include blade servers such as a Sun Ultrasparc Server Module rackmount servers such as a Sun Fire Server and workstation servers such as a Sun Ultra Workstation .

Switch interconnect connects one or more clustered servers to disk subsystem pictorially represented as a plurality of disks . Switch interconnect comprises hardware and software that moves data from each of one or more clustered servers to a desired disk in disk subsystem .

Disk subsystem is comprised of a plurality of disks and may comprise disks having differing physical capacities differing operating conditions and differing manufactures. Switch interconnect permits any of one or more clustered servers to access any disk in disk subsystem .

While may appear to depict a static cluster environment in actual operation various elements of may vary over time with the clusterware performing appropriate resource modifications. Users may connect and disconnect in an apparently random fashion or in a predictable fashion or in a combination thereof. Servers may be added to or removed from the one or more clustered servers . Similarly individual disks may be added to or removed from disk subsystem . The addition or removal of servers and the addition or removal of individual disks may be planned as in situations involving upgrades or scheduled maintenance or may be unplanned such as an individual disk failure occurring unpredictably.

Server is one of the one or more clustered servers depicted in . Each of the one or more clustered servers such as server may run an application instance of application .

Clusterware manager may interact with or control one or more resources . Similarly application instance arising from application may also interact with or control one or more resource instances of a particular resource of the one or more resources . A particular resource or a particular resource instance may interact with or be under the control of one or both of clusterware manager and application instance .

As previously stated a resource comprises a physical or logical entity included in an application. A resource may comprise an individual software process for example an Oracle Grid Naming Service GNS process an Oracle Automatic Storage Management Cluster File System ACFS process a Network File System NFS process or an X Clock process may be a resource. A resource may comprise an application or application instance for example an Oracle Automatic Storage Management ASM application or an application produced by SAP may be a resource.

As the definition of a resource is expansive in it is possible for identifiers to overlap for a particular entity. For example in server may be considered as a particular resource of the one or more resources with respect to clusterware manager .

Each resource in the one or more resources has a resource profile not shown in that describes a management policy for the resource with respect to application and cluster . In a non limiting example a resource profile may comprise a description of one or more requirements of application to be provided by and managed by cluster . With knowledge of a particular resource profile cluster may monitor a resource detect problems associated with the resource and provide corrective action to the resource in a manner that is transparent to and does not affect application or application instance .

In an embodiment a resource profile for a resource is represented by one or more attribute value pairs.

In an embodiment a resource profile comprises a plurality of attribute value pairs that describe a management policy for a plurality of resources in which each attribute value pair describes a management policy for a particular resource or plurality of resources.

In an embodiment a resource profile with respect to application and cluster is stored by and managed by clusterware manager .

A resource profile may include an attribute value pair in which the value is a constant in which the constant value is used to define a management policy with respect to the resource. For example an attribute value pair used to manage a particular resource of the one or more resources might appear as follows 

A resource profile may include an attribute value pair in which the value is not interpreted by clusterware manager but is passed to a particular resource of the one or more resources as part of the configuration of the particular resource. For example an attribute value pair used to configure a database resource might appear as follows 

In an embodiment when a resource is started or modified the contents of the resource profile are provided to the resource.

A simple example of resource profile could be as follows the attribute ACTION SCRIPT contains the value of the absolute path to the script or program executed by server when server needs to act on the resource for example to start it stop it check its status etc. For a particular server the corresponding value of this attribute might be the following fixed path Applications Cluster foo my action program expressed here using a UNIX based file naming convention.

As seen above the value of the attribute is a preconfigured constant path. Effectively this limits each node in a cluster that is eligible to host the resource to place the action script at exactly the same location in each node. Thus upgrading an application and thereby running the application from a new location would require overhaul of all resource profiles. Similarly any attempt to install an application at a different location in one of the nodes would lead to application errors.

Usage of a resource profile and the accompanying benefits obtained can each be greatly expanded through addition of a syntax to the resource profile in which the syntax provides for use of runtime values. In an embodiment the resource profile includes a syntax in which a runtime value is defined as a value to be evaluated at run time. At an appropriate time such as when clusterware manager needs to act on one or more resources or when clusterware manager receives a request from one or more resources clusterware manager performs a just in time evaluation to arrive at an actual value of the attribute.

Similarly at an appropriate time such as when application instance needs to act on one or more resource instances clusterware manager performs a just in time evaluation to arrive at an actual value of the attribute. For each evaluation the context in which the evaluation is performed is considered. Some illustrative examples appear below with respect to different kinds of runtime values appearing in embodiments of the invention.

With respect to the previous example regarding the fixed path for the attribute ACTION SCRIPT the portability of an action script for each node can be realized by relating the path name for the action script file to the runtime value CRS HOME. Upon evaluation CRS HOME provides the absolute path to a location occupied by clusterware manager from which action scripts are stored. In this example the resulting resource profile would contain the entry 

In the example above the evaluation of runtime value CRS HOME is performed at runtime for a particular node thus the path name need not be hardwired into the resource profile. Each runtime value is evaluated with respect to the context in which it appears. For example the runtime values CRS CSS NODENAME and CRS CSS NODENUMBER are evaluated solely with respect to each server and provide the name of the node and the number of the node respectively.

In an embodiment other runtime values are evaluated with respect to the entire cluster. For example the name of the cluster at the time of evaluation is represented by the runtime value CRS CLUSTER NAME. Similarly the size of the cluster its cardinality at the time of evaluation is provided for by the runtime value CRS CLUSTER SIZE. Using the runtime value CRS CLUSTER SIZE an operator may create a resource with the cardinality equal to that of the cluster and then the operator need not reconfigure resources as nodes are added to the cluster and thus the cardinality is increased or as nodes are removed from the cluster and thus the cardinality is decreased .

In an embodiment similar runtime values permit an administrator to configure a server pool within a cluster. A server pool is a logical entity in the cluster that allows an administrator to allocate resources to specific applications and is described in part by the runtime value CRS SERVER POOL SIZE representing the size of the server pool with which the resource is tied. The value of CRS SERVER POOL SIZE changes as the size of the server pool changes when nodes enter or leave the pool. Other values with respect to a server pool include CRS SERVER POOL MIN representing the minimum allowable number of servers in the pool CRS SERVER POOL MAX representing the maximum allowable number of servers in the pool and CRS SERVER POOL IMPORTANCE representing the relative importance of a particular application among the applications assigned to the server pool.

Other runtime values are evaluated with respect to the operating system used by clusterware manager one or more servers and application . In an embodiment the runtime value CRS EXE SUFFIX evaluates to an empty string for a UNIX based operating system and evaluates to the string .exe for the Windows family of operating systems.

Similarly in an embodiment the runtime value CRS SCRIPT SUFFIX evaluates to an empty string for a UNIX based operating system and evaluates to the string .bat for the Windows family of operating systems. Through instantiation of a dynamic parameter that is evaluated at runtime such as a dynamic parameter representing operating system type clusterware manager may support heterogeneous clusters in which nodes may run different operating systems. For example some nodes in a heterogeneous cluster may be UNIX or Linux based while other nodes in the heterogeneous cluster may be Windows based.

In an embodiment each runtime value for a particular resource is evaluated and thus updated only when an explicit action is performed on the particular resource. Explicit actions may include start stop and clean actions and may also include an explicit check action. Implicitly issued check actions such as check actions automatically performed at a particular interval will not be updated. For example while the evaluation of CRS CLUSTER SIZE may be expected to change as servers are added or removed from the cluster and thus an explicit action is necessary to obtain the current value for a particular node the evaluation of CRS CSS NODENAME is not expected to change as the node is likely to retain its original name throughout operation. Thus an implicitly issued check action is expected to obtain the current value of the name of the node without requiring action by clusterware manager .

In an embodiment the syntax of the attribute value pairs permits an attribute to be evaluated with respect to multiple runtime values. For example using runtime values it is possible to create resource profile used by server as a log file that is maintained by clusterware manager . Previously it was shown that the runtime value CRS HOME evaluates to an absolute path back to clusterware manager for each node. Similarly it was shown that the runtime value CRS CSS NODENAME evaluates to the name of the node. Thus a resource profile for each server could include the following attribute value pair 

Use of runtime values that are evaluated in a just in time manner provides a number of benefits in a clustered computing system. Applications servers and resources are freed from the complexity of maintaining critical and changing configuration information. Thus hardware and software makers can ignore these thorny implementation issues.

Similarly the designers of clusterware manager need not deal with the possibility of deferring policy decisions to software modules outside the control of clusterware manager . Under a centralized control provided by clusterware manager the possibility of dueling policies in which separate components make policy decisions with respect to a particular resource is minimized.

Under this model downtime is significantly reduced as each server node operates its own instance of the clustered application while all instances common storage. Thus an errant server operating a clustered database application is significantly hampered from taking down the database should the server fail.

According to one embodiment the techniques described herein are implemented by one or more special purpose computing devices. The special purpose computing devices may be hard wired to perform the techniques or may include digital electronic devices such as one or more application specific integrated circuits ASICs or field programmable gate arrays FPGAs that are persistently programmed to perform the techniques or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware memory other storage or a combination. Such special purpose computing devices may also combine custom hard wired logic ASICs or FPGAs with custom programming to accomplish the techniques. The special purpose computing devices may be desktop computer systems portable computer systems handheld devices networking devices or any other device that incorporates hard wired and or program logic to implement the techniques.

For example is a block diagram that illustrates a computer system upon which an embodiment of the invention may be implemented. Computer system includes a bus or other communication mechanism for communicating information and a hardware processor coupled with bus for processing information. Hardware processor may be for example a general purpose microprocessor.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Such instructions when stored in storage media accessible to processor render computer system into a special purpose machine that is customized to perform the operations specified in the instructions.

Computer system further includes a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor . A storage device such as a magnetic disk or optical disk is provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. According to one embodiment the techniques herein are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term storage media as used herein refers to any media that store data and or instructions that cause a machine to operation in a specific fashion. Such storage media may comprise non volatile media and or volatile media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory . Common forms of storage media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card cable modem satellite modem or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is the invention and is intended by the applicants to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

