---

title: Method and system for resetting a subsystem of a communication device
abstract: Described herein are a method, system, and computer readable medium for resetting a subsystem of a communication device. The method involves utilizing a subsystem error handler to generate a reset request signal indicating the subsystem has experienced an exception; distributing to a software component, residing externally to the subsystem, a status message indicative of a current state of the subsystem; performing a reset of the subsystem in response to the reset request signal; and rebooting the subsystem. When the subsystem can be reset without performing a system wide reset of the communication device, communication device downtime is reduced, which facilitates a positive user experience.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08495422&OS=08495422&RS=08495422
owner: Research In Motion Limited
number: 08495422
owner_city: Waterloo
owner_country: CA
publication_date: 20100611
---
Pursuant to 35 U.S.C. 119 e this application claims the benefit of provisional U.S. Patent Application No. 61 303 925 filed Feb. 12 2010 and entitled Method and System for Resetting a Subsystem of a Communication Device which is hereby incorporated by reference in its entirety.

The present disclosure is directed at a method and system for resetting a subsystem of a communication device. More particularly the present disclosure is directed at a method and system for resetting the subsystem of the communication device without performing a system wide reset on the communication device.

When used in relation to a communication device performing a system wide reset refers to returning all software and hardware of the communication device to a known initial state. While performing a system wide reset is sometimes used to restore stability and usability to the communication device following errors such as certain types of serious software exceptions performing a system wide reset is detrimental in that the communication device is typically rendered unusable while it is rebooting following the system wide reset. It is not uncommon for the communication device to require one or two minutes to reboot which can significantly inconvenience the owner of the communication device. For the sake of simplicity conventional error handling systems in communication devices often default to performing system wide resets instead of utilizing a less conspicuous form of error handling.

Accordingly it would be beneficial to reduce the frequency at which system wide resets occur on communication devices and to introduce to communication devices an error handling system that emphasizes versatility in addition to simplicity.

According to a first aspect there is provided a method for resetting a subsystem of a communication device. The method includes utilizing a subsystem error handler to generate a reset request signal indicating the subsystem has experienced an exception distributing to a software component residing externally to the subsystem a status message indicative of a current state of the subsystem performing a reset of the subsystem in response to the reset request signal and rebooting the subsystem. The subsystem may for example be a communication subsystem of the communication device.

The reset of the subsystem may be a hard reset that is performed by asserting a reset input that is communicatively coupled to the subsystem.

The status message may be one of a plurality of different status messages. Each of the plurality of different status messages can be indicative of a different state of the subsystem. Additionally or in alternative different status messages may be used depending on which particular subsystem s status is being distributed via the status message. For example status messages pertaining to a first subsystem may be formatted in one manner indicative of the first subsystem while status messages pertaining to a second subsystem may be formatted in a second manner indicative of the second subsystem. Alternatively the status messages may be formatted so as not to distinguish between subsystems.

Following rebooting the subsystem a subsequent status message indicating that the subsystem has been rebooted may be distributed to the software component. The software component may take appropriate action in response to the subsequent status message such as commence initialization procedures.

Prior to performing the reset of the subsystem it may be determined whether performing a hard reset of the subsystem without performing a system wide reset on the communication device would cause an exception to occur external to the subsystem. If not a hard reset of the subsystem can be performed in response to the reset request signal without performing a system wide reset by asserting a reset input communicatively coupled to the subsystem. If so the system wide reset can be performed in response to the reset request signal. Determining whether the exception would occur can involve checking whether the software component external to the subsystem has set a system wide reset required flag. Alternatively or additionally determining whether the exception would occur can involve receiving in response to the status message a response from the software component indicating that the hard reset would cause the exception to occur.

The subsystem may have a processing core configured to be reset without resetting a main processor of the communication device such that performing the hard reset of the subsystem does not perform a system wide reset on the communication device.

The method may also include utilizing a system error handler communicatively coupled to the subsystem error handler to detect the reset request signal and utilizing the system error handler to perform the hard reset of the subsystem. The system error handler may send the status messages to the software component and the software component may respond to the system error handler.

One or more status messages indicative of a current state of the subsystem may be distributed to one or more software components that reside externally to the subsystem.

The reset request signal may be generated in response to detection of a catastrophic failure in the subsystem. The reset request signal may also be generated in response to detection of a number of soft errors in excess of a soft error threshold.

Prior to performing a hard reset of the subsystem the subsystem may undergo or attempt to undergo a controlled shutdown.

Prior to rebooting the subsystem software to be executed by the subsystem may be copied from a persistent store into a volatile store such that the subsystem executes the software after rebooting.

A proxy that resides external to the subsystem may be used to communicate on behalf of the subsystem when the subsystem is being reset. While rebooting the subsystem state information sent from the software component may be stored in the proxy. Following rebooting the subsystem the subsystem may be configured according to the state information stored in the proxy.

According to a second aspect there is provided a communication device having a main processor a subsystem having a reset input that is communicatively coupled to the processor and a memory that is communicatively coupled to the processor and to the subsystem. The memory has encoded thereon statements and instructions to configure the communication device to carry out any of the aforedescribed methods.

According to a third aspect there is provided a computer readable medium having encoded thereon statements and instructions to configure a communication device to carry out any of the aforedescribed methods.

Beneficially in the foregoing aspects when a system wide reset of the communication device is not performed but instead one or more particular subsystems are individually reset the communication device typically loses for a very short amount of time e.g. a few seconds the functionality for which the particular subsystems are responsible as opposed to losing often for a longer period of time the functionality of the entire communication device. This provides a more pleasant user experience.

Also beneficially in the foregoing aspects when the status message indicative of the current state of the subsystem is sent to various software components resident on the communication device the software components can take action in response to knowledge of the current state. For example if the subsystem is about to be reset the software components can perform clean up procedures in preparation for the reset. If the subsystem has just rebooted the software components can perform reinitialization procedures. Furthermore certain of the above aspects particularly contribute to the versatility of the exception handling system of the communication device. For example the status message may be formatted to indicate which particular subsystem s status is being distributed via the status message to provide the software component with additional information regarding how to respond to the status message. Additionally or alternatively when the system error handler and the software component are communicatively coupled the software component may respond to the status message if sent from the system error handler or alternatively initiate communication with the system error handler to for example inform the system error handler whether the system wide reset should be performed instead of a subsystem only reset.

It will be appreciated that for simplicity and clarity of illustration where considered appropriate reference numerals may be repeated among the figures to indicate corresponding or analogous elements. In addition numerous specific details are set forth in order to provide a thorough understanding of the example embodiments described herein. However it will be understood by those of ordinary skill in the art that the example embodiments described herein may be practiced without these specific details. In other instances well known methods procedures and components have not been described in detail so as not to obscure the example embodiments described herein. Also the description is not to be considered as limiting the scope of the example embodiments described herein.

The example embodiments described herein generally relate to a mobile wireless communication device also referred to herein as a mobile device or a communication device which can be configured according to an IT policy. It should be noted that the term IT policy in general refers to a collection of IT policy rules in which the IT policy rules can be defined as being either grouped or non grouped and global or per user. The terms grouped non grouped global and per user are defined further below. Examples of applicable communication devices include pagers cellular phones cellular smart phones wireless organizers personal digital assistants computers laptops handheld wireless communication devices wirelessly enabled notebook computers and the like.

The mobile device is a two way communication device with advanced data communication capabilities including the capability to communicate with other mobile devices or computer systems through a network of transceiver stations. The mobile device may also have the capability to allow voice communication. Depending on the functionality provided by the mobile device it may be referred to as a data messaging device a two way pager a cellular telephone with data messaging capabilities a wireless Internet appliance or a data communication device with or without telephony capabilities . To aid the reader in understanding the structure of the mobile device and how it communicates with other devices and host systems reference will now be made to .

Referring first to shown therein is a block diagram of an example embodiment of a mobile device . The mobile device includes a number of components such as a main processor that controls the overall operation of the mobile device . Communication functions including data and voice communications are performed through a communication subsystem . The communication subsystem receives messages from and sends messages to a wireless network . In this example embodiment of the mobile device the communication subsystem is configured in accordance with the Global System for Mobile Communication GSM and General Packet Radio Services GPRS standards. The GSM GPRS wireless network is used worldwide and in recent years Enhanced Data GSM Environment EDGE and Universal Mobile Telecommunications Service UMTS have also been adopted. New standards such as Long Term Evolution LTE are still being developed but it is believed that they will have similarities to the network behavior described herein and it will also be understood by persons skilled in the art that the example embodiments described herein are intended to use any other suitable standards that are developed in the future. The wireless link connecting the communication subsystem with the wireless network represents one or more different Radio Frequency RF channels operating according to defined protocols specified for GSM GPRS communications. With newer network protocols these channels are capable of supporting both circuit switched voice communications and packet switched data communications.

Although the wireless network associated with mobile device is a GSM GPRS wireless network in one example implementation other wireless networks may also be associated with the mobile device in variant implementations. The different types of wireless networks that may be employed include for example data centric wireless networks voice centric wireless networks and dual mode networks that can support both voice and data communications over the same physical base stations. Combined dual mode networks include but are not limited to Code Division Multiple Access CDMA or CDMA2000 networks GSM GPRS networks as mentioned above and future third generation 3G networks like EDGE and UMTS. Some other examples of data centric networks include WiFi 802.11 Mobitex and DataTAC network communication systems. Examples of other voice centric data networks include Personal Communication Systems PCS networks like GSM and Time Division Multiple Access TDMA systems.

The main processor also interacts with additional subsystems such as a Random Access Memory RAM a flash memory a display an auxiliary input output I O subsystem a data port a keyboard a speaker a microphone short range communications and other device subsystems .

Some of the subsystems of the mobile device perform communication related functions whereas other subsystems may provide resident or on device functions. By way of example the display and the keyboard may be used for both communication related functions such as entering a text message for transmission over the network and device resident functions such as a calculator or task list.

The mobile device can send and receive communication signals over the wireless network after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of the mobile device . To identify a subscriber the mobile device requires a SIM RUIM card i.e. Subscriber Identity Module or a Removable User Identity Module to be inserted into a SIM RUIM interface in order to communicate with a network. The SIM card or RUIM is one type of a conventional smart card that can be used to identify a subscriber of the mobile device and to personalize the mobile device among other things. Without the SIM card the mobile device is not fully operational for communication with the wireless network . By inserting the SIM card RUIM into the SIM RUIM interface a subscriber can access all subscribed services. Services may include web browsing and messaging such as e mail voice mail Short Message Service SMS and Multimedia Messaging Services MMS . More advanced services may include point of sale field service and sales force automation. The SIM card RUIM includes a processor and memory for storing information. Once the SIM card RUIM is inserted into the SIM RUIM interface it is coupled to the main processor . In order to identify the subscriber the SIM card RUIM can include some user parameters such as an International Mobile Subscriber Identity IMSI . An advantage of using the SIM card RUIM is that a subscriber is not necessarily bound by any single physical mobile device. The SIM card RUIM may store additional subscriber information for a mobile device as well including datebook or calendar information and recent call information. Alternatively user identification information can also be programmed into the flash memory .

The mobile device is a battery powered device and includes a battery interface for receiving one or more rechargeable batteries . In at least some example embodiments the battery can be a smart battery with an embedded microprocessor. The battery interface is coupled to a regulator not shown which assists the battery in providing power V to the mobile device . Although current technology makes use of a battery future technologies such as micro fuel cells may provide the power to the mobile device .

The mobile device also includes an operating system and software components to which are described in more detail below. The operating system and the software components to that are executed by the main processor are typically stored in a persistent store such as the flash memory which may alternatively be a read only memory ROM or similar storage element not shown . Those skilled in the art will appreciate that portions of the operating system and the software components to such as specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Other software components can also be included as is well known to those skilled in the art.

The subset of software applications that control basic device operations including data and voice communication applications will normally be installed on the mobile device during its manufacture. Other software applications include a message application that can be any suitable software program that allows a user of the mobile device to send and receive electronic messages. Various alternatives exist for the message application as is well known to those skilled in the art. Messages that have been sent or received by the user are typically stored in the flash memory of the mobile device or some other suitable storage element in the mobile device . In at least some example embodiments some of the sent and received messages may be stored remotely from the device such as in a data store of an associated host system that the mobile device communicates with.

The software applications can further include a device state module a Personal Information Manager PIM and other suitable modules not shown . The device state module provides persistence i.e. the device state module ensures that important device data is stored in persistent memory such as the flash memory so that the data is not lost when the mobile device is turned off or loses power.

The PIM includes functionality for organizing and managing data items of interest to the user such as but not limited to e mail contacts calendar events voice mails appointments and task items. A PIM application has the ability to send and receive data items via the wireless network . PIM data items may be seamlessly integrated synchronized and updated via the wireless network with the mobile device subscriber s corresponding data items stored and or associated with a host computer system. This functionality creates a mirrored host computer on the mobile device with respect to such items. This can be particularly advantageous when the host computer system is the mobile device subscriber s office computer system.

The mobile device also includes a connect module and an IT policy module . The connect module implements the communication protocols that are required for the mobile device to communicate with the wireless infrastructure and any host system such as an enterprise system that the mobile device is authorized to interface with. Examples of a wireless infrastructure and an enterprise system are given in which are described in more detail below.

The connect module includes a set of APIs that can be integrated with the mobile device to allow the mobile device to use any number of services associated with the enterprise system. The connect module allows the mobile device to establish an end to end secure authenticated communication pipe with the host system. A subset of applications for which access is provided by the connect module can be used to pass IT policy commands from the host system to the mobile device . This can be done in a wireless or wired manner. These instructions can then be passed to the IT policy module to modify the configuration of the device . Alternatively in some cases the IT policy update can also be done over a wired connection.

The IT policy module receives IT policy data that encodes the IT policy. The IT policy module then ensures that the IT policy data is authenticated by the mobile device . The IT policy data can then be stored in the flash memory in its native form. After the IT policy data is stored a global notification can be sent by the IT policy module to all of the applications residing on the mobile device . Applications for which the IT policy may be applicable then respond by reading the IT policy data to look for IT policy rules that are applicable.

The IT policy module can include a parser not shown which can be used by the applications to read the IT policy rules. In some cases another module or application can provide the parser. Grouped IT policy rules described in more detail below are retrieved as byte streams which are then sent recursively in a sense into the parser to determine the values of each IT policy rule defined within the grouped IT policy rule. In at least some example embodiments the IT policy module can determine which applications are affected by the IT policy data and send a notification to only those applications. In either of these cases for applications that aren t running at the time of the notification the applications can call the parser or the IT policy module when they are executed to determine if there are any relevant IT policy rules in the newly received IT policy data.

All applications that support rules in the IT Policy are coded to know the type of data to expect. For example the value that is set for the WEP User Name IT policy rule is known to be a string therefore the value in the IT policy data that corresponds to this rule is interpreted as a string. As another example the setting for the Set Maximum Password Attempts IT policy rule is known to be an integer and therefore the value in the IT policy data that corresponds to this rule is interpreted as such.

After the IT policy rules have been applied to the applicable applications or configuration files the IT policy module sends an acknowledgement back to the host system to indicate that the IT policy data was received and successfully applied.

Other types of software applications can also be installed on the mobile device . These software applications can be third party applications which are added after the manufacture of the mobile device . Examples of third party applications include games calculators utilities etc.

The additional applications can be loaded onto the mobile device through at least one of the wireless network the auxiliary I O subsystem the data port the short range communications subsystem or any other suitable device subsystem . This flexibility in application installation increases the functionality of the mobile device and may provide enhanced on device functions communication related functions or both. For example secure communication applications may enable electronic commerce functions and other such financial transactions to be performed using the mobile device .

The data port enables a subscriber to set preferences through an external device or software application and extends the capabilities of the mobile device by providing for information or software downloads to the mobile device other than through a wireless communication network. The alternate download path may for example be used to load an encryption key onto the mobile device through a direct and thus reliable and trusted connection to provide secure device communication.

The data port can be any suitable port that enables data communication between the mobile device and another computing device. The data port can be a serial or a parallel port. In some instances the data port can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery of the mobile device .

The short range communications subsystem provides for communication between the mobile device and different systems or devices without the use of the wireless network . For example the subsystem may include an infrared device and associated circuits and components for short range communication. Examples of short range communication standards include standards developed by the Infrared Data Association IrDA Bluetooth and the 802.11 family of standards developed by IEEE.

In use a received signal such as a text message an e mail message or web page download will be processed by the communication subsystem and input to the main processor . The main processor will then process the received signal for output to the display or alternatively to the auxiliary I O subsystem . A subscriber may also compose data items such as e mail messages for example using the keyboard in conjunction with the display and possibly the auxiliary I O subsystem . The auxiliary subsystem may include devices such as a touch screen mouse track ball infrared fingerprint detector or a roller wheel with dynamic button pressing capability. The keyboard is preferably an alphanumeric keyboard and or telephone type keypad. However other types of keyboards may also be used. A composed item may be transmitted over the wireless network through the communication subsystem .

For voice communications the overall operation of the mobile device is substantially similar except that the received signals are output to the speaker and signals for transmission are generated by the microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem can also be implemented on the mobile device . Although voice or audio signal output is accomplished primarily through the speaker the display can also be used to provide additional information such as the identity of a calling party duration of a voice call or other voice call related information.

Referring now to an example block diagram of the communication subsystem component is shown. The communication subsystem includes a receiver a transmitter as well as associated components such as one or more embedded or internal antenna elements and Local Oscillators LOs and a processing module such as a Digital Signal Processor DSP in conjunction with a microcontroller C collectively the DSP and C pair is a processing core hereinafter referred to as the communication core . The particular design of the communication subsystem is dependent upon the communication network with which the mobile device is intended to operate. Thus it should be understood that the design illustrated in serves only as one example.

Signals received by the antenna through the wireless network are input to the receiver which may perform such common receiver functions as signal amplification frequency down conversion filtering channel selection and analog to digital A D conversion. A D conversion of a received signal allows more complex communication functions such as demodulation and decoding to be performed in the communication core . In a similar manner signals to be transmitted are processed including modulation and encoding by the communication core . These processed signals are input to the transmitter for digital to analog D A conversion frequency up conversion filtering amplification and transmission over the wireless network via the antenna . The communication core not only processes communication signals but also provides for receiver and transmitter control. For example the gains applied to communication signals in the receiver and the transmitter may be adaptively controlled through automatic gain control algorithms implemented in the communication core .

The wireless link between the mobile device and the wireless network can contain one or more different channels typically different RF channels and associated protocols used between the mobile device and the wireless network . An RF channel is a limited resource that must be conserved typically due to limits in overall bandwidth and limited battery power of the mobile device .

When the mobile device is fully operational the transmitter is typically keyed or turned on only when it is transmitting to the wireless network and is otherwise turned off to conserve resources. Similarly the receiver is periodically turned off to conserve power until it is needed to receive signals or information if at all during designated time periods.

Referring now to a block diagram of an example implementation of a node of the wireless network is shown. In practice the wireless network comprises one or more nodes . In conjunction with the connect module the mobile device can communicate with the node within the wireless network . In the example implementation of the node is configured in accordance with General Packet Radio Service GPRS and Global Systems for Mobile GSM technologies. The node includes a base station controller BSC with an associated tower station a Packet Control Unit PCU added for GPRS support in GSM a Mobile Switching Center MSC a Home Location Register HLR a Visitor Location Registry VLR a Serving GPRS Support Node SGSN a Gateway GPRS Support Node GGSN and a Dynamic Host Configuration Protocol DHCP . This list of components is not meant to be an exhaustive list of the components of every node within a GSM GPRS network but rather a list of components that are commonly used in communications through the network .

In a GSM network the MSC is coupled to the BSC and to a landline network such as a Public Switched Telephone Network PSTN to satisfy circuit switched requirements. The connection through the PCU the SGSN and the GGSN to a public or private network Internet also referred to herein generally as a shared network infrastructure represents the data path for GPRS capable mobile devices. In a GSM network extended with GPRS capabilities the BSC also contains the Packet Control Unit PCU that connects to the SGSN to control segmentation radio channel allocation and to satisfy packet switched requirements. To track the location of the mobile device and availability for both circuit switched and packet switched management the HLR is shared between the MSC and the SGSN . Access to the VLR is controlled by the MSC .

The station is a fixed transceiver station and together with the BSC form fixed transceiver equipment. The fixed transceiver equipment provides wireless network coverage for a particular coverage area commonly referred to as a cell . The fixed transceiver equipment transmits communication signals to and receives communication signals from mobile devices within its cell via the station . The fixed transceiver equipment normally performs such functions as modulation and possibly encoding and or encryption of signals to be transmitted to the mobile device in accordance with particular usually predetermined communication protocols and parameters under control of its controller. The fixed transceiver equipment similarly demodulates and possibly decodes and decrypts if necessary any communication signals received from the mobile device within its cell. Communication protocols and parameters may vary between different nodes. For example one node may employ a different modulation scheme and operate at different frequencies than other nodes.

For all mobile devices registered with a specific network permanent configuration data such as a user profile is stored in the HLR . The HLR also contains location information for each registered mobile device and can be queried to determine the current location of a mobile device. The MSC is responsible for a group of location areas and stores the data of the mobile devices currently in its area of responsibility in the VLR . Further the VLR also contains information on mobile devices that are visiting other networks. The information in the VLR includes part of the permanent mobile device data transmitted from the HLR to the VLR for faster access. By moving additional information from a remote HLR node to the VLR the amount of traffic between these nodes can be reduced so that voice and data services can be provided with faster response times and at the same time requiring less use of computing resources.

The SGSN and the GGSN are elements added for GPRS support namely packet switched data support within GSM. The SGSN and the MSC have similar responsibilities within the wireless network by keeping track of the location of each mobile device . The SGSN also performs security functions and access control for data traffic on the wireless network . The GGSN provides internetworking connections with external packet switched networks and connects to one or more SGSN s via an Internet Protocol IP backbone network operated within the network . During normal operations a given mobile device must perform a GPRS Attach to acquire an IP address and to access data services. This requirement is not present in circuit switched voice channels as Integrated Services Digital Network ISDN addresses are used for routing incoming and outgoing calls. Currently all GPRS capable networks use private dynamically assigned IP addresses thus requiring the DHCP server connected to the GGSN . There are many mechanisms for dynamic IP assignment including using a combination of a Remote Authentication Dial In User Service RADIUS server and a DHCP server. Once the GPRS Attach is complete a logical connection is established from a mobile device through the PCU and the SGSN to an Access Point Node APN within the GGSN . The APN represents a logical end of an IP tunnel that can either access direct Internet compatible services or private network connections. The APN also represents a security mechanism for the network insofar as each mobile device must be assigned to one or more APNs and mobile devices cannot exchange data without first performing a GPRS Attach to an APN that it has been authorized to use. The APN may be considered to be similar to an Internet domain name such as myconnection.wireless.com .

Once the GPRS Attach operation is complete a tunnel is created and all traffic is exchanged within standard IP packets using any protocol that can be supported in IP packets. This includes tunneling methods such as IP over IP as in the case with some IPSecurity IPsec connections used with Virtual Private Networks VPN . These tunnels are also referred to as Packet Data Protocol PDP Contexts and there are a limited number of these available in the network . To maximize use of the PDP Contexts the network will run an idle timer for each PDP Context to determine if there is a lack of activity. When a mobile device is not using its PDP Context the PDP Context can be de allocated and the IP address returned to the IP address pool managed by the DHCP server .

Referring now to shown therein is a block diagram illustrating components of an example configuration of a host system that the mobile device can communicate with in conjunction with the connect module . The host system will typically be a corporate enterprise or other local area network LAN but may also be a home office computer or some other private system for example in variant implementations. In this example shown in the host system is depicted as a LAN of an organization to which a user of the mobile device belongs. Typically a plurality of mobile devices can communicate wirelessly with the host system through one or more nodes of the wireless network .

The host system comprises a number of network components connected to each other by a network . For instance a user s desktop computer with an accompanying cradle for the user s mobile device is situated on a LAN connection. The cradle for the mobile device can be coupled to the computer by a serial or a Universal Serial Bus USB connection for example. Other user computers are also situated on the network and each may or may not be equipped with an accompanying cradle . The cradle facilitates the loading of information e.g. PIM data private symmetric encryption keys to facilitate secure communications from the user computer to the mobile device and may be particularly useful for bulk information updates often performed in initializing the mobile device for use. The information downloaded to the mobile device may include certificates used in the exchange of messages.

It will be understood by persons skilled in the art that the user computers will typically also be connected to other peripheral devices such as printers etc. which are not explicitly shown in . Furthermore only a subset of network components of the host system are shown in for ease of exposition and it will be understood by persons skilled in the art that the host system will comprise additional components that are not explicitly shown in for this example configuration. More generally the host system may represent a smaller part of a larger network not shown of the organization and may comprise different components and or be arranged in different topologies than that shown in the example embodiment of .

To facilitate the operation of the mobile device and the wireless communication of messages and message related data between the mobile device and components of the host system a number of wireless communication support components can be provided. In some implementations the wireless communication support components can include a message management server a mobile data server a contact server and a device manager module . The device manager module includes an IT Policy editor and an IT user property editor as well as other software components for allowing an IT administrator to configure the mobile devices . In an alternative example embodiment there may be one editor that provides the functionality of both the IT policy editor and the IT user property editor . The support components also include a data store and an IT policy server . The IT policy server includes a processor a network interface and a memory unit . The processor controls the operation of the IT policy server and executes functions related to the standardized IT policy as described below. The network interface allows the IT policy server to communicate with the various components of the host system and the mobile devices . The memory unit can store functions used in implementing the IT policy as well as related data. Those skilled in the art know how to implement these various components. Other components may also be included as is well known to those skilled in the art. Further in some implementations the data store can be part of any one of the servers.

In this example embodiment the mobile device communicates with the host system through node of the wireless network and a shared network infrastructure such as a service provider network or the public Internet. Access to the host system may be provided through one or more routers not shown and computing devices of the host system may operate from behind a firewall or proxy server . The proxy server provides a secure node and a wireless internet gateway for the host system . The proxy server intelligently routes data to the correct destination server within the host system .

In some implementations the host system can include a wireless VPN router not shown to facilitate data exchange between the host system and the mobile device . The wireless VPN router allows a VPN connection to be established directly through a specific wireless network to the mobile device . The wireless VPN router can be used with the Internet Protocol IP Version 6 IPV6 and IP based wireless networks. This protocol can provide enough IP addresses so that each mobile device has a dedicated IP address making it possible to push information to a mobile device at any time. An advantage of using a wireless VPN router is that it can be an off the shelf VPN component and does not require a separate wireless gateway and separate wireless infrastructure. A VPN connection can preferably be a Transmission Control Protocol TCP IP or User Datagram Protocol UDP IP connection for delivering the messages directly to the mobile device in this alternative implementation.

Messages intended for a user of the mobile device are initially received by a message server of the host system . Such messages may originate from any number of sources. For instance a message may have been sent by a sender from the computer within the host system from a different mobile device not shown connected to the wireless network or a different wireless network or from a different computing device or other device capable of sending messages via the shared network infrastructure possibly through an application service provider ASP or Internet service provider ISP for example.

The message server typically acts as the primary interface for the exchange of messages particularly e mail messages within the organization and over the shared network infrastructure . Each user in the organization that has been set up to send and receive messages is typically associated with a user account managed by the message server . Some example implementations of the message server include a Microsoft Exchange server a Lotus Domino server a Novell Groupwise server or another suitable mail server installed in a corporate environment. In some implementations the host system may comprise multiple message servers . The message server may also be adapted to provide additional functions beyond message management including the management of data associated with calendars and task lists for example.

When messages are received by the message server they are typically stored in a data store associated with the message server . In at least some example embodiments the data store may be a separate hardware unit such as data store that the message server communicates with. Messages can be subsequently retrieved and delivered to users by accessing the message server . For instance an e mail client application operating on a user s computer may request the e mail messages associated with that user s account stored on the data store associated with the message server . These messages are then retrieved from the data store and stored locally on the computer . The data store associated with the message server can store copies of each message that is locally stored on the mobile device . Alternatively the data store associated with the message server can store all of the messages for the user of the mobile device and only a smaller number of messages can be stored on the mobile device to conserve memory. For instance the most recent messages i.e. those received in the past two to three months for example can be stored on the mobile device .

When operating the mobile device the user may wish to have e mail messages retrieved for delivery to the mobile device . The message application operating on the mobile device may also request messages associated with the user s account from the message server . The message application may be configured either by the user or by an administrator possibly in accordance with an organization s information technology IT policy to make this request at the direction of the user at some pre defined time interval or upon the occurrence of some pre defined event. In some implementations the mobile device is assigned its own e mail address and messages addressed specifically to the mobile device are automatically redirected to the mobile device as they are received by the message server .

The message management server can be used to specifically provide support for the management of messages such as e mail messages that are to be handled by mobile devices. Generally while messages are still stored on the message server the message management server can be used to control when if and how messages are sent to the mobile device . The message management server also facilitates the handling of messages composed on the mobile device which are sent to the message server for subsequent delivery.

For example the message management server may monitor the user s mailbox e.g. the message store associated with the user s account on the message server for new e mail messages and apply user definable filters to new messages to determine if and how the messages are relayed to the user s mobile device . The message management server may also compress and encrypt new messages e.g. using an encryption technique such as Data Encryption Standard DES Triple DES or Advanced Encryption Standard AES and push them to the mobile device via the shared network infrastructure and the wireless network . The message management server may also receive messages composed on the mobile device e.g. encrypted using Triple DES decrypt and decompress the composed messages re format the composed messages if desired so that they will appear to have originated from the user s computer and re route the composed messages to the message server for delivery.

Certain properties or restrictions associated with messages that are to be sent from and or received by the mobile device can be defined e.g. by an administrator in accordance with IT policy and enforced by the message management server . These may include whether the mobile device may receive encrypted and or signed messages minimum encryption key sizes whether outgoing messages must be encrypted and or signed and whether copies of all secure messages sent from the mobile device are to be sent to a pre defined copy address for example.

The message management server may also be adapted to provide other control functions such as only pushing certain message information or pre defined portions e.g. blocks of a message stored on the message server to the mobile device . For example in some cases when a message is initially retrieved by the mobile device from the message server the message management server may push only the first part of a message to the mobile device with the part being of a pre defined size e.g. 2 KB . The user can then request that more of the message be delivered in similar sized blocks by the message management server to the mobile device possibly up to a maximum pre defined message size. Accordingly the message management server facilitates better control over the type of data and the amount of data that is communicated to the mobile device and can help to minimize potential waste of bandwidth or other resources.

The mobile data server encompasses any other server that stores information that is relevant to the corporation. The mobile data server may include but is not limited to databases online data document repositories customer relationship management CRM systems or enterprise resource planning ERP applications.

The contact server can provide information for a list of contacts for the user in a similar fashion as the address book on the mobile device . Accordingly for a given contact the contact server can include the name phone number work address and e mail address of the contact among other information. The contact server can also provide a global address list that contains the contact information for all of the contacts associated with the host system .

It will be understood by persons skilled in the art that the message management server the mobile data server the contact server the device manager module the data store and the IT policy server do not need to be implemented on separate physical servers within the host system . For example some or all of the functions associated with the message management server may be integrated with the message server or some other server in the host system . Alternatively the host system may comprise multiple message management servers particularly in variant implementations where a large number of mobile devices need to be supported.

Alternatively in some example embodiments the IT policy server can provide the IT policy editor the IT user property editor and the data store . In some cases the IT policy server can also provide the device manager module . The processor of the IT policy server can be used to perform the various steps of a method for providing IT policy data that is customizable on a per user basis. The processor can execute the editors and . In some cases the functionality of the editors and can be provided by a single editor. In some cases the memory unit can provide the data store .

The device manager module provides an IT administrator with a graphical user interface with which the IT administrator interacts to configure various settings for the mobile devices . As mentioned the IT administrator can use IT policy rules to define behaviors of certain applications on the mobile device that are permitted such as phone web browser or Instant Messenger use. The IT policy rules can also be used to set specific values for configuration settings that an organization requires on the mobile devices such as auto signature text WLAN VoIP VPN configuration security requirements e.g. encryption algorithms password rules etc. specifying themes or applications that are allowed to run on the mobile device and the like.

Referring now to there is shown a block diagram of a variety of components executed by the communication core of the communication subsystem and the main processor including those components utilized for error handling according to one example embodiment. The various components depicted in beneficially allow the communication subsystem and more particularly the communication core of the communication subsystem to be reset in response to exceptions that the communication subsystem experiences. Instead of performing a system wide reset on the mobile device from which the mobile device may require one or two minutes to reboot according to an example embodiment the communication subsystem alone may be reset and can complete rebooting in a very short amount of time e.g. a few seconds . Consequently instead of all the subsystems of the mobile device being rendered non usable for e.g. one or two minutes as occurs when a system wide reset is performed the mobile device loses for a few seconds only the functionality for which the communication subsystem is responsible e.g. telephone calls data transmissions when the communication subsystem alone is reset. This significantly improves a user s experience using the mobile device as the user often will not notice any difference in the behavior of the mobile device when only the communication subsystem is unusable for a few seconds.

In the main processor and the communication subsystem each execute a variety of software components . The main processor executes application software components while the communication subsystem executes communication software components . The application software components include software responsible for interfacing with the various subsystems to of the mobile device . The communication software components include components responsible for modulating and demodulating the communication signals sent to and from the wireless network and for communicating parameters such as wireless signal strength and the name of the wireless network to the application software components .

The communication subsystem has a communication subsystem error handler CSEH that can be called by any of the communication software components when for example one of the communication software components experiences an exception. The CSEH can communicate with a system error handler SEH . In an example embodiment in which the CSEH is executing on the communication core and the SEH is executing on the main processor communication between the CSEH and the SEH is done between processing cores or intercore . Consequently a message sent from the CSEH to the SEH is first sent from the CSEH to a portion of the operating system executing on the communication core . The portion of the operating system executing on the communication core then conveys the message to the main processor by sending an interrupt signal not shown to a portion of the operating system that is executing on the main processor . The main processor then conveys the message originally sent by the CSEH to the SEH . The SEH can analogously send a message to the CSEH . In this way the CSEH and the SEH are communicatively coupled. Other known methods of intercore communication can alternatively be utilized. For example the CSEH and SEH may communicate directly with each other synchronously or asynchronously using polling or interrupts respectively. Alternatively different operating systems may be executed by the communication core and the main processor . The application software components and the communication software components may similarly engage in intercore communication by sending messages via the operating system as well.

Optionally one of the application software components is a radio proxy that can communicate with the other application software components on behalf of the communication subsystem . The radio proxy caches information from the communication subsystem that can be accessed by software components resident external to the communication subsystem externally resident software components such as the application software components . Consequently using the radio proxy reduces the frequency at which the externally resident software components establish sessions with the communication subsystem .

The main processor also has an applications subsystem error handler ASEH that can be called by any of the application software components when for example any of the application software components experiences an exception. The ASEH can perform error handling as required in response to an exception experienced by any of the application software components as is known to persons skilled in the art. The ASEH can bi directionally communicate with the SEH and the application software components can communicate with the SEH via the ASEH .

In an example embodiment the SEH is the component responsible for triggering a reset of the communication subsystem without triggering a system wide reset. The SEH can be a component that forms part of the operating system or a component external to the operating system . To reset only the communication subsystem the SEH sends a reset signal to the operating system . The operating system subsequently instructs the main processor to assert a hardware reset not shown that is coupled to the communication subsystem and that performs a hard reset of the communication subsystem . By hard reset it is meant that the communication subsystem is reset without first performing any controlled shutdown procedure. Any communication sessions that the communications subsystem may have open with the application software components for example will be immediately and abruptly terminated when the hard reset is performed. In an example embodiment the communication subsystem begins to reboot when the SEH releases the reset signal which subsequently causes the main processor to release the hardware reset. However in alternative example embodiments the communication subsystem may begin to reboot a certain length of time after the main processor initially asserts the hardware reset regardless of when the main processor releases the hardware reset.

Referring now to there is shown a flowchart depicting a method to reset only the communication subsystem of the mobile device without performing a system wide reset of the mobile device according to an example embodiment. The method begins at block and proceeds to block where the CSEH generates a reset request signal which is transmitted to the SEH as one of the messages according to the intercore communication protocol described above. Generation of the reset request signal occurs in response to the communication subsystem experiencing an exception and that the CSEH has determined the communication subsystem should be reset so as to recover from the exception.

Second the CSEH may generate the reset request signal if it counts a number of soft errors in excess of a soft error threshold block . In contrast to a catastrophic failure a soft error refers to an error that may be correctable by using known error correction methods such as resetting the particular software component responsible for the soft error without resetting the communication subsystem . However if after employing these error correction methods the soft errors continue the communication subsystem should be reset according to an example embodiment. Accordingly the CSEH monitors the number of soft errors that the communication subsystem experiences during a given time period compares the number of soft errors to the soft error threshold and generates the reset request signal if the soft error threshold is exceeded. In an example embodiment the soft error threshold is one soft error during any ten minute period.

Following generation of the reset request signal in an example embodiment the CSEH attempts to perform a controlled or graceful shutdown of the communication subsystem block . A controlled shutdown of the communication subsystem involves the CSEH sending shutdown instructions to the communication software components in communication with the CSEH such as those communication software components responsible for wireless and audio functionality. Wireless functionality refers to transmission of the communication signals to and from the wireless network while audio functionality refers to communication with the microphone and the speaker so as to facilitate voice telephone calls for example. Performing a controlled shutdown prior to performing the hard reset of the communication subsystem is beneficial in that if a connection with the wireless network is interrupted because of a controlled shutdown the carrier that manages the wireless network will not classify the interruption as a dropped call whereas if the connection is interrupted because the communication subsystem is undergoing a hard reset the carrier does classify the disconnection as a dropped call. Performing a controlled shutdown also allows any cached information on the communication subsystem to be flushed prior to resetting and to ensure that the antenna element ceases transmitting prior to the reset so that RF communications standards are not contravened.

The reset request signal indicates that the communication subsystem has experienced some type of exception or failure and should be reset according to an example embodiment. In an example embodiment the reset request signal is sent to the SEH as one of the messages according to the intercore communication protocol described above in this way the SEH detects the reset request signal block . In an alternative example embodiment the reset request signal may be sent to a watchdog which upon receipt of the reset request signal may directly reset the communication subsystem .

Some although not necessarily all of the externally resident software components may subscribe to receive status updates hereinafter interchangeably referred to as status messages from the SEH that describe the current state of the communication subsystem the subset of the externally resident software components that receive these status updates from the SEH are hereinafter referred to as the subscribed components . In an example embodiment following receipt of the reset request signal the SEH retrieves debugging information in the form of activity logs from an internal memory of the communication subsystem to facilitate subsequent debugging. The SEH also distributes to all of the subscribed components a status update block indicating that a failure has occurred in the communication subsystem that the communication subsystem has requested to be reset by sending the reset request signal and that the communication subsystem will shortly be reset. In an example embodiment this status update is called a COMM STATE RESET REQ message. When the subscribed components receive the COMM STATE RESET REQ message and until they receive a subsequent status message from the SEH indicating that the communication subsystem has rebooted they know not to attempt communication with the communication subsystem . The subscribed components in an example embodiment may include components among the following at least some of the application software components the data connection management system and its clients such as a wireless access family WAF manager a tunnel manager module used to manage tunnels between the application software components and the wireless network and an IP modem the radio proxy those components responsible for implementing GAN UMA Generic Access Network Unlicensed Mobile Access functionality such as the WAS WLAN Access Stratum layer and the SIM RUIM interface .

A set amount of time typically a few milliseconds after the CSEH attempts to perform a controlled shutdown and regardless of whether the controlled shutdown is successful the SEH performs a hard reset on the communication subsystem block . One example embodiment of a method for performing the hard reset is depicted in . At block of the SEH sends the reset signal and the operating system consequently asserts the hard reset input to the communication subsystem . When the hard reset is asserted all communications with the communication subsystem are terminated regardless of their current state.

When the communication subsystem is reset the SEH distributes to the subscribed components a status update indicating that the communication subsystem is currently off and is unable to respond to messages block in an example embodiment this status update is called a COMM STATE OFF message.

In response to one or both of the COMM STATE RESET REQ and COMM STATE OFF messages in an example embodiment the subscribed components execute clean up procedures in preparation for the communication subsystem resetting. Clean up procedures refers to those procedures undertaken in response to a shutdown or an imminent shutdown of the communication subsystem . For example the radio proxy modifies any cached copies of data it has so as to ensure that the data it transmits to its clients accurately reflects the fact that the communication subsystem is being reset e.g. signal strength will be set to zero during the reset the WAF manager will set WAF status on the communication subsystem to deactivated and will notify its clients that wireless access has been deactivated and the tunnel manager module will close any open sockets and inform its clients that tunneling will not be permitted until the communication subsystem reboots. Any one or more of the subscribed components may execute the clean up procedures in response solely to either the COMM STATE RESET REQ message or the COMM STATE OFF message or they may execute some clean up procedures in response to the COMM STATE RESET REQ message and additional clean up procedures in response to the COMM STATE OFF message.

The failure experienced by the communication subsystem and which is the cause of the reset may be caused by execution of corrupt software block . If so the main processor may copy the software executed by the communication subsystem from the flash memory into RAM block so that when the communication subsystem reboots it executes software that has been newly copied into RAM from a reliable repository and that is not corrupt. In order to determine whether the reset is due to corrupt software the CSEH can monitor how many hard resets of the communication subsystem have occurred over a set period of time in an example embodiment. If the number of hard resets is in excess of a hard reset threshold then the CSEH may conclude that the communication subsystem is failing because it is repeatedly executing the same corrupt software in RAM and it may consequently overwrite the corrupt software in RAM with the uncorrupt software stored in the flash memory . Whether the software being executed by the communication subsystem is likely corrupt can also be determined in alternative ways. For example the CSEH may perform a CRC check of the software being executed by the communication subsystem alternatively the CSEH can send a failure code detailing the nature of the exception to the SEH e.g. illegal instruction exception or misaligned access exception along with the reset request signal to allow the SEH to determine based on the failure code whether the software on the communication subsystem is likely corrupt.

In an alternative example embodiment the CSEH does not check to determine whether the software executed by the communication subsystem is likely corrupt and instead the main processor simply always overwrites the software in RAM with the uncorrupt software stored in the flash memory .

Referring again to and also to following resetting the communication subsystem the SEH instructs the communication subsystem to reboot block . To do this the SEH releases the reset signal and the operating system consequently instructs the main processor to release the hardware reset of the communication subsystem block . After the hardware reset is released the communication subsystem begins to reboot by executing the communication subsystem software that is resident in RAM block . In an example embodiment which utilizes the radio proxy the radio proxy may contain state information that it obtained when communicating with one of the externally resident software components such as one of the application software components on behalf of the communication subsystem while the communication subsystem was off block . If so after the communication subsystem reboots the radio proxy transmits the state information to the communication subsystem and in doing so configures the communication subsystem block . Configuring the communication subsystem in this way is beneficial in that if the radio proxy has completed communicating with one of the software components external to the communication subsystem that software component will believe that the communication subsystem is in a certain state by virtue of having communicated with the radio proxy . By updating the state of the communication subsystem the radio proxy helps to ensure that the state of the communication subsystem is up to date.

Following rebooting of the communication subsystem the SEH distributes to all of the subscribed components a status update indicating that the communication subsystem has rebooted and is ready to respond to messages block . In an example embodiment this status update is the COMM STATE RESTARTED message. Upon receiving the COMM STATE RESTARTED message the subscribed components perform their own re initialization procedures in preparation for again establishing sessions with the communication subsystem . While in an example embodiment three status messages are utilized in alternative any number of status messages can be utilized to provide information to the subscribed components as desired to enable them to react to the different states of the subsystem that is being reset. Such functionality increases the versatility of the error handling system.

Referring now to there is shown a flowchart depicting a method to reset only the communication subsystem of the mobile device without performing a system wide reset of the mobile device according to a second example embodiment. In the example embodiment of while the communication subsystem can sometimes be reset without performing a system wide reset occasionally a system wide reset is performed. This is in contrast to the example embodiment described in relation to above in which system wide resets are avoided.

Blocks and of correspond to blocks and of . In contrast to the example embodiment of at block the SEH determines whether a system wide reset is to be performed on the mobile device in lieu of a reset on the communication subsystem only. For example a system wide reset is performed when the reset request signal is sent and one of the subscribed components has initiated an intercore function call with one of the communication software components that communication software component has not yet returned a response and the subscribed component is not configured to perform the clean up and re initialization procedures that are required when the intercore function call is interrupted by a reset of only the communication subsystem . To implement this functionality prior to completing the intercore function call the subscribed component sets a system wide reset required flag in the SEH when establishing a session with the communication subsystem and clears the system wide reset required flag following completion of its session with the communication subsystem . Prior to sending the reset signal to the operating system the SEH checks to see whether the system wide reset required flag is set. If so the SEH performs a system wide reset block on the mobile device and the mobile device subsequently reboots block according to methods known in the art. If the system wide reset required flag is not set the SEH instead resets only the communication subsystem block and distributes the COMM STATE OFF status message to the subscribed components block . The communication subsystem subsequently reboots block following which the SEH distributes the COMM STATE RESTARTED status message to the subscribed components block . Blocks to illustrate an example of a method that corresponds to that described in respect of blocks to of above.

Alternatively instead of setting the system wide reset flag the subscribed component that is currently in intercore communication with the communication subsystem can in response to the COMM STATE RESET REQ message send a signal to the SEH to inform it that a reset of only the communication subsystem cannot be properly performed and that a system wide reset will instead be required. In an example embodiment in addition to sending a signal to the SEH in response to the COMM STATE RESET REQ signal the subscribed component can also send a signal to the SEH in response to any of the other status messages as desired.

Beneficially the radio proxy can be used in conjunction with the example embodiment of to reduce the frequency with which system wide resets are performed. In this example embodiment the radio proxy caches data outside of the communication subsystem and can therefore respond to queries from the externally resident software components without having to engage in intercore communication with the communication subsystem . Consequently when using the radio proxy to respond to queries from the externally resident software components the system wide reset required flag is not set at all or is set for a shorter period of time than when the externally resident software component establishes direct contact with the communication subsystem and the likelihood of a system wide reset occurring is accordingly reduced.

The foregoing example embodiments may be encoded on to a computer readable medium that is readable by the main processor the communication core of the communication subsystem or by any other suitably configured controller or processor so as to configure the mobile device to have the functionality described above. The computer readable medium may be the flash memory the RAM or any other suitable disc or semiconductor based memory.

For the sake of convenience and ease of understanding the example embodiments described above focus on resetting only the communication subsystem without performing a system wide reset. However in alternative example embodiments any of the subsystems of the mobile device suitably configured can be reset in an analogous manner as the communication subsystem is in an example embodiment resulting in the mobile device having a versatile error handling system. A subsystem that has its own subsystem error handler configured to send the reset request signal to the SEH and that is configured to be reset following transmittal of the reset signal by the SEH can be similarly reset as the communication subsystem is above. For example the software components of the subsystem being reset may be executing on a dedicated processing core separate from the main processor . This allows the SEH to perform a hard reset of this subsystem alone.

Alternatively the software components of the subsystem to be reset may be executing on the main processor . For example in the application software components ASEH and SEH all execute on the main processor . The SEH may reset the application software components according to a method analogous to that of but in the example embodiment of effectively only a system wide reset would be possible since from the perspective of a user resetting the main processor is tantamount to a system wide reset. Other subsystems that may be reset according to the aforedescribed methods include any of the subsystems to .

In the foregoing embodiments the status messages that the SEH sends are all prefixed with COMM STATE. The COMM STATE prefix informs the subscribed components that it is the communication subsystem in particular whose state is changing. In an alternative embodiment the SEH may distribute status messages having alternative prefixes. For example the SEH may distribute status messages prefixed using a more generic prefix such as SUB SYS example status messages in this case are SUB SYS STATE RESET REQ and SUB SYS STATE OFF. A more generic prefix such as SUB SYS can be used when the subscribed components do not benefit from having information about which particular subsystem is being reset or undergoing other state transitions. In a further alternative embodiment the SEH may send status messages having different prefixes that depend on which subsystem is undergoing state transitions. For example if the communication subsystem is being reset the status messages may be prefixed using COMM STATE whereas if the auxiliary input output I O subsystem is being reset the status messages may be prefixed with AUX STATE. The SEH may send status messages prefixed in any number of ways thereby facilitating system versatility.

For the sake of convenience the example embodiments above are described as various interconnected functional blocks or distinct software modules. This is not necessary however and there may be cases where these functional blocks or modules are equivalently aggregated into a single logic device program or operation with unclear boundaries. In any event the functional blocks and software modules or features of the flexible interface can be implemented by themselves or in combination with other operations in either hardware or software.

While particular example embodiments have been described in the foregoing it is to be understood that other embodiments are possible and are intended to be included herein. It will be clear to any person skilled in the art that modifications of and adjustments to the foregoing example embodiments not shown are possible.

