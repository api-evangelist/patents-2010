---

title: Providing a timeline control in a multi-tenant database environment
abstract: A system and method for providing a timeline control in a multi-tenant database system. In one embodiment, a method includes determining a plurality of entitlement processes and milestones that are to be enforced, where each entitlement process includes one or more actions, and where each action is associated with a corresponding milestone. The method further includes displaying a timeline control window that shows one or more milestones for an entitlement process, and updating the timeline control window as the status of the entitlement process changes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09230224&OS=09230224&RS=09230224
owner: salesforce.com, inc.
number: 09230224
owner_city: San Francisco
owner_country: US
publication_date: 20101223
---
This application claims the benefit of U.S. Provisional Patent Application 61 333 700 entitled Methods and Systems for Displaying a Timeline Control in a Multi Tenant Database Environment filed May 11 2010 the entire contents of which are incorporated herein by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The subject matter discussed in the background section should not be assumed to be prior art merely as a result of its mention in the background section. Similarly a problem mentioned in the background section or associated with the subject matter of the background section should not be assumed to have been previously recognized in the prior art. The subject matter in the background section merely represents different approaches which in and of themselves may also be inventions.

In conventional database systems users access their data resources in one logical database. A user of such a conventional system typically retrieves data from and stores data on the system using the user s own systems. A user system might remotely access one of a plurality of server systems that might in turn access the database system. The database system may store resources for providing support for customers. Even with such resources providing adequate support to customers can be costly and difficult to achieve.

Embodiments provide mechanisms and methods for providing a timeline control in a multi tenant database system. In one embodiment a method includes determining a plurality of entitlement processes and milestones that are to be enforced where each entitlement process includes one or more actions and where each action is associated with a corresponding milestone. The method further includes displaying a timeline control window that shows one or more milestones for an entitlement process and updating the timeline control window as the status of the entitlement process changes.

While one or more implementations and techniques are described one or more embodiments may be implemented in a system having an application server providing a front end for an on demand database service capable of supporting multiple tenants. The embodiments described herein are not limited to multi tenant databases or deployment on application servers. Embodiments may be practiced using other database architectures i.e. ORACLE DB2 by IBM and the like without departing from the scope of the embodiments claimed.

Any of the above embodiments may be used alone or together with one another in any combination. Embodiments described herein may also include embodiments that are only partially mentioned or alluded to or are not mentioned or alluded to at all in this brief summary or in the abstract. Although various embodiments may have been motivated by various deficiencies with the prior art which may be discussed or alluded to in one or more places in the specification the embodiments do not necessarily address any of these deficiencies. In other words different embodiments may address different deficiencies that may be discussed in the specification. Some embodiments may only partially address some deficiencies or just one deficiency that may be discussed in the specification and some embodiments may not address any of these deficiencies.

Systems and methods are provided for providing a timeline control in a multi tenant database environment.

As used herein the term multi tenant database system refers to those systems in which various elements of hardware and software of the database system may be shared by one or more customers. For example a given application server may simultaneously process requests for a great number of customers and a given database table may store rows for a potentially much greater number of customers.

Next mechanisms and methods for providing a timeline control in a multi tenant database environment will be described with reference to example embodiments.

Embodiments described herein enable facilitate and manage entitlements in a database environment such as an on demand database services system. Such an on demand services system may be based on a multi tenant cloud computing model. In one embodiment the system maintains entitlements verifies whether particular customers or end customers are eligible for the entitlements and enforces the entitlements based on the service level definitions. These aspects are described in detail below in connection with .

To further facilitate the management of entitlements the system displays a timeline control window that shows one or more milestones that are to be enforced where each entitlement process includes one or more actions and where each action is associated with a corresponding milestone. The method further includes updating the timeline control window as the status of the entitlement process changes. These aspects are described in detail below in connection with .

For ease of illustration shows one block for each of user systems processor system and system data storage . These blocks and may represent multiple user systems processor systems and system data storage units. As described in more detail below system performs functions for managing entitlement and service contracts.

In one embodiment a service level defines entitlement processes and milestones used to provide support services to customers. In one embodiment service levels may include tiered service offerings e.g. platinum level silver level gold level etc. having different entitlement processes and milestones which may vary by price asset etc. In one embodiment the phrase service level and service level agreement SLA may be used interchangeably.

System receives the service level definitions from users of the on demand database services system. In one embodiment a given user may provide information for service level definitions via a user interface at a user system e.g. user system . In one embodiment a user may be an administrator of the on demand database services system e.g. system to provide support products to its customers. In one embodiment a user may be a customer using the on demand database services system to provide support products to its partners resellers distributors and or end customers. The phrases support products and support programs are used interchangeably. In one embodiment system may store the service level definitions in system data storage or in any other suitable storage location.

While system is described as performing the steps as described in the embodiments herein any suitable component or combination of components of system or any suitable processor or processors associated with system may perform the steps described. For example the steps may be performed by processor system or process space of by system process of or by any other suitable processor or processors associated with system .

In one embodiment an entitlement may be associated with a service contract where the service contract contains one or more entitlements. In one embodiment a service contract may also include subscription contracts maintenance agreements warranties other types of service contracts etc.

In one embodiment entitlement and service contract may be associated with one or more accounts e.g. customer account partner account etc. one or more contacts e.g. customer contact entitled to call for support . In one embodiment service contract may be associated with one or more price books and one or more price book entries . In one embodiment contract line items may be based on price book entries .

In one embodiment entitlement is associated with one or more entitlement processes and one or more milestones . A service level definition may define the one or more entitlement processes and milestones which are described in more detail below. In one embodiment a given entitlement process may include definitions of SLA which may be associated with particular milestones. In one embodiment SLAs may include service metrics e.g. response times resolution times actions enforcement rules etc. . In one embodiment actions may include warnings e.g. email alerts notifications field updates outbound messages creation of tasks restoring services etc. For example actions may also include warnings of actions that have not been completed or that have not been completed by scheduled deadlines associated with specific milestones. In one embodiment a given entitlement process may include adding milestones. In one embodiment deadlines to complete milestones may be by the minute.

In one embodiment milestones may include internal and external milestones. Internal milestones may include milestones to be met by the support provider and external milestones may include milestones to be met by the customer or end customer. In one embodiment milestones may be associated with the actions in one or more entitlement processes . System may add milestones as needed.

In one embodiment an entitlement may be associated with a case . In one embodiment a given case may be opened in order to address issues associated with an entitlement. This enables services for providing support to customers who are entitled to support and ensures that customers receive the correct level of service.

In one embodiment a case may include several fields. For example one or more criteria fields may be used to define in what cases a given milestone will apply. In one embodiment such criteria fields may include criteria indicating priority and or severity. In one embodiment the higher the priority of a case the tighter shorter the time required to resolve the case according to the service level definitions. In one embodiment criteria fields may also include customer and product attributes. In one embodiment one or more case origin fields may be used in milestone criteria to handle cases such as phone support which may or may not require a first response.

In one embodiment one or more success fields may be used to update workflow actions for each of the milestones associated with a given case. In one embodiment one or more Boolean fields may be used for each milestone completed e.g. first response completed etc. . In one embodiment a Boolean field may be set to true by the field update workflow action. Then a trigger monitors the Boolean field and grabs a milestone completion date when it is set to true and copies the completion date to another field e.g. first response completion date .

In one embodiment an entitlement may be associated with particular business hours . In one embodiment the times that actions may be performed may be during business hours of the customer receiving support with exceptions such as holidays .

In one embodiment an entitlement may be associated with an asset . An asset may be an instance of a product a service offering a service upgrade etc. In one embodiment one or more entitlements may cover a specific asset e.g. product service product etc. that a customer has purchased. In other words an asset may be covered by one or more entitlements. In one embodiment multiple assets may be covered by the same entitlement.

The relationships of elements of are not limited to the configuration shown in . In other embodiments other configurations are possible. Furthermore other embodiments may have other elements instead of or in addition to those shown in .

In block system maintains entitlements. In one embodiment system may maintain entitlements by creating new entitlements modifying existing entitlements extending entitlements and renewing entitlements. In one embodiment each entitlement may be associated with a user e.g. customer end customer etc. . In one embodiment system may maintain entitlements when new assets are created e.g. new product new service product such as a standard warranty entitlement etc. when new contract line items in a service contract are created etc.

In one embodiment system generates new entitlements from entitlement templates using default values. In one embodiment an entitlement template may be used to model different services that are sold or included in product sales to customers and partners. For example different service may include web support phone support training downloads etc. In one embodiment each entitlement template may be associated e.g. bundled with a particular product. Such template product associations may be defined in the service level definitions.

In one embodiment system may create entitlements when creating assets e.g. standard warranty entitlements and when adding contract line items e.g. service products can bundle one or more entitlements . In one embodiment system may manage which customer contacts are entitled to a given entitlement and delegate require end customers to manage their own entitlements via a user interface UI or application programming interface API .

In one embodiment system may generate entitlements and related service contracts warranties etc. for new customers or for existing customers e.g. associated with data migration efforts . In one embodiment account contact asset and product relationships are all supported.

In one embodiment system may also maintain service contracts where each service contract may be associated with a user e.g. customer end customer etc. . In one embodiment system may maintain service contracts by creating new service contracts modifying existing service contracts e.g. adding removing or modifying contract line items extending service contracts and renewing service contracts.

In one embodiment system may maintain a service contract using the same data model with opportunities and quotes including price books. In one embodiment a service contract may be created via an application programming interface API such that the service contract easily integrates with external order management systems.

In one embodiment system may maintain a service contract from an order when a customer purchases a subscription maintenance agreement or a warranty. This may be done explicitly via a service product as a line item on the order or it may be bundled as part of a sales product. In one embodiment the order may reside in an external order management system.

In one embodiment system may maintain a service contract via integration with an external system which may provide additional service contract information. In this scenario a service contract may contain a subset of the information that a records system may maintain. Such information may include customer information and is used for integrating with the sales and renewal processes.

In one embodiment service contract renewal opportunities may be created based on existing service contracts. For example in one embodiment system may create renewal opportunities based on contract expiration e.g. effective dates .

In block system verifies if one or more users are eligible for the entitlements. In one embodiment system performs the verification when a given user requests a particular support service. System then determines whether the requesting user is eligible for the request service and determines what service level of support the user is entitled to. In one embodiment system may verify a given user in a number of ways e.g. by account contact asset service contract contract line item product relationship etc. 

In block system enforces the entitlements based on the service level definitions. In one embodiment enforcing the entitlements includes enforcing rules e.g. business rules and service level details defined in the service level definitions. In one embodiment the rules are enforced by performing actions in one or more entitlement processes defined in the service level definitions. In one embodiment if a given customer is not eligible for a particular entitlement the system may notify the customer of the ineligibility.

In one embodiment the actions may be associated with email alerts field updates outbound messages creation of tasks etc. Actions may also be associated with warnings of actions not being completed or not being completed by scheduled deadlines associated with specific milestones.

As described in detail below in system provides a timeline control that facilitates a user in defining reference data for entitlements which may include entitlement processes and associated milestones e.g. service metrics SLAs that need to be enforced. The timeline control provides a set up or administrative function for creating and managing the reference data for entitlement processes. The timeline control also provides a tool for tracking the progress of actions that need to be performed and milestones that need to be achieved e.g. by users such as a call center agent or a technical support .

In block system displays a timeline control window in a user interface. In one embodiment a timeline control window may be generated and made available for display for each entitlement process determined from the service level definitions. In one embodiment the user interface may be accessible to a user via a user system such as user system of .

As shown in more detail below in one embodiment the enforcement of the service levels is time dependent. For example in one embodiment an entitlement process may define a timeline that includes all of the actions and milestones that a support team should complete to resolve a given case. These actions and milestones may be summarized in the timeline control window. Each entitlement process includes business logic necessary to enforce the correct service level for a given customer.

In this example the following actions may need to be performed by particular times from when the case was opened provide a first response e.g. by 30 minutes reproduce issues e.g. by 1 hour and 10 minutes suggest a workaround e.g. by 2 hours and 10 minutes reach a resolution time e.g. by 3 hours and 10 minutes . More actions may be possible depending on the particular embodiment.

In one embodiment timeline control window also includes a time indicator that indicates the current time of the entitlement process relative to a start time. In one embodiment time indicator moves along timeline progressing from a start time 0 00 and indicates the actual time from the start time 0 00. In one embodiment the start time 0 00 may represent when a case was opened triggering a requirement to perform entitlement processes. In this example the time indicator is positioned at about 0 42 which indicates that the current time of the entitlement process is about 42 minutes after the case was opened.

In one embodiment timeline control window also includes a timeline zoom window which enables a user to zoom into a particular time period.

In block system updates the timeline control window as the status of the entitlement process changes. For example in one embodiment system may indicate in the timeline control window whether a given milestone has been completed or not and if the metrics associated with the given milestone are successfully satisfied.

In one embodiment system may color code the milestone indicators to distinguish between milestones that have not yet been completed and those that have been completed. For example in one embodiment system may display milestone indicators in a first color e.g. blue if the milestone has not been completed and may change milestone indicators to a second color e.g. red when the milestone is completed.

In one embodiment system may use other markings to distinguish between milestones that have not yet been completed and those that have been completed. For example in one embodiment system may display milestone indicators without displaying any completion indicator e.g. an absence of any completion indicator if the milestone has not been completed. Conversely system may display a completion indicator e.g. indicating if a given milestone is incomplete late completed etc. .

In one embodiment timeline control window includes a time indicator that indicates the current time of the entitlement process. In one embodiment time indicator moves along a timeline progressing from a start time 0 00 and indicates the actual time from the start time 0 00. In one embodiment time indicator shows not only the current time in relation to the timeline but the current time also by actually displaying the time e.g. 6 06 relative to the start time e.g. 0 00 .

While milestone indicators are shown as inverted cones with a circular region for completion check marks milestone indicators may have other forms such as bars as shown in .

As shows for each milestone shown system may display information associated with the status of each milestone such as a case identification a type of milestone start date target date completion date completion indicator violation indicator target response time period time remaining until milestone deadline etc.

As indicated above milestones may be of different types. For example in one embodiment enforcement may involve a first response milestone and a resolution time. In one embodiment a first response milestone may represent how quickly a support organization should respond to a customer case. This may be referred to as a response time or an initial response. In one embodiment an initial response time may be defined as the elapsed time from when a case is opened until a member of the support organization starts diagnosing the problem. In one embodiment a response time may be marked by notifying the customer e.g. either via email a comment on the case or both that his or her issue is being addressed. In one embodiment an auto response email would not generally be acceptable as a first response because it would rarely result in a service agent or support engineer beginning to analyze and work the case.

In one embodiment a resolution time may be the time required to successfully resolve a customer issue. This may be for example the time required to fix the root cause of a case or the time required to provide a satisfactory workaround. In one embodiment the resolution time may be the elapsed time between when a case is opened until it is resolved to the customer s satisfaction. More specifically it will be the time from when a case was created until the case status is set to closed and a date time closed field is set with a value earlier than or equal to the current date.

In one embodiment system instructs representatives of the database system on how to resolve cases. In one embodiment system displays a user interface to a user in order to show a timeline of a series of associated actions including associated milestones.

Embodiments described herein provide numerous benefits. For example embodiments facilitate determining and verifying what entitlements a particular user is eligible for. Embodiments facilitate enforcement of rules e.g. SLAs across a customer base which saves costs by limiting particular support products to eligible customers. Furthermore embodiments provide timeline control windows case milestone windows and case milestone summary windows to enable users to successfully and carry out actions in a timely way in accordance with entitlement processes and milestones as defined in the service level definitions for the entitlements. Supporting only eligible customers ensures sufficient resources to provide appropriate service quality and thus customer satisfaction.

Environment is an environment in which an on demand database service exists. User system may be any machine or system that is used by a user to access a database user system. For example any of user systems can be a handheld computing device a mobile phone a laptop computer a work station and or a network of computing devices. As illustrated in and in more detail in user systems might interact via a network with an on demand database service which is system . System may also be referred to as a cloud service provider. System provides its resources to customers e.g. end users as a service.

An on demand database service such as system is a database system that is made available to outside users who do not need to necessarily be concerned with building and or maintaining the database system but instead may be available for more general use when the users need the database system e.g. on the demand of the users . Some on demand database services may store information from one or more tenants stored into tables of a common database image to form a multi tenant database system MTS . Accordingly on demand database service and system will be used interchangeably herein. A database image may include one or more database objects. A relational database management system RDMS or the equivalent may execute storage and retrieval of information against the database object s . Application platform may be a framework that allows the applications of system to run such as the hardware and or software e.g. the operating system. In an embodiment system may include an application platform that enables creating managing and executing one or more applications developed for an on demand database service for users accessing the on demand database service via user systems or for third party application developers accessing the on demand database service via user systems .

The users of user systems may differ in their respective capacities and the capacity of a particular user system might be entirely determined by permissions permission levels for the current user. For example where a salesperson is using a particular user system to interact with system that user system has the capacities allotted to that salesperson. However while an administrator is using that user system to interact with system that user system has the capacities allotted to that administrator. In systems with a hierarchical role model users at one permission level may have access to applications data and database information accessible by a lower permission level user but may not have access to certain applications database information and data accessible by a user at a higher permission level. Thus different users will have different capabilities with regard to accessing and modifying application and database information depending on a user s security or permission level.

Network is any network or combination of networks of devices that communicate with one another. For example network can be any one or any combination of a local area network LAN wide area network WAN telephone network wireless network point to point network star network token ring network hub network or other appropriate configuration. As the most common type of computer network in current use is a transfer control protocol and Internet protocol TCP IP network such as the global internetwork of networks often referred to as the Internet with a capital I. That network will be used in many of the examples herein. However it should be understood that the networks used with the embodiment described herein use are not so limited although TCP IP is a frequently implemented protocol.

User systems might communicate with system using TCP IP and at a higher network level use other common Internet protocols to communicate such as hypertext transfer protocol HTTP file transfer protocol FTP Andrew file system AFS wireless application protocol WAP etc. In an example where HTTP is used user system might include an HTTP client commonly referred to as a browser for sending and receiving HTTP messages to and from an HTTP server at system . Such an HTTP server might be implemented as the sole network interface between system and network but other techniques might be used as well or instead. In some implementations the interface between system and network includes load sharing functionality such as round robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server each of the plurality of servers has access to the MTS data however other alternative configurations may be used instead.

In one embodiment system shown in implements a web based customer relationship management CRM system. For example in one embodiment system includes application servers configured to implement and execute CRM software applications as well as to provide related data code forms webpages and other information to and from user systems . The application servers are also configured to store to and retrieve from a database system related data objects and Webpage content. With a multi tenant system data for multiple tenants may be stored in the same physical database object. Tenant data may be arranged such that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant s data unless such data is expressly shared. In certain embodiments system implements applications other than or in addition to a CRM application. For example system may provide tenant access to multiple hosted standard and custom applications including a CRM application. User or third party application developer software applications which may or may not include CRM may be supported by the application platform which manages the creation and storage of the applications into one or more database objects and executing of the applications in a virtual machine in the process space of the system . The terms application software application software package software code and program code are used interchangeably.

One arrangement for elements of system is shown in including a network interface application platform tenant data storage for tenant data system data storage for system data accessible to system and possibly multiple tenants program code for implementing various functions of system and a process space for executing MTS system processes and tenant specific processes such as running applications as part of an application hosting service. Additional processes that may execute on system include database indexing processes.

Several elements in the system shown in include conventional well known elements that are explained only briefly here. For example each user system could include a desktop personal computer workstation laptop PDA cell phone or any wireless access protocol WAP enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection. User system typically runs an HTTP client e.g. a browsing program such as Microsoft s Internet Explorer browser Netscape s Navigator browser Opera s browser or a WAP enabled browser in the case of a cell phone PDA or other wireless device or the like allowing a user e.g. subscriber of the multi tenant database system of user system to access process and view information pages and applications available to it from system over network . Each user system also typically includes one or more user interface devices such as a keyboard a mouse trackball touch pad touch screen pen or the like for interacting with a graphical user interface GUI provided by the browser on a display e.g. a monitor screen liquid crystal display LCD monitor etc. in conjunction with pages forms applications and other information provided by system or other systems or servers. For example the user interface device can be used to access data and applications hosted by system and to perform searches on stored data and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above embodiments are suitable for use with the Internet which refers to a specific global internetwork of networks. However it should be understood that other networks can be used instead of the Internet such as an intranet an extranet a virtual private network VPN a non TCP IP based network any LAN or WAN or the like.

According to one embodiment each user system and all of its components are operator configurable using applications such as a browser including computer code run using a central processing unit such as an Intel Pentium processor or the like. Similarly system and additional instances of an MTS where more than one is present and all of their components might be operator configurable using application s including computer code to run using a central processing unit such as processor system which may include an Intel Pentium processor or the like and or multiple processor units. A computer program product embodiment includes a machine readable storage medium media having instructions stored thereon in which can be used to program a computer to perform any of the processes of the embodiments described herein. Computer code for operating and configuring system to intercommunicate and to process webpages applications and other data and media content as described herein are preferably downloaded and stored on a hard disk but the entire program code or portions thereof may also be stored in any other volatile or non volatile memory medium or device as is well known such as a read only memory ROM or random access memory RAM or provided on any media capable of storing program code such as any type of rotating media including floppy disks optical discs digital versatile disk DVD compact disk CD microdrive and magneto optical disks and magnetic or optical cards nanosystems including molecular memory integrated circuits ICs or any type of media or device suitable for storing instructions and or data. Additionally the entire program code or portions thereof may be transmitted and downloaded from a software source over a transmission medium e.g. over the Internet or from another server as is well known or transmitted over any other conventional network connection as is well known e.g. extranet virtual private network VPN LAN etc. using any communication medium and protocols e.g. TCP IP HTTP HTTPS Ethernet etc. as are well known. It will also be appreciated that computer code for implementing embodiments can be implemented in any programming language that can be executed on a client system and or server or server system such as for example C C HTML any other markup language Java JavaScript ActiveX any other scripting language such as VBScript and many other programming languages as are well known may be used. Java is a trademark of Sun Microsystems Inc. .

According to one embodiment each system is configured to provide webpages forms applications data and media content to user client systems to support the access by user systems as tenants of system . As such system provides security mechanisms to keep each tenant s data separate unless the data is shared. If more than one MTS is used they may be located in close proximity to one another e.g. in a server farm located in a single building or campus or they may be distributed at locations remote from one another e.g. one or more servers located in city A and one or more servers located in city B . As used herein each MTS could include one or more logically and or physically connected servers distributed locally or across one or more geographic locations. Additionally the term server is meant to include a computer system including processing hardware and process space s and an associated storage system and database application e.g. object oriented database management system OODBMS or rational database management system RDBMS as is well known in the art. It should also be understood that server system and server are often used interchangeably herein. Similarly the database object described herein can be implemented as single databases a distributed database a collection of distributed databases a database with redundant online or offline backups or other redundancies etc. and might include a distributed database or storage network and associated processing intelligence.

User system network system tenant data storage and system data storage were discussed above in . Regarding user system processor system A may be any combination of one or more processors. Memory system B may be any combination of one or more memory devices short term and or long term memory. Input system C may be any combination of input devices such as one or more keyboards mice trackballs scanners cameras and or interfaces to networks. Output system D may be any combination of output devices such as one or more monitors printers and or interfaces to networks. As shown in system may include a network interface of implemented as a set of HTTP application servers an application platform tenant data storage and system data storage . Also shown is system process space including individual tenant process spaces and a tenant management process space . Each application server may be configured to tenant data storage and the tenant data therein and system data storage and the system data therein to serve requests of user systems . The tenant data might be divided into individual tenant storage areas which can be either a physical arrangement and or a logical arrangement of data. Within each tenant storage area user storage and application metadata might be similarly allocated for each user. For example a copy of a user s most recently used MRU items might be stored to user storage . Similarly a copy of MRU items for an entire organization that is a tenant might be stored to tenant storage area . A UI provides a user interface and an API provides an application programmer interface to system resident processes and to users and or developers at user systems . The tenant data and the system data may be stored in various databases such as one or more Oracle databases.

Application platform includes an application setup mechanism that supports application developers creation and management of applications which may be saved as metadata into tenant data storage by save routines for execution by subscribers as one or more tenant process spaces managed by tenant management process for example. Invocations to such applications may be coded using PL SOQL that provides a programming language style interface extension to API . Invocations to applications may be detected by one or more system processes which manage retrieving application metadata for the subscriber making the invocation and executing the metadata as an application in a virtual machine.

Each application server may be communicably coupled to database systems e.g. having access to system data and tenant data via a different network connection. For example one application server might be coupled via the network e.g. the Internet another application server N might be coupled via a direct network link and another application server N might be coupled by yet a different network connection. Transfer control protocol and Internet protocol TCP IP are typical protocols for communicating between application servers and the database system. However it will be apparent to one skilled in the art that other transport protocols may be used to optimize the system depending on the network connection used.

In certain embodiments each application server is configured to handle requests for any user associated with any organization that is a tenant. Because it is desirable to be able to add and remove application servers from the server pool at any time for any reason there is preferably no server affinity for a user and or organization to a specific application server . In one embodiment therefore an interface system implementing a load balancing function e.g. an F5 Big IP load balancer is communicably coupled between the application servers and the user systems to distribute requests to the application servers . In one embodiment the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms such as round robin and observed response time also can be used. For example in certain embodiments three consecutive requests from the same user could hit three different application servers and three requests from different users could hit the same application server . In this manner system is multi tenant wherein system handles the storage of and access to different objects data and applications across disparate users and organizations.

As an example of storage one tenant might be a company that employs a sales force where each salesperson uses system to manage his or her sales process. Thus a user might maintain contact data leads data customer follow up data performance data goals and progress data etc. all applicable to that user s personal sales process e.g. in tenant data storage . In an example of an MTS arrangement since all of the data and the applications to access view modify report transmit calculate etc. can be maintained and accessed by a user system having nothing more than network access the user can manage his or her sales efforts and cycles from any of many different user systems. For example if a salesperson is visiting a customer and the customer has Internet access in their lobby the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.

While each user s data might be separate from other users data regardless of the employers of each user some data might be organization wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus there might be some data structures managed by system that are allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors the MTS should have security protocols that keep data applications and application use separate. Also because many tenants may opt for access to an MTS rather than maintain their own system redundancy up time and backup are additional functions that may be implemented in the MTS. In addition to user specific data and tenant specific data system might also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports news postings and the like that are sharable among tenants.

In certain embodiments user systems which may be client systems communicate with application servers to request and update system level and tenant level data from system that may require sending one or more queries to tenant data storage and or system data storage . System e.g. an application server in system automatically generates one or more structured query language SQL statements e.g. one or more SQL queries that are designed to access the desired information. System data storage may generate query plans to access the requested data from the database.

Each database can generally be viewed as a collection of objects such as a set of logical tables containing data fitted into predefined categories. A table is one representation of a data object and may be used herein to simplify the conceptual description of objects and custom objects according to the embodiments described herein. It should be understood that table and object may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example a CRM database may include a table that describes a customer with fields for basic contact information such as name address phone number fax number etc. Another table might describe a purchase order including fields for information such as customer product sale price date etc. In some multi tenant database systems standard entity tables might be provided for use by all tenants. For CRM database applications such standard entities might include tables for Account Contact Lead and Opportunity data each containing pre defined fields. It should be understood that the word entity may also be used interchangeably herein with object and table. 

In some multi tenant database systems tenants may be allowed to create and store custom objects or they may be allowed to customize standard entities or objects for example by creating custom fields for standard objects including custom index fields. In certain embodiments for example all custom entity data rows are stored in a single multi tenant physical table which may contain multiple logical tables per organization. It is transparent to customers that their multiple tables are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.

Any suitable programming language can be used to implement the routines of particular embodiments including C C Java assembly language etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single processing device or multiple processors. Although the steps operations or computations may be presented in a specific order this order may be changed in different particular embodiments. In some particular embodiments multiple steps shown as sequential in this specification can be performed at the same time.

Particular embodiments may be implemented in a computer readable storage medium also referred to as a machine readable storage medium for use by or in connection with the instruction execution system apparatus system or device. Particular embodiments can be implemented in the form of control logic in software or hardware or a combination of both. The control logic when executed by one or more processors may be operable to perform that which is described in particular embodiments.

A processor includes any suitable hardware and or software system mechanism or component that processes data signals or other information. A processor can include a system with a general purpose central processing unit multiple processing units dedicated circuitry for achieving functionality or other systems. Processing need not be limited to a geographic location or have temporal limitations. For example a processor can perform its functions in real time offline in a batch mode etc. Portions of processing can be performed at different times and at different locations by different or the same processing systems. A computer may be any processor in communication with a memory. The memory may be any suitable processor readable storage medium such as random access memory RAM read only memory ROM magnetic or optical disk or other tangible media suitable for storing instructions for execution by the processor.

Particular embodiments may be implemented by using a programmed general purpose digital computer by using application specific integrated circuits programmable logic devices field programmable gate arrays optical chemical biological quantum or nanoengineered systems components and mechanisms may be used. In general the functions of particular embodiments can be achieved by any means as is known in the art. Distributed networked systems components and or circuits can be used. Communication or transfer of data may be wired wireless or by any other means.

It will also be appreciated that one or more of the elements depicted in the drawings figures can also be implemented in a more separated or integrated manner or even removed or rendered as inoperable in certain cases as is useful in accordance with a particular application. It is also within the spirit and scope to implement a program or code that can be stored in a machine readable medium to permit a computer to perform any of the methods described above.

As used in the description herein and throughout the claims that follow a an and the includes plural references unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise.

While one or more implementations have been described by way of example and in terms of the specific embodiments it is to be understood that the implementations are not limited to the disclosed embodiments. To the contrary it is intended to cover various modifications and similar arrangements as would be apparent to those skilled in the art. Therefore the scope of the appended claims should be accorded the broadest interpretation so as to encompass all such modifications and similar arrangements.

