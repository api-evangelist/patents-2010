---

title: Session based click features for recency ranking
abstract: In one embodiment, access one or more query chains, wherein each one of the query chains comprises two or more search queries, {q, . . . , q}, which are recency-sensitive, are related to the same subject matter, and are issued to a search engine sequentially, and actual click-through information associated with each one of the query chains; and smooth each one of the query chains using the actual click-through information associated with the query chain. To smooth one of the query chains comprises, for each one of search queries, q, in the query chain, where 2≦j≦n, if one of the network resources identified for qhas actually been clicked in connection with qby the corresponding one network user, then presume that the one network resource has been clicked in connection with one or more search queries, q, in the query chain, where 1≦k<j.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08326815&OS=08326815&RS=08326815
owner: Yahoo!  Inc.
number: 08326815
owner_city: Sunnyvale
owner_country: US
publication_date: 20100316
---
The present disclosure generally relates to improving the quality of search results constructed by search engines and more specifically relates to extracting click features that may be used to train a recency ranking algorithm.

The Internet provides a vast amount of information. The individual pieces of information are often referred to as network resources or network contents and may have various formats such as for example and without limitation texts audios videos images web pages documents executables etc. The network resources or contents are stored at many different sites such as on computers and servers in databases etc. around the world. These different sites are communicatively linked to the Internet through various network infrastructures. Any person may access the publicly available network resources or contents via a suitable network device e.g. a computer a smart mobile telephone etc. connected to the Internet.

However due to the sheer amount of information available on the Internet it is impractical as well as impossible for a person e.g. a network user to manually search throughout the Internet for specific pieces of information. Instead most network users rely on different types of computer implemented tools to help them locate the desired network resources or contents. One of the most commonly and widely used computer implemented tools is a search engine such as the search engines provided by Microsoft Inc. http www.bing.com Yahoo Inc. http search.yahoo.com and Google Inc. http www.google.com . To search for information relating to a specific subject matter or topic on the Internet a network user typically provides a short phrase or a few keywords describing the subject matter often referred to as a search query or simply query to a search engine. The search engine conducts a search based on the search query using various search algorithms and generates a search result that identifies network resources or contents that are most likely to be related to the search query. The network resources or contents are presented to the network user often in the form of a list of links each link being associated with a different network document e.g. a web page that contains some of the identified network resources or contents. In particular embodiments each link is in the form of a Uniform Resource Locator URL that specifies where the corresponding document is located and the mechanism for retrieving it. The network user is then able to click on the URL links to view the specific network resources or contents contained in the corresponding document as he wishes.

Sophisticated search engines implement many other functionalities in addition to merely identifying the network resources or contents as a part of the search process. For example a search engine usually ranks the identified network resources or contents according to their relative degrees of relevance with respect to the search query such that the network resources or contents that are relatively more relevant to the search query are ranked higher and consequently are presented to the network user before the network resources or contents that are relatively less relevant to the search query. The search engine may also provide a short summary of each of the identified network resources or contents.

There are continuous efforts to improve the qualities of the search results generated by the search engines. Accuracy completeness presentation order and speed are but a few of the performance aspects of the search engines for improvement.

The present disclosure generally relates to improving the quality of search results constructed by search engines and more specifically relates to extracting click features that may be used to train a recency ranking algorithm.

Particular embodiments access 1 one or more query chains wherein each one of the query chains comprises two or more of a plurality of search queries q . . . q where n 2 and for each one of the query chains the search queries are recency sensitive with respect to a particular time period are related to a same subject matter and are issued to a search engine sequentially by one of one or more network users during a search session such that for each search query q in the query chain qis issued to the search engine after qand before q and one or more network resources are identified by the search engine in response to each one of the search queries and 2 actual click through information associated with each one of the query chains wherein for each one of the query chains the actual click through information indicates which ones of the network resources identified for each one of the search queries have actually been clicked by the one network user. Particular embodiments smooth each one of the query chains using the actual click through information associated with the query chain. To smooth one of the query chains for each one of search queries q in the query chain where 2 j n if one of the network resources identified for qhas actually been clicked in connection with qby the corresponding one network user then particular embodiments presume that the one network resource has been clicked in connection with one or more search queries qin the query chain where 1 k

These and other features aspects and advantages of the disclosure are described in more detail below in the detailed description and in conjunction with the following figures.

The present disclosure is now described in detail with reference to a few embodiments thereof as illustrated in the accompanying drawings. In the following description numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It is apparent however to one skilled in the art that the present disclosure may be practiced without some or all of these specific details. In other instances well known process steps and or structures have not been described in detail in order not to unnecessarily obscure the present disclosure. In addition while the disclosure is described in conjunction with the particular embodiments it should be understood that this description is not intended to limit the disclosure to the described embodiments. To the contrary the description is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the disclosure as defined by the appended claims.

A search engine is a computer implemented tool designed to search for information relevant to specific subject matters or topics on a network such as the Internet the World Wide Web or an Intranet. To conduct a search a network user may issue a search query to the search engine. The search query generally contains one or more words that describe a subject matter of interest. In response the search engine may identify one or more network resources that are likely to be related to the search query which may collectively be referred to as a search result identified for the search query.

Sophisticated search engines implement many other functionalities in addition to merely identifying the network resources as a part of the search process. For example a search engine usually ranks the network resources identified for a search query according to their relative degrees of relevance with respect to the search query such that the network resources that are relatively more relevant to the search query are ranked higher and consequently are presented to the network user before the network resources that are relatively less relevant to the search query. The search engine may also provide a short summary of each of the identified network resources.

Network resources are presented according to their relative degrees of relevance to search query President George Washington . That is network resource is considered somewhat more relevant to search query President George Washington than network resource which is in turn considered somewhat more relevant than network resource and so on. Consequently network resource is presented first i.e. at the top of search result followed by network resource network resource and so on. To view any of network resource the network user requesting the search may click on the individual URLs of the specific web pages.

In certain cases the ranking of the network resources with respect to the search queries may be determined by a ranking algorithm implemented by the search engine. Given a search query and a set of network resources identified in response to the search query the ranking algorithm ranks the network resources in the set according to their relative degrees of relevance with respect to the search query. That is given a search query and a network resource the ranking algorithm mainly considers how closely the content of the network resource relates to the subject matter described by the search query. More specifically in certain cases the network resources that are relatively more relevant to the search query are ranked higher than the network resources that are relatively less relevant to the search query as illustrated for example in . In certain cases as a part of the ranking process the ranking algorithm may determine a ranking score for each of the network resources in the set. For example the network resources that are relatively more relevant to the search query may receive relatively higher ranking scores than the network resources that are relatively less relevant to the search query. The network resources in the set are then ranked according to their respective ranking scores. Because such a ranking algorithm ranks the network resources identified for a search query mainly according to their relative degrees of relevance with respect to the search query the ranking algorithm may be referred to as a relevancy based ranking algorithm.

Sometimes a search query may describe a subject matter that has little or no connection with time. For example search queries such as President George Washington French red wine or Italian restaurants in San Francisco describe subject matters that are continuously present with little or no change over time and therefore are not time sensitive or time specific i.e. time insensitive . A relevancy based ranking algorithm may be well suitable for ranking a set of network resources with respect to such a search query that has little or no connection with time. Sometimes however a search query may describe a subject matter that has a time aspect associated with it. That is the search query may have a strong connection with time or with a specific time period Such search queries may be referred to as recency sensitive or time sensitive search queries. Search queries relating to breaking news trendy topics or popular gossips are examples of the recency sensitive search queries. For example search query Hurricane Katrina may be considered recency sensitive around August and September of 2005 search queries presidential election democratic primary or Barack Obama may be considered recency sensitive between late 2007 and early 2008 and search queries Haiti earthquake or Haitian victim names may be considered recency sensitive around January and February of 2010. Furthermore these search queries may be only recency sensitive during specific time periods as suggested by the above example recency sensitive search queries. Once a particular time period has passed a search query may no longer be considered recency sensitive. For example search queries presidential election and democratic primary may no longer be considered recency sensitive after November 2008.

When ranking the network resources identified for a recency sensitive search query it may be important to take into consideration the recency of the network resources identified for the recency sensitive search query as well as their topic relevance. The recency of a network resource may indicate the freshness of the network resource i.e. how recent or how up to date the network resource or the content of the network resource is especially with respect to the search query to which the network resource corresponds such as for example and without limitation when is the network resource created and published when is the network resource last updated or modified when is the network resource included as a link in another network resource when is the network resource discovered by a search engine etc. For example when a network user issues the search query Haiti earthquake to a search engine it is most likely that the network user wishes to locate the latest information or news on the Haiti earthquake. Therefore it is most likely that the network user may find a news article that has just been published within the past few hours which contains the latest information available on the Haiti earthquake more suitable to his informational needs than a news article that has been published more than a week ago.

A ranking algorithm that takes into consideration the recency as well as the relevancy of the network resources when ranking them for a search query may be referred to as a recency based ranking algorithm. In particular embodiments a recency based ranking algorithm may be used to rank network resources identified for recency sensitive search queries either by itself or in connection with a relevancy based ranking algorithm. If the recency based ranking algorithm is used by itself it may replace the relevancy based ranking algorithm whenever a search result needs to be constructed for a recency sensitive search query. If the recency based ranking algorithm is used in connection with a relevancy based ranking algorithm the two ranking algorithms may together produce a final ranking result for a set of network resources identified for a recency sensitive search query.

In particular embodiments a recency based ranking algorithm may be trained via machine learning using a set of training features. Machine learning is a scientific discipline that is concerned with the design and development of algorithms that allow computers to learn based on data. The computational analysis of machine learning algorithms and their performance is a branch of theoretical computer science known as computational learning theory. The desired goal is to improve the algorithms through experience e.g. by applying the data to the algorithms in order to train the algorithms . The data are thus often referred to as training data . In the field of search engines and with respect to the present disclosure machine learning is the process of training computers to learn to perform certain functionalities and more specifically to perform ranking on the network resources with respect to the individual search queries.

A machine learning algorithm may be organized into a taxonomy based on the desired outcome of the algorithm. Examples of algorithm types may include supervised learning unsupervised learning semi supervised learning reinforcement learning transduction and learning to learn. One type of algorithm of machine learning is transduction also known as transductive inference. Typically such an algorithm may predict an output in response to an input. To train such an algorithm for example the training data may include training inputs and training outputs. The training outputs may be the desirable or correct outputs that should be predicted by the algorithm given the training inputs. By comparing the outputs actually predicted by the algorithm in response to the training inputs with the training outputs the algorithm may be appropriately adjusted and improved so that in response to the training inputs the algorithm predicts outputs that are the same as or similar to the training outputs. In particular embodiments the type of training inputs and training outputs in the training data may be similar to the type of actual inputs and actual outputs to which the algorithm is to be applied. Often multiple sets of training data may be applied to the same algorithm so that the algorithm may be repeatedly improved.

There may be many types of features that may be used to train a recency based ranking algorithm such as for example and without limitation recency features click features or relevancy features. Particular embodiments contemplate any suitable type of training features. Once a recency based ranking algorithm has been adequately trained it may then be used to rank the network resources identified for the recency sensitive search queries. Because the recency based ranking algorithm has been trained with the recency features in addition to the other types of features the recency based ranking algorithm in effect takes into consideration the recency of the network resources and optionally other factors represented by the other types of features during the ranking process.

Particular embodiments may include various click features as a part of the training features that may be used to train a recency based ranking algorithm. illustrates an example method for constructing click features for training a recency based ranking algorithm. Particular embodiments may construct click features based on the click through information for individual search queries step . Such click through information may be collected from various sources. For example each search engine may maintain logs that record the search related activities occurring at the search engine such as the search queries received by the search engine the time at which each search query is received at the search engine the network resources identified for each search query and their ranking the network resources clicked by the users requesting the searches and so on. The click through information may be extracted from the information stored in these logs.

Hereafter let q denote a search query url denote a network resource i.e. each network resource is referenced by its unique URL and tdenote the time q is issued to or received at a search engine. Thus for each search query q the search engine may identify one or more network resources url . . . url where n may be any positive integer. Furthermore for each search query q there may be one or more query resource pairs and each query resource pair may be denoted as a tuple q url. Many such query resource pairs may be extracted from the information stored in the logs maintained by the search engines. Furthermore based on the click through information particular embodiments may determine for each one of the query resource pairs whether the network resource has been clicked in connection with the search query by a network user during a search session. In particular embodiments a search session may be loosely defined as a series of interactive and somewhat continuous information exchange between a search engine and a network device associated with a network user that lasts some period of time. During a search session the network user may through his network device issue one or more search queries to the search engine and in response the search engine may construct one or more search results and transmit them to the network device for presentation to the network user. The network user may also exam click on and view any of the network resources included in any of the search results. The click features used to train a recency based ranking algorithm may be constructed from these query resource pairs together with their associated click through information.

In particular embodiments collecting training data for recency based ranking algorithms differs from collecting training data for relevancy based ranking algorithms. With relevancy based ranking algorithms the relevance judgment for each query resource pair q url is usually static over time because resource freshness generally does not affect the user satisfaction over the network resources identified for a search query. The judgment for a recency sensitive query resource pair however needs to incorporate the freshness of the network resource. Thus with recency based ranking algorithms the time that the search query is issued t needs to be incorporated into each query resource pair. Consequently each query resource pair is represented by the tuple q url t. Moreover because the click features constructed based on these query resource pairs are used to train a recency based ranking algorithm which is especially suited to rank the network resources identified for the time sensitive search queries the search queries in the query resource pairs in particular embodiments are themselves time sensitive search queries in order to yield suitable and meaningful training data.

In particular embodiments for the purpose of constructing training features for a recency based ranking algorithm each query resource pair may receive a human judgment on how good the network resource is with respect to the search query. Whether a network resource is good or bad with respect to a search query may depend on many factors including the relevancy and recency of the network resource. In particular embodiments five judgment grades may be used to label a query resource pair perfect excellent good fair and bad. Each query resource pair may received one of the five grades given by a human judge indicating how good the network resource is with respect to the search query. Furthermore because of the time sensitivity associated with the recency sensitive search queries particular embodiments may periodically collect sets of query resource pairs used for constructing the training features as opposed to collecting all training sets of query resource pairs at once and have them judged by human judges immediately or shortly after they are collected so that the human judges may make relatively reliable judgment. The goal is to bring the human judging time t as closely as possible to the query issue time t for each query resource pair used to construct the training features.

In particular embodiments a human judge may judge a query resource pair using a two step process. First a grade is determined for the query resource pair based on non temporal relevance such as for example and without limitation intent usefulness content user interface design domain authority etc. Then the initial grade is adjusted solely based on the recency of the network resource such that the query resource pair should receive a grade demotion if the date of the network resource or the age of the content of the network resource makes the network resource less relevant in comparison to more recent material or the changes in time alter the context of the search query. For example the grade demotion may reflect the following judgment options 1 shallow demotion one grade demotion if the network resource is somewhat outdated and 2 deep demotion two grade demotion if the network resource is completely outdated or useless. Such recency demotion grading method has several advantages. For example first recency is incorporated into the modeling of the ranking problem and second recency may also be decoupled from the overall relevance so that recency and non recency relevance may be analyzed separately during training of the recency based ranking algorithm.

When a set of network resources is presented to a network user in response to the network user issuing a search query to a search engine the network user may choose to click on the URLs of some of the network resources in order to view the content of these network resources in more detail. Such user behavior may suggest that with respect to the corresponding search query a network resource that has received a user click is more likely to satisfy the user s informational needs than a network resource that has not received any user click. Consequently the network resource that has received a user click may be considered a better network resource with respect to the corresponding search query than the network resource that has not received any user click. The search engine may record in its logs which network resources have been clicked by network users in response to which search queries. Particular embodiments may extract such click through information from the logs.

Particular embodiments may optionally smooth the click through information step . Smoothing is described in more detail below. Particular embodiments may construct one or more click features based on either the unsmoothed or the smoothed click through information step .

In particular embodiments a first type of click features that may be included as a part of the training data for training a recency based ranking algorithm is the click through rate CTR of the individual query resource pairs. The CTR of a network resource in general may be obtained by dividing the number of times the network resource has been clicked by the network users by the number of times the network resource has been presented to the network users. In particular embodiments the CTR of a query resource pair CTR q url may be defined as the ratio between the number of search sessions with clicks on the given network resource for the given search query and the total number of search sessions during which the network resource is viewed for the search query i.e. the number of search sessions during which the network resource is presented to the network user issuing the search query . In particular embodiments CTR q url may be computed as 

Typically a search result constructed for a search query may include a large number of network resources. When these network resources are presented to the network user requesting the search they may need to be divided into multiple web pages. Initially the first web page is presented to the network user that may include a limited number e.g. 20 or 30 of the highest ranking network resources. If the network user wishes to view more and gradually lower ranking network resources the network user may click on a link in the web page to each of the subsequent web pages containing the network resources. Particular embodiments may assume that all the network resources included in the first web page for a search query are viewed by the network user. Furthermore if the network user requests a subsequent web page particular embodiments may assume that all the network resources included in the subsequent web page are also viewed by the network user.

In particular embodiments a second type of click features that may be included as a part of the training data for training a recency based ranking algorithm is the only click through rate OCTR of the individual query resource pairs. In particular embodiments the OCTR of a query resource pair CTR q url may be defined as the ratio between the number of search sessions during which a network user has clicked only on the given network resource and nothing else for the given search query and the total number of search sessions during which the network resource is viewed for the search query i.e. the number of search sessions during which the network resource is presented to the network user issuing the search query . For example consider the example search query Haiti earthquake . When this search query is issued to a search engine e.g. http search.yahoo.com the corresponding search result may include many news articles posted at different websites such as CNN Yahoo News BBC CBS USA Today etc. If among all the network resources presented to the network user issuing the example search query to the search engine the network user only clicks on the one news article posted at the CNN website then this CNN news article may be considered to have an only click through for example search query Haiti earthquake during this search session. If on the other hand the network user clicks on two or more of the network resources then none of the network resources has an only click through for example search query Haiti earthquake during this search session.

In particular embodiments a third type of click features that may be included as a part of the training data for training a recency based ranking algorithm is the click attractivity ATTR of the individual query resource pairs. In particular embodiments the ATTR of a query resource pair ATTR q url may be defined as the ratio between the number of search sessions with clicks on the given network resource for the given search query and the total number of search sessions during which the network resource is either clicked or examined. Particular embodiments may assume that if a network resource ranks above any other network resource that has been clicked in a search session then the network resource is considered to have been examined. For example suppose for the example search query Haiti earthquake the network user has clicked on the fifth ranking network resource in the search result. Even though the network user has not clicked on the first four ranking network resources the first four ranking network resources may be assumed to have been examined by the network user. If the network user has clicked on the tenth ranking network resource in the search result then the first nine ranking network resources may be assumed to have been examined by the network user.

Although the above click features are described with respect to query resource pairs the similar concept may be applied to query host pairs such that various types of click features may be constructed for individual query host pairs and included in the training data for training a recency based ranking algorithm. In particular embodiment a host or more precisely a network host is a computing system connected to a network that may host information resources as swell as application software for providing network services. For each query host pair the network host may host one or more of the network resources identified for the search query. For example the click features with respect to a query host pair q h may include CTRH q h the click through rate for a query host pair CTRH q h the only click through rate for a query host pair and ATTRH q h the click attractivity for a query host pair .

In particular embodiments a time varying CTR with a weighting strategy may be applied to each one of the above click features. That is the traditional CTR is weighted by time. In particular embodiments click and view counts for a day may be exponentially weighted to emphasize recent observations i.e. click through information collected more recently weigh more than click through information collected further in the past . Particular embodiments may compute the weighted CTR CTR q url t as 

The same time varying weighting strategy may be applied to the click through rate for a query host pair CTRH the only click through rate for a query resource pair CTR or a query host pair CTRH and the click attractivity for a query resource pair ATTRor a query host pair ATTRH.

In particular embodiments a fourth type of click features that may be included as a part of the training data for training a recency based ranking algorithm is the click buzz of a network resource a website or a host which identifies whether the network resource the website or the host receives an unusual level of attention from the network users during a current time period in comparison to the past. Particular embodiments may measure user attention as the number of clicks on the network resource the website or the host or the number of clicks on the query resource pair or the query host pair and so on. Using the number of clicks on a query resource pair as an example let Cdenote the number of clicks on the network resource in connection with the search query during a particular time interval t. Particular embodiments may compute the average of the number of clicks during the time period T as 

Particular embodiments may then define the buzz feature for a query resource pair as the deviation from the empirical average of the number of clicks on the network resource in connection with the search query over a specific period of time normalized by the standard deviation over the same time period. It is therefore a measure of how atypical the feature value i.e. the number of clicks on a network resource in connection with a search query is on a given time interval e.g. a day compared with the corresponding average feature value. Particular embodiments may compute the buzz feature as 

Particular embodiments may compute the buzz value of any feature varying over time such as for example and without limitation the number of host clicks or website clicks the number of times a query is issued etc.

Note that for the above click features the feature values for a given tuple q url t are computed using only the click through information up till t i.e. the time the search query is issued to a search engine . These click features favor network resources that have been of recent interest for a search query.

Because the click features are used to train a recency based ranking algorithm particular embodiments construct them from the query resource pairs where the search queries are time sensitive. The time sensitive query resource pairs and their associated click through information may be exacted from the information stored in the logs maintained by the search engines. However in practice among all the search queries issued to a search engine only a relatively small percentage is time sensitive. As a result the number of time sensitive query resource pairs that may be extracted from the logs is relatively small. This means that the click features are constructed from a relatively small set of training query resource pairs which may result in the click features having relatively low quality. Training a ranking algorithm using lower quality features often results in the ranking algorithm having lower quality performance. To improve the quality of the click features particular embodiments need to increase the number of time sensitive query resource pairs having associated click through information which may be used to construct the click features.

Another challenge in recency ranking is to model changes in the query intent. Looking at query reformulations may be a valuable source of information for this purpose. In most analysis of network search relevance a single search query may be considered the base unit of user interaction with a search engine. However a network user often issues multiple search queries to a search engine when the network user wishes to locate information concerning a particular subject matter. For example a network user may issue a first search query exam the first search result constructed for the first search query reformulate the words in the search query and issue a second search query exam the second search result constructed for the second search query and so on repeating the process until the network user has located sufficient information to satisfy his informational needs. In this sense the network user has used a chain of search queries all relating to the same subject matter and may be gradually refine or reformulate each successive search query in the chain in order to locate the desired information. Hereafter let Q q . . . q denote a chain of search queries all relating to the same subject matter and issued by the same network user during a search session where n 2. Furthermore qis issued to the search engine after q qis issued to the search engine after q and so on and qis issued to the search engine after q. That is there is a timing order associated with the search queries in a query chain.

For each of the search queries in the chain a search result r url . . . url may be constructed that includes one or more network resources. Let rbe the search result for q rbe the search result for q and so on. Thus generally rbe the search result for q where 1 i n. Of course a single network resource may be included in multiple search results. When the network user examines each particular search result he may click on one or more of the network resources included therein or he may not click on any of the network resources included therein before proceeding to the next search query in the query chain. Particular embodiments may apply a smoothing algorithm to the click through information associated with a query chain step . If a network resource url has been clicked by the network user for a particular search query q in the query chain Q where 2 i n then particular embodiments presumes that urlhas been clicked for each of the search queries in Q before q. That is particular embodiments presumes that urlhas been clicked for each of q . . . q even though the network user may not have actually clicked urlfor any of q . . . q. In a more specialized case particular embodiments may only presume that urlhas been clicked for the first search query q in Q. The process of presuming i.e. attributing clicks on network resources for one search query in the query chain to another search query previously in the query chain may be referred to as smoothing .

Consider a query chain example. On Nov. 28 2008 Britney Spears released her new album called Circus . Query logs maintained by a search engine shows that the search query Circus became popular a few days later i.e. many network users issued search query Circus to the search engine . About the same time network resources about Britney Spears Circus album started to be viewed and clicked more frequently. However the word circus has multiple meanings. Thus using only the word circus as a search query may not result in the right network resources that contain information on Britney Spears Circus album being located.

Since network users could not get the network resources about Britney Spears Circus album with the search query Circus they issued a series of search queries including Circus album and Britney Spears Circus album by refining the previous search queries until they located the network resources about the album and clicked on the URLs of those network resources. In this example the series of search queries to retrieve the network resources about the album e.g. Circus Circus album and Britney Spears Circus album in that order constitute one query chain. The goal of the network users is to obtain results for Britney Spears Circus album. The network resources clicked by the network users for search query Britney Spears Circus album may be presumed to have been clicked for search queries Circus or Circus album and the network resources clicked by the network users for search query Circus album be presumed to have been clicked for search query Circus .

Consider two search queries qand q in a query chain where qis issued to a search engine after q that is i

In particular embodiments smoothing is applied to the click through information i.e. to each individual query chain extracted from the click through information step before the click features are constructed from the click through information. Then the click features are constructed from the click through information which includes with respect to the search queries both the network resources that actually have been clicked by the network users and the network resources that have been presumed to be clicked as a result of the smoothing process step . This may increase the number of time sensitive query resource pairs used to construct the click features where the network resources have been clicked either actual or presumed thus increasing the quality of the click features constructed therefrom. However smoothing is not necessary for the purpose of constructing click features. The click feature may be constructed from the click through information without applying the smoothing process. On the other hand experiments suggest that if smoothing is applied to the click through information before the click features are constructed then the recency based ranking algorithm trained using such click features perform better than a recency based ranking algorithm trained using click feature constructed from the click through information without applying the smoothing process.

In particular embodiments the click features together with other types of training features may be used to train a recency based ranking algorithm via machine learning step . The recency based ranking algorithm may be any suitable machine learning algorithm. Particular embodiments use the GBrank algorithm for the ranking model learning as GBrank is one of the most effective learning to rank algorithms. The basic concept of GBrank may be summarized as the following. For each preference pair of objects x y in the available preference set S x y xy i 1 . . . N x be ranked higher than y. With the GBrank algorithm the problem of learning ranking functions is to compute a ranking function h such that h matches the set of preference pairs that is h x h y if xy i 1 . . . N for as many preference pairs as possible. In the context of ranking network resources a preference pair may refer to a preference pair of network resources where one of the network resources in the preference pair is more preferred with respect to a corresponding search query than the other one of the network resources in the pair. Particular embodiments use the following loss function h to measure the risk of a given ranking function h 

Particular embodiments may use normalized discounted cumulative gain NDCG which is a variant of the discounted cumulative gain DCG metric to evaluate the quality of the recency based ranking model. Particular embodiments may define NDCG as 

Once the recency based ranking algorithm has been trained with various types of features including the click features the recency based ranking algorithm may be used to rank the search results for recency sensitive search queries. In particular embodiments when a search query is received at a search engine step the search engine may identify a set of network resources for the search query step .

The network resources in the set need to be ranked before they are presented to the network user requesting the search. However not all search queries require specialized handling in ranking their corresponding network resources to promote recent content. In fact in some cases retrieval performance may actually degrade when a recency based ranking algorithm is applied to the network resources corresponding to time insensitive search queries. Thus particular embodiments may apply the recency based ranking algorithm only to the network resources corresponding to those recency sensitive search queries. For recency insensitive search queries particular embodiments may apply a traditional relevancy based ranking algorithm.

Particular embodiments may determine whether the search query is recency sensitive using for example the an automatic recency classifier step . Automatic recency classifier is described in more detail in U.S. patent application Ser. No. 12 579 855 entitled Incorporating Recency in Network Search Using Machine Learning by Anlei Dong et al filed on Oct. 15 2009.

If the search query is recency sensitive step YES then particular embodiments may use the recency based ranking algorithm to rank the set of network resources for the recency sensitive search query step . On the other hand if the search query is not recency sensitive step NO then particular embodiments may apply a relevancy based ranking algorithm to rank the set of network resources identified for the recency insensitive search query step .

Particular embodiments may be implemented in a network environment. illustrates an example network environment . Network environment includes a network coupling one or more servers and one or more clients to each other. In particular embodiments network is an intranet an extranet a virtual private network VPN a local area network LAN a wireless LAN WLAN a wide area network WAN a metropolitan area network MAN a communications network a satellite network a portion of the Internet or another network or a combination of two or more such networks . The present disclosure contemplates any suitable network .

One or more links couple servers or clients to network . In particular embodiments one or more links each includes one or more wired wireless or optical links . In particular embodiments one or more links each includes an intranet an extranet a VPN a LAN a WLAN a WAN a MAN a communications network a satellite network a portion of the Internet or another link or a combination of two or more such links . The present disclosure contemplates any suitable links coupling servers and clients to network .

In particular embodiments each server may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters. Servers may be of various types such as for example and without limitation web server news server mail server message server advertising server file server application server exchange server database server or proxy server. In particular embodiments each server may include hardware software or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically a web server may host HTML files or other file types or may dynamically create or constitute files upon a request and communicate them to clients in response to HTTP or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores.

In particular embodiments each client may be an electronic device including hardware software or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functionalities implemented or supported by client . For example and without limitation a client may be a desktop computer system a notebook computer system a netbook computer system a handheld electronic device or a mobile telephone. A client may enable a network user at client to access network . A client may have a web browser such as Microsoft Internet Explorer or Mozilla Firefox and may have one or more add ons plug ins or other extensions such as Google Toolbar or Yahoo Toolbar. A client may enable its user to communicate with other users at other clients . The present disclosure contemplates any suitable clients .

A client may have a web browser such as MICROSOFT INTERNET EXPLORER GOOGLE CHROME or MOZILLA FIREFOX and may have one or more add ons plug ins or other extensions such as TOOLBAR or YAHOO TOOLBAR. A user at client may enter a Uniform Resource Locator URL or other address directing the web browser to a server and the web browser may generate a Hyper Text Transfer Protocol HTTP request and communicate the HTTP request to server . Server may accept the HTTP request and communicate to client one or more Hyper Text Markup Language HTML files responsive to the HTTP request. Client may render a web page based on the HTML files from server for presentation to the user. The present disclosure contemplates any suitable web page files. As an example and not by way of limitation web pages may render from HTML files Extensible Hyper Text Markup Language XHTML files or Extensible Markup Language XML files according to particular needs. Such pages may also execute scripts such as for example and without limitation those written in JAVASCRIPT JAVA MICROSOFT SILVERLIGHT combinations of markup language and scripts such as AJAX Asynchronous JAVASCRIPT and XML and the like. Herein reference to a web page encompasses one or more corresponding web page files which a browser may use to render the web page and vice versa where appropriate.

In particular embodiments one or more data storages may be communicatively linked to one or more servers via one or more links . In particular embodiments data storages may be used to store various types of information. In particular embodiments the information stored in data storages may be organized according to specific data structures. Particular embodiments may provide interfaces that enable servers or clients to manage e.g. retrieve modify add or delete the information stored in data storage .

In particular embodiments a server may include a search engine . Search engine may include hardware software or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by search engine . For example and without limitation search engine may implement one or more search algorithms that may be used to identify network resources in response to the search queries received at search engine one or more ranking algorithms e.g. a relevancy based ranking algorithm and a recency based ranking algorithm that may be used to rank the identified network resources one or more summarization algorithms that may be used to summarize the identified network resources and so on. The ranking algorithms implemented by search engine may be trained using the set of the training data constructed from pairs of search query and clicked URL.

In particular embodiments a server may also include a data monitor collector . Data monitor collection may include hardware software or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by data collector collector . For example and without limitation data monitor collector may monitor and collect network traffic data at server and store the collected network traffic data in one or more data storage . The pairs of search query and clicked network resources may then be extracted from the network traffic data.

In particular embodiments a server may also include an automatic search query classifier . Search query classifier may include hardware software or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by Search query classifier . For example search query classifier may determined for each search query received at search engine whether the search query is recency sensitive.

Particular embodiments may be implemented on one or more computer systems. illustrates an example computer system . In particular embodiments one or more computer systems perform one or more steps of one or more methods described or illustrated herein. In particular embodiments one or more computer systems provide functionality described or illustrated herein. In particular embodiments software running on one or more computer systems performs one or more steps of one or more methods described or illustrated herein or provides functionality described or illustrated herein. Particular embodiments include one or more portions of one or more computer systems .

This disclosure contemplates any suitable number of computer systems . This disclosure contemplates computer system taking any suitable physical form. As example and not by way of limitation computer system may be an embedded computer system a system on chip SOC a single board computer system SBC such as for example a computer on module COM or system on module SOM a desktop computer system a laptop or notebook computer system an interactive kiosk a mainframe a mesh of computer systems a mobile telephone a personal digital assistant PDA a server or a combination of two or more of these. Where appropriate computer system may include one or more computer systems be unitary or distributed span multiple locations span multiple machines or reside in a cloud which may include one or more cloud components in one or more networks. Where appropriate one or more computer systems may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation one or more computer systems may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein where appropriate.

In particular embodiments computer system includes a processor memory storage an input output I O interface a communication interface and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.

In particular embodiments processor includes hardware for executing instructions such as those making up a computer program. As an example and not by way of limitation to execute instructions processor may retrieve or fetch the instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage . In particular embodiments processor may include one or more internal caches for data instructions or addresses. The present disclosure contemplates processor including any suitable number of any suitable internal caches where appropriate. As an example and not by way of limitation processor may include one or more instruction caches one or more data caches and one or more translation lookaside buffers TLBs . Instructions in the instruction caches may be copies of instructions in memory or storage and the instruction caches may speed up retrieval of those instructions by processor .

Data in the data caches may be copies of data in memory or storage for instructions executing at processor to operate on the results of previous instructions executed at processor for access by subsequent instructions executing at processor or for writing to memory or storage or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual address translation for processor . In particular embodiments processor may include one or more internal registers for data instructions or addresses. The present disclosure contemplates processor including any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor or include one or more processors . Although this disclosure describes and illustrates a particular processor this disclosure contemplates any suitable processor.

In particular embodiments memory includes main memory for storing instructions for processor to execute or data for processor to operate on. As an example and not by way of limitation computer system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. To execute the instructions processor may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . In particular embodiments processor executes only instructions in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere and operates only on data in one or more internal registers or internal caches or in memory as opposed to storage or elsewhere . One or more memory buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses as described below. In particular embodiments one or more memory management units MMUs reside between processor and memory and facilitate accesses to memory requested by processor . In particular embodiments memory includes random access memory RAM . This RAM may be volatile memory where appropriate Where appropriate this RAM may be dynamic RAM DRAM or static RAM SRAM . Moreover where appropriate this RAM may be single ported or multi ported RAM. The present disclosure contemplates any suitable RAM. Memory may include one or more memories where appropriate. Although this disclosure describes and illustrates particular memory this disclosure contemplates any suitable memory.

In particular embodiments storage includes mass storage for data or instructions. As an example and not by way of limitation storage may include an HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a Universal Serial Bus USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. Storage may be internal or external to computer system where appropriate. In particular embodiments storage is non volatile solid state memory. In particular embodiments storage includes read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these. This disclosure contemplates mass storage taking any suitable physical form. Storage may include one or more storage control units facilitating communication between processor and storage where appropriate. Where appropriate storage may include one or more storages . Although this disclosure describes and illustrates particular storage this disclosure contemplates any suitable storage.

In particular embodiments I O interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more I O devices. Computer system may include one or more of these I O devices where appropriate. One or more of these I O devices may enable communication between a person and computer system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touchscreen trackball video camera another suitable I O device or a combination of two or more of these. An I O device may include one or more sensors. This disclosure contemplates any suitable I O devices and any suitable I O interfaces for them. Where appropriate I O interface may include one or more device or software drivers enabling processor to drive one or more of these I O devices. I O interface may include one or more I O interfaces where appropriate. Although this disclosure describes and illustrates a particular I O interface this disclosure contemplates any suitable I O interface.

In particular embodiments communication interface includes hardware software or both providing one or more interfaces for communication such as for example packet based communication between computer system and one or more other computer systems or one or more networks. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network or a wireless NIC WNIC or wireless adapter for communicating with a wireless network such as a WI FI network. This disclosure contemplates any suitable network and any suitable communication interface for it. As an example and not by way of limitation computer system may communicate with an ad hoc network a personal area network PAN a local area network LAN a wide area network WAN a metropolitan area network MAN or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example computer system may communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network or other suitable wireless network or a combination of two or more of these. Computer system may include any suitable communication interface for any of these networks where appropriate. Communication interface may include one or more communication interfaces where appropriate. Although this disclosure describes and illustrates a particular communication interface this disclosure contemplates any suitable communication interface.

In particular embodiments bus includes hardware software or both coupling components of computer system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus or another suitable bus or a combination of two or more of these. Bus may include one or more buses where appropriate. Although this disclosure describes and illustrates a particular bus this disclosure contemplates any suitable bus or interconnect.

Herein reference to a computer readable storage medium encompasses one or more non transitory tangible computer readable storage media possessing structure. As an example and not by way of limitation a computer readable storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk an HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a SECURE DIGITAL card a SECURE DIGITAL drive or another suitable computer readable storage medium or a combination of two or more of these where appropriate. Herein reference to a computer readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. 101. Herein reference to a computer readable storage medium excludes transitory forms of signal transmission such as a propagating electrical or electromagnetic signal per se to the extent that they are not eligible for patent protection under 35 U.S.C. 101.

This disclosure contemplates one or more computer readable storage media implementing any suitable storage. In particular embodiments a computer readable storage medium implements one or more portions of processor such as for example one or more internal registers or caches one or more portions of memory one or more portions of storage or a combination of these where appropriate. In particular embodiments a computer readable storage medium implements RAM or ROM. In particular embodiments a computer readable storage medium implements volatile or persistent memory. In particular embodiments one or more computer readable storage media embody software. Herein reference to software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate. In particular embodiments software includes one or more application programming interfaces APIs . This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments software is expressed as source code or object code. In particular embodiments software is expressed in a higher level programming language such as for example C Perl or a suitable extension thereof. In particular embodiments software is expressed in a lower level programming language such as assembly language or machine code . In particular embodiments software is expressed in JAVA. In particular embodiments software is expressed in Hyper Text Markup Language HTML Extensible Markup Language XML or other suitable markup language.

The present disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly where appropriate the appended claims encompass all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.

