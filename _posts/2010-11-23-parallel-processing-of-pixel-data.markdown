---

title: Parallel processing of pixel data
abstract: One or more techniques and/or systems are disclosed for processing vector-based information for an image. From a set of pixels that comprises the image, a first subset of one or more pixels that are used in a raster representation of an element in the image, such as pixel values used to render the image, is identified. A first operation is performed in parallel for the respective one or more pixels in the first subset, such as by evaluating a batched first subset of pixels using stacked instruction for the first operation. The first operation comprises instructions for at least a first portion of a function for generating an image pixel value used to represent the element in the image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524572&OS=09524572&RS=09524572
owner: Microsoft Technology Licensing, LLC
number: 09524572
owner_city: Redmond
owner_country: US
publication_date: 20101123
---
In a computing environment an image there may be created in a variety of ways such as using a digital camera drawing a graphic using an application or using an application to generate an image of existing data. Computer based images for example can be represented a collection of pixels such as by providing pixel values for color channels that represent the pixels e.g. red green blue RGB . Further as another example images may be represented as one or more functions such as vector based graphics. Using vector based graphics when converting to version that can be rendered on a user interface UI an input to the function can comprise a location in the image and the output can comprise a pixel value for rendering the image. There are many kinds of such functions which can be expressed in a variety of ways including some procedural languages like Postscript.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Typically when images that comprise functions e.g. vector graphics are converted to a rendered image e.g. raster data the one or more functions are iterated over each of the pixels for the image. That is for example if an image comprises ten thousand pixels e.g. 100 by 100 the one or more functions for rendering the image are iterated ten thousand times.

Often images comprise millions of pixels therefore creating an output image based on evaluating one or more functions of an image for respective pixels in the image can be tremendously time consuming and computationally resource intensive. This can among other things lead to a reduced user experience when attempting load images in a UI.

Accordingly one or more techniques and or systems are disclosed for generating images from vector based graphics data for example where the speed of a conversion process from the vector data to raster data can be improved. The processing of one or more functions such as provided in a conversion operation can be processed over the respective pixels in parallel. For example the per pixel processing can be broken down into basic mathematical operations and processing instructions for the operations can be stacked over one or more batches of pixels. The mathematical operations can be performed on the batches of pixels for example utilizing CPU and GPU parallel computation capabilities. Further where per pixel processing diverges parallel processing paths can be created and or individual pixel processing can be performed.

In one embodiment for processing vector based information for an image a first subset of one or more pixels from a set of pixels comprising the image is identified where the first subset comprises one or more pixels used in a raster representation of an element in the image. A first operation can be performed in parallel for the respective one or more pixels in the first subset. The first operation can comprise at least a first portion of a function for generating an image pixel value used to represent the element in the image.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

A method may be devised that provides for generating images from vector based graphics data for example where the speed of a conversion process from the vector data to raster data can be improved. When converting an image of vector based data elements the image can comprise functions that are used to determine pixel values for displaying an element in the rasterized image. The functions for example can be iterated over batches of pixels for the element instead of over individual pixels thereby improving image processing speed among other things.

At in the exemplary method a first operation is performed in parallel for the respective one or more pixels in the first subset. The first operation comprises at least a first portion of a function used to generate an image pixel value representative of the element in the image. For example the function that is used to determine the pixel value for a rasterized element can be iterated over the respective pixels in the first subset. However in this embodiment at least a portion of the function e.g. or all of the function can be performed over the respective pixels in parallel e.g. concurrently .

Having performed the first operation in parallel over the respective pixels in the first subset the exemplary method ends at .

As an illustrative example typically an array of pixel data may be processed by executing a same function for every individual pixel such as to yield color channel values e.g. red green blue RGB color channels for the pixels representing an element. Further the function may comprise a sequence of mathematical operations e.g. addition multiplication interpolation combined with logical operations e.g. capping with floor ceiling values . Therefore in this example respective pixels may comprise an initial value e.g. input value and after evaluation by the function can comprise a rasterization value e.g. output value .

Parallelization of one or more portions of the function for generating an image pixel value used to represent the element in the image may be developed and custom tuned towards specific well known algorithms e.g. linear interpolation . However this approach is time consuming burdensome and may be limited in application. In one aspect the parallelization can be generalized to an application of an arbitrary sequence of per pixel operations. In one embodiment the operations may be defined in terms of a programming language where an execution environment can be produced that is targeted to application on a data array.

For example a portion of the function may comprise an inversion of an RGB pixel byte value such as b 255 b. In this example instead of looping over a byte array and applying the operation for an individual byte a sequence of byte batches can be looped over thereby treating respective batches as an appropriately sized WORD and invoking a parallel central processing unit CPU routine to invert the respective bytes in the WORD e.g. concurrently .

Further in this example a next portion of the function may comprise adding a particular value to respective pixels. A parallel uniform operation can be applied to respective values in the array utilizing a similar batching approach. In one embodiment if uniformity in a flow of the operations broken e.g. if different evaluation results of a portion of the function lead to different sequences of instructions to be performed one of two paths may be used. For example pixels that follow a uniform operation path e.g. without divergent results can be grouped such as into two or more paths e.g. depending on results and parallel execution of the two or more operation paths can continue. Additionally if no uniform code paths are available for one or more pixels pixels can be individually evaluated e.g. fallback to a default of iterating the function over respective pixels .

For example there may be some computing resource overhead added when pixels are grouped for the rasterization process when compared with evaluating individual pixels. In this embodiment for example the number of pixels grouped e.g. batched together for evaluation may result in an addition of more than desired amount of computing resources when compared with a gain in image processing speed. In one embodiment a desired threshold may be established e.g. selected by a user or programmatically for a resource overhead to processing improvement evaluation. For example a ratio threshold may be selected where a ratio of resource increase to processing speed improvement is compared against the threshold.

In one embodiment the one or more pixels can be grouped into the first subset if the resource cost e.g. resource cost to speed improvement ratio meets the desired threshold. For example meeting the desired threshold may mean that there is a sufficient gain in image processing speed to justify the increase in computing resources used for the grouping e.g. parallel processing . In another embodiment the first operation may not be performed on respective pixels in parallel if the resource cost does not meet a desired threshold. That is for example the pixels may not be grouped in the subset if the resource cost does not justify the gain in image processing speed.

At in the example embodiment the first operation is performed in parallel on the respective pixels in the first subset. For example a function for generating an image pixel value used to represent the element in the image can comprise a plurality of operations portions of which may be performed sequentially and or concurrently. As an illustrative example a first series of mathematical operations may be performed as well as logic operations such that the first mathematical operations can be performed sequentially while a logic operation diverges an operational path for some pixels to second set of mathematical operations that can be performed concurrently with the first series of mathematical operations.

In this embodiment for example the first operation may comprise one or more potions of the function for generating the pixel value e.g. including one or more mathematical operations and or logic operations such that the pixel values generated by the portions of the function provide for parallel execution of the first operation. That is for example the first operation may comprise merely one mathematical operation or logic operation or may comprise a plurality of mathematical and or logic operations which are executed over the first subset of pixels until a divergent result is provided by the operation for at least two of the pixels in the first subset.

In the example embodiment at if a divergent result is not obtained by the first operation NO at for example by a portion of the first operation e.g. an addition subtraction multiplication inversion logarithmic function logic operation etc. for the pixels in the first subset the first operation can continue until the pixels are converted at to the raster output values or there is a divergent result. For example a resulting operation value e.g. resulting from some portion of the function for one or more pixels may begin a divergent operational path for the first operation.

As an illustrative example a first and second initial pixel value may be 255 and 245 respectively. In this example a portion of the first operation may be add 5 multiply by 0.5 if the value is less than 130 perform an inverse function x otherwise perform and inverse function y. The first pixel would comprise a result that leads to the y inverse function while the second pixel value would comprise a result that leads to the x inverse function which comprises divergent operational paths for the two pixels.

In one embodiment if the results meet a divergent operation value YES at for the first operations e.g. a result that leads to continued performance of a first operational path a second subset of one or more pixels from the first subset can be identified at where the second subset comprises one or more pixels comprising the divergent operation value. That is for example the pixels which diverge from the first operation path can be grouped into the second subset. Further at a second operation can be performed in parallel for the respective one or more pixels in the second subset where the second operation comprises at least a second portion of the function for generating the image pixel value used to represent the element in the image.

As an example the pixels that comprise the divergent operation value can be grouped into the second subset and the second operation can be performed in parallel on the second subset and the pixels from the first subset that did not comprise the divergent operation value if any NO at can continue in the first operation path by continuing to apply the first operation at . Further the first operation may be applied to the pixels in the first subset that do not comprise the divergent operation value until they are converted YES at to an output pixel value at .

In this example embodiment the second operation can be performed on the second subset if a divergent result is not obtained NO at until they are converted to an output pixel value YES at at . However if a second divergent result is obtained in the performance of the second operation YES at as described above a third subset may be identified for the pixels from the second subset that comprise the second divergent value. As an example a third operation can be performed on the third subset until they are converted to an output value for the pixels or a third divergent result is obtained. In this example it can be appreciated that the operations that comprise the function for generating the output value can be performed on respective divergent paths until the respective pixels from the first subset are converted to respective output values for generating the raster version of the image.

In one embodiment performing a first operation in parallel can comprise applying the first operation e.g. on a data array that comprises pixel values e.g. in an execution environment. For example a data array can comprise a plurality of values respectively representing the plurality of pixels in the first subset. In this way in this example respective portions of the first operation can be applied in parallel to the data array instead of iterating the operation over individual pixel values.

At in the example embodiment if the performance of the first operation produces divergent conversion results YES at the pixels of the first subset can be grouped into one or more second subsets at . Alternately if divergent results are not identified NO at the first operation can continue until the input pixel values are converted YES at to output pixel values . As an example in the input pixel values are evaluated in parallel using the first operation until divergent results are identified.

In this example the divergent results can lead to two or more operation paths for the function that generates the output pixel values . The pixels can be regrouped in accordance with the respective operation paths for the conversion function. In this example regrouping pixels A C and D are grouped into a second operation path and pixels B E and F are grouped into a third operation path e.g. where first second third etc. are merely labels and are not indicative of other characteristics features etc. such as a timing or temporal aspect for example .

In after regrouping the pixels according to the appropriate operations at one or more second operations can be performed in parallel for the respective pixels in the one or more second subsets e.g. the regrouped intermediate pixel values where the one or more second operations can comprise at least a second portion of the function for generating the image pixel value used to represent the element in the image. As an example in the second operation is performed in parallel on the second subset of pixels comprising A C and D and the third operation is performed in parallel on a third subset of pixels comprising B E and F.

As described above the parallel processing of respective operation paths for the regrouped pixels can continue until a divergent result is identified in one or more of the operation paths for example. In one embodiment if uniformity in the parallel performance of the first operation is broken the respective pixels in the first subset can be grouped into one or more uniform operation paths and parallel application of one or more second operations can be performed on the one or more groups of pixels. Alternately a third operation can be performed on one or more or the pixels individually for example where a default operation can comprise iterating a remaining portion of the function over the pixels individually. In this embodiment the breaking of the uniformity in the parallel performance of the first operation can comprise two or more pixels yielding different operation results that lead to different sequences of operation instructions for the conversion of the two or more pixels.

In if a divergent result is identified at the pixels from that operation path can be regrouped according to appropriate operations at and the intermediate values can be evaluated in parallel according to appropriate operations at . This parallel processing can iterate over the one or more subsets of pixels for example until the pixels values are converted YES at to output pixels values according to the function for generating the output pixel values for the image.

As an example in the third operation on the subset comprising pixels B E and F continues until the respective pixel values are converted to output pixel values at which point they can be regrouped according to their specified order. Further the second operation produces a divergent result for pixels A C and D where they are regrouped to a fourth operation path comprising pixels A and D and a fifth operation path comprising pixel C. In this example pixel C has fallen back to a default operation that comprises iterating the remaining portion s of the function over the pixel individually. The fourth and fifth operations yield output pixel values for the respective pixels which can be regrouped according to their specified order.

A system may be devised that provides for generating a rasterized version of an image comprising vector based graphics data for example with improved image processing speed. is a component diagram of an example system for processing vector based information for an image. A computer based processor is configured to process data for the system and the processor is operably coupled with an operation application component which applies one or more operation paths from a vector to raster conversion operation in parallel to data associated with a plurality of pixels from a set of pixels comprising the image or one or more elements thereof. A pixel grouping component is operably coupled with the operation application component and configured to group pixels into two or more second operation path groups if first path operation results are different for a same sub operation for two or more pixels. Output pixel data for example comprising pixel values used to generate the raster version of the image can be produced from the application of the parallel operation paths for the conversion operation .

In this example the operation path evaluation component can identify a resource cost of grouping the pixels such as additional computing resources that may be used to group and or process the group of pixels and can identify a conversion speed improvement for grouping the pixels such as a processing speed gain by the grouping and processing in the group. In this way in this example the ratio of resource cost to speed gain can be compared against a desired threshold for the ratio to determine whether to proceed with the grouping and or or operation processing of the group of pixels.

In one embodiment a vector to raster conversion operation can comprise programming code comprised of one or more operation paths that are activated by an operation result from a previous path. For example programming codes commonly utilize mathematical equations and or logic operations that can drive the data that is processed down different operation paths. An IF THEN statement often results in different operation paths for example for different input data. In this embodiment for example input pixel values that are run in parallel through the conversion operation can provide for divergent operation paths such as determined by the pixel grouping component .

In one embodiment the data associated with the pixels can be comprised in a data array of pixel values . As an example input pixel data can comprise initial values for the rasterization process of the vector based data which are converted to output pixel values for rendering the image after processing the operations over the values in parallel. In this embodiment the initial pixel values e.g. and subsequent regrouped pixel subsets can be arranged in data arrays for parallel processing of code of the conversion operation to ultimately yield output pixel values .

In one embodiment the pixel grouping component can group the pixels by creating a data array batch for the data associated with the pixels. For example to run the conversion operation over the array of pixel values in parallel the arrays can be batched for respective operation paths so that the values are processed in parallel. A conversion operation stacking component can be configured to stack instructions from the conversion operation to run over the one or more batches of pixels according to appropriate operation paths. For example code of the conversion operation can comprise sequential operation instructions that are stacked to run over the batches in an appropriate order. In this way in this example the instructions for the respective one or more operation paths for the conversion code can be efficiently run over the batches in parallel to yield output pixel values .

An alternate method can be devised to efficiently generate a raster image from vector data for the image. is a flow diagram of an alternate exemplary method for processing vector based information for an image. At a subset of one or more pixels from a set of pixels comprising the image is identified where the subset comprises one or more pixels used in a raster representation of an element in the image. At a vector to raster conversion operation is performed for the respective pixels in the subset in parallel.

In one embodiment prior to grouping the pixels into the subset and or prior to performing a parallel processing operation the pixels can be evaluated to determine whether to group the one or more pixels into one or more subsets based on a resource use to speed gain evaluation for the respective pixels at . That is for example if an image processing speed gained by grouping and or processing the grouped pixels does not outweigh an amount of additional computing resources used to perform the grouping and or processing the pixels may not be grouped and or processed in parallel e.g. processed individually instead .

Performing the vector to raster conversion operation can comprise performing one or more first operations in parallel on one or more of the respective pixels in the subset at if an operation result meets a desired operation threshold YES at . Further performing the vector to raster conversion operation can comprise performing one or more second operations in parallel on one or more of the respective pixels in the subset at if the operation result does not meet the desired operation threshold NO at . For example a desired operation threshold can comprise the respective pixel values for the conversion operation having a result that provides for continued parallel evaluation of the pixels.

Performing the vector to raster conversion operation for the respective pixels in the subset in parallel can comprise performing operations for the respective pixels in the subset in parallel until at least one sub operation result from a first operation path of the raster conversion operation for one or more pixels in the subset causes a divergence in the raster conversion operation of the at least one pixel YES at . If there is a divergence in the results from the first operation path at a second operation path of the raster conversion operation can be performed in parallel for the one or more divergent pixels in the subset at .

Alternately in this example embodiment the non divergent pixels in the subset can continue to be evaluated using the first operation path of the raster conversion operation in parallel at if a divergence in the raster conversion operation is not identified NO at . Further the respective operation paths can be continued for example until the respective pixels for the image are converted to output pixel data which can comprise pixel values used to render a raster image.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method such as at least some of the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as at least some of the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

