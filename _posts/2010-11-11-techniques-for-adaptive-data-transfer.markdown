---

title: Techniques for adaptive data transfer
abstract: Techniques for adaptive data transfer are disclosed. In one particular exemplary embodiment, the techniques may be realized as a method for adaptive data transfer comprising receiving a write request at an application protocol layer, buffering the write request, transferring to electronic storage a first portion of data of the buffered write request using a first setting value in a range, measuring, a transfer rate of the first portion of transferred data, varying the first setting value by a small amount in a first direction to identify a second setting value, transferring to electronic storage a second portion of data of the buffered write request using the second setting value, measuring a transfer rate of the second portion of transferred data, and replacing the first setting value with the second setting value if the transfer rate of the second portion of transferred data is greater than the first transfer rate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08533374&OS=08533374&RS=08533374
owner: Symantec Corporation
number: 08533374
owner_city: Mountain View
owner_country: US
publication_date: 20101111
---
The present disclosure relates generally to data transfer and more particularly to techniques for adaptive data transfer.

Networks may be required to handle larger data transfers with increasing use of networked storage such as for example cloud based storage for data backup data archival and other data needs. Clients of network based storage may not be aware of other clients competing for available network bandwidth and or storage transfer bandwidth. Network conditions and bandwidth may vary over time and a single set of data transfer settings may not perform optimally for data transfer.

In view of the foregoing it may be understood that there may be significant problems and shortcomings associated with current data transfer technologies.

Techniques for adaptive data transfer are disclosed. In one particular exemplary embodiment the techniques may be realized as a method for adaptive data transfer comprising receiving a write request at an application protocol layer buffering the write request transferring to electronic storage a first portion of data of the buffered write request using a first setting value in a range measuring using at least one computer processor a transfer rate of the first portion of transferred data varying the first setting value by a small amount in a first direction to identify a second setting value transferring to electronic storage a second portion of data of the buffered write request using the second setting value measuring a transfer rate of the second portion of transferred data replacing the first setting value with the second setting value if the transfer rate of the second portion of transferred data is greater than the transfer rate of the first portion of transferred data and varying the first setting value by a small amount in a second direction if the transfer rate of the second portion of transferred data is less than the transfer rate of the first portion of transferred data to identify a third setting value.

In accordance with other aspects of this particular exemplary embodiment the techniques may include transferring to electronic storage a third portion of data of the buffered write request using the third setting value measuring a transfer rate of the third portion of transferred data and replacing the first setting value with the third setting value if the transfer rate of the third portion of transferred data is greater than the transfer rate of the first portion of transferred data.

In accordance with further aspects of this particular exemplary embodiment the techniques may include continuing subsequent incremental changes and corresponding measurements of performance in a direction if performance in the particular direction continues to improve.

In accordance with additional aspects of this particular exemplary embodiment the techniques may include varying the first setting value by a large amount in a first direction transferring to electronic storage a third portion of data of the buffered write request using the varied setting value measuring a transfer rate of the third portion of transferred data and replacing the first setting value with the varied setting value if the transfer rate of the third portion of transferred data is greater than the transfer rate of a portion of transferred data associated with the first setting value.

In accordance with additional aspects of this particular exemplary embodiment the large variation in the setting value may comprise a setting value associated with a greater transfer rate than the first setting value and the large variation in the setting value is persisted as a global performance maximum.

In accordance with additional aspects of this particular exemplary embodiment the techniques may include determining a median value of a plurality of previous global performance maximums and using the determined median value of the plurality of previous global performance maximums during subsequent instantiations of a transfer component.

In accordance with additional aspects of this particular exemplary embodiment the setting value may comprise buffer size.

In accordance with additional aspects of this particular exemplary embodiment the setting value may comprise IP priority.

In accordance with additional aspects of this particular exemplary embodiment the techniques may include alternating settings for which a value is manipulated to provide optimization of a plurality of transfer settings.

In accordance with additional aspects of this particular exemplary embodiment the baseline may be persisted and subsequent instantiations of a transfer component may use the persisted baseline.

In accordance with additional aspects of this particular exemplary embodiment the baseline setting value in a specified range for the transfer of the first portion of data may comprise an arbitrary setting value.

In accordance with additional aspects of this particular exemplary embodiment the techniques may include persisting a plurality of setting values as baseline values and correlating one or more network conditions with each of the plurality of persisted baseline values.

In accordance with additional aspects of this particular exemplary embodiment the techniques may include comparing network conditions at a time of the received write request with the one or more network conditions correlated with each of the plurality of persisted baseline values and identifying a baseline value of the plurality of persisted baseline values to use for the transferring to electronic storage of the first portion of data based at least in part on the comparison.

In accordance with additional aspects of this particular exemplary embodiment the techniques may be realized as at least one non transitory processor readable storage medium for storing a computer program of instructions configured to be readable by at least one processor for instructing the at least one processor to execute a computer process for performing the method.

In another particular exemplary embodiment the techniques may be realized as an article of manufacture for adaptive data transfer the article of manufacture may comprise at least one non transitory processor readable medium and instructions stored on the at least one medium. The instructions may be configured to be readable from the at least one medium by at least one processor and thereby cause the at least one processor to operate so as to receive a write request at an application protocol layer buffer the write request transfer to electronic storage a first portion of data of the buffered write request using a first setting value in a range measure a transfer rate of the first portion of transferred data vary the first setting value by a small amount in a first direction to identify a second setting value transfer to electronic storage a second portion of data of the buffered write request using the second setting value measure a transfer rate of the second portion of transferred data replace the first setting value with the second setting value if the transfer rate of the second portion of transferred data is greater than the transfer rate of the first portion of transferred data and vary the first setting value by a small amount in a second direction if the transfer rate of the second portion of transferred data is less than the transfer rate of the first portion of transferred data to identify a third setting value.

In yet another particular exemplary embodiment the techniques may be realized as a system for adaptive data transfer comprising one or more processors communicatively coupled to a network wherein the one or more processors are configured to receive a write request at an application protocol layer buffer the write request transfer to electronic storage a first portion of data of the buffered write request using a first setting value in a range measure a transfer rate of the first portion of transferred data vary the first setting value by a small amount in a first direction to identify a second setting value transfer to electronic storage a second portion of data of the buffered write request using the second setting value measure a transfer rate of the second portion of transferred data replace the first setting value with the second setting value if the transfer rate of the second portion of transferred data is greater than the transfer rate of the first portion of transferred data and vary the first setting value by a small amount in a second direction if the transfer rate of the second portion of transferred data is less than the transfer rate of the first portion of transferred data to identify a third setting value.

In accordance with additional aspects of this particular exemplary embodiment the processors may further be configured to transfer to electronic storage a third portion of data of the buffered write request using the third setting value measure a transfer rate of the third portion of transferred data and replace the baseline setting value with the third setting value if the transfer rate of the third portion of transferred data is greater than the transfer rate of the first portion of transferred data.

In accordance with additional aspects of this particular exemplary embodiment the processors may further be configured to vary the setting value by a large amount in a first direction transfer to electronic storage a third portion of data of the buffered write request using the varied setting value measure a transfer rate of the third portion of transferred data and replace the baseline setting value with the varied setting value if the transfer rate of the third portion of transferred data is greater than the transfer rate of a portion of transferred data associated with the first setting value.

In accordance with additional aspects of this particular exemplary embodiment the processors may further be configured to persist a plurality of setting values as baseline values and correlate one or more network conditions with each of the plurality of persisted baseline values.

In accordance with additional aspects of this particular exemplary embodiment the processors may further be configured to compare network conditions at a time of the received write request with the one or more network conditions correlated with each of the plurality of persisted baseline values and identify a baseline value of the plurality of persisted baseline values to use for the transferring to electronic storage of the first portion of data based at least in part on the comparison.

The present disclosure will now be described in more detail with reference to exemplary embodiments thereof as shown in the accompanying drawings. While the present disclosure is described below with reference to exemplary embodiments it should be understood that the present disclosure is not limited thereto. Those of ordinary skill in the art having access to the teachings herein will recognize additional implementations modifications and embodiments as well as other fields of use which are within the scope of the present disclosure as described herein and with respect to which the present disclosure may be of significant utility.

The description below describes network elements computers and or components of a system and method for adaptive data transfer that may include one or more modules. As used herein the term module may be understood to refer to computing software firmware hardware and or various combinations thereof. Modules however are not to be interpreted as software which is not implemented on hardware firmware or recorded on a processor readable recordable storage medium i.e. modules are not software per se . It is noted that the modules are exemplary. The modules may be combined integrated separated and or duplicated to support various applications. Also a function described herein as being performed at a particular module may be performed at one or more other modules and or by one or more other devices instead of or in addition to the function performed at the particular module. Further the modules may be implemented across multiple devices and or other components local or remote to one another. Additionally the modules may be moved from one device and added to another device and or may be included in both devices.

With reference to computer system of modem network interface or some other method may be used to provide connectivity from one or more of client system to network . Client system may be able to access information on server A or B using for example a web browser or other client software. Such a client may allow client system to access data hosted by server A or B or one of storage devices A N N and or N .

Networks and may be local area networks LANs wide area networks WANs the Internet cellular networks satellite networks or other networks that permit communication between client servers and other devices communicatively coupled to networks and . Networks and may further include one or any number of the exemplary types of networks mentioned above operating as a stand alone network or in cooperation with each other. Networks and may utilize one or more protocols of one or more clients or servers to which they are communicatively coupled. Networks and may translate to or from other protocols to one or more protocols of network devices. Although networks and are each depicted as one network it should be appreciated that according to one or more embodiments networks and may each comprise a plurality of interconnected networks.

Storage devices A N B N and or N may be network accessible storage and may be local remote or a combination thereof to server A or B. Storage devices A N B N and or N may utilize a redundant array of inexpensive disks RAID magnetic tape disk a storage area network SAN an internet small computer systems interface iSCSI SAN a Fibre Channel SAN a common Internet File System CIFS network attached storage NAS a network file system NFS optical based storage or other computer accessible storage. Storage devices A N B N and or N may be used for backup or archival purposes.

According to some embodiments client may be a smartphone PDA desktop computer a laptop computer a server another computer or another device coupled via a wireless or wired connection to network Client may receive data from user input a database a file a web service and or an application programming interface.

Servers A and B may be application servers archival platforms backup servers network storage devices media servers email servers document management platforms enterprise search servers or other devices communicatively coupled to network . Servers A and B may utilize one of storage devices A N B N and or N for the storage of application data backup data or other data. Servers A and B may be hosts such as an application server which may process data traveling between client and a backup platform a backup process and or storage. According to some embodiments servers A and B may be platforms used for backing up and or archiving data.

Transfer optimization module may monitor adjust and or optimize one or settings which may improve a data transfer rate and or manage a data transfer rate. According to some embodiments transfer optimization module may operate at an application protocol layer such as for example a higher level protocol including but not limited to Simple Object Access Protocol SOAP and Representational State Transfer REST .

A protocol externalized by many cloud based storage providers may be built around the notion of web services using either or both a REST or SOAP based protocol. Overall performance of data transfer e.g. a data protection application interfacing with a cloud based storage provider may be most significantly influenced by the transfer cost of the actual payload data. Control traffic may be for the most part less significant with regards to data transfer performance e.g. backup or restore performance .

Managing one or more transfer parameters at a higher level protocol may provide advantages. Fixed parameters e.g. fixed payload sizes may not adapt well to changing conditions. Parameters managed at a lower level e.g. at an IP layer of an Ethernet driver may be optimized for a specific application and may ignore current network conditions. Parameters managed at a lower level may also not account for congestion and challenges experienced at a higher level in a stack of protocols used to transfer data e.g. no problems may be encountered at an IP protocol level but a transfer may not be optimized due to conditions occurring at an upper layer .

Transfer optimization module may buffer one or more requests at a higher protocol layer e.g. requests between a data protection application and the cloud based storage provider may be buffered at a SOAP protocol level . Buffered data may be used for the physical transfer. A user may configure a range e.g. an upper and lower limit of buffer sizes to use .

Transfer optimization module may initially start a sequence of transfers at an arbitrary point within the specified range. The time it takes to complete a first transfer may be measured by Transfer optimization module . A second transfer may vary the previously used buffer size by a small amount e.g. 1 3 . Again the time it takes to complete the transfer may be measured by transfer optimization module . If a second transfer measurement has a better performance than the first measurement transfer optimization module may continue making these small changes in the same direction at the application protocol layer which either increases or decreases the buffer size. If the measurement has worse performance the direction of change may be inverted. For example if a first transfer uses a setting e.g. buffer size of 100 MB and a second transfer achieves a worse performance with a varied setting e.g. a buffer size of 102 MB a third transfer may have a same setting varied from the first setting value in an opposite direction from the second transfer e.g. a buffer size of 98 MB . If a change in a setting results in an improvement in data transfer performance the changed setting may become a new baseline. Additional variations of the setting in a same direction may be tested for performance in subsequent transfers e.g. a third transfer may use a buffer size of 96 MB .

According to some embodiments transfer optimization module may manage a plurality of settings for one or more data transfers. Settings may include but are not limited to buffer size IP priority and latency. According to some embodiments transfer optimization module may vary a single setting per data transfer in order to isolate performance impacts of a change. For example transfer optimization module may vary a buffer size from an initial or baseline setting value for a first transfer. On a third or subsequent transfer transfer optimization module may vary a second parameter setting such as for example IP priority. According to some embodiments adjustments in a first parameter may continue until improvements in performance e.g. a transfer rate decline below a certain level. According to some embodiments adjustments in a first parameter may be made for a specified number of transfers or over a specified period of time. Parameter or setting values may be ranked in order of importance or impact on performance. Transfer optimization module may vary parameters according to a rank to determine an optimized setting first for highest ranked parameters. According to some embodiments transfer optimization module may track settings modification impacts on performance and may rank parameters according. According to some embodiments modification and variance of one or more parameters by transfer optimization module may user enabled and or disabled. Ranking of parameters may also be user configurable. A user may additionally set a range for parameter variances e.g. a minimum value and a maximum value .

According to some embodiments transfer optimization module may periodically induces a large variation of a setting value e.g. every 20 transfers the buffer size may be varied by 20 80 either up or down . If this larger variation results in better performance a new baseline may be established otherwise a prior baseline may be continued to be used. A new baseline that is established as a result of a larger variation of a setting may be a global performance maximum.

According to some embodiments transfer optimization module may persist a setting value resulting in improvements in data transfer performance e.g. a base point buffer size . This may allow subsequent instances of a same component to start at a better setting value e.g. a buffer size than an initial arbitrary value. If a significant period of time has elapsed since the previous data transfer different network conditions may be occurring. A transfer setting start value a buffer size setting may then be derived by picking the median value of previous global performance maximums.

According to some embodiments transfer optimization module may persist a plurality of baselines. Transfer optimization module may persist metadata associated with a baseline including but not limited to network conditions at a time of transfer associated with a baseline a time a transfer associated with a baseline occurred e.g. twelve AM or twelve PM a transfer size associated with a baseline other settings associated with a baseline e.g. a baseline may be associated with a particular buffer size and a particular IP priority or other transfer setting and one or more conditions of a storage target receiving a transfer associated with a baseline. Transfer optimization module may analyze one or more conditions present at a time of a transfer request and may map present conditions to metadata associated with a persisted baseline to identify an optimum starting value. Transfer optimization module may identify a plurality of persisted baselines whose associated metadata indicate applicability of the baselines. If a plurality of persisted baselines are identified an average or other computation may be made to identify an optimum starting value for a transfer setting.

Bus allows data communication between central processor and system memory which may include read only memory ROM or flash memory neither shown and random access memory RAM not shown as previously noted. The RAM may be the main memory into which the operating system and application programs may be loaded. The ROM or flash memory can contain among other code the Basic Input Output system BIOS which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system may be stored on and accessed via a computer readable medium such as a hard disk drive e.g. fixed disk an optical drive e.g. optical drive a floppy disk unit or other storage medium. For example transfer optimization module may be resident in system memory .

Storage interface as with the other storage interfaces of computer system can connect to a standard computer readable medium for storage and or retrieval of information such as a fixed disk drive . Fixed disk drive may be a part of computer system or may be separate and accessed through other interface systems. Modem may provide a direct connection to a remote server via a telephone link or to the Internet via an Internet service provider ISP . Network interface may provide a direct connection to a remote server via a direct network link to the Internet via a POP point of presence . Network interface may provide such connection using wireless techniques including digital cellular telephone connection Cellular Digital Packet Data CDPD connection digital satellite data connection or the like.

Many other devices or subsystems not shown may be connected in a similar manner e.g. document scanners digital cameras and so on . Conversely all of the devices shown in need not be present to practice the present disclosure. The devices and subsystems can be interconnected in different ways from that shown in . Code to implement the present disclosure may be stored in computer readable storage media such as one or more of system memory fixed disk optical disk or floppy disk . Code to implement the present disclosure may also be received via one or more interfaces and stored in memory. The operating system provided on computer system may be MS DOS MS WINDOWS OS 2 OS X UNIX Linux or another known operating system.

Power manager may monitor a power level of battery . Power manager may provide one or more APIs Application Programming Interfaces to allow determination of a power level of a time window remaining prior to shutdown of computer system a power consumption rate an indicator of whether computer system is on mains e.g. AC Power or battery power and other power related information. According to some embodiments APIs of power manager may be accessible remotely e.g. accessible to a remote backup management module via a network connection . According to some embodiments battery may be an Uninterruptable Power Supply UPS located either local to or remote from computer system . In such embodiments power manager may provide information about a power level of an UPS.

Referring to there is shown a transfer optimization management in accordance with an embodiment of the present disclosure. As illustrated the transfer optimization management may contain one or more components including transfer setting control module transfer setting persistence module transfer pattern analysis module and error logging and reporting module .

Transfer setting control module may manage one or more settings used for data transfer. Transfer setting control module may buffer a write request and transfer a first portion using a first setting value e.g. an arbitrary setting value in a specified range . Transfer setting control module may measure a corresponding transfer rate. Transfer setting control module may transfer a second portion using a second setting value varied in a first direction by a small amount e.g. 1 3 or another variance amount specified by a configurable setting . Transfer setting control module may measure the second transfer rate. If the second transfer rate indicates improved performance Transfer setting control module may persist the setting value as a new baseline for the setting. Transfer setting control module may perform a subsequent transfer varying a setting and additional small amount from the new baseline in the same direction e.g. if the first transfer used a 100 MB buffer size and the second transfer using a 102 MB buffer size results in improved performance the third transfer may use a 104 MB buffer size setting .

If the measurement has worse performance Transfer setting control module may invert the direction of change. For example if a first transfer uses a setting e.g. buffer size of 100 MB and a second transfer achieves a worse performance with a varied setting e.g. a buffer size of 102 MB a third transfer may have a same setting varied from the first setting value in an opposite direction from the second transfer e.g. a buffer size of 98 MB . If a change in a setting results in an improvement in data transfer performance the changed setting may become a new baseline. Additional variations of the setting in a same direction may be tested for performance in subsequent transfers e.g. a third transfer may use a buffer size of 96 MB .

According to some embodiments Transfer setting control module may periodically induces a large variation of a setting value e.g. every 20 transfers the buffer size may be varied by 20 80 either up or down after a specified period of time a large variation may be implemented or after a specified amount of data is transferred a large variation may be implemented . If this larger variation results in better performance a new baseline may be established otherwise a prior baseline may be continued to be used. A new baseline that is established as a result of a larger variation of a setting may be a global performance maximum.

Transfer setting persistence module may persist a setting value resulting in improvements in data transfer performance e.g. a base point buffer size . This may allow subsequent instances of a same component to start at a better setting value e.g. a buffer size than an initial arbitrary value. If a significant period of time has elapsed since the previous data transfer different network conditions may be occurring. A transfer setting start value a buffer size setting may then be derived by picking the median value of previous global performance maximums.

According to some embodiments Transfer setting persistence module may persist a plurality of baselines. Transfer setting persistence module may persist metadata associated with a baseline including but not limited to network conditions at a time of transfer associated with a baseline a time a transfer associated with a baseline occurred e.g. twelve AM or twelve PM a transfer size associated with a baseline other settings associated with a baseline e.g. a baseline may be associated with a particular buffer size and a particular IP priority or other transfer setting and one or more conditions of a storage target receiving a transfer associated with a baseline.

Transfer pattern analysis module may analyze one or more conditions present at a time of a transfer request and may map present conditions to metadata associated with a persisted baseline to identify an optimum starting value. Transfer pattern analysis module may identify a plurality of persisted baselines whose associated metadata indicate applicability of the baselines. If a plurality of persisted baselines are identified an average or other computation may be made to identify an optimum starting value for a transfer setting.

Error logging and reporting module may produce logs reports or other information associated with adaptive data transfer.

Referring to there is depicted a method for adaptive data transfer for a read request in accordance with an embodiment of the present disclosure. At block the method may begin.

At block a write request may be buffered at an upper level protocol level. For example buffering may occur at a higher level protocol including but not limited to Simple Object Access Protocol SOAP and Representational State Transfer REST .

At block a setting range may be configured e.g. a user interface may be provided allowing the configuration of one or more transfer settings including but not limited to a buffer size minimum a buffer size maximum a highest level IP priority a lowest level IP priority a maximum latency value and a minimum latency value .

At block a first portion of data may be transferred using a setting value e.g. an arbitrary setting value within a configured range or a persisted setting baseline value and a transfer time may be measured.

At block the setting value may be varied in a first direction by a small amount e.g. 1 3 or another variance amount specified by a configurable setting .

At block it may be determined whether transfer performance improved from a first transfer to a second transfer.

If transfer performance improved the method may continue at block . If transfer performance did not improve the method may continue at block .

At block the setting value may be varied by a small amount in a second direction from a setting value used for the first transfer.

At block a new base point may be established. A base point may be persisted in electronic storage and may be associated with metadata including but not limited to network conditions at a time of transfer associated with a baseline a time a transfer associated with a baseline occurred e.g. twelve AM or twelve PM a transfer size associated with a baseline other settings associated with a baseline e.g. a baseline may be associated with a particular buffer size and a particular IP priority or other transfer setting and one or more conditions of a storage target receiving a transfer associated with a baseline.

According to some embodiments variance of different settings may be performed. For example after establishment of a base point for a buffer size a second set of transfers may attempt to improve transfer performance by adjusting a second setting value e.g. IP priority latency etc. . Adjustment of settings may depend on one or more configurations on a protocol at which the adaptive data transfer is implemented on historical performance of settings adjustments on network conditions and other factors. Thus according to some embodiments after establishing a base point for a first setting the method may return to block and configure a setting range for a second setting or if a setting range for a second setting is pre configured or persisted the method may return to block .

At block the setting may be varied by a small amount further in a same direction e.g. if the second setting value increased a setting by 1 3 the third setting value may increase the setting by an additional 1 3 . 

At block one or more portions may be transferred using a varied setting value and the transfer time may be measured.

At block it may be determined whether the transfer performance has improved. If the transfer performance has improved the method may return to block to set a new base point for the setting. If the performance has not improved the method may continue to block . As shown by the dashed line according to some embodiments the method may proceed to block to test a data transfer with the setting varied in an opposite direction.

At block the setting value may be maintained at a base point e.g. for a short period of time while other settings are adjusted or while a larger variation in the setting value is tested as discussed in reference to below .

Referring to there is depicted a method for adaptive data transfer for a write request in accordance with an embodiment of the present disclosure. At block the method may begin.

At block a write request may be buffered at an application level protocol layer. According to some embodiments a write request may already be buffered e.g. as part of small transfer setting variation testing discussed with respect to above .

At block it may be determined whether one or more criteria have been met e.g. have a specified number of data transfers occurred has a specified period of time elapsed where one or more network conditions detected has a specified amount of data been transferred etc. . If one or more criteria have been met the method may continue at block . If one or more criteria have not been met the method may continue at block .

At block a large variation of a setting value may be made e.g. the buffer size may be varied by 20 80 either up or down .

At block one or more portions of data may be transferred using the varied setting and the transfer performance may be measured.

At block the performance of a new setting value may be evaluated. If this larger variation results in better performance the method may continue at block . If this larger variation results in decreased performance the method may continue at block .

At block an existing baseline may be continued to be used. According to some embodiments a large variation in an opposite direction may be made e.g. if a first large variation increasing a buffer size by 50 resulted in decreased performance a second variation decreasing a buffer size by 60 may be made and the method may return to block .

At block a new baseline may be established. A new baseline that is established as a result of a larger variation of a setting may be a global performance maximum.

At this point it should be noted that adaptive data transfer in accordance with the present disclosure as described above typically involves the processing of input data and the generation of output data to some extent. This input data processing and output data generation may be implemented in hardware or software. For example specific electronic components may be employed in an adaptive data transfer module or similar or related circuitry for implementing the functions associated with adaptive data transfer in accordance with the present disclosure as described above. Alternatively one or more processors operating in accordance with instructions may implement the functions associated with adaptive data transfer in accordance with the present disclosure as described above.

If such is the case it is within the scope of the present disclosure that such instructions may be stored on one or more processor readable storage media e.g. a magnetic disk or other storage medium or transmitted to one or more processors via one or more signals embodied in one or more carrier waves.

The present disclosure is not to be limited in scope by the specific embodiments described herein. Indeed other various embodiments of and modifications to the present disclosure in addition to those described herein will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus such other embodiments and modifications are intended to fall within the scope of the present disclosure. Further although the present disclosure has been described herein in the context of a particular implementation in a particular environment for a particular purpose those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present disclosure may be beneficially implemented in any number of environments for any number of purposes. Accordingly the claims set forth below should be construed in view of the full breadth and spirit of the present disclosure as described herein.

