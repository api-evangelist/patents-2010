---

title: Bidirectional synchronization with CRM applications
abstract: Synchronization between email, contact management, scheduling (ECS) and customer relationship management (CRM) applications is facilitated through a synchronization module on the ECS side using an Extensible Markup Language (XML) file for keeping track of synchronization states. The CRM server version of an item is compared with the XML file to detect changes and the same performed for the ECS item. The changes are then pushed to the corresponding item for the columns that have changed. Last updated item is selected in case of a conflict.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08533258&OS=08533258&RS=08533258
owner: Microsoft Corporation
number: 08533258
owner_city: Redmond
owner_country: US
publication_date: 20101020
---
Customer Relationship Management CRM solutions provide tools and capabilities needed to create and maintain a clear picture of customers from first contact through purchase and post sales. For complex organizations a CRM system may provide features and capabilities to help improve the way sales marketing and or customer service organizations target new customers manage marketing campaigns and drive sales activities. CRM systems may include many components hardware and software utilized individually or in a shared manner by users internal or external to the organization.

CRM systems are an example of computing systems where data associated with entities such as persons organizations accounts and similar ones are maintained for various purposes. Some of the information collected and maintained by CRM applications may also be collected by other common applications such as email contact and or scheduling applications for example Outlook by Microsoft Corporation of Redmond Wash. . When users have similar information maintained by two or more applications a logical action is to synchronize the information in order to enhance efficiency and accuracy. While some applications are capable of synchronizing maintained information conventional synchronization approaches are relatively unreliable resource expensive and cannot take full advantage of enhanced capabilities such as delegation or search.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to exclusively identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to enabling synchronization of information between a CRM application and an email contact scheduling ECS application through a synchronization module. According to some embodiments online and offline versions of the ECS application may be enabled to synchronize data associated with contacts emails scheduling events and properties with data maintained by the CRM application through a background process employing one or more tables. In addition to ensuring efficient synchronization delegations may be accommodated and enhanced search capabilities of the ECS application utilized in determining relevant data for the CRM application.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory and do not restrict aspects as claimed.

As briefly described above bidirectional synchronization between ECS and CRM applications may be facilitated through a synchronization module on the ECS side using an Extensible Markup Language XML file for keeping track of synchronization states. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a computing device those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and comparable computing devices. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer implemented process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program that comprises instructions for causing a computer or computing system to perform example process es . The computer readable storage medium can for example be implemented via one or more of a volatile computer memory a non volatile memory a hard drive a flash drive a floppy disk or a compact disk and comparable media.

Throughout this specification the term platform may be a combination of software and hardware components for providing CRM and or email contact scheduling based services. Examples of platforms include but are not limited to a hosted service executed over a plurality of servers an application executed on a single computing device and comparable systems. The term server generally refers to a computing device executing one or more software programs typically in a networked environment. However a server may also be implemented as a virtual server software programs executed on one or more computing devices viewed as a server on the network. More detail on these technologies and example operations is provided below.

The combined term ECS application is used herein to collectively describe hosted and or local applications that provide email scheduling contact management calendaring and similar services. An example of such applications is Outlook by Microsoft Corp. of Redmond Wash. Such applications may provide one or more of the above listed functionality through a number of user interfaces. They may be executed on a server as a hosted service and accessed by users through thin clients such as browsers or locally executed client applications. Some of the services may be provided online others may be provided offline. For simplicity such applications are referred to collectively as ECS applications.

Referring to diagram illustrates a networked environment where CRM and ECS applications may be synchronized according to some embodiments. The computing devices and computing environments shown in diagram are for illustration purposes. Embodiments may be implemented in various local networked and similar computing environments employing a variety of computing devices and systems.

In an example environment illustrated in diagram users may access a CRM application executed on a CRM server through a browser or client application executed on their computing devices via network s . The users may also access email contact management and or scheduling services managed by an ECS application executed on server through the same or different browser or client application executed on their computing devices via network s . Some of the tasks associated with the ECS services may be performed online while others may be performed offline. In case of dedicated client applications the client application is sometimes referred to as offline client when it is operating without a connection to the ECS application . When the client application is in contact with the ECS application it may be referred to as online client.

Both ECS application and CRM application may collect and maintain information such as contact information appointment meeting information email data and comparable information. To avoid duplication of information on ECS and CRM sides as well as to prevent conflicting data from being used bidirectional synchronization may be performed employing a synchronization module executed in conjunction with the ECS client application s .

Conventional synchronization approaches rely on messaging architecture and a Component Object Model such as Messaging Application Programming Interface MAPI RPC on change events which may be inherently unreliable. Furthermore column level discrepancies may not be reconciled between the server and the client so that one always overwrites all data on the other. Additionally conventional synchronization methods typically process on a foreground UI thread causing the ECS client to hang while processing occurs. Traditional ECS applications do not allow delegated or shared mailboxes to be synchronized and do not take advantage of enhanced search capabilities.

Both the online and offline versions of an ECS client according to embodiments may enable synchronization of CRM contacts and CRM activities to ECS folders or ECS synchronization module. The ECS synchronization module enables ECS users to view CRM information including contacts tasks phone calls letters faxes appointments and e mails within the ECS user interface. The online and offline synchronization processes manage replication of data back and forth between CRM database s and local database s on a computer running the offline client. An offline synchronization process may manage replication of information from the CRM database s to the offline client. On the other hand an online synchronization process may manage replication of changes in the local data store from the offline client to the CRM database s when offline client reconnects to the network.

Synchronization between email contact management scheduling ECS and customer relationship management CRM applications is facilitated through a synchronization module on the ECS side using an Extensible Markup Language XML file for keeping track of synchronization states. The CRM server version of an item is compared with the XML file to detect changes and the same performed for the ECS item. The changes are then pushed to the corresponding item for the columns that have changed. Last updated item is selected in case of a conflict.

Changes on the ECS side performed through a low level programming interface such as MAPI which causes the synchronization module to perform its operations using a background thread improving perceived performance by the user. MAPI is a messaging architecture that allows client programs to become e mail messaging enabled aware or based by calling MAPI subsystem routines that interface with messaging servers. MAPI includes facilities to access message transports message stores and directories. Delegation such as sharing of mailboxes is accommodated for users who mark those items for synchronization to CRM. Delegated items to be synchronized may be tagged by a delegated user flow through the ECS service to the primary user and synchronized to the CRM system avoiding some race conditions and preventing duplicates from being created on the CRM server. Thus delegated items may be synchronized through an indirect synchronization process via the ECS server.

Computing devices and may be any computing device including but not limited to desktop computers laptop computers servers handheld computers vehicle mount computers smart phones and comparable devices.

For items that are modified in ECS application the process for synchronizing those changes with items in CRM application may include ECS synchronization process detecting changes by monitoring MAPI change notifications which ECS application may generate whenever an item is altered. When a MAPI notification is detected at the CRM modules for an item that is marked for synchronization an entry recording this may be added to an ECS synchronization table in the ECS client cache. This ensures that changes to CRM tracked items inside ECS are retrieved by the CRM application even when these changes occur in absence of the CRM module .

The ECS client cache created by the CRM module may be a compact database that is located on the client and is used to store information about synchronized items for use by the synchronization process. The cache may contain information that is necessary to identify and locate items in ECS and CRM as well as changes to those items that are made by either system to re attempt synchronization for changes that fail to synchronize. This ensures that the CRM module has a ready reference to establish whether a change indicates that a new record needs to be added or that it requires an existing record to be modified without doing resource costly scans on ECS. As a result faster synchronization may be accomplished without significant impact on ECS performance.

Under certain circumstances for example if a change occurs before the CRM module is fully loaded the CRM module may miss MAPI notifications. To mitigate such scenarios installation of the CRM module may create a MAPI contents table or ID Mapping Table which stores all items that are marked for synchronization sorted in reverse order based on modification date. As a result any missed change notifications except for delete notifications may be retrieved the next time the system scans the ID Mapping Table for the synchronized folders for all items that have been changed since the last synchronization occurred. Items in ID Mapping Table may be processed one by one until the last synchronization time is reached.

Thus the ECS client cache contains at least two tables the ID Mapping Table and the ECS synchronization table . For items that have been deleted a periodic reconciliation may be performed to look at items in the ECS client cache and to verify the existence of the items in the ECS data store. If an item cannot be found a deletion entry may be added to the ECS synchronization table . Two example tables with example data and value types are shown below.

Synchronization process may retrieve the items from the tables for processing and update the changed fields in the CRM application . For example changes to a contact in ECS application may be reflected in the contact information in CRM application following the synchronization process .

For the items retrieved in this way a post synchronization API may be called to identify to the CRM server that the change on each item has been processed. The items may then be added to the ECS client cache in the ECS synchronization table for later processing. ECS application may also include ID Mapping Table and merge the changes from both tables if necessary resulting in an updated item e.g. an updated contact card .

In a system according to embodiments synchronization is bi directional. Thus the ECS application synchronizes with the CRM application and vice versa. After the synchronization process is performed the most recent synchronized version of an item may be saved in XML format and stored in a property of the item. An XML BLOB Binary Large Object which is essentially a large XML file.

When an item is changed in either ECS or CRM the item may be synchronized such that the change appears in both systems by comparing column differences using the XML record on the item from ECS and timestamps of the changes. When an item is changed in both ECS and CRM bi directional synchronization may occur according to the timestamps of the changes so that the most recent change takes precedence and overrides any earlier ones.

For example when a synchronized item is altered in CRM after a change on the corresponding item in ECS CRM to ECS synchronization may be performed to synchronize the latest changes that have been made to the item in CRM over to the corresponding item in ECS and the XML record associated with the ECS item may be updated. Then the system may perform an ECS to CRM synchronization to ensure that the latest changes to the ECS item are synchronized with the corresponding item in CRM.

According to the example scenario prior to synchronization an ECS user makes changes to three fields A B and C in an item in ECS . XML file maintains original record of the item A B and C . At a later time the same or another user makes changes to corresponding item in CRM modifying two of the same fields A and B modified earlier by the ECS user. As a result the CRM timestamp is more recent than the corresponding ECS timestamp.

During first phase of synchronization the more recent field values in the CRM system A and B may be copied to the XML file and then to the item in ECS overwriting the earlier changes A and B made to the item in ECS . When CRM to ECS synchronization is complete ECS to CRM synchronization may occur and the more recent field value in ECS C may be copied to the XML file and then to the item in CRM overwriting the original value C .

In a system according to embodiments the synchronization of ECS with CRM may be triggered when a user marks an item for synchronization or alters an ECS object such as a contact . Synchronization may also be triggered in response to the user manually initiating ECS synchronization with CRM or a background synchronization operation beginning on a periodic basis. Manual as well as background synchronization may results in immediate replication of changes between ECS and CRM. When a user marks an item for synchronization or alters an ECS object the synchronization process may not always happen immediately e.g. to allow time for the user to complete a series of changes .

The examples in have been described with specific configurations and components. Embodiments are not limited to systems according to these example configurations and components. Bidirectional synchronization between CRM and ECS applications may be implemented in configurations using other types of components processes and configurations in a similar manner using the principles described herein.

Client applications executed on any of the client devices may facilitate communications with an ECS application executed on one or more of servers and a CRM application executed on server . A synchronization module executed in conjunction with a client ECS application one any one of the client devices may facilitate bidirectional synchronization of various forms of data maintained by the ECS application and the CRM application as discussed previously. The CRM and or ECS applications may retrieve relevant data from data store s directly or through database server and provide requested services e.g. document editing to the user s through client devices .

Network s may comprise any topology of servers clients Internet service providers and communication media. A system according to embodiments may have a static or dynamic topology. Network s may include secure networks such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s may also coordinate communication over other networks such as Public Switched Telephone Network PSTN or cellular networks. Furthermore network s may include short range wireless networks such as Bluetooth or similar ones. Network s provide communication between the nodes described herein. By way of example and not limitation network s may include wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources and data distribution systems may be employed to implement a platform providing bidirectional synchronization between ECS and CRM applications. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

ECS application may provide email scheduling contact management and comparable services in conjunction with a hosted service. Synchronization module may enable bidirectional synchronization of data such as contact information email data scheduling information etc. between the ECS application and a CRM application using a background process and enabling enhanced features such as delegation accommodation search capability and the like. ECS application and synchronization module may be separate applications or integrated modules of a hosted service. This basic configuration is illustrated in by those components within dashed line .

Computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer readable storage media. Computer readable storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer readable storage media may be part of computing device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device and comparable input devices. Output device s such as a display speakers printer and other types of output devices may also be included. These devices are well known in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other devices such as over a wired or wireless network in a distributed computing environment a satellite link a cellular link a short range network and comparable mechanisms. Other devices may include computer device s that execute communication applications web servers and comparable devices. Communication connection s is one example of communication media. Communication media can include therein computer readable instructions data structures program modules or other data. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Example embodiments also include methods. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where a change to an ECS item is detected through a MAPI notification by a CRM module operating in conjunction with an ECS client application. The change may trigger updating of an ECS synchronization table and or an ID Mapping Table in an ECS client cache at operation . The entries to the tables may be processed and updates submitted to a CRM application maintaining a similar record at operation . The ECS to CRM synchronization may be performed when a user marks the item for synchronization or alters the item in response to the user manually initiating the synchronization or a background synchronization operation beginning on a periodic basis. Following the synchronization with the CRM application a periodic reconciliation operation may be performed to ensure deleted items are accounted for at optional operation .

For changes on the CRM side a call may be made at operation to an API at the CRM application requesting and in response receiving summary information on changes since the last time a successful synchronization of changes was performed. With this information a call to retrieve synchronization data may be made against the CRM server with a column set that contains the CRM ID and the time stamp of the changed items and changes received at operation . The ECS client may then update affected items in the ECS application at operation .

The operations included in process are for illustration purposes. Bidirectional synchronization between ECS and CRM applications may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

