---

title: Status indication when a maintenance operation is to be performed at a memory device
abstract: Data storage devices and methods are disclosed that provide a status indication when a maintenance operation is to be performed prior to completion of a write command. A method includes receiving a write command from a host device to write data to the non-volatile memory while the data storage device is operatively coupled to the host device. In response to determining that a maintenance operation is to be performed prior to the completion of the write command, an indication is sent to the host device that the write command has a status of incomplete.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08683148&OS=08683148&RS=08683148
owner: Sandisk IL Ltd.
number: 08683148
owner_city: Kfar Saba
owner_country: IL
publication_date: 20100630
---
Management of non volatile memory devices such as flash memory devices may include performing maintenance operations at the memory. For example garbage collection may be used to free portions of memory e.g. blocks of a flash memory for reuse. When a non volatile memory device receives an instruction to write data to its memory and an insufficient amount of free memory is available to store the data the memory device may perform a garbage collection operation prior to writing the data. However performing garbage collection prior to writing the data may delay the completion of the data write until after a timeout period associated with the instruction has expired.

Data storage devices and methods of operation determine whether a maintenance operation is to be performed prior to completion of a write command from a host device. If the maintenance operation is to be performed prior to the write command being completed an indication is sent to indicate to a host device that the write command has a status of incomplete. Sending the indication to the host device can enable the data storage device to perform the maintenance operation without causing a timeout event at the host device.

A data storage device such as a flash memory card is configured to support a novel messaging or handshake with a host device. The flash memory card can signal to the host device that a write command is not completed and in response the host device can resend the command. In addition firmware within the flash memory card can implement an application programming interface API that enables the firmware to ask the flash management within the card whether a maintenance operation is required. When the flash management indicates that the maintenance operation is required the firmware can use the time of the write command to perform the maintenance operations instead of committing the new data to memory and can indicate to the host device that the command is incomplete or can ask the host device to resend the write command. For example the firmware can translate a received application command into a number of internal write commands and can query the flash management whether a maintenance operation is to be performed prior to completing the number of internal write commands to a specific address range.

Referring to a particular embodiment of a system is depicted and designated . The system includes a data storage device that is operatively coupled to a host device . The data storage device is configured to determine whether a maintenance operation is to be performed prior to completion of a write command . If the maintenance operation is to be performed the data storage device is configured to send an indication to the host device showing a status of incomplete for the write command . Thus a timeout period corresponding to the write command may be prevented from expiring at the host device when the data storage device has to complete the maintenance operation prior to completing the write command . For example the host device may stop a timer in response to receiving the indication .

The data storage device includes the controller coupled to a non volatile memory . The controller is configured to receive communications such as a read command or the write command from the host device and to send status messages and data that is read from the non volatile memory to the host device .

The non volatile memory may be a flash memory. For example the controller and the non volatile memory may be incorporated into one of removable flash memory cards embedded flash memory and a solid state drive. To illustrate the data storage device may be a memory card such as a Secure Digital SD card a microSD card a miniSD card trademarks of SD 3C LLC Wilmington Del. a MultiMediaCard MMC card trademark of JEDEC Solid State Technology Association Arlington Va. or a CompactFlash CF card trademark of SanDisk Corporation Milpitas Calif. . As another example the data storage device may be embedded memory in the host device such as eMMC trademark of JEDEC Solid State Technology Association Arlington Va. and eSD as illustrative examples.

The controller may be configured to manage the non volatile memory . For example the controller may be configured to maintain a logical to physical address translation table maintain a list of free blocks for use in the non volatile memory schedule and initiate maintenance operations such as garbage collection or any combination thereof.

The controller includes a data write completion predictor that is configured to receive information indicating a size of data to be written to the non volatile memory and to determine whether the data can be written to the non volatile memory prior to expiration of a timeout period of the write command . For example the data write completion predictor may include logic implemented in dedicated circuitry or as program instructions executed by the controller . The data write completion predictor may be configured to receive information indicating a size of the data to be written to the non volatile memory . Based on the size of the data the data write completion predictor may be configured to determine whether the data can be written to the non volatile memory or whether a maintenance operation is to be performed prior to completion of writing the data . The data write completion predictor may be implemented in an application module of the controller that is configured to communicate with a memory management module of the controller such as described with respect to .

The controller is configured to selectively send the indication while the data storage device is operatively coupled to the host device . For example the controller may be responsive to the data write completion predictor to send the indication in response to a prediction that execution of the write command will not complete before a timeout period expires. The indication may indicate that the write command received from the host device has a status of incomplete when the maintenance operation is to be performed at the non volatile memory prior to completion of the write command .

During operation the data storage device may receive the write command from the host device to write the data to the non volatile memory . Prior to initiating a data write to the non volatile memory the data write completion predictor of the controller may determine whether the maintenance operation is to be performed at the non volatile memory . For example the maintenance operation may be a garbage collection operation that frees memory space at the non volatile memory . When a length of the data exceeds an available free memory capacity of the writable available memory at the non volatile memory the garbage collection operation may be performed at the non volatile memory to free sufficient amount of memory to enable writing of the data .

In response to the data write completion predictor determining that the maintenance operation is not to be performed the controller directs writing of the data to the non volatile memory . Alternatively when the data write completion predictor determines that the maintenance operation is to be performed at the non volatile memory the controller sends the indication to the host device to indicate the write command has a status of incomplete. For example the controller may send the indication before the maintenance operation begins during the maintenance operation in response to the maintenance operation completing or at a later time prior to expiration of the timeout period. To illustrate the data storage device may implement a timer to send the indication in response to a predetermined period of time elapsing after the write command is received. The predetermined period of time may be set so that the host device receives the indication immediately prior to expiration of the timeout period.

The data storage device may perform the maintenance operation at the non volatile memory and the host device may receive the indication . The host device may re send the write command or may send another write command to write the data to the non volatile memory . In some implementations the data storage device may partially execute the command and may send one type of the indication to indicate that the command is incomplete but partially performed. The host device may be required to continue resending the command until the data storage device completes execution of the command . In other implementations the data storage device may not execute any portion of the command and may send another type of the indication to indicate that the command was not performed i.e. none of the data has been written to the non volatile memory . The host device may decide whether to resend the command after receiving the indication . Upon receiving a second write command to write the data such as by the host re sending the write command after receiving the indication the data storage device may be able to store the data to the non volatile memory within the timeout period associated with the write command .

A timing diagram illustrates examples of timing information during operation of the data storage device . The timing diagram includes timing information for a timeout period of the write command . As illustrated the timeout period begins at time T and ends at time T. The timeout period indicates a maximum amount of delay that the host device will accept after sending the write command and prior to receiving a response from the data storage device . For example the host device may start a timeout clock upon sending the write command and if the host device does not receive a response from the data storage device prior to the end of the timeout period the host device may determine that the data storage device is non responsive or otherwise inoperable.

A first sequence of operations illustrates an amount of time that elapses for the data storage device to perform a write of the data to the non volatile memory after receiving the write command when the maintenance operation is not to be performed. As illustrated the write to memory operation begins at time T and completes at time T before the end of the timeout period . Thus the write to memory operation may be safely completed before expiration of the timeout period when the maintenance operation is not to be performed. Alternatively a second sequence of operations illustrates that writing the data to the non volatile memory can be performed as a series of internal commands illustrated as command command . For example the write command may indicate a data length that exceeds a data length limit for individual writes from the controller to the non volatile memory . The controller may execute an application to divide the write command into multiple internal commands that may all be performed during a time period prior to expiration of the timeout period .

A third sequence of operations illustrates an example where the maintenance operation is to be performed prior to writing the data to the non volatile memory . A latency of the maintenance operation extends from the time T to a time T. Following the end of the maintenance operation at time T a write operation to write the data to the non volatile memory is initiated. However the write operation does not complete until the time T after the timeout period expires. Thus if the controller were to perform the maintenance operation followed by a write operation to write the data to the non volatile memory the host device would recognize a timeout of the write command and the host device may re send the write command or may cease communication with the data storage device even though the write command may be successfully completed after the end of the timeout period .

A fourth sequence of operations illustrates another alternative where the maintenance operation is to be performed prior to storing the data at the non volatile memory . The maintenance operation has the latency extending from time T to time T and is followed by performing the data write as the series of internal commands command command . As illustrated the data may be partially written to the memory array as command and command are completed prior to the timeout period at time T. However command and command are not completed prior to the timeout period and are not completed until time T following the end of the timeout period .

As a result the data storage device may send the indication when an estimated amount of time for completing the write command such as the time from T to T exceeds the timeout period associated with the write command . When the maintenance operation is to be performed at the non volatile memory prior to completion of the write command the estimated amount of time includes the latency corresponding to the maintenance operation and also includes the latency of one or more write operations to the non volatile memory . Although in some embodiments the data storage device may estimate an amount of time to complete the write command in other embodiments the data storage device does not estimate the amount of time and instead sends the indication in response to determining that the maintenance operation is to be performed prior to completion of the write command .

In an implementation where the controller writes the data in a single operation the controller may initiate the maintenance operation and send the indication without initiating the write of the data to the non volatile memory to avoid the timeout period expiring as illustrated in the third sequence of operations . In another implementation where the controller is configured to translate the write command into multiple internal commands such as command command of the fourth sequence of operations a portion of the multiple internal commands may be completed prior to expiration of the timeout period associated with write command . After completing the maintenance operation the controller may complete command and command and may not perform command and command . As a result a portion of the data is written to the non volatile memory while another portion is not written to the non volatile memory . The indication sent to the host device indicates that the write command has a status of incomplete.

Whether the controller is configured to write the data in a single operation or via multiple internal commands when the maintenance operation is to be performed the data is not completely stored in the non volatile memory . As a result either no data is written to the non volatile memory or only partial data is written to the non volatile memory . However by sending the indication to the host device prior to expiration of the time out period the data storage device can complete the maintenance operation while complying with a requirement of the host device to respond to the write command during the timeout period .

Referring to timing diagram illustrating examples of sending an indication to a host device when a maintenance operation is to be performed prior to completion of a received command at a data storage device is depicted and generally designated . The data storage device may be the data storage device in communication with the host device of .

A first example illustrates timing in an embodiment where the data storage device receives a first write command from a host to write data to a memory at time T. In response to determining that a maintenance operation is to be performed prior to writing the data to the memory the data storage device performs the maintenance operation during a timeout period of the first write command without writing any of the data to the memory.

The data storage device sends an indication to the host that the first write command has a status of incomplete at time T prior to the end of the timeout period of the first write command at time T. The indication may be a first type of indication that signals to the host that the write command was not performed i.e. no data has been written . In response the host may have a choice of whether to resend the write command.

The data storage device may receive a second write command from the host at time T. The second write command may instruct the data storage device to write the same data as the first write command or to write other data. In response to receiving the second write command the data storage device may determine whether a maintenance operation is to be performed prior to writing the data to the memory. Because the maintenance operation was performed during the timeout period of the first write instruction a write operation may be completed before the end of a second timeout period of the second write command without requiring another maintenance operation. The data storage device sends an indication to the host that the second write command has a status of complete at time T prior to the end of the second timeout period .

A second example illustrates timing in an embodiment where the data storage device receives a command from a host at time T and translates the command into multiple internal commands illustrated as a first command a second command a third command and a fourth command . In response to determining that a maintenance operation is to be performed the data storage device performs the maintenance operation during a timeout period of the command and also completes the first and second internal commands and prior to expiration of the timeout period .

The data storage device sends an indication to the host that the first write command has a status of incomplete at time T prior to the end of the timeout period at time T. The indication may be a second type of indication that signals to the host that the command was partially performed i.e. part but not all of the multiple internal commands have been completed . The host may be required to respond to the second type of indication by resending the command to provide additional time for completion of the command.

The data storage device receives the resent command from the host at time T. In response to receiving the resent command the data storage device may determine whether a maintenance operation is to be performed prior to completing the remaining internal commands . Because the maintenance operation was performed during the timeout period the remaining internal commands may be completed before expiration of a timeout period of the resent command without requiring another maintenance operation. After completing execution of all of the internal commands the data storage device sends an indication to the host that the command has a status of complete at time T prior to the end of the timeout period .

Although the second example illustrates that the received command is translated into four internal commands in other embodiment the received command may be translated into fewer than four internal commands or may be translated into five or more internal commands. The data storage device may send the second type of indication i.e. indicating the command is partially performed at the end of each successive timeout period while any of the internal commands remain uncompleted and the host may be programmed to respond by again resending the command. In this manner the data storage device may be provided a sufficient amount of time via multiple successive timeout periods to perform the received command.

Determining whether the maintenance operation is to be performed and sending the indication can be implemented at different protocol layers as illustrated in . In a memory card is illustrated that can receive a Secure Digital SD command of a write type and can respond with a Command Incomplete response. In another protocol over SD can use the data payload of the SD write and read commands to implement another protocol layer. An SD write command may be sent to a memory card to execute the protocol command and a SD read command may be used to retrieve SD read data that indicates a Command Incomplete status response code. In firmware within a memory card can be executable by a controller to obtain an indication of whether a memory maintenance is about to occur. Although illustrate implementations using SD commands in other implementations other protocols may be used.

Referring to a ladder diagram illustrating a particular embodiment of messaging is depicted and designated . The messaging includes commands and data communicated between a card and an application at a host or the host itself referred to as app host . For example the app host can correspond to the host device of and the card can be a flash memory card that corresponds to the data storage device of .

The app host sends a write command and write data to the card . For example the write command may be a Secure Digital SD write command. The app host also sends a read command to the card . For example the read command may be an SD read command that is configured to read status information corresponding to the previous instruction i.e. the write command . The card may receive the read command and in response may return read data to the app host .

The app host may receive the read data and in response may determine whether the write command completed at decision . For example when the read data includes an indication that the write command has a status of incomplete processing may return to the write command being re sent to the card . The indication of the status of incomplete may include a value of a status bit in an SD response message.

As a result the card may inform the application host that data to be written to the card will not be completed within a timeout period of the write command and therefore an indication of an incomplete status of the write command is sent from the card to the app host . In response the app host may re send the command after receiving the indication.

Referring to a ladder diagram illustrating a particular embodiment of messaging is depicted and designated . The messaging includes commands and data communicated between an application such as an application running at the host device of and a host such as the host device . The messaging also includes commands and data communicated between the host and a card that includes a memory array for storing data. For example the card may be a flash memory card and may correspond to the data storage device of .

The application sends an application command to the host . For example the application command may be a command to write data such as the write command of . The host receives the application command and in response sends a write command and write data to the card . For example the write command may be a Secure Digital SD write.

The application also sends an application get status command to the host . The host receives the application get status command and in response sends a read command to the card . For example the read command may be an SD read command that is configured to read status information corresponding to the previous instruction in this case the write command . The card may receive the read command and in response may return read data to the host . The host may receive the read data and in response may send application get status data to the application as a response to the get status command .

The application may receive the application get status data and may determine whether the application command completed at decision . For example when the application get status data indicates that the application command is incomplete or has a status of incomplete processing may return to the application command being sent to the host .

Thus the host may translate the application command to the write command that is provided to the card . The host may also translate the application get status command to the read command and may interpret the read data to generate the application get status return data that is sent to the application . To illustrate a controller of the card such as the controller of may be configured to send an indication to the host device via a secure digital SD response message in the read data . For example the indication may include a value of a status bit in the SD response message.

As a result the card may inform the host that data to be written to the card will not be completed within a timeout period of the application command and therefore an indication of an incomplete status of the write command is sent from the card to the host . In response the host indicates to the application the incomplete status. The application may re send the command after receiving the incomplete status data .

Referring to an illustrative embodiment of internal messaging is illustrated and designated . A host interface module a card application module and a flash management module are illustrated. For example the modules may be implemented in the controller of . The host interface module may be configured to enable communications with the host device of . The host interface module may further be configured to communicate commands and data with the card application module with the flash management module or a combination thereof.

The card application module may be configured to execute one or more applications such as a security application. For example the card application module may implement a security application that enables division of a flash memory space into several partitions and provides enforcement of read and write permission to individual partitions. The security application may enable configuration of sets of permissions for each authenticated entity accessing a flash memory and validate every received service request against registered rights for the requesting entity. As a specific example the security application may be a TrustedFlash application TrustedFlash is a trademark of SanDisk Corporation Milpitas Calif. . For example the TrustedFlash application may establish one or more TrustedFlash sessions including a write phase followed by a read phase. The TrustedFlash session may be configured to enable secure access to the flash memory and to enable communication with the flash management module .

The flash management module may be configured to perform management operations to a non volatile memory such as the non volatile memory of . To illustrate the flash management module may include functionality such as logical to physical address translation maintain a list of one or more free blocks for use in the non volatile memory and scheduling and initiating maintenance operations such as garbage collection or wear leveling.

In a first example a session e.g. a TrustedFlash session is illustrated that includes a write phase and a read phase . During the write phase the host interface module sends an application command that is received by the card application module . In response the card application module sends an is safe command to the flash management module . In response to receiving the is safe command from the card application module the flash management module determines whether or not a maintenance operation is to be performed at a non volatile memory prior to completing the application command . For example the application command may be the write command of and the maintenance operation may be the maintenance operation of . In the first example the flash management module determines that no maintenance is to be performed prior to implementing the application command and returns a safe indication .

In response to the return safe indication the flash management module sends an application execute command to the card application module . In response to receiving the application execute command the card application module executes the application command such as storing data to the flash memory and provides return data to the host interface module .

During the read phase following the write phase the host interface module sends a gets status command to the card application module . The card application module returns a last command status which in the first example is a completed command status because no maintenance operation was performed prior to executing the application command . The card application module sends data to the host via an instruction to indicate to the host that the application command was completed successfully.

A second example includes a write phase and a read phase . During the write phase an application command is provided by the host interface module and received at the card application module . In response to receiving the application command the card application module sends an is safe command to the flash management module .

In response to receiving the is safe command the flash management module determines whether or not one or more maintenance operations are to be performed at the non volatile memory prior to completion of the application command . As illustrated in the second example one or more maintenance operations such as garbage collection are to be performed prior to completion of the application command . As a result a not safe result is returned and the one or more maintenance operations are initiated.

In response to the returned not safe result and initiation of the one or more maintenance operations the flash management module sends an abort application command to the card application module . In response to receiving the abort application command the card application module does not complete the application command and provides return data to the host interface module .

During the read phase the host interface module sends a get status command to the card application module . In response to receiving the get status command the card application module returns a last command status which includes a status of incomplete. For example the application command was indicated as not being safely performed due to the one or more maintenance operations indicated by the flash management module as to be performed prior to completion of execution of the application command . As a result when the host interface module sends the gets status command an incomplete status is returned as the last command status via an instruction to send data to the host.

The method includes determining whether a maintenance operation is to be performed at the non volatile memory prior to completion of the write command at . To illustrate the maintenance operation may be a garbage collection operation to be performed to free sufficient space of the non volatile memory to write the data. For example in an implementation where the data storage device includes a controller with a card application module and a memory management module such as the card application module and the flash management module of determining whether the maintenance operation is to be performed may include sending a query from the card application module to the memory management module at . A response may be received from the memory management module indicating whether the maintenance operation is to be performed at the non volatile memory before the data can be written to the non volatile memory at .

The indication may be sent when an estimated amount of time for completing the write command exceeds a timeout period associated with the write command such as illustrated by the timeout period of . When the maintenance operation is to be performed at the non volatile memory prior to completion of the write command the estimated amount of time for completing the write command includes a latency corresponding to the maintenance operation. For example the third sequence of operations of exceeds the timeout period and includes the latency of the maintenance operation .

In response to determining that no maintenance operation will be performed prior to the completion of the write command at the data may be written to the non volatile memory at . Alternatively in an embodiment where the data storage device receives an application command from the host device instead of receiving the write command the application command may be executed at .

In response to determining that the maintenance operation is to be performed prior to the completion of the write command at an indication is sent to the host device that the write command has a status of incomplete at . In a particular embodiment such as illustrated in and the indication is sent to the host device via a Secure Digital SD response message. For example the indication may include a value of a status bit in the Secure Digital SD response message. In another particular embodiment such as illustrated in a get status command is received after receiving the write command and the indication may be sent to the host device in response to a result of the get status command. For example the get status command and the result may be received during a read phase of a TrustedFlash session.

The data storage device may perform the maintenance operation and may not write the data at . Instead the data storage device may wait for the host device to resend the write command after the host device receives the indication. For example after sending the indication a second write command may be received from the host device to write the data to the non volatile memory such as illustrated in the first example of .

Alternatively instead of waiting for the host device to resend the write command without writing the data at the data storage device may perform the maintenance operation and may translate the received command into multiple internal commands such as the commands of the second example of . A portion of the internal commands may be completed prior to expiration of a timeout period associated with the received command. To illustrate the commands of are completed prior to expiration of the timeout period . The data storage device may send the indication that the command has the status of incomplete but partially performed as described with respect to . The host device may continue resending the command in response to each received incomplete status indicator until all of the internal commands have been completed such as illustrated in the second example of .

Although various components depicted herein are illustrated as block components and described in general terms such components may include one or more microprocessors state machines or other circuits configured to enable the data storage device to perform the particular functions attributed to such components or any combination thereof. For example the data write completion predictor may represent one or more physical components such as hardware controllers state machines logic circuits or other structures to enable the data storage device of to determine whether the maintenance operation is to be performed prior to writing the data .

In a particular embodiment the data storage device may be a portable device configured to be selectively coupled to one or more external devices. However in other embodiments the data storage device may be attached or embedded within one or more host devices such as within a housing of a portable communication device. For example the data storage device may be within a packaged apparatus such as a wireless telephone a personal digital assistant PDA gaming device or console a portable navigation device or other device that uses internal non volatile memory. In a particular embodiment the data storage device includes a non volatile memory such as a flash memory e.g. NAND NOR Multi Level Cell MLC Divided bit line NOR DINOR AND high capacitive coupling ratio HiCR asymmetrical contactless transistor ACT or other flash memories an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM a read only memory ROM a one time programmable memory OTP or any other type of memory.

The illustrations of the embodiments described herein are intended to provide a general understanding of the various embodiments. Other embodiments may be utilized and derived from the disclosure such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments. Accordingly the disclosure and the figures are to be regarded as illustrative rather than restrictive.

The above disclosed subject matter is to be considered illustrative and not restrictive and the appended claims are intended to cover all such modifications enhancements and other embodiments which fall within the scope of the present disclosure. Thus to the maximum extent allowed by law the scope of the present invention is to be determined by the broadest permissible interpretation of the following claims and their equivalents and shall not be restricted or limited by the foregoing detailed description.

