---

title: Device synchronization using independent clocks
abstract: At least one radio frequency (RF) instrument may be configured according to a plurality of RF measurement configurations for performing a plurality of tests on a device under test (DUT). A list of RF measurement configurations may be stored in a computer memory. The list of RF measurement configurations comprises a plurality of parameters for configuring operation of the at least one instrument. Information regarding the list of RF measurement configurations (e.g., a data stream) may be provided to the at least one RF instrument. The at least one RF instrument may perform the plurality of tests on the DUT, including the at least one RF instrument configuring itself according to the RF measurement configurations based on processing of the information. Configuring enables the at least one RF instrument to perform the plurality of tests on the DUT in a deterministic manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08615673&OS=08615673&RS=08615673
owner: National Instruments Corporation
number: 08615673
owner_city: Austin
owner_country: US
publication_date: 20100225
---
This application claims benefit of priority of U.S. provisional application Ser. No. 61 262 380 titled Deterministic Reconfiguration of Measurement Modules filed Nov. 18 2009 whose inventors were Sead Suskic Vince Shouba Kunal Patel and David Klipec which is hereby incorporated by reference in its entirety as though fully and completely set forth herein.

The present invention relates to the field of measurement and more particularly to a system and method for deterministic reconfiguration of measurement modules.

Measurement systems often include a host device that is in communication with other devices measurement devices to perform a desired task such as testing of a device under test. While performing such a task it may be desirable to change configurations of the measurement devices. For example it may be desirable to perform a first test using the measurement devices and then at a later time perform a second test using the measurement devices. However in this example it may be beneficial for the reconfigurations to be performed automatically to provide flexibility and efficiency. Accordingly improvements in device testing are desired.

Various embodiments are disclosed of a system and method for maintaining synchronization among a plurality of devices using clocks wherein the plurality of devices operate together for a plurality of iterations in a looped manner.

Each device may establish a clock based on a common signal. For example the common signal may be a frequency reference and or trigger as desired. Each clock may not pause and may have a constant relationship with each other clock over time.

Each device may round a first step time of a first step of a first iteration to one of two first nearest clock cycles e.g. where the first step time does not occur on either of the two first nearest clock cycles. Upon reaching the one of the two first nearest clock cycles each device may perform a respective first action in a synchronized manner with respect to the other devices. In one embodiment the action may be a reconfiguration e.g. which determines the next step time. For example the next step time may be determined based on received information which specifies the reconfiguration. Alternatively or additionally each step time may be determined based on a counter e.g. a non pausing counter for the clock. In some embodiments each step time may be based as an increment from the previous step or cumulatively as desired.

Over one or more additional steps of the loop each device may adjust clock cycles for each of the one or more additional steps to remove rounding error. The adjustment may be performed dynamically during run time.

Upon reaching the end of a step each device may perform a respective action in a synchronized manner with respect to the other devices. Thus the method described above may be performed a plurality of times over various steps. For example the method may be performed each step of each iteration or possibly for one or more steps in each iteration thus adjusting for rounding errors in each iteration . In one embodiment for example each device may round a second step time of a second step of the first iteration to one of two second nearest clock cycles and the second rounding may incorporate the rounding of the first step time of the first step. Correspondingly the determined clock cycle each device may perform a respective second action in a synchronized manner with respect to the other devices.

While the invention is susceptible to various modifications and alternative forms specific embodiments thereof are shown by way of example in the drawings and are herein described in detail. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

The following references are hereby incorporated by reference in their entirety as though fully and completely set forth herein 

Memory Medium Any of various types of memory devices or storage devices. The term memory medium is intended to include an installation medium e.g. a CD ROM floppy disks or tape device a computer system memory or random access memory such as DRAM DDR RAM SRAM EDO RAM Rambus RAM etc. or a non volatile memory such as a magnetic media e.g. a hard drive or optical storage. The memory medium may comprise other types of memory as well or combinations thereof. In addition the memory medium may be located in a first computer in which the programs are executed and or may be located in a second different computer which connects to the first computer over a network such as the Internet. In the latter instance the second computer may provide program instructions to the first computer for execution. The term memory medium may include two or more memory mediums which may reside in different locations e.g. in different computers that are connected over a network.

Carrier Medium a memory medium as described above as well as a physical transmission medium such as a bus network and or other physical transmission medium that conveys signals such as electrical electromagnetic or digital signals.

Programmable Hardware Element includes various hardware devices comprising multiple programmable function blocks connected via a programmable interconnect. Examples include FPGAs Field Programmable Gate Arrays PLDs Programmable Logic Devices FPOAs Field Programmable Object Arrays and CPLDs Complex PLDs . The programmable function blocks may range from fine grained combinatorial logic or look up tables to coarse grained arithmetic logic units or processor cores . A programmable hardware element may also be referred to as reconfigurable logic .

Program the term program is intended to have the full breadth of its ordinary meaning The term program includes 1 a software program which may be stored in a memory and is executable by one or more processors or 2 a hardware configuration program useable for configuring a programmable hardware element.

Software Program the term software program is intended to have the full breadth of its ordinary meaning and includes any type of program instructions code script and or data or combinations thereof that may be stored in a memory medium and executed by one or more processors. Exemplary software programs include programs written in text based programming languages such as C C PASCAL FORTRAN COBOL JAVA assembly language etc. graphical programs programs written in graphical programming languages programs that have been compiled to machine language scripts and other types of executable software. A software program may comprise two or more software programs that interoperate in some manner. Note that various embodiments described herein may be implemented by a computer or software program. A software program may be stored as program instructions on a memory medium.

Hardware Configuration Program a program e.g. a netlist or bit file that can be used to program or configure a programmable hardware element.

Computer System any of various types of computing or processing systems including a personal computer system PC mainframe computer system workstation network appliance Internet appliance personal digital assistant PDA television system grid computing system or other device or combinations of devices. In general the term computer system can be broadly defined to encompass any device or combination of devices having at least one processor that executes instructions from a memory medium.

Measurement Device includes instruments data acquisition devices smart sensors and any of various types of devices that are configured to acquire generate and or store data. A measurement device may also optionally be further configured to analyze or process the acquired or stored data. Examples of a measurement device include an instrument such as a traditional stand alone box instrument a computer based instrument instrument on a card or external instrument a data acquisition card a device external to a computer that operates similarly to a data acquisition card a smart sensor one or more DAQ or measurement cards or modules in a chassis an image acquisition device such as an image acquisition or machine vision card also called a video capture board or smart camera a motion control device a robot having machine vision and other similar types of devices. Exemplary stand alone instruments include oscilloscopes multimeters signal analyzers arbitrary waveform generators spectroscopes and similar measurement test or automation instruments.

A measurement device may be further configured to perform control functions e.g. in response to analysis of the acquired or stored data. For example the measurement device may send a control signal to an external system such as a motion control system or to a sensor in response to particular data. A measurement device may also be configured to perform automation functions i.e. may receive and analyze data and issue automation control signals in response.

As shown the host device e.g. the chipset of the host device may provide communication e.g. PCIe communication PXI communication or other bus communication to a first peripheral device and a second peripheral device over bus . The first peripheral device and second peripheral device may be configured to change configurations based on information provided by the host device as described herein.

The devices may be any of various devices e.g. PCIe devices such as measurement devices e.g. DAQ devices processing devices I O devices network devices etc. Additionally similar to above the devices may include one or more programmable hardware elements or processors and memory to implement their respective functionality. In some embodiments the and the device may include a DMA controller and respectively to perform DMA transfers e.g. to perform the transfers of data described herein.

As indicated above embodiments of chassis may be used in test and measurement systems such as systems used to acquire process or output data relating to a device or process being monitored or controlled for instance. Accordingly such a system may acquire data and subsequently transfer the data for processing storage output or the like. For example in the case of chassis being used to control a process e.g. a closed loop system data may be acquired transferred to a processor where it may be processed and subsequently transferred to an output such that the processed output may be employed to appropriately control the respective process.

The VSG and VSA may both be coupled to a device under test DUT or unit under test UUT e.g. via an RF connection depending on the embodiment. More particularly in one embodiment the VSG may couple to one port of DUT to provide a stimulus signal. The VSA may couple to a different port on the DUT to acquire and measure the DUT s response to the stimulus. Note that provides a general representation of a modular test system and while this diagram presents a system with a VSA a VSG and a DUT in practice these systems might have only a VSA or VSG and a DUT. For example the system may be used to characterize the DUT s transmitter or the DUT s receiver or both although other devices and configurations are envisioned.

In some embodiments the VSG and VSA may correctly interface with the DUT as long as the accompanying driver software is used to apply the appropriate RF configuration to the two devices. Consequently if the devices RF configuration needs to be changed because the DUT RF settings change the controlling program may call the appropriate functions in the VSA and VSG driver software. However certain DUTs have such requirements that the RF configuration changes are not acceptable in terms of timing repeatability. In these particular cases the methods described herein may be used to make the configuration changes e.g. the RF configuration changes deterministic.

Thus illustrates a particular embodiment where the devices and are used to test a DUT e.g. an RF DUT . More specific embodiments which may be applicable to and in particular C are provided below.

In various embodiments the host device may be coupled to a second computer system or device via a network or a computer bus . The computer systems may each be any of various types as desired. The network can also be any of various types including a LAN local area network WAN wide area network the Internet or an Intranet among others.

The one or more devices may include a GPIB instrument and associated GPIB interface card a data acquisition board inserted into or otherwise coupled with chassis with associated signal conditioning circuitry a VXI instrument a PXI instrument a video device or camera and associated image acquisition or machine vision card a motion control device and associated motion control interface card and or one or more computer based instrument cards among other types of devices. The computer system may couple to and operate with one or more of these devices. The instruments may be coupled to the unit under test UUT or process or may be coupled to receive field signals typically generated by transducers. The system may be used in a data acquisition and control application in a test and measurement application an image processing or machine vision application a process control application a man machine interface application a simulation application or a hardware in the loop validation application among others.

The one or more devices may include a data acquisition board inserted into or otherwise coupled with chassis with associated signal conditioning circuitry a PXI instrument a video device and associated image acquisition card a motion control device and associated motion control interface card a fieldbus device and associated fieldbus interface card a PLC Programmable Logic Controller a serial instrument and associated serial interface card or a distributed data acquisition system such as the Fieldpoint system available from National Instruments among other types of devices.

In a list of configurations may be created e.g. by a user or program. For example in one embodiment the user may create a list of RF configurations for testing an RF device. However while the method described herein is applied to RF devices it may be applied to any type of device or system as desired. The list of RF configurations may include a set of RF instrument options e.g. for each listed configuration which may be set via the application programming interface API of an RF instrument driver.

The list of RF configurations may also include a specification of how to move the instrument from one item in the RF configuration set to another. For example the API may allow the user to directly configure the use of a trigger bus e.g. a PXI trigger bus for the purposes of advancing the RF devices through the RF list e.g. specifying a configuration list step trigger source.

In one embodiment the list of configurations may be specified using a host computer such as the host described above although other devices are envisioned. The list of configurations may be specified graphically e.g. in a graphical program or textually as desired. Graphical program of illustrates a graphical program which specifies the configuration list using a graphical API.

In from the list of RF configurations e.g. specified using the API an intermediate representation of the list may be created e.g. by an instrument driver. The intermediate representation may be created by the host device. Additionally the internal RF list representation may include synchronization instructions for each module that may effectively allow the configuration changes on each device to happen at approximately the same time e.g. within a few micro or milliseconds . For this purpose a device driver may be used to automatically program the modules to use a common bus e.g. a PXI trigger bus. As indicated above the assignment of the trigger bus may be provided using the API specification e.g. by a user.

In data streams may be created for each device involved in the test e.g. each of the modules of the PXI based RF instrument. described below illustrates this process for a VSG instrument although this may similarly apply to a VSA instrument.

In the devices or modules of the devices may be configured according to the data streams e.g. while testing the DUT. Thus according to the method of a DUT may be tested by configuring one or more devices according to the list of configurations in a deterministic manner. Further descriptions of the mechanism for changing configurations and triggering the change of configurations are provided below.

As shown in the list of configurations may be specified graphically e.g. in graphical program . More specifically the graphical program illustrates a graphical program which specifies the configuration list using a graphical API.

From the graphical specification of the configuration list an internal representation of the configuration list is created shown as .

As shown in each module of the device includes a list processing unit LPU that is configured to accept an appropriately formed list e.g. the data stream for that module in a real time and deterministic manner. Each of these module specific low level lists has the instructions on how to program the corresponding RF configuration on each module.

However the generated data stream for each module may cause programming of each module in a specific order. For example in the case of the VSG represents an exemplary sequence in a timing diagram of hardware programming as executed by the appropriate LPU for one step. In this case the config trig the configuration trigger may be received by all three modules and the diagram illustrates the programming sequence for each module.

More particularly as shown in the up converter module the AWG module and the LO module may each wait for the configuration trigger until it is received as shown. Accordingly the up converter may first write registers and decrement power then wait N Sec where N allows the LO module to finish writing frequency registers and then increment power write registers . The AWG module after receiving the configuration trigger may also wait M Sec where M allows the LO module to finish writing frequency registers and then change configuration if the digital gain is being increased. Finally the LO module upon receiving the configuration trigger may wait J Sec to allow the up converter to decrease power decrease its own power write registers change frequency write registers and increase power write registers . Once the LO completes these steps the up converter and AWG modules may increment power and change configuration if increasing digital gain respectively.

Note that the values of M N and J above may be 0 or greater depending on the processes being performed by the various other modules or devices.

The following section specifically relates to an additional embodiment for configuring devices while testing a DUT. More specifically double buffered measurement configurations may be used to modify the configuration list while testing is performed on the DUT. Thus the method of may be modified to include the following embodiments. In various embodiments some of the method elements shown may be performed concurrently in a different order than shown or may be omitted. Additional method elements may also be performed as desired. As shown this method may operate as follows.

In the device may receive a first one or more e.g. a plurality of measurement configurations e.g. RF measurement configurations from a list of measurement configurations over a first DMA channel e.g. from a host such as a computer system . For example the device may receive the measurement configurations from a host coupled to the device e.g. from within a chassis or external to a chassis as desired.

The measurement configurations may be created and conveyed as described above e.g. with respect to . For example in one embodiment the measurement configurations may be received as a data stream over a DMA channel. In some embodiments the measurement configurations may be received as instructions embedded in DMA links. The device may store the first one or more measurement configurations in a memory medium e.g. a first buffer. According to various embodiments the first one or more measurement configurations may be a single configuration or more commonly a plurality of measurement configurations. In some embodiments the buffer may be a 2 k buffer which may store configurations although the buffer may be of various sizes for storing various numbers of configurations e.g. 2 5 10 20 50 100 200 500 configurations . A full capacity link of configurations may be referred to as a chunky link.

Accordingly in the device may configure itself according to a first measurement configuration of the first one or more measurement configurations. Each measurement configuration may be specified by one or more configuration links e.g. where DMA links are used for configuration . The device may know how many of the configuration links to execute by looking for a marker between configurations e.g. a page description between configuration links .

Subsequent to configuring itself the device may begin performing one of the plurality of tests according to the first measurement configuration. For example the first configuration may be used by the device to initiate a first test of the plurality of tests. In some embodiments each configuration may be associated with a particular test or a plurality of configurations may be required for a test among various options.

In some embodiments the device may initiate or cause the configuration by sending data over the first DMA channel. For example the data may be dummy data which does not serve a purpose other than initiating the configuration. Thus by sending the data the device may cause itself to execute the DMA links stored in the first buffer. However in alternate embodiments the data may serve another purpose as well. Note that in some embodiments the measurement configurations received by the device may also include address information which may be used for sending the data.

Prior to completion of the first one or more configurations e.g. completing corresponding tests using the first one or more configurations in the device may request one or more second measurement configurations using the first DMA channel. Accordingly the device may receive and store the second measurement configurations over the first DMA channel e.g. in a second buffer. Similar to above the receiving and storing may be performed prior to completion of the first one or more measurement configurations and the second measurement configurations may be available for configuring the at least one device upon completion of the first one or more measurement configurations. As used herein completion of measurement configurations refers to the device performing whatever test or portion of a test for which the measurement configuration is associated. Thus where a VSG needs to generate a specific signal using a specific configuration upon generating the signal according to the configuration the configuration may be completed and the device may configure itself according to the next configuration. Thus once the device has performed whatever action or test is associated with a configuration and a next test needs to be performed the device has completed that measurement configuration. In some embodiments the device may be notified that it has completed a configuration upon reception of a trigger e.g. for triggering a plurality of devices or upon reaching a predetermined time for advancing to the next configuration.

In one embodiment the second one or more configurations may be received in response to the sending of the data over the DMA channel described above e.g. when buffers are available e.g. in this case where the second buffer is empty . Thus whenever new configurations are executed and there is room in a buffer available e.g. when the buffer is completely unused new configurations may be stored in the available buffer. Note that in this embodiment where there are a plurality of received configurations the reception of additional configurations may not occur each time data is sent over the DMA channel. Instead additional configurations may not be requested or received unless there is space available in a buffer. However where only a single configuration is stored in each buffer the additional configurations may be received each time a configuration is used thereby ensuring that a new configuration is always available upon completion of the previous configuration without having to wait to receive the new configuration. In alternate embodiments new configurations may be stored whenever space is available in a buffer regardless of whether the buffer is completely available or only partially available.

Upon completion of the first one or more measurement configurations in the device may request one or more additional third measurement configurations and in response the device may receive and store the one or more additional measurement configurations e.g. in the first buffer. More specifically in embodiments where the first one or more measurement configurations initially take up the entirety of the first buffer once those are completed third measurement configurations may be requested. Similar to above the configurations may be received in a data stream over the DMA channel. Additionally the device may configure itself to the second configurations e.g. a first configuration of the second configurations upon completion of the first configurations. Similar to above this process may be invoked by sending data to the host over the DMA channel as desired.

Thus in one embodiment the device may perform the above configuring requesting receiving and storing a plurality of times to perform the plurality of tests on the DUT in a deterministic manner. Note that using embodiments described herein the device may be configured according to an arbitrary number of configurations which may be changed on the fly since they are being provided in the manner described. For example a user may change the order of configurations or the number of future configurations at any time during testing of the DUT assuming those configurations have not already been fetched and or completed by the device s .

In the timing engine in the hardware section of may interrupt the microprocessor e.g. the LPU which may be an 8051 microprocessor section . Note that of may be referred to as the chinch portion which may be hardware e.g. an ASIC which abstracts a hardware device from the bus e.g. PXI PXIe PCI e.g. for PXIe. According to some embodiments this may be performed in a periodic fashion e.g. at regular hardware timed intervals. In some embodiments this may occur at an end of record of acquired data on the baseband digitizer.

In the microprocessor may write a piece of data into the streaming FIFO causing in the DMA engine to execute the DMA links e.g. instructions.

During the process in the DMA engine may automatically pre fetch the next DMA link from the host system buffer to the device device registers . This DMA transfer may include low level instructions corresponding to the list of configurations. Accordingly while the DUT is being tested the device may receive and be configured according to the list of configurations. The device e.g. the chinch may configure itself using link processor . Note that link processor may normally e.g. for typical DMA operations load the address on the host to send and receive data from. However as described herein the link processor may cause or perform configuration of the device by processing configuration links e.g. in response to sending data to the host such as dummy data. Additionally because the configurations are provided during the testing of the DUT in this embodiment the list of configurations may be changed on the fly allowing the list of configurations to be reordered added to etc. while the DUT is being tested.

The following provides one specific example describing how the number of configuration links to execute is determined. However this is exemplary only and other methods are envisioned.

In a normal DMA operation the configuration links may include the address on the host to send data to and the contiguous amount of address space available from that address. In this example 100 bytes may be sent from the device to the host. Accordingly on the host only two 50 byte segments of contiguous RAM may be available. Based on this the host may send two configuration links with starting address of the segments of RAM on the host and the number of bytes in those segments in this example 50 to the DMA channel on the device. If the device sends 50 bytes to the DMA channel it will execute the first configuration link and wait for more data from the device before executing the next configuration link.

This pausing ability of the DMA channel may be used to throttle the execution of the configuration links. In this example a configuration link that has a host RAM address may be referred to as a page descriptor link and a configuration link that has the special instruction to write a register may be referred to as a self config link. Accordingly an instruction list with two steps and two write register commands could appear as 

1. Page descriptor 2. Self config link 3. Self config link 4. Page descriptor 5. Self config link 6. Self config link

Each time the hardware pushes a piece of data e.g. dummy data into the DMA channel one of the page descriptors and all of the self config links behind it may be executed until the DMA channel hits another page descriptor. At this point the DMA channel may pause because the hardware hasn t pushed any additional data into the DMA channel at least until the next step .

As shown in the channel data from the device may be provided from on board memory to DMA channel to the host user buffer . The host may also provide information back to the DMA channel via buffer . In one embodiment the device driver may be used to create data structures stored in buffers and . Buffer may store a data structure which includes hardware configuration instructions in addition to DMA related content. Note that in the case of an AWG the data may be provided in the reverse direction from the host to the device. Thus using the DMA channel data is transferred and using the DMA channel the device may be configured according to the list of configurations. Thus by using two separate DMA channels the process may be deterministic and unaffected by other host and bus traffic.

In test and measurement various different modules or subsystems running at different clock sample or update rates may need to be synchronized. As used herein synchronization is the process of ensuring signals on each module or subsystem can occur either simultaneously or at precisely controlled times with respect to one other.

As described above a list of configurations may be used to sequence one or more test and measurement devices devices through a series of reconfigurations. Each reconfiguration may change one or more characteristics of the test and measurement devices including frequency power level and other parameters. As also described the list of configurations may be used to synchronize the reconfiguration times of one or more devices with each other and if desired a DUT. For example consider the following sequence 

In each device may establish a timer e.g. implemented as a clocked counter that can be selected as the source for the configuration trigger. In one embodiment to avoid cumulative timing drift over the course of an operation especially a long or continuous operation a common time reference that is shared between all the devices may be established. Note that the common time reference may also apply to the DUT.

In general the devices may be configured to share a frequency reference a trigger or both. Each of the devices may a use the frequency reference directly as a clock or b derive one or more clocks from the frequency reference. Circuits such as phase locked loops digital locked loops and clock dividers may be used to derive clocks locked to the frequency reference. If starting alignment is important the devices may also share a trigger to establish a common time zero . See U.S. Publication 2008 0240321 and U.S. Pat. No. 7 315 791 incorporated by reference above for further details on techniques that can improve determinism when sharing triggers. Thus where a common frequency reference is used the counter s clock may be the frequency reference or some clock locked to the frequency reference. Additionally or alternatively if a common trigger is used depending on the type of trigger the counter may be started by the trigger or the position of the trigger may be recorded relative to the counter. In one embodiment the timer may be implemented as an incrementing counter that starts from zero.

Once the timer begins counting in it may continue without pause or if it pauses may pause only for a known and deterministic time. For example where the timer is implemented as a counter it may tally every clock edge without pause. By never pausing or pausing only for known times the timer may obviate any need to synchronize pauses with other devices. The timer may continue for the duration of the list of configurations or testing of the DUT.

In one embodiment the counter may be programmed initially with the first desired interval for generating a configuration trigger Each interval may be rounded for example truncated to an integer number of clock cycles. At the expiration of the interval the timer may emit a configuration trigger. In one embodiment the interval is a terminal count register for the incrementing counter. The timer may roll over and reset to its initial count after reaching the terminal count. However the reset process may not pause the timer unless for a known time e.g. the timer may continue to advance deterministically. Subsequently the timer may be loaded with the value for each successive interval if different. As with resetting the process of loading a new interval value may not pause the timer unless for a known time the timer may continue to advance deterministically.

In the device e.g. each device may track and eliminate self correct any rounding error over time Rounding to an integer number of clock cycles typically introduces error. When the accumulated error exceeds one clock cycle a cycle may be added to or subtracted from the next timer interval to correct. For example if the first desired interval is 150.5 clocks the timer may be programmed for 150 clocks. If the second desired interval is also 150.5 clocks the timer may be programmed for 151 clocks the new desired interval plus a correction for the accumulated error. The error tracking is equivalent to implementing additional less significant bits on the timer below the units bit that is to implementing fractional bits. The desired timing precision dictates the number of fractional bits required. For single iteration operation it may be possible to pre compute the rounded timer values. However to support a general case that may include continuous or looping operation the device may tally and compensate for rounding error while running In one embodiment the fractional bits may be implemented using an adder in an arithmetic logic unit under control of an embedded program. Alternatively e.g. where an arithmetic logic unit is unavailable or undesirable fractional bit tracking may be added to the timer hardware.

However it should be noted that care should be taken in rounding The clock rate of the timer should be fast enough relative to the reconfiguration intervals that the jitter introduced by rounding to an integer clock cycle is acceptable. In the case of continuous or looping operation the same interval on different loop iterations may vary in length by one clock cycle due to rounding. Optionally this cycle to cycle variation may be isolated to a single step of the recurring sequence. This can be accomplished by pre computing the rounded timer values for all steps except one and the rounded timer values for the remaining step may be computed while running.

In some embodiments the clocks update and sample rates of the various devices in the system can differ. In this case the rounding on each device may be different. However each device may be configured to self correct to absolute time . Assuming that the devices share a common frequency reference or have sufficiently precise and stable independent frequency references and that sufficient precision is used in the error tracking math the devices do not drift significantly from each other over time.

Various embodiments are disclosed of a system and method for maintaining synchronization among a plurality of devices using clocks wherein the plurality of devices operate together for a plurality of iterations in a looped manner.

In each device may establish a clock based on a common signal or signals. For example as indicated above the common signals may be a frequency reference and or trigger as desired. Each clock may not pause and may have a constant relationship with each other clock over time.

In each device may round a first step time of a first step of a first iteration to one of two first nearest clock cycles e.g. where the first step time does not occur on either of the two first nearest clock cycles. In some embodiments the rounding may be to the absolute nearest clock cycle e.g. to the clock cycle immediately before or after the first step time . Alternatively the rounding may be performed to the nearest clock cycle before the first step time or the nearest clock cycle after the first step time as desired.

In upon reaching the one of the two first nearest clock cycles each device may perform a respective first action in a synchronized manner with respect to the other devices. In one embodiment the action may be a reconfiguration e.g. which determines device or test parameters including the next step time. For example the next step time may be determined based on received information which specifies the reconfiguration. Alternatively or additionally each step time may be determined based on a counter e.g. a non pausing counter for the clock. In some embodiments each step time may be based as an increment from the previous step or a cumulative time as desired.

In over one or more additional steps of the loop each device may adjust clock cycles for each of the one or more additional steps to remove rounding error. The adjustment may be performed dynamically during run time. Upon reaching the end of a step each device may perform a respective action in a synchronized manner with respect to the other devices.

Thus the method described above may be performed a plurality of times over various steps. For example the method may be performed each step of each iteration or possibly for one or more steps in each iteration thus adjusting for rounding errors in each iteration . In one embodiment for example each device may round a second step time of a second step of the first iteration to one of two second nearest clock cycles and the second rounding may incorporate the rounding of the first step time of the first step. Correspondingly the determined clock cycle each device may perform a respective second action in a synchronized manner with respect to the other devices.

As shown at time 0 both devices may receive a trigger to use as a common start or reference time. Each device may then determine or receive a nearest clock cycle before the next step a dotted line shows the start of each step . In this instance device determines that the next task should begin after three clocks for iteration step four clocks for iteration step four clocks for iteration step which resolves all of the accumulated error from the previous two steps and three clocks for iteration step . Similarly device operating with a faster clock and therefore having less error on any given iteration determines that the next task should begin after five clocks six clocks five clocks and six clocks for each respective step. Thus the two devices both use clocks to monitor error over multiple steps and iterations and are able to perform the changes of tasks in a synchronized manner.

When incorporated in the configuration lists described above the timer intervals themselves can be modified as part of a reconfiguration. Therefore the sequence of configuration trigger times is arbitrary and potentially infinite. If desired the sequence of intervals can differ for different devices. The self correcting timer mechanism while particularly applicable for the needs of lists of configurations described herein may have more general application to synchronization of events across devices for any of various purposes.

Supports open loop operation that is it may not require signal exchange other than optionally a frequency reference and a one time trigger to establish a common time reference.

Supports heterogeneous operation The mechanism can synchronize similar or dissimilar devices running at similar or dissimilar clock sample and update rates.

Achieves high accuracy. Dissimilar devices need not drift over time and absolute time accuracy is limited only by the stability and precision of the frequency reference.

Although the embodiments above have been described in considerable detail numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

