---

title: Office-based notification messaging system
abstract: Users of an office-based computer system are prompted to check in upon system login. An office notification message is created that includes a recipient group and an expiration. The notification message is sent only to checked-in members of the recipient group. After the notification message expires, it is deleted from the recipients' mailboxes. A reply message may be created by a notification message recipient and sent to the recipients of the original notification message. The reply message inherits the expiration of the original notification message and is deleted upon expiration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08719238&OS=08719238&RS=08719238
owner: Sunstein Kann Murphy & Timbers LLP
number: 08719238
owner_city: Boston
owner_country: US
publication_date: 20100121
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 146 517 filed Jan. 22 2009 titled Office Based Notification Messaging System the entire contents of which are hereby incorporated by reference herein for all purposes.

The present invention relates to office based messaging systems and more particularly to an office based messaging system that creates and automatically deletes messages having short lived relevancy.

Office based messaging systems are currently in use in which a message can be sent to a specific group of recipients in a company to whom the message has relevance. A group can be defined by an individual for personal use at a system level for use by all users or at an intermediate level such as for use within an organizational department. The sender need only specify the group name in the message To field and the messaging system will resolve the group name into the list of individual recipients that comprise the group and the message will be sent to the group members. In addition certain messaging systems allow the message sender to specify a message expiration. For example Microsoft Office Outlook allows a message sender to specify an Expires After date and time. Microsoft and Outlook are registered trademarks of Microsoft Corporation. A message in an Outlook recipient s inbox that has expired will appear for example with a red line through the message on the next screen refresh after the expiration time. A batch process might run once a day that will move expired messages from recipients inboxes to their deleted folders.

It is also known to route messages based on presence information. For example U.S. Patent Publication 2007 0299927 to Knauerhase describes a system that maintains a user profile that includes preference by priority as to which channels the user wishes to receive messages and also accessibility states as to those channels. Channels might include email landline and cell phones instant messaging accounts PDA s etc. For example a user s preferences may be defined such that messages are received first by email and then by cell phone. If the user is unavailable via email then messages will be routed to the user s cell phone. A store and forward system such as email can be used as a fall back if a user is unavailable by any of the channels the user has specified.

The invention is directed generally to methods and systems for sending an office notification message to users of an office based computer system. According to aspects of this method notification messages can be created having short lived relevance for recipients of a selected group who are currently in the office. Examples of such messages include Looking for Joe Do Not Use the Big Job Printer and Bagels are Here. Such notification messages may advantageously be automatically deleted from the recipient s inbox after a short expiration interval specified by the notification message sender. The messages may be delivered advantageously only to members of the selected recipient group who are in the office when the message is sent or who log in at the office before the message expires. Further one is able to have a reply message sent to all those who were sent the notification message. The reply messages can conveniently inherit the expiration of the original notification message. For example after a Joe s Been Found reply message is sent in response to a Looking for Joe notification message neither the original Looking For notification message nor the Been Found reply message have relevance after a very short period and all original notification messages and reply messages can be deleted from all recipient mailboxes.

An embodiment of the present invention provides a computer implemented method for sending an office notification message to users of an office based computer system is provided. An office based computer system user is prompted to check in upon login to the office based computer system. A list of checked in users is maintained such as in a database. For example an indication may be maintained in the office based computer system of which users are checked in based on responses by users to the prompting. An office notification message is created that includes a recipient group and an expiration time. The notification message is then sent only to checked in members of the recipient group. Upon expiration the notification message is automatically deleted from message recipient mailboxes.

The method may include prompting only users who log in locally to check in so that remote users do not receive the notification messages. The method may include automatically selecting recipients for the notification message based on the recipient group and on the indication of which users are checked in and sending the office notification to the automatically selected recipients. The method may also include sending the notification message to members of the recipient group who check in after the message was originally sent but before the notification message expires. The members of the recipient group may be determined based at least in part on user identity.

Users of the office based computer system may log in to computer workstations. Membership in the recipient group may be determined at least in part on attributes of the computer workstations of logged in users. A recipient group may include members of an organizational department members of a group users of a certain printer users located in a certain geographic location users located in a certain area of a facility users selected by the sender or combinations thereof. The expiration time may be selected based on a time interval after the notification message is sent or on a user input. The office notification message may be an email message a voicemail message an SMS message or the like.

Another embodiment of the present invention provides a computer implemented method for replying to a received office notification message is provided. After receiving an office notification message that includes an expiration and a message recipient list the recipient creates a reply message to the office notification message. In one embodiment the reply message inherits the expiration of the original notification message. The reply message is then sent to the message recipients of the original notification message. The reply message is automatically deleted from reply message recipient mailboxes after the reply message has expired. The reply message may be automatically given an expiration based on the expiration of the original notification message. The method may include automatically setting the expiration of the reply message to an expiration based on when the reply message is sent. The method may also include resetting the expiration of the notification message to an expiration based on when the reply message is sent.

Yet another embodiment of the present invention provides a computer implemented office notification system. An office based messaging system is coupled to an office based computer system. The office based messaging system is configured to receive user input for creating an office notification message. The user input includes a user selected messaging system user group of message recipients and an expiration. A check in computer application is configured to execute on the office based computer system. The check in computer application prompts a user of the office based computer system to check in upon computer system login. A database is coupled to the computer system and configured to store information about checked in users. The check in computer application is configured to update the database as users check in. The office based messaging system is configured to compare the selected messaging system user group of message recipients to the information about checked in users in the database. In addition the office based messaging system is configured to send the created office notification message to members of the selected message system user group of message recipients who are checked in.

The office based messaging system may include recipient mailboxes to receive and store office notification messages. The office based messaging system may be further configured to delete office notification messages from the recipient mailboxes after expiration. The check in computer application may be configured to prompt only users of the office based computer system who log in locally to check in.

Another embodiment of the present invention provides a computer program product for providing an office notification system on an office based computer system. The computer program product may include a non transitory computer readable storage medium having computer readable program code stored on it. The computer readable program code may include program code for prompting a computer system user to check in upon system login and for maintaining a list of checked in users. Additional program code may create an office notification message including a recipient group and an expiration and send the created notification message to members of the recipient group who are checked in. Yet additional program code may delete the notification message from message recipient mailboxes after the notification message has expired.

Optionally program code may prompt only users who log in locally to check in and or send the notification message to members of the recipient group who check in before the notification message expiration but after the notification message was originally sent.

Yet another embodiment of the present invention provides a computer program product for replying to a received office notification message that includes an expiration and a message recipient list on an office based computer system. The computer program product includes a non transitory computer readable storage medium having computer readable program code stored on it. The computer readable program code includes program code for creating a reply message to the received office notification message and for setting a reply message expiration. Additional program code sends the reply message to recipients of the office notification message and automatically deletes the reply message from reply message recipient mailboxes after the reply message has expired.

Definitions. As used in this description and the accompanying claims the following terms have the meanings indicated unless the context requires otherwise 

The terms office based messaging system messaging system client office based computer system office based notification application and the like refer to systems that support a defined entity that includes a plurality of system users. Such an entity might be a company an organization or groups within a company or organization.

Local users are local workstations to which computer system users log in. The workstations typically are personal computers. A local workstation is normally associated with a fixed location such as a user s office. However users may generally log in to any local workstation using their system user identifications typically usernames and passwords . At any given time the number of users logged in to local workstations may range from zero up to all local users eligible to log in. In an embodiment the local workstations include Microsoft Outlook client software. Local users may also include devices such as mobile phones smart phones PDA or other wireless handheld devices including for example the Blackberry devices by Research in Motion Limited and the iPhone mobile telephone by Apple Inc. Devices include client software that operates with the centralized mail servers of messaging system to send and receive messages which may be in the form of for example email messages voicemail messages or SMS text messages.

Remote users include computer system users who are accessing the system from off site or remote locations. Such remote users might include users accessing the computer system from home from a Wi Fi hotspot such as a coffee shop or an airport or from a hotel while traveling. Remote users may also include devices such as mobile phones smart phones PDAs or other wireless handheld devices.

Typically remote users will connect to the computer system via the Internet or a managed network . Both local users and remote users have access to messaging system . Such access typically is facilitated through distributed client software such as for example Outlook. However other suitable messaging systems may be used. Local network is typically an office based Local Area Network LAN that facilitates communication between the hardware and functional components of the office based computer and messaging systems including communication between centralized and distributed components of the office based messaging system .

Check In Database is a database for maintaining a list of computer system users who have checked in. A Check In Out application prompts computer system users upon system log in if they would like to check in. The purpose of the Check In Out application is to maintain a list of computer system users who are appropriate recipients of messages intended for those who are physically present in the office. As such the system may be operated so that remote users do not execute the Check In Out application when they log in to the office based computer system. The Check In Out application updates Check In Database with the check in status of system users. Such an application may also include functionality that allows a user to check out and check in during a workstation session if the user will be out of the office for example for lunch or other appointments. As explained more fully below data in the Check In Database is used to limit the recipients of an office notification message to those checked in at the time the message is originally sent and may be used to allow users to receive an earlier sent notification message when they later check in. In an embodiment of the invention the Check In Out application is a .NET application that is executed when a local workstation user logs in to the computer system.

The ability to create office based notification messages intended for only those recipients physically in the office may be limited to those users physically present in the office. This may be done for example by having the messaging system client software recognize the user as being a remote user and not running the notification application on the remote user devices . Thus the remote users will not be given the option to send office based notification messages automatically limited in distribution to those physically present in the office.

System User Group Database contains information about system user groups and their associated group members that are selected by a messaging system user as the recipient group of an office notification message. In an embodiment many of the associations in database of an individual system user to a user group are derived from static information in the office based computer system s Windows Server 2003 Active Directory directory service by Microsoft. The remaining associations of users and groups are built dynamically upon the sending of the notification message. As an example of a static association based on data in Active Directory database contains associations of office floors to user IDs. When a notification message sender selects for example the recipient group 10th Floor Users the individual recipients in the selected group are resolved through the floor to user identification ID association in the database . An example of a dynamic association is user IDs that are currently associated with a particular printer. A dynamic association is maintained in database between user id and printer. This association is refreshed each time a user logs in. Active Directory contains a static association of computers and their associated printers. Upon user log in the system updates the user s assigned printer by identifying the computer the user is logging in to in Active Directory and then writing the computer s assigned printer value to the user s record in database . When a notification message sender selects for example the recipient group Color Printer Users i.e. all users currently assigned to the printer Color the individual recipients in the selected group are resolved through the database dynamic association Color to user ID.

Persistent APB Database relates to a feature of the present invention more fully described below that allows users to receive earlier sent office notification messages as they log in. To briefly summarize when a notification message is defined as Persistent when it is created the message and a list of all recipients who were not checked in when the message was sent as determined from Check in Database is stored in Persistent APB Database . Periodically the list of recipients who were not checked in when the message was sent is compared to the current list of checked in users in Check in Database . If a recipient who was not present in Check in Database when the message was sent is now present the message stored in Persistent APB Database is sent to the newly checked in recipient. A notification message and its recipient list is deleted from Persistent APB Database after the message has expired.

In a preferred embodiment of the invention System User Group Database Check In Database and Persistent APB Database are various tables in a single SQL database. However other database system architectures and products may be used.

In accordance with an embodiment of the present invention a user can create an office notification message including a designated recipient group and an expiration and direct the messaging system to send the message. In accordance with a preferred embodiment of the present invention a method for creating and sending an office based notification message is shown in . A notification message sender first initiates creating the office notification message . This is done for example by selecting an option within the messaging system client program on the sender s workstation that executes the office based notification application. The sender then chooses a recipient group to receive the notification message. The recipient group is selected from one of the groups defined in System User Group Database . After a recipient group has been selected the sender has the option of adding additional recipients by name . The additional recipients are selected from contact lists or address books available to the messaging system client program on the sender s workstation . After the sender has selected all desired recipients of the notification message the sender adds subject and message body text to the notification message.

The sender then chooses a notification message expiration interval for the notification message. As will be explained in more detail below the expiration interval is used to set a time after which the notification message will be deleted from a recipient s messaging system. The user may also define the message as persistent . The sender then directs the messaging system client to send the message.

After the sender directs the messaging system to send the message the notification application expands the selected recipient group into its individual recipients and then compares the individual recipients to the users in the Check In Database who are checked in. Individual recipients who are not checked in are filtered from the notification message recipient list. For example as schematically exemplified in assume the sender selected Accounting as the recipient group. Members of the Accounting group may be identified. Then these members may be compared to a list of checked in users. Accounting group members who are checked in may be used to populate a list of APB message recipients.

Returning to in one embodiment individual recipients that are specifically added as additional recipients will not be filtered even if they are not checked in. The messaging system then transmits the notification message to the resultant list of recipients. At if the sender does not define the message as persistent then sending the notification message is complete and the routine exits .

However at if the sender has defined the message as persistent then the notification application stores the message in Persistent APB Database . In addition the notification application stores in Persistent APB Database the list of individual recipients from the recipient group that were filtered and did not receive the notification message and stores in Persistent APB Database the list of individual recipients from the recipient group to whom the notification message was sent .

After storing the persistent message and the individual recipients who did and did not receive the notification message the notification application waits for a predetermined persistent message re check interval. In an embodiment the re check interval can be defined at an application level based on considerations relating to workstation performance. In one embodiment the recheck interval is about ten seconds. After the re check interval the expiration time of the stored persistent notification message is checked against the system time. If the stored persistent notification message has not expired and an All Set reply message explained below with regards to has not been received then it is determined whether any of the individual recipients who have not received the persistent notification message are now checked in. The list stored in the Persistent APB Database of individual recipients from the recipient group who were filtered because they were not checked in and did not receive the notification message is compared to the current list of checked in users in Check In Database . If additional individual recipients from the recipient group have checked in since the last check the notification application re assembles the notification message based upon message information stored in Persistent APB Database . It then directs the messaging system client to send the notification message to these additional individual recipients. The list stored in Persistent APB Database of recipients who have and have not received the persistent notification message is updated and the notification application again waits for a re check interval.

If at the persistent notification message has expired or if at an All Set reply message has been received by the originator described below in response to the notification message as indicated by the persistent message being marked for deletion described below the stored message along with the stored lists of individual recipients who did and did not receive the message are deleted from Persistent APB Database . The notification application then exits the send notification message routine.

In accordance with an embodiment of the present invention a user receives an office notification message having an expiration and the notification message is deleted from the user s messaging system when the message expires. In accordance with an embodiment shows a flow chart of a method by which a recipient receives an office based notification message and the message is deleted after expiration. After the notification message is sent the message is received by the recipient s messaging system client and is available for the recipient to read. If at the notification message is not an All Set reply message then after an expiration re check interval the message is checked by the notification application to see if it has expired. To determine if the notification message has expired the expiration time is compared with the current system time. If the expiration time is earlier than the current time the message has expired. If the notification message has expired then the notification application directs the messaging system client to delete the message from the recipient s messaging system.

If at the received message is an All Set reply message to an earlier notification message then the notification application determines whether the recipient of the All Set message is also the originator of the notification message to which the All Set message relates. If so then Persistent APB Database is checked to determine if the notification message is stored in Persistent APB Database . If the notification message is stored in Persistent APB Database then the message record and the lists of recipients who have and have not received the persistent notification message are marked for deletion from Persistent APB Database . As indicated above the deletion from Persistent APB Database of the persistent message record and the recipient lists takes place as part of the process of checking and sending the persistent notification message to recipients who have checked in after the original message has been sent. In this manner after an All Set reply message has been received by the originator in response to the persistent notification message persistent notification messages are not sent to individual recipients in the selected recipient group list to whom the message has not yet been sent. In an embodiment deletion of the persistent notification message and the recipient lists from Persistent APB Database occurs only when the originator of a persistent notification message receives an All Set reply to the notification message or if the persistent notification message has expired. However deletion of both the persistent notification message and the recipient lists from Persistent APB Database may be triggered by other events. For example deletion may be triggered when any recipient of a persistent notification message sends an All Set reply message without regard to whether the All Set message is received by the sender. The decision as to what event if any triggers deletion of the persistent notification message and the recipient lists from Persistent APB Database is a system design choice.

In an embodiment the expiration recheck occurs periodically with the re check interval based on considerations related to workstation performance. The start of the first interval may occur for example when the notification application is started on a user s workstation. In an embodiment an optional test may be performed by the notification application to determine if the number of messages in a recipient s inbox exceeds a threshold number and if so to skip determining if any notification messages have expired. In certain implementations on certain messaging systems the workstation resources required to identify a notification message in a user s inbox and then to determine if any messages have expired is a function of the number of messages in the recipient s inbox. With such messaging systems a user s workstation may momentarily hang while the notification application determines if any notification messages have expired. In an embodiment determining if a notification message has expired is skipped if the notification application calculates that the number of messages in the user s inbox exceeds a threshold number. In this case notification messages will not be deleted . In some embodiments when an All Set reply message is received the expiration of the original notification message or the reply message can be set to for example the current time plus 10 minutes.

In accordance with an embodiment of the invention a user creates a reply message to an office notification message including an expiration and sends the reply message to all recipients of the notification message. In accordance with a preferred embodiment of the invention a method for replying to an office based notification message is shown in . In the messaging system client the recipient selects an office notification message and activates the notification message All Set reply function. The recipient may optionally add message text to the All Set reply message. The recipient then directs the notification application to send the reply message. If at the notification message being replied to is not a persistent notification message or if at the replied to message is a persistent notification message but a Persistent APB Database record does not exist then the notification application directs the messaging system to send the reply message to the individual recipients of the original message as typically determined for example by the recipients in the To field of the original message. However if at the notification message being replied to is a persistent notification message and if at a persistent message record exists in Persistent APB Database then the associated updated list of recipients who have received the original notification message is used as the recipient list for the reply message. The expiration time from the original notification message is copied by the notification application into the reply message and the notification application directs the messaging system to send the reply message using the updated recipient list. In other embodiments the expiration time of the reply message may be determined by adding for example 10 minutes to the current time. Also when the reply message is sent the expiration time of the original notification message may be set to a time in the future for example to the current time plus 10 minutes.

In accordance with an embodiment of the invention the disclosed office based notification application may be implemented as an integration to Microsoft Office Outlook 2003 using Microsoft s .NET Visual Studio Tools for Office VSTO set of class libraries in concert with the native Microsoft Office Outlook object model. This embodiment takes advantage of several application programming interface components available for custom feature development including a standard or predefined insertion point within Microsoft Office Outlook for VSTO add ins the ability to design a set of custom graphical user interface forms equipped with pre built controls the tools required for accessing external data stored within the local file system and networked database management systems DBMS and the ability to append metadata to the Outlook MailItem object using user defined fields. Metadata is additional information specific to the notification application that is appended to the notification message by the notification application. This metadata once added to the notification message is used to provide necessary information such as the message s expiration time to the notification application. Although some embodiments may be implemented using Outlook as the messaging system client other embodiments may be implemented in other messaging systems. While the disclosed embodiment is implemented in a messaging system client running on a Microsoft Windows based computer the other embodiments may be implemented on messaging system clients that run on other devices such as mobile phones smart phones PDAs or other wireless handheld devices including for example the Blackberry wireless device by Research in Motion Limited or the iPhone mobile telephone by Apple Inc.

In accordance with an embodiment of the invention a Check In Out application user interface is shown in . When a local computer system user logs in the Check In Out application prompts the user to check in via this user interface. All checked in users are so indicated in the Check In Database . When the local computer system user logs out the Check In Out application prompts the user to check out before the computer shuts down or restarts.

In accordance with an embodiment of the invention the Mail Inbox user interface of Microsoft Outlook may be modified as shown in . When a user starts the Outlook application Outlook triggers the startup event for each installed add in. In an embodiment the office based notification application is controlled by a VSTO based Outlook add in which is triggered upon starting Outlook. When the office based notification application add in startup event is triggered the notification application creates the notification messaging toolbar in the Outlook Explorer window adds needed metadata fields to the Inbox folder explained below in relation to and then passes control back to Outlook.

In accordance with an embodiment of the present invention shows a create message user interface form that allows a user to enter the information required for the creation of a notification message including a designated recipient group and an expiration and to direct the messaging system to send the message. The user interface form of is loaded and displayed by the notification application when a user clicks on the notification message button of . The user interface form allows the user to select a recipient group via a Send To drop down menu . The user also has the option to specify additional message recipients by name by selecting the Add Additional Users button . The user may enter a message subject in Subject text entry box and message body text may be entered in text entry box . The user selects an expiration interval from the Expires In drop down menu . The sender has the option by selecting box to identify the message as persistent . After all information is entered into the form the user clicks on the Send button . The notification application then directs the messaging system client to create and send a notification message based on the entered information. The user also has the option to cancel out of the create notification message function altogether by selecting the Cancel button . In an embodiment this form and the forms discussed below in relation to may be designed using Visual Studio.

In accordance with an embodiment notification messages are easily identified by the user within a messaging system user s mailboxes by having a certain character string automatically prepended to the subject of the notification message when the message is sent. For example the character string APB may be used in all notification message subject lines as shown for office notification message of .

Once a notification message has been received by a recipient the recipient has several options available for replying to the message. One option is to reply to the message as one would reply to other non notification messages. For example a recipient may select or open the notification message and choose a delivery option such as reply reply all or forward. This typically results in a new reply message being created that allows the recipient to enter message body text into the reply message. The recipient then sends the reply message and the messaging system distributes the reply message in accordance with the selected delivery option. This method of replying to a message is well known and will not be discussed further.

In an embodiment of the invention the create notification message form illustrated in is loaded and displayed when the notification message icon on the messaging system client toolbar menu is selected. However if the notification message icon is selected while an office notification message is highlighted such as notification message the notification application determines whether the user wishes to reply to the highlighted notification message or the user wishes to send a new notification message. In this instance the Please Choose user interface form shown in is displayed. If the recipient selects the Send a new APB button the user interface form of is displayed and the user may create a new notification message. On the other hand if the recipient selects the Send an ALL SET for this APB button the user interface form of is displayed and the user may create a reply message to a received notification message.

In accordance with an embodiment of the present invention shows a create All Set reply message user interface form that allows a user to reply with an All Set reply message to an office notification message. The user interface form of is loaded and displayed by the notification application when a user selects a notification message for example message of and clicks on the notification message button of . This user interface form allows the recipient to enter reply message body text into text box . The reply message subject is automatically filled in based on the subject of the notification message that has been selected for reply. The recipient may choose to send the reply message by selecting the Send button or the recipient may cancel out of the reply function altogether by selecting the Cancel button .

In general how to trigger the create notification message dialogue is a design decision and methods other than the above described embodiments may be used within the scope of the present invention. For example creation of a notification message may begin based on selection of a menu item from the File drop down menu from a mailbox display screen or a new message creation screen. Also the layouts of the create notification message and the create reply message user interface forms of is are design decisions and any user interfaces that allow for the functionality described above may be used. A create notification message user interface should allow the user to identify the message notification message identify subject and or message body text indicate an expiration and optionally identify the message as persistent. A create reply message user interface may allow the user the option to at least enter message body text.

In accordance with an embodiment information in the form of metadata is stored as user defined fields of the notification message Outlook mail item object. This metadata is used to provide information such as the message s expiration time to the notification application. shows an example of notification message metadata stored in a notification message Outlook mail item. APB Message may be a Boolean variable. This field indicates whether the message is a notification message. APB Expiration is a date time value. This is determined during notification message creation and in the case of a reply message may be populated with the expiration from the original notification message . Persistent APB can be a Boolean value indicating whether the notification message is a persistent message . All Set APB can be a Boolean value indicating whether the message is a reply message to a notification message . APB Msg ID is a unique identifier of the notification message. In an embodiment the APB Msg ID is used to associate an All Set APB reply message with an original persistent notification message so that after an All Set reply has been sent the persistent notification message and the recipient lists may be deleted from Persistent APB Database . The APB Msg ID is also used to associate a persistent notification message stored in Persistent APB Database with the stored associated lists of individual recipients from the selected recipient group who have and have not received the persistent notification message. The remaining notification message metadata values Sender Recipients Subject Text and Message Body Text serve the same purpose as the corresponding fields in a typical messaging system message.

It should be noted that terms such as client server switch and node may be used herein to describe devices that may be used in certain embodiments of the present invention and should not be construed to limit the present invention to any particular device type unless the context otherwise requires. Thus a device may include without limitation a bridge router bridge router brouter switch node server computer appliance or other type of device. Such devices typically include one or more network interfaces for communicating over a communication network and a processor e.g. a microprocessor with memory and other peripherals and or application specific hardware configured accordingly to perform device functions. Communication networks generally may include public and or private networks may include local area wide area metropolitan area storage and or other types of networks and may employ communication technologies including but in no way limited to analog technologies digital technologies optical technologies wireless technologies e.g. Bluetooth networking technologies and internetworking technologies.

It should also be noted that devices may use communication protocols and messages e.g. messages created transmitted received stored and or processed by the device and such messages may be conveyed by a communication network or medium. Unless the context otherwise requires the present invention should not be construed as being limited to any particular communication message type communication message format or communication protocol. Thus a communication message generally may include without limitation a frame packet datagram user datagram cell or other type of communication message.

It should also be noted that logic flows may be described herein to demonstrate various aspects of the invention and these logic flows should not be construed to limit the present invention to any particular logic flow or logic implementation. The described logic may be partitioned into different logic blocks e.g. programs modules functions or subroutines without changing the overall results or otherwise departing from the true scope of the invention. Logic elements may be added modified omitted performed in a different order or implemented using different logic constructs e.g. logic gates looping primitives conditional logic and other logic constructs without changing the overall results or otherwise departing from the true scope of the invention.

The present invention may be embodied in many different forms including but in no way limited to computer program logic for use with a processor e.g. a microprocessor microcontroller digital signal processor or general purpose computer programmable logic for use with a programmable logic device e.g. a Field Programmable Gate Array FPGA or other PLD discrete components integrated circuitry e.g. an Application Specific Integrated Circuit ASIC or any other implementation including any combination thereof. In a typical embodiment of the present invention predominantly all of the described logic is implemented as a set of computer program instructions that is converted into a computer executable form stored as such in a computer readable medium and executed by a processor under the control of an operating system.

Computer program logic implementing all or part of the functionality described herein may be embodied in various forms including but in no way limited to a source code form a computer executable form and various intermediate forms e.g. forms generated by an assembler compiler linker or locator . Source code may include a series of computer program instructions implemented in any of various programming languages e.g. an object code an assembly language or a high level language such as FORTRAN C C JAVA or HTML for use with various operating systems or operating environments. The source code may define and use various data structures and communication messages. The source code may be in a computer executable form e.g. via an interpreter or the source code may be converted e.g. via a translator assembler or compiler into a computer executable form.

The computer program may be fixed in any form e.g. source code form computer executable form or an intermediate form either permanently or transitorily in a tangible storage medium such as a semiconductor memory device e.g. a RAM ROM PROM EEPROM or Flash Programmable RAM a magnetic memory device e.g. a diskette or fixed disk an optical memory device e.g. a CD ROM a PC card e.g. PCMCIA card or another memory device. The computer program may be fixed in any form in a signal that is transmittable to a computer using any of various communication technologies including but in no way limited to analog technologies digital technologies optical technologies wireless technologies e.g. Bluetooth networking technologies and internetworking technologies. The computer program may be distributed in any form as a removable storage medium with accompanying printed or electronic documentation e.g. shrink wrapped software preloaded with a computer system e.g. on system ROM or fixed disk or distributed from a server or electronic bulletin board over the communication system e.g. the Internet or World Wide Web .

Hardware logic including programmable logic for use with a programmable logic device implementing all or part of the functionality described herein may be designed using traditional manual methods or it may be designed captured simulated or documented electronically using various tools such as Computer Aided Design CAD a hardware description language e.g. VHDL or AHDL or a PLD programming language e.g. PALASM ABEL or CUPL .

Programmable logic may be fixed either permanently or transitorily in a tangible storage medium such as a semiconductor memory device e.g. a RAM ROM PROM EEPROM or Flash Programmable RAM a magnetic memory device e.g. a diskette or fixed disk an optical memory device e.g. a CD ROM or another memory device. The programmable logic may be fixed in a signal that is transmittable to a computer using any of various communication technologies including but in no way limited to analog technologies digital technologies optical technologies wireless technologies e.g. Bluetooth networking technologies and internetworking technologies. The programmable logic may be distributed as a removable storage medium with accompanying printed or electronic documentation e.g. shrink wrapped software preloaded with a computer system e.g. on system ROM or fixed disk or distributed from a server or electronic bulletin board over the communication system e.g. the Internet or World Wide Web .

The present invention may be embodied in other specific forms without departing from the true scope of the invention. Any references to the invention are intended to refer to exemplary embodiments of the invention and should not be construed to refer to all embodiments of the invention unless the context otherwise requires. The described embodiments are to be considered in all respects only as illustrative and not restrictive.

The embodiments of the invention described above are intended to be merely exemplary numerous variations and modifications will be apparent to those skilled in the art. All such variations and modifications are intended to be within the scope of the present invention as defined in any appended claims.

