---

title: Displaying feed data
abstract: Concepts and technologies are described herein for displaying feed data. Feed data associated with a social networking service may be displayed in a multidimensional grid orientation that efficiently uses available display space, while improving the user experience. The feed data can be presented in a multidimensional grid orientation that leaves little empty display space, thus allowing efficient use of the display space. The feed data presented in the multidimensional grid orientation also can be dynamically updated when new feed data is received.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08584021&OS=08584021&RS=08584021
owner: Microsoft Corporation
number: 08584021
owner_city: Redmond
owner_country: US
publication_date: 20100226
---
Social networking sites have become popular with Internet users. Users of social networking sites often have the ability to create and manage social networks that include other users of the social networking service. In connection with the social networking services users may have the ability to update a status associated with a user account to inform members of their social network of a current thought activity event or the like. Members of the user s social network can view the user s status and take other actions if desired.

Some users of social networking sites have extensive social networks and may view information relating to a large number of social networking accounts. By way of example one or more members of a user s social network may update statuses post photographs post links or the like. Similarly members of the user s social network may submit data to the social networking service to reflect a thought mood or event or to share information such as a link a document or another resource with other users. All of these data and other events which may be collectively referred to herein as feed data may be viewable by the user at a given time. Because user interfaces for social networking services typically represent feed data in a vertically aligned orientation wherein older events move down a vertical column the viewable portion of the feed data is typically limited by the available vertical extent of a display device.

Concepts and technologies are described herein for displaying feed data. The concepts and technologies disclosed herein can be employed to display feed data in a horizontal orientation that efficiently uses available display space. The feed data can be presented in a multidimensional grid orientation that leaves little or no empty space on a display thus allowing efficient use of the display space. The feed data presented in the multidimensional grid orientation also can be dynamically updated.

It should be appreciated that the above described subject matter may be implemented as a computer controlled apparatus a computer process a computing system or as an article of manufacture such as a computer readable storage medium. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended that this Summary be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

The following detailed description is directed to technologies for displaying feed data and for dynamically updating displayed feed data. While the subject matter described herein is presented in the general context of program modules that execute in conjunction with the execution of an operating system and application programs on a computer system those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like.

In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustration specific embodiments or examples. Referring now to the drawings in which like numerals represent like elements throughout the several figures aspects of a computing system computer readable storage medium and computer implemented methodology for displaying feed data and for dynamically updating displayed feed data will be presented.

Referring now to aspects of one operating environment for the various embodiments presented herein will be described. The operating environment shown in includes a computer configured to execute an operating system an application program and a data rendering module . According to various embodiments the computer is a standard desktop or laptop personal computer system. It should be appreciated however that the computer may include other types of computing systems including a server computer a handheld computer a netbook computer a tablet computer a set top box or unit STB or STU an embedded computer system a video game console a personal digital assistant a mobile telephone or another type of computing device known to those skilled in the art. An exemplary architecture of the computer will be described in additional detail below with reference to .

The operating system is a computer program for controlling the operation of the computer . The application program is an executable program configured to execute on top of the operating system . In one embodiment the application program is a social networking client program. It should be appreciated however that the embodiments presented herein may be utilized by other types of programs. For example in other embodiments the application program is a web browser accessing a website provided by a social networking service.

The computer may be connected to one or more networks and may operate in conjunction with other computing systems on or in communication with the network to provide the functionality described herein. In some embodiments the computer communicates with a server that operates on or in communication with the network . In some embodiments the server includes a social networking server application which provides a social networking service to users via a social networking site generated by the social networking server application . In the illustrated example the server is a web server accessible via the Internet and provides a social networking service and or social networking service data such as feed data to users or devices connecting to the server and or the social networking site generated by the social networking server application . In some embodiments programs also can connect to the server via an application programming interface API not illustrated a back end interface not illustrated or via other connections and or interfaces not illustrated .

As will be described in greater detail below a data rendering module executes in conjunction with the application program to provide the computer with the functionality disclosed herein for displaying feed data received from the server . While the data rendering module is illustrated in as a distinct entity within the computer it should be understood that the functionality disclosed herein as being performed by the data rendering module may be provided by the application program or another hardware and or software component of the computer . Additionally or alternatively some or all of the functionality disclosed herein as being performed by the data rendering module may be provided by the social networking server application operating on the server alone or in combination with the computer . According to other implementations the data rendering module operates in conjunction with the operating system and or the application program to display feed data . Other implementations are possible and are contemplated.

As will be explained in more detail below concepts and technologies of the present disclosure allow a user of a social networking service provided by the server to retrieve format and display feed data associated with the social networking service in an orientation that makes more efficient use of a display connected to the computer . In particular a user can access a server hosting a social networking site associated with a social networking service using the computer . The computer can access feed data corresponding to the user s social network.

As discussed briefly above feed data may include but is not limited to data associated with a social networking service and can indicate news thoughts moods events and other information associated with a social networking service and or users of the social networking service. Additionally the feed data can include information relating to links photographs graphics animations documents videos and or other resources all of which may be shared or referenced by users of a social networking service advertisers affiliated with or advertising through a social networking service and or other entities. Thus the feed data may include but is not limited to status updates links photos videos and or other information hereinafter status updates periodically posted by members of a user s social network. The feed data provided to the user can be provided by the social networking server application or by another application and or interface operating at the server . Although not illustrated in it should be appreciated that the server can include or can be in communication with data storage devices for storing the feed data provided to the user as well as other hardware and or software.

The feed data is provided to the computer according to generally known methods via the network . The data rendering module includes computer readable instructions the execution of which cause the computer or a processor thereof not illustrated in to analyze the feed data to determine what portions of the feed data should be displayed. The data rendering module can be configured to make these determinations according to desired parameters and or preferences. Thus the data rendering module can determine to display some or all of the retrieved feed data . In some embodiments any portions of the feed data that the data rendering module determines are not to be displayed can be stored at a data storage device not illustrated in associated with the computer .

In some embodiments only a portion of the feed data is initially retrieved from the server as determined and or specified by the data rendering module . In some embodiments additional portions of the feed data may be retrieved from the server if a user enters a command at the computer to view a detailed view of the feed data as will be described in more detail below. The data rendering module formats the retrieved feed data into a desired format which may include an abbreviated or compressed view of the feed data . The formatted feed data is passed to the application program for display at the computer .

The data rendering module and or the application program include computer readable instructions for generating a user interface UI display including the formatted feed data . In some embodiments the data rendering module and or the application program are configured to generate UI controls for retrieving detailed views of some or all of the displayed feed data . Thus in the case of a status update for a social networking service the data rendering module and or the application program are configured to format the feed data into a viewable status update and to generate a UI control for accessing a detailed view associated with the viewable status update.

In some embodiments the viewable status update is an abbreviated or compressed format of a full status update that can be viewed by a user of a social networking service as mentioned above. Thus the UI controls generated by the data rendering module and or the application program can be formatted to correspond to actions for retrieving additional feed data associated with the viewable status update. If a user enters a command to retrieve a detailed view of the displayed status update e.g. by selecting an appropriate UI control the computer can retrieve and format the additional feed data corresponding to the displayed status update as mentioned above.

The data rendering module and or the application program also are configured to receive a notification from the server or the social networking server application executing thereon that new feed data has been received at the server . In some embodiments the data rendering module and or the application program query the server periodically to check for new feed data and in some embodiments the server pushes new feed data to the computer . In either implementation the data rendering module and or the application program are configured to format the new feed data and dynamically update the feed data displayed by the computer to accommodate the new feed data received from the server . According to embodiments disclosed herein the data rendering module and or the application program provide event based updating of the displayed feed data while maintaining the viewed feed data in a desired orientation.

It should be appreciated that the operating environment illustrated in is one embodiment of a suitable operating environment. Other operating environments for providing the functionality disclosed herein may be utilized. Additional details regarding the operation of the application program and the data rendering module will be provided below with reference to .

Turning now to a user interface diagram showing aspects of a user interface provided by the application program in one embodiment will be described. In particular shows a screen display A generated by the application program according to one particular implementation presented herein. In this implementation the application program is a program for interacting with a social networking website provided by the server . In other embodiments the application program is a stand alone application that is configured to interface with an API exposed by the server hosting a social networking site. In some embodiments the application program is a web browser accessing a social networking site provided by the server . Thus it should be appreciated that the user interface diagrams illustrated in are merely illustrative and that the embodiments presented herein may be utilized with many different types of user interfaces provided by many different types of application programs .

The screen display A shown in includes various UI controls for interacting with the social networking service. The display A includes a display of the feed data associated with a social networking account features associated with the social networking service other UI controls and data and the like. In particular the illustrated screen display A includes navigation controls the selection of which cause the computer to display controls for utilizing functionality provided by the social networking site for modifying an account associated with the social networking site. The illustrated navigation controls include but are not limited to UI controls to update a user s status navigate to various pages filter data to provide various views access a messaging service provided by the social networking site view photos view videos combinations thereof and the like.

The illustrated screen display A further includes window controls for controlling the behavior of the program window a logout UI control for logging out of the accessed user account and display controls. The illustrated display controls include a UI control the selection of which causes the computer to display feed data in a vertical orientation a UI control the selection of which causes the computer to display the feed data in a multidimensional grid orientation and a UI control the selection of which causes the computer to filter the feed data to display photographs or other graphics included in the feed data . For purposes of this disclosure and the appended claims the phrase multidimensional grid orientation is used to refer to an orientation in which the feed data is arranged vertically as well as horizontally as illustrated below in . In the context of status updates the multidimensional grid orientation allows more than one status update to exist in at least two directions e.g. horizontally and vertically. The arrangement illustrated in is not a multidimensional grid orientation as the data is arranged in rows that allow more than one status update to exist only in the vertical direction.

In the illustrated embodiment the user has selected the UI control to display the feed data in the strictly vertical orientation. Thus the UI control is illustrated as highlighted and the feed data is being displayed on the screen display A in the vertical orientation. Because the feed data is being displayed in the vertical orientation only a relatively small portion of the feed data is being displayed by the computer due to the consumption of the limited amount of available display space. As such the illustrated screen display A further includes a scroll bar for scrolling the displayed page to access additional portions of the feed data .

As explained above feed data might include status updates links photos videos and or other information hereinafter status updates periodically posted by members of a user s social network. The screen display A is illustrated as displaying four exemplary status updates A D collectively the status updates . Each of the status updates can include a variety of information that can be generated by the members of a social network by the server by the social networking server application and or by other applications systems and devices. In the illustrated embodiment each status update includes graphics such as a photo or other art selected by the user associated with the status update content such as a status link message or the like information describing when the status update was posted by the user options to vote upon or comment upon the status update other content not illustrated combinations thereof and the like. As mentioned above the displayed status updates are only a portion of the status updates existing in the user s feed. The user is able to view additional status updates by way of the scroll bar or other UI controls that may be used by a user to scroll down to view additional status updates information.

The illustrated screen display A may be displayed when the application program is initialized when a social networking site is loaded and or when triggered or accessed by a command received at the computer e.g. by a user selecting the UI control as explained above. It should be understood that the illustrated screen display A as well as the feed data illustrated and or described with reference thereto is merely illustrative of a contemplated embodiment of the present disclosure. As such the format of the screen display A and the UI controls illustrated and described herein should not be construed as being limiting in any way.

The application program may receive many different types of commands. For example the application program may receive commands as mouse clicks and or key entries on or at UI controls e.g. the illustrated UI controls hot keys and or keystroke sequences voice commands and or the like. Therefore as utilized herein the term command encompasses any request to perform functionality that is received at the computer .

Referring now to a user interface diagram showing aspects of a user interface provided by the application program and the data rendering module in one embodiment will be described. In particular FIG. B shows a screen display B generated by the application program and the data rendering module . The screen display B can be displayed for example in response to a user selecting the UI control to display the feed data in a multidimensional grid orientation. As such the UI control is highlighted although this is not necessary. The screen display B includes status updates A I. The status updates A D correspond to the status updates A D of though the status updates A D do not necessarily include all of the feed data illustrated in the status updates A D of .

In each of the status updates is illustrated as a cell i.e. a unit or item such as for example a graphical window balloon box icon or the like within which the feed data is reproduced. In each of the status updates is illustrated within a graphical box though other embodiments are contemplated. As shown in each cell i.e. each status update has vertical and horizontal dimensions that are set by the application program and or the data rendering module . The dimensions of the cells and therefore the status updates can be consistent with one another or can be based upon the respective contents of each of the status updates . Thus the dimensions of the status updates may be determined based upon preferences commands and or functions associated with the user the social networking service the application program and or the data rendering module . In the illustrated embodiment the data rendering module analyzes the feed data and formats the status updates after determining the respective contents of each of the status updates . Based upon the contents of each of the status updates the dimensions of the status updates are determined and the status updates are displayed within the illustrated cells.

The cells i.e. the status updates are arranged on the screen display B in a number of columns. In the illustrated embodiment the status updates are arranged in three columns although only a portion of the third column is visible in . It should be understood that the number of columns as well as the number of status updates that are displayed in each of the columns may be determined based upon the amount of available display space by the size of the screen used for a computer display by the size of the application window used to display the screen display B by a user and or software preferences and the like. The width of the columns can be substantially equivalent to the width of the cells i.e. the status updates whereby each column accommodates one cell across the column width and one or more cells across the column length. The columns are illustrated and described with reference to below.

The status update F illustrated in includes a reference to shared photos illustrated in the status update F as thumbnails . It should be understood that this embodiment is exemplary and is not to be construed as limiting in any way. As shown in each of the status updates includes a UI control for displaying a detailed view of the information reflected in the status update . The function of the UI control and the detailed view that may be displayed by the computer in response to the selection of the UI control will be described in more detail with reference to .

The screen display B further can include a UI control the selection of which causes the computer to display additional status updates that are not visible. Instead of or in addition to the UI control the screen display can include a horizontal scroll bar. The UI controls shown in are exemplary and are illustrative of only one contemplated embodiment of the present disclosure.

It can be appreciated by referring collectively to that in a similar amount of screen real estate the screen display B displays more of the feed data than was displayed on the screen display A. In other words the screen display B leaves less unused display space relative to the screen display A. Similarly it will be appreciated that the status updates of and the status updates of include substantially the same content though additional controls displayed in may be omitted from the status updates illustrated in if desired. In some embodiments the additional controls illustrated in are accessible to a user viewing the screen display B by way of selecting the UI control to access the detailed view.

Turning now to a user interface diagram showing aspects of a user interface provided by the application program and the data rendering module in one embodiment will be described. In particular shows another screen display C generated by the application program and the data rendering module according to one particular implementation presented herein. The screen display C illustrated in may include a modification of screen display B of . The screen display C can be displayed in response to a user selecting the UI control to display the detailed view of the corresponding status update F. As such the UI control associated with the status update F is highlighted though this is not necessarily the case. As illustrated in the screen display C includes a details window which includes additional details and information for the corresponding status update F which is obscured in by the details window .

In the illustrated embodiment the details window includes the posted status update F and the thumbnails as described above with reference to . A UI control the selection of which causes the computer to access additional photos can be included if desired. Additionally the details window includes comments which may be submitted by members of a social network of the user who posted the corresponding status update F. A UI control the selection of which causes the computer to access additional comments can be included if desired. In the illustrated embodiment the details window includes an input field . The input field includes a text box for inputting alphanumeric characters corresponding to a comment. The details window includes a UI control that when selected causes the computer to post the comment entered in the input field if desired. The details window also may include a UI control the selection of which causes the computer to close the details window . It will be appreciated that if a user selects the UI control to close the details window the screen display C may be modified by the computer to be substantially similar to the screen display B described above with reference to .

Turning now to additional aspects of the present disclosure provided by the application program and the data rendering module in another embodiment will be described. In particular shows another screen display D generated by the application program and the data rendering module . The screen display D illustrated in may include a modification of screen display B illustrated in . More particularly the screen display D can be displayed in response to additional feed data being received at the server and recognized by the computer as will be described below in additional detail.

As illustrated in the application program and the data rendering module format the additional feed data and add it to the screen display B illustrated in resulting in the screen display D illustrated in . In the illustrated embodiment the additional feed data includes a new cell i.e. a new status update J which was received after the feed data was retrieved and rendered to generate the screen display B. The new status update J can be inserted at the portion of the screen display D corresponding to the first or most recent posted information. It will be understood that in some regions or countries the top left may correspond to the most recent post while in other regions or countries the top right bottom right or bottom left may correspond to the most recent post. Thus it will be understood that the illustrated embodiment is exemplary and should not be understood to be limiting in any way.

As illustrated above in a status update A was previously illustrated at the portion of the screen display D at which the new status update J is inserted. Thus according to exemplary embodiments of the present disclosure the data rendering module is configured to determine how much space the new status update J will consume prior to outputting the data to the application program and or displaying the new status update J. The application program and or the data rendering module can shift slide or otherwise relocate each of the status updates to create a space for the new status update J. Thus the order and orientation of the feed data can be maintained though shifted a slot to accommodate the new feed data . It will be appreciated that the entire screen display D can be re rendered upon determining that a new status update J is to be included in the screen display D. Thus the concept of sliding and or shifting can be conceptual. In some embodiments the sliding and or shifting occurs in real time animation to enhance the user experience and or to draw attention to the update to the screen display D.

As status updates are generated and added to a display the status updates are shifted to accommodate the newest status updates . For example the status updates can be shifted toward an end of the column A. Once the status updates reach the end of the column A the status updates are moved to the next column B. As the status updates reach or pass the limit of the available display space the UI control described above can be rendered to allow a user to view additional display space if desired. In some embodiments if the status updates reach or pass the limit of available display space the feed data corresponding to a status update that reaches or passes the limit of the available display space is discarded and the status update is no longer displayed. If desired the feed data and or the status update can be retrieved if requested by a user. Thus if the display space is allowed to grow the display space can be limited to horizontal growth.

Turning now to a method for displaying the feed data will be described in detail. It should be understood that the operations of the methods disclosed herein are not necessarily presented in any particular order and that performance of some or all of the operations in an alternative order s is possible and is contemplated. The operations have been presented in the demonstrated order for ease of description and illustration. Operations may be added omitted and or performed simultaneously without departing from the scope of the appended claims.

It also should be understood that the illustrated methods can be ended at any time and need not be performed in its entirety. Some or all operations of the methods and or substantially equivalent operations can be performed by execution of computer readable instructions included on a computer storage media as defined above. The term computer readable instructions and variants thereof as used in the description and claims is used expansively herein to include routines applications application modules program modules programs components data structures algorithms and the like. Computer readable instructions can be implemented on various system configurations including single processor or multiprocessor systems minicomputers mainframe computers personal computers hand held computing devices microprocessor based programmable consumer electronics combinations thereof and the like.

Thus it should be appreciated that the logical operations described herein are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as states operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. For purposes of illustrating and describing the concepts of the present disclosure the methods disclosed herein are described as being performed by the computer though it will be understood that the computer can provide the functionality described herein by execution of the application program and or the data rendering module . Similarly the methods disclosed herein can be provided by the server by execution of the social networking server application wherein the social networking server application includes instructions the execution of which cause the server to provide the functionality described above with reference to the data rendering module . Thus the described embodiments are merely exemplary and should not be viewed as being limiting in any way.

The method begins at operation wherein the computer receives a command to display feed data in a multidimensional grid orientation. As illustrated and described above the command to display the feed data in a multidimensional grid orientation can be received in several different ways. For example a user can enter a command to display the feed data in a multidimensional grid orientation by clicking with a mouse on a UI control such as the UI control illustrated and described with reference to . Additionally or alternatively a user may enter a key sequence entered in an input field or prompt enter a hot key or keystroke sequence navigate to or access an address such as a particular uniform resource locator URL combinations thereof and the like.

From operation the method proceeds to operation wherein the computer retrieves feed data . The operation can include for example the computer connecting to the server via the network the computer requesting feed data and the server transmitting or allowing access to the requested feed data . Although not illustrated it will be understood that additional steps e.g. authentication and or other access control measures may be performed prior to transmitting data between the computer and the server .

From operation the method proceeds to operation wherein the computer formats the feed data for display in a multidimensional grid orientation. As explained above the computer can determine what portions of the feed data to display in the multidimensional grid orientation. In some embodiments the computer omits a portion of the feed data if the feed data is to be displayed in the multidimensional grid orientation. In some embodiments all of the available feed data is presented in the multidimensional grid orientation. Additionally the operation includes steps for generating UI controls as illustrated and described above with reference to and inserting detailed feed data into a displayable item. The determination as to what feed data to include in the multidimensional grid orientation if such a determination is made may be based upon parameters defined by a user the software e.g. the application program and or the data rendering module and or other entities.

The operation also can include generating UI controls such as for example the UI control for displaying a detailed view of feed data UI controls for accessing information included in the feed data and the like. Referring briefly to the embodiment illustrated in for example the operation can include the computer generating code that will execute if the computer receives a command indicating selection of the UI control . As mentioned above additional and or alternative controls are possible and are contemplated and therefore may be generated during the operation . After formatting the feed data in the desired format the computer displays the formatted feed data for the user as illustrated at operation . The method ends at operation .

As illustrated and described above the command to display the detailed view of the status update can be received in several ways. For example a user can enter a command to display the detailed view of the status update by clicking with a mouse on a UI control such as the UI control illustrated in . Additionally or alternatively a user may enter a command to display the detailed view of the status update by entering a hotkey a keystroke sequence a voice command and the like.

Upon receiving a command to display the detailed view of the status update the method proceeds to operation wherein the computer retrieves additional feed data corresponding to details for the status update for which the detailed view was requested. As explained above the additional feed data can be retrieved from the server for example via the social networking server application when the application program and or the data rendering module are activated or upon receiving the command to display the detailed view. Thus as mentioned above in some embodiments a portion of the feed data is downloaded from the server upon initialization of the application program and or the data rendering module . Upon receiving a command to access a detailed view of the feed data the computer downloads the remainder of the feed data corresponding to the data needed for the detailed view. In some other embodiments all of the feed data is downloaded to the computer but only a portion of the feed data is displayed according to parameters specified by or at the application program and or the data rendering module . Therefore the operation can include the computer communicating with the server the social networking server application and or a data storage device to retrieve the remainder of the feed data .

From operation the method proceeds to operation wherein the computer formats the feed data including the additional feed data retrieved in operation to generate the detailed view for display. The operation can include generating UI controls for the detailed view. With reference to the example illustrated in and described with reference thereto the operation can include formatting the layout and content of the details window generating and formatting the UI controls generating and formatting the comments if any and generating and formatting additional aspects of the detailed view window such as for example the input field . If as illustrated in the detailed view relates to feed data including photos the operation can include formatting the photos for display which may be based upon preferences available screen space and the like.

From operation the method proceeds to operation wherein the computer displays the detailed view of the feed data . An exemplary embodiment of operation is illustrated in and is described above with reference thereto. The method ends at operation .

From operation the method proceeds to operation wherein the computer determines if new feed data is available. As illustrated at operation if the computer determines that new feed data is not available the method returns to operation . It should be understood that additional operations such as expiration of a countdown timer or waiting for entry of a refresh or reload command at the computer can occur before returning to operation . If at operation the computer determines that new feed data is available the method proceeds to operation .

In operation the computer retrieves the new feed data and formats the new feed data for display at the computer . As mentioned above the query response determination and retrieve operations described with respect to the operations and can be eliminated by configuring the server to push new data feed updates to the computer for display. Thus it will be understood that the method can begin at operation with the computer formatting received new feed data for display at the computer .

The method proceeds to operation wherein the computer modifies the displayed feed data to accommodate the display of the new feed data . As mentioned above with reference to the operation can include shifting status updates e.g. the status updates A H illustrated in to create an open space on the display corresponding to a size needed to display the new feed data .

The method proceeds to operation wherein the computer displays the new feed data . An exemplary embodiment of displaying new feed data is illustrated in and described with reference thereto. As shown in a new status update J is illustrated in a slot corresponding to a most recent post and the status updates A H previously displayed have been shifted to make room for the new status update J. The method ends at operation .

It will be appreciated that the method allows dynamic updating of the displayed feed data with new feed data while maintaining all of the displayed feed data in a multidimensional grid orientation. Thus the method allows a computer to display more data than other possible orientations without substantially decreasing the amount of relevant data available to a user. Thus some embodiments of the method allow the computer to provide for efficient use of display real estate. 

The computer architecture illustrated in includes a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer architecture such as during startup is stored in the ROM . The computer architecture further includes a mass storage device for storing an operating system application programs e.g. the application program and program modules e.g. the data rendering module which are described in greater detail herein.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer architecture . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available computer storage media that can be accessed by the computer architecture .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer readable media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer architecture .

According to various embodiments the computer architecture may operate in a networked environment using logical connections to remote computers through a network such as the network . The computer architecture may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit also may be utilized to connect to other types of networks and remote computer systems. The computer architecture also may include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly an input output controller may provide output to a display screen a printer or other type of output device also not shown in .

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer architecture including the operating system suitable for controlling the operation of a networked desktop laptop or server computer. The mass storage device and RAM also may store one or more program modules. In particular the mass storage device and the RAM may store the data rendering module and the application program . The mass storage device and the RAM also may store other types of program modules and data.

It should be appreciated that the software components described herein may when loaded into the CPU and executed transform the CPU and the overall computer architecture from a general purpose computing system into a special purpose computing system customized to facilitate the functionality presented herein. The CPU may be constructed from any number of transistors or other discrete circuit elements which may individually or collectively assume any number of states. More specifically the CPU may operate as a finite state machine in response to executable instructions contained within the software modules disclosed herein. These computer executable instructions may transform the CPU by specifying how the CPU transitions between states thereby transforming the transistors or other discrete hardware elements constituting the CPU .

Encoding the software modules presented herein also may transform the physical structure of the computer readable media presented herein. The specific transformation of physical structure may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the computer readable media whether the computer readable media is characterized as primary or secondary storage and the like. For example if the computer readable media is implemented as semiconductor based memory the software disclosed herein may be encoded on the computer readable media by transforming the physical state of the semiconductor memory. For example the software may transform the state of transistors capacitors or other discrete circuit elements constituting the semiconductor memory. The software also may transform the physical state of such components in order to store data thereupon.

As another example the computer readable media disclosed herein may be implemented using magnetic or optical technology. In such implementations the software presented herein may transform the physical state of magnetic or optical media when the software is encoded therein. These transformations may include altering the magnetic characteristics of particular locations within given magnetic media. These transformations also may include altering the physical features or characteristics of particular locations within given optical media to change the optical characteristics of those locations. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this discussion.

In light of the above it should be appreciated that many types of physical transformations take place in the computer architecture in order to store and execute the software components presented herein. It also should be appreciated that the computer architecture may include other types of computing devices including hand held computers embedded computer systems personal digital assistants and other types of computing devices known to those skilled in the art. It is also contemplated that the computer architecture may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

Additional features are contemplated but have not been described above for the sake of brevity. For example the data rendering module can be configured to recognize multiple events or other data items that are associated with a single member of a user s social network. According to some embodiments the data rendering module generates a UI control the selection of which causes the computer to collapse the multiple events or other data items into a single event or data item that is expandable in a manner similar to the display of the details window discussed with reference to . In such an embodiment a single status update is presented for a member of the user s social network and the UI control for viewing all of that member s events is presented with the single status update. Upon selection of the UI control a window is generated and displayed with the details of the other data events or the corresponding status updates are formatted and displayed in their proper locations in the multidimensional grid orientation view e.g. the view described in . It will be appreciated that multiple shifts and or slides of other feed data may be executed as described with reference to .

Additionally it should be understood that the embodiments illustrated and described herein may include the use of filtering to restrict the visible feed data . For example a user can restrict the feed data by groups thereby filtering out feed data associated with members not in the chosen groups. Additionally a user can filter feed data based upon time restrictions thereby filtering out feed data that does not meet the specified time restrictions. It is also contemplated that a provider of the social networking service can sell advertising space in the feed data and place advertising in the feed data for display by the computer . In some embodiments the advertising information is randomly placed in the feed data .

Finally while the UI control is illustrated in as being generated for each status update it should be understood that this is not necessarily the case. In some embodiments the data rendering module analyzes the feed data and determines if a status update corresponding to the feed data has additional relevant information that will not be displayed in full. An example of such an occurrence is illustrated and described with respect to the status update F of . If however no such data is recognized in the feed data or the status update generated by the data rendering module the UI control may be omitted providing an additional visual cue to a user that a particular status update or other information includes or does not include additional relevant data that is not immediately visible.

Based on the foregoing it should be appreciated that technologies for displaying and updating feed data have been disclosed herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological and transformative acts specific computing machinery and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

