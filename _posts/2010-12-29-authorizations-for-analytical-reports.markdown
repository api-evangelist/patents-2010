---

title: Authorizations for analytical reports
abstract: A system may include reception of a request from a user to start a report associated with a node of a business object object model, where the node of the business object object model is associated with an access control list associating instances of the node with at least one access context restriction, determination of a first access context restriction associated with the user, retrieval of the at least one instance of the node based on the first access context restriction and on the access control list associated with the node, and presentation of an instance of the report to the user, the instance of the report populated with the at least one instance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08726336&OS=08726336&RS=08726336
owner: SAP AG
number: 08726336
owner_city: Walldorf
owner_country: DE
publication_date: 20101229
---
Some embodiments relate to analytical reports provided by a business process platform. More specifically some embodiments relate to systems to manage and utilize user authorizations with respect to analytical reports.

An application platform may implement metadata models to support different business solutions. Metadata models may include generic models of a business object a floorplan i.e. a user interface layout user interface text a process component and a message type among others. A business object for example is a software model representing real world items used during the transaction of business. An instance of a business object metadata model may comprise a SalesOrder object model or an Organization object model. Instances of these object models in turn represent specific data e.g. SalesOrder 4711 ACME corporation .

An instance of a business object metadata model e.g. a SalesOrder object model or more generically a business object object model may specify business logic and or data having any suitable structure. The structure may be determined based on the requirements of a business scenario in which the instance is to be deployed. A business application for a particular business scenario may require many business object object models where the structure of each has been determined based on the requirements of the particular business scenario.

The data stored by an application platform is typically accessed according to one of two primary modalities. The first which may be referred to as an operational modality involves accessing and modifying the data during the day to day course of business. The operational modality may include for example reviewing and updating inventory inputting sales figures issuing paychecks based on salary and attendance data etc.

An analytical modality on the other hand generally consists of strategic analysis of business data. Activities of the analytical modality may include comparison of profit margins by location product and or year sales by brand etc. Of course some activities may be arguably classified as belonging to either the analytical modality or the operational modality.

A software solution may provide data queries user interfaces and reports for presenting the data underlying business object object models. These queries interfaces and reports are developed by the solution provider based on knowledge of the structure and semantics of the business object object models. Customers and partners may customize or develop similar queries interfaces and reports based also on the business object object models.

A developer may create a logical view of stored data based on business objects representing the stored data. A user may then access the logical view to view the stored data. Due to various business concerns e.g. security confidentiality privacy it is often necessary to restrict a user s access to all or a portion of a logical view.

Some current systems allow a developer to define access control lists for specific business object nodes. An access control list ACL specifies the instances of a business object node which belong to a particular access group from an authorization point of view. U.S. patent application Ser. No. 12 647 755 entitled Business Object Node Access Management For Search Services In A Service Oriented Architecture describes systems for leverage access control lists to restrict logical views and free defined queries. However systems are desired to leverage node level restrictions within the analytical modality.

All systems and processes discussed herein may be embodied in program code stored on one or more computer readable media. Such media may include for example a floppy disk a CD ROM a DVD ROM a Flash drive magnetic tape and solid state Random Access Memory RAM or Read Only Memory ROM storage units. Embodiments are therefore not limited to any specific combination of hardware and software.

System includes business service provider backend for providing business services to consumers not shown of system . For example business service provider backend might store customer information into and retrieve customer information from physical tables of data store .

The data stored in data store may be received from disparate hardware and software systems some of which are not interoperational with one another. The systems may comprise a back end data environment employed in a business or industrial context. The data may be pushed to data store and or provided in response to queries received therefrom.

Data store may comprise a relational database a multi dimensional database an eXtendable Markup Language XML document or any other structured data storage system. The physical tables of data store may be distributed among several relational databases dimensional databases and or other data sources. To provide economies of scale data store may include data of more than one customer. Business service provider backend includes mechanisms to ensure that a client accesses only the data that the client is authorized to access. Moreover the data of data store may be indexed and or selectively replicated in an index to allow fast retrieval thereof.

The structures of and relationships between the physical database tables may be complex and business object object models referred to henceforth as business objects may be used to shield developers and end users from these complexities. A business object may comprise for example a software model including nodes to encapsulate related data and methods. As described above a business object may be associated with a business entity such as a customer partner sales order product store time etc. represented in the data of a data source. Each instance of a business object may represent a particular instance of the entity represented by the business object. An instance of a SALES ORDER business object may for example provide a mapping to the underlying tables storing data associated with a particular sales order.

Repository includes metadata of various metadata models. These metadata models include metaobjects and instances of the metaobjects referred to herein as object models or objects. The metaobjects and object models are defined by metadata of repository .

As mentioned above the metaobjects may include generic models of a BI view a floorplan a business object a user interface text a process component and a message type but embodiments are not limited thereto. The metaobjects and object models may be embodied in any type of data structure including but not limited to eXtensible Markup Language files. As in the conventional storage of object instance data the metadata defining the specific metaobjects and object models may be stored in database tables and or any other suitable format.

Each metaobject of repository may comprise an instance of a same meta metadata model or meta metaobject . The meta metaobject may consist of nodes composite associations associations elements structure and attribute properties. Development of specific business object metaobjects specific floorplan metaobjects etc. may therefore proceed using the same development technologies. Moreover access and lifecycle issues of the various specific metaobjects may be managed using similar or identical mechanisms.

Business object is an object model or class. The metadata of business object therefore provides information regarding the structure and attributes of the data of instances of business object . Accordingly backend uses the metadata to access corresponding data of data store . One or more nodes of business object may be associated with an access control list. An access control list specifies instances of its associated business object node to which a user is restricted with respect to a particular access context. As will be described below some embodiments may operate to populate an instance of analytical report based on such an access control list and based on the access context of a user who has requested the instance.

Analysis services include any business services that are or become known. Examples include application programming interfaces APIs to access transient metadata master data transactional data and hierarchies. Analysis user interfaces UIs may access business service provider backend via analysis services . Analysis UIs may include for example work centers dashboards spreadsheet applications proprietary portals etc.

Repository also includes metadata of one or more multi dimensional analytical view object models MDAVs which themselves are instances of an MDAV metadata model such as described in commonly assigned co pending U.S. application Ser. No. 12 847 409 entitled Common Modeling Of Data Access And Provisioning For Search Query Reporting And Or Analytics the contents of which are incorporated herein by reference. Generally a multi dimensional analytical view describes a view on a business object. As described in U.S. application Ser. No. 12 847 409 a query definition object not shown may define a query on a business object and a multi dimensional analytical view may define the results of the query as Key Figures or Characteristics. Moreover the multi dimensional analytical view may define rules which are used to calculate Key Figures and to define restrictions which will be used at runtime to set predefined filter parameters.

Metadata of analytical report may provide analysis UIs with a visual presentation of data underlying MDAV and business object . The ability to associate analytical report with MDAV may facilitate the incorporation of semantically rich information within analytical report . For example analytical report may simply refer to Key Figures which are calculated according to MDAV without having to define a query for particular data of business object or a calculation of the Key Figures based on that data.

According to some embodiments an MDAV may be associated with more than one business object and a business object may be associated with more than one MDAV. In some embodiments an MDAV may be associated with more than one analytical report.

Data model includes additional entities to provide report start and instance authorizations according to some embodiments. For example the illustrated Sales Order object is not only associated with an item as expected but also with any number of ACL entries. Each ACL entry represents one assignment of a resource instance to an access group. Access groups are runtime entities specified by a role assignment restrictions representing groups of resource e.g. node instances for a specific access context. The entries may therefore specify for each of one or more access contexts one or more particular instances of a node of the Sales Order object.

For purposes of the present description the term access context will refer to a type of context that may be used for authorization purposes. Examples include Company Project Leader Site etc. A specific context access context will refer to a specific value instance of the respective business object s ACL. For example a user may be associated with access context Company with respect to the business object instance Acme Inc .

Generally node access management allows any operation on any given business object data if and only if the union of all policies that are active in the system allow the operation. This is typically the case if the user accessing the data is assigned to a role whose policy allows the operation.

Policies contain rules which specify conditions regarding the subject i.e. user operation and or resource i.e. business object involved in a request and a desired authorization decision i.e. grant or deny for cases where all conditions of the rule are fulfilled. A runtime authorization decision for a given request is made based on the union of all rules of all policies in the system whose conditions are all fulfilled for this request. If no rule matches the request the implicit default rule is to deny access. If multiple rules match the request deny rules take precedence over grant rules.

Initially at S an instruction is received to assign a report to a work center view. The report is associated with a business object node which in turn is associated with an ACL. As described above the ACL associates instances of the business object node with at least one access context restriction. The ACL may be provided by a view object model associated with the business object node. The view object model may comprise a Fast Search Infrastructure view whose transient form is illustrated as a Query Definition entity in data model .

A work center is a collection of portal pages tailored for one job function e.g. all portal pages required by a person performing the job of a seller . A role is a group of work centers that can be assigned to a user work centers can t be assigned to users directly . In some embodiments each work center is assigned to a role with the same name by default i.e. the default is a 1 1 relationship between work centers and roles . For example there may be one work center Seller and one role Seller which is assigned exactly to the work center Seller .

The report is based on an MDAV according to some embodiments. The MDAV is associated with an access context which is inherited by the report. Similarly the work center view is associated with a default access context. Accordingly at S it is determined whether the report and the work center view are associated with a same access context. If not the assignment is denied at S.

Flow proceeds to S if the report and the work center view are associated with the same access context. A map is generated at S to associate the work center view with the report. is a block diagram of a system to describe an example of S according to some embodiments.

Specifically shows mock ups of Work Center and Work Center as might be presented to a user. Work Center includes Work Center Views through and Work Center includes Work Center View . Each of Work Center Views through includes a ReportUsage identifier. Report Usage map maps each ReportUsage identifier to a report using an identifier of the report. As shown Work Center View is not mapped to report because its access context differs from that of report i.e. Company . Each Work Center View may include more than one ReportUsage identifier to associate the Work Center View with more than one report.

After S an instruction may be received at S to assign a user to the Work Center View. Accordingly at S the map generated at S is identified and at S the report associated with the Work Center View is determined based on the map. For example if an instruction is received to assign User to Work Center View report is determined at S based on Report Usage map . More than one report may be determined at S if the Work Center View includes more than one ReportUsage identifier.

Next at S an access policy is created authorizing the user to start the report and including the user s restrictions corresponding to the access context of the work center view. Continuing with the example a policy is created giving User start authorization with respect to report . Moreover due to the access context Company of Work Center and of report the policy restricts the user to his business object instances e.g. Acme Inc. corresponding to the access context Company.

Initially at S a request is received from a user to start a report associated with a business object node. As mentioned above the business object node is associated with an ACL associating instances of the business object node with at least one access context restriction. An identifier of the report is determined at S.

Using the report identifier authorization for the user to start the report is confirmed at S. The confirmation is based on the access policy associated with the user and the report identifier which may have been generated as described with respect to process . Role based access management module RBAM may manage the access policy according to some embodiments and as described in previously mentioned U.S. patent application Ser. No. 12 647 755.

Next at S the user s access context is determined based on the access policy. Appropriate business object node instances are retrieved at S based on the user s access context and based on the ACL associated with the business object node.

RBAM module passes the restrictions to provider to generate a filter condition on FSI view in order to retrieve instances of business objects BO and BO based on the user s access context. Two business objects are shown to illustrate that a report may be based on more than one business object in which case a developer must decide which ACL AC Comp of BO or AC Comp of BO should control the authorization.

Finally at S an instance of the report is presented to the user. The instance is populated with the business object node instances retrieved at S.

According to the user is assigned to Work Center Views A and B each of which is associated with access context Company. The user is also associated with two access context restrictions i.e. A and B . However the user is restricted to one of the access contexts in each view. In either view the user will see instances matching Company A and Company B i.e. a superset of instances .

According to some embodiments an MDAV may be associated with more than one access code. If a report based on this MDAV is assigned to a work center views having different access codes the user may be required to pick one access code based on which the restriction is performed. For example a report may show the revenues of projects within companies. The MDAV of the report can use Project or Company as an access code. The report can be assigned to a Project Management work center and a Financial Accounting work center. If a project manager with accounting responsibilities opens the report he will be asked to indicate the role for which the data should be restricted i.e. restricted to data of his companies or of his projects .

Apparatus includes processor operatively coupled to communication device data storage device one or more input devices one or more output devices and memory . Communication device may facilitate communication with external devices such as an external design tool. Input device s may comprise for example a keyboard a keypad a mouse or other pointing device a microphone knob or a switch an infra red IR port a docking station and or a touch screen. Input device s may be used for example to enter information into apparatus . Output device s may comprise for example a display e.g. a display screen a speaker and or a printer.

Data storage device may comprise any appropriate persistent storage device including combinations of magnetic storage devices e.g. magnetic tape hard disk drives and flash memory optical storage devices Read Only Memory ROM devices etc. while memory may comprise Random Access Memory RAM .

Program code of data storage device may be executable by processor to provide functions described herein including but not limited to processes and or . Embodiments are not limited to execution of these functions by a single apparatus. Metadata may include metadata of metaobjects and objects as described herein including ACLs associated with business object nodes. Data storage device may also store data and other program code for providing additional functionality and or which are necessary for operation thereof such as device drivers operating system files etc.

The embodiments described herein are solely for the purpose of illustration. Those in the art will recognize other embodiments may be practiced with modifications and alterations limited only by the claims.

