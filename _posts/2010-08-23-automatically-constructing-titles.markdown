---

title: Automatically constructing titles
abstract: An information retrieval system and computer-based method provide constructing a title for a search result summary of a document through title synthesis, wherein the title is suitable for use in assessing the relevance of the summarized document to a query. Meaningful keywords or key phrases (title components) about the document are Obtained. The title components are classified into pre-established title component classes. When a query is input to which the document is relevant, a title for the document is constructed by arranging title components selected from title component classes to maximize a title utility function. The title utility function may be a query-dependent grade. In addition to the query, the title utility function may also account for constraints under which the title is to be presented to a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08504567&OS=08504567&RS=08504567
owner: Yahoo! Inc.
number: 08504567
owner_city: Sunnyvale
owner_country: US
publication_date: 20100823
---
The present invention relates generally to data processing systems and more particularly to a data processing system implementing a method for constructing titles for search results summaries through title synthesis.

Computers are well suited for searching vast amounts of information. One type of computer system used to search for information stored in computers is an information retrieval system . Generally in operation an information retrieval system accepts as input a statement of an information need i.e. a query and provides as output a search result identifying a set of one or more documents that the information retrieval system determined were relevant to the query. The documents may include text documents multi media documents web pages images audio tracks videos and other types of information. An Internet search engine is an example of one type of information retrieval system.

A search result provided by an information retrieval system in response to a query often identifies more than one document as being relevant to the query. In such a case the search result may provide a textual summary of each identified document in lieu of providing the actual documents themselves. The textual summaries can then be reviewed by a human user who based on the summaries decides which documents identified in the search result appear to be most relevant to the query. For example in the context of web search engines a search result may comprise a web page presenting an ordered listing of a web search result summaries listed in order of decreasing relevance. Often a web search result summary is presented in Title Abstract URL TAU format. depicts an example web search result summary in TAU format. As shown in the search result summary comprises a title a short keywords in context extractive summary or abstract and a Uniform Resource Locator URL . In this example the summarized document is a web page containing content about an annual event called Burning Man that takes place in a Nevada desert retrieved in response to a query burning man .

The title of a search result summary is of particular significance to the user in efficiently and accurately assessing the relevance of a summarized document. For one the title often appears before other summary information as a heading for the summary. Thus a user is most likely to read the title before reading any other summary information. Second the user would ideally be required to read no more than the title to accurately determine how relevant the document is to the inputted query. Given the significance of the title to the user it is desirable for information retrieval systems to present good quality titles in search result summaries of documents.

One possible approach for providing a good quality title for a search result summary of a document is to provide the title assigned by the creator or author of the document. For example a web search engine could select for a web page document the Hypertext Markup Language Title HTML title given to the web page to use as the title in the search result summary of the web page. However not all documents are given titles by their creator or author. Even where a title is given the given title may be uninformative irrelevant not presentable or otherwise sub optimal.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

The following description sets forth embodiments for a web search engine. However this description should not be interpreted as limiting the use of the embodiments to any one particular application or any one particular type of data processing system. Rather the embodiments may be utilized for a variety of different applications and in a variety of different contexts including information retrieval systems generally or any other system or application in which presenting a title in a summary of a document may be useful.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

An information retrieval system and computer based method provide constructing a title for a search result summary of a document through title synthesis wherein the title is suitable for use in assessing the relevance of the summarized document to a query.

In one embodiment the system obtains meaningful keywords or key phrases title components about the document and classifies each title components into one or more of a plurality of pre established title component classes. The title components may be automatically obtained for the document from available sources either before or at the time the document is made available for indexing by the system. When a query is input to the system to which the document is relevant the system constructs a title for the document by arranging title components selected from title component classes to maximize a title utility function. The title utility function may be a query dependent grade. In addition to the query the title utility function may also account for constraints under which the title is to be presented to a user of the system.

Instead of treating a title as a monolithic piece of text the title synthesis system described herein views a title as a composition of one or more meaningful words or phrases thereby providing greater flexibility and control over title construction. In one embodiment a title constructed through title synthesis comprises one or more title components delimited by one or more textual separators and has various characteristics including high query term coverage query terms presented towards the beginning of the title a short length and consistent presentation and formatting with respect to other presented titles. The system uses title components and separators as the building blocks for synthesizing and constructing titles for search result summaries. The system obtains title components from various textual information sources and then combines the title components into synthesized titles in light of a statement of a user s information need i.e. query and search result presentation constraints. depicts three examples titles including example title components and example separators .

In one embodiment title synthesis includes two phases 1 an offline index time phase and 2 a run time query time phase.

In the offline index time phase the system obtains title components for each document indexed by the system. The title components may be obtained from virtually any textual information sources about the document including the document itself other documents human input etc. Obtaining title components from information sources may include classifying obtained title components into one or more pre established title component classes according to a title component classification function. The title component classification function may be a metric of confidence that a given title component is of a particular title component class.

Also in the offline index time phase the system obtains a set of title templates that govern construction of titles from title components. A title template may be comprise one or more title component class slots delimited by one or more textual separators. Each slot in a title template may correspond to one of the plurality of pre established title component classes.

During the run time query time phase a query is input to the system and the system identifies documents relevant to the inputted query. For each relevant document to be summarized in a search result for the query the system generates a title for the document. Generating a title for the document includes constructing a title through title synthesis.

Conceptually the task of constructing a title for a document d through title synthesis can be stated as construct a title t given a query q a set of title components C obtained for document d and a set of search result presentation constraints P such that the utility of the title t to the user in determining whether the document object d is relevant to the user s query q is maximized. The process of constructing a title through title synthesis may include selecting a set of one or more candidate title templates T from a set of available title templates T. The selection of set T from T may be based on the query q the set of available title components C the content or type of the document d and presentation constraints P. Candidate title template in set T may be completed with title components C to produce a set of candidate titles. Completion of a candidate title template with title components C may proceed in an iterative and progressive manner on a slot by slot basis in which a initial slot of the candidate title template is completed with a best available title component C from the corresponding title component class a next slot is completed with a best available title component C from the corresponding title component class taking into account how all existing slots have been completed and so on until all slots of the candidate title template are completed with title components C to maximize a title utility function. The title utility function may be a query dependent grade. In addition to the query the title utility function may also account for constraints under which the title is to be presented to a user of the system.

Existing systems select a title for a document from a pre established set of candidate titles. Thus in these systems the utility of the selected title is limited by the utility of the available candidates. In contrast to these systems that treat a title as monolithic piece of text title synthesis techniques described herein treat a title as a composition of one or more meaningful components thereby providing greater flexibility and control over title construction. Using the title synthesis techniques described herein an information retrieval system can construct a title for a document that is better optimized against a user s query and presentation constraints.

These and other benefits of the techniques will be apparent from the following description and the drawings and from the claims.

Good quality titles for a search result summaries allow a user to quickly and accurately identify which documents identified in a search result are most relevant to the user s query. As used herein the term query refers broadly to any data representing an expression of a user s information need or intent. For example a query may comprise one or more query terms or keywords inputted by the user. The following three observations are made on some characteristics of a good quality title.

First a user may consider a document identified in a search result as relevant to a query if 1 the title of a search result summary of the document object contains one or more of the user s query terms and 2 query terms are presented towards the beginning of the title. Thus even if a document identified in a search result is highly relevant to a user s query the user might consider the document to be irrelevant if the title fares poorly on these two criteria. For example a web query submitted to a web search engine might contain the query term monster . The user who submitted the web query might be interested in obtaining a search result summary that hyperlinks to the home page of the web site hosted at the monster.com Internet domain. A title in a search result summary of Find Jobs. Build a Better Career. Find Your Calling Monster.com may be perceived by the user as less relevant than a title of Monster.com Find Jobs. Build a Better Career. Find Your Calling because of the placement of the query term in the title. This is so even though both titles may be presented as active or live links that hyperlink to the same web page. Similarly if the user query is SI and the user is searching for a hyperlink to http sportsillustrated.cnn.com then a title of SI.com may be considered by the user to be a good quality title because it includes the query term towards the beginning of the title. However if the query were instead sports illustrated then that title does not include any of the query terms perhaps inaccurately creating the impression to the user that the document object summarized by the title is not relevant to the user s query. Title synthesis techniques described herein may be used to construct more scan able titles. A highly scan able title is a title that includes query terms in optimal locations within the title allowing a user to quickly and accurately assess the relevance the document summarized by the title to the user s query.

Second while a long title can be more informative about the content of the summarized document object than a relatively shorter title users may prefer concise compact easy to read titles over lengthy wordy titles. Further the length of a title may be constrained by search result presentation constraints such as for example whether the search result is being displayed on a relatively larger workstation computer monitor or on a relatively smaller display of a handheld electronic device such as a smart phone. One possible solution for generating a shorter title is to truncate the title as whole. However this can result in a malformed or an otherwise less meaningful title if the truncation is performed bluntly or inaccurately. Title synthesis techniques described herein may be used to construct titles that conform to presentation constraints such as length restrictions without necessarily requiring truncation.

Third consistent formatting and presentation of titles in search results summaries allows users to more easily and efficiently scan a search result for relevant documents thereby improving the user s experience with the information retrieval system. Title synthesis techniques described herein may be used to present titles in a consistent presentation format.

In example the query input to the web search engine includes the query terms dodge 3500 and hubcaps in that order. The web search engine identified a web page available from the web site hosted at hubcapmike.com . As used herein the term web site refers to a collection of web pages addressable at an Internet domain name such as for example hubcapmike.com or yahoo.com . The title generated for search result summary includes the web page topic Dodge Ram 3500 Hubcaps and the web site name HubcapMike.com . The example illustrates how adding the web page topic to the web site name in a title can emphasize the relevance of the web page to the inputted query.

Example illustrates how including a well known and reliable web site name in a title can enable a user to more easily identify trustworthy content. In example the query input to the web search engine includes the query terms apa in text and citation . The web search engine identified a web page available from the Duke University Library web site. Instead of including only the web page topic in the title the web search engine also included the web site name of Duke University Libraries in the title thereby enabling a user to efficiently determine that the web page summarized by the title is from a well known and reliable source. In this example a well known and reputable university.

Further including web site names in titles provides benefits in countries or locales whose primary character set is not ASCII based such as for example in China Japan Korea and other Asian countries. In such countries and locales the Uniform Resource Locator URL for a web site is likely to be ASCII based. Therefore displaying the URL in a web search result summary is not likely to be useful to many users. In contrast according to techniques described herein a web site name can be generated in a native character set. Such a web site name can then be included in a search result summary title thereby improving users experience with the web search engine in non ASCII based locales and countries.

Example illustrates how placing query terms towards the beginning of a title can improve the perceived relevance of the underlying document object. Example further illustrates how such placement can improve users efficiency in identifying relevant document objects. In example the query input to the web search engine includes the query terms cotton wool and spots . The title generated for the search result summary includes the web page topic Cotton Wool Spots before the web site name Wills Eye Hospital . A user viewing the search result summary is likely to read the title of the summary before any other summary information because the title is presented before all other summary information. Similarly the user is likely to read the beginning of the title before the remainder of the title. In this example the beginning of the title is virtually identical to the inputted query. Thus in this example the user can determine that the underlying web page is relevant to the inputted query without having to read anything more than the beginning of the title.

These examples illustrate but a few of the characteristics of good quality titles. Using title synthesis techniques described herein titles also having other desirable characteristics may be generated. These other desirable characteristics include for example standardization of title formatting and presentation lack of repetition of title components within a title and lack of truncated titles or truncated title components.

To aid in understanding embodiments of the invention techniques for constructing a title for a search result summary of a document through title synthesis are described in the context of an exemplary web search engine. It will be apparent however that the techniques may be implemented by other types of systems and are not limited to being implemented by an information retrieval system or a web search engine.

Crawler indexer module crawls web sites accessible on a network e.g. the Internet for the purpose of identifying documents e.g. web pages available from those web sites. The crawler indexer maintains an index of identified documents. In general index associates keywords with identifiers of documents so that the query handler module can efficiently identify documents that are relevant to keyword queries input by clients . In the context of web search engines the identifiers of documents stored in index may be Uniform Resource Locators URLs for the documents. However embodiments of the invention are not limited to using only URLs to identify indexed documents and any suitable identifier may be used.

Crawler indexer module and or title synthesizer module populates a database with title components obtained for documents indexed in index . A title component obtained for a document is a meaningful keyword or key phrase that describes characterizes or otherwise summarizes the document. Title components for a document can be obtained from virtually any textual information source about the document. Such information sources may include for example the document itself other documents such as web pages that hyperlink to the document URLs external data human input etc. Documents indexed in index may each be associated with a set of obtained title components through an identifier of the document such as the document s URL.

In one embodiment crawler indexer module and or title synthesizer module classifies each title component in the set of title components associated with a document into one or more of a plurality of pre established title component classes. The title component classes are generally based on the semantic types of title components available from the textual information sources. For example in a web search engine the following title component classes may be used to classify title components obtained for web page documents 

Site Name A plain language name of the web site from which the document object is available. For example the web site yahoo.com may have a Site Name of Yahoo or yahoo.com .

Site Caption A marketing tag motto or slogan of a web site. For example the The Free encyclopedia for wikipedia.com.

Site Description A plain language description of the web site. For example for ign.com Video Games Cheats Movies and more .

Site Section Header The section of the web site from which the document object is available for those web sites that arrange content into different sections. For example BBCSomali.com Wararka is the site section header for bbc.co.uk somali .

Topic A plain language description of the central idea or gist of the content of the document object.

Content Type A plain language description of the type of content layout or interaction the document object offers to users.

The above are just some examples of possible title component classes into which title components obtained for a document may be classified embodiments of the invention are not limited to any particular set of title component classes.

In one embodiment each title component for a document is classified according to a title component classification function. For a given title component and a given title component class the title component classification function is a metric of confidence that the given title component belongs to the given title component class. A title component may be classified into more than one title component class. Title components for a document within a title component class may be ranked within the title component class according to their confidence metrics.

Web search engine also includes title template database storing one or more title templates that govern how titles are constructed from title components . A title template comprises one or more title component class slots delimited by one or more textual separators. Non limiting examples of textual separators that can be used in a title template include the colon the double colon the semicolon the em dash or long dash the en dash or short dash the slash and the backslash . Each slot in a title template corresponds to one of the pre established title component classes. For example a title template for a web page could be where and are title component class slots that each refer to a title component class.

Clients include any computing devices suitable for communicating over a network. Non limiting examples of such computing devices include desktop computers server computers and mobile computing devices such as cell phones smart phones personal data assistants PDAs and tablet computing devices. In operation a client submits a statement of an information need i.e. a query over a network to query handler of web search engine . The query comprises one or more words or phrases that express the information need. The submission of the query over a network to query handler may be made in accordance with a networking protocol such as for example the HyperText Transfer Protocol HTTP . The submission may include in addition to the query data that indicates presentation constraints of the client that made the submission. For example the submission may indicate among other information character sets that the client is capable of presenting to a user natural languages that a user of the client is capable of reading the type of client application making the submission e.g. a web browser the type of client computing device making the submission e.g. a mobile device the size of the display device associated the client computing device making the submission etc. Title synthesis system can use query information and presentation constraint information to guide construction of synthesized titles. For example where appropriate title synthesis system can select for inclusion in synthesized titles title components that match a user s query terms. As another example title synthesis system can select a shorter title template for synthesized titles that are to be displayed on small computer displays such as the displays of some mobile devices.

According to one embodiment upon receiving a query from a requesting client query handler consults index to determine document objects that are relevant to the query. Each document object in the result set may be associated with an identifier such as for example a URL of the document object. The query handler returns result data to the requesting client identifying the documents in the result set in summary form. Documents in the result set are each summarized in a summary format such as for example in TAU format. A summary of a document in the result data may include a title constructed by title synthesizer .

According to one embodiment to produce the result data provided to the requesting client query handler invokes title synthesizer for each document in the result set. The process of constructing a title for a document object includes title synthesizer selecting one or more title templates from title template database . This selection of title templates can be based on any number of factors including any combination of explicit mapping s between the document and title templates in title template database the query presentation constraints the content of the document object and the title components in title component database that are available for the document object. The set of one or more title templates selected for the document object is referred to herein as the candidate set of title templates for the document.

According to one embodiment once the set of candidate title templates is selected for a document title synthesizer selects title components to complete the candidate title templates from the set of title components associated with the document. This selection is made in order to complete each of the candidate title templates and thereby to produce a set of candidate titles. Each of the candidate titles along with any other pre existing candidate titles is scored according to a query dependent title utility function. The highest scoring candidate title is selected as the title to include in the summary of the document object.

According to one embodiment selecting classified title components to complete candidate title template includes identifying the one or more title component class slots that make up the candidate title template. For example in the candidate title template selected for a web page document object and are the title component class slots. It should be noted that names of title component classes are included in the example title templates described herein to aid in understanding embodiments of the invention. However it should be understood that representation of a title template by a computer may take many forms. For example a title template may reference a title component class by a numerical identifier of the title component class instead of by the name of the title component class.

According to one embodiment once the title component class slots of a title template are identified title components associated with the document in title component database are selected based on the identified title component slots to maximize a title utility function. This selection process proceeds on a slot by slot basis. Selection of a title component from a title component class may be based on the query and presentation constraints. For example a title component in a title component class that contains query terms may be selected over one that does not contain query terms. As another example a shorter title component in a title component class may be selected over a lengthier title component.

Once title synthesizer has constructed titles for each document object in the result set result data is returned to the requesting client. The returned result data contains summaries of each of the document objects in the result set including the titles constructed by title synthesizer .

Although shown separately in title synthesizer module may be implemented as part of query handler module and or crawler indexer module . Thus functionality of title synthesizer module may be performed by the same process or processes that perform functionality of query handler module and or crawler indexer module . Similarly while shown as three separate logical databases in database database and database may be implemented as part of the same physical database or as part of multiple physical databases.

Title component extractor classifier module defines a set of title components that serve as the building blocks of titles. A task of title component extractor classifier is to obtain meaningful words and phrases title components for use by synthesizer in constructing titles. According to one embodiment extractor classifier obtains title components by parsing textual information sources and identifying and extracting meaningful words and phrases from the textual information sources and or by having the title components provided as input to the extractor classifier . In one embodiment title components provided as input serve as training data for an automated supervised machine learning algorithm that parses textual information sources to identify and extract title components.

Another task of title component extractor classifier is to classify or categorize obtained title components into one or more title component classes. A title component may be classifier into more than one title component class. In one embodiment an obtained title component is classifier into title component classes based on the semantic type of the title component. Each semantic type of a title component generally corresponds to a type of textual information about the document object that a user would consider useful is assessing the relevance of the document object.

Synthesizer accepts as input a query and search result presentation constraints. For each document object to be summarized in a search result returned in response to the query synthesizer constructs a set of one or more titles for the document object by selecting one or more title templates from title template database and completing each selected title template with title components selected from title component database . Selection of title templates and construction of titles by synthesizer can be based on the query and the search result presentation constraints. The titles produced by synthesizer for a document object along with any other titles produced for the document object by other systems are scored and ranked by scoring ranking module . The best scoring title is chosen as the title to present in the search result summary for the document object. Scoring ranking module can also score and rank the synthesized titles based on the query and the search result presentation constraints.

The following method steps occur in the context of a single document object that has been indexed or is about to be indexed at which time the title synthesis system is ready to define a set of title components that will serve as the building blocks for constructing titles for the document through title synthesis. In a practical embodiment however these steps are repeated perhaps concurrently for each document in a set of search result documents. The method steps are as follows.

Defining a set of title components for the document object begins at step with the title synthesis system obtaining a set of text strings for the document object from one or more textual information sources. Virtually any textual information source can serve as a source of a text string embodiments of the invention are not limited to any particular textual information sources. In general however it is desirable to obtain text strings that are relevant to the content of the document object. Accordingly it is expected that certain textual information sources will be preferable to others. For example for a web page document object good textual information sources of text strings often include the text of the web page itself and anchor text in other web pages that hyperlink to the web page. The process of obtaining text strings for a document object by the title synthesis system can occur in any suitable manner such as for example through human data entry or through an automated process such as an automated machine learning process that parses and extracts text strings from textual information sources based on training data.

At step the title synthesis system parses or otherwise analyzes the text strings obtained for the document object to identify title components. Any number of techniques may be used to identify title components from a text string embodiments of the invention are not limited to any particular techniques. According to one embodiment each text string is parsed to produce a set of tokens. Then each token is classified as either a separator token or a non separator token based on surface level features of the token. For example a token may be classified as a separator token or a non separator token based on whether the token is a sequence of one or more well known separator characters such as the colon the semicolon the em dash or long dash the en dash or short dash the slash and the backslash . Other surface level features that may be considered to determine whether a token is a separator token or a non separator token include the types of a number of previous characters and a number of following characters adjacent to the token in the text string the length of the token position of the token in the text string etc. Non separator tokens identified from a text string are merged to form a title component. For example the text string Movie Review Ondine Man Meets Mermaid There s a Catch might be obtained for a web page document object from the anchor text of a hyperlink to the web page included in another web page. One possible title component that could be produced from this text string is Movie Review Ondine Man Meets Mermaid with the tokens and There s a Catch being classified as separator tokens.

At step the title synthesis system classifies each identified title component into one or more title component classes. Title components may be classified based on virtually any criteria embodiments of the invention are not limited to any particular manner or method of classifying title components or limited to any particular set of title component classes. According to one embodiment classification of a title component is based on a title component classification function. For a given title component and a given title component class the title component classification function is a metric of confidence that the given title component belongs to the given title component class. A title component may be classified into more than one title component class. Title components for a document within a title component class may be ranked within the title component class according to their confidence metrics.

At step a request is made for the title synthesis system to generate a title for the document object. Such request may be in the form of an invocation on an Application Programming Interface API provided by the title synthesis system. The request to the title synthesis system may indicate among other things an identifier of the document object for which a good quality title is to be generated e.g. a URL a query received from a client and constraints regarding the presentation of search result data to a user of the client.

At step in response to receiving the request at step the title synthesis system selects one or more title templates that govern the construction of titles for the document object. Embodiments of the invention of not limited to any particular method for selecting title templates. In one embodiment a set of title templates T are pre defined or pre composed and stored in a database such as title template database . A set T from Tis then selected. While it is conceivable to identify all possible title templates from T based on the set of title components obtained for the document object in a practical embodiment selection of T from T is based on one or more of associations between the document object and one or more title template s that belong to set T the content or type of document object the query and the presentation constraints. For example if the presentation constraints indicate that the query was submitted from a mobile device or other computing device with a relatively small display screen then a title template that a has a lesser number of title component class slots or b has title component class slots that typically are not filled with lengthy title components may be selected.

At step the title synthesis system completes each selected title template with title components to produce a set of one or more candidate titles. In one embodiment a selected title template is completed by identifying the title component class slots of the title template. Each slot refers to a particular title component class. To fill a slot a title component obtained for the document object is selected from the corresponding title component class. All other slots are filled in a similar manner. If more than one title component is available for selection in a title component class then selection of a title component from the class may be based on the query and presentation constraints to maximize a title quality function. For example a title component containing some or all of the query terms may be selected over one that does not contain any query terms. Selection of a title component from a title component class may also be based on presentation constraints. For example if the presentation constraints indicate that the query was submitted from a mobile device or other computing device with a relatively small display screen then a shorter title component can be selected over a longer title component in the same title component class.

At step the title synthesis system scores and ranks the constructed candidate titles along with any pre existing candidate titles and then selects the best scoring title as the title for the document object. Any number of techniques and algorithms may be used to score titles embodiments of the invention are not limited to any particular scoring technique or scoring algorithm. In one embodiment each title is scored based on the number and location of query terms in the title with titles containing query terms and containing those query terms towards the beginning generally scoring higher than other titles. In addition the scoring of titles and selection of a single title for the document object may take into account other factors such as presentation constraints.

According to one embodiment the techniques described herein are implemented by one or more special purpose computing devices. The special purpose computing devices may be hard wired to perform the techniques or may include digital electronic devices such as one or more application specific integrated circuits ASICs or field programmable gate arrays FPGAs that are persistently programmed to perform the techniques or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware memory other storage or a combination. Such special purpose computing devices may also combine custom hard wired logic ASICs or FPGAs with custom programming to accomplish the techniques. The special purpose computing devices may be desktop computer systems portable computer systems handheld devices networking devices or any other device that incorporates hard wired and or program logic to implement the techniques.

For example is a block diagram that illustrates a computer system upon which an embodiment of the invention may be implemented. Computer system includes a bus or other communication mechanism for communicating information and a hardware processor coupled with bus for processing information. Hardware processor may be for example a general purpose microprocessor.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Such instructions when stored in storage media accessible to processor render computer system into a special purpose machine that is customized to perform the operations specified in the instructions.

Computer system further includes a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor . A storage device such as a magnetic disk or optical disk is provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. According to one embodiment the techniques herein are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term non transitory media as used herein refers to any media that store data and or instructions that cause a machine to operation in a specific fashion. Such non transitory media may comprise non volatile media and or volatile media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory . Common forms of non transitory media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Non transitory media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between non transitory media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card cable modem satellite modem or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

Titles in search result summaries play a crucial role in a user s search experience. The techniques and title synthesis system described herein provide optimized or near optimized query dependent titles for search result summaries. These techniques overcome the limitations of existing systems that treat titles monolithically and do not construct titles from their constituent parts. Other benefits of the techniques and system include providing a platform for further optimization of title generation giving greater control over content and flexibility in presentation and allowing a more principled approach to title shortening. Further identifying and storing title components itself can be useful in other search related areas such as retrieval and ranking of search results. In addition the techniques and system described herein are applicable to different domains and multiple languages and for generating titles for applications other than information retrieval.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention and what is intended by the applicants to be the scope of the invention is the literal and equivalent scope of the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction.

