---

title: Work unit adapter for content processing with third party network elements
abstract: A method including receiving a work flow for the ingestion, transformation, and distribution of content, wherein the work flow includes one or more work unit tasks; retrieving work unit task information pertaining to the one or more work unit tasks; identifying one or more network elements to execute one of the one or more work unit tasks based on the work unit task information; translating the work unit task information from a format used by one or more devices to another format that is used by the one or more network elements based on one of an object adapter pattern or a class adapter pattern; and send the translated work unit task information to the one or more network elements.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08463902&OS=08463902&RS=08463902
owner: Verizon Patent and Licensing Inc.
number: 08463902
owner_city: Basking Ridge
owner_country: US
publication_date: 20101217
---
Consumer demand for media is increasing. For example consumers often watch and or listen to various media at home while traveling at work etc. As a result the number of communication channels for delivering media content and the number of different types of devices for playing the content has also increased.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

The term content as used herein may include for example multimedia content e.g. text based content audio and video such as a movie a show a television program broadcast of a live event e.g. sporting event concert etc. or another type of content or asset.

As described herein a digital data clearinghouse DDC may allow a user to define or create work units use these work units to compose a work flow and to dynamically provide for customer requested processes for content distribution. When the user submits a service order for processing content on behalf of a customer the DDC may obtain from the work flow associated with a work order work unit tasks that correspond to the work units. The DDC may perform all or some of these tasks.

The term work unit as used herein may refer to a description of a set of one or more operations that the DDC may perform pertaining to the ingestion transformation and distribution of content. For example the transforming of content may include overlaying subtitles on a video inserting advertisements into a video transcoding content from one format to another format etc. A further description of a work unit is provided below.

The term work flow as used herein may refer to one or more work units that may be executed to fulfill a work flow task associated with a work order. For example a work unit may include an input and an output to allow a series of work units to form a processing path through which content may flow.

The term work order as used herein may refer to an order e.g. associated with a customer that is received for processing by the DDC. A work order may include a work flow criteria for the selection of the content to be processed in the work flow and the parameter values for the work units pertaining to the work flow. For example the parameters may include system parameters that may not be changeable default parameters that may be changeable and default parameters that may require human intervention e.g. user verification user entry etc. .

The term work unit task as used herein may refer to particular function or operation that may be performed based on a work unit. A work unit may perform one or more work unit tasks.

According to an exemplary scenario assume that a user e.g. a DDC operator a DDC administrator etc. defines two work units via the DDC. Also assume that the first work unit describes reformatting an M N video into a 600 400 video and the second work unit describes inserting an advertisement into the video. When a customer e.g. a content creator a content provider etc. places an order with the user to reformat the video into a 600 400 video and insert an advertisement in the video the user may compose through a graphical user interface GUI provided via the DDC a work flow by concatenating two or more work units. When the user submits a work order the DDC may schedule for execution a set of tasks that are associated with the work units included in the work flow. The DDC may then perform the tasks. The preceding example is provided for simplicity. Descriptions below provide additional details with respect to the DDC. In particular a work flow command processing system will be described further below.

Content creator referred to collectively as content creators or individually as content creator may represent one or more creators of content that wish to package and or distribute the content to other parties such as consumers . For example content creators may include movie or television studios music companies publishers game developers parties who generate user generated content UGC websites blog sites etc. Content creators may provide content to DDC for formatting e.g. transcoding etc. packaging and or distribution as described further below.

Advertiser referred to collectively as advertisers or individually as advertiser may represent one or more parties that wish to insert advertising into content. For example advertiser may contract with a content creator and or digital media retailer to insert an advertisement into a media stream provided to consumers . DDC may insert the advertisement into the media stream in accordance with the agreement between the parties.

DMR may represent one or more business entities that receive content from various parties and resell it to end users. For example DMRs may include broadcasters cable companies direct broadcast satellite DBS providers Internet protocol television IPTV providers mobile phone TV providers online retailers etc. DMRs may receive content from DDC and sell provide the content to consumers .

Consumer may represent one or more consumers that receive content originally generated by or provided by content creators and that has been processed by DDC . For example DDC may format and package the content for distribution by DMRs and or DDC to consumers .

DDC may include one or more devices e.g. a server device a computing device etc. for processing content. For example as described above DDC may provide an automated environment in which content from content creators is transformed and packaged for distribution in any number of formats based on the particular requirements associated with DMRs . According to an exemplary embodiment DDC may also aggregate various data and insert advertisements into the content. DDC consistent with embodiments described herein may also utilize flexible work flows to streamline the formatting and packaging of content for digital distribution.

According to other embodiments network may include additional devices fewer devices different devices and or a different configuration than those illustrated in . For example network may include a large number e.g. hundreds or thousands of different types of user device associated with consumers such as for example televisions cellular phones computers e.g. laptops desktops tablets notebooks netbooks etc. personal digital assistants PDAs etc. Additionally or alternatively according to other exemplary embodiments network may include additional DDCs etc. Additionally or alternatively network may include one or more networks of various types to interconnect the devices illustrated in and enable the devices to communicate with one another. For example network may include a public switched telephone network PSTN a local area network LAN a wide area network WAN the Internet an intranet or some other type of network. Network may include wired connections and or wireless connections among the devices illustrated.

Also according to other embodiments one or more functions and or processes described as being performed by a particular device or component may be performed by a different device or component or some combination of devices or components. Additionally or alternatively according to other embodiments one or more functions and or processes described as being performed by multiple devices or multiple components may be performed by different devices or components or a single device etc.

Databases may store work unit definitions work flows parameters tables etc. that are associated with various devices components etc. in DDC intermediate or end results of processing performed by different processes in DDC etc.

Order management system may include one or more devices e.g. a server device a computing device etc. for managing customer orders generating reports etc. According to an exemplary embodiment order management system may include client components that interface with components of DDC service operation management system . The client components e.g. web browser may receive customer orders requests for reports etc. and relay the received information to the components of DDC service operation management system for the creation validation estimation submission approval execution and reporting of activities associated with the customer orders request for reports etc. For example a customer order may be completed by sending to a component of DDC service operation management system a selection of a particular work flow that will drive the processing of content associated with the order.

Data and security system may include one or more devices e.g. a server device a computing device etc. to provide for authentication and authorization of users having roles in DDC and or for taking actions that are associated with the authorized roles e.g. create user accounts remove user accounts generate an initial password etc. . For example when a user logs in as a DDC operator the user may be authorized to design work units and or compose work flows. According to an exemplary embodiment data and security system may interface with order management system DDC service operation management system and DDC support system .

DDC service operation management system may include one or more devices e.g. a server device a computing device etc. to control an overall operation configuration and management of DDC . For example DDC service operation management system may include operation management system and service operation management modules . Via a client component that communicates with operation management system a user may control the configuration administration and operation of DDC . For example in one implementation via a web browser or another client application a user may control security compose a work flow administer accounts that are associated with content creator or DMR submit a work order add data to storage of DDC manage resources manage DDC configuration e.g. create a work unit manage catalogs of content run reports monitor DDC work orders e.g. information associated with a work order etc.

In providing each of such services to a client operation management system may employ service operation management SOM modules . SOM modules may include components that correspond to the above listed services. For example SOM modules may include a security manager a work flow manager an account manager a work order manager a data and storage manager a resource management module a configuration manager an asset management module a catalog management module a monitoring and reporting module etc. DDC service operation management system may further include a graphical user interface GUI for interfacing with SOM modules .

DDC resource management system may include one or more devices e.g. a server device a computing device etc. that support the capacity management of resources associated with network elements NEs of DDC . As illustrated in DDC resource management system may include a work order server a work order estimator a work order decomposer and optimizer a work order scheduler a runtime resource manager and a metrics collector .

Work order server may provide work order related interfaces to operation management system and or SOM modules and may communicate with work order estimator work order decomposer and optimizer and work order scheduler to submit decompose validate and save work orders and to estimate schedule and reserve resources during an order submission.

Work order estimator may estimate the cost of completing a decomposed work order across work units of a work flow based on resources that are associated with the work units for each resource type. Work order estimator may store the cost in one of databases in terms of resource capacity units RCUs and duration of time required to complete work unit tasks sub work unit tasks processes etc. which may pertain to the execution of the work order. The term RCU as used herein may include a unit of measure for a resource type. For example an RCU may correspond to bits per second tasks per hour CPU processing time etc. or some other type of quantity of unit e.g. capacity unit by time e.g. a time unit such as hour minute second millisecond etc. quantity of unit e.g. gigabyte GB for storage megabits for bandwidth etc etc.

Work order decomposer and optimizer may break down an order into work units based on the work flow associated with the order. Furthermore based on the decomposition work order decomposer and optimizer may generate work unit tasks or simply tasks assign work unit task parameters create work unit task connectors etc. which are described further below.

Work order scheduler may match cost estimates for different resource types for a work order to available time slots in an allocation schedule across different network elements e.g. hardware software components that perform underlying operations for a work unit . As a result of the scheduling work order scheduler may output start and end times for each of the work unit tasks and for resource reservations.

Runtime resource manager may allocate network elements user groups to a process at the time of execution on behalf of a work unit. Runtime resource manager may attempt to honor scheduled reservations of resources. However if the resources are unavailable runtime resource manager may attempt to obtain replacement resources.

Metrics collector may determine for each work unit actual time of completion and used consumed resources associated with the execution of the work unit. Based on previous actual execution measurements of a work unit metrics collector may modify factors that are used to estimate the resource and time necessary to complete a task associated with a work unit for a particular content.

DDC work order execution system may include one or more devices e.g. a server device a computing device etc. to manage the flow and execution of work units of a defined work flow associated with a work order. DDC work order execution system may include a work flow command processor work unit adapters and network elements . For simplicity does not illustrate other components of DDC work order execution system . For example DDC work order execution system may include a work unit processor not illustrated . Depending on the implementation DDC work order execution system may include additional fewer or different components than those illustrated in FIG. .

Work flow command processor may drive work order execution. According to an exemplary embodiment work flow command processor may include a work order manager a work order processor and a work unit processor not illustrated . The work order manager may provide interfaces to resource management system for initiating an execution of a work order retrieving the status of the work order suspending resuming the work order execution canceling the work order etc. The work order processor may coordinate work unit tasks for completion of a work order. In coordinating different work unit tasks the work order processor may sequence the tasks for optimum execution time and resource utilization. The work order processor may communicate with runtime resource manager for allocation and de allocation of resources. The work unit processor may dispatch processes threads to perform a work unit task. A further description of work flow command processor is provided below.

Work unit adapter may include interfaces for adapting network elements to perform media content processing corresponding to a work unit. In one implementation each work unit adapter may be versioned and may include Java code. Each work unit adapter may monitor the corresponding network element to prevent over allocation of the network element maintain normal execution of logic associated with the network element and provide real time information to metrics collector .

Network elements may include physical or logical network devices components for ingesting transforming and distributing content.

DDC support system may include one or more devices e.g. a server device a computing device etc. and or personnel to provide support services such as creation of work units composition of work flows etc. billing support contracting management pricing etc.

According to other exemplary embodiments DDC may include additional fewer different and or a different arrangement of devices than those illustrated in . The configuration shown in is for illustrative purposes. In other configurations and or implementations functions that are associated with one component illustrated in may be performed by one or more other components in any of the components may be connected to any other of the components and functions of one component may be included in another component. Accordingly in the other configurations or implementations DDC may include additional fewer different or a different arrangement of components than those illustrated in . For example according to an exemplary embodiment DDC resource management system may include a component for providing reports on resources schedules metrics etc.

As illustrated according to an exemplary embodiment device may include a processing system memory storage including an application a communication interface an input and an output . According to other embodiments device may include fewer components additional components different components and or a different arrangement of components than those illustrated in and described herein.

Processing system may include one or multiple processors microprocessors data processors co processors application specific integrated circuits ASICs controllers programmable logic devices chipsets field programmable gate arrays FPGAs application specific instruction set processors ASIPs system on chips SOCs and or some other component or logic that may interpret and or execute instructions and or data. Processing system may control the overall operation or a portion of operation s performed by device . Processing system may perform one or multiple operations based on an operating system and or various applications e.g. application . Processing system may access instructions from memory storage from other components of device and or from a source external to device e.g. a network another device etc. .

Memory storage may include one or multiple memories and or one or multiple other types of storage devices. For example memory storage may include a random access memory RAM a dynamic random access memory DRAM a read only memory ROM a programmable read only memory PROM a flash memory a phase change memory PCM and or some other type of storing medium a computer readable medium a compact disk CD a digital versatile disk DVD etc. . Memory storage may include a hard disk e.g. a magnetic disk an optical disk a magneto optic disk a solid state disk etc. or some other type of storing medium along with a corresponding drive. Memory storage may be external to and or removable from device such as for example a Universal Serial Bus USB memory a dongle a hard disk mass storage off line storage etc.

The term computer readable medium as used herein is intended to be broadly interpreted to include for example a memory a storage medium a CD a DVD a Blu ray disc or another type of tangible storing medium. Memory storage may store data application s and or instructions related to the operation of device .

Application may include software that provides various services and or functions. For example with reference to work flow command processor and according to an exemplary embodiment application may include one or multiple applications for executing work flows work units etc. as described herein. Additionally or alternatively for example with reference to other devices components etc. of DDC applications may include one or multiple applications for performing processes functions operations etc. that are described herein.

Communication interface may permit device to communicate with other devices networks systems etc. illustrated in network . Communication interface may include one or multiple wireless interfaces and or wired interfaces. Communication interface may include one or multiple transmitters receivers and or transceivers. Communication interface may operate according to one or multiple protocols standards and or the like.

Input may permit an input into device . For example input may include a keyboard a mouse a camera a scanner a microphone a display a touchpad a button a switch an input port voice recognition logic fingerprint recognition logic a web cam and or some other type of visual auditory tactile etc. input component. Output may permit an output from device . For example output may include a speaker a display a light an output port and or some other type of visual auditory tactile etc. output component.

As described herein device may perform processes in response to processing system executing software instructions e.g. application stored by memory storage . By way of example the software instructions may be read into memory storage from another memory storage or from another device via communication interface . The software instructions stored by memory storage may cause processing system to perform one or more processes described herein. Alternatively for example according to other implementations device may perform one or more processes described herein based on the execution of hardware processing system etc. the execution of hardware and firmware or the execution of hardware software and firmware.

Referring to as previous described DDC may include among other devices DDC work order execution system . Further as previously described according to an exemplary embodiment DDC work order execution system may include work flow command processor . A further description of work flow command processor is provided below.

Work flow command processor may execute work orders. For example work flow command processor may execute a work order based on resource allocations and work unit and work flow controls. Work flow command processor may execute the work order as soon as the work order is received or based on a schedule. The execution of the work order may include content ingestion content transformation and or content distribution.

According to an exemplary embodiment work flow command processor may include the following components a work order manager a work order processor a work unit processor and a notifier as illustrated in .

Work order manager may include various work order management functions which pertain to the execution and or management of a work order work flow work unit etc. such as for example an initiating function a status retrieving function a suspending function a resuming function and a canceling function. Work order manager may include interfaces to communicate with DDC resource management system via e.g. application programming interfaces APIs etc. as well as other components of DDC .

Work order processor may control a flow between work unit processes to fulfill the requirements associated with a work order. For example the work order may include requirements that pertain to content ingestion content transformation and distribution of the content. Work order processor may include interfaces to communicate with DDC resource management system via e.g. APIs etc. as well as other components of DDC . According to an exemplary embodiment work order processor may communicate with DDC resource management system in real time for the allocation and de allocation of resources that may be needed to successfully complete the work order based on the requirements of the work order.

Work order processor may review and update states associated with a work unit task and work unit task connector parameters for each time unit of execution pertaining to the work unit. For example a work unit task connector parameter state model may include a new state an active state a cancelled state an in process state a complete state and an error state. According to an exemplary embodiment work order processor may manage a state associated with work unit task connector parameters for each current time unit cycle of execution. For example when a work order is received work unit task connector parameters may be in a new state or a pending state. When a scheduled date and time for processing a work order occurs and resource allocations for the work order are verified e.g. by work order scheduler of DDC resource management system etc. work order processor may update a state of the work unit task connector parameters to an active state. When a work unit starts work order processor may update the work unit task connector parameters that are in the active state to an in process state. Once the work unit is completed work order processor may update the work unit task connector parameters that were in the in process state to an end status such as a complete state or an error state. As described further below work unit task connector parameters may also include other parameters pertaining to a work unit. For example according to an exemplary embodiment the work unit task connector parameters may include parameters pertaining to input connector points output connector points and connectors.

As previously described work order processor may control the flow between work unit processes to fulfill the requirements associated with a work order. For example work order processor may sequence work unit tasks in a manner that optimizes execution time and resource utilization. Work order processor may communicate with DDC resource management system e.g. runtime resource manager to allocate and de allocate resources for processing the work order.

Work unit processor may manage the execution of work unit tasks for example in terms of concurrency priority etc. in order to ingest process and or distribute content. For example work unit processor may include the execution dispatch logic of each work unit that was previously developed e.g. via a Websphere Process Server WPS or other type of device . Work unit processor may manage the execution of work unit tasks using work unit adapters and network elements .

Work unit processor may use various techniques to optimize the processing of content. By way of example work unit processor may re use previously processed content within a work order. For example previously processed content may be available in a working storage area or in an archived storage area. In this way work unit processor may avoid unnecessary re processing of content.

Additionally work unit processor may optimize the processing of work units that include repetitive operations. By way of example work unit processor may optimize encryption of content for more than one DMR or may optimize pipelining and or overlapping processing of content as much as possible per work flow definitions. Additionally a work unit may self evaluate its input and output requirements and if the content has already been completed and is available then the work unit may re use the available content to satisfy its input and or output requirements. Work unit processor may also take into account work unit parallelism and work unit pipelining of content to compress the overall work flow execution time.

Work unit processor may process work units based on various work flow types such as for example an overlapped pipeline work flow a locked sequence work flow and a staggered e.g. based on dates of quantity type time etc. work flow. In the event of work flow fall out e.g. error overload etc. work unit processor may route the work flow to the appropriate user group e.g. by account .

According to an exemplary embodiment the execution of a work unit may include a human task. According to such an embodiment work unit processor may dispatch the process to the appropriate functional user group that may perform a function e.g. review approve respond to an error e.g. resolve retry abort etc. or some other type of manual intervention etc. required by the work unit. A user may use any available resources that are functionally capable of completing the human task. According to an exemplary embodiment a user group may be mapped to a resource type that provides for completion of a human task associated with a work unit.

Notifier may receive and manage notification events from all processes within DDC . A notification event may be informational or require a response e.g. a resolution action etc. . According to an exemplary embodiment notifier may route a notification event to the appropriate user group or component of DDC .

Input connector point may allow an input e.g. content to be received by work unit . Input connector point may include a connector type. For example a connector type may correspond to a type of content e.g. metadata image video etc. . The connector type and or the number of input connector points may depend on function .

Output connector point may allow an output e.g. content to be output by work unit . Output connector point may include a connector type. For example a connector type may correspond to a type of content e.g. metadata image video etc. . The connector type and or the number of input connector points may depend on function .

Function may correspond to one or more work unit tasks that may be performed by work unit based on the input received via input connector point various parameters that function may use to carry out the one or more work unit tasks and the expected output via output connector point . A further description of work unit is provided below.

Referring to work unit input connector point may be configured to receive metadata input connector point may be configured to receive media and function may be configured to structurally change inbound types e.g. metadata and media to a new outbound type e.g. a package . For example a package may refer to media content e.g. video audio multimedia etc. and additional data e.g. metadata . Work unit may receive the metadata and the media content as input and may output a package by combining the metadata and the media content.

Referring to work unit input connector point may be configured to receive media input connector point may be configured to receive media and function may be configured to merge the media. For example the media received via input connector points and may be of the same type e.g. media streams and used to generate a new media e.g. a new media stream . According to an exemplary implementation work unit may merge the media based on a round robin approach or some other type of input connector point sequence.

Referring to work unit input connector point may be configured to receive media input connector point may be configured to receive media and function may be configured to combine the media. For example the media received via input connector points and may be of a different type and used to generate a new media.

Referring to work unit input connector point may be configured to receive metadata input connector point may be configured to receive media input connector point may be configured to receive an image and function may be configured to merge the inputs received. Since the output of work unit can vary depending on its inputs output connector point is of a generic type e.g. the output may be of any type .

Referring to work unit input connector point may be of the generic type and may be configured to receive any type of content function may perform one or more work unit tasks and output connector point may be of a generic type that outputs content. By way of example function may duplicate the content and concatenate the duplicate content with the original content.

Referring to work unit input connector point may be of the generic type and may be configured to receive any type of content function may perform a sort output connector point may be configured to output metadata output connector point may be configured to output media and output connector point may be configured to output an image. For example function may sort any type of content as metadata media and image.

According to other exemplary embodiments work unit may correspond to other types of work units. By way of example work unit may include other types of input connection points or other types of output connection points. Additionally as previously described the work unit task connector parameters may include parameters to indicate the type of content e.g. media metadata generic image etc. pertaining to a connection point of a work unit. In turn connector points may be matched e.g. type of content etc. with connectors. Connectors are described further below in and elsewhere in this description.

Additionally or alternatively work unit may include other types of functions. For example work unit may include an error connection point that may communicate with an error handling work unit. According to such an embodiment error handling work unit parameters may be used to define criteria for handling an error. For example the parameters may include error logging parameters notification to user parameters human intervention parameters work flow parameters e.g. stopping work flow suspending work flow etc. labeling error e.g. severe etc. . Additionally or alternatively work unit may include other types of content specific connection points e.g. video audio etc. processed content connection points e.g. compressed video connection point etc. format specific content e.g. high definition video etc. etc. Additionally or alternatively work unit may include only an input connection point or only an output connection point. According to such embodiment s work unit task connector parameters may include parameters corresponding to specific types of errors other types of content etc.

Additionally or alternatively functions may correspond to other types of processes. By way of example work unit may include functions such as for example create metadata transform metadata e.g. converting metadata format etc. pull metadata e.g. obtain retrieve receive etc. metadata from a source e.g. a content provider such as content creator advertiser etc. pull content e.g. obtain retrieve receive etc. content from a source confirm delivery e.g. with respect to content split content distribute e.g. distribute content to a DMR etc. encrypt decrypt encode decode close captioning e.g. overlay a transcript of audio etc. branch e.g. send copies of metadata to multiple work units etc. ad marker e.g. insert advertisements in content etc. archive save retrieve quality assurance e.g. check a quality of the processed content etc. manual intervention e.g. assign work to human workers etc. report e.g. send different types of reports to users etc. transcode e.g. content assemble e.g. assemble data for generating a work order inserting logos or black space into the content etc.

Connector may facilitate the transfer of data e.g. content parameters etc. between work units . Connector may also communicate with databases to obtain data. According to an exemplary embodiment a sending work unit e.g. work unit may provide connector with data and a receiving work unit e.g. work unit may receive the data. For example the receiving work unit may receive the data based on processes associated with DDC work order execution system e.g. work unit processor .

According to an exemplary embodiment databases may include storing work unit definitions. For example DDC service operation management system may permit a user to create a work unit create work unit parameters as well as other data that may define the work unit. As previously described DDC work order execution system may receive work unit tasks from databases . A further description of a work unit definition is provided below.

As illustrated work unit tables may include a work unit definition table an allowable flow table maximum instances parameter error actions parameter retry timeout parameter modifiability parameter and execution table . Although DDC may include other work unit related tables or parameters for simplicity they are not illustrated in . Additionally according to other embodiments DDC may include additional fewer different or differently arranged tables than those illustrated in . For example according to an exemplary embodiment work unit definition table may include information included in allowable flow table .

Definition table may include a work unit ID a work unit version number a work unit state and a description . Work unit ID may identify a work unit. Work unit version number may identify a version of the work unit. For example work unit ID and version number may be generated and or assigned to a work unit when the work unit is created. A work unit may be assigned a new work unit version number when for example the work unit is updated. In such instances work unit ID may remain the same. Work unit state may indicate a current state of the work unit e.g. new active inactive testing tested etc. .

According to an exemplary embodiment work unit ID and version number may be used to associate a work unit with a work flow. In this way when a work unit is updated and ready to be used e.g. passed testing etc. work unit state may be updated to active which may automatically cause work unit state of the older version work unit to become inactive. In this way the updated work unit may be automatically used in work flows e.g. future work flow executions in which the older version work unit was included. Description may include a description e.g. in text pertaining to the functionality of the work unit.

Allowable flow table may indicate whether work units may be interconnected and may include a From ID a From version a To ID a To version and a direction . From ID and From version may indicate a work unit ID and a version of one of the work units. To ID and To version may indicate a work unit ID and a version of another one of the work units. Direction may indicate a direction in which data is to flow between the work units e.g. forward reverse etc. . Allowable flow table may also specify a work unit s allowed relationships with other work units. By way of example allowable flow table may specify which work units may be allowed before it and which work units may be allowed after it.

Execution table may include runtime information used for execution of a work unit. During an execution of logic e.g. program scripts etc. associated with a work unit DDC may create an instance of execution table corresponding to the work unit to control and or track the progress of the execution. Accordingly execution table may include a work unit execution ID work unit ID work unit version parallel unit ID and parallel version . For simplicity other entries in work execution table are not illustrated e.g. additional parallel IDs and parallel versions .

Work execution ID may identify a process e.g. a runtime instance of a program or a script or thread associated with the work unit. Work unit ID and work unit version may identify the work unit and the work unit version associated with the process script thread etc. Parallel unit ID and parallel version may identify a version of the work unit that may be executed in parallel with the work unit identified by fields and . In other words it may be specified which work unit s may be executed in parallel with another work unit.

During execution of a work unit a work flow etc. DDC work order execution system may use resources allocated by DDC resource management system . For example when a work order is processed by DDC resource management system work order estimator may estimate the number of RCUs needed to execute the work order within a work flow. Work order estimator may consider among other things content type functions e.g. work units needed to process the content number of copies requested cost factors time factors etc. As an example a content type may correspond to a movie which is CableLabs compliant approximately 2 hours in length 4 gigabytes in size and of an MPEG 2 format. According to other examples the content type may include additional or fewer parameters. For example a content type may correspond to one or more of the following parameters such as content e.g. audio video image metadata etc. file type e.g. a windows media video WMV file audio video interleave AVI file Joint Photograph Experts Group JPEG file etc. compliance e.g. CableLabs etc. other characteristics associated with the content e.g. length size etc. etc.

Work order scheduler may schedule the execution of a work order. After a work order is scheduled runtime resource manager may communicate with DDC work order execution system to facilitate execution of the work order. For example runtime resource manager may allocate network elements and user groups at the time of execution. According to an exemplary embodiment runtime resource manager may determine if the resources that were calculated e.g. by work order estimator and planned to be used e.g. by work order scheduler are currently available. In the event that the resources are not available runtime resource manager may check the current capacity associated with network elements and user groups. Runtime resource manager may allocate alternate resources when the originally scheduled resources are not available.

According to an exemplary embodiment based on the work unit task information and or resource information work unit processor may select a work unit adapter to assist in executing the work unit task. For example DDC resource management system may provide work flow command processor with resource information that includes among other things the appropriate work unit adapter s and network element s to execute the work unit task. For example the resource information may include network address es work unit adapter identifier s network element identifier s to allow work unit processor to select the appropriate work unit adapter and network element . Based on the resource information work unit processor may send a work unit task request to work unit adapter . The work unit task request may include for example work unit definitions and other parameters necessary to execute the work unit task. According to an exemplary embodiment work unit adapter may translate the work unit definitions and other parameters to a format which network element understands and is able to use. For example network element may correspond to a third party application that may run on a platform e.g. operating system etc. different from DDC . Upon translation work unit adapter may select the appropriate network element s to carry out the execution of the work unit task. In some cases work unit adapter may communicate with multiple network elements but the details may be abstracted from the work unit. For example work unit adapter may provide encapsulation via a common application programming interface API in which a request to a network element may include a network element identifier. When network element receives the translated work unit definitions and other parameters network element may execute the work unit task.

According to an exemplary embodiment upon completion of the execution of the work unit task network element may send a work unit task reply to work unit processor e.g. via work unit adapter that indicates the work unit task is complete. The work unit task reply may include a pointer or memory storage identifier that indicates the location of the processed content. For example the processed content may be stored by a common memory storage e.g. databases .

With reference to although the exemplary process is described without mention of notifier according to an exemplary embodiment notifier may receive and manage notification events during the execution of the work unit task. For example if an error occurs notifier may receive an error message. Notifier may route the error message to the appropriate user group. A further description of work unit adapter is provided below.

By way of example work unit adapter may be deployed in a .NET environment or a Java 2 Platform Enterprise Edition J2EE environment using a service oriented architecture e.g. a Web service architecture . Work unit adapters may use various protocols to communicate with network elements such as for example Transmission Control Protocol TCP IP command lines Web service etc. DDC service operation management system may allow a DDC operator to install update inactivate rollback etc. the configuration the state etc. pertaining to work unit adapter .

As previously described according to an exemplary embodiment work unit processor may use network element to execute work unit tasks. Work unit processor may use work unit adapter to among other things translate work unit task information etc. to a format which network element is able to use for and or during the execution of the work unit task. According to an exemplary embodiment work unit adapter may monitor network element to for example prevent over allocation ensure that network element is executing the work unit task at expected levels e.g. according to a schedule etc. and or provide information e.g. real time metrics e.g. resource metrics etc. etc. to other components of DDC e.g. work flow command processor DDC resource management system etc. . For example work unit adapter may obtain real time status information pertaining to the execution of a work unit task by network element .

Work unit adapter may include various interfaces to allow communication with work unit processor and network element . For example work unit adapter may include an interface for a work unit task to use to communicate with work unit adapter and an interface for work unit adapter to use to communicate with the work unit task. According to an exemplary embodiment work unit adapter may be based on an adapter pattern. For example the adapter pattern also known as a wrapper pattern or a wrapper may correspond to a design pattern that translates one interface for a class or an object into a compatible interface. Work unit adapter may allow classes or objects to work together that normally could not because of incompatible interfaces. Work unit adapter may use various types of adapter patterns e.g. object adapter pattern class adapter pattern etc. .

As previously described notifier may receive and manage notification events from processes within DDC . Notifier may receive and manage notification events that may occur with respect to processes within DDC . Notifier may route notification events to the appropriate user groups or DDC component for resolution. By way of example the notification events may be categorized as informational response required or have a required related resolution action. Notifier may include various functions that pertain to various devices components processes etc. associated with DDC . For example notifier may include functions pertaining to work flow command processor such as process work order or process work unit. Additionally notifier may include functions pertaining to work unit adapters such as process work flow task collect metrics store metrics and summarize metrics. Additionally notifier may include functions pertaining to DDC resource management system such as check current capacity allocate resources and de allocate resources.

According to an exemplary embodiment once a work unit task is submitted to network element via work unit adapter the work unit task may not be terminated or cancelled since this may leave DDC in an unstable state. Rather according to such an embodiment network element may attempt to execute the work unit task to completion even if the work order is cancelled. As previously described network elements may include physical or logical network devices components for processing content. For example network elements may include servers or other computing devices to process content.

Process may include receiving a work unit task request from a command processing system block . For example work unit adapter may receive work unit task information e.g. work unit definitions work unit task connector parameters work order parameters e.g. start time quantity etc. human intervention parameters error handling parameters accounting parameters storing parameters e.g. archiving etc. and resource information from work unit processor . Work unit adapter may also receive other types of parameters such as for example system parameters e.g. retry parameters timeout parameters default parameters etc. which may be global configurable etc. from work unit processor for the execution of a work unit task. According to other exemplary embodiments work unit adapter may receive work unit task information and or other types of parameters from other devices components etc. of DDC e.g. databases etc. .

A network element may be identified based on the work unit task request block . For example work unit adapter may identifier a network element based on the work unit task request which may include for example a device identifier and or a network address of network element . Work unit adapter may identify the network element based on a function pertaining to the work unit task a current load based on real time resource utilization pertaining to network elements etc.

The work unit task may be translated block . For example work unit adapter may translate work unit task information other types of parameters pertaining to the work unit task. According to an exemplary embodiment work unit adapter may use various types of adapter patterns e.g. object adapter pattern class adapter pattern etc. to perform the translation of the work unit task.

The translated work unit task may be sent to the network element block . For example work unit adapter may provide the translated work unit task information parameters object and or classes pertaining to the work unit task to the appropriate network element s .

A work unit task reply may be received block . For example work unit task adapter may receive a work unit task reply from network element . For example the work unit task reply may include a pointer or memory storage identifier that indicates the location of the processed content as well as information indicating that the work unit task has been completed. For example the processed content may be stored by a common memory storage e.g. databases .

The work unit task reply may be sent to the command processing system block . For example work unit adapter may send the work unit task reply to work unit processor . Work unit adapter may translate any parameters etc. that may need to be translated on behalf of network element before sending the work unit task reply to work unit processor .

Although illustrates an exemplary process for executing a work unit task according to other exemplary embodiments process may include additional operations fewer operations and or different operations than those illustrated and described. For example process may include error handling and management operations e.g. if an error occurs when executing the work unit task and or other operations pertaining to the processing of a work unit as described herein.

In the foregoing description DDC work order execution system may provide for the execution of work orders corresponding to customer orders. Work flow command processor may manage the execution of a work flow a work unit a sub work unit a micro work flow etc. based on various parameters and information associated with work unit tasks other devices components etc. associated with DDC etc. Work unit adapters may provide among other things an interface to network elements so that the ingestion transformation and distribution of content based a work flow a work unit etc. may be executed.

The foregoing description of embodiments provides illustration but is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Accordingly modifications to the embodiments described herein may be possible.

The terms a an and the are intended to be interpreted to include one or more items. Further the phrase based on is intended to be interpreted as based at least in part on unless explicitly stated otherwise. The term and or is intended to be interpreted to include any and all combinations of one or more of the associated items.

While a series of blocks has been described with regard to an exemplary process illustrated in the order of the blocks may be modified according to other embodiments. In addition non dependent blocks may be performed parallel. Furthermore other processes described in this description may be modified and or non dependent operations may be performed in parallel.

The exemplary embodiments described herein may be implemented in many different forms of software firmware and or hardware. For example a process or a function may be implemented as logic or as a component. This logic or this component may include for example hardware e.g. processing system etc. a combination of hardware and software e.g. applications a combination of hardware and firmware or a combination of hardware firmware and software. The embodiments have been described without reference to a specific software code a specific hardware or circuit configuration etc. since the logic or the component can be designed to implement the embodiments based on the description herein.

In the preceding specification various embodiments have been described with reference to the accompanying drawings. However various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded as illustrative rather than restrictive.

No element act or instruction described in the specification and or drawings should be construed as critical or essential to the exemplary embodiments described herein unless explicitly described as such.

