---

title: System apparatus and method for accessing scheduling information
abstract: A system for accessing scheduling information. In one illustrative embodiment, a user can log into a phone system by entering their extension number and passcode, which allows the phone to assume their profile. The user then enters the credentials required to access their PC based calendar information, which is stored by a server application. The server application can look up the scheduling information that is stored in the user's PC based calendar application on a message server. The information can then be provided to the phone by the server application where it is displayed. Application programming interfaces can facilitate communications between the phone and the server application and the server application and the message server. Other information located on the message server can also be retrieved through the server application and is not limited to scheduling information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08699679&OS=08699679&RS=08699679
owner: Mitel Networks Corporation
number: 08699679
owner_city: Ottawa, Ontario
owner_country: CA
publication_date: 20100331
---
This application generally relates to communications and more particularly to accessing scheduling information on a data repository to display on a requesting phone.

In today s business environment professionals frequently go from one meeting to the next. Often to keep track of their meetings the professional would have to run back to their desk and login to their computer. The professional could then find out when and where their next scheduled meeting was located. Typically this information was set up in a PC based calendar application such as Microsoft s Outlook . In some instances by going back to their office and logging onto their computer valuable time would pass. This wasted time would result in the professional being late for meetings if not miss them completely.

While smartphones and personal digital assistants PDAs have become commonplace many companies still do not provide these devices to their employees. Furthermore many of these devices are not synced with their work PC based calendar application. As a result even though the professional uses a smartphone or PDA the professional would still have to return to their desk and login to their PC in order to access their PC based calendar application.

To overcome these previously described limitations professionals would take the time to manually copy their meetings from their PC based calendar application onto a paper agenda. Nevertheless this method is problematic in today s electronic age as meeting information such as the meeting location or a change in the start time could happen on the fly. Meeting organizers rely on attendee s having access to electronic calendars that inform them of changes as they happen something that is not possible when the professional does not have direct access to their PC based calendar application.

A need therefore exists for a system and method whereby the professional can access their scheduling information while overcoming the above described limitations as well as other limitations which will become apparent from the discussion below.

The description set forth below in connection with the appended drawings is intended as a description of presently preferred embodiments of the application and is not intended to represent the only forms in which the present application can be constructed and or utilized. The description sets forth the functions and the sequence of steps for constructing and operating the application in connection with the illustrated embodiments. It is to be understood however that the same or equivalent functions and sequences can be accomplished by different embodiments that are also intended to be encompassed within the spirit and scope of this application.

The present application relates to communications and more particularly to a server application for accessing scheduling information on a message server to display on a requesting phone. In one illustrative embodiment scheduling information can be obtained using a phone. Through the phone a user can log into a Voice over Internet Protocol VoIP phone system by entering their extension number and passcode. By logging into the VoIP phone system the phone can retrieve the user s profile which the phone can thereafter assume. The user s profile can provide a number of features and options for the phone. One feature a My Next Meeting feature can be invoked on the phone for retrieving scheduling information from a server application. Typically user credentials are provided the first time the user invokes the My Next Meeting feature. This can cause the server application on a web server to log into a message server using the user s credentials that are gathered from the phone. The server application can extract the scheduling information from the message server and send it on the phone.

The embodiment described above can provide a convenient tool that allows a user to avoid having to go back to their desk to find out their next meeting. Furthermore the tool can provide the ability for an individual who does not have a smartphone or personal digital assistant PDA to gain access to information on their next scheduled meeting as captured in their PC based calendar application by simply logging into a nearby phone. Generally described the tool can allow a user to gain access to information on their next scheduled meeting using a network phone.

In the illustrative embodiment the message server provided scheduling information. Scheduling information can include but is not limited to meetings appointments etc. Those skilled in the relevant art will appreciate that other types of information can be provided by the message server and displayed on the phone as well. This information can include a user s contacts email addresses tasks etc. Other data can also be retrieved and will become apparent from the discussion presented below.

As shown in an exemplary environment in which scheduling information can be distributed in accordance with one aspect of the present application is provided. A user can retrieve their scheduling information using an IP phone a server application and a message server . A phone system can be used as well. In the exemplary environment the IP phone the server application the message server and the phone system can be connected to a network . The environment illustrated in is provided for purposes of illustration and should not be construed as the only environment in which the present application can be used in. Fewer or more components can also be used within .

In typical embodiments the components can include logical connections. These logical connections can be achieved by a communication device coupled to or integral with the IP phone the server application the message server and the phone system . The communication devices are not limited to any particular type of communication device. The logical connections can be connected to the network which can take the form of a local area network wide area network personal area network campus area network metropolitan area network or global area network. Such networking environments are commonplace in office networks enterprise wide computer networks intranets and the Internet which are all types of networks .

The communications between the IP phone the server application the message server and the phone system described herein can be implemented as logical operations and or modules in one or more systems. The logical operations can be implemented as a sequence of processor implemented steps executing in one or more computer systems and as interconnected machine or circuit modules within one or more computer systems. Likewise the descriptions of various component modules can be provided in terms of operations executed or effected by the modules. The resulting implementation is a matter of choice dependent on the performance requirements of the underlying system implementing the described technology. Accordingly the logical operations making up the embodiments described herein can be referred to variously as operations steps objects or modules. Furthermore it should be understood that logical operations can be performed in any order unless explicitly claimed otherwise or a specific order is inherently necessitated by the claim language.

Individually the IP phone the server application and the message server will be described below. The phone system will be described with the IP phone . Numerous features and functions are provided within the description of each and will become more apparent from the following discussion. From time to time will be referred back to when discussing each component of the environment .

With reference now to a typical IP phone that can display user scheduling information in accordance with one aspect of the present application is provided. As shown the IP phone can include a graphics display feature access buttons and a keypad . While described as primarily working with an IP phone those skilled in the relevant art will appreciate that other types of phones can be used.

Typically the graphics display can be a liquid crystal display. The display can show text images and in some embodiments moving pictures. Generally most displays can be provided in color. Touch screen technologies known to those skilled in the art can also be implemented on the display removing the need for feature access buttons and possibly the keypad . As understood the display is typically built to show a large amount of information including scheduling information emails contacts or any other information that can be pulled from of the message server .

In some embodiments the IP phone can display HyperText Markup Language HTML or some other form of markup language such as Extensible Markup Language XML . In one embodiment the IP phone can execute Java applications. In these embodiments a browser can be installed or supported by the IP phone to parse and render the HTML or XML.

Continuing with feature access buttons can be located to the side of the display . The buttons can be aligned such that graphics provided on the display can match features associated with those buttons . When pressed the buttons can implement the specific feature provided on the display . For example the user can press a button that corresponds with a Hot Desk feature or a My Next Meeting feature. Other buttons can be associated with different features for example accessing the user s contacts and opening their email from the IP phone .

As further illustrated in the IP phone can include a keypad which can provide input. Typically the input is provided in the form of numerical information. As will be shown below the user can enter their extension through the keypad . The user can also provide a passcode or password to the phone using the keypad .

Returning to as shown the phone can communicate with the phone system to log the user into the phone . The act of logging in causes the phone to assume the user s profile that is stored in the phone system which can be referred to as a Hot Desk feature above. In one embodiment the user can provide their extension number and passcode to the phone system . After a successful login the phone system can return the user s profile to the phone .

The phone can have an HTML based application programming interface API that allows an external HTML based application to use the phone s graphical display . The API can allow the external HTML application to be notified of button presses on the phone . The API can also provide the IP address of the external web application to the phone . Alternatively an XML or Java based phone API supplied by the phone manufacturers can be provided rather than the HTML API. In operation the external application can use the phone s display and buttons in the same manner as a PC based web application uses the PC s display and keyboard. The external application provided by the server application can provide numerous capabilities to the user of the phone .

Continuing with the phone can also provide the server application with the extension to access scheduling information. The extension can be provided through the API described above or can be part of a separate channel that interfaces with the server application .

In some embodiments the phone can have access to other information associated with the user. For example the user s emails can be fed directly into the IP phone . The user s contacts can also be provided. Generally information that can be provided by the message server can be served and displayed by the phone . In some embodiments the user can schedule meetings change meeting times or cancel meetings through the phone . The feature access buttons along with the keypad can be used to perform a variety of functions.

Through the IP phone a number of operations can be performed. A Hot Desk feature can be used to log the user into the phone using an extension number and passcode which will be shown within . This feature can cause the phone to retrieve a user profile from the phone system . In addition thereto the IP phone can be used to retrieve a user s scheduling information as depicted in . Generally the user can enter their username and password so that the scheduling information can be obtained from the message server . Often the credentials are stored by the server application which facilitates communication between the IP phone and the message server . While numerous processes are provided those skilled in the relevant art will appreciate that fewer or more processes can be used.

With reference now to a flow chart providing exemplary processes for syncing the IP phone with a user s profile in accordance with one aspect of the present application is provided. The provided flow chart is one way to Hot Desk the IP phone and should not be construed as the only way. The processes can begin at block .

In typical embodiments before the user can access scheduling information from the message server the user can initiate a Hot Desk feature shown within which depicts a typical screen on the display of the phone . The exemplary screen also shows other options that can include a Phone Book feature a Messaging Feature attendees and a My Next Meeting feature which will be described below. Each of these features can be associated with a feature access button which is implied in .

At block of and when the Hot Desk feature is initiated the phone can request for information from the user so that the phone can be connected with the phone system . Generally the user provides their extension number. In one embodiment the user can enter in their work number. The user can also provide a passcode associated with their extension number. At block the phone can receive user information entered in by the user.

The phone can then sync with the phone system at block . The user provided information can be sent to the phone system and thereafter the phone system can provide user profile information to the phone . At block the phone can receive the user profile. By running the user profile on top of the phone the phone in essence acts as a proxy for the user s home computer. Through the Hot Desk feature the user can gain access to the My Next Meeting feature as well as many other features and options on the phone . The processes can end at block .

In typical embodiments after the user profile is retrieved from the phone system the user can access their scheduling information. illustrates a flow chart that provides exemplary IP phone processes for retrieving and displaying the user s scheduling information in accordance with one aspect of the present application. The processes can begin at block .

As shown in a button on the phone associated with a My Next Meeting option is provided. Generally the first time the user invokes the My Next Meeting feature or any other feature to retrieve information off the message server the user can be prompted to enter their message server username and password at block . At block the phone can receive these message server credentials.

The phone can then make a request to the server application for user scheduling information at block . This can be performed via the API provided by the phone . Initially the username and password can be sent with the request as well as the extension number. In addition the phone device ID can be provided. In turn the server application can log into the message server using the username and password with the message server providing the scheduling information which can then be displayed on the phone that sent the button notification.

After the initial login the user provided information can typically be stored on the server application so that the user does not have to enter it again. In future logins the application can skip having to ask the user for their message server username and password and automatically log the user into the message server without having to ask for the user credentials. In typical embodiments once the information is stored within the server application the user can use any phone to connect to the server application using their extension number.

At decision block a determination is made by the phone whether scheduling information was received from the server application . Typically the phone can make this determination through error messages received by the server application . An error message can arise when no scheduling information is stored within the message server . Alternatively an error message can be provided when a network error occurs. Those skilled in the relevant art will appreciate that different errors can arise for a number of different reasons.

When scheduling information has not been returned by the server application the phone can provide a message on the display indicating an error occurred when trying to retrieve the scheduling information at block . In typical embodiments the error message can provide specific details on why the error occurred for example that there was no scheduling information for the user. The phone processes can then end at block .

Returning to decision block when scheduling information is returned by the server application the information can be displayed at block . A separate screen can be shown as depicted in . On the screen the date time topic and location can be listed. In addition attendees can also be shown.

In one embodiment the IP phone can be used to contact missing or absent attendees. As shown in the attendees are Don Smith Simon Binder Maureen Young and John Doe . The IP phone can be linked such that it can have direct access to the attendee s office phone or mobile phone so that the missing attendee can be reached. For example a user of the phone can select Don Smith . When selected the attendee s information can be shown as depicted in . The information can include but is not limited to the attendee s cell phone work phone instant message identifier and email address. In the same or related embodiment the phone can reach the attendee at another scheduled meeting typically through a phone located at the meeting site. The meeting information for the attendee can be pulled from the message server . In one embodiment the meeting information can be displayed on the attendee s phone when called.

The user can also view the scheduling information for the current day as depicted in by pressing an access button associated with the View Today feature. Those skilled in the relevant art will appreciate that there are numerous types of screens that can be shown when presenting the scheduling information and those presented above should not be construed as limiting the present application. Information that can be displayed on the IP phone can include but is not limited to the subject date start time duration and attendees of the meeting.

In one embodiment instead of retrieving information from the display the user can call into the server application to retrieve their scheduling information. When called the server application can obtain the user s scheduling information from the message server and provide that information to the IP phone using an automated voice system. The phone processes can end at block .

Previously described the user logged into the phone system causing the phone to assume the user s profile. The phone could then present the features that they had programmed against their use profile. For example the My Next Meeting feature presented above could be one of these features and could allow the user to access their scheduling information on the phone . When the user pressed the button associated with the My Next Meeting feature the API would enable the server application to receive button press indications for that button . The phone would know who is logged in because of the extension number used to log in. The extension number could then be passed to the server application via the phone API so the application could use those credentials to log into the messaging server . The server application will now be described in more details.

The application can run on a server that has a combination of hardware and software designed to retrieve and provide services to the phone and the message server . In one embodiment the server can be a private branch exchange PBX phone system. In another embodiment the server can be a communication service provider. Those skilled in the relevant art will appreciate that the functions and features provided below by the server application can run on top of numerous platforms such as Microsoft s Internet Information Server Web Server which is depicted in .

As shown the server application can include a web application and a web service . The web application can serve up the phone interface used to invoke numerous features and display the scheduling information on the user s phone . The web service can interface with a data repository contained within the company s message server to extract the user s scheduling information. In one embodiment the web service can be programmed to directly interface with Microsoft s Exchange Server which is one type of message server.

The web service can also utilize an API provided by the message server . Access to the data stored in the message server can be from across an intranet as well as the Internet making for a flexible solution from a deployment perspective. Security can be maintained through use of individual user credentials provided by the user to gain access to the data stored within the message server . These credentials can be stored by the server application to avoid requiring the user to re enter them every time they want to use the application.

When extracting the scheduling information from the message server several options can be provided. The extracted information can be determined by the user through the phone . In one embodiment when extracted the scheduling information can include information on the current date. In another embodiment the extracted information can include the next scheduling entry based on the current time. When there are no subsequent entries for that day the server application can extract the scheduling information for the following day. If no entries are entered for that day then the server application can continue to search through the schedule until an entry is found. In other embodiments the server application can provide an error message or some other indicator that no scheduling information can be found.

At block the server application can request scheduling information from the message server using user credentials. This can occur on the web service side of the server application . The web service can use an API generated by the message server to communicate back and forth with the message server . In typical embodiments the user credentials can include the user s message server username and password which was entered by the user using the phone dial pad or touch screen keyboard the first time they invoked the My Next Meeting feature. As described above the user information can be the same as what the user provides to log into their PC.

At decision block the server application can determine whether the scheduling information was received from the message server . Typically the message server can return an error message when the message server cannot locate scheduling information for the user. In another embodiment an error message can be returned when the user cannot be verified. Known to those skilled in the art numerous types of errors can occur.

When the message server returns an error message to the server application at block an error message can be returned to the phone . In one embodiment the user can be verified by the server application instead of the message server . The processes for the server application can end at block .

Returning to decision block when the server application receives scheduling information from the message server the scheduling information can be formatted at block . This can occur on the web application . Typically the formatting includes changing the information to a markup language such as XML or HTML so that the IP phone can parse and render it.

At block the server application can provide the scheduling information to the phone . At optional block the server application can store the user s credentials for future reference. The user s credentials can be stored in conjunction with the phone s information so that the user can log in more than one time. The credentials can be stored in the server application against the extension number for the user who provided them. By doing this typically any phone can assume the user s profile. When the user credentials have been stored and when the My Next Meeting feature is invoked the server application can simply look up the user s credentials for that extension number and automatically log them into the message server . In other embodiments the information can be stored on the message server or the IP phone . The processes for the server application can end at block .

As shown in and described above the message server can locate the user s scheduling information and provide it to a server application . Associated with the message server can be a data repository. The message server can be deployed by a company that typically stores scheduling data for the user s client calendar application e.g. Microsoft Outlook . The Microsoft Exchange Server is a popular message system that can include a mail server an e mail client and groupware applications the most commonly used being a calendar and contact application. While not dependent on Microsoft Outlook the present application can be used to work with Microsoft Outlook . Those skilled in the relevant art will appreciate that there can be a number of different alternatives.

In typical embodiments the message server can provide a web service API that allows a third party application such as the server application to gain access to its data. The API can be utilized to extract the data to be displayed on the user s IP phone .

At decision block the message server can determine whether the user is in the system. Typically this can be determined by the act of logging into the message server using the user credentials. When the login fails the user is invalid or the credentials provided by the user are incorrect. The message server can also check whether there is any scheduling information. At block and when no scheduling information can be located for the user or they cannot be verified the message server can return an error message to the server application . The processes can end at block .

When the user can be logged in the scheduling information for the user can be returned by the message server at block . The message server can retrieve the scheduling information from the data repository . The repository can be updated through a PC based application that is operated from the user s PC. The processes can end at block .

In accordance with one aspect of the present application a system is presented. The system can include an IP phone displaying a user s profile. The user s profile displayed on the IP phone can provide a calendar feature that when selected retrieves calendar information from a message server through a server application the message server storing the calendar information on a central repository.

In one embodiment the user s profile displayed on the IP phone can be received from a phone system the phone system verifying an extension number and a passcode received from the IP phone to provide the IP phone with the user s profile. In one embodiment a second IP phone can display the user s profile received from the phone system the second IP phone retrieving the calendar information from the message server through the server application when the calendar feature is selected. In one embodiment a username and a password can be stored with an extension number of the IP phone on the server application after an initial login to the message server.

In accordance with another aspect of the present application a phone is provided. The phone can include an input device a display at least one processor and a memory operatively coupled to the processor the memory storing program instructions that when executed by the processor causes the processor to perform processes. The processes can include receiving user information from the input device and associating the phone with a profile using the user information. In addition the processes can include providing the profile on the display and receiving receive user credentials from the input device. The processes can also include accessing scheduling information using the user credentials and providing the scheduling information on the display.

In one embodiment the user information can include an extension number and a passcode. In one embodiment the user credentials can include a username and a password. In one embodiment associating the phone with the profile using the user information can include retrieving the profile from a phone system. In one embodiment scheduling information can be received in a markup language.

In one embodiment the memory storing program instructions when executed by the processor causes the processor to further receive input from the input device for adjusting the scheduling information. In one embodiment adjusting the scheduling information can include cancelling a meeting. In one embodiment adjusting the scheduling information can include changing a time for a meeting. In one embodiment the memory storing program instructions when executed by the processor causes the processor to further receive input from the input device for contacting a meeting attendee.

In accordance with yet another aspect of the present application a method for providing user data stored within a repository to a network phone synced with a user profile is provided. The method can include receiving user identification information from the network phone synced with the user profile. In addition the method can include retrieving the user data stored within the repository using the user identification information. The method can also include formatting the user data retrieved from the repository. The method can include providing the formatted user data to the network phone synced with the user profile.

In one embodiment the method can include providing an interface for display on the network phone whereby the user identification information is entered in and the user data is shown. In one embodiment the method can include storing the user identification information on the server.

In one embodiment retrieving the user data stored within the repository can include accessing a calendar based application. In one embodiment accessing the calendar based application can include extracting user appointments on a date of access. In one embodiment accessing the calendar based application can include extracting a next appointment. In one embodiment formatting the user data can include setting up the user data within a markup language.

The foregoing description is provided to enable any person skilled in the relevant art to practice the various embodiments described herein. Various modifications to these embodiments will be readily apparent to those skilled in the relevant art and generic principles defined herein can be applied to other embodiments. Thus the claims are not intended to be limited to the embodiments shown and described herein but are to be accorded the full scope consistent with the language of the claims wherein reference to an element in the singular is not intended to mean one and only one unless specifically stated but rather one or more. All structural and functional equivalents to the elements of the various embodiments described throughout this disclosure that are known or later come to be known to those of ordinary skill in the relevant art are expressly incorporated herein by reference and intended to be encompassed by the claims. Moreover nothing disclosed herein is intended to be dedicated to the public regardless of whether such disclosure is explicitly recited in the claims.

