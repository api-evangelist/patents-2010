---

title: Systems and methods for location, motion, and contact detection and tracking in a networked audiovisual device
abstract: Systems and methods for location, motion, and contact detection and tracking in a portable networked device are disclosed. A portable device may include a motion detection unit including an accelerometer for detecting accelerations in one or more axes. Signals associated with the detected motion are processed to generate estimates of device acceleration, velocity, and relative and absolute locations. Additional processing may be performed to detect user gestures or other user input relevant to portable device control. Particular motion or vibrational characteristics may be also be detected and used by other processes in the portable device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08121808&OS=08121808&RS=08121808
owner: Chumby Industries, Inc.
number: 08121808
owner_city: San Diego
owner_country: US
publication_date: 20100816
---
This application is a continuation of U.S. patent application Ser. No. 11 953 756 entitled SYSTEMS AND METHODS FOR LOCATION MOTION AND CONTACT DETECTION AND TRACKING IN A NETWORKED AUDIOVISUAL DEVICE filed Dec. 10 2007 now U.S. Pat. No. 7 778 792 which claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application Ser. No. 60 869 297 entitled SYSTEMS AND METHODS FOR LOCATION MOTION AND CONTACT DETECTION AND TRACKING IN A NETWORKED AUDIOVISUAL DEVICE filed Dec. 8 2006 the contents of which is incorporated by reference herein in its entirety for all purposes. This application is related to U.S. Utility patent application Ser. No. 11 845 018 entitled CONFIGURABLE PERSONAL AUDIOVISUAL DEVICE FOR USE IN NETWORKED APPLICATION SHARING SYSTEM to U.S. Utility patent application Ser. No. 11 845 026 entitled SYSTEM AND METHOD FOR TRANSFERRING ELECTRONIC CONTENT TO NETWORKED PERSONAL AUDIOVISUAL DEVICES to U.S. Utility patent application Ser. No. 11 845 027 entitled SYSTEM AND METHOD FOR AUTOMATICALLY UPDATING THE SOFTWARE OF A NETWORKED PERSONAL AUDIOVISUAL DEVICE and to U.S. Utility patent application Ser. No. 11 845 021 entitled NETWORKED PERSONAL AUDIOVISUAL DEVICE HAVING FLEXIBLE HOUSING the contents of each of which is hereby incorporated by reference herein in its entirety for all purposes.

It is well known that broadband Internet connectivity is becoming substantially more pervasive among consumers as a result of competition among service providers utilizing various different technologies e.g. cable digital subscriber line DSL satellite . In many households personal computers PCs constitute the primary users of the bandwidth furnished by these broadband connections. In order to facilitate sharing of the Internet connection among PCs in a given household a variety of wired and wireless home networking technologies have been utilized.

As a result of the impracticality of installing Ethernet cable throughout a residence RF based wireless networking technology is becoming increasingly commonplace among consumers. Although systems based upon the 802.11b or Wi Fi wireless networking standard may currently be the most pervasive versions of the 802.11 standard offering increased bandwidth have been introduced and yet higher bandwidth approaches have been proposed.

The increased bandwidth available within the home has increased the usage of a number of different services such as Internet based delivery of digital audio video and graphic content. However since many of these services are facilitated by a desktop or notebook PC capable of communication over a broadband Internet connection users are forced to remain proximate to their respective computers in order to utilize such services. Although other strategies to leverage the availability of broadband Internet connectivity within the home are currently being developed many of these approaches involve creation of a relatively powerful costly centralized communications hub e.g. a PC with enhanced media capabilities or a multi purpose cable set top box . Unfortunately this typically requires either the purchase of an expensive hardware device or extended subscription plan and constrains the extent to which Internet enabled entertainment or other services are enjoyed outside of the immediate vicinity of the centralized hub device.

Accordingly the increasing availability of wireless bandwidth within the home and elsewhere creates an opportunity for economically leveraging this bandwidth in a flexible consumer friendly manner.

The present invention generally relates to a system comprised of a set of personalized audiovisual devices in Internet based communication with a service provider. It is anticipated that the personalized networked audiovisual devices will be commercially distributed under the trademark CHUMBY and may also be referred to herein as CHUMBY devices or portable devices. 

During communication with the service provider each portable device periodically receives a set of application programs or widgets which are sequentially executed by the portable device after being received from the service provider or locally from a personal computer e.g. via a USB connection . Since each portable device is typically Internet enabled each may also be remotely configured and otherwise personalized via the portable device service provider through a Web browser executed by a remote terminal e.g. a PC or wireless handset . Such personalization may include for example specifying the set of widgets provided to a given portable device as well as their sequence and priority of execution.

As is described hereinafter it is a feature of embodiments of the invention that a user configuring a portable device via an interface provided by the portable device service provider may drag and drop icons representative of various widgets onto a rectangular or other portion of the interface representative of the screen of the portable device being configured. In this way the layout of the screen of the portable device may be remotely configured by the owner of the device. Although each portable device will preferably be capable of being configured in this manner in certain embodiments each may also come loaded with a default set of widgets e.g. an alarm clock widget disposed to be executed by the portable device upon its registration with the portable device service provider. Once a portable device has been configured i.e. with either a default or user specified configuration it will generally execute the widgets defined by the configuration without user intervention.

The configuration of a portable device may also specify the events or conditions under which the sequence of execution of widgets is to be altered or interrupted and allows certain widgets to be accorded the highest available priority with respect to execution. For example an alarm clock widget could be granted such priority in order to ensure that its alarm function would not be prevented from being actuated at the scheduled time due to contemporaneous execution of another widget. In one embodiment the Web interface provided by the portable device service provider is in the form of a timeline enabling the sequence of execution of the widgets associated with a given portable device to be controlled in an intuitive manner. In an exemplary implementation the timeline defines the order in which the widgets are to be played in a constantly repeating sequence that is the timeline is representative of the complete set of widgets played by a given portable device as well as their relative order of execution. However certain widgets e.g. the alarm clock widget can be specified to be actuated at a given time by appropriately setting the applicable configuration element of such widgets.

Although in exemplary embodiments it is not contemplated that more than a single content related widget be operative at any given time a system configuration widget may be utilized to run concurrently with each such content related widget in order to for example control the relative priority of execution of such content related widgets and system settings such as loudness brightness navigation and the like.

In one embodiment portable devices are each capable of wireless communication in accordance with an accepted wireless networking standard such as the 802.11b or 802.11g standard. Accordingly in homes or other environments containing one or more wireless access points multiple portable devices may be distributed throughout the coverage area of the access points.

Among the features of the invention is the capability of the interface presented by each portable device to change in accordance with the nature of the widget currently being executed by the device. For example a clock radio widget could be employed to produce audio and visual imagery consistent with a conventional alarm clock at an appointed time in the morning. In exemplary embodiments the clock radio widget would allow for the selection of a standard wake up chime or choice of several different audio programs. Later in the day the device interface could be devoted to a rotating selection of several standard information screens such as news headlines local weather sports scores stock market updates horoscope and the like.

In accordance with another aspect of the invention users of portable devices may optionally participate in a portable device network also denoted herein as a CHUMBY Network along with other users by logging on to an associated Web site e.g. www.chumby.com hosted by the portable device service provider. At this site also referred to hereinafter as the CHUMBY site or portable device site a user will be able to register with the portable device network and access services enabling the basic capabilities of the user s portable device to be enhanced and refined. Such enhancements may comprise for example the opportunity to send receive widgets and other content to from other portable device users for improved personalization of the device s generic information features more detailed alarm setting capabilities and better selection and configuration of audio capabilities.

In an exemplary embodiment related to a CHUMBY Network registration which would potentially require payment of a periodic subscription fee enables members of the Network to access a wide array of additional widgets. It is contemplated that certain of such widgets would be developed by the entity operating the CHUMBY Network while other widgets would be developed by independent developers. In addition members of the CHUMBY Network would also be able to communicate with the CHUMBY devices of other members provided that permission for such communication has been authorized by the other members. Such communication could entail for example the sending of a widget and corresponding data from the CHUMBY service provider to a member of the CHUMBY Network the receiving member in response to a request sent to the CHUMBY service provider by another member the sending member . For example a sending member could after receiving permission from a receiving member request the CHUMBY service provider to send a photo viewer widget to the receiving member. In addition the sending member could specify that a link be established between the photo viewer widget and pictures uploaded by the sending member to the CHUMBY service provider. In this way the receiving member could without any effort other than providing authorization to the sending member enable their CHUMBY device to essentially automatically receive and display a sequence of photos provided by the sending member. Similarly while traveling a sending member could send a personalized wake up message to the CHUMBY device of a consenting receiving member. Finally a sending member could send widgets to a group of receiving members included on a buddy list of the sending member which could be established after the receipt of suitable permissions from those proposed to be included on the list.

In an exemplary embodiment members of the CHUMBY Network are enabled to completely configure through any Web browser their respective CHUMBY portable devices by specifying a set of premium widget programs or content to play or be shown rotationally or in some other user defined sequence on their respective CHUMBY portable devices. Such premium widgets and content may include for example webcam shots RSS readers filtered news reports personalized stock performance data short animations or movies podcasts or audio files to function as the audio sources for alarms or reminders scheduled to be triggered at different times throughout the day.

As is discussed further below one exemplary implementation of a CHUMBY portable device is comprised of a malleable housing attached to a rigid core structure supporting a display screen and the electrical components of the device. The malleable housing would generally encompass all of the electrical components of the CHUMBY device including those related to acceleration motion sensing detection tracking and processing and will preferably be filled with an appropriate material or otherwise constructed to enable it to be squeezed or otherwise deformed by a user.

Moreover in one exemplary embodiment the core structure is designed to be capable of being removed from the housing and snapped in to a different housing. A set of bend sensors are enclosed by the malleable housing in order to permit the detection of such a squeezing or similar action by a user. In this way a user is afforded the opportunity of conveying information through physical deformation of the portable device in addition to the more conventional textual and other modes of communication facilitated by the display screen. For example in one exemplary system a user could initiate the conveying of a hug to another user by squeezing the housing of the user s portable device in a particular manner. The electrical signals generated by the sensor array in response to this squeeze would be appropriately interpreted and the user s portable device would communicate via the portable service provider a hug message to the intended recipient user. At this point the recipient s portable device could register receipt of the hug message by for example illuminating an indicator light or sending a message to the display of the device.

In certain embodiments a portable device may have modules including hardware software or both hardware and software in combination for use in detecting and tracking device location and relative position as well as for tracking physical contacts with the device and for detecting and tracking motion gestures or other vibrational actions. In one exemplary embodiment a portable device may include an accelerometer and related hardware and software to implement a variety of motion related functions including motion detection position identification and tracking gesture recognition as well as other user contact such as detecting a user squeezing or squishing the device.

Referring again to the system also includes a plurality of user computers disposed for communication with the service provider via an access network not shown and the Internet . Each user computer executes a Web browser capable of displaying Web pages generated by the service provider through which a user may configure one or more portable devices . As mentioned above such configuration may include for example specifying a set of widgets to be sent to a particular portable device and their sequence of execution adjusting audio or visual parameters relating to such execution defining and managing a user s portable device network including for example defining a buddy list comprised of other portable device users with respect to which the portable device is permitted to communicate and defining the layout or other aspects of the user interface presented through the screen of the portable device . To this end a given Web browser may when in communication with the service provider present a rectangular configuration window corresponding to the display screen of a corresponding portable device . By dragging and dropping iconic representations of widgets or content files into such a configuration window a user may personalize the behavior and user interface presented by the corresponding portable device . Moreover users may access the service provider via a Web browser for the purpose of sending widgets or other information to other users for execution or display by their respective portable devices . In one embodiment the service provider maintains a record of the permissions granted among users of portable devices in order to determine which users are authorized to provide via the service provider a given user with widgets messages or other information and vice versa. Such permissions may be granted or withdrawn by a given user via appropriate pages presented by a Web browser in communication with the service provider .

In the exemplary embodiment a configuration window may be utilized to configure one or more portable devices consistent with the permissions granted by the users of such devices . In addition a user of a given portable device may elect to have the interface of the device mirror or otherwise replicate that of another device subject to the requisite permissions being granted. Similarly one or more portable devices may be configured to mirror the interface for a virtual portable device or vice versa defined via a configuration window.

Different users of a given portable device may be accorded different roles or privileges in configuring the device . For example a user granted supervisory privileges could be given the authority to filter or monitor the widgets or content sent to the portable device . This would enable for example parents to manage and or monitor the widgets and content executed and displayed by the one or more portable devices used by their children. Moreover administrators of the system would typically possess an elevated level of privilege relative to users of portable devices within the system . Also if a specific widget performs functions requiring communication with a web site controlled by a third party in order to access content the developer of the widget may create a hierarchical user model to regulate such access and perhaps the functions of the widget .

Attention is now directed to which illustrates an exemplary distribution of portable devices throughout a residence or other building having a number of rooms . In the embodiment of each portable device is equipped with wireless transceiver e.g. a Wi Fi transceiver to facilitate communication with one or more access points . Each access point is interconnected with an access network by way of for example a local area network thereby enabling Internet based communication to be established between the service provider and the devices within the residence .

Turning now to a block diagrammatic representation is provided of the principal components of an embodiment of a portable device of the present invention. As shown the device includes a central processing unit CPU memory including volatile e.g. SDRAM and non volatile memory e.g. flash memory an audio interface a wireless communications interface and a sensor interface . In an exemplary implementation the CPU comprises a microprocessor e.g. based upon an ARM core configured to run a Linux kernel and having attendant capabilities for graphics rendering. The device may or may not include a battery backup unit which serves to preserve real time information in the event of a power outage and may also serve as a primary power source if the user desires untethered operation. The battery may or may not be rechargeable. The operating system is made aware of the power status and actively configures the portable device and the running widget to either save power or modify the user interface consistent with untethered operation.

The portable device may or may not include a Security Module not shown . If included the Security Module serves to store secrets and compute authentication algorithms in a fashion that fully isolates core security routines from otherwise unsecured code running on CPU . The secret storage and authentication capability may or may not be used by the client server communication protocol to enable authenticated and encrypted communication capabilities for among other things financial transactions. The Security Module is initialized in such a way that there is no default mapping of the secrets contained within the module versus the identity of the hardware of the user. Furthermore the secrets are revocable and a routine exists for generating new secrets based upon a master secret that is never associated with a specific user s profile. This enables opt in policies for privacy and a limited ability to revoke identity information barring forensic network analysis thereby enabling anonymity as well. The anonymous trust network can be extended with a variety of client server protocols to enable a wide range of anonymous transactions including but not limited to cash and content transactions.

As shown software comprising widgets or other applications received from the service provider are stored in memory and loaded into SDRAM or non volatile memory for execution by the CPU . In one embodiment widgets are downloaded from the service provider to portable devices in the format of a Macromedia Flash file also referred to as a Flash movie . As is known by those skilled in the art Flash movies are usually accorded a .swf file extension and may be played by a Flash Player developed and distributed by Adobe Systems. Accordingly the memory also includes a Flash Player as well as a copy of the operating system executed by the CPU . In other embodiments widgets may be developed in accordance with other formats and played by players compatible with such other formats.

The portable device also includes a display such as liquid crystal display LCD controlled by an LCD controller which may or may not be integrated into the CPU . The display visually renders iconic representations of the widget programs stored within the portable device and images generated in connection with the execution of such widgets by the CPU . In an exemplary implementation a touchscreen overlays the LCD and is responsive to a touchscreen controller . In one embodiment a user may induce the portable device to enter a user interface mode or U.I. mode by touching the touchscreen . When this occurs the touchscreen controller informs the CPU which then instructs the LCD to enter U.I. mode and display representations of arrows buttons and or icons selectable by the user via the touchscreen . As is discussed below selection of one or more of these elements during operation in the U.I. mode enables the user to control various aspects of the operation of the portable device. In alternate implementations the LCD and touchscreen may comprise an integral device controlled by an integrated controller.

Turning to there is shown an exemplary user interface generated by the LCD during operation of the portable device in U.I. mode. As shown the interface defines an address book icon a heart shaped icon a right arrow button a left arrow button and an exit U.I. mode icon . Selection of the address book icon brings up a personalized list of other users of portable devices to which it may be desired to send widgets or otherwise communicate. A user may from any Web browser access a Web page generated by the service provider and designate a favorite widget. Alternatively a user may press a virtual touchscreen based button on his or her portable device to designate the current widget as the new favorite widget. When the user then selects the heart shaped icon on his or her portable device an iconic representation of this favorite widget e.g. a clock widget replaces the heart shaped icon and enables the user to immediately activate i.e. cause the CPU to execute the program instructions corresponding to such favorite widget. Alternatively selection of the heart shaped icon or other predefined icon results in the portable device becoming configured in accordance with a favorite or other profile rather than executing a favorite widget. Of course certain profiles may be specified to include only a single widget such as for example an alarm clock or photo viewer widget.

Referring again to selection of the right arrow button advances one widget in a user defined or default widget sequence or just skips ahead in implementations in which widgets are chosen to be displayed randomly. Similarly selection of the left arrow button results in going back one widget in the user defined or default widget sequence. As the buttons and are selected an iconic representation or avatar corresponding to the currently active widget is displayed in a display box . If it is desired to configure the currently active widget the exit U.I. mode icon is selected and the U.I. mode interface changes to a screen though which the user may adjust parameters of the active widget e.g. set time or alarm in the case of an active clock widget .

In certain embodiments a physical button element not shown may be provided proximate the LCD screen to enable navigation through menus and the like presented by the LCD screen . In one implementation this button element is cross shaped in order to facilitate two dimensional navigation and may further include a smaller dedicated button e.g. in the center of the cross associated with a specific widget e.g. clock widget . Pressing this dedicated widget would interrupt the operation of all other widgets.

In implementations in which two dimensional navigation through the user interface of the portable device is supported users may be provided with the ability to navigate forward and back in the configured widget timeline. Similarly users may navigate up and down a stack of related widgets. This function depends on the implementation of the concept of widget categories i.e. associating widgets into logical categories that can be displayed sequentially if configured to be displayed. An example of a category could be News. Widgets included within this category could include for example a local news widget a sports news widget an entertainment news widget a business news widget and the like. For each category there would be a default widget which is designated by the user on the associated portable device web site for each category selected to be displayed by the user s portable device.

If more than one widget in a category is selected then the widgets are conceptually stacked with the default widget being 

If a widget for a given category e.g. News is displayed and there exist additional widgets in the category which are also configured for display then in the exemplary embodiment these additional widgets are stacked below the displayed widget. In this case the user may take some predefined action with respect to the user s portable device e.g. perhaps selecting a control on the touchscreen or accessing a function via the control panel which is instantiated via actuating the bend sensor in order to cause the next widget in the stack for that category to be displayed. The portable device may be configured such that taking further predefined actions of the same type will cause the widgets either above or below in the stack to be displayed as designated by the user. The last widget that is displayed in the stack for the applicable category when the portable device cycles to the next widget category will be the widget displayed in the next cycle for the just exited category e.g News .

The tabular illustration below provides a conceptual layout of exemplary widget stacks in various categories 

The following provides a conceptual representation of the case in which the user has navigated into widget stacks for News Entertainment and Sports 

Attention is now directed to which provides various perspective views of an exemplary portable device configured with a malleable housing comprising a rubber type frame in combination with a fabric material. The housing surrounds a core structure and a plush interior fill material not shown in . The rubber type frame fabric and fill materials collectively impart a soft and malleable feel to users handling the portable device.

In one embodiment the rubber type frame is composed of Texin a soft tactile rubber like material similar to TPE thermo plastic elastomer . The frame provides structure and form to the housing and allows the core electronics unit to be replaced and inserted. The frame will generally be manufactured in a relatively flattened configuration and then manually flexed or curved and stitched to the fabric when assembling the housing the portable device.

Turning now to interior to the flexible housing of an exemplary embodiment of the device there is included daughterboard circuitry containing an external power switch external power supply connector external headphone connector external USB connector internal left and right speaker connectors internal 9V back up battery connector internal bend sensor connector and internal Chumbilical connector. In one implementation the Chumbilical connector is used to connect all the signals received processed by the daughterboard to the core electronics unit of the portable device which is press fit into the soft TPE frame. Also positioned interior to the flexible housing are a pair of speakers for left and right audio output as well as a bend sensor and various cabling required to attach such elements to the daughterboard.

Referring to a flat pattern commonly used in soft goods and garment manufacturing is used to define the exterior structure of the flexible housing or bag of an exemplary portable device CHUMBY bag . Any number of artistic design elements can be added to the exterior fabric material of the CHUMBY bag to add dimension and visual features. The use of a fabric type enclosure for the portable device provides for unlimited possibilities for product housing creation both by the original manufacturer and end users such as craftspeople hobbyists etc. and is believed to represent a novel approach in the design of consumer electronic and or wireless devices. Fabric tags patches or other fabric garment related items can be stitched or otherwise attached to the exterior housing of the portable device to convey product or corporate information such as a logo.

The core electronics module will generally include for example a main circuit board LCD display touchscreen ambient light sensor USB WiFi dongle 9V backup battery and an RF shield. This core module is designed to be removable from the frame by the user of the portable device. It is typically connected into the housing portable device via a 22 pin cable assembly also referred to herein as a Chumbilical . 

The WiFi dongle is a part of the core electronics module and provides 802.11 wireless networking support. In an exemplary embodiment the WiFi dongle attaches externally to the core electronics.

The backup battery currently consisting as a standard 9V alkaline is used to provide backup supplemental power to the portable device in the event of failure of the primary power supply. The backup battery is mounted onto the RF shield and is meant to be replaceable by the user. The RF shield is positioned on a back side of the core electronics module.

The daughterboard provides connectors available to the user including power input headphone output and external USB style connector for future accessories and or facilitating device upgrades. The daughterboard is clamped to the fabric in between the daughterboard front and rear bezel components which are made of rigid ABS type plastic. The daughterboard connects to the core electronics via the Chumbilical .

In an exemplary embodiment the portable device includes a pair of internally mounted speakers to provide stereo sound. The speakers are held in place using square pouches sewn into the interior of the unit. The pouches each have a small drawstring to keep the speakers in a relatively fixed position within the interior of the portable device. Both speakers connect to the daughterboard.

The bend sensor is connected to the daughterboard and may comprise a flexible resistive element which varies in resistance based upon the angle of flex of the sensor. Accordingly the bend sensor is capable of detecting physical squeezing of the soft housing of the portable device. Signals from the bend sensor are processed e.g. by the core electronics module or dedicated electronic circuitry and generally will precipitate performance a defined action which may be dependent upon characteristics of the currently active widget. The bend sensor connects to the daughterboard. The bend sensor will generally be attached to the inside of the CHUMBY bag and oriented parallel to the vertical access of the portable device. In other embodiments one or more displacement sensors may be used to effect the same function.

Attention is now directed to exemplary user interface screens of a portable device shown in to which reference will be made in describing a process for calibration of bend sensors within the device. When a user squeezes the back of a portable device and displaces the bend sensor beyond the calibrated tolerance the Control Panel function is activated and the appropriate user interface is displayed . From a settings screen accessed via the Control Panel of the user can then access the squeeze calibration function to recalibrate the bend sensor.

Although in certain embodiments the flexible or malleable housing of each portable device is intended to be essentially permanent and not replaced in other embodiments such housings may comprise interchangeable skins designed to be easily detached and replaced at the discretion of the user. In such implementations the portable device may be configured to operate in accordance with various profiles depending upon the particular skin currently attached to the underlying hardware core of the device. Specifically one or more sensors could be deployed upon the core of the portable device in order to read electronic identifiers embedded within the various skins disposed to be employed as the housing for the portable device. Each identifier could consist of a persistent non volatile storage module containing unique identifying information and would be physically configured so as to make electrical or radio contact with a corresponding sensor on the core of the portable device upon its skin becoming attached to the device core. The information read from such embedded identifiers could be used to inform the control system of the portable device of the identity of the skin currently enveloping the core of the device. Certain of such skins could for example include characteristics or features suggestive of various applications e.g. clock radio or boom box or intended operating environments e.g. car kitchen workshop 

Once a new skin has been attached or otherwise secured to the core of a portable device and the information from the embedded identifier has been read the portable device may send a message to the service provider indicative of its current skin e.g. skin . In response the service provider may reply with a message instructing the portable device to utilize a particular profile e.g. profile . It is contemplated that users may elect to define via a Web browser in communication with the service provider profiles for each of their skins or simply utilize default profiles available from the service provider . Each profile could define for example i the widgets to be executed ii the configuration to be used for executing the widgets and iii the style and theme information color schemes control decorations fonts backgrounds etc utilized in presenting information via the LCD display .

In some embodiments a portable device may include hardware software or hardware and software in combination to implement functionality related to acceleration motion and location detection and tracking. Additional related applications and functions are also envisioned such as detection of contact with the device including contact caused by persons or objects hitting or squeezing the device as well as contact caused by the device impacting other surfaces or objects such as a floor table desk or other surface or object. In some applications motion detection and tracking may also be used to implement gesture recognition where movement of the device in pitch or roll axes or in rectilinear motion may be used to control device functionality. In addition motion matching may be used to identify when the portable device is moving in a particular predefined way such as based on a particular type of vibration.

Referring now to a block diagrammatic representation of one embodiment of motion detection system hardware also denoted herein as a motion sensing unit in accordance with aspects of the present invention is shown. It is understood that is merely representative of one embodiment and that other configurations providing similar functionality are possible within the spirit and scope of the present invention.

As illustrated in motion sensing unit may be implemented in one or more axes of motion by use of an accelerometer and associated hardware. For example accelerometer may be a three axis accelerometer such as an Analog Devices ADXL330 which is an integrated acceleration to voltage converter Kionix KXP74 1050 or similar device providing detection of acceleration and signal outputs in one or more axes of motion. The output of accelerometer may consist of multiple analog signal channels representing the acceleration in each of the associated axes such as three voltage signals corresponding to orthogonal X Y and Z axes of motion.

The multiple axis analog signals may then be provided via channels to a signal filtering network for signal conditioning. Signal conditioning may include a variety of functions related to improving the quality of the signals provided to successive stages of signal processing. For example signal filtering network may comprise a lowpass filter to set the time constant of the system response to changes in the accelerometer output or to remove higher frequency acceleration components or noise from the signal. Such a filter may be implemented via a wide variety of circuits. For example in one embodiment a network of capacitors in parallel with the input signals from each channel may be used.

The outputs from signal filtering network may then be provided to an analog to digital converter . Analog to digital converter may then convert the filtered analog input signals to one or more channels of digitized data representing accelerations along the associated axes of motion of the device. The output of the analog to digital converter may then be stored buffered and transmitted to the portable device CPU such as CPU as shown in and processed by system software as described in further detail below.

The provided data may then be stored and buffered as well as further processed in driver software module . Storage of data may be accomplished via a scheduled task running on the device s operating system such as a scheduled task running on a linux operating system. Such a task may be run periodically or asynchronously based on a time reference such as an operating system clock tick or other timing signal. In one embodiment an asynchronous task may be run approximately once every operating system tick period which may be set to occur at the rate of 100 Hz.

At each tick the X Y and Z acceleration data may be recorded and stored in a circular buffer which may be configured in different lengths based on the desired amount of stored data and system data retrieval timing. The circular buffer may also have a data structure associated with it that keeps track of relevant statistics. These may include aggregate statistics on parameters related to the acceleration data such as mean and variance of the signal. In some embodiments as shown in driver software module may also implement higher level signal processing functions such as those higher level functions described in further detail below or others.

Driver software module will generally be configured to interface with other system software modules to provide data related to the accelerometer signals. In some embodiments driver software module may interface with the operating system and other software modules within the portable device via an application programming interface API as shown in . The interface mechanism to higher level software may be implemented in a variety of ways based on different types of interfaces. One exemplary embodiment uses a file device interface that dispatches to the accelerometer device driver. The file device can be used to query the driver for any information that the driver may contain such as the instantaneous acceleration and extrapolated velocity or the current adaptive noise thresholds as determined by the running average and variance of the data in the sample buffer.

In addition to the conventional interface as described previously driver module may also serve as an interrupt source wherein an interrupt is generated based on the acceleration data processed results buffer status or other related parameters. The driver module may also serve as a source of polled data that can be used to emulate the interrupt event. In some embodiments a system integrator may use the interrupt mode of the accelerometer to provide better response to certain events such as rapid changes in the portable device position.

In addition to low level software as described above a portable device may also include higher level software modules for processing accelerometer data to extract related information. Such software may apply a variety of signal processing algorithms to the raw accelerometer data to extract useful information. This information may include a range of related parameters such as relative angle and position of the portable device rate of angular or rectilinear positional change and other useful parameters. For example in some embodiments it may be desirable to measure the relative angle of the device with respect to a previous or reference position. In the case of a reference position determination of the reference position may be done by calibrating the device as further described in detail in later sections of this document discussing calibration. It will be noted that the relative angle of the device with respect to a reference position may be given in three dimensional coordinates x y and z as . Given a reference orientation defined as g g g and a current orientation defined as g g g the relative angle may be approximately determined simply by the following equation sin sin sin Where each of the terms of sinmay be saturated to 1 or 1 as appropriate. In order to improve the fidelity of this operation the values of grecorded may be oversampled and averaged.

In some embodiments it may be desirable to determine relative velocity and position of the device in one or more axes. As is well known in the art acceleration is the time derivative of velocity and velocity is the time derivative of position. Therefore velocity v x y z and position p x y z may be determined by integrating acceleration a x y z as shown below. It will be noted that a system based on integration may be sensitive to offsets in acceleration which may further enhance errors in calculating velocity and position. Furthermore when implementing such a system with discrete time sampled data additional errors may be introduced however these errors may be addressed by various means known in the art. In a digital system integration such as might be applied to determine velocity or position may be implemented in the form of a Reimann sum 

Referring now to a block diagrammatic representation of certain aspects of one embodiment of a accelerometer signal processing system is provided. Data buffer may be used to provide storage and buffering of multiple samples of raw accelerometer data. Accelerometer data may consist of multiple samples of data in one or more axes of motion. Data stored in buffer may then be provided to one or more signal processing modules to provide various motion related information. In some embodiments data from buffer may be provided to a heuristic trend analysis module configured as a noise offset discriminator. The output of analysis module which may be an offset suppression signal may then be applied to low pass filter modules and used in conjunction with integration modules and to calculate velocity and position data. In addition embodiments including heuristic trend analysis may also include a time delay module to delay integration of the raw accelerometer samples a sufficient amount of time to be in synchronization with the output of heuristic trend analysis module . It will be noted that the use of heuristic filters may introduce some dead zones in the signal response of the system but this can be compensated at higher levels such as by modifying the states of the gesture recognition machine or through the use of a vector quantizer to snap the location of the portable device in 3 space to one of a small set of known possible locations.

As further shown in some embodiments may contain integration modules such as and that integrate acceleration data to determine velocity based on a first integration and position based on a second integration. As implemented in the embodiment shown in acceleration samples are provided to first integrator which provides an output that is an approximation of the integral of the input signal such as by use of a Riemann sum algorithm or by other discrete time integration algorithms known in the art. The output representative of the velocity of the device may then be applied to a lowpass filter module for purposes of noise and other error correction. Lowpass filter module may also apply a correction signal from heuristic trend analysis module to improve noise and error performance. The output of lowpass filter module may then be subtracted from the input acceleration signals in a signal addition module as part of a closed loop feedback system. A similar feedback loop comprising second integrator module lowpass filter module and signal addition module may also be provided to integrate the velocity data in order to provide position data.

In some embodiments a Kalman filter may be provided to improve prediction of the device s position velocity and acceleration in the presence of noise. As is known in the art Kalman filters are widely used in navigation systems to improve performance in the presence of limited or inaccurate data samples and noise. As shown in a Kalman filter module may be provided with acceleration velocity and position data from the associated stages of the signal processing chain. For example acceleration data may be provided from data buffer velocity data may be provided from the output of first integrator module and position data may be provided from the output of second integrator module . The Kalman filter module may then process the input signals using filtering methods known in the art to provide improved positional data. In some embodiments as shown in interpolated position data output from Kalman filter module may be provided to a position log which may also be provided with a movement suppression signal output from heuristic trend analysis module . The output of position log representing an approximation of the relative position may then be combined in a vector quantization module with spacial calibration data. Spacial calibration data as described in further detail in successive sections of this disclosure may be provide from a special calibration data module . The vector quantization module may include quantization routines to limit the resulting output to a finite set of values thereby reducing errors that may be introduced through other processing steps such as heuristic filters. The resulting output of vector quantization module which is representative of the device s absolute position may then be provided to an implied position module where it may be further used by applications or widgets to provide position related functions.

In some embodiments a matched filter may be provided to detect particular motion related signatures. As is known in the art a matched filter may be used to detect particular signals by correlating an incoming signal with a sampled representation of a desired target signal and making a decision on whether the desired signal is present based on the output of the correlator. For example acceleration data velocity or positional data may be provided to a matched filter module to detect a particular motion event such as vibration of the portable device at a particular frequency. Motion events may be based on either preset or system programmed target events or may be programmed by the user. In some embodiments matched filter module may be provided with one or more reference signals corresponding to targeted motion profiles such as acceleration velocity or position profiles related to particular targeted movements. Matched filter module may then correlate the incoming signals with the target signals and signal a match when the correlation output exceeds a preset threshold.

Alternately the user may train the matched filter to detect a particular motion sequence. For example a user might train the filter to monitor motion processes related to their washing machine. The user might do this by selecting a training mode placing the device on the washing machine while it is operating with a particularly desired motion for a specified amount of time perhaps 5 seconds and then recording the motion signature. The motion signature may then be stored in the matched filter module as a target signal and the incoming signal could then be correlated with the target signal to detect the desired motion signal. As is apparent a wide variety of other motion related matched filter applications are possible within the spirit and scope of the present invention.

In some embodiments a gesture recognition module may be included. Such a module may operate on position data such as interpolated position output data from Kalman filter module to detect particular position sequences associated with motions of the device caused by hand movement. A wide range of gesture implementations are possible. For example in one embodiment a dynamic programming algorithm such as the Viterbi algorithm or a similar trellis algorithm may be used to determine the most likely user intended gesture based on the input position profile. In this implementation a state diagram may be laid out consisting of the various legal states and branching conditions that may occur. As the user traces a trajectory through the state diagram a maximum likelihood predictor may be dynamically applied to determine which gesture is implied by the transaction through state space.

To further illustrate one possible example the device may be configured with 4 control motions providing four different functions based on rotation about 2 orthogonal axes X and Y. Rotation in one direction about the X axis controls the first motion rotation in the opposite direction controls the second and likewise for the 2 directions along the Y axis. Applying the positional data to the gesture recognition module results in detection of both the corresponding axis and direction of rotation for device movements. This information may then be provided to other applications or widgets to provide associated functionality.

As discussed previously with respect to portable devices may include modules implementing gesture recognition functionality such as through gesture recognition module . A wide range of gesture recognition applications are possible. In some embodiments gesture recognition may be based on pitch and roll axes of motion to control a pair of horizontal and vertical scroll bars. As illustrated in the portable device may be moved as shown by the arrows and the associated device motion may be detected. This process may be used in place of a keyboard or mouse in widgets or applications where text scrolling is required. Alternately the portable device may be moved in a rectilinear fashion as shown by the arrows in where the device is used to trace out the position on the screen and then the device may be moved up or down to emulate the equivalent of a mouse click. Operation in the rectilinear mode may require sampling the accelerometer at a high rate and double integrating the acceleration data as shown in to derive the device position.

A range of processing may be further applied such as adaptive detection and cancellation of accelerometer drift and static offsets within the integration process. There may also be need for application of intelligence in interpreting the resultant positional readings as these translate into screen coordinates because the human user s perception of linear motion is tempered by the total range of linear motion allowed. For example a common problem when using a mouse is that the area for mouse usage is smaller than the area traced on the screen requiring the user to pick up the mouse and replace it on the mouse pad. Intelligence algorithms may be applied to monitor the acceleration profiles to detect and correct differences between re centering a device and the actual movement and clicking motions made by the user.

Another mode of operation using gesture recognition may be implemented using common gestures in a form of sign language. For example a series of sign language motions for particular words or expressions could be predefined. Flipping a portable device upside down and shaking it like one might shake a piggy bank could be defined to switch the portable device to a stock portfolio application or widget. Other common gestures such as those associated with frustration affection or simple symbols could be used as a method of activating a particular behavior on the device. Other embodiments could allow the user to throw the device and measure how fast it has been thrown or acceleration data could be stored on the device in non volatile memory to indicate that the device is no longer in warranty because it was thrown or dropped too hard. It will be noted that all of the above profiles could be used in a variety of applications from video game interfaces to control panel configurations.

In certain embodiments portable devices may use a bend sensor to detect when the device is squeezed by a user. Alternately the accelerometer and associated modules may also be trained to recognize this type of gesture. In particular there are at least two types of motions that portable devices may be configured to learn that are specific to soft devices. The first is denoted here as the squeeze and the second is denoted as the squish. A squeeze motion occurs when a user takes the device and compresses it in their hands as may be done with a stress ball or similar device. This may cause the accelerometer to deflect in a characteristic velocity and tilt profile. As previously discussed with reference to a matched filter such as matched filter may be either pre programmed based on calibrated squeeze motions or user programmed based on their specific squeeze motion to recognize the squeeze gesture. Subsequent squeeze motions may then be detected based on correlating a squeeze motion with the pre programmed motion sequence in the matched filter. Such as process could be used either in conjunction with bend sensors or as a replacement for a bend sensor in certain embodiments.

A squish motion occurs when a user pushes a portable device down on a hard surface such as a table similar to pushing off an alarm clock sounding in the morning. This type of motion can be detected through a variety of mechanisms including matched filtering acceleration profiling tilt detection or by other means. As defined the difference in detection of a squeeze motion versus a squish motion lies in the way the device is manipulated. A squeeze motion compresses the device primarily depth wise while a squish motion compresses the device height wise. It will be recognized however that both motions are related to the more general motion related detection processes and systems described previously.

In some embodiments portable devices may use the accelerometer and related modules to detect and track the position of the device within a building. For example in some embodiments the device may be configured to detect and track which room it is currently located in. In order to determine location in this way it is assumed that the device is fitted with proper hardware and software to allow it to operate in a portable mobile mode. In the simplest implementation the X Y and Z accelerations are double integrated such as is illustrated in and position is determined As previously noted absolute position determination applying this approach may be difficult because of introduction of noise and system errors. In particular position errors may accumulate rapidly because the double integral required to convert acceleration into position tends to accumulate error factors at a square law rate. Nevertheless there are a variety of ways of addressing these problems as discussed in further detail below.

With reference to in one embodiment the portable device may be used in two distinct operating modes related to location detection. The first mode is denoted as a training mode and the second is a running mode. Diagrams showing operation and movement of the portable device in accordance with training and running modes are shown in respectively.

In the training mode as illustrated in the user holds the device at a reference position resting spot in step such as in a reference position in the first room. The user then makes a gesture initiating a training session in step by for example pressing the screen or squeezing the device to generate a start signal. The device then performs a step of recording data and computing position. The process may be continued by picking up the device in step and moving to another position such as a reference position in another room. Once in the next position the user again makes a gesture in step and continues the training in step until completion of training is signaled by a user supplied indication in step such as another gesture. The device may then complete any associated training and calibration calculations in step . This process may be repeated at step by returning to step until all rooms have been trained. In one exemplary embodiment there is a preference that the user return to the first room and position then notify the device that it is in the original reference position whereupon the device determines overall drift and error factors over the entire trajectory.

In the second mode denoted the running mode as illustrated in the portable device may set a dead zone around the accelerometer which may be determined based on the overall drift and error factors so that it avoids integrating noise and static offsets. As shown in a user may start operation by picking up the device at step whereupon the device begins determining position based on integrating acceleration in step . There may also be additional intermediate movement steps as the user moves the device around a room or other trained area.

As the user moves the device various errors may place the devices in a location that is not identical to any of the previously trained locations. In this case the device may determine the nearest trained location in step by for example calculating the magnitude of the vector between the current inferred location and the previously memorized locations. The device may then apply processing to snap i.e. quantize the position to the nearest trained location in step . This snapping process may be used to help eliminate some or all of the drift factors that may accumulate over time and may be repeated as the user moves the device from place to place. It will be noted that this approach may have some weaknesses. For example if the user cannot decide where to place the device it may end up in a slightly different location each time it is put down. Presumably however each room will be large compared to the relative error in the placement of the device so the snapping routine will still place the device close to the desired position. Further it will be noted that if the device is turned off moved then turned on again in a different location it will generally not know where it is so a user may be required to provide the current position to the device. This may be done by telling the device via a menu which of the previously trained locations it is closest to.

These motion tracking features may be used to implement a number of clever and fun applications on a portable device especially if the device is coordinated with data from a central server so that the device has some knowledge or awareness of other the portable or similar devices in it s vicinity. In addition these motion tracking features can be used to implement security features. For example if a device is moved without a known user entering a security code it may be configured to sound an alarm. Alternately it could be hung on a door handle to provide an alarm or door chime when moved.

As previously discussed with reference to a portable device may be trained to detect a particular motion pattern using a matched filter. For example a device may be programmed to detect when motion on a washing machine stops and then send a message to another device indicating that the washing process is finished. The other device may then indicate to a user by a variety of means such as audible or visual indicators that the wash is finished. In other embodiments a device may be configured to detect a motion pattern associated with earth movement such as a vibration associated with a earthquake. In this mode a seismometer widget could be continuously or intermittently run so that when targeted earth movements occur the position time magnitude and other parameters could be reported to a central server or local or remote user. This implementation might be used by geologists or seismologists to create more detailed maps of seismic activity than have been previously available.

In some embodiments it may be desirable to provide for calibration of the portable device. It will be noted that there are a variety of methods for calibrating a device either based on a known reference position or relative to the current device position. Due to natural static offsets in the accelerometer it may not be possible to determine based on a particular analog output such as a voltage a representative fixed tilt angle. As a consequence in some embodiments it may only be possible to reliably determine the relative angle of the device given an initial starting point. Therefore in some embodiments calibration of the device may be an important step prior to operation.

In one exemplary embodiment of a calibration procedure as illustrated in a portable device may use the multimedia capabilities described in other sections of this and other related disclosures to aid in calibration. In this embodiment the user initiates the calibration process by for example providing an initiation gesture in step . Once the process has been started the device then instructs the user to place it on a surface such as by placing it down on a table as in step . The device then performs calibration calculations determines the calibrated position and notifies the user in step by for example making a beep or other sound or visual indication that the process is complete. Following the notification of step the user may then signal the device in step by for example squeezing the device. The device may then notify the user to return it to an upright position in step . Because most tables in modern countries are flat with respect to gravitational attractive forces this process can be used to establish a well known fixed geometry with respect to the earth as a calibration or reference point.

Referring now to a block diagrammatic representation is provided of the server components and other infrastructure which may be utilized to facilitate the operations of portable device service provider . It is understood that the representation of is functional in nature and single or multiple computers may be adapted to execute software designed to perform one or more than one of the functions described below. For example the functionality provided by the load balancers may be provided by a single computer or multiple computers. Similarly each of the servers represented in may be realized using either a single server computer or using a cluster comprised of primary secondary and backup server computers interconnected in configurations familiar to those skilled in the art.

As shown in one or more Web servers are used to define the Web interface presented by the portable device service provider to users or other interested parties. A system database may include among other things marketing materials press information and contact information relating to the portable device service that is served by the Web servers . Also included may be information relating to registration and first level support.

A user account server maintains user account data and provides authentication services to the other servers depicted in .

One or more widget servers are used to serve widgets to portable devices . Each widget server will typically be sufficiently powerful to encrypt and sign widgets on demand. In addition each server will be configured to store and forward widgets being sent from one user to another.

The service provider may also utilize a number of content servers to provide information e.g. new weather stock market information to portable devices . In an exemplary embodiment all content servers function in a pull mode of operation that is portable device polls the applicable content server for new data on some periodic basis. Each response from a content server preferably contains the schedule and frequency for subsequent polls. For example a content server disposed to provide stock market information can change the polling frequency to reflect whether or not the stock market is open. In other implementations a portable device may be provided with the capability to change polling frequencies on the basis of for example environmental conditions e.g. ambient room brightness or other factors. One or more of the content servers may be used for serving certain types of content uploaded by users for use on their own or other portable devices and stored within the system database .

The portable device service provider will typically maintain a small number of load balanced Network Time Protocol NTP servers to provide time to portable devices . Each such server will be configured to fetch their time from a primary NTP server which fetches time from an upstream external public NTP server. If the primary NTP server is inoperative secondary NTP servers will synchronize with a random selection of upstream servers. If all servers are unavailable a portable device will either fetch time information from random public NTP servers or simply have its time adjusted via user input. In one embodiment each portable device requests time upon connecting to the Internet and at jittered intervals thereafter no more frequently than once a day.

Turning now to an illustrative representation is provided of an exemplary object oriented database schema utilized by the system database . As shown the schema includes the following tables buddies categories portable devices parameters profiles skins users widget instance widgets. Although the type of information contained within a number of these tables will be readily apparent to those skilled in the art in view of the discussion herein a simplified example of various steps performed during user registration and the adding of a widget to a profile is provided in order to further illuminate the structure of the database schema .

In one embodiment the user registration and account creation process is initiated by a user through submission via a Web browser of a portable device ID so as to identify a particular portable device . The act of creating a user account results in the construction of a default profile and one or more widget instances each of which is automatically assigned to the portable device as identified by its portable device ID currently being registered. When a user adds a widget to the user s profile the user is presented with a list of potential categories based upon information within the categories table. The user then selects a category from the categories table and the user is presented with a list of widgets belonging to the chosen category. After the user chooses a widget a widget instance is constructed and information is entered into the appropriate fields e.g. profile id widget id index . The user is then presented a user interface via the Web browser for editing the widget specific parameters associated with the selected widget. In response to the user s parameter selections records are appropriately updated in the parameters table.

In general it is contemplated that embodiments of the invention will be implemented such that each portable device will function as a client relative to various servers existing within the portable device service provider . In these embodiments the portable devices do not engage in direct communication with each other but may do so via independent client sever relationships established with the service provider . In this way the service provider may facilitate the communication of a variety of different types of executable files e.g. widgets or other computer programs audio clips short Flash movies etc. among portable devices subject to the permission of the content owner and potential recipient. A user may designate that a widget or other content be sent to another user or to the members of a user s buddy list or the like. This designation may be made via a Web browser in communication with the service provider or directly through the interface of the user s portable device .

In one embodiment executable files may be created by users of portable devices or other third parties and loaded within the system database after being approved by the entity operating the service provider . Once a widget or other executable file has been created and stored within the system database it is made available for use by all those users of portable devices that have been granted the requisite permission. Various schemes for granting permissions among and between users are possible. For example one such type of permission could entail that any user X that is given permission by a user Y to send widgets to user Y s portable device may select any widget for which user X has usage rights and send such widget to user Y s portable device. Other restrictions could be placed on the transferability of widgets or other files from the service provider to a portable device at the request of another user. For example a user could be provided with the capability to lock certain widgets on only the user s portable device or a portable device could reach a full state and advertise itself as being incapable of receiving any additional widgets.

Although widgets and other executable files could be transferred between the service provider and portable devices in a number of different formats in one embodiment such transfers will occur in the Flash movie format i.e. as .swf files when not signed or encrypted . In this case the process for downloading widgets from the service provider includes receiving a notification at a portable device that a new widget is ready for downloading. Since in the exemplary embodiment each portable device acts in a pull mode each device periodically polls the service provider and inquires as to whether any configuration changes are available to load. In the case in which a new widget is available for downloading the portable device will generally use standard HTTP or HTTPS protocols in downloading the applicable widget file.

Attention is now directed to which are a series of signal flow diagrams representative of the client server communication protocol established between a portable device and the portable device service provider . As mentioned above each portable device functions as a client relative to the portable service provider . In one embodiment the basic protocol established between each portable device and the corresponding server entity of the portable service provider may be characterized as XML using a Representational State Transfer REST architecture transmitted using HTTP. In general the portable device issues periodic HTTP GET or POST requests and the service provider responds with a block of XML. The portable device will use HTTP GET for relatively simple requests and POST for more complex requests which will be in encapsulated in XML. Individual data elements are uniquely identified by Global Unique Identifiers GUID . In one embodiment there will be some form of cryptographic key exchange and transactions will be encrypted using those keys. Furthermore XML may be compressed in order to facilitate transfer between the portable device and the portable device service provider .

Referring to a signal flow diagram illustratively represents one manner in which a portable device configuration is provided to a portable device by the service provider . In one embodiment each portable device operates in accordance with a configuration which specifies the profile to be loaded by the portable device under various conditions. The user specifies the profile for the portable device via a web interface at the associated portable device web site. The profile contains several operational parameters for the portable device .

As shown in the requesting of a configuration is initiated when the portable device sends an HTTP GET request containing the GUID of the requested configuration to a portable device configuration object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and retrieves the requested configuration from the system database stage . If the requested configuration exists the service provider responds with an XML based configuration if not the service provider responds with an XML based error message stage . An exemplary XML based response generated by the service provider is given below 

Referring to a signal flow diagram illustratively represents one manner in which a profile is provided to a portable device by the service provider . In one embodiment each portable device operates in accordance with a profile which specifies the set of widgets to be executed by the portable device under various conditions. This enables a user to specify that a certain subset of the available set of widgets is to be instantiated and utilized during a particular time frame based upon the location of the user s portable device or the skin or housing within which the portable device is currently seated. For instance the user may desire that local weather and traffic information be provided while the user is located at home but would prefer that airline flight information be available from the portable device when the user is traveling.

As shown in the requesting of a profile is initiated when the portable device sends an HTTP GET request containing the GUID of the requested profile to a profile object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and retrieves the requested profile from the system database stage . If the requested profile exists the service provider responds with an XML based profile if not the service provider responds with an XML based error message stage . An exemplary XML based response generated by the service provider is given below 

Each Profile has a name a description a skin and a list of Widget Instances . The Profile will be periodically refetched in order to reflect changes made by the owner for instance adding and removing Widget Instances.

The portable device processes each Widget Instance in turn fetching the settings for each widget and the Widget itself and displays the Widget with the settings encapsulated by the Widget Instance.

A process similar to that described with reference to may be used to change a profile. An example of an HTTP POST containing an the GUID of the profile to modify and an XML based request to change a profile generated by the portable device is given below 

Turning now to there are shown signal flow diagrams representative of the communication of widget instance information from the portable device to the service provider and vice versa. In one embodiment the set of parameters associated with a widget instance determine the user specified manner in which the behavior of the widget is modified when executed by a portable device . That is the parameters fetched by the portable device from the service provider for a given widget constitute the user s customized settings rather than dynamic content. For example in the case of a stock ticker widget the applicable parameters could comprise the names and symbols of the stocks within the user s portfolios but would not define or relate to the current prices of the stocks which would be furnished by another service supplied by the service provider .

As shown the widget instance change operation is initiated when the portable device sends an HTTP POST and an XML request to a widget instance object within the system database maintained by the service provider stage . This type of UPLOAD operation informs the service that the parameters of a specific widget instance have been updated by the applicable user. As shown the updated parameters are received by the service provider stage and are attempted to be written to a corresponding widget instance object within the system database stage . If this attempted write operation is unsuccessful stage the service provider responds with an error message that is processed by the requesting portable device stage . If the write operation is successful the newly updated widget instance are retrieved from the system database stage and sent to the applicable portable device stage .

Once received the widget instance is processed by the portable device stage . In general the processing of the parameters contained in a widget instance are dependent upon the characteristics of the particular widget. In certain cases the parameters may be sufficient to enable the widget to display information while other widgets may use the parameters to fetch content from another service. As an example of the former consider a clock widget capable of displaying information following receipt of a parameter indicating a time zone. In contrast a stock widget may have stock symbols as parameters and use such symbols to fetch quote information.

Referring now to there is shown a signal flow diagram illustrating an exemplary widget instance download operation in which the service provider is requested to push values of widget specific parameters to a requesting portable device . The requesting of a parameter download is initiated when the portable device sends an HTTP GET containing the GUID of the requested widget instance request to a parameter object within the system database maintained by the service provider stage . An example of such a request in the case of a weather widget is provided below 

The service provider receives the request stage and retrieves the requested parameters from the system database stage . If the requested parameters exist the service provider responds with an XML based widget instance message stage . Using the example of a weather widget which utilizes a zip code to identify the location for which weather is to be retrieved such a message could comprise 

The portable device uses the GUID in the widget tag to fetch the information about the Widget to be displayed. Once the widget has been started it is passed the name value pairs in the widget parameters section in order to customize the behavior of the widget.

If the requested parameters do not exist a default widget instance is attempted to be retrieved from the system database stage . If such a widget instance exists stage the service provider responds with an XML based parameters message that is processed by the portable device upon receipt stage . If such a default widget instance does not exist an error message is returned to the portable device stage .

Referring now to a signal flow diagram is provided which illustratively represents the process of downloading the code for a widget e.g. a .swf file from the service provider for execution on a portable device . The process is initiated when the CHUMBY device sends an HTTP GET request containing the GUID of the requested widget to a specific widget description object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and attempts to retrieve the requested widget description from the system database or other data source available to the service provider stage . If the requested widget description is able to be retrieved the service provider responds with an XML based widget description message if not the service provider responds with an XML based error message stage . An exemplary XML based response generated by the service provider is given below 

Once the requested widget description is received by the portable device the portable device uses the URL referencing the movie for the requested widget to download the movie e.g. .swf file from the service provider . The portable device sends an HTTP GET request containing the GUID of the requested movie to a specific movie object within the system database maintained by the service provider stage . An example of such a request is provided below 

The service provider receives the request stage and attempts to retrieve the requested movie from the system database or other data source available to the service provider stage . If the requested movie is able to be retrieved the service provider responds with the .swf file which implements the movie if not the service provider responds with an XML based error message stage . Once the requested movie is received by the portable device it is loaded by the Master Controller and queued for subsequent execution stage . If an error is instead received it is processed accordingly stage .

Referring now to a signal flow diagram is provided which illustratively represents the process of obtaining content from the service provider for a widget of a portable device . The process is initiated when the portable device sends an HTTP GET and an optional XML request to a specific content object within the system database maintained by the service provider stage . An example of such a request for content for a tide widget is provided below 

The service provider receives the request stage and attempts to retrieve the requested content from the system database internal content service external content service or other data source available to the service provider stage . If the requested content is able to be retrieved the service provider responds with an XML based content message if not the service provider responds with an XML based error message stage . Once the requested content is received by the portable device corresponding audiovisual output is generated by the device for the benefit of its user stage . If an error is instead received it is processed accordingly stage . An exemplary XML based response generated by the service provider is given below 

In the case where content is retrieved directly from an external content service provider i.e. from other than the service provider a series of web based transactions most likely HTTP and or XML based defined by such content service provider will take place between the portable device and such provider.

Portable devices may optionally include a hardware security module which in one implementation is accessed via a character driver interface in the operating system OS of the device . The module may or may not be installed. When the module is not installed the OS preferably virtualizes the hardware security module by emulating it in software. While losing all the security benefits of a hardware module this feature enables cost reduction savings while maintaining protocol interoperability with a secured system.

The hardware security module of a portable device may be implemented in a number of ways. As an example the hardware security module may be implemented using a cryptographic Smart Card module. This module or its emulated counterpart is capable of at a minimum the following operations 1 storage of secret numbers in hardware 2 the ability to compute public key signatures 3 the ability to compute one way cryptographic hashes and 4 the ability to generate crytographically trusted random numbers.

During the manufacturing process the hardware security module or its emulated counterpart is initialized with a set of secret numbers that are only known to the module and to the portable service provider . These secret numbers may or may not consist of public and private keys. If the numbers consist of public and private keys then a mutual key pair is stored by both the portable device service provider and the hardware module along with a putative insecure identifier number for the pair. Furthermore these numbers are preferably not recorded by the portable device service provider in association with any other identifying information such as the MAC address for the WLAN interface or any other serial numbers that are stored in insecure memory for customer service purposes.

When the user or service wishes to initiate a strong authenticated transaction the portable device sends the putative insecure key pair identifier to the service provider . The service provider looks up the putative insecure key pair identifier and issues a challenge to the hardware module consisting of a random number and time stamp encrypted by the public key whose private key is stored only inside the target hardware module. In particular the challenge is packetized and sent through the Internet to the portable device . The device unpacks the challenge and passes it directly to the hardware module. The hardware module decrypts the random number and time stamp optionally hashing it adds another time stamp and encrypts the entire message with the unique server public key associated with the putative insecure key pair identifier. Again this message is packetized and transmitted by the device to the service provider over the Internet. Upon receipt the service provider decrypts the message and verifies that the random number or its hash is valid and that the timestamps are unique and increasing within a reasonable error bound. At the conclusion of this transaction the service provider has authenticated the device and can fall back to any number of session keys that can be either dynamically generated or statically stored for further secured transactions. Advantageously this authentication transaction does not involve uniquely associating the hardware module with user information. Rather the service provider is simply aware of the existence of the approved hardware module and upon completion of the authentication transaction may safely trust the integrity of the secrets stored therein.

A user of the device may opt out of privacy mode and provide identifying information as required by some billing services such as credit cards and banks. Optionally an anonymous cash based transaction network can be established where accounts are opened and managed only by secrets contained within the hardware module.

To enable limited revocation of user identifying information the specific embodiment of the master authentication protocol should operate on a set of clean room servers with a multiplicity of connections that are trusted by the portable device service provider and authenticated session keys are then passed on laterally to the content servers. Thus the anonymity of the master authentication key is nominally preserved although it is possible to recreate and correlate transactions from forensic logs and transaction timings. The use of multiple servers and multiple connections along with network routing randomization techniques can be used to increase the anonymization resistance to forensic logging cf. Tor network but this configuration is in no way essential to the network s operation.

Attention is now directed to which are a set of flowcharts representative of the calibration registration and initial operation of a portable device and associated account management functions.

In one embodiment a portable device downloads configuration information from the service provider each time it is powered on or otherwise re establishes communication with the service provider . However a minimal amount of widget and configuration information may be locally stored on a portable device so that it may continue to function in the absence of network connectivity. For example a clock widget may be permanently stored on a portable device so that its clock function could remain operational at all times. A portable device will typically include sufficient memory capacity to hold configuration information received from the service provider for all of the widgets to be executed by the device up to some reasonable number of widgets. If a user changes the configuration for a portable device through the Web site maintained by the service provider a polling function implemented on the corresponding portable device will typically be used to pull the modified configuration information from the service provider . Alternatively an operation may be manually initiated via the interface of the corresponding portable device in order to obtain this information e.g. an Update My CHUMBY Portable Device Now operation .

Turning now to there is shown a flowchart which illustrates an exemplary routine used to calibrate the touchscreen of a portable device . provide a set of screen shots of the user interface of the portable device being calibrated pursuant to the routine of . As shown the calibration routine involves determining an upper left set point stage after the user has initiated the routine by touching the touchscreen of the device . This set point is determined by generating a target through the LCD screen which the user is then prompted to tap. A lower right set point is then determined by prompting the user to tap a target depicted in stage . Similarly a center set point is next determined by prompting the user to tap a target depicted in stage . The results of the calibration process are then stored stage . Based upon the coordinate data received from the touchscreen during each of stages and the CPU executes a program to generate calibration information used during subsequent operation of the device . A screen is then displayed to the user indicating that the calibration process has been completed .

During or prior to stage the user may also be provided with the opportunity to enter a desired channel frequency and to select a mode of encryption e.g. WEP WPA WPA2 . Although describes the case in which WEP has been selected as the desired encryption methodology those skilled in the art will recognize that similar operations may be performed following selection of an alternate encryption methodology.

Referring now to a flowchart is provided of an exemplary account creation and registration process . The process begins upon presentation by the device via its LCD screen of its serial number or other identifying information stage . The user then logs in via a Web browser to a web site operated by the service provider e.g. www.chumby.com stage . In one embodiment the user may then select a create new user account tab or the like stage and is prompted to enter an email address stage password stage and name stage . In certain implementations the user may also be offered the opportunity to enter his or her address stage while in other implementations the user is not prompted to provide an address until this information is required for some particular purpose e.g. to provide a billing information for a subscription or shipping information for a product purchase . If this option is selected the user enters his or her address stage . At this point the service provider sends an email to the address entered in stage which contains a click through account activation hyperlink stage . If the user does not receive this message stage the user is provided with the opportunity to take advantage of various customer service options in order to remedy the account creation difficulties being experienced stages . In any event the account creation process is then finalized stage and the portable device being registered is associated within the system database with a particular user account in the manner described below stage . Once this has occurred a default configuration and a number of widget instances are established for the newly registered portable device stage .

Referring now to a flowchart is provided of exemplary Web based interaction occurring between a user and the service provider with regard to disabling a portable device that has been previously associated with the user s account. As shown the user logs in to the account via a Web browser stage and selects a Disable portable device tab or the equivalent stage . The user then selects the portable device to be disabled from a list based upon either the device s serial number or description stage . Next the user is prompted to confirm the selection stage and if so all references to the disabled portable device are removed from the directory maintained within the system database stage . The process is then completed whether or not the selection is confirmed stage at which point the service provider no longer responds to requests from the portable device which has been disabled.

Attention is now directed to which are a set of flowcharts representative of Web based widget selection removal and configuration processes contemplated by embodiments of the present invention. Screen shots of exemplary user interfaces presented by the Web browser used to facilitate certain of these processes are illustrated in .

Turning now to a top level flowchart is provided of exemplary Web based interaction occurring between a device user and the service provider with regard to adding removing and configuring widget profiles relative to the user s portable device. Although a user may have the impression that a portable device itself is being configured through the process of in the exemplary embodiment a profile currently assigned to the user s portable device is instead configured.

As shown in the user logs in to the user s account maintained with the service provider via a Web browser stage and proceeds to the user s home page or the equivalent stage . From this home page the user selects a Set Up device tab or the like stage and the Web browser presents a corresponding Set Up page stage . The user then selects the portable device profile to be configured from a list based upon either the device s serial number or description stage . The current configuration for the selected device profile is then retrieved from the system database and loaded into the device stage . Once this has occurred the user selects an action to be performed as is illustrated by stage . Such actions may include for example adding deleting or editing widget profiles. If the user opts to add widget profiles stage then the Web browser displays an Add Widgets Page through which widget profiles may be added to the current configuration of the applicable portable device in the manner described below with reference to stage . If the user instead chooses to delete widget profiles from such current configuration stage then a Delete Widgets Page is presented through which the deletion operation may be completed consistent with the approach described below with reference to stage . Alternatively the user may select another portable device profile to configure stage or simply exit and return to the user s home page stage .

If the user decides to exit the process of adding widgets to the current configuration the user may perform one of several actions including but not limited to select another portable device to configure navigate to another page on the portable site log out from the portable site or close the applicable browser window stage . If the user instead chooses to save the current widget configuration for the applicable portable device stage the user selects a Submit Commit Ok or similar button to cause any changes made to be recorded in the system database stage . After either saving the current widget configuration or electing to exit the process the user may be directed to a predefined page stage .

Referring now to a flowchart is provided which is representative of exemplary Web based interaction occurring between a device user and the service provider in connection with the removal of widgets from the current configuration of the user s portable device. Upon being presented with a Remove Widget Page stage the user may elect to either de activate a selected widget stage delete a selected widget stage or exit the process stage . If widget de activation is chosen the user is prompted to confirm the choice stage . Once such confirmation has been provided the widget is marked as inactive on the page currently being rendered by the Web browser stage . In addition the widget configuration for the portable device of interest is updated within the system database stage . Similarly if it is instead chosen to delete the selected widget the user is prompted to confirm the choice stage . Once such confirmation has been provided the widget is marked as deleted on the page currently being rendered by the Web browser stage and the widget configuration for the portable device of interest is updated stage . If confirmation to de activate or delete the selected widget is not provided stages and the Web browser goes to a Choose Widget Page through which a different widget may be selected for removal or de activation.

In an exemplary embodiment the service provider populates a corresponding widget and parameters tables within the system database in accordance with the user s parameter selections. In this regard the widget table may include an XML based param desc xml field containing instructions enabling the construction of associated records in parameters table. For example for a clock widget the XML based instructions could indicate that a time zone should be a valid parameter and could also be utilized to create appropriate records in the parameters table.

It is noted that in various embodiments the present invention may relate to processes such as are described or illustrated herein. These processes are typically implemented in one or more modules comprising systems as described herein and such modules typically including computer software stored on a computer readable medium including instructions configured to be executed by one or more processors. It is noted that while the processes described and illustrated herein may include particular stages it is apparent that other processes including fewer more or different stages than those described and shown are also within the spirit and scope of the present invention. Accordingly the processes shown herein are provided for purposes of illustration not limitation.

It is further noted that some embodiments of the present invention may include computer software and or computer hardware software combinations configured to implement one or more processes or functions associated with the present invention. These embodiments may be in the form of modules implementing functionality such as has been described previously in software hardware and or hardware software combinations. Modules may comprise instructions stored on a computer readable medium and configured to be executed on one or more processors on one or more systems.

Embodiments may also take the form of a computer storage product with a computer readable medium having computer code thereon for performing various computer implemented operations such as operations related to functionality as described herein. The media and computer code may be those specially designed and constructed for the purposes of the present invention or they may be of the kind well known and available to those having skill in the computer software arts or they may be a combination of both.

Examples of computer readable media within the spirit and scope of the present invention include but are not limited to magnetic media such as hard disks optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute program code such as programmable microcontrollers application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices.

Examples of software or computer code may include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. Computer code may be comprised of one or more modules executing a particular process or processes to provide useful results and the modules may communicate with one another via means known in the art. For example some embodiments of the invention may be implemented using assembly language Java C C C or other programming languages and software development tools as are known in the art. Other embodiments of the invention may be implemented in whole or in part with hardwired circuitry in place of or in combination with machine executable software instructions.

The foregoing description for purposes of explanation used specific nomenclature to provide a thorough understanding of the invention. However it will be apparent to one skilled in the art that the specific details are not required in order to practice the invention. In other instances well known circuits and devices are shown in block diagram form in order to avoid unnecessary distraction from the underlying invention. Thus the foregoing descriptions of specific embodiments of the present invention are presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed obviously many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the following claims and their equivalents define the scope of the invention.

