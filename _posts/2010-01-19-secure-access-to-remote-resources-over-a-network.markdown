---

title: Secure access to remote resources over a network
abstract: A client computer hosts a virtual private network tool to establish a virtual private network connection with a remote network. Upon startup, the virtual private network tool collects critical network information for the client computer, and sends this critical network information to an address assignment server in the remote network. The address assignment server compares the critical network information with a pool of available addresses in the remote network, and assigns addresses for use by the client computer that do not conflict with the addresses for local resources. The address assignment server also provides routing information for resources in the remote network to the virtual private network tool. The virtual private network tool will postpone loading this routing information into the routing tables of the client computer until the client computer requests access to a specific resource in the remote network. When the client computer requests access to a specific resource in the remote network, the virtual private network tool will only provide the routing table with the routing information for that specific remote resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08090827&OS=08090827&RS=08090827
owner: Aventail LLC
number: 08090827
owner_city: San Jose
owner_country: US
publication_date: 20100119
---
This application is a divisional and claims the priority benefit of U.S. patent application Ser. No. 11 927 250 filed Oct. 29 2007 now U.S. Pat. No. 7 698 388 which issued on Apr. 13 2010 and entitled Secure Access to Remote Resources Over a Network which is continuation and claims the priority benefit of U.S. patent application Ser. No. 11 371 348 filed Mar. 7 2006 and entitled Smart Tunneling to Resource in a Network which is a continuation in part and claims the priority benefit of U.S. patent application Ser. No. 11 251 592 filed Oct. 14 2005 and entitled Rule Based Routing to Resources Through a Network which claims the priority benefit of U.S. provisional application No. 60 619 151 filed Oct. 14 2004 and entitled Network Appliance U.S. patent application Ser. No. 11 371 348 also claims the priority benefit of U.S. provisional application No. 60 659 494 filed Mar. 7 2005 and entitled Smart Tunneling Network Appliance U.S. patent application Ser. No. 11 371 348 is also a continuation in part of and claims the priority benefit of U.S. patent application Ser. No. 11 009 692 filed Dec. 10 2004 and entitled End Point Control which claims the priority benefit of U.S. provisional application No. 60 528 870 filed Dec. 10 2003 and entitled Network Appliance U.S. patent application Ser. No. 11 251 592 is a continuation in part and claims the priority benefit of U.S. patent application Ser. No. 11 009 692 filed Dec. 10 2004 and entitled End Point Control which claims the priority benefit of U.S. provisional application No. 60 528 870 filed Dec. 10 2003 and entitled Network Appliance The disclosures of the aforementioned applications are incorporated herein by reference.

The present invention relates to the routing of data between a client computer and one or more resources through a network. Various aspects of the invention may be used to help ensure that data exchanged between a client computer and resources in a remote network is routed using network addresses that do not conflict with addresses local to the client computer.

In the last decade the use of electronic computer networks has greatly increased. Electronic computer networks may be found in businesses schools hospitals and even residences. With these networks two or more computing devices communicate together to exchange packets of data according to one or more standard protocols such as the Transmission Control Protocol Internet Protocol. Usually one computer often referred to as a client or client computer requests that a second computer perform a service. In response the second computer often referred to as a server or server computer performs the service and communicates the resulting data back to the first computer.

As reliance on computers has increased the demand to access computer resources from a variety of locations has increased as well. Conventionally for example a business user may have accessed resources on a corporate server through a desktop computer connected to the corporate server by a private secure corporate network. Now however that user may wish to access the same corporate resources from a remote location over a public network such as the Internet. For example a user may need to access resources through a corporate network from a personal computer while at home or from a laptop computer while traveling. In order to securely access these network resources the user will typically employ an encrypted communication technique. The connection formed by the client computer and a server computer or by the client computer and another network available through a server computer often is referred to as a Virtual Private Network VPN .

A virtual private network can be formed using a plurality of different encrypted communication techniques. For example a client computer may implement a temporary or permanent dedicated communication software application to securely communicate with a server computer. The dedicated communication software application will then encrypt and send messages to the server computer and receive and decrypt messages received from the server computer. Some examples of this type of dedicated communication software application may embed encrypted messages in conventionally formatted data packets so that the encrypted messages are unreadable from outside of the secure communication channel. The virtual private networks that employ these embedded communication techniques are sometimes referred to as tunneling virtual private networks because their communications appear to tunnel through a public network such as the Internet.

It also should be appreciated that with some implementations of a virtual private network the client computer can communicate point to point with some or all of the nodes within another network available through the server computer. With still other implementations of a virtual private network however the client computer may directly communicate with only a proxy software application on the server computer. The proxy software application will then decrypt communications from the client computer and route them to the appropriate node within the network. With this type of virtual private network the proxy software application may be hosted on a computer or computing node outside of a firewall protecting the rest of the network. The proxy software application communicates with network nodes through the firewall. Different types of virtual private networks may employ any desired encryption technique. For example a virtual private network may implement communication channels secured using the Secure Socket Layers SSL protocol the Hypertext Transfer Protocol Secure HTTPS protocol which employs the Secure Socket Layers SSL protocol or the Internet Protocol Security IPSec protocol.

While a virtual private network can provide a client computer with secure access to remote resources through a network the network addresses for the remote resources may conflict with local network addresses. For example a user may purchase a cable modem or local router for a home network which uses the IP address range 192.168.x.x. Many commercial systems also use this IP address range of 192.168.x.x however. Accordingly when the user s computer attempts to access a resource in a remote network such as a corporate network maintained by the user s employer the address of the resource on the remote network may conflict with a local resource on the user s home network. For example in some situations a server on the remote network may allocate addresses to the client computer for accessing one or more resources on the remote network. If one of these network addresses conflicts with the network address for the network interface card NIC of the client computer the conflict may prevent the client computer from accessing any external resources. As a result an address conflict may prevent the user s computer from accessing a desired resource in the remote network or even access a local resource.

Accordingly it would be desirable to be able to resolve network address conflicts between a client computer s local resources and the resources on a remote network. Further it would be desirable to resolve conflicts without overwhelming the routing table provided on the client computer or creating unnecessary conflicts within the routing table.

Various aspects of the invention relate to techniques for resolving address conflicts between network addresses for resources that are local to a client computer and network addresses for resources in a remote network. With some implementations of the invention for example the client computer hosts a virtual private network tool to establish a virtual private network connection with a remote network. Upon startup the virtual private network tool collects address information from the network interfaces of the client computer. For example the virtual private network tool may obtain for each network interface the IP address for local resources such as the local gateway Domain Name System DNS servers on the local network Windows Internet Naming Service WINS servers on the local network and the like. The virtual private network tool then sends this local resource address information to an address assignment server in the remote network.

The address assignment server has access to a pool of addresses that are available for use by nodes in the remote network. When it receives the local resource address information from the client computer the address assignment server compares the addresses in the local resource address information with the pool of addresses for the remote network. The address assignment server then will select addresses for use by the client computer that do not conflict with the addresses for local resources. For example the client computer may employ a virtual network interface card also known as a virtual network adapter or just virtual adapter to act as a node of the remote network. The address assignment server will select an virtual IP address for the virtual network adapter that will not conflict with the IP address of the physical network adapter being used by the client computer.

The address assignment server also has access to a list of resources in the remote network that are available to the client computer. When the client computer joins the remote network the address assignment server provides routing information for these remote resources to a virtual private network tool hosted by the client computer. The virtual private network tool will postpone loading this routing information into the routing tables for the client computer however until the client computer requests access to a specific resource in the remote network. When the client computer does request access to a specific resource in the remote network the virtual private network tool will only provide the routing table with the routing information for that specific remote resource. In this manner address conflicts between local resources and remote resources can be avoided until the client computer requests access to a remote resources address that actually conflicts with a local resource address.

Various embodiments of the invention will typically be employed to facilitate cooperation between a client and one or more servers in a remote network. As known in the art a client server configuration including a Web based architecture configuration occurs when a computing device requests the use of or access to a resource from another computing device. For convenience and ease of understanding hereafter requests to use obtain or otherwise access a resource may generically be referred to simply as requesting a resource while using obtaining or otherwise accessing a resource may generically be referred to simply as obtaining or accessing a resource. Because the computing device responsible for providing the resource serves the computing device that initially requests the resource the computing device responsible for providing the resource often is referred to as a server. The computing device initially requesting the resource then commonly is referred to as a client. 

It should be noted that as used herein a server may be considered a virtual device rather than a physical device. For example the functions of the server may be performed by a single computing device. Alternately the functions of the server may be performed by a group of computing devices cooperating together. Similarly a client may be considered a virtual device. That is one or more separate computing devices can cooperate together to function as a client. In many situations a client computer may work with multiple server computers in a remote network to access a resource. For example a client computer may submit the request for a resource to a first server computer which may then relay the request though the remote network to a second server computer. The second server computer may authenticate the identity of the client computer or a user employing the client computer to determine whether the client computer has permission to access the requested resource. Yet another server computer in the remote network may then actually provide the client computer with access to the requested resource.

As used herein a resource may be any type of object or service available through a server computer. For example a resource may be a data file or a directory of data files. A resource may also be a service such as an electronic mailing service a database service a document management service a remote shell or terminal service or any other service provided by an executing software application. Further a resource may be within a network or it may be located outside of a network but accessible to the client computer through a network.

Various embodiments of a virtual private network according to the invention may be implemented using dedicated analog or digital electronic circuitry. More typically however the various features of the invention will be implemented by executing software instructions on a programmable computing device or computer. For example each node in a virtual private network will typically be implemented by executing software instructions on a programmable computing device or computer. Accordingly shows one example of a computer that can be used to implement various aspects of the invention.

The computer system illustrated in includes a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the routines that help to transfer information between elements within the computer system such as during startup may be stored in the read only memory ROM . The computer also may include a hard disk drive for reading from and writing to a fixed magnetic storage disk a magnetic disk drive for reading from or writing to a removable magnetic disk or an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media and a flash memory reader for reading from or writing to a removable flash memory. Of course the computer may alternately or additionally include any other type of desired memory storage device such a punched memory drive for reading from or writing to a memory medium that uses deformations or holes in the medium to record data. If the computer system is embodied by a special purpose server application computer system it may further include for example another processing unit .

A number of program modules may be stored on the ROM the hard disk drive the magnetic disk drive the optical disk drive and the flash memory reader . A user may enter commands and information into the computer system through an input device such as a keyboard a pointing device e.g. a mouse touchpad joystick trackball or the like a touch screen a microphone or any other suitable interface device. Of course the computer system may simultaneously employ a variety of different input devices as is known in the art. One or more output devices such as a monitor or other type of display device typically will also be included to convey information from the computer system to the user. As will be appreciated by those of ordinary skill in the art a variety of combinations of output devices such as displays speakers and printers may be included in the computer system . The computer system also may have one or more device interfaces . A device interface may be any suitable interface for transferring data to or receiving data from another device such as an RS 232 port a USB port a PS2 port an infrared or Bluetooth wireless port or the like. It should be noted that with various examples of the computer one or more of the input devices and the output devices may be connected to the system bus through a device interface .

In order to access other computing devices the computer system should be capable of operating in a networked environment using logical connections to one or more remote computing devices such as the device interface . Accordingly the computer may include a network interface . The network interface may be implemented e.g. using a conventional Network Interface Card NIC also sometimes referred to as a network adapter . The computer may have a wired network interface a wireless network interface or any combination of the two. For example the computer may have two wired network interfaces and a single wireless network interface . The computer system then can connect to a local area network LAN through the network interface . Alternately or additionally the computer may connect to a wide area network WAN such as the Internet through the network interface .

Using the network interface to connect to a LAN or a WAN the computer may communicate with another external computer or other computing device . As used to describe various examples of the invention herein if the computer communicates with an external computer in a remote network for which WAN acts as a pathway then that external computer may be referred to as a remote computer. Other computing devices that are not in the remote network may then be referred to as local devices.

The client computer also includes a virtual network adapter and IP router routing table . As will be appreciated by those of ordinary skill in the art the virtual network adapter is implemented by the execution of software instructions that simulate the operation of a physical network interface card. With some examples of the invention the virtual network adapter will be instantiated by the virtual private network tool . With alternate examples of the invention however the virtual network adapter may be independent of the virtual private network tool . The IP router routing table stores routes in the form of network addresses for accessing local and remote resources. As will be explained in more detail below the software application will employ routes in the IP router routing table populated by the virtual private network tool to access resources through the remote network . The operating system then manages the operation of the software application the virtual private network tool the virtual network adapter and the IP router routing table .

The remote network includes an authentication server an address assignment server one or more Domain Name System DNS servers and or Windows Internet Name Service WINS servers collectively referred to as DNS WINS server policy rules and a pool of network addresses. Each of the DNS WINS servers translates a host name corresponding to a resource into a network address. For example a DNS server may translate a domain name such as mycompany.com into the network address corresponding to the computer hosting that domain name such as 192.68.42.12. The authentication server authenticates the identity and with some examples of the invention the operating environment of the client computer . Based upon a successful authentication the authentication server will then establish a secure connection tunnel with the virtual private network tool in the client computer . The connection tunnel may be for example any type of virtual private network connection. Thus the authentication server may establish a virtual private network connection tunnel with the virtual private network tool using the Secure Sockets Layer SSL protocol.

As will be explained in more detail below the authentication server or a separate policy server not shown compares the authentication information for the client computer with access policies set by a network administrator or other authorized person in order to determine which addresses in the remote network are available for use by the virtual network adapter . These addresses are then included in the address pool .

Once the authentication server or a separate policy server not shown has determined the addresses that can be used by the virtual network adapter the address assignment server will compare local network information for the client computer with the available network addresses in the address pool to determine whether any of these addresses will conflict with local addresses for the client computer . It then assigns addresses to the virtual network adapter that do not conflict with the provided local network information.

The remote network also includes one or more resources . The resource may be implemented by any server or combination of servers responsible for providing one or more resources to client . For example the resource may be a Domain Name Service DNS server an electronic mail server a server that maintains a database a print server a data storage server a file or document management server a Voice over Internet Protocol VoIP server a remote shell or terminal service or the like. With some implementations of the invention the resource may only be indirectly responsible for providing requested resources. For example the resource server may be a proxy server providing a connection to yet another server through for example a private network which will actually provide the requested resources to the client . It should be noted that a resource may be located within the remote network . Alternately or additionally a resource may be accessible by the remote network through a public network such as the Internet or by a private network as shown in .

With various examples of the invention the authentication server or a separate policy server not shown also compares the authentication information for the client computer with the access policies to determine which of the resources may be accessed by the user of the client computer or by a user of the client computer or the software application in particular . Based upon these access policies the authentication server or a separate policy server not shown will create the policy rules for the resources . From these policy rules the address assignment server will then generate VPN routing rules for providing routing information to the IP router routing table in the client computer and send these VPN routing rules to the virtual private network tool .

As will be appreciated by those of ordinary skill in the art the virtual network adapter operates through a physical network adapter such as a network interface card NIC . In some examples of the invention the physical network adapter serves as a node in a local area network LAN such as a user s home network a network maintained by e.g. a hotel airport office coffee shop Internet cafe or the like. After the virtual private network tool has established a virtual private network connection with the remote network the virtual network adapter then may serve as a wide area network WAN node in the remote network . Thus the virtual network adapter may tunnel through a local area network to act as a WAN node in the network .

Because the virtual network adapter operates through the physical network adapter however the network information used by the virtual network adapter cannot conflict with critical network information for the physical network adapter . For example the virtual IP address VIP of the virtual network adapter cannot be the same as the IP address being used by the physical network adapter . Accordingly the virtual network adapter should be configured using network information that does not conflict with critical network information being used by the physical network adapter .

Next in step the authentication server authenticates the client computer or a user employing the client computer . With some implementations of the invention this may be a simple identity authentication using any desired conventional techniques such as the exchange of encryption key information. As will be discussed in more detail below however alternate implementations of the invention may employ the rule based routing system described in U.S. patent publication No. 2006 0143703 entitled Rule Based Routing To Resources Through A Network naming Chris Hopen et al. as inventors and filed on Oct. 14 2005 which application is incorporated entirely herein by reference. As discussed in detail in that application the authentication information is compared with access policies set up by a network administrator or other authorized person. Based upon this comparison policy rules are created which control which resources may or may not be accessed by the client computer or with some implementations of the invention by the user of the client computer or by a specific application hosted on the client computer . With some examples of the invention these access policies also may be used to determine which available network addresses should be included in the address pool .

Once the client computer has been authenticated the virtual private network tool collects critical network information for the client computer in step . As previously noted the virtual network adapter will be tunneling through a physical network interface card . To avoid conflicting with the operation of any physical network adapter being used by the client computer the virtual private network tool obtains the critical network information for each physical network adapter . For example if the virtual network adapter is tunneling through a physical network interface card connected to a local area network then the critical network information obtained by the virtual private network tool will include the Internet protocol IP address and the subnet for each physical network adapter being used by the client computer . It also will include the IP address of the default gateway being used by the local area network and the IP addresses of the DNS and or WINS servers that are used by each physical network adapter to resolve domain names. Also if a physical network adapter is using the Dynamic Host Configure Protocol DHCP to obtain a network address then the network address of the DHCP server providing the network address will be included in the critical network information. With some implementations of the invention the critical information also may include the domain suffix for the local area network.

The virtual private network tool may identify the critical network information using any desired technique such as by querying application programming interfaces APIs provided by the operating system for network interface configuration. This operation will be analogous to using the ipconfig all command available windows command provided by the Windows operating system available from Microsoft Corporation of Redmond Wash. It should be appreciated however that various techniques for identifying the critical information will be well known to those of ordinary skill in the art and any suitable technique may be employed. It also should be appreciated that the specific critical network information may vary depending upon for example the configuration and use of each physical network adapter .

Once the critical network information has been collected the virtual private network tool provides the collected information to the address assignment server in step . In response to receiving the critical network information and any other provided state information for the client computer the address assignment server analyzes the address pool in step to determine non conflicting network information that can safely be used to provision the virtual network adapter for operation. For example the address assignment server will assign a virtual IP VIP address for the virtual network adapter . It also will assign at least one name service host address such as an address to a DNS server and corresponding routing information for the assigned name server host address. If the address assignment server cannot assign network information to provision the physical network adapter without conflicting with the critical network information then the address assignment server sends an error message to the client computer and terminates the process.

In some implementations of the invention the address assignment server may assign network information for use by the virtual network adapter that conflicts with non critical network information such as the network address of a local DNS server among a plurality of DNS servers being used by the physical network adapter . These examples of the invention may then identify these conflicting addresses in e.g. a log which can be sent to the virtual private network tool for use by the client computer .

As previously noted some implementations of the invention may employ the rule based routing system described in U.S. patent application Ser. No. 11 251 592. As discussed in detail in that patent application the remote network may employ the authentication server a separate policy server not shown to create policy rules that control access to resources within the network . These policy rules may be based upon for example access privileges assigned to the client computer a community of which the client computer is a member the identity of the person using the client computer the application seeking access to the resource the computing environment in which the client computer is operating or any combination thereof.

With these implementations of the invention any name service host address assigned for use by the virtual adapter will be obtained from the policy rules i.e. any assigned name service host address will be identified as an accessible resource in the policy rules . Also if the policy rules prohibit the client computer from using one or more addresses in the pool then it is irrelevant whether or not these addresses will conflict with either the critical network information or addresses for other local resources of the client computer .

Next in step the address assignment server determines the connection mode for the connection tunnel. The connection mode which typically is set by the network administrator may be a redirect all mode or a split tunnel mode. In the redirect all mode the address assignment server can override the addresses for the DNS and WINS servers that normally would be used by each physical network adapter by allocating the virtual network adapter conflicting addresses for the IP router routing table along with rules giving precedence to the assigned addresses of the DNS WINS servers . In this mode all data sent through the virtual network adapter will be redirected to the remote network .

For the split tunnel mode the address assignment server can override all of the addresses for DNS and WINS servers that normally would be used by each physical network adapter except for one. This arrangement allows the client computer to achieve both virtual private network and non virtual private network split tunneling through the virtual network adapter and physical network adapters respectively. Thus the address assignment server will identify and allocate one set of addresses for the DNS WINS servers that do not conflict with the addresses for DNS and WINS servers that normally would be used by the physical network adapters .

In the split tunnel mode the address assignment server may have to eliminate the addresses of one more of the DNS WINS servers to avoid a conflict with the one required address for a DNS server and a WINS already employed by the client computer . For this reason split tunnel mode will not work with a single pair of DNS and WINS servers and a single pair of DNS and WINS servers employed by the client computer respectively that conflict. If this situation occurs an error message is generated to the client computer and the process ends.

In step the address assignment server then establishes the VPN routing rules that will be used to add routing information to the IP router routing table for accessing the resources . More particularly the address assignment server will prepare VPN routing rules based upon the policy rules to control how routing information for the resources is added to the IP router routing table . With various examples of the invention each VPN routing rule will contain a resource identifier value and a permission value. The resource identifier value may be an IP address or a fully qualified domain name that identifies a single resource . The resource identifier value also may identify a set of one or more resources . That is the resource identifier value also may be a partially qualified domain name or a plurality of IP addresses expressed either as a subnet or a range of IP addresses.

With some examples of the invention the permission value will only be an inclusion value indicating that the resource or resources identified by the resource identifier value can be accessed by the client computer via the remote network . Some implementations of the invention however may also allow the permission value to be an exclusion value indicating that the resource or resources identified by the resource identifier value cannot be accessed by the client computer . It should be noted that an exclusion value in a VPN routing rule does not exclude a resource from being accessed using a different mechanism separately from the remote network such as through a local area network or through a separate wide area network. 

As discussed in U.S. patent application Ser. No. 11 251 592 an exclusion rule will take precedence over an inclusion rule. Thus if one VPN routing rule indicates that a client computer may access any resource in a domain yourcompany.com but another VPN routing rule indicates that the client computer may not access the resource named accounting.yourcompany.com then the client computer will be prohibited from accessing the resource named accounting.yourcompany.com. Also with various examples of the invention a VPN routing rule having a more specific resource identifier value e.g. network address 128.20.1.12 will take precedence over a VPN routing rule having a more generic resource identifier value e.g. a subnet address 128.20.1.0 .

In step the virtual private network tool activates the virtual network adapter . That is the address assignment server provides the provisioning network information to the virtual private network tool . The virtual private network tool then registers the provisioning network information with the operating system to activate the virtual network adapter and its interface address information is bound to the IP router routing table . Then in step the address assignment server provides the VPN routing rules to the virtual private network tool for subsequent use in accessing the resources as will be described in more detail below.

With some implementations of the invention the virtual private network tool could provide all of the routing rule information to the IP router routing table at one time. Depending upon the size of the VPN routing rules however this might greatly increase the overhead required to maintain and search the IP router routing table . Moreover the VPN routing rules could introduce unnecessary address conflicts to the IP router routing table for resources that may never be requested by the client computer . Accordingly with various embodiments of the invention the virtual private network tool initially will only provide the IP router routing table with the VPN routing rules for accessing name service hosts in the remote network i.e. the DNS WINS servers . When the application submits an address resolution query to one or more of the DNS WINS servers through the virtual network adapter the query reply is monitored to determine what additional routing information should be provided to the IP router routing table . Similarly when the application provides an IP address to the operating system to access a resource the IP address is monitored to determine what additional routing information should be provided to the IP router routing table .

Turning now to in step the software application requests access to a resource using the name of the resource e.g. its domain name . Based upon the routing information for the DNS WINS servers initially propagated to the IP router routing table the virtual network adapter will transmit an address resolution query for the resource name to the DNS WINS servers in step . If the resource is a remote resource and the DNS WINS servers can resolve the name in the query the DNS WINS servers will return the network address corresponding to the resource in step which the virtual network adapter then attempts to pass along to the IP router routing table . In step however the name filter will intercept and examine the contents of the reply. More particularly the name filter will examine the data packets for a DNS WINS server reply returning through the virtual network adapter and parse out the network addresses and domain name reference in the data packets.

In step the name filter searches the VPN routing rules to locate the routing information corresponding to the name of the requested resource . In step the name filter then expands the VPN routing rules maintained in the virtual private network tool to include VPN routing rules specific to each network address returned by the DNS WINS server reply. More particularly if the VPN routing rules indicate that the client computer can access the requested resource then the name filter will generate a corresponding VPN routing rule for each network address identified in the reply. If however the VPN routing rules indicate that the client computer is not permitted to access the requested resource then the name filter will take no action. The name filter then releases the reply returned by the DNS and WINS servers to the application .

When the application subsequently seeks to access a resource using a network address or alternately it initially attempts to directly access a resource using a specific network address it employs the process illustrated in . As seen in this figure in step the software application attempts to access the requested resource using a network address. This request for access provided through the operating system is intercepted by the address filter in step . Next in step the address filter determines if the VPN routing information for the requested resource network address is already in the routing table . If the routing information is already in the routing table then the address filter simply releases the access request for action by the IP router routing table . If however the routing information for the network address of the requested resource is not in the routing table then in step the address filter searches the VPN routing rules to locate the VPN routing rule or rules corresponding to the requested network address. By using the precedence rules discussed in detail above the address filter determines what routing information corresponding to the requested resource if any should be added to the IP router routing table . In step the name filter then provides the appropriate routing information to the IP router routing table .

More particularly if the VPN routing rules indicate that the client computer can access the resource at the requested network address then the address filter will provide the routing information to the IP router routing table . If however the VPN routing rules indicate that the client computer is not permitted to access the resource at the requested network address then the address filter will not provide the routing information to the IP router routing table . The address filter then releases the request to the IP router routing table . If the corresponding routing information was added to the IP router routing table or was already in the IP router routing table then the application will be given access to the requested resource. If the corresponding routing information was not added to the IP router routing table then the IP router routing table will must use existing routing rules to access resource via a physical adapter as if it were an external computer .

It should be noted that the network address for the remote resource may conflict with an existing network address in the IP router routing table e.g. the network address for a local resource. Typically the architecture of the IP router routing table will include precedence rules for handling conflicts. For example the IP router routing table will usually access the most specific address first. If this policy does not resolve the conflict then the IP router routing table will follow priority metrics associated with the conflicting addresses. Because various embodiments of the invention only provide routing information for specific host addresses to the IP router routing table the routing information provided by the address filter will take precedence over conflicting network addresses that are already in the IP router routing table . Still further with some implementations of the invention the address filter with additionally assign the highest priority metric for the routing information it provides to the IP router routing table .

With some embodiments of the invention the address filter maintains a look aside table as noted above. The look aside table maintains a copy of the VPN routing information previously provided to the IP router routing table . This allows the address filter to determine if VPN routing information already has been provided to the IP router routing table without having to query the IP router routing table . Still further the look aside table may include time information e.g. a time stamp associated with the use of each VPN routing information entry. Using this time information the address filter can periodically purge VPN routing information from the IP router routing table that has not been used within a preset amount of time.

It also should be noted that in some situations a remote resource may initiate communications to the application . This type of communication commonly known as back connect or peer to peer access is used for e.g. Voice over IP VoIP telephony applications. When this type of communication occurs the remote resource will send a data packet to the application through the virtual network adapter and the IP router routing table . The address filter then will intercept the data packet and examine the source information contained in the data packet. If the source information includes a network address for a resource that is not already in the IP router routing table then the address filter with compare the source network address with the VPN routing rules to determine if the new network address should be added to the IP router routing table using the same process already described for when application initiates access to resource with a network address.

Thus as described above the IP router routing table receives any necessary VPN routing information on a just in time basis. Using this just in time approach allows a local resource and a remote resource to share the same network address. A conflict between the local resource and a remote resource only occurs when the application specifically seeks to access the remote resource using its network address.

In some situations the client computer may terminate the virtual private network connection between the virtual private network tool and the remote network . For example the user may move from a wired connection with a LAN to a wireless connection with a different LAN. Alternately the virtual private network connection may drop simply because of a temporary electrical connection failure.

When the virtual private network adapter determines that it can no longer communicate with the remote network it notifies the virtual private network tool of the termination of the virtual private network connection. The virtual private network tool will then attempts to resume the virtual private network session. When the virtual private network tool reestablishes the virtual private network connection or establishes a new virtual private network connection after an intentional termination of a previous virtual private network connection it will again complete the authentication process with the authentication server . Once the authentication server has established the identity of the client computer then the virtual private network tool can simply provide the existing state information for the virtual private network adapter to the address assignment server for renewal.

More particularly the virtual private network tool can provide the address assignment server with the network information previously used to provision the virtual private network adapter . If the previous network information does not conflict with the critical network information for the new virtual private network connection e.g. a new IP address for the physical network adapter then the address assignment server can authorize the virtual private network adapter to continue to use that previous network information and with some implementations of the invention previously assigned VPN routing rules . Thus with some embodiments of the invention the virtual private network tool can easily and quickly resume a terminated virtual private network. Moreover the resumption can be made without having to again obtain the related VPN routing rules.

While the invention has been described with respect to specific examples including presently preferred modes of carrying out the invention those skilled in the art will appreciate that there are numerous variations and permutations of the above described systems and techniques that fall within the spirit and scope of the invention as set forth in the appended claims. For example while particular software services and processes have been described as performing various functions it should be appreciated that the functionality of one or more of these services and processes may be combined into a single service or process or divided among additional services and processes.

