---

title: Method and system for reducing communication during video processing utilizing merge buffering
abstract: Methods and systems for reducing communication during video processing utilizing merge buffering are disclosed and may include storing data in a merge buffer in the virtual machine layer in a wireless communication device comprising a virtual machine user layer, a native user layer, a kernel, and a video processor. The data may then be communicated to the kernel via the native user layer. The data may include function calls, and/or kernel remote procedure calls. The data may be communicated via an application programming interface. Video data may be processed in the video processor based on the communicated data. The virtual machine user layer may include a Java environment. The data may be communicated to the kernel via the native user layer when the merge buffer is full or filled to a predetermined level.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135036&OS=09135036&RS=09135036
owner: Broadcom Corporation
number: 09135036
owner_city: Irvine
owner_country: US
publication_date: 20100113
---
This application makes reference to claims the benefit from and claims priority to U.S. Provisional Application Ser. No. 61 287 269 filed on Dec. 17 2009.

Certain embodiments of the invention relate to data processing. More specifically certain embodiments of the invention relate to a method and system for reducing communication during video processing utilizing merge buffering.

Cellular phones have developed from large expensive devices typically used only in cars and owned only by a small percentage of the population to miniature inexpensive and ubiquitous handheld devices and are even more numerous than traditional land line phones in countries with poor fixed line infrastructure. Cellular handsets have incorporated text messaging email connection to the Internet PDAs and even personal computers.

Cellular phones with built in cameras or camera phones have become prevalent in the mobile phone market due to the low cost of CMOS image sensors and the ever increasing customer demand for more advanced cellular phones. As camera phones have become more widespread their usefulness has been demonstrated in many applications such as casual photography but have also been utilized in more serious applications such as crime prevention recording crimes as they occur and news reporting.

Historically the resolution of camera phones has been limited in comparison to typical digital cameras due to the fact that they must be integrated into the small package of a cellular handset limiting both the image sensor and lens size. In addition because of the stringent power requirements of cellular handsets large image sensors with advanced processing have been difficult to incorporate. However due to advancements in image sensors multimedia processors and lens technology the resolution of camera phones has steadily improved rivaling that of many digital cameras.

Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of skill in the art through comparison of such systems with the present invention as set forth in the remainder of the present application with reference to the drawings.

A system and or method for reducing communication during video processing utilizing merge buffering substantially as shown in and or described in connection with at least one of the figures as set forth more completely in the claims.

Various advantages aspects and novel features of the present invention as well as details of an illustrated embodiment thereof will be more fully understood from the following description and drawings.

Certain aspects of the invention may be found in a method and system for reducing communication during video processing utilizing merge buffering. Exemplary aspects of the invention may comprise storing data in a merge buffer in a virtual machine user layer in a wireless communication device. The wireless communication device may comprise the virtual machine user layer a native user layer a kernel and a video processor. The stored data may be communicated to the kernel via the native user layer. The stored data may be communicated to the kernel utilizing function calls and or kernel remote procedure calls. An application programming interface may be utilized to communicate the stored data to the kernel. Video data may be processed by the video processor based on the communicated data. The virtual machine user layer may comprise a Java environment. The data may be communicated to the kernel via the native user layer when the merge buffer is full or reaches a dynamically or statically determined level.

The MMP may comprise suitable circuitry logic interfaces and or code that may be operable to perform video and or multimedia processing for the mobile multimedia device . The MMP may also comprise integrated interfaces which may be utilized to support one or more external devices coupled to the mobile multimedia device . For example the MMP may support connections to a TV an external camera and an external LCD display

The processor J may comprise suitable circuitry logic interfaces and or code that may be operable to control processes in the mobile multimedia system . Although not shown in the processor J may be coupled to a plurality of devices in and or coupled to the mobile multimedia system .

In operation the mobile multimedia device may receive signals via the antenna . Received signals may be processed by the RF block and the RF signals may be converted to baseband by the baseband processing block . Baseband signals may then be processed by the MMP . Audio and or video data may be received from the external camera and image data may be received via the integrated camera . During processing the MMP may utilize the external memory for storing of processed data. Processed audio data may be communicated to the audio block and processed video data may be communicated to the LCD and or the external LCD for example. The keypad may be utilized for communicating processing commands and or other data which may be required for audio or video data processing by the MMP

In an embodiment of the invention the MMP A may be operable to process video signals received wirelessly or generated by an imaging sensor such as the external camera or the camera for example. The MMP may process video signals within a plurality of video modules as described further with respect to .

In an embodiment of the invention the processor J may be operable to configure a virtual machine VM layer within an operating system such as a Java or Microsoft common language runtime CLR environment. In addition the processor J may support a native user layer comprising application and library domains which may interact with the VM layer. The native user layer may communicate with hardware within the processor and the MMP via a kernel remote procedure call RPC within the processor operating system.

In general the user layer may also comprise implementations of various other standard and third party APIs such as the Java MIDP mobile information device profile . An application programming interface API such as open graphics library GL 3D may be utilized for video processing in the MMP and accessed by the user domain.

Communication between the VM layer and hardware via the kernel RPC may be costly in terms of latency time and power for example. In an embodiment of the invention commands to be communicated from the VM layer to hardware such as the MMP may be buffered in a merge buffer in the VM layer such that commands may be communicated out of the buffer when full or at a desired level such that more efficient use of the kernel RPC may be enabled. The merge buffer may comprise memory registers in the processor for example. This is described further with respect to .

In an embodiment of the invention the VM environment may comprise the client side implementation of the graphics API such as OpenGL ES or OpenVG for example. For each function defined by the API specification there may be a function with an appropriate name that may pack the function arguments into the merge buffer and optionally trigger transmission of the merge buffer to the native code and subsequently to the kernel and the video processor. For a small number of functions there may also be code that is executed in order to retrieve a return value from the video processor via the kernel and native code or to store away parameter values which are only meaningful in the user layer such as vertex attribute pointers for example which may be used when processing future calls.

The video processing core may comprise suitable logic circuitry interfaces and or code that may be operable to perform video processing of data. The on chip RAM and the SDRAM comprise suitable logic circuitry and or code that may be adapted to store data such as image or video data.

The image sensor pipeline ISP C may comprise suitable circuitry logic and or code that may be operable to process image data. The ISP C may perform a plurality of processing techniques comprising filtering demosaic lens shading correction defective pixel correction white balance image compensation Bayer interpolation color transformation and post filtering for example. The processing of image data may be performed on variable sized tiles reducing the memory requirements of the ISP C processes.

The GPU B may comprise suitable logic circuitry interfaces and or code that may be operable to offload graphics rendering from a general processor such as the processor described with respect to . The GPU B may be operable to perform mathematical operations specific to graphics processing such as texture mapping and rendering polygons for example.

The 3D pipeline D may comprise suitable circuitry logic and or code that may enable the rendering of 2D and 3D graphics. The 3D pipeline D may perform a plurality of processing techniques comprising vertex processing rasterizing early Z culling interpolation texture lookups pixel shading depth test stencil operations and color blend for example.

The JPEG module E may comprise suitable logic circuitry interfaces and or code that may be operable to encode and or decode JPEG images. JPEG processing may enable compressed storage of images without significant reduction in quality.

The video encoding decoding module F may comprise suitable logic circuitry interfaces and or code that may be operable to encode and or decode images such as generating full HD video from H.264 compressed data for example. In addition the video encoding decoding module F may be operable to generate standard definition SD output signals such as phase alternating line PAL and or national television system committee NTSC formats.

The analog block may comprise a switch mode power supply SMPS block and an on chip SMPS controller which may be adapted to generate its core voltage. The core voltage may be software programmable according to for example speed demands on the mobile multimedia processor allowing further control of power management.

The PLL may comprise suitable logic circuitry interfaces and or code that may be operable to generate suitable clock signals 195 kHz 200 MHz clocks for example for external devices. A crystal the XTAL may be coupled to the PLL and may comprise suitable logic circuitry interfaces and or code that may be operable to generate a stable oscillating signal for the PLL . Other voltages and clock speeds may be utilized depending on the type of application. The mobile multimedia processor may comprise a plurality of power modes of operation for example run sleep hibernate and power down.

The audio block may comprise suitable logic circuitry interfaces and or code that may be operable to communicate with the mobile multimedia processor via an inter IC sound IS pulse code modulation PCM serial low power inter chip media bus SLIMBus audio codec AC 97 interface or other suitable interface for example. In the case of an AC 97 and or an IS interface suitable audio controller processor and or circuitry may be operable to provide AC 97 and or IS audio output respectively in either master or slave mode. In the case of the PCM interface a suitable audio controller processor and or circuitry may be operable to allow input and output of telephony or high quality stereo audio. The PCM audio controller processor and or circuitry may comprise independent transmit and receive first in first out FIFO buffers and may use DMA to further reduce processor overhead. The audio block may also comprise an audio in audio out port and a speaker microphone port not illustrated in .

The mobile multimedia device may comprise at least one portable memory input output I O block. In this regard the memorystick block may comprise suitable logic circuitry interfaces and or code that may be operable to communicate with the mobile multimedia processor via a memorystick pro interface for example. The SD card block may comprise suitable logic circuitry interfaces and or code that may be operable to communicate with the mobile multimedia processor via a SD input output I O interface for example. A multimedia card MMC may also be utilized to communicate with the mobile multimedia processor via the SD input output I O interface for example. The mobile multimedia device may comprise other portable memory I O blocks such an xD I O card.

The debug block may comprise suitable logic circuitry interfaces and or code that may be operable to communicate with the mobile multimedia processor via a joint test action group JTAG interface for example. The debug block may be adapted to access the address space of the mobile multimedia processor and may be adapted to perform boundary scan via an emulation interface. Other test access ports TAPs may be utilized. The phase alternate line PAL national television standards committee NTSC high definition multimedia interface HDMI TV output I F may be utilized for communication with a TV and the universal serial bus USB 1.1 or other variant thereof slave port I F may be utilized for communications with a PC for example. The cameras and or may comprise suitable logic circuitry interfaces and or code that may be operable to generate images and or HD video and communicate with the mobile multimedia processor via a multiformat raw CCIR camera interface for example. The camera I F may also be used for example to connect the mobile multimedia processor to a mobile TV front end.

The mobile multimedia processor may also comprise a plurality of serial interfaces such as the USB I F a serial peripheral interface SPI and a universal asynchronous receiver transmitter UART I F for Bluetooth or IrDA. The SPI master interface may comprise suitable circuitry logic and or code and may be utilized to control image sensors. Two chip selects may be provided for example and the interface may work in a polled mode with interrupts or via a DMA controller . In another embodiment of the invention the interface may comprise an serial interface which may be used for camera control for example. Furthermore the mobile multimedia processor may comprise a plurality of general purpose I O GPIO pins which may be utilized for user defined I O or to connect to the internal peripherals. The display controller may comprise suitable circuitry logic and or code and may be adapted to support multiple displays with VGA XGA or HD resolution for example and to handle 8 9 16 18 24 bit video data.

The mobile multimedia processor may be connected via an 8 16 bit parallel host interface to the same bus as the baseband processing block uses to access the baseband flash memory . The host interface may be operable to provide two channels with independent address and data registers through which a host processor may read and or write directly to the memory space of the mobile multimedia processor . The baseband processing block may comprise suitable logic circuitry interfaces and or code that may be operable to convert RF signals to baseband and communicate the baseband processed signals to the mobile multimedia processor via the host interface for example. The RF processing block may comprise suitable logic circuitry interfaces and or code that may be operable to receive signals via the antenna and to communicate RF or IF signals to the baseband processing block . The host interface may comprise a dual software channel with a power efficient bypass mode.

The main LCD may be adapted to receive data from the mobile multimedia processor via a display controller and or from a second external memory interface for example. The display controller may comprise suitable logic circuitry and or code and may be adapted to drive an internal TV out function or be connected to a range of LCD s. The display controller may be adapted to support a range of screen buffer formats and may utilize direct memory access DMA to access the buffer directly and increase video processing efficiency of the video processing core . Both NTSC and PAL raster formats may be generated by the display controller for driving the TV out. Other formats for example SECAM may also be supported.

The display controller may recognize and communicate a display type to the DMA controller . In this regard the DMA controller may fetch video data in an interlaced or non interlaced fashion for communication to an interlaced or non interlaced display coupled to the mobile multimedia processor via the display controller .

The subsidiary LCD may comprise suitable logic circuitry and or code that may be adapted to communicate with the mobile multimedia processor via a second external memory interface for example. The subsidiary LCD may be used on a clamshell phone where the main LCD may be inside and the subsidiary LCD may be outside for example. The mobile multimedia processor may comprise a RGB external data bus. The mobile multimedia processor may be adapted to scale image output with pixel level interpolation and a configurable refresh rate.

The optional flash memory may comprise suitable logic circuitry interfaces and or code that may be operable to communicate with the mobile multimedia processor via an external memory interface for example. The SDRAM may comprise suitable logic circuitry and or code that may be adapted to receive data from the mobile multimedia processor via the external memory interface for example. The external memory UF may be utilized by the mobile multimedia processor to connect to the SDRAM SRAM Flash memory and or external peripherals for example. Control and timing information for the SDRAM and other asynchronous devices may be configurable by the mobile multimedia processor .

The mobile multimedia processor may further comprise a secondary external memory interface to connect to memory mapped LCD and external peripherals for example. The secondary external memory interface may comprise suitable circuitry logic and or code and may be utilized to connect the mobile multimedia processor to slower devices without compromising the speed of external memory access. The secondary external memory interface may provide 16 data lines for example 6 chip select address lines and programmable bus timing for setup access and hold times for example. The mobile multimedia processor may be adapted to provide support for NAND NOR Flash including NAND boot and high speed direct memory access DMA for example. The mobile multimedia processor may be operable to store data in a merge buffer in a virtual machine environment and enable the interaction operation with the various functional layers such as the virtual machine user layer a native user layer and kernel.

In operation the mobile multimedia processor may be adapted to receive images or video from external cameras such as cameras and or and process the images via the video processor the ISP C and the 3D pipeline D. The video processing core may be integrated on a chip and may be located in regions of the chip with different power vs. performance characteristics.

In an embodiment of the invention the mobile multimedia processor may be operable to operate within a virtual machine VM environment within an operating system such as a Java or Microsoft common language runtime CLR environment. The VM environment may be configured by a processor such as the processor . In addition the processor J may support a native user environment comprising application and library domains which may interact with the VM environment. The native user domain may communicate with hardware within the processor and the MMP via a kernel remote procedure call RPC within the processor operating system.

An application programming interface API such as open graphics library GL 3D may be utilized for video processing in the mobile multimedia processor and accessed by the user domain. Communication between the VM environment and hardware via the kernel RPC may be costly in terms of latency time and power for example. In an embodiment of the invention commands to be communicated from the VM environment to hardware such as the mobile multimedia processor may be buffered in a merge buffer in the VM environment such that commands may be communicated out of the buffer when full or at a desired level such that more efficient use of the kernel RPC may be enabled.

The user layer may comprise suitable circuitry logic interfaces and or code that may be operable to receive and process user requested tasks via applications and libraries in the application layer A and the library layer B. The solid and dashed lines indicate interfaces that may be crossed when moving between layers wherein the solid lines indicate a more costly transition in terms of time power and latency for example as they may involve the physical transmission of data between chips such as from the processor to a video processor on another chip such as the video processing core for example.

The application layer A may comprise suitable circuitry logic interfaces and or code that may be operable to provide a user interface to applications operating within the user layer . The applications may be isolated from hardware such as the video processor by the kernel . Accordingly applications executing in the application layer A may be isolated from other running applications since they may not have direct access to hardware.

The library layer B may comprise suitable circuitry logic interfaces and or code that may be operable to manage the flow of data from the application layer A and the kernel . The library layer B may perform a user to kernel RPC for example in instances where requests tasks are to be transmitted to the kernel .

The kernel may comprise suitable circuitry logic interfaces and or code that may be operable to provide communication of data between the user layer and the video processor . The kernel may comprise a remote procedure call RPC that may enable communication between the library layer B and the kernel and subsequently to the video processor . The kernel may comprise the layer that interfaces with hardware such as in the video processor so that programs in the user layer cannot harm other processes as may happen if user applications were given direct hardware access.

The video processor may comprise suitable circuitry logic interfaces and or code that may be operable to receive task requests from the kernel layer . The video processor may represent processes that run on video processor hardware such as the video processing core described in . The video processor may execute programs that utilize an application programming interface API such as open graphics library GL 3D.

The merge buffer may comprise suitable circuitry logic interfaces and or code that may be operable to store function calls or other task requests to be communicated to the kernel .

In operation one or more OpenGL 3D functions such as a cull mode GL front for example may be requested by an application or library in the user layer . The library layer B would conventionally perform a user to kernel RPC but in an embodiment of the invention due to the cost of crossing the boundary between the user layer and the kernel the requests may be stored in the merge buffer . The requests may be stored until the merge buffer is full or has reached a desired level. In this manner the costly task of crossing the boundaries between the user layer and the kernel as well as between the kernel and the video processor may be minimized by reducing the number of crossings. In instances where the merge buffer is full or has reached a predetermined level an application programming interface API may be utilized to communicate the stored data to the kernel .

The VM user layer may comprise suitable circuitry logic interfaces and or code that may be operable to execute user applications in a VM environment. For example the VM user layer may operate in a Java C Sharp or other Java like environment. The library layer B may be substantially similar to the library layer B but operating under a VM environment.

The merge buffer may be substantially similar to the merge buffer but located in the VM environment of the library layer B.

In operation the interface between the VM user layer and the user layer may be costly to cross in terms of time power and latency for example. Accordingly requests for hardware processing such as in the video processor and communicated from the VM application layer A may be stored in the merge buffer . When the merge buffer is full or filled to a desired level the stored requests may be communicated to the user layer and subsequently communicated to the video processor via the kernel using a user to kernel RPC.

In an embodiment of the invention a method and system are provided for reducing communication during video processing utilizing merge buffering and may comprise storing data in a merge buffer in a virtual machine user layer in a wireless communication device . The wireless communication device may comprise the virtual machine user layer a native user layer a kernel and a video processor . The stored data may be communicated to the kernel via the native user layer . The stored data may be communicated to the kernel utilizing function calls and or kernel remote procedure calls. An application programming interface may be utilized to communicate the stored data to the kernel. Video data may be processed by the video processor based on the communicated data. The virtual machine user layer may comprise a Java environment. The data may be communicated to the kernel via the native user layer when the merge buffer is full or reaches a dynamically or statically determined level.

Certain embodiments of the invention may comprise a machine readable storage having stored thereon a computer program having at least one code section for reducing communication during video processing utilizing merge buffering the at least one code section being executable by a machine for causing the machine to perform one or more of the steps described herein.

Accordingly aspects of the invention may be realized in hardware software firmware or a combination thereof. The invention may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware software and firmware may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

One embodiment of the present invention may be implemented as a board level product as a single chip application specific integrated circuit ASIC or with varying levels integrated on a single chip with other portions of the system as separate components. The degree of integration of the system will primarily be determined by speed and cost considerations. Because of the sophisticated nature of modern processors it is possible to utilize a commercially available processor which may be implemented external to an ASIC implementation of the present system. Alternatively if the processor is available as an ASIC core or logic block then the commercially available processor may be implemented as part of an ASIC device with various functions implemented as firmware.

The present invention may also be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context may mean for example any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form. However other meanings of computer program within the understanding of those skilled in the art are also contemplated by the present invention.

While the invention has been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the present invention without departing from its scope. Therefore it is intended that the present invention not be limited to the particular embodiments disclosed but that the present invention will include all embodiments falling within the scope of the appended claims.

