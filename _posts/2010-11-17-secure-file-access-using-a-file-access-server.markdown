---

title: Secure file access using a file access server
abstract: A secure file access system and method are disclosed which comprises a file access module executed on a processor of a computing device. The file access module receives a request to access an encrypted file from a computer program executed on the computing device and sends an access query including an encrypted first segment of the encrypted file and a user identifier to a file access server via a communication network. The access query enables the file access server, after decryption of the encrypted first segment using a first decryption key, to authorize or deny access to the encrypted second segment based, at least in part, on the user identifier and file access permission data. The file access module decrypts the encrypted second segment using a second decryption key obtained from the file access server to enable the computer program to access the second segment of the file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08621036&OS=08621036&RS=08621036
owner: 
number: 08621036
owner_city: 
owner_country: 
publication_date: 20101117
---
Computing devices and associated computing networks enable users to create share and modify electronic files which are stored on file systems. Access control mechanisms have been implemented to control access to these file systems by certain users or groups of users. These prior access control systems control access of each user to locations such as volumes or folders on the file system. In this way the access control system may prevent an unauthorized user from opening a file that is stored in a location that the user is not authorized to access. One drawback with such an approach is that a file is only protected from unauthorized access so long as it remains in the secure location on the file system. Once the file is copied and moved out of the secure location for example if the file is sent as an attachment to an email or saved to a universal serial bus USB drive the security protections are lost and anyone with access to the email or USB drive can open the file. For this reason some files may be encrypted however encryption keys are difficult to manage particularly when the encrypted data is sent outside an organization for receipt by a third party. As a result many sensitive files are sent out of organizations in unencrypted form exposing them to a risk of unauthorized access.

Implementations for secure file access are disclosed. In at least one implementation a secure file access system is disclosed which comprises a file access module executed on a processor of a computing device. The file access module is configured to receive a request to access an encrypted file from a computer program executed on the computing device. The encrypted file includes an encrypted first segment and an encrypted second segment. The encrypted first segment has a different decryption key than the encrypted second segment. The encrypted first segment includes or indicates file access permission data.

The file access module is also configured to send an access query including the encrypted first segment and a user identifier to a file access server via a communication network. The access query enables the file access server after decryption of the encrypted first segment using a first decryption key to authorize or deny access by the computer program to the encrypted second segment based at least in part on the user identifier and the file access permission data.

The file access module is also configured to receive an access reply from the file access server. The access reply includes key information for decrypting the encrypted second segment only if the file access server has authorized access to the encrypted second segment. The key information includes a second decryption key for decrypting the encrypted second segment or for enabling the computing device to generate or access the second decryption key for decrypting the encrypted second segment.

The file access module is also configured decrypt the encrypted second segment using the second decryption key to enable the computer program to access the second segment of the file. Claimed subject matter however is not limited by this summary as other implementations are disclosed by the following written description and associated drawings.

First client computing device second client computing device file access server and server may each comprise a processor and a data storage device having instructions stored thereon executable by the processor to perform one or more processes. A processor such as example processor comprises hardware to execute computer programs or other suitable instructions. A data storage device may refer to memory mass storage removable storage media or a combination thereof. As one example a file access module may be executed on or by processor of first client computing device by loading file access module from mass storage or removable storage media to memory . In at least some implementations the instructions described herein such as example file access module or instructions may be stored on and distributed via removable storage media. Removable storage media such as a CD ROM DVD a USB flash drive magnetic disk etc. may provide non transitory storage of information.

File access module is configured to receive a request to access an encrypted file from a computer program executed on first client computing device . Computer program may comprise any suitable type of computer program such as for example a file viewer application e.g. a media player application or a file creation application e.g. word processing application . File may be stored on a local data store such as mass storage and or may be stored at a remote data store such as data store . In at least some implementations encrypted file includes an encrypted first segment and an encrypted second segment as depicted in . The encrypted first segment may have a different decryption key than the encrypted second segment. The encrypted first segment may include or indicate file access permission data.

File access module is configured to send an access query including the encrypted first segment and a user identifier to file access server via a communication network such as WAN . In at least some implementations a user identifier may include user credentials such as one or more of a username a password a hash of a username a hash of a password a digital certificate or other suitable authentication information. As one example authentication may be performed locally by file access module or operating system by prompting a user for a username password or other authentication information. As yet another example authentication may be performed remotely by file access server or other server e.g. server based on authentication information e.g. username password or hash thereof transmitted by first client computing device via WAN .

Access query enables file access server after decryption of the encrypted first segment using a first decryption key to authorize or deny access by computer program to the encrypted second segment based at least in part on the user identifier and the file access permission data. The first decryption key may be known to file access server . Access query may be communicated as one or more discrete messages. In at least some implementations access query may be encrypted and communicated from file access module to file access server using transport layer security TLS or secure sockets layer SSL cryptographic protocols.

Data storage device of file access server may have instructions stored thereon executable by processor to process access queries received from client computing devices. File access server is configured to receive access query and return an access reply . File access module is configured to receive access reply from file access server . Access reply may be communicated as one or more discrete messages. In at least some implementations access reply may be encrypted and communicated from file access server to file access module using transport layer security TLS secure sockets layer SSL or other suitable cryptographic protocol.

Access reply may include key information for decrypting the encrypted second segment only if the file access server has authorized access by computer program to the encrypted second segment. If file access server has not authorized access to the encrypted second segment access reply does not include the key information for decrypting the encrypted second segment or access reply may not be returned by file access server . Accordingly computer program may access file only if access is authorized by file access server .

In at least some implementations the key information of access reply includes a second decryption key for decrypting the encrypted second segment. Alternatively the key information may enable file access module to generate or access the second decryption key for decrypting the encrypted second segment. For example the key information may indicate an identity of a shared secret from which the second decryption key may be generated by file access module . As another example the key information may indicate a network resource e.g. server from which file access module may request and receive the second decryption key.

In at least some implementations the second decryption key for decrypting the encrypted second segment is generated at the computing device based at least in part on the key information. However in at least some implementations the second decryption key for decrypting the encrypted second segment is generated at file access server and communicated to file access module . In at least some implementations the second decryption key for decrypting the encrypted second segment is unique to the user identifier and or to the file. However in at least some implementations a second decryption key for decrypting the encrypted second segment may be used for a plurality of user identifiers and or files.

File access module is configured to decrypt the encrypted second segment using the second decryption key to enable computer program to access the second segment of file . In at least some implementations the file access permission data indicates whether a user indicated by the user identifier may perform e.g. via computer program each designated action of a set of one or more designated actions on the file. The set of one or more designated actions may include for example one or more of an open action a save action a save as action a copy action a print action. However the set of one or more designated actions may include any suitable type or number of actions. Access query may further indicate a requested designated action to be performed on the file. Access reply may indicate whether the requested designated action is authorized to be performed.

A file such as file may be stored at a remote data store such as data store residing at data storage device of file access server . The remote data store may alternatively or additionally reside at server . In at least some implementations file access server is configured to enforce versioning control by checking incoming access queries for access to respective versions of the file. The versions of the file may be identified by file access server from one or more of a save date of the file or a hash of at least a portion of the file. File access server may check respective versions of the file against a latest version of the file stored at remote data store or server to determine whether a given access query is requesting the latest version of the file. If the latest version of the file is not being requested file access server may be configured to serve the latest version of the file to the requesting computing device if access is to be granted instead of granting access to an out of date version of the file.

File access module may be implemented in a number of ways. For example file access module may constitute an application programming interface of an operating system a plug in module for a computer program such as computer program an executable computer program such as computer program or a file system driver .

File access module may be configured to generate a file. For example in at least some implementations prior to authorizing access to file file access module or another file access module residing at another computing device may generate file including the first segment and the second segment. The file access module is configured to encrypt the first segment of the file with a first encryption key to obtain the encrypted first segment. The first encryption key may be generated by file access module locally at the client computing device or may be requested and received from file access server .

File access module may be configured to request and receive a second encryption key from file access server . However in at least some implementations the second encryption key may be generated locally at first client computing device for example by file access module . File access module may be configured to encrypt the second segment of the file with the second encryption key to obtain the encrypted second segment. File access module may be configured to save the encrypted first segment and the encrypted second segment on a local data store such as mass storage and or at a remote data store such as remote data store .

The file generation and file access processes described above may be performed across multiple computing devices. For example first client computing device including processor and mass storage having a first instruction set e.g. file access module stored thereon that may be executed by processor to 1 generate a file including a first segment that includes or indicates file access permission data and a second segment that comprises any suitable information for which access is to be controlled 2 encrypt the file to obtain an encrypted first segment and an encrypted second segment such that the encrypted first segment has a different decryption key than the encrypted second segment. Encrypted file may be transmitted or otherwise transferred to second client computing device as indicated at where encrypted file may be stored in mass storage for example.

Second client computing device may include another processor and another data storage device having a second instruction set e.g. file access module stored thereon that may be executed by processor . File access module may be functionally identical to previously described file access module . Accordingly file access module may be configured to 1 obtain encrypted file 2 in response to a request from a computer program of instructions to access encrypted file send an access query including the encrypted first segment of the encrypted file and a user identifier for a user of second client computing device to file access server via a communication network such as WAN 3 receive an access reply from file access server that includes key information for decrypting the encrypted second segment only if the file access server has authorized access to the encrypted second segment and 4 decrypt the encrypted second segment of file using the second decryption key to enable access to the second segment of file by computer program .

First segment may include or indicate one or more of file access permission data file identifier file owner data save date or hash . As one example first segment may include file identifier to indicate file access permission data without file access permission data being present in first segment . A file access server may for example retrieve file permission data from a data store based on the file identifier . File identifier may comprise a globally unique identifier GUID in at least some implementations. Accordingly file access permission data file owner data save date or hash may be omitted from first segment in some examples.

As another example first segment includes some or all of file access permission data file identifier file owner data save date hash or other suitable information. Hash may comprise a hash of at least a portion of file and may be used by a file access server for example to determine the integrity of an access query.

In at least some implementations second segment comprises a payload segment of the file which may include information to which access is to be controlled. Accordingly second segment may include any form of information such as for example a text document a presentation document a spreadsheet document an image file a video file an audio file a computer program or portion thereof or other suitable information.

Operation comprises generating a file including a first segment and a second segment. The first segment may include or indicate file access permission data for example as previously described with reference to . Operation comprises obtaining one or more encryption keys for encrypting the file.

Operation comprises encrypting the file to obtain an encrypted first segment and an encrypted second segment. The encrypted first segment may have a different decryption key than the encrypted second segment. For example the first segment may be encrypted using a first encryption key to obtain the encrypted first segment. The second segment may be encrypted with a second encryption key to obtain the encrypted second segment.

Operation comprises saving the encrypted file to a data storage device. In at least some implementations the encrypted file may be saved as a file having a .ss file extension. However other suitable file extensions may be utilized to indicate that the file is encrypted. The encrypted file may be stored locally at a computing device in mass storage and or may be transmitted to a remote data store for storage.

In some scenarios the encrypted file may be transmitted or otherwise transferred from a first computing device to a second computing device. The encrypted file may be obtained by the second computing device from the first computing device via an email a shared volume or data storage device a portable drive or removable storage media such as a USB flash drive a remote data store accessible via a communication network or other suitable method. In scenarios where the encrypted file is transmitted or otherwise transferred to another computing device operations and may be performed by a first computing device and operations may be performed by a second computing device. However in other scenarios operations may be performed by an individual computing device.

Operation comprises receiving a request to access the encrypted file from a computer program executed on a computing device. The request to access the encrypted file may be generated by the computer program in response to a user selecting or requesting a particular action or operation to be performed by the computer program with respect to the encrypted file. For example the request may indicate a desired action such as one or more of an open action a save action a save as action a copy action or a print action. Other suitable actions or operations may be requested beyond the examples described herein.

Operation comprises sending an access query including the encrypted first segment and a user identifier to a file access server via a communication network. The user identifier may comprise user credentials or an indication of authentication of the user credentials for example. Operation may be performed in response to receiving the request to access the encrypted file at operation . In at least some implementations the access query may further indicate an action that is requested by the computer program or by a user via the computer program such as one or more of an open action a save action a save as action a copy action or a print action for example.

The file access server receives the access query including the encrypted first segment and use identifier via the communication network. The access query enables the file access server to decrypt the encrypted first segment using a first decryption key and to authorize or deny access to the encrypted second segment based at least in part on the user identifier and the file access permission data of or indicated by the first segment. As one example the first segment may include the file access permission data. As another example the first segment may include a file identifier that is associated with and indicates a location e.g. a data store where the file access server may obtain the file access permission data.

If the access query indicates an action that is requested by the computer program the file access server may authorize or deny access to the encrypted second segment further based on the action indicated by the access query. As one example the file access query may compare the requested action user identifier and file identifier to the file permission data to identify whether a user identified by the user identifier may access the file indicated by the file identifier in a manner that is consistent with the requested action. For example the file access permission data may indicate whether a user indicated by the user identifier is authorized to access the encrypted second segment of the file.

In at least some implementations the first decryption key may be identical to the first encryption key used to encrypt the first segment of the file. However in at least some implementations the first decryption key may be different than the first encryption key used to encrypt the first segment of the file. For example the first encryption key may comprise a private key that is unknown to the client computing device.

The file access server is configured to process the access query and return an access reply to the computing device that initiated the access query. If access is authorized at operation the process flow of method may proceed to operation . Operation comprises receiving an access reply from the file access server. The access reply includes key information for decrypting the encrypted second segment only if the file access server has authorized access to the encrypted second segment. The key information includes a second decryption key for decrypting the encrypted second segment or enables the second computing device to generate or access the second key. Operation comprises decrypting the encrypted second segment of the file using the second decryption key to enable access to the second segment of the file. In at least some implementations the second decryption key may be identical to the second encryption key used to encrypt the second segment of the file. However in at least some implementations the second decryption key may be different than the second encryption key used to encrypt the second segment of the file.

In at least some implementations the file access permission data may indicate whether a user indicated by the user identifier may perform each designated action of a set of one or more designated actions on the file. As previously described the set of one or more designated actions may include for example one or more of an open action a save action a save as action a copy action a print action. The access query may further indicate a requested designated action to be performed on the file. The access reply may indicate whether the requested designated action indicated by the access query is authorized to be performed. If for example a requested designated action is not authorized to be performed the file access server may withhold the second decryption key from the requesting computing device to deny the requested access.

Alternatively the process flow of method may proceed to operation if access has not been authorized by the file access server. Operation comprises receiving an access reply from the file access server that indicates denial of access to the encrypted second segment. The access reply received at operation does not include the second decryption key for example. In at least some implementations an access reply may not be sent by the file access server if access is not granted.

Operation comprises sending user credentials from the client computing device to a file access server. As one example the file access module may send user credentials for a user to the file access server in response to the user initiating the secure save operation. User credentials are one example of a user identifier that may be sent to the file access server. User credentials may include any suitable authentication format such as a username and password digital certificate etc. Alternatively an indication that user credentials have been authenticated by the file access module may be sent by the file access module to the file access server. In at least some implementations operation additionally may include sending a file identifier to the file access server with the user credentials or indication that user credentials have been authenticated. The file identifier may comprise a globally unique identifier GUID in at least some implementations.

Operation may be utilized for example to generate an encrypted file via a secure save operation. For an existing encrypted file that was previously saved an access request may be utilized to obtain an encryption key for decrypting the encrypted file as previously described with reference to Operations of for example.

The file access server may receive the user credentials or indication of authentication and optionally a file identifier. Operation comprises creating a file identifier and a file encryption key at a file access server. In at least some implementation if a file identifier has been sent to the file access server by the client computing device the file access server may utilize the file identifier received from the client computing device. A file identifier created by the file access server may comprise a GUID in at least some implementations. Operation may be performed by the file access server in response to obtaining a request for the file encryption key from the client computing device. File access server may associate the file encryption key with the file identifier for example at the data storage device of the file access server.

Operation comprises encrypting the file identifier and file encryption key with a private key at the file access server to obtain an encrypted package. The private key may be known only to the file access server and may be unknown by the client computing device. Operation comprises sending the encrypted package including the file identifier and the file encryption key from the file access server to the client computing device.

The client computing device may receive the encrypted package. Operation comprises at the client computing device writing the encrypted package as a first segment of the file and then encrypting a second segment of the file with the file encryption key received from the file access server. In this way the first segment of the file may be encrypted with a private key that is unknown to the client computing device and the second segment of the file may be encrypted with the file encryption key that is different from the private key.

Operation comprises sending a success message from the client computing device to the file access server. In at least some implementations a client computing device sends a success message to the file access server in response to successfully generating a file having a first encrypted segment and a second encrypted segment utilizing the process flow of operations for example. The file access server may receive the success message from the client computing device and may store the success message in a data store in association with the file identifier for example.

The above embodiments enable secure access to encrypted files in a way that does generally not depend on controlling access to the storage location at which the file is saved. This has the advantage of preserving the access controls on the file even when the file leaves an environment in which traditional storage location based access controls are in place such as when a file is emailed or copied to a USB drive.

The system may be equipped with a reporting module at the file access server configured to keep access statistics of all of the files managed by the file access server. The reporting module may be configured to record which users access the files and the time of each access. The file access module may also be configured to collect statistics at each client computing device regarding the individual actions requested by users for each file including open close print save save as copy and paste commands the full path name at which the file is stored on the local client device etc.

From time to time an administrator or other user with sufficient access privileges e.g. file owner may deauthorize a user from accessing a file or files. At the time of deauthorization the file access server may be configured to send a command to the file access module to cause any open documents for which a user has been deauthorized to be forced closed and further access prevented. This can prevent users from foiling the access controls described herein by keeping documents open on their local client devices.

While generally encrypted data is not searchable the systems described herein may include search algorithms that enable searching of an encrypted file. One manner in which the file access module may accomplish this is by receiving search queries from users including keywords to be searched over one or more encrypted files and passing those search queries to the file access server. The file access server in turn may perform a protected search remotely and return results in the form of a list of links to files containing the search terms for example to the requesting file access module for display to the user. The user would have to be authorized to access a file in order to traverse the links and open the files. Alternatively the file access module may host a local protected database in which the protected search may be conducted and the search results file list may be generated locally.

The system may also be configured to execute versioning control over the files under its management. For example when two users each have a locally stored encrypted copy of a file with the same GUID and each user has access to change their version of the file the file access server may receive save requests from the respective file access modules on each user s machine and the file access server may intelligently create two different versions of the file and assign modified GUIDs to each version. The file access server may then send a message to each other concurrently editing user that edits have been made by another user and ask each user whether to display and ultimately harmonize the changes made by each other user into a current version incorporating all edits. In this manner users with access privileges may in certain circumstances harmonize all changes into a single up to date file and in other circumstances work in parallel on different versions without attempting to harmonize.

It should be understood that the embodiments herein are illustrative and not restrictive since the scope of the invention is defined by the appended claims rather than by the description preceding them and all changes that fall within metes and bounds of the claims or equivalence of such metes and bounds thereof are therefore intended to be embraced by the claims.

