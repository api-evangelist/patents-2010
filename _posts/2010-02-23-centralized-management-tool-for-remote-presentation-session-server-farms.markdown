---

title: Centralized management tool for remote presentation session server farms
abstract: Systems, methods, and computer-readable storage media are disclosed for configuring and managing a remote presentation session server farm. In an example embodiment, a central management server (CMS) receives a task to be carried out on a server farm (e.g. make an otherwise unused server operate as a remote presentation session server). The CMS then validates this request against a model of allowed tasks, and the current configuration of the server farm. Once validated, the CMS converts the task into operations to be carried out by one or more servers of the server farm. The CMS then sends these operations to the respective servers, where the operations are received by an agent process executing on the server. Each agent performs the received operations on the server upon which it executes, and sends an indication of whether the operations were completed successfully to the CMS. The CMS may then update its model and current configuration to reflect the current configuration of the server farm.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08495193&OS=08495193&RS=08495193
owner: Microsoft Corporation
number: 08495193
owner_city: Redmond
owner_country: US
publication_date: 20100223
---
Although computers were once isolated and had minimal or little interaction with other computers computers now interact with a wide variety of other computers through Local Area Networks LANs Wide Area Networks WANs dial up connections and the like. With the wide spread growth of the Internet connectivity between computers has become more important and has opened up many new applications and technologies. The growth of large scale networks and the wide spread availability of low cost personal computers has fundamentally changed the way that many people work interact communicate and play.

One increasing popular form of networking may generally be referred to as remote presentation systems which can use protocols such as Remote Desktop Protocol RDP Independent Computing Architecture ICA and others to share a desktop and other applications with a remote client. Such computing systems typically transmit the keyboard presses and mouse clicks or selections from a client computing device to a server computing device relaying the screen updates back in the other direction over a communications network e.g. the INTERNET . As such the user has the experience as if his session is being executed entirely on his client computer when in reality the client is only sent screenshots or frames of the applications as they appear on the server side.

In an environment where many remote presentation sessions are to be served concurrently such as for a large corporation these remote presentation sessions may be served by a grouped plurality of servers commonly referred to as a server farm. The servers may perform different role services for instance one server may function as a connection broker that assigns incoming remote presentation session requests to other servers that serve remote presentation sessions . Current techniques for managing such server farms require an administrator to configure and manage multiple roles that span a plurality of physical servers. This is a time consuming process and one that requires an administrator to have a deep understanding of the various roles of the server farm and associated dependencies.

It would therefore be an improvement over the prior art to provide improved techniques for configuring and managing a remote presentation session server farm. Methods systems and computer readable storage media are disclosed for these techniques.

These present techniques incorporate the use of logical tasks rather than the aforementioned roles. A task may comprise for instance adding a new virtualization host server to the pool of available virtualization host servers in the server farm. Such a task is usually a term in which an administrator thinks as opposed to the corresponding changes that must be made to various role services to implement such a task. In using a task based paradigm the often complex interaction and dependencies between different role services is hidden from an administrator as he manages a remote presentation session deployment as a single entity and from a single management point.

A task may be broader than the above. A task may comprise an operation of creating a remote presentation session server farm. Upon being provided with some parameters for this task such as the computers to be included in the remote presentation session server farm the task is then executed to produce the desired result.

In an example embodiment a central management server CMS receives a task to be carried out on a server farm e.g. make an otherwise unused server operate as a remote presentation session server . The CMS then validates this request against a model of allowed tasks and the current configuration of the server farm. Once validated the CMS converts the task into operations to be carried out by one or more servers of the server farm. The CMS then sends these operations to the respective servers where the operations are received by an agent process executing on the server. Each agent performs the received operations on the server upon which it executes and sends an indication of whether the operations were completed successfully to the CMS. The CMS may then update its model and current configuration to reflect the current configuration of the server farm.

The primary embodiment considered herein involves a remote presentation server farm. The use of a remote presentation session server farm is for illustrative purposes and it may be appreciated that these techniques may be applied to a server farm comprising some heterogeneous group of servers servers that do not all perform the same role.

The primary embodiments described herein discuss computer executable instructions executed by one or more processors of a computing device. However it may be appreciated that these techniques may be implemented entirely in terms of hardware such as through appropriately programming field programmable gate arrays FPGAs or some combination thereof. It can be appreciated by one of skill in the art that one or more various aspects of the disclosure may include but are not limited to circuitry and or programming for effecting the herein referenced aspects of the present disclosure the circuitry and or programming can be virtually any combination of hardware software and or firmware configured to effect the herein referenced aspects depending upon the design choices of the system designer.

The foregoing is a summary and thus contains by necessity simplifications generalizations and omissions of detail. Those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. The system memory includes computer readable storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the example operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through an non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through a output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are example and other means of establishing a communications link between the computers may be used.

Remote presentation server farm comprises a plurality of role services. These services may be implemented on one or more computers. For instance each service may be implemented on a single computer with or without the use of virtual machines to separate one or more roles or the services may be apportioned among a plurality of computers. Further more than one computer or virtual machine may perform the same role. For instance remote presentation virtualization host server role may be performed by a plurality of computers hence a remote session connection broker role that brokers a connection between a client and one of a plurality of server roles as selected by connection broker role such as based on the respective load of the server roles .

Remote presentation server farm may comprise remote presentation gateway role remote presentation web access role remote presentation session host server role remote session connection broker role domain services role remote presentation virtualization host server role and virtual machines .

Remote presentation gateway role enables a client computer to connect to a remote presentation session of remote presentation server farm over a communication network . Remote presentation web access role publishes virtual desktop to clients using a web interface to conduct a remote presentation session. Remote presentation session host server role redirects clients to virtual machines. Remote session connection broker role enumerates and orchestrates virtual machines. Domain services role stores users assignments to personal virtual desktops. Remote presentation virtualization host server role hosts personal virtual desktops and virtual desktop pools using a virtual machine manager VMM . Virtual machines are managed by the VMM and provide an environment in which virtual desktops execute.

To connect to a remote presentation session of remote presentation server farm client may log in to a web page served by remote desktop web access role using the Hyper Text Transfer Protocol Secure HTTPS protocol. Remote desktop web access role queries remote session connection broker role to retrieve a list of virtual desktops to be displayed by client . A user of client may select the virtual desktop he wishes to use and an indication of that virtual desktop is sent to remote session gateway role via HTTPS. Remote session gateway role forwards this connection to remote session host server role . Remote session host server role is running in redirection mode and requests remote session connection broker role to orchestrate a virtual machine for client and return the Internet Protocol IP address of the virtual machine. Remote presentation session host server role sends a redirection packet to client via remote session gateway .

Remote session connection broker role queries domain services role to retrieve the personal virtual desktop for client . In an embodiment where it is implemented with a MICROSOFT WINDOWS operating system domain services role may be an ACTIVE DIRECTORY domain services role. Remote session connection broker orchestrates the virtual machine and returns to IP address to remote session host server role . Client connects directly to the virtual machine through remote session gateway .

Central management server comprises deployment and management data store and role relationship model .

Deployment and management data store comprises a model of the current deployment for example this may include the number and identity of roles that exist in the current deployment as well as other available computing resources e.g. an additional physical computing device or an additional virtual machine that may be executed on a physical computing device that is currently part of the deployment that are available to be incorporated into the deployment. Deployment and management data store may also comprise required information for managing the deployment.

Role relationship model comprises a model of relationships and dependencies between the roles of the session server farm for example adding a new virtualization host server to the server farm not only requires configuring this new virtualization host server but also configuring a remote session connection broker role so that this remote session connection broker is aware of the new virtualization host server and may redirect incoming client remote presentation session requests to this new virtualization host server.

Deployment and management data store and role relationship model may be implemented for example as computer executable instructions in a memory or a database where central management server comprises a computing device.

Central management server may be communicatively coupled with an agent resident on the computing device that executes each role e.g. remote session connection broker role and or domain services role of a remote presentation session server farm such as the remote presentation session server farm depicted in . Where each role on a computing device is executed within a separate virtual machine an agent may execute within each of those separate virtual machines to communicate with the respective role. Where each role is executed outside of a virtual machine such as on computing device itself there may be a single agent executing on computing device that communicates with each role.

Agent may communicate with each role on agent s computing device such as through extensible markup language XML contained within remote procedure calls RPCs to instruct a role to perform various tasks. A role may have an application programming interface API exposed that allows other computing devices or processes to call those APIs to control the management of the role. For instance connection broker role may have an API that allows a computing device to instruct connection broker role that there is an additional virtualization host server that it may now redirect remote presentation session to this additional virtualization host server. These APIs may be called by agent .

With this central management server instead of configuring a specific role in a particular server a particular task may be configured and managed. This may be effected through a task based user interface management tool that communicates with central management server through an exposed interface. Central management server decodes the task enforces the dependencies or constraints and resolves the task to a set of sub tasks that are specifically targeted to other servers hosting the role services. These services are intimated so that a set of tasks are executed. Agents residing on these servers receive the request and execute a set of local API calls in a specific sequence to produce the desired task.

This remote presentation session server farm with task based management may be for instance the remote presentation session server farm with task based management depicted in .

Operation depicts receiving an indication of a task to perform on the server farm the task corresponding to a first role of the server farm. This may comprise invoking the central management server interface for an administrative task. For instance an indication of a task to be performed for the remote presentation session server farm may be received by an administrator s computing device during a period of administrator maintenance on the remote presentation session server farm. Additionally the central management server interface may directly accept an indication of a task such as from a console of the central management server.

The first role may comprise for instance a remote presentation gateway role a remote presentation web access role a remote presentation session host server role a remote session connection broker role a domain services role or a remote presentation virtualization host server role.

Operation depicts the central management server interface invoking a request handler. The request handler may be a process executing on the central management server that communicates with the central management server interface and performs tasks indicated to the central management server interface.

Operation depicts determining that the task is valid. This may comprise determining that the task is valid based on a model of tasks and or determining that the task is valid based on a current configuration of the server farm.

In an embodiment operation may comprise the request handler validating a task against a model and the current deployment.

Operation may further comprise determining a dependency of the task based on a model of tasks determining that the first sequence is to be performed prior to when the second sequence is to be performed based on the dependency and wherein instructing the computer corresponding to the second role to perform the second sequence of actions further comprises instructing the computer corresponding to the second role to perform the second sequence of actions upon determining that the computer corresponding to the first role has performed the first sequence of actions.

This may comprise determining any dependencies involved in performing the task such that to add a virtualization host server to the server farm also requires configuring a connection broker role to be aware of this new virtualization host server. This may also comprise identifying specific existing roles in the current deployment covered by these dependencies. For instance it may comprise identifying the two connection broker roles that exist in the current deployment that would need to be configured as above.

Operation depicts determining a first sequence of actions to perform on the first role the first sequence corresponding to the task. In an embodiment this may include determining a second sequence of actions to perform on the second role the second sequence corresponding to the task.

This may comprise targeting and sequencing the task to roles of the remote presentation session server farm as one or more sub tasks alternately referred to as a sequence of actions . For instance where the task involves adding a virtualization host server to the server farm one sub task may comprise configuring the virtualization host server role on this new virtualization host server and a second sub task may comprise configuring the connection broker role to be aware of this new virtualization host server role so that it is configured to send new remote presentation sessions to it. In dividing the task into these sub tasks the task is sequenced to its respective roles.

Further it may be that the sequence that the sub tasks are performed in is important. For instance it may be in a server farm that a connection broker role cannot be configured to be made aware of a new virtualization host server role unless that new virtualization host server role first exists. In such a situation configuring the new virtualization host server role must be performed prior to configuring the connection broker role so the sub tasks will be sequenced such that the configuring the new virtualization host server role sub task is performed prior to the configuring the connection broker role sub task.

Operation depicts instructing a computer corresponding to the first role to perform the first sequence of actions. In an embodiment operation includes instructing a computer corresponding to the second role to perform the second sequence of actions.

This may comprise sending an indication of the first sequence of actions to an agent executed on the computer corresponding to the first role. In an embodiment the first sequence of actions comprises an API call to an API corresponding to the first role. In an embodiment the first role is executed within a guest partition of the computer corresponding to the first role and the agent is executed within a host partition of the computer corresponding to the first role.

This may comprise sending each sub task to its respective agent. Where the central management server and the respective agents are communicatively coupled across a communications network such as an intranet this may comprise sending an indication of each sub task to the respective agent across this communications network.

Operation depicts the each agent executing the respective sub task and sending a response back to the request handler. An agent may execute a sub task by performing a series of API calls to the corresponding role service as described above. In an embodiment the agent is sent an indication of which API calls to make to the corresponding role service. In another embodiment the agent is sent a more general indication of the sub task to be performed and from this indication of a sub task to be performed determines one or more API calls to make to the corresponding role service and does so. Upon completing an attempt to perform the sub task the agent may send a status response back to the request handler. This may comprise an indication that the sub task was successfully executed or an indication that there was an error in executing the sub task along with optionally an indication of the specific nature of the error. For instance performing the sub task may require changing four settings for the role service and only two were able to be changed. The status response may indicate the two settings that were changed and the two settings that were not changed.

Operation depicts updating an indication of a current configuration of the server farm based on the first sequence of actions. This may comprise updating the model and data store with the current information about the remote presentation session server farm. This may comprise the current configuration of the remote presentation session server farm regardless of whether each sub task above was successfully executed. For instance if a new virtualization host server role was configured but the connection broker role was not successfully configured to be aware of this new virtualization host server role the model is updated to reflect this reality.

Operation depicts communicating the completion of the task to the entity that invoked the central management server interface. This may comprise an indication that the request was successfully carried out or that some error occurred while attempting to carry out the request and optionally information identifying the error.

While the present disclosure has been described in connection with the preferred aspects as illustrated in the various figures it is understood that other similar aspects may be used or modifications and additions may be made to the described aspects for performing the same function of the present disclosure without deviating therefrom. Therefore the present disclosure should not be limited to any single aspect but rather construed in breadth and scope in accordance with the appended claims. For example the various procedures described herein may be implemented with hardware or software or a combination of both. Thus the methods and apparatus of the disclosed embodiments or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium. When the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus configured for practicing the disclosed embodiments. In addition to the specific implementations explicitly set forth herein other aspects and implementations will be apparent to those skilled in the art from consideration of the specification disclosed herein. It is intended that the specification and illustrated implementations be considered as examples only.

