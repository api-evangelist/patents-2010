---

title: Synchronizing videos
abstract: A device may receive a first video, receive a second video, and locate first frames, in the first video, in which a first change in scene occurs. In addition, the device may locate second frames, in the second video, in which a second change in scene occurs. Further, the device may determine whether the first change in scene matches the second change in scene and achieve synchronization when the first change in scene matches the second change in scene.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08928809&OS=08928809&RS=08928809
owner: Verizon Patent and Licensing Inc.
number: 08928809
owner_city: Basking Ridge
owner_country: US
publication_date: 20100915
---
To employ a computer in the analysis of a video signal it may be necessary to first encode the video into a format that may be easily recognized and manipulated by the computer. This is accomplished via a video encoder. Therefore the perceived quality of video that a set top box outputs depends on the capabilities of the video encoder and the original video signal.

When the encoder digitizes a video program the signal that the encoder generates may depend on the precise starting point in the video program at which the video server begins the encoding. This is particularly true for encoding schemes that employ temporal compression such as MPEG2 and MPEG 4. Furthermore Gaussian noise in the video stream will be different for different encoding sessions. Consequently even from the same video program it is unlikely that the video encoder will generate an identical video signal across two encoding sessions.

When set top boxes of the same make and model receive an encoded video signal from the same video stream the set top boxes may generate different output video signals. There are many reasons for the differences. One reason may be that the set top boxes use different decoding algorithms e.g. different versions of a decoder . Another reason may be that the set top boxes produce different amounts of noise in the output video signals. Yet another reason may be that with respect to hue color and saturation each set top box may be calibrated differently from other set top boxes. Yet another reason may be that each set top box is designed to generate output video whose quality depends on a processing load of the set top box and the set top boxes may be under different processing loads. For example the set top boxes may use a decoding algorithm in which rendering a particular frame depends on minute delays in processing.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

As used herein the term frame or image may refer to an image or an image portion that is copied or obtained from another image. A frame may be obtained from different sources such as a camera video stream photograph picture etc. The term video may include multimedia content e.g. a movie sports program television program etc. . Depending on the context the term video and video stream may be used interchangeably.

In the following a device may synchronize two videos video streams. That is the device may locate a sequence of frames e.g. images in a first video stream and a corresponding sequence of similar frames in a second video stream. The device may synchronize the two videos over a time span.

Content player devices and and video analysis device may each include a computer like devices and or components for handling video streams. Network may include a wired or wireless network over which devices communicate e.g. a fiber optic network a local area network LAN a wide area network WAN a wireless LAN a metropolitan area network MAN a cellular network a public switched telephone network PSTN an intranet the Internet a satellite based network any other network or a combination of networks .

In system when content player device outputs a first video stream to video analysis device video analysis device may store the first video stream for example as a file or as a sequence of files first file or first sequence of files . Each of the files may include a frame of the first video stream. When content player device sends a second video stream to video analysis device video analysis device may store the second video stream as a second file sequence of files. Video analysis device may synchronize the first and second video streams by comparing the first file sequence of files to the second file sequence of files. In some implementations the names of files may indicate the numerical sequence of the corresponding frames within a video stream.

Depending on the implementation video analysis device may synchronize two videos for different reasons. For example in one implementation video analysis device may synchronize the two videos to determine the quality of the second video stream relative to the first. This may allow for example a vendor of content player device or content provider e.g. one who provides the first second video stream to improve or modify its products and or services.

In another example video analysis device may synchronize the two videos to detect whether a first video includes a copy of all or a portion of the second video. Accordingly based on a result of the detection a user may determine for example whether a manufacturer distributor of the first video qualifies as a potential copyright infringer.

In yet another example a user may obtain and send a sample video e.g. the first video stream to a service content provider. The service content provider may use the sample video to identify a full length video that includes and therefore synchronizes with the sampled video. The service content provider may send the full length video or information identifying the full length video to the user.

In video analysis device begins the video synchronization process by examining frames of first video stream starting at the frame at t. When video analysis device detects a change in scene between a frame which occurs at t and a frame in first video stream video analysis device searches for similar corresponding frames in second video stream . That is video analysis device uses frames and as an anchor to which video analysis device synchronizes second video stream .

Upon locating frames and as the frames corresponding to frames and video analysis device may match other frames following to the corresponding frames in video stream e.g. match other frames between times tand tin first video stream to other frames between times tand tin second video stream to continue to synchronize two video streams .

Processor may include a processor a microprocessor an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA and or other processing logic e.g. embedded devices capable of controlling network device . Memory may include static memory such as read only memory ROM and or dynamic memory such as random access memory RAM or onboard cache for storing data and machine readable instructions e.g. programs scripts etc. .

Storage unit may include a floppy disk CD ROM CD read write R W disc and or flash memory as well as other types of storage devices e.g. hard disk drive for storing data and or machine readable instructions e.g. a program script etc. . Depending on the context the term memory storage storage device and or storage unit may be used interchangeably. For example a computer readable storage device may refer to both a memory and or storage device.

Input component and output component may provide input and output from to a user to from network device . Input output components and may include a display screen a keyboard a mouse a speaker a microphone a camera a DVD reader Universal Serial Bus USB lines and or other types of components for converting physical events or phenomena to and or from signals that pertain to network device .

Network interface may include a transceiver e.g. a transmitter or receiver for network device to communicate with other devices and or systems. For example via network interface network device may communicate over a network such as the Internet an intranet a terrestrial wireless network e.g. a WLAN WiFi WiMax etc. a satellite based network an optical network etc. Network interface may include a modem an Ethernet interface to a LAN and or an interface connection for connecting network device to other devices e.g. a Bluetooth interface .

Communication path may provide an interface through which components of network device can communicate with one another.

Video analyzer may compare images transform images e.g. scale translate rotate etc. determine qualities of videos and or other operations that are related to video processing. In particular video analyzer may synchronize two videos. Video database may include videos for analysis by video analyzer . In one implementation video database may include sets of files where each set corresponds to a video and files of the set correspond to frames of the video.

If the input indicates that the user does not wish one or more videos to be analyzed e.g. the user activates a cancel button on a menu block NO video analyzer may perform a cleanup operation block . For example video analyzer may remove a pop up window from a display screen redraw a GUI window provide for a different menu delete an object from memory etc.

Otherwise block YES video analyzer may select two videos to be compared or synchronized in accordance with other user input block . For example assume that the user has sent e.g. via a web user interface a video clip to video analysis device . In response video analyzer in video analysis device may identify a list of videos from which a match may be identified via video synchronization.

Video analyzer may determine whether two or more videos can be synchronized block . Furthermore video analyzer may use the result of the determination to provide a response to the user input received at block e.g. the name of a video that can be synchronized with a video that the user selected the quality of a first video stream in comparison to a second video stream to which the first video stream can be synchronized etc. block .

Video analyzer assumes that video stream may lag or precede video stream by a time difference DT. Thereafter video analyzer searches in video stream for two frames that are similar to and correspond to frames . The search may be performed over frames or equivalently over a time period T during which frames can be played by a device e.g. content player device . If video analyzer finds the corresponding frames in video stream process may return to the process that called or invoked process e.g. process .

If video analyzer does not locate in video stream two frames that correspond to frames video analyzer performs another search for the corresponding frames in video stream with a time difference DT as illustrated in . Video analyzer may re detect frames and perform the search for the corresponding frames over frames or equivalently over a time period T.

If video analyzer locates the corresponding frames in video stream process may return to the process that called or invoked process . Otherwise process may assume that video stream may lag or precede video stream by even a larger time difference e.g. DT .

In this manner video analyzer may continue the search with increasing time differences between video streams and until video analyzer either finds the frames in video stream or determines that video streams and cannot be synchronized e.g. video analyzer has performed a number of searches that exceeds a threshold . In either case process may return to the calling process.

Returning to process may begin with video analyzer setting or assuming an initial time difference e.g. latency delay etc. between a first video stream and a second video stream block . For example video analyzer may set the time difference to zero. Thereafter video analyzer may attempt to synchronize the two video streams with the assumption that the first video stream lags the second video stream by the time difference block .

If the video streams are successfully synchronized block YES process may return to for example block of process along with an indication that the two videos can be have been synchronized. Otherwise block NO video analyzer may attempt to synchronize the two video streams again with the assumption that the second video stream lags the first video stream by the same time difference block . If video analyzer is able to successfully synchronize the two videos block YES video analyzer may return to for example block of process along with an indication that the two videos can be have been synchronized.

Video analyzer may determine whether video analyzer needs to try again to synchronize the video streams block . For example video analyzer may count the number of times that video analyzer has attempted to synchronize the two video streams. If the number is greater than a predetermined threshold e.g. five attempts video analyzer may conclude that no additional attempt to synchronize the videos needs to be made.

If video analyzer determines that another attempt to synchronize the two videos is necessary block YES video analyzer may set a different time difference e.g. a longer latency block and proceed to block . Otherwise block NO process may return to for example block of process with an indication that the two videos cannot be synchronized.

Otherwise video analyzer may conclude that a scene change has not occurred and proceed to compare the next pair of frames and . If video analyzer determines that frames and are sufficiently different video analyzer may conclude that the a scene change has occurred in pair and return to calling process . Otherwise video analyzer may conclude that a scene change has not occurred and repeat the preceding portion of process with the following pair of frames not labeled .

In process as video analyzer continues to attempt to detect a change in scene in successive pairs of frames video analyzer may gradually decrease the threshold to which the sum of the differences of the frames are compared. By lowering the threshold video analyzer may increase the probability of detecting a change.

Returning to process may begin with video analyzer selecting a first pair of frames block . Video analyzer may determine whether a change in scene occurs in the frames block . If there is a change in scene block YES process may return to block of process . Otherwise block NO process may select the next pair of frames in the first video stream block .

Video analyzer may determine whether a threshold T for detecting a difference between the two selected frames is to be changed block based on one or more factors. For example in one implementation video analyzer may determine over a period of time whether a sufficient number of pairs of consecutive frames have been tested for a change in scene.

If threshold T is not to be changed block NO video analyzer may return to block . Otherwise block YES video analyzer may decrement the threshold by a predetermined amount block and return to block . In some implementations there may be a lowest threshold value below which video analyzer does not further decrease the threshold.

In process by adaptively lowering threshold T video analyzer provides for detecting a scene change even when frames of the first video stream are relatively similar. The value of threshold T may correspond to a degree of homogeneity of the video stream.

For example assume that the scene change occurred at 100frame of the first video stream and the time difference is equivalent to a span of time for displaying 10 frames of the second video stream. In such a case video analyzer may select the 100 10 frame of the second video stream at block .

Video analyzer may compare a first of the two frames detected in the first video stream to the frame selected from the second video stream at block block . If video analyzer determines that the two frames are not similar block NO process may proceed to block . At block video analyzer may select a frame that follows the selected frame in the second video stream i.e. switch to the next frame block . Process may proceed to block .

Video analyzer may determine whether all frames of the second video stream within a preset time window e.g. T in or T in have been compared to the first of the two frames detected in the first video stream. If the frames have been compared block YES process may terminate and return to the calling process e.g. process at block or block . Otherwise block NO process may return to block .

If video analyzer determines that the frame selected from the second video stream is similar to the first of the two frames detected in the first video stream block YES process may proceed to where video analyzer may compare a second of the two frames detected in the first video stream to a frame following the selected frame in the second video stream block .

If video analyzer determines that the second of the two frames in the first video stream is not similar to the second frame in the second video stream block NO process may go to block . Otherwise block YES the two frames in the second video stream correspond to the two frames in the first video stream and video analyzer may detect whether a change in scene occurs in the two frames of the second video stream block .

If there is no change in scene process may proceed to block . If there is a change in scene block YES video analyzer may determine whether the change matches the change in scene in the two frames in the first video stream. For example assume that video analyzer stores in a first array information related to a change in scene in the two frames of the first video stream and stores in a second array information pertaining to a change in scene in the two frames of the second video stream. In such an instance to determine whether the change in scene in the first video stream matches the change in scene in the second video stream video analyzer may determine for each element in the first array and each corresponding element in the second array an absolute value of the difference between the corresponding elements of the arrays. Further video analyzer may obtain the sum of the absolute values for all of the elements of the arrays normalized by the total number of elements in the first or second array. The normalized sum may represent the degree of match between the change in scene in the first video stream and the change in scene in the second video stream.

Video analyzer may determine whether the change in scene in the first video stream matches the change in scene in the second video stream block . For example video analyzer may compare the normalized sum obtained from the first and second arrays to a predetermined threshold. If the normalized sum is greater than the threshold video analyzer may determine that there is no match block NO and process may go to block . Otherwise block YES process may return to the calling process e.g. process with an indication that the two frames in the first video stream match the two corresponding frames in the second video stream.

In process video analyzer may perform the initial comparison at block with a relatively low threshold. This may provides for detecting two corresponding frames in distorted videos. Although the low threshold tends to increase the probability of obtaining false positives video analyzer neutralizes or negates this by performing acts that are associated with blocks and . Each of blocks and provides for additional hurdles for achieving video synchronization and therefore decreases the probability of obtaining false positive synchronization.

Returning to video analyzer may begin process by obtaining a first bitmap from a first of two consecutives frames of the first video stream block . Video analyzer may obtain the bitmap by for example invoking an operating system call a video Application Programming Interface API etc. Similarly video analyzer may also obtain a second bitmap from a second of the two consecutive frames of the first video stream block . In addition video analyzer may select an initial column number and row number of the first bitmap e.g. zeroth column and row in the first bitmap in effect selecting a first pixel in the first bitmap for processing at block .

Video analyzer may obtain a distance X between the selected pixel in the first bitmap and a corresponding pixel in the second bitmap block . In one implementation distance X may be obtained by the following expression Weight abs blue color component of the selected pixel in the first bitmap blue color component of a corresponding pixel in the second bitmap abs red color component of the selected pixel in the first bitmap red color component of the corresponding pixel in the second bitmap abs green color component of the pixel in the first bitmap green color component of the corresponding pixel in the second bitmap .

Video analyzer may obtain a new column number e.g. new column number prior column number 1 to select another pixel in the first bitmap and a corresponding pixel in the second bitmap block . Furthermore video analyzer may determine whether the newly obtained column number exceeds a width of the first second bitmap block . If the column number does not exceed the width block NO process may return to block to obtain the distance between the newly selected pixel in the first bitmap and the corresponding pixel in second bitmap.

If the column number exceeds the width block YES process may proceed to block where video analyzer obtains a new row number block . In addition video analyzer may reset the column number to the initial column number e.g. zero .

Video analyzer may determine whether the newly obtained row number exceeds a height of the first second bitmap block . If the row number does not exceed the height block NO process may return to block to obtain the distance between a pixel designated by the new column and row numbers in the first bitmap and the corresponding pixel in the second bitmap. Otherwise block YES video analyze may conclude that all pixels in the first bitmap have been processed and proceed to block .

In the above in the loop formed by blocks through for each distance X computed at block video analyzer may also compute and store in an array a value D f X where f X is 1 when X constant 1 and f X is 0 when X constant 1. The dimension of the array may correspond to the number of pixels in the first second bitmap. In addition video analyzer may accumulate the values of X over the loop formed by blocks through .

Video analyzer may determine whether the accumulated value of X is greater than a threshold T block . If the accumulated value of X is greater than the threshold T block YES process may proceed to block and return to the calling process e.g. process with a null pointer value. If the accumulated value of X is less than or equal to the threshold block NO process may proceed to block and return to the calling process with the array in which values of D are stored.

In process depending on the implementation video analyzer may compute X and or D in different ways. For example in one implementation video analyzer may weight each of the color components differently in computing X.

Video analyzer may begin process by obtaining a first bitmap from a first frame and a second bitmap from a second frame block . The first and second frames may be for example the first of the two consecutive frames of the first video stream and the first of the two corresponding frames in the second video stream. In another example the first and second frames may be the second of the two consecutive frames of the first video stream and the second of the two corresponding frames in the second video stream. In addition video analyzer may select an initial column number and row number of the first bitmap in effect selecting a first pixel in the first bitmap for processing at block .

From blocks through video analyzer may process pixels in the first bitmap and second bitmaps in a manner similar to acts that are associated with blocks through . More specifically for each of the pixels in the first and second bitmaps video analyzer may obtain a distance V between the selected pixel in the first bitmap and a corresponding pixel in the second bitmap block . In one implementation distance V may be obtained by the following expression Weight blue color component of the selected pixel in the first bitmap blue color component of a corresponding pixel in the second bitmap red color component of the selected pixel in the first bitmap red color component of the corresponding pixel in the second bitmap green color component of the pixel in the first bitmap green color component of the corresponding pixel in the second bitmap . In addition to computing V video analyzer may also accumulate the value of V over the pixels in the first bitmap and second bitmap block .

At the end of the loop formed by blocks through video analyzer may compare the accumulated value of V to a predetermined threshold T block . If the accumulated value is greater than T block NO process may proceed to block and then return to the calling process e.g. process with the indication that the frames corresponding to the first and second bitmaps are not similar e.g. return false. . Otherwise block YES process may proceed to block and then return to the calling process with the indication that the frames corresponding the first and second bitmaps are similar e.g. return true .

In the foregoing description video analysis device may perform different processes e.g. processes through for synchronizing two videos. Video analysis device may locate a sequence of frames e.g. images in a first video stream in which a scene change occurs and locate the corresponding sequence of similar frames in a second video stream. Video analysis device may synchronize the two video streams over a time span.

Depending on the implementation video analysis device may synchronize two videos for different reasons. For example in one implementation video analysis device may synchronize the two videos to determine the quality of the second video stream relative to the first video. In another example video analysis device may synchronize the two videos to detect whether a first video stream includes a copy of all or a portion of the second video stream. In yet another example a user may obtain and send a sample video e.g. the first video stream to a service content provider to identify a full length video to which the sample video can be synchronized.

The foregoing description of implementations provides illustration but is not intended to be exhaustive or to limit the implementations to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the teachings.

In addition while series of blocks have been described with regard to exemplary processes illustrated in and the order of the blocks in the processes may be modified in other implementations. In addition non dependent blocks may represent acts that can be performed in parallel to other blocks. Further the processes may include other blocks in different arrangements.

It will be apparent that aspects described herein may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects does not limit the invention. Thus the operation and behavior of the aspects were described without reference to the specific software code it being understood that software and control hardware can be designed to implement the aspects based on the description herein.

Further certain portions of the implementations have been described as logic that performs one or more functions. This logic may include hardware such as a processor a microprocessor an application specific integrated circuit or a field programmable gate array software or a combination of hardware and software.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the invention. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification.

No element act or instruction used in the present application should be construed as critical or essential to the implementations described herein unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

