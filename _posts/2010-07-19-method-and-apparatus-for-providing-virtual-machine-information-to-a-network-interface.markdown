---

title: Method and apparatus for providing virtual machine information to a network interface
abstract: A hypervisor preferably provides VM identification, priority and LUN/LBA range information to the HBA when a VM is created. Alternatively, the HBA can determine that a LUN/LBA range is new and request VM identity, priority and LUN/LBA range from the hypervisor. The HBA creates a table containing the VM identification, priority and LUN/LBA range. The HBA then detects operations directed to the LUN/LBA range and does a lookup to determine VM identification and priority. VM identification and priority are then mapped into a field in a frame using a unique identifier. The unique identifier can either be placed using reserved bits on the existing Fiber Channel (FC) header or can use bits in an additional header, such as a modified IFR header.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08719069&OS=08719069&RS=08719069
owner: Brocade Communications Systems, Inc.
number: 08719069
owner_city: San Jose
owner_country: US
publication_date: 20100719
---
This application claims the benefit under 35 U.S.C. 119 e of U.S. Provisional Patent Application Ser. No. 61 228 127 entitled Virtual Machine Identification in Packets Transmitted over a Network filed Jul. 23 2009 which is hereby incorporated by reference.

This application is related to U.S. patent application Ser. No. 12 838 627 entitled Method and Apparatus for Determining the Identity of a Virtual Machine filed concurrently herewith and by the same inventors which is hereby incorporated by reference.

The present invention relates generally to storage area networks. Particularly the present invention relates to operation of storage area networks with attached hosts running virtualization software and having a plurality of virtual machines.

Virtual machines VMs are being used in increasing numbers in networks. They are advantageous because they maximize the use of the hardware resources in the network particularly the host or server hardware. However the use of virtual machines presents problems when the host machine is connected to a storage area network SAN . For a number of reasons it is desirable to have visibility of the particular virtual machines in the various hosts on the SAN. These reasons include simplified management through the use of a single management tool cost back charging relating to resource use and improved quality of service QoS or prioritization of the communications for given VMs.

Current VM hypervisors do not readily provide this capability. For example in VMware the VMs can be separately identified on the SAN if they use the NPIV features provided by the host bus adaptors HBAs . But to use NPIV the VM must be setup to use raw device mapping RDM of the hypervisor. This results in management difficulties in both the hypervisor and on the SAN. On the SAN zoning becomes very complicated as each VM must be operated on individually. Similarly SAN QoS is also more difficult to manage because of the individual nature of the VMs and their NPIV addresses.

VMware ESX the prevalent hypervisor provides an alternate technique referred to as VMFS or virtual machine file system. It is much easier to administer VMs when VMFS is used so the majority of server administrators would prefer to utilize VMFS. But VMFS does not allow identification on the SAN of the individual VMs. Currently NPIV cannot be used even with its attendant SAN management issues. So the inability to manage charge back and so on has limited the use of hypervisors using VMFS operation on the SAN.

Similar issues are present with Hyper V from Microsoft and its clustered shared volume CSV file system and XenServer from Citrix with the Control Domain and Storage Repositories.

As VMFS or CSV depending on the hypervisor is the greatly preferred technique for providing storage resources in a hypervisor it would be desirable to be able to better operate with VMFS or CSV based systems on a SAN.

According the embodiments of the present invention the hypervisor preferably provides VM identification priority and LUN LBA range information to the HBA or network interface when a VM is created and provides VM identification at the beginning of each new command. Alternatively the HBA or network interface can determine that a VM or LUN LBA range is new and request VM identity priority and LUN LBA range from the hypervisor. The HBA creates a table containing the VM identification priority and LUN LBA range. The HBA then detects operations directed to the VM or LUN LBA range and does a lookup to determine priority. VM identification and priority are then mapped into a field in a frame using a unique identifier. The unique identifier can either be placed using reserved bits on the existing Fibre Channel FC header or can use bits in an additional header such as a modified IFR header. With the unique identifier in the frame fabric wide handling of the frames for QoS is greatly simplified as the unique identifier can be directly mapped to SLAs and priority levels. Additionally statistics based on the frames can also readily be developed based on particular VMs to allow greatly improved chargeback mechanisms and the like. Further the presence of the unique identifier allows improved management of the SAN as operations can be traced back directly to individual VMs not just physical hosts for operations such as zoning and access control

The unique identifier can also be used in the storage devices. One particular use is to incorporate the VM instance into the caching algorithm with per VM caching not just per host caching.

The host includes a hypervisor which executes a virtual machine file system VMFS . A series of virtual machines in VM VM execute on top of the VMFS . Similarly the host includes a hypervisor a VMFS and virtual machines VM VM .

Illustrated in is a path from VM to storage unit . This path indicated by the long dashed line traverses the VMFS to the hypervisor the link the switch the link the switch and the link . VM has a similar path to storage unit . VM has a path which traverses the VMFS the hypervisor the link the switch the link the switch and the link to reach storage unit . The VM has a path which traverses the VMFS the hypervisor the link the switch and the link to the storage unit .

Packets or frames the terms being used synonymously in this description of VM and VM travel identical routes to the storage unit so it is very difficult to determine which packets were related to which path and therefore it is very difficult to prioritize the two sets of packets differently. VM in the host and VM in the host use different routes to contact storage unit and would have different source addresses but if VM were transferred to host using VMotion then the paths would align and the same difficulty would appear as with VM and VM.

In a host B executing a hypervisor which is operating with an SCSI network interface card NIC hardware which in turn is connected to an iSCSI SAN which is connected to the storage unit . Elements and items similar to those shown in receive the same numbering with the addition of the letter B. Thus VMFS B is connected to an iSCSI driver . The iSCSI driver includes an iSCSI API which operates similarly to the HBA API .

In a host C executing a hypervisor is connected to converged network adapter CNA hardware which is connected to a Fibre Channel over Ethernet FCoE SAN which is connected to the storage unit . Similar elements in to those of are numbered similarly and end with the letter C. The VMFS layer C is connected to an FCP driver C with the FCP driver C connected to a CNA driver . The CNA driver is connected to the CNA hardware . The CNA driver includes an FCoE API which operates similarly to the HBA API .

In at step the VMFS A receives a SCSI command provided from the guest operating system A through the SCSI driver A and the SCSI virtualization layer A. In step the VMFS A determines if virtual machine identification is needed to be provided in the SCSI command. If so control proceeds to step where the VMFS A places VM identification values in either the SCSI CDB or an extended CDB. If no identification is needed or used as done in selected embodiments or after the VM identification has been provided in step control proceeds to step where the VMFS A provides the SCSI CDB to the FCP driver A.

Return frames from the storage unit can be developed at least two different ways. First the storage unit can include an HBA similar to HBA in that it can provide the unique identifier in any return frames. The storage unit HBA stores the unique identifier information in its context tables and builds the proper frame structure to allow the inclusion of the unique identifier. Second if the storage unit cannot provide the unique identifier the switches that form the FC SAN can monitor for return frames having a D ID and OXID that match the S ID and OXID of the frames that included the unique identifier. Upon detecting the D ID and OXID match for a frame that does not include the unique identifier the switch can then reformat the frame to include the unique identifier. This allows the various operations to be done on both flow directions.

An alternative to the HBA doing the command snooping and the placement of the unique identifier in the frame is to have the snooping and unique identifier insertion done by the switch connected to the HBA . The switch needs to receive the VM identification priority and LUN LBA range to allow the snooping of received frames. The snooping is much like that done by the HBA in step except that it is done on the normal frames provided by the HBA . In one variation the VM identification priority and LUN LBA range are provided from the HBA to the switch in command packets so that the HBA retains the interface with the VM. In this case the switch will also communicate with the HBA to request the VM identification priority and LUN LBA range for frames that miss the table in the switch. The HBA will do the query described above and provide the information to the switch. This variation minimizes the work being performed in the HBA to just the simple interfaces with the VM and leaves the snooping and frame development to the more powerful switch. A second variation has the hypervisor providing the VM identification priority and LUN LBA range directly to the switch. In this variation the APIs are effectively between the switch and the hypervisor not the HBA and the VMFS. This is less desirable as new commands and the like have to be developed for both the hypervisor and the switches. A third variation has the hypervisor and the switch cooperating with a management entity which effectively has the APIs shown in the HBA of . This is simpler than the second variation as the interfaces will be more easily developed but will require the constant operation of the management entity.

The frame provided to the fabric includes the unique identifier of the VM. The various devices in the fabric can examine the frame to determine the unique identifier and use that as an entry into tables which define the priority and handling of the frame. This information is provided across the fabric using a management tool which can select a VM from the information present in the HBA and then propagate necessary priority and handling information appropriate for each device in the fabric to those devices. Thus the user or administrator need only use one management tool to track the VM through the SAN and then obtain desired information such as traffic information used for charging back to the proper department. The management tool will also be able to simply define the SLA of the VM and set the priority and handling of the frames across the fabric accordingly. And it is noted that all of this is done with the hypervisor using a file system such as VMFS which does not readily provide information about the VMs to the HBA. It is also noted that no changes need to be made to modules such as VMFS. The minimal operation uses an API from the HBA driver back into the hypervisor via the hypervisor storage API with the preferred operation also including the hypervisor proactively providing VM information to the HBA driver on VM creation or modification.

While the above description has focused on operations using the FC HBA similar operations occur with iSCSI and FCoE variations with the iSCSI driver and iSCSI NIC hardware or CNA driver and CNA hardware being substituted for the HBA driver and HBA hardware . Similarly switch operations for the embodiments would be done by the Ethernet switches forming the iSCSI SAN or FCoE SAN . In iSCSI frames the unique identifier can be placed in a new tag similar to a VLAN tag as shown in or at some possible location in the frame. In FCoE frames the unique identifier can be placed in the FC frame as described above as shown in .

Various fabric level operations can be performed using the unique identification value representing the VM provided in the frames. These include quality of service QoS encryption and or compression by VM zoning access control migration of VMs between hosts in the same or different data centers fabrics or network clouds and other VMotion aspects improved statistics by VM and federated management of the SAN.

The following U.S. patents or applications are incorporated by reference to provide further details relating to QoS usage of the VMs U.S. Pat. No. 7 239 641 entitled QUALITY OF SERVICE USING VIRTUAL CHANNEL TRANSLATION U.S. Pat. No. 7 426 561 entitled CONFIGURABLE ASSIGNMENTS OF WEIGHTS FOR EFFICIENT NETWORK ROUTING Ser. No. 11 782 894 filed Jul. 25 2007 entitled METHOD AND APPARATUS FOR DETERMINING BANDWIDTH CONSUMING FRAME FLOWS IN A NETWORK Ser. No. 11 674 637 filed Feb. 13 2007 entitled QUALITY OF SERVICE USING VIRTUAL CHANNEL TRANSLATION Ser. No. 12 119 440 filed May 12 2008 entitled AUTOMATIC ADJUSTMENT OF LOGICAL CHANNELS IN A FIBRE CHANNEL NETWORK Ser. No. 12 119 436 filed May 12 2008 entitled METHOD AND SYSTEM FOR FACILITATING APPLICATION ORIENTED QUALITY OF SERVICE IN A FIBRE CHANNEL NETWORK Ser. No. 12 119 448 filed May 12 2008 entitled METHOD AND SYSTEM FOR CONGESTION MANAGEMENT IN A FIBRE CHANNEL NETWORK Ser. No. 12 119 457 filed May 12 2008 entitled WORKLOAD MANAGEMENT WITH NETWORK DYNAMICS and Ser. No. 12 119 430 filed May 12 2008 entitled METHOD AND SYSTEM FOR FACILITATING QUALITY OF SERVICE IN EDGE DEVICES IN A FIBRE CHANNEL NETWORK. 

The following U.S. patent is incorporated by reference to provide further details relating to encryption and or compression usage of the VMs U.S. Pat. No. 7 533 256 entitled METHOD AND APPARATUS FOR ENCRYPTION OF DATA ON STORAGE UNITS USING DEVICES INSIDE A STORAGE AREA NETWORK FABRIC. 

The following U.S. patents or applications are incorporated by reference to provide further details relating to zoning usage of the VMs U.S. Pat. No. 7 366 194 entitled FIBRE CHANNEL ZONING BY LOGICAL UNIT NUMBER IN HARDWARE and U.S. Pat. No. 7 352 740 entitled EXTENT BASED FIBRE CHANNEL ZONING IN HARDWARE. 

The following U.S. application is incorporated by reference to provide further details relating to migration and VMotion usage of the VMs Ser. No. 10 356 659 filed Jan. 31 2003 entitled METHOD AND APPARATUS FOR PROVIDING VIRTUAL PORTS WITH ATTACHED VIRTUAL DEVICES IN A STORAGE AREA NETWORK. 

The knowledge of the VMs provided in the frames can also be used by the storage devices connected to the fabric. One common operation in a storage device is caching of data. By detecting the VMs based on the unique identifier in the frames the caching algorithm employed in the storage unit can be improved by breaking down to the VM level rather than the S ID or host address level as down today. A combination of caching algorithms could be used some by address and some by VM. The details of the caching could also be varied between VMs based on priority values.

As discussed VMware ESX is used as the described embodiment but various other hypervisors can be used such as Microsoft s Hyper V with CSV other variations of VMware products and other vendor products. Further the preferred embodiment was discussed based on a FC SAN environment. Other SANs such as iSCSI and FCoE can also be used alone or in combinations as illustrated in with appropriate changes to and .

The above description is illustrative and not restrictive. Many variations of the invention will become apparent to those skilled in the art upon review of this disclosure. The scope of the invention should therefore be determined not with reference to the above description but instead with reference to the appended claims along with their full scope of equivalents.

