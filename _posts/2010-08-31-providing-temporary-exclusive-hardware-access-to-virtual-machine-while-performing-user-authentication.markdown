---

title: Providing temporary exclusive hardware access to virtual machine while performing user authentication
abstract: A computer system includes an authentication service running in a virtual machine. The authentication service uses the hardware components of the computer system in performing a user authentication process and responds to a remote call from another virtual machine by performing the user authentication process and returning a result.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08806481&OS=08806481&RS=08806481
owner: Hewlett-Packard Development Company, L.P.
number: 08806481
owner_city: Houston
owner_country: US
publication_date: 20100831
---
An important aspect of security in computers and computing systems is authentication of the identity of a user. Strong user authentication often employs multifactor authentication which may require a password a mechanical token such as a smart card or USB token and or recognition of a distinctive biological token of the user such as a fingerprint a facial pattern or a retinal pattern. Multifactor authentication typically requires use of specific subsystems such as a card reader a camera a finger print sensor and a retinal scanner that an operating system or application requiring user authentication can access. Unfortunately the communications between authentication subsystems and an operating system or application are subject to attack and impersonation. This has required manufacturers to add security capabilities in each authentication subsystem. For example a fingerprint sensor may need the ability to provide tamper resistance against replay man in the middle attacks and unauthorized modifications of matchers and templates both in transit and in storage . The addition of security capabilities generally increases the complexity and cost of authentication subsystems. A side effect of the increased complexity is differences in authentication subsystems from different manufacturers which makes it more difficult to produce a computing system that works with authentication subsystems from different manufacturers. Further even with additional levels of security authentication subsystems may still have vulnerabilities to attacks through malware Trojans and viruses so that the subsystems are still not highly secure.

In the past applications often needed extensive modification to take advantage of various authentication tokens such as a smart card fingerprints or a facial pattern. Systems and methods are needed to increase the security of user authentication while delivering lower cost and greater flexibility.

In accordance with an aspect of the present invention simple devices peripherals or subsystems such as keyboards webcams and USB interfaces can provide authentication tokens without requiring the subsystems to implement complicated and expensive security protection measures. For security an authentication service can be isolated in a secure virtual machine within a computer system and a virtualization layer of the computing environment can dynamically or permanently provide the authentication service with exclusive access to subsystems needed for authentication of a user. Accordingly during an authentication process devices such as keyboards and camera which may at other times be shared with other less secure virtual machines are temporarily exclusive resources of an authentication virtual machine. The authentication process being in a secure virtual machine and having exclusive access to required subsystems is thus more secure from malware that may be running in other virtual machines. When authentication is complete the subsystems to which the authentication virtual machine had exclusive access can be released for general use or kept as the exclusive resource of the authentication virtual machine if the subsystem is not needed by other virtual machines. In addition to increasing security use of a secure virtual machine for the authentication service can also simplify testing of authentication functionality.

The secure nature of exclusive access with a secure virtual machine permits secure authentication without requiring component subsystems to implement expensive security protocols. The reduction in component complexity can reduce overall computer costs and complexity and give computer manufacturers more flexibility in selection of components used in authentication. shows a computer system in which an authentication virtual machine can be implemented. Computer system can be a personal computer that is portable or otherwise a smart phone or any computing device for which user authentication may be desired. In the illustrated configuration computer system includes core circuitry connected to components such as a pointing device e.g. a mouse a keyboard a display a camera a fingerprint sensor and a card reader . Some or all of components and may be integrated within a shared enclosure with core circuitry of computer system or may be peripherals connected to core circuitry through external cabling.

Core circuitry can be on a motherboard a combination of motherboards and daughter boards or any suitable configuration for the circuitry desired in computer system . Computer architectures and corresponding core circuitry which are well known in the art and constantly in a state of development can be used for core circuitry of computer system . shows only one example of core circuitry to illustrate a definite embodiment of the invention. In the illustrated embodiment core circuitry includes a processor or processors such as an x86 microprocessor a memory such integrated circuit memory e.g. DRAM and or a disk drive system interface hardware such as USB interfaces and a trusted platform module TPM .

TPM is a hardware component having sealed storage hardware isolation that make the capabilities of TPM secure from malicious software that may be executed in computer system . Some capabilities of TPM typically include remote attestation generation cryptographic keys and secure storage of encryption of information. For remote attestation TPM can securely create evidence in the form of a hash key that indicates the state of the hardware and or software of computer system . A remote party can use the hash key to verify that computer system is in a verified state. TPM can further employ a root encryption key which may be burned into TPM during production or employ a trusted key descended from the root key to encrypt information. The TPM specification e.g. TPM specification is 1.2 Revision 103 published on Jul. 9 2007 promulgated by the Trusted Computing Group describes a standard for trusted platform modules generally and is hereby incorporated by reference in its entirety.

Some additional examples of components that are not illustrated in but may be included in a computer system and used in multifactor authentication processes include microphones accelerometers or a global positioning system GPS . More generally any device capable of providing a computer system with token information or a user secret via a bus such as a USB 1394 or serial parallel legacy port or an interface such as a Bluetooth or Near Field Communication NFC interface can be used during an authentication process. For example a generic USB flash drive or a mobile telephone can be used as an external token that can then be combined with password fingerprint voice recognition or other tokens used in a multifactor authentication.

In accordance with an aspect of the invention an authentication service is implemented in a virtual machine where the fundamental and well established security properties of a virtualized environment are used to strengthen the security of the authentication system. The security characteristics of the secure virtual machine allow removal of complex cryptographic and security protocols from components such as camera fingerprint sensor and even card reader . This can reduce the complexity and cost of these components while allowing component selection based on a specific function of the particular device e.g. a fingerprint or other biometric sensor selected for the best biometric performance rather than data security capabilities. 

The logical architecture of computer system includes virtual machines and using shared hardware and . Virtual machines and in computer system are distinguished as being a control domain a secure graphical user interface SGUI virtual machine an authentication virtual machine and guest virtual machines which a virtualization layer monitors. An exemplary embodiment of computer system uses a Xen system for virtual machine monitoring. Xen provides an example of virtual machine monitoring that is currently well known but the choice of Xen or more generally a virtual machine architecture including a control domain as illustrated in is simply for illustration of one specific embodiment of the invention. Some other currently available virtual machine architectures are provided through products such as VMWare ESX Parallels Workstation and CITRIX Xen Server to name a few. Implementations of authentication virtual machine more generally do not require the specific configuration of computer system to use a Xen type or any other specific type of virtualization.

Virtualization layer is a software layer used to virtualize hardware interfaces to virtual machines and disposed on a partitioned memory space of computer system . For the Xen based embodiment virtualization layer corresponds to the Xen hypervisor which is the lowest and most privileged software layer. Control domain SGUI virtual machine authentication virtual machine and guest virtual machines are above virtualization layer and therefore have less privilege. Further virtualization layer controls distribution of the processing tasks in virtual machines and across the processor or processors of computer system .

Control domain runs a control operating system and in Xen terminology is referred to as domain 0 or dom0. In general the control operating system in control virtual machine boots automatically when virtualization layer boots and versions of Xen with control operating systems such as Linux NetBSD and Solaris as the dom0 are known. Under the Xen system the operating system of control domain receives special management privileges. In particular a system administrator can log into control domain in order to manage any guest operating systems in guest virtual machines . As noted above a control operating system and a special control domain is not required in alternative embodiments of the invention.

The guest operating systems in virtual machines are commonly referred to as domain U or domU in Xen terminology. Several operating systems may function as guest operating systems domU in virtual machines if the guest operating system is compatible with the hardware of computer system e.g. if the processing core or cores not shown of computer system support x86 virtualization. Guest operating systems OS to OSn in virtual machines may be the same or different for different virtual machines and typically operating system OS to OSn are used for running of applications such as but not limited to an internet browser a word processing application a spread sheet application a calendaring application or a financial management application. In general guest operating systems OS to OSn may be vulnerable to malicious software.

SGUI virtual machine provides a secure graphical user interface for use by control domain authentication virtual machine and guest virtual machines . The exact architectural and design details for SGUI virtual machine is not critical to the authentication processes and the presence of a separate SGUI virtual machine in unnecessary for some embodiments of the invention. However SGUI virtual machine can provide a secure and consistent user interface for secure user authentication processes initiated by applications running under different operating systems in virtual machines . SGUI virtual machine may be used to solicit graphical based input without the risk that the input is spoofed in the OS. For example SGUI virtual machine can ensure the user is typing in a window controlled by authentication virtual machine and not a window associated with a rogue procedure that is trying to steal credentials. In alternative embodiments a secure graphical user interface may be part of or run in authentication virtual machine or control domain or may be omitted.

Authentication virtual machine is a secured virtual machine containing an authentication service . In particular authentication virtual machine can be a small dedicated code base for an operating system that is not running general services. The code surface is generally small with narrow and well controlled interfaces into authentication virtual machine . There are many ways to construct authentication virtual machine and authentication services and embodiments of authentication virtual machine and services are not limited to only being based on a specific base operating system or a specific set of services. In some alternative embodiments from the embodiment shown in authentication virtual machine is not separated from control domain . For example authentication service may be run within control domain . Authentication service includes an authentication enforcement engine a token authentication manager and secure storage . Authentication enforcement engine controls user authentication processes. Token authentication manager generally manages and all authentication tokens and in the specific embodiment of includes device manager software to for hardware components employed in a user authentication process. In the illustrated embodiment managers and are respectively for a fingerprint sensor a keyboard a card reader a camera and a trusted platform module . More generally the token authentication managers in authentication virtual machine may depend on the specific hardware components available for user authentication whether or not that specific hardware is currently employed in computer system .

Authentication service implements an interface or a set of functions or procedures that may be called from any of virtual machines and using remote procedure calls. For example authentication service may implement the functionality of ProtectTools family of security products from Hewlett Packard Company. In particular the IPTAuthenticate interface from ProtectTools allows an application to store a user specific secret in a secure environment e.g. secure storage so that the application can request retrieval of that secret at a later stage after the user is forced to authenticate using system specified multifactor authentication policies. Further authentication service can extend the authentication functionality for use by multiple applications running under multiple disparate operating systems running at the same time in virtual machines . Some specific features of the interface of an exemplary embodiment of authentication service are described further below.

Authentication enforcement engine in authentication service controls user authentication processes that enforce authentication policies represented by data structures in secure storage . The user authentication processes generally employ the available system hardware e.g. devices or subsystems and to perform a multifactor user authentication. In general authentication enforcement engine represents a daemon process with a logic execution section that enforces the authentication policy for an application and user by authenticating the user through the specified policy and required tokens. In general authentication enforcement engine exposes authentication service over the remote procedure call channels of virtualization layer and upon receiving an authentication request interfaces with various tokens to authenticate the user at runtime using managers to in accordance with the required authentication policy and or use of the tokens .

Managers to sometimes referred to herein as Token Configuration Managers TCM typically contain drivers configuration software or other software required for access to respective hardware components employed in a user authentication process. TCMs to may be responsible for configuring individual authentication tokens which may be stored in secure storage for use in system and to personalize the tokens and logically tie the tokens to users allowing the users to authenticate themselves later using these tokens. In general each authentication device is associated with a different type of token and different TCMs respectively corresponding to the devices may be needed to represent the respective token type at run time. At a broader level a TCM uses a device specific SDK suitable for an operating system to initialize and configure a token. For example smart cards need to be initialized with a global access PIN and smart card manager can use reader to interface with an inserted smart card. TCM can use the SGUI to alert the user to insert the smart card if not already inserted or available ask the user to enter a PIN if not already initialized through secure keyboard input and then initialize the smart card.

Authentication virtual machine places authentication service in a secure environment that is ideally secure from malicious software. In particular virtualization layer protects authentication service and authentication virtual machine from corruption or insertion of suspect software which may be present with the user selected applications and other software run in guest virtual machines . Such protection can be achieved through the isolation capabilities of virtualization layer hardware support for virtualization that is available in some CPUs and chipsets and appropriate configuration parameters of system . In particular virtualization layer can be configured to provide narrow well controlled interfaces for access to authentication virtual machine and to ensure memory and process isolation for virtual machine . In contrast if the authentication service were run under one of the guest operating systems such authentication service could be vulnerable to malicious software that may be executed in the same environment and may have access to the same address space as the authentication service. Finally virtualization layer controls the mappings of hardware to specific virtual machines and virtualization layer further enhances the security of user authentication processes by granting to authentication virtual machine exclusive access to hardware components and during an authentication process.

The capability to provide exclusive access means that virtualization layer is able to guarantee that all bus level traffic for specified set of devices is visible only to a specific virtual machine or application. In particular proper configuration or tuning of virtualization layer can virtualize the buses of system so that each virtual machine or only receives what virtualization layer passes up which is not necessarily the original bus traffic. In other words virtualization layer can assign selectable bus traffic to a specific virtual machine and filter or segregate bus traffic before presenting a virtualized bus or buses to the virtual machines. Accordingly with proper configuration of virtualization layer authentication virtual machine will be able to see and control the functionality of target components without worrying about potentially malicious application stacks snooping on or altering the traffic between the components and authentication service . From a security perspective the conventional requirements of cryptography to protect the privacy and integrity of communications with authentication components e.g. subsystems and are less critical since any sensitive information exchange with a component cannot be intercepted by non intended applications or malware unless the operation of virtualization layer is compromised. For example a current biometric sensor such the fingerprint reader FPR may need an authentication engine integrity verification systems secure timers and secure storage to prevent tampering with templates when used in a conventional operating system that cannot provide full isolation of the traffic during a user authentication process. If communications can be otherwise guaranteed to be secure as in computer system security systems in biometric devices can be eliminated saving costs and reducing subsystem complexity and information can be communicated in clear i.e. without encryption. Accordingly some or all of subsystems and may be without cryptographic systems and without secure storage because communications are secured by the virtualization architecture and because secure storage in authentication service can store any token information e.g. passwords and biometric signatures required for user authentication.

Computer system through virtualization layer has two types of device isolation capabilities dynamic device isolation to a virtual machine and permanent device isolation to a virtual machine. Virtualization layer can implement dynamic device isolation by temporarily ensuring that all of the traffic for a selected device or subsystem is only routed between the device and a particular virtual machine e.g. authentication virtual machine . More generally virtualization layer will only need to allocate temporary exclusive access to a device or subsystem if two or more of virtual machines and sometimes require access to the device e.g. for tasks other than authentication. A prime example of a device or subsystem that has both authentication and non authentication uses is keyboard which is normally used as a general input device that can be shared by multiple virtual machines but is restricted to exclusive communication with authentication virtual machine or SGUI virtual machine when authentication virtual machine needs keyboard to gather security credentials.

Process which provides authentication virtual machine with temporary exclusive access to keyboard can be similarly used to grant temporary access to any system resource. However some devices or subsystems may only have permitted uses associated with user authentication in which case virtualization layer can provide permanent device isolation. Permanent exclusive access or isolation is in addition to dynamically or switchable control of the device traffic and a virtual machine such as authentication virtual machine can request permanent control of a set of devices at system assembly or install time of the devices. Permanent exclusive access ensures that devices that are targeted for exclusive access of a particular virtual machine are not shared so that no further need for a protocol to acquire and release such devices is warranted. The exclusive control in one virtual machine may result in other virtual machines being unaware of the existence of these devices or alternatively other virtual machines may be aware of the specified devices but unable to obtain any control of the devices. In general system requires specific guarantees that when a particular device is isolated to a virtual machine all of the device specific bus traffic irrespective of how many other devices may be on the same bus are visible only to the software stack in the specified controlling virtual machine. For example if authentication virtual machine has permanent exclusive access to a fingerprint sensor which may be connected on a USB bus all activity related to fingerprint sensor must be routed to authentication virtual machine irrespective of how many other devices are on the same USB bus. Permanent exclusive access can be implemented using standard USB hardware and bus traffic filtering in virtualization layer so that all virtualized machines access a virtualized USB bus. However hardware provisions could be made to allow for secure mapping of individual USB devices.

Control domain SGUI domain and authentication virtual machine can be considered to be a distributed control domain having higher levels of privileges than do guest virtual machines . Such a distributed control domain could be implemented using a trusted virtual client architecture such as described by Chris Dalton et al. Trusted virtual platforms a key enabler for converged client devices ACM SIGOPS Operating Systems Review Volume 43 Issue 1 pp. 36 43 2009 . More generally some provisions of a purposely designed client can be useful but no specific client architecture is necessary to enable embodiments of the invention.

Authentication service can implement a standardized interface for authentication of users. One particular embodiment authentication service corresponds to the ProtectTools Authentication Interface. This interface is designed to provide a generic high level Application Programming Interface API that allows disparate applications to register and authenticate users using a system defined multi factor authentication policy. A primary advantage of this implementation is that authentication service isolates individual applications from the details of the use of various hardware tokens allowing those applications to more easily take advantage of strong user authentication schemes. A side benefit is that each application may but does not need to manage how users should authenticate thereby promoting a unified user experience and methodology for authentication. This further simplifies complexity of design in applications needing user authentication.

Authentication service can be exposed through a Remote Procedure Call RPC interface in a virtualized environment of . The exemplary embodiment of authentication service has four categories of accessible procedures namely registration authentication storage service and user management which are described further below.

Registration functions are designed to allow applications with multiple profiles to register themselves and their target users with authentication service passing along an optional security payload. Authentication service may also allow an application to provide user specified suggestions on the type of tokens that should or could be used to authenticate the user at a later time. The name of the application the user name and the payload along with domain specific information makes a unique profile for the application and authentication service. This technique can be used by an application to register multiple profiles for the same user for different functionalities for the application. For example a wireless connection manager application can request one payload to authenticate a user for using LAN PAN services and require a different perhaps higher level of authentication for use of the WAN service e.g. due to potentially higher cost constraints related to the WAN usage . Based on the specific policies in place the security payload is then stored inside a Storage pool of authentication service . The application can request the security payload back when the user needs to be authenticated and choose to use the payload in an application specific manner.

Authentication functions of authentication service authenticate users. For user authentication an application can simply request back the payload registered during registration. Upon invocation authentication service starts secure GUI services in SGUI virtual machine from Authentication and Enforcement Engine AEE of authentication service . AEE through SGUI virtual machine displays the user interface that allows a user to start interacting with AEE choosing specific tokens for user authentication. The details can vary for how the user is authenticated and typically depend on the available hardware and chosen authentication policies. Once the user is authenticated authentication service extracts the registered payload and returns the extracted payload back to the application along with the appropriate authentication status and policy information e.g. indicating what tokens were used .

Storage service in authentication service can use secure storage for user authentication information. A primary issue in prior authentication systems was that the main operating system was considered too unsafe to store any secrets with reasonable expectations of protections and privacy guarantees. However if the BIOS domain is NO LONGER an important pre boot consideration for the virtualization time then authentication virtual machine will be up and running by the time the first guest OS or any applications running on an OS needs user authentication. Since the virtualization architecture guarantees that only authentication virtual machine or the trustworthy entities such as control domain or virtualization layer is are the only entity that has access to storage in authentication virtual machine secrets e.g. stored in a password vault or SSO database do not need to be stored inside each of the token subsystems such as cameras fingerprint sensors or smart cards. This further simplifies the architecture and support required in authentication hardware.

User management in authentication service can allow editing including deleting and updating navigating and searching the list of already registered applications profiles users and the registered payloads. For example an application can use the user management functionality of authentication service to investigate whether the application is already registered update user secrets as needed update user data such as name domain or computer name changes remove users enumerate or list registered users or enumerate or list registered application profiles e.g. management applications. 

Client applications that access authentication service may have different degrees of awareness or compliance with the RPC interface of authentication service . illustrates an example in which a non native application a native application that is locally aware and a native application that is fully compliant are running in a guest virtual machine . Non native application may be a legacy application that does not employ any standardized interface for user authentication. Some examples of legacy applications include current versions of Microsoft Office or Outlook and current web portals such as Yahoo mail and web banking portals. For non native application a local system agent can be executed in the same guest virtual machine to enable the calling of authentication service on behalf of non native application . Local system agent can be implemented for example via the system wide hooks or via browser extensions such as browser helper objects BHOs that intercept or convert accesses to authentication hardware into remote procedure calls to authentication services . System agent can be implemented as part of an authentication engine of guest operating system . Native application is an application that employs a protocol for procedures such as those implemented by authentication service but native application expects the authentication procedures to run within the same virtual machine . For native application an adaptor object or fa ade for remote authentication service can be provided in OS authentication engine and convert calls that application makes to authentication engine into remote procedure calls to authentication service Native application which is written to take advantage of the remote authentication service can directly call authentication service through the remote procedure call channels of virtualization layer .

Authentication virtual machine and authentication service can also be called at boot time of a computer system to identify and authenticate a user of the computer system. In particular with the system of or authentication service can be called or run once virtualization layer sets up authentication virtual machine and loads authentication service . Accordingly before guest operating systems are booted up in guest virtual machines authentication service can authenticate a user and inform guest operating systems of the identity of an authenticated user when the guest operating systems are loaded. BIOS level authentication if needed before authentication service is loaded can be limited to passwords using conventional techniques.

The systems and processes described above can be employed in a computer or any systems and devices in which user authentication is desired. Further the processes can be at least partly implemented using software or firmware products containing machine readable instructions that are executed by a computer or other system containing a processor to carry out a process in accordance with an embodiment of the invention and those products can be embodied as a physical media containing the machine readable instructions.

Although the invention has been described with reference to particular embodiments the description is only an example of the invention s application and should not be taken as a limitation. Various adaptations and combinations of features of the embodiments disclosed are within the scope of the invention as defined by the following claims.

