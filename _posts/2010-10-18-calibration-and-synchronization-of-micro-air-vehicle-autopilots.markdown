---

title: Calibration and synchronization of micro air vehicle autopilots
abstract: A system, method, and apparatus to train autopilots to fly a simulated aeronautical vehicle includes a three-degree of freedom gimbaled platform comprising a pitch, roll, and yaw axis; an autopilot comprising an inertial measurement unit mounted to the platform; motors that rotate the platform along the pitch, roll, and yaw axes; shaft encoders connected to the motors to calculate an angular position of the platform; motor drivers connected to the motors to power the motors; a microcontroller connected to the motor drivers; a quadrature encoder connected to the shaft encoders and the microcontroller; sensors that generate and sense environmental conditions affecting the platform and the autopilot; a flight simulator connected to the microcontroller; and a computer that executes the flight simulator causing actuation of the platform, causing the sensors to generate environmental conditions, and causing the autopilot to react to the environmental conditions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566071&OS=08566071&RS=08566071
owner: The United States of America as represented by the Secretary of the Army
number: 08566071
owner_city: Washington
owner_country: US
publication_date: 20101018
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 254 954 filed on Oct. 26 2009 the complete disclosure of which in its entirety is herein incorporated by reference.

The embodiments herein may be manufactured used and or licensed by or for the United States Government without the payment of royalties thereon.

The embodiments herein generally relate to flight simulation and training and more particularly to the calibration and synchronization of autopilots used in controlled flight simulation and training exercises.

Conventional calibration of an inertial measurement unit IMU through open loop data collection includes typical flight simulator systems that provide processed stimuli to emulate real life flight conditions. Other solutions involve testing inertial measurement devices on a multi axis rate table using a processor internal to the inertial measurement devices and transferring the signals directly to the processors for determining and storing the calibration coefficients of the inertial measurement devices internally so that they are self calibrating. Unfortunately conventional solutions typically involve evaluating control algorithms in a computer simulation before experimentation in the aircraft occurs. This can result in unstable flight during the first few cycles which could lead to failure of the aircraft.

In view of the foregoing an embodiment herein provides an apparatus for training an autopilot to fly a simulated aeronautical vehicle wherein the apparatus comprises a three degree of freedom gimbaled platform comprising a pitch axis a roll axis and a yaw axis an autopilot component operatively connected to the platform wherein the autopilot component comprises an inertial measurement unit a plurality of motors that rotate the platform along the pitch roll and yaw axes a plurality of shaft encoders operatively connected to the plurality of motors wherein the plurality of shaft encoders calculate an angular position of the platform a plurality of motor drivers operatively connected to the plurality of motors wherein the plurality of motor drivers power the plurality of motors a microcontroller operatively connected to the plurality of motor drivers a quadrature encoder operatively connected to the plurality of shaft encoders and the microcontroller a plurality of sensors that generate and sense environmental conditions affecting the platform and the autopilot a flight simulator module operatively connected to the microcontroller and a computer that executes the flight simulator module wherein execution of the flight simulator module causes actuation of the platform causes the plurality of sensors to generate environmental conditions and causes the autopilot component to react to the environmental conditions.

The plurality of motors may comprise a first pair of stepper motors that control movement of the platform along the pitch axis a second pair of stepper motors that control movement of the platform along the roll axis and a stepper motor that controls movement of the platform along the yaw axis. The apparatus may further comprise a planetary gearbox operatively connected to the motor that controls movement of the platform along the yaw axis. The apparatus may further comprise a temperature and pressure regulating enclosure that encases the platform. The apparatus may further comprise means for forcing air into the enclosure and means for drawing air out of the enclosure. Preferably the microcontroller controls the plurality of motors processes angular data from the plurality of shaft encoders and receives angular update commands from the computer. Preferably the microcontroller sends operational instructions to the quadrature encoder and wherein the quadrature encoder sends the operational instructions to the plurality of shaft encoders. The environmental conditions may comprise global positioning system bearings wind speed barometric pressure temperature humidity and electromagnetically generated headings.

In one embodiment the platform operates in an open loop mode such that the computer generates signals to actuate the platform to subject the autopilot component to designated attitudes. In another embodiment the platform operates in a closed loop mode such that the autopilot component drives the flight simulator module as the flight simulator module drives the platform and wherein between each time step of the flight simulator module the autopilot component reads the inertial measurement unit to obtain updated attitude data.

Another embodiment provides a system for training an autopilot to fly a simulated aeronautical vehicle wherein the system comprises a three degree of freedom gimbaled platform comprising a pitch axis a roll axis and a yaw axis a micro air vehicle autopilot operatively connected to the platform wherein the micro air vehicle autopilot comprises an inertial measurement unit a temperature and pressure regulating enclosure that encases the platform and the micro air vehicle autopilot a first pair of motors that control movement of the platform along the pitch axis a second pair of motors that control movement of the platform along the roll axis a motor that controls movement of the platform along the yaw axis a gearbox operatively connected to the motor that controls movement of the platform along the yaw axis a plurality of shaft encoders operatively connected to the plurality of motors wherein the plurality of shaft encoders calculate an angular position of the platform a plurality of motor drivers operatively connected to the plurality of motors wherein the plurality of motor drivers power the plurality of motors a microcontroller operatively connected to the plurality of motor drivers a quadrature encoder operatively connected to the plurality of shaft encoders and the microcontroller a plurality of sensors that generate and sense environmental conditions affecting the platform and the micro air vehicle autopilot wherein the environmental conditions comprise global positioning system bearings wind speed barometric pressure temperature humidity and electromagnetically generated headings a flight simulator operatively connected to the microcontroller and a computer that executes the flight simulator wherein execution of the flight simulator module causes actuation of the platform causes the plurality of sensors to generate environmental conditions and causes the micro air vehicle autopilot to react to the environmental conditions.

The gearbox may comprise a planetary gearbox comprising a gear ratio of 10 1. The system may further comprise means for forcing air into the enclosure means for drawing air out of the enclosure and a video camera operatively connected to the platform. The microcontroller preferably controls the first pair of motors the second pair of motors and the motor processes angular data from the plurality of shaft encoders and receives angular update commands from the computer. Preferably the microcontroller sends operational instructions to the quadrature encoder and wherein the quadrature encoder sends the operational instructions to the plurality of shaft encoders. In one embodiment the platform operates in an open loop mode such that the computer generates signals to actuate the platform to subject the micro air vehicle autopilot to designated attitudes. In another embodiment the platform operates in a closed loop mode such that the micro air vehicle autopilot drives the flight simulator as the flight simulator drives the platform and wherein between each time step of the flight simulator the micro air vehicle autopilot reads the inertial measurement unit to obtain updated attitude data.

Another embodiment provides an electro mechanical method of training a micro air vehicle autopilot to fly a simulated aeronautical vehicle in a controlled experimental environment wherein the method comprises mounting the micro air vehicle autopilot comprising an inertial measurement unit to a three degree of freedom gimbaled platform comprising a pitch axis a roll axis and a yaw axis rotating the platform along the pitch roll and yaw axes calculating an angular position of the platform controlling motion of the platform based on the angular position of the platform simulating flight like conditions by stimulating the platform with controlled environmental conditions to affect a functioning of the platform using sensors to sense the environmental conditions synchronizing the inertial measurement unit of the micro air vehicle autopilot with the data sensed by the sensors allowing the micro air vehicle autopilot to operationally react to the sensors and the environmental conditions and evaluating a performance of the micro air vehicle autopilot based on the operational reactions of the micro air vehicle autopilot. The environmental conditions may comprise global positioning system bearings wind speed barometric pressure temperature humidity and electromagnetically generated headings. The method may further comprise calibrating the micro air vehicle autopilot using the operational reactions of the micro air vehicle autopilot as a feedback control mechanism of the simulated flight like conditions.

These and other aspects of the embodiments herein will be better appreciated and understood when considered in conjunction with the following description and the accompanying drawings. It should be understood however that the following descriptions while indicating preferred embodiments and numerous specific details thereof are given by way of illustration and not of limitation. Many changes and modifications may be made within the scope of the embodiments herein without departing from the spirit thereof and the embodiments herein include all such modifications.

The embodiments herein and the various features and advantageous details thereof are explained more fully with reference to the non limiting embodiments that are illustrated in the accompanying drawings and detailed in the following description. Descriptions of well known components and processing techniques are omitted so as to not unnecessarily obscure the embodiments herein. The examples used herein are intended merely to facilitate an understanding of ways in which the embodiments herein may be practiced and to further enable those of skill in the art to practice the embodiments herein. Accordingly the examples should not be construed as limiting the scope of the embodiments herein.

The embodiments herein provide an apparatus system and method for subjecting an autopilot to real flight conditions in a controlled e.g. laboratory setting such that after using a gimbaled platform system provided by the embodiments herein the autopilot is trained to perform identically or nearly identically in real flight as it did in the simulated environment. Referring now to the drawings and more particularly to where similar reference characters denote corresponding features consistently throughout the figures there are shown preferred embodiments.

An apparatus provided herein comprises a plurality of hardware components as shown in . The apparatus includes a three degree of freedom platform actuated by stepper motors collectively referred to as stepper motors with optical shaft encoders . A microcontroller communicates with an interface module running on a computer . A temperature and pressure regulating enclosure surrounding the gimbaled platform with a forced air mechanism e.g. solenoid fan etc. attached to a small opening in the enclosure may also be included. The apparatus further includes a plurality of sensors including a global positioning system GPS signal generator an electromagnetic generator a thermoelectric element to control temperature the ported forced air mechanism to simulate wind speed for pitot sensors a humidifier and dehumidifier to control humidity and an autopilot with IMU hardware mounted to the gimbaled platform .

A schematic diagram of one example implementation of the apparatus is illustrated in with reference to . In the apparatus is shown to include a plurality of base support structures used for structural support of the apparatus . An enclosure encases most of the components of the apparatus including a pair of stepper motors for pitch and a pair of stepper motors for roll which are used to rotate a pitch structure that holds the autopilot not shown in . A pair of support legs provides support for the stepper motors which then provide support for the attached pitch structure and attached stepper motors . The support legs connect with a base of the platform which is supported by the base support structures . The stepper motor for yaw is attached to a gearbox which are both located outside the enclosure according to one embodiment although these may be located within the enclosure in another embodiment. Although not easily visible in the view of the apparatus further includes shaft encoders and motor drivers that are operatively connected to each of the stepper motors respectively.

The enclosure comprises a plurality of handle supports configured along the outer wall of the enclosure . The enclosure further includes a top component which comprises a pair of elongated support structures to provide additional structural support to the enclosure . A pair of heat sinks and a thermoelectric Peltier element not shown are operatively connected to a control mechanism which is used to regulate temperature air pressure and barometric pressure within the enclosure . In the example embodiment shown in the control mechanism works with a solenoid to force air into the enclosure thereby regulating increases decreases the internal pressure within the enclosure . A vacuum pump also works with the control mechanism to draw air out of the enclosure . Air access tubes are used in conjunction with the solenoid and vacuum pump respectively to facilitate the movement of air in out of the enclosure . In this regard the tubes are analogous to the small opening of .

The embodiments herein permit an autopilot to fly a simulated aircraft . The simulated aircraft uses stimuli produced by the gimbaled platform system as inputs for the sensors to actuate the platform and make the autopilot respond as though it were in real flight. This permits calibration and evaluation of the autopilot in a controlled environment. Furthermore the embodiments herein allow for the calibration of the autopilot using the sensors to generate new control surface data based on a control algorithm s . Additionally the embodiments herein allow for the synchronization of the IMU of the autopilot with the other on board sensors . Moreover the embodiments herein provide a universal method in which all micro air vehicle MAV autopilots can be evaluated for their performance in a systematic way without having the autopilots fly in an actual aircraft.

As shown in the gimbaled platform can be used to calibrate small autopilots or IMUs . The platform can further function as a flight simulator on which an autopilot can be evaluated and developed. The platform is controlled by a plurality of stepper motors including two stepper motors for pitch two stepper motors for roll and one stepper motor for yaw. The stepper motors preferably have a resolution of 0.18 degrees per step using existing micro stepping technology. To compliment the stepper motors optical shaft encoders are affixed to all three axes of the platform . The shaft encoders supply accurate readings of the attitude of the platform . By placing the autopilot on the platform while actuating the platform to simulate flight IMU data and the corresponding data of the shaft encoders may be collected. This data can be used to fine tune the contribution from each of the IMU sensors to minimize overall error. Furthermore the data can also be utilized in the training of neural networks or any other type of filter e.g. Kalman etc. to further minimize IMU error.

The platform can also be configured as a synchronization tool. For example synchronizing IMU and video images for target geolocation. This is accomplished by placing both a video camera and autopilot on the platform where they are synchronized with the optical shaft encoders . The exact IMU data corresponding to each video frame can then be obtained thus rendering the target geolocation system more accurate.

The platform can be integrated with any commercially available Federal Aviation Administration FAA approved flight simulator such as for example the X Plane software available from Laminar Research S.C. USA. New flight surface positions can be generated by the autopilot or interface module which are then passed back to the simulator where the resulting change in airframe attitude is rendered. This new attitude data is also passed to the motor control system e.g. microcontroller of the platform which updates the attitude of the platform . In this configuration GPS as well as barometric and wind speed data generated by the simulator are supplied to the autopilot . Using the platform as a flight simulator allows for the evaluation of an autopilot control algorithm s using different airframes as well as performance testing under different weather conditions in an easy and controlled manner.

Before creating the three degree of freedom gimbaled platform a two degree of freedom platform not shown may be utilized as a proof of concept tool. The two degree of freedom platform not shown may be used to calibrate the pitch and roll for an IMU on an open source autopilot. After carefully analyzing the recorded data and making adjustments to the IMU algorithm a thirty percent improvement in accuracy can be realized as depicted in .

Experimentally the platform provides pitch and roll measurements. While time synchronization errors between the platform and autopilot may occur such errors may be corrected using computer readable software. With the platform and autopilot operating in a 25 Hz open loop configuration the data may be shifted by 1.6 T 64 ms to synchronize the data of the autopilot with the data of the shaft encoders . This result can be seen in .

Experimentally the platform hosts an autopilot with dimensions up to 5 7 . The stepper motors are used to control the rotation of the platform while the optical shaft encoders are used to report the exact angular position of the platform . The pair of stepper motors are used to rotate the platform about the pitch axis while two larger stepper motors rotate the platform about the roll axis. Another stepper motor with a planetary gearbox having a gear ratio of 10 1 is mounted to the base of the platform to control the yaw axis.

Due to the large angular inertia in the upper portion of the platform the stepper motors comprise sufficient torque to prevent the stepper motors from skipping steps while undergoing high accelerations. The holding torque of the stepper motor can be obtained from its torque frequency curve as shown in . The torque generated by the platform is the product of the angular acceleration and the inertial tensor I given by Equation 1 I 1 

The inertial tensor is a function of the mass m and radius r and can be approximated using Equation 2 I mr 2 

As an example the upper portion of the platform may comprise a 4 kg mass and a 0.18 meter radius. Accordingly a gearbox may be used overcome the inertial load. Therefore the planetary gearbox with a gear ratio of 10 1 may be used to scale the torque of the stepper motors an order of magnitude higher thereby eliminating all skipping.

Each axis pitch roll and yaw on the platform uses a dedicated stepper motor driver respectively. For the pitch and roll axes where two stepper motors are used the wirings of each motor are mirrored. This prevents these motors from opposing each other in rotation. The inputs to each motor driver comprises of a direction step signal and 30V source. A current limiting resistor not shown may be used to protect the motor drivers from over current. For the motors to make a micro step the motor drivers expect a transistor transistor logic TTL signal s falling edge on the step signal input and a level on the direction input. Both direction and step signals can be driven by a 32 bit microcontroller with four pulse width modulation PWM hardware generators not shown .

The optical shaft encoders have a resolution of 2 000 steps per revolution and are affixed to the stepper motors respectively to measure angular position of the autopilot one for pitch roll and yaw respectively. The optical shaft encoders interface to a quadrature encoder to serial encoder interface SET adapter . The encoder adapter interfaces with the microcontroller which reads the three encoder values using an RS 232 interface at 115 200 baud.

The stepper motors are used to control the platform . The motors are powered by the motor drivers that support micro stepping to increase overall angular accuracy through the fractional energizing of adjacent coils. These drivers which can deliver up to 7 amps have high input impedance allowing TTL level signals to control the motors 

The microcontroller is used to control the motors process angular data from the encoders and receive angular update commands from the computer . The stepper motors may be updated at 20 Hz. A computer readable software module may be used to interface the simulator to the microcontroller . During each update the microcontroller receives a sequence of bytes from the simulator containing three angles for pitch roll and yaw respectively. The microcontroller then polls each of the three encoders for their angular values. Based upon the current and desired position of the stepper motors a PWM frequency is calculated and set for each stepper motor . This instructs the stepper motors to rotate the platform to the desired attitude.

Should the stepper motors happen to slip due to an unexpected mechanical or software error the use of optical shaft encoders ensure that motor slippage will not affect the resulting attitude. The optical shaft encoders with a resolution of 2 000 steps per revolution may be chosen to match the 2 000 steps per revolution of the stepper motors under the influence of micro stepping. However in the case of the yaw stepper motor there are 20 000 steps per revolution due to the planetary gearbox having a gear ratio of 10 1. Therefore the optical encoders are capable of detecting a single micro step from the stepper motors . For the pitch and roll axes this equates to 0.18 degrees per step and for the yaw axis the resolution is 0.018 degrees.

The platform is configured to operate in two different modes. The first mode is open loop and the second mode is closed loop. These modes provide a means of testing the performance of the autopilot under different conditions in a controlled environment. This type of testing allows for fine tuning of the control algorithm on the autopilot as well as the reduction of IMU errors. Once testing is complete the autopilot is mission ready once it leaves the controlled environment. Such a methodology provides for minimal risk testing and calibration of autopilots and control algorithms.

When configured as an open loop system as shown in the autopilot is placed on the gimbaled platform and the computer is programmed to actuate the platform such that it subjects the autopilot to designated attitudes. The autopilot sensors report these attitudes to a data storage computer and the shaft encoders provide a precise measure of the exact attitude. This setting allows for the calibration of the IMU of the autopilot using the difference between the reported and actual attitudes.

This setting can also be used to correct errors in the IMU attitude algorithms. By compiling data from the IMU together with the corresponding data from the shaft encoders filtering techniques such as neural networks or Kalman filters can be employed to minimize errors in the IMU s algorithms.

In addition to calibrating IMU hardware the platform could be used as a synchronization apparatus. An example of a system that can greatly benefit from such an apparatus is the target geolocation acquisition TGA system. A TGA setup comprises of a camera GPS and IMU . Sensor fusion would then occur between the camera frame IMU attitude and GPS position to determine an approximate ground position based on a designated pixel in the camera frame. Synchronization of data from the camera GPS and IMU has a direct impact on the geolocation accuracy.

In the closed loop configuration shown in the autopilot drives the simulator as the simulator drives the platform . Between each time step of the simulator the autopilot reads its IMU to obtain new attitude data. This attitude is then processed by a control algorithm on board the autopilot e.g. embodied as a proportional integral derivative PID controller or a model predictive controller etc. This control algorithm determines the adjustments necessary to the control surfaces of the vehicle to meet the desired attitude. These control surface adjustments such as throttle elevator rudder and aileron are then transmitted to the simulator .

Once the simulator receives these updates its internal flight dynamics engine not shown calculates a new attitude based on the user selected airframe. These new Euler angles are transmitted to the microcontroller which instructs the stepper motors to match the new attitude. Once the new attitude is reached the feedback loop is closed and the process repeats.

This feedback loop typically runs at a frequency of 20 Hz but is capable of running at higher or lower frequencies as well. The frequency is a function of the aircraft s stability and speed profile. As a general rule of thumb the smaller or faster the aircraft the higher this frequency should be.

Communications with simulator can occur through an interface module which behaves as a stand alone computer readable program and which may execute an internal control algorithm on the simulator data or propagate the data to the autopilot . Before any control algorithm processes the data from the simulator the attitude data is converted and sent to the microcontroller . The microcontroller then performs one of two different actions. Either the simulator data can be propagated to the autopilot or it can be passed to a local control algorithm . If the data is propagated to the autopilot it may use its IMU data in lieu of the simulator attitude data. However passing the data does not prohibit the autopilot from using all of the simulator data as a type of virtual IMU. In either situation the module waits for the autopilot to return new control surface data. When the data is passed to the local control algorithm the calculation of new control surface data is performed with minimum latency.

The microcontroller is used to process data from the encoders receive data from the computer and drive the stepper motors to a specific position. Virtually any microcontroller with two or more RS 232 ports and three or more PWM generators can be used. An RS 232 interface not shown at 115 200 baud is connected to the quadrature encoder and another RS 232 interface not shown at 115 200 baud is connected to the computer . Three PWM outputs not shown are connected to the motor drivers to control the pitch roll and yaw stepper motors respectively. Three general purpose input output I O lines not shown which control motor direction may be connected to the motor drivers as well.

The frequency of the master clock not shown of the microcontroller and PWM generators not shown determine the frequency range of the stepper motors as well as the resolution of stepper motor control as further indicated in Equation 3 . The microcontroller is configured to operate at 48 054 857 Hz. This is a function of the 18.432 MHz crystal oscillator and the phase locked loop PLL multiplier and divider hardware not shown within the microcontroller . The divider register not shown may be set to 14 and the multiplier not shown may be set to 73. Finally a post scale division of 2 may be applied.

The master clock frequency of the microcontroller dictates the range of frequencies that can be chosen for PWM generators not shown . Each PWM generator has separate registers for the 16 bit period and duty values. Furthermore there exists a register not shown to divide the master clock for the PWM generators frequency. The master clock may be divided by a value of 256 slowing the PWM frequency by that factor. The period register not shown is set to a value of 0xFFFF which results in a period of 349.13 ms. Hence the PWM outputs can generate a square signal between 2.86 Hz and 93.86 KHz. Since a full revolution of the pitch and roll stepper motors require 2 000 steps while the yaw stepper motor requires 20 000 steps this equates to rotational rates spanning from 8.58 10to 2.82 10RPM. This is clearly an acceptable range for providing slow to fast control over the stepper motors given that most stepper motors do not function beyond 3 KHz.

Additionally as the PWM period decreases the frequency error increases. This error is the result of having fewer bits available to represent smaller values. For example if the desired period is 1 000.25 the closest integer value the hardware can represent is 1 000 resulting in an error of 0.025 . If the desired period is 1.25 the closest integer value the hardware can represent is 1 resulting in an error of 20 . A graph of the maximum error curve is shown in .

Once powered up the microcontroller sends several initialization commands to the quadrature encoder . The first of these commands is a baud rate change. For example the encoder communications rate is 9 600 baud. To keep latency at a minimum the microcontroller instructs the encoder to change its communication rate to 115 200 baud. The second set of commands instructs the encoder to reset the internal counter for each encoder to zero. Therefore the current position of the platform is set as zero for each axis. The last initialization command is a poll on all three encoder channels to ensure that communications are working.

Once the initialization sequence on the microcontroller is completed it functions as an event driven process. The simulator is set to output data at 20 Hz. The data sent to the microcontroller comprises of three signed 16 bit values for pitch roll and yaw respectively. The sign of the value denotes the direction in which the motors will spin. Therefore the values for each axis can range from 32 768 to 32 767. These values signify the position that each motor will now assume. For pitch which has a range of 90 90 degrees the range of values are 500 500 . For roll which has a range of 180 180 degrees the range of values are 1000 1000 . For yaw which has a range of 0 360 degrees the range of values are 0 20000 . Each time the simulator sends data to the microcontroller it has to convert the pitch roll and yaw angles from the simulator to the 16 bit values mentioned above. Once the microcontroller receives the data it polls the encoders for their current positions. For each axis a difference between current and new positions are calculated. The product of this equation is a PWM period as indicated in Equations 4 6 . The PWM period in turn defines the PWM frequency that corresponds to the angular velocity necessary to rotate each stepper motor from its current position to its new position. If the simulator is configured to update at 20 Hz then the period between updates is 50 ms. The PWM duty is always half the PWM period. This can be accomplished by shifting the PWM period value to the right by one bit and storing that value in the PWM duty.

Certain calculated values may produce singularities that prevent the hardware from functioning properly. If in Equations 4 6 is zero then its best to turn the PWM generator not shown off or set it to its lowest frequency. If the PWM period is too low then the stepper motors may be driven at a frequency higher than they are capable of

The embodiments herein may comprise hardware and software embodiments. The embodiments that are implemented in software include but are not limited to firmware resident software microcode etc. Furthermore the embodiments herein can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can comprise store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

A representative hardware environment for practicing the embodiments herein is depicted in . This schematic drawing illustrates a hardware configuration of an information handling computer system in accordance with the embodiments herein. The system comprises at least one processor or central processing unit CPU . The CPUs are interconnected via system bus to various devices such as a random access memory RAM read only memory ROM and an I O adapter . The I O adapter can connect to peripheral devices such as disk units and tape drives or other program storage devices that are readable by the system. The system can read the inventive instructions e.g. software S W or on the program storage devices and follow these instructions to execute the methodology of the embodiments herein. The system further includes a user interface adapter that connects a keyboard mouse speaker microphone and or other user interface devices such as a touch screen device not shown to the bus to gather user input. Additionally a communication adapter connects the bus to a data processing network and a display adapter connects the bus to a display device which may be embodied as an output device such as a monitor printer or transmitter for example.

The embodiments herein provide a hardware in the loop simulator HILS system that can be used as a universal development and evaluation system for miniature autopilots . The embodiments herein allow an autopilot to fly a simulated airframe while being stimulated with artificial GPS signals wind speeds barometric pressures various temperatures and electromagnetically generated headings which reduces the autopilot s development time and cost. The HILS system also allows for the enhancement of IMU performance and the synchronization of various small unmanned aerial vehicle UAV components. Moreover the embodiments herein have a direct impact on the performance of existing MAV systems by allowing for rapid evaluation of new MAV systems.

The embodiments herein provide a three degree of freedom gimbaled platform used for the development and evaluation of MAV autopilots . An autopilot is mounted to the gimbaled platform . The computer is then configured to run both a flight simulator and an interface module to permit communications between the flight simulator gimbaled platform system and the autopilot . The autopilot is configured to transmit sensory data to the interface module . The data transmitted by the autopilot contains flight surface control values which after received by the interface module are propagated to the flight simulator . The flight simulator then applies the new control surface values updates a dynamics model of a preselected aircraft and sends updated command signals to the gimbaled platform system . The new stimuli produced by the gimbaled platform system are received by the autopilot and thus a feedback loop between the autopilot flight simulator and gimbaled platform is created.

The embodiments herein may be used in several environments including but not limited to autopilot sensor calibration i.e. IMU barometric pitot GPS temperature etc. time synchronization between sensors and external systems i.e. latency between IMU and video tuning of control algorithms i.e. model predictive or PID evaluation of control algorithms and comparing the quality of one autopilot to another in a systematic approach.

The foregoing description of the specific embodiments will so fully reveal the general nature of the embodiments herein that others can by applying current knowledge readily modify and or adapt for various applications such specific embodiments without departing from the generic concept and therefore such adaptations and modifications should and are intended to be comprehended within the meaning and range of equivalents of the disclosed embodiments. It is to be understood that the phraseology or terminology employed herein is for the purpose of description and not of limitation. Therefore while the embodiments herein have been described in terms of preferred embodiments those skilled in the art will recognize that the embodiments herein can be practiced with modification within the spirit and scope of the appended claims.

