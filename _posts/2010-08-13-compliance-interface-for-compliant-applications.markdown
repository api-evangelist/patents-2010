---

title: Compliance interface for compliant applications
abstract: A compliance interface is disclosed that takes in queries from applications which may want to know if they are compliant with associated polices stored on a computing system. The interface can then interpret these queries and provide notifications and instructions to the applications. Notifications may give notice of how a policy may impact an application, and instructions may tell an application how to behave in order to stay compliant with the policies. In one aspect, the interface exposes policies set forth by parents. Via a management control panel, parents can set or alter various policies, stored in a settings store, to protect children from contact with undesirable content. The interface interprets these policies to ensure that applications, such as those provided by third party vendors, are compliant with the wishes set forth in the parents' policies.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08230451&OS=08230451&RS=08230451
owner: Microsoft Corporation
number: 08230451
owner_city: Redmond
owner_country: US
publication_date: 20100813
---
The present application is a continuation of U.S. patent application Ser. No. 11 266 143 filed Nov. 3 2005 entitled COMPLIANCE INTERFACE FOR COMPLIANT APPLICATIONS which is hereby incorporated by reference in its entirety.

An operating system platform is typically designed to allow a user as much operational freedom as possible. Therefore any restrictions that are placed on such a platform and its associated applications are typically difficult to implement since often times they go against the intended design of the platform. This difficulty may be compounded if restrictions are to be placed on applications provided by third party vendors.

Third party vendors may provide all kinds of applications ranging from instant messenger applications to games to email applications. Likewise the platform itself may provide a multitude of system applications media applications or web applications.

There may be various reasons why restrictions would want to be placed on such applications. For example parents might want to have a mechanism for locking down content that might be deemed harmful to children. Such a mechanism could be implemented in the form of a parental control panel.

To provide such a parental control panel capability an interface could be provided that is able to communicate with applications that are compliant with policies set forth by the parents. The policies themselves could be stored on a computing system and any compliant application could then communicate via the interface to determine whether is should be running or not and what features it can expose to certain users. It would therefore be desirable to introduce such an interface that can mediate between compliant applications and restriction policies set forth by administrators of a computing system.

A compliance interface is provided whereby this interface can mediate between compliant applications and policies set forth by computer users. The interface can receive query requests from applications that want to know if what they are doing complies with the policies. Upon receipt of such queries the interface can provide information to the applications so that they can comply with the policies. Or in addition the interface can also provide notifications to the applications where such notifications provide information regarding polices that may have a direct or indirect impact on the applications.

In one aspect of the presently disclosed subject matter the compliant interface can be a parental controls interface which interprets policies set forth by parents to protect children from undesirable content. Thus polices may be set forth by parents that impact the behavior of system applications web applications instant messenger applications email applications media applications and so forth. Such polices may apply across an entire computing system and they may be stored in silos in a settings store. Parents can set or alter these stored policies via a management control panel.

It should be noted that this Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Various aspects of the presently disclosed subject matter are discussed in detail herein. First with reference to the compliance interface is discussed in context that is in a typical environment or system in which it may function. Second specific features of the compliance interface are discussed with reference to . The focus is on compliance interfaces that may be associated with one typical compliant application such as an instant messenger application. Third associated aspects to the compliance interface are discussed with reference to such as a settings store that contains policies for the compliance interface to interpret. Finally with reference to an exemplary implementation of the compliance interface is provided.

The compliance interface can mediate between compliant applications and restriction policies set by users. In one aspect of the presently disclosed subject matter the compliance interface is a parental controls API suitable for interpreting polices set by parents for the benefit of children.

If a parent wants to restrict some programs or applications a child is playing the parent may do so via a control panel . If the application is compliant to theses settings set by the parent it can contact the compliance interface and inquire what it must do to stay compliant. For instance the compliance interface can check the settings and give an answer to the querying game at once without having the game ask five or six or more separate questions. Put another way the compliance interface can perform the work of checking multiple settings in the settings store and provide an answer to a specific question put forth by any of the external applications . . . and so on.

The compliance control engine in turn can keep track of all the settings in the settings store and monitor what applications can or cannot do or should or shouldn t do . The compliance interface can run on top of the engine along with a management interface which provides a settings exposure for all the settings for parental controls. It can allow for remote administration and many other useful functionalities.

In one aspect of the presently disclosed subject matter the compliance interface may be a kind of distillation of the management interface in the sense that the compliance interface represents all the relevant interfaces for a third party client who manufactures compliant applications . . . .

The management service can be a common entry point to all management interfaces contained in the management interface module . The service can be an interface that is modifiable based on the providers that are available. It can also provide a way to query other interfaces and to perform either local or remote administration. In this latter case the service allows an administrator on one machine to set the setting on another machine. Thus for example a parent in one room could use the service to set the setting on a computer in a child s room without ever having to physically go to the child s room.

Specifically regarding this last point the parent may set policies to restrict a child s use of a computer through the management control panel . This control panel allows a parent to set or alter whatever policies that are associated with external applications . . . . For example if a parent wants to set a policy regarding web surfing the parent can do so via the management control panel .

The system may also have a settings store that can contain various policies stored in policy silos. Such silos can be stored on a per machine basis a per controlled user basis or other set ups. The silos can pertain to system policies user policies game policies web policies and so on. They may be based on various heuristics and studies that shed light on what types of behaviors one user such as a parent may want to restrict another user such as a child from engaging in. Those of skill in the art will readily appreciate the various policies that may be used.

And lastly the system may also use a logging service with its corresponding log store . The logging service may provide feedback to a compliance control engine as to what events have happened i.e. have been logged . This information can in turn be used to ensure that various policies stored in the settings store have not been obviated.

The system depicted in is merely exemplary and the compliance interface may be implemented in other environments as well where an API may be useful in interpreting settings as to which action an application can take. In fact illustrates some of the general components of the compliance interface that may be employed in just about any computing environment where parental control setting may be used.

Additionally a notification interface can be provided where the notification interface can provide some kind of notification to the compliant application as to which policies are being implemented by the computing system on which the compliance interface resides. For example such a notification may be warranted in the scenario where a system policy is implemented allowing a particular user a limited log on time say one hour after which the user is logged out. Other compliant applications such as a media player may want to be notified of the one hour log out policy since the media player may want stop playing contemporaneously with the log out the user may not appreciate having a song playing and not being able to stop it because the user has been logged out . Thus a notification can be provided from the compliance interface to the compliant media player application warning the application that a particular policy may be implemented that might impact the application .

Not only may the compliance interface give notifications but it may also give instructions to the compliant application . A notification may give information as to what a computing system is doing and the kind of policies it has in place but an instruction can further demand or suggest a particular behavior it wants the compliant application to implement per a particular policy. Thus additionally the compliance interface may have an instruction interface that provides instructions that the compliant application has to follow or at least should follow .

These query notification and instruction interfaces are of course merely abstractions of more particular interfaces that may be implemented. Nor should these general interfaces be interpreted as being limited to three general kinds of interfaces they are merely exemplary and not limiting and other kinds of interfaces may be employed. Also those of ordinary skill in the art will readily appreciate that for example the query interface and the notification interface may be separately implemented or implemented together e.g. upon a query a notification is provided depending on the design choices of developers or others implementing the compliance interface .

By way of example only and not limitation more specific interfaces may be implemented for compliant applications such as the instant messenger application discussed with reference to . Thus a public interface can be provided that returns a set of flags as part of an argument to various functions in this case for example theWPCIsIMContactBlocked and the WPCAreIMFeaturesBlocked functions see below for more 

Next an enumeration interface can be provided WPCFLAG IM SETTING that defines the possible settings values for calls to an instant messenger settings function WPCGetIMSettings see below for more 

Also another enumeration can be provided defining the possible instant messenger features which can be enabled or blocked by the aforementioned parental controls panel 

Next the WPCGetIMSettings function already mentioned above may be called by all compliant instant messaging applications 

Another interface to a function may be provided that should be called by all compliant instant messaging applications at least whenever the user a sends a conversation invitation b receives a conversation invitation c attempts to join a conversation or d is in a conversation a new member joins 

Instant messaging applications detecting a blocked contact may choose to enable the user to request a permanent change to the setting using an administrator override functionality. This results in the system requesting an administrator login in order to unblock the contact permanently. The associated interface may be the following 

Another interface to a function that may be provided may be useful whenever a user wishes to enable extended messaging features 

Lastly the compliance interface may also have general functions not necessarily associated with any particular kind of application. For example an interface to a function may be provided to determine whether logging is required for a current user context 

As mentioned above already these interfaces for the instant messaging application are exemplary and not limiting of the kinds of interfaces that may be used by the compliance interface. Other appropriate interfaces for the other applications for instance system applications web applications games applications email applications media payer applications etc. may also be used as those of ordinary skill in the art will appreciate.

The various aspects of the compliance interface may also be associated with complementary aspects. For example as discussed with reference to these associated aspects may include a logging service an interface management module a settings store a management control panel and so on.

By example only and not limitation a system silo is disclosed. This silo can be implemented on a per machine basis which means that each machine may have its own silo. However this is merely an implementation detail and silos could just as easily be stored on a multiple machine basis such as in a distributed computing environment.

The system silo may contain a current rating system for games to be played on a given machine. The silo can also contain an indication that may or may not indicate to a user whether they are being monitored. Furthermore the silo can contain a list of applications allowed to bypass a web filter. Moreover it can contain a list of third party extensions to the computing system model and how to launch them such as plug ins etc. . Lastly it can contain the name and identification of a currently enforced web filter whether that filter belongs to the computing system or a third party. This and other such policy oriented subject matter may be used to help users generally and parents specifically to control actions in any given computing environment.

In contrast to the system silo the user silo may be implemented on a per controlled user basis where there may be more than one user per machine or one user per multiple machines. In the user silo polices may be implemented that determine whether the logging of events is required for a particular user. Next the user silo may have policies regarding the hourly logon restriction applied to a particular user and the corresponding hours that those restrictions apply. Also the silo can have polices that answer the question whether a user is allowed to make requests for overrides concerning web and game activity. And lastly for example polices may be implemented regarding general application restrictions and whether they are turned on for a particular user if so lists of file paths may have to be allowed or blocked.

The game silo can contain policies as to whether particular games or any games at all are permitted. If certain games are permitted a further policy may be applied as to whether unrated games are permitted. This illustrates the notion that polices can be interrelated not only in the temporal sense that one policy may necessarily follow another but in the causal sense that one policy may have impact on another policy.

A policy may be implemented regarding the current maximum game rating permitted. For example if a parent wants to prevent child exposure to violent games such a parent may set such a maximum rating that the child may be exposed to play. Any game that is above this rating will simply not play. Furthermore a list of rating descriptors which are blocked for a user may be provided in the game silo such as blood gambling etc. And lastly by example and not limitation a list of explicitly allowed or blocked games may be resident in the silo such that when an external compliant application queries the compliant interface regarding a particular game a policy answer can be given and the associated actions can be followed.

Finally regarding the web silo a policy can be established whether a filter should be in use or whether file downloads are permitted. More specifically the level of filtering can be established or the types of file downloads can be enumerated or described. It can also be established whether unrated sites are permitted. Additionally a list of explicitly blocked categories e.g. hate racism etc. or explicitly blocked URLs www.norml.com can be provided.

The aforementioned policies can represent parents areas of concern. For example polices can be applied to system events. A parent may want to know when a child is trying or has tried to change the time settings of a computer system. There are various reasons why polices may be employed to prevent the changing of time settings. For example a child may be prevented from surfing the Internet at particular hours in the day and changing the time settings might obviate a surfing during off hours restriction. In general polices can be employed that prevent activities that attempt to get around parental or other types of restrictions.

The presently disclosed subject matter of course extends in applicability not only to the simple case where a child clicks on a clock setting icon and tries to change the clock but also to cases where a more sophisticated user attempts to change for example the BIOS. One way to flag such behavior is log suspicious behavior and to provide a notification regarding such behavior. For instance a logging service could notify an administrator that the last time a computer booted up was three days later than the current time thus suggesting that some clock manipulation must have occurred. One of ordinary skill in the art could easily imagine other policies that could be employed to prevent the obviation of such restrictions.

Conversely other logging events may be logged by the third parties providing the aforementioned compliant applications. For example such events may include email received email sent media playback instant messaging file download instant message special feature used e.g. audio webcam file swap etc. game end email contact list change instant message contact list change and custom third party events.

Thus the logging service provides one type of feedback upon which the policies the compliance interface interprets may be altered. Another type of input for altering policies may be made by either local users or remote users . Local users as administrators may set or change policies on a computer. For example this may entail a parent setting or altering the parental control settings on a computer. Importantly however policies may also be inputted by remote users . Thus parents can remotely change polices on a child s computer without ever having to log on to the child s computer.

In such a case the parent can set or alter the policies via a management control panel as discussed with reference to . This control panel can interact with a management service which serves as a common entry point to the management interfaces . The compliance interface can then be based off of these interfaces in such a way as to provide the most salient interfaces to third party providers of applications compliant with the interface .

There are many ways in which aspects of the compliance interface can be implemented. presents in block diagram form one such exemplary implementation of the compliance interface. Thus at block at least one query from a compliant application is received via a query interface. Such a query may inquire as to what policies are associated with a particular compliant application. For example a gaming application may ask what policies are associated with its own content such as graphic violence or adult language.

Next at block the query can be checked against a stored policy related to the query wherein the policy may be stored in an information silo s as discussed in reference to . The compliance interface can interpret the stored policy and what actions the compliant application should follow. The compliance interface may in fact interpret several such policies that may apply to the compliant application and any related policies that my have an impact whether at that time or at a future time on the compliant application.

At block at least one instruction is sent in response to the at least one query to the compliant. Such an instruction may provide information to the compliant application as to the course of action that it is expected to take in order to say compliant. If for example the policy is not to expose a user to violent content a compliant gaming application that has such content might simply block itself and not run.

At block at least one notification is sent to the compliant application when a policy affecting the compliant application is to be implemented whether at the present or in the future. Such a notification may allow a compliant application to prepare for events which may affect it. As already discussed above a media player may want to know in advance or be made aware of the fact when a user is going to be logged out such that it can stop playing content upon such log out.

Lastly block feeds back to block . This relationship shows that upon the sending of the instruction the compliance interface is ready for the next query. However as the dashed lines and show the compliance interface may revert to block at any time during the to process since it does not have to provide notifications or instructions to the compliant applications.

While the present disclosure has been described in connection with the preferred aspects as illustrated in the various figures it is understood that other similar aspects may be used or modifications and additions may be made to the described aspects for performing the same function of the present disclosure without deviating therefrom. For example in various aspects of the disclosure a compliant interface was provided where the interface may mediate between compliant applications and a set of stored polices which may be set by a user. However other equivalent mechanisms to these described aspects are also contemplated by the teachings herein. Therefore the present disclosure should not be limited to any single aspect but rather construed in breadth and scope in accordance with the appended claims.

