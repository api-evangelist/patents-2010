---

title: Offering additional license terms during conversion of standard software licenses for use in cloud computing environments
abstract: A “Bring Your Own License” (BYOL) service can convert users' “off-the-shelf” (OTS) software licenses for use in public clouds according to rules provided by independent software vendors (ISVs). The BYOL service can offer additional license terms to the users during conversion of the OTS software license on behalf of the ISVs. The additional license terms can be an expansion of the use of the software, an expansion of the technical support offer by the new cloud license, and expansion of the duration of use.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09053472&OS=09053472&RS=09053472
owner: Red Hat, Inc.
number: 09053472
owner_city: Raleigh
owner_country: US
publication_date: 20100226
---
This invention relates generally to products and services more particularly to systems and methods for cloud computing related services and products.

The advent of cloud based computing architectures has opened new possibilities for the rapid and scalable deployment of virtual Web stores media outlets and other on line sites or services. In general a cloud based architecture deploys a set of hosted resources such as processors operating systems software and other components that can be combined or strung together to form virtual machines. A user or customer can request the instantiation of a virtual machine or set of machines from those resources from a central server or management system to perform intended tasks or applications. For example a user may wish to set up and instantiate a virtual server from the cloud to create a storefront to market products or services on a temporary basis for instance to sell tickets to an upcoming sports or musical performance. The user can lease or subscribe to the set of resources needed to build and run the set of instantiated virtual machines on a comparatively short term basis such as hours or days for their intended application.

Typically to utilize the cloud the user must rely on the software provided by the cloud. This however can raise the cost for the user to utilize the cloud. Because the user is relying on cloud to provide the software the cost of the software will be added to the fee paid by the user to access the cloud. Additionally this may waste resources already held by the user. For example the user may already own software licenses for the same software being provided by the cloud.

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific embodiments. Electrical mechanical logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present teachings. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

Embodiments of the present teachings relate to systems and methods for enabling users to utilize standard software licenses in public cloud computing environments. More particularly embodiments relate to platforms and techniques in which a Bring Your Own License BYOL service can convert users off the shelf OTS software licenses for use in public clouds according to rules provided by independent software vendors ISVs .

According to embodiments a BYOL service can be configured to provide software license conversion and license monitoring services to software users and ISVs. In particular the BYOL service can be configured to register the ISVs with the BYOL service. The BYOL service can be configured to receive from the ISVs rules by which to convert terms of OTS software licenses provided by the ISVs to terms relevant to public clouds. The rules provided by art ISV can convert the terms associated with the ISV s OTS software licenses e.g. number of instances number of users duration technical support provided to terms associated with public clouds e.g. number of concurrent users number of virtual machines number of different clouds technical support . Once received the BYOL service can be configured to store the rules for each ISV in ISV records.

According to embodiments the BYOL service can be configured to register users that wish to use OTS software programs with OTS software licenses in public clouds. Once registered the BYOL service can receive requests for the users to convert OTS software licenses held by the user to licenses for use in a public cloud. In particular a particular user can identify an OTS software license held by the user by providing information such as software name associated ISV number of OTS software licenses held and terms of the OTS software license if necessary . The BYOL service can search the ISV records for the appropriate rules to convert the terms of the OTS software license held by the user to a new cloud software license for use in the public cloud. Once converted the BYOL service can notify the user and the appropriate ISV of the terms of the new cloud software license. Additionally the BYOL can be configured to store the new cloud software license including the converted terms in a record associated with the particular user and the ISV.

According to embodiments the BYOL service can be configured to offer additional license terms to the users during conversion of the OTS software license on behalf of the ISVs. The BYOL service can be configured to receive from the ISVs additional license terms that can expand or modify the new cloud software license. Additionally the BYOL service can be configured to receive from the ISVs a charge associated with the additional license terms. Once an OTS software license is converted for a particular user the BYOL service can be configured to offer the additional license terms to the user at the charge specified by the ISV. The additional license terms can be any type of terms that were not contemplated by the OTS software license but relevant to the use of the software in a public cloud. For example the additional license terms can be an expansion of the use of the software e.g. additional concurrent users additional virtual machines additional number of cloud deployments beyond the converted license terms an expansion of the technical support offer by the new cloud license e.g. technical support for the cloud deployment expansion of the duration and the like.

According to embodiments if the user accepts the additional license terms the BYOL service can be configured to notify the appropriate ISV of the acceptance of the additional license terms. Likewise the BYOL service can be configured to negotiate payment of the charge for the additional license terms with the user and forward the payment to the appropriate ISV. Additionally the BYOL service can be configured to establish a communication channel between the user and the appropriate ISV in the event the user and ISV desire to negotiate the additional license terms and or payment of the charge.

By providing license conversion the BYOL service allows the user to utilize already purchased software programs in public clouds. Accordingly the user can reduce the cost required to migrate computing processes to the cloud. Additionally the BYOL service allows ISVs to extend their OTS software to the cloud computing environments. Also by offering additional license terms the BYOL allows the ISVs to extend their revenue stream associated with the OTS software.

In embodiments the entire set of resource servers or other hardware or software resources used to support the cloud along with its instantiated virtual machines can be managed by a cloud management system . The cloud management system can comprise a dedicated or centralized server and or other software hardware and network tools that communicate via one or more networks such as the Internet or other public or private network with all sets of resource servers to manage the cloud and its operation. To instantiate a new set of virtual machines a user can transmit an instantiation request to the cloud management system for the particular type of virtual machine they wish to invoke for their intended application. A user can for instance make a request to instantiate a set of virtual machines configured for email messaging or other applications from the cloud . The request can be received and processed by the cloud management system which identifies the type of virtual machine process or other resource being requested. The cloud management system can then identify the collection of resources necessary to instantiate that machine or resource. In embodiments the set of instantiated virtual machines or other resources can for example comprise virtual transaction servers used to support Web storefronts or other transaction sites.

In embodiments the user s instantiation request can specify a variety of parameters defining the operation of the set of virtual machines to be invoked. The instantiation request for example can specify a defined period of time for which the instantiated machine or process is needed. The period of time can be for example an hour a day or other increment of time. In embodiments the user s instantiation request can specify the instantiation of a set of virtual machines or processes on a task basis rather than for a predetermined amount of time. For instance a user could request resources until a software update is completed. The user s instantiation request can specify other parameters that define the configuration and operation of the set of virtual machines or other instantiated resources. For example the request can specify an amount of processing power or input output I O throughput the user wishes to be available to each instance of the virtual machine or other resource. In embodiments the requesting user can for instance specify a service level agreement SLA acceptable for their application. Other parameters and settings can be used. One skilled in the art will realize that the user s request can likewise include combinations of the foregoing exemplary parameters and others.

When the request to instantiate a set of virtual machines or other resources has been received and the necessary resources to build that machine or resource have been identified the cloud management system can communicate with one or more set of resource servers to locate resources to supply the required components. The cloud management system can select providers from the diverse set of resource servers to assemble the various components needed to build the requested set of virtual machines or other resources. It may be noted that in some embodiments permanent storage such as hard disk arrays may not be included or located within the set of resource servers available to the cloud management system because the set of instantiated virtual machines or other resources may be intended to operate on a purely transient or temporary basis. In embodiments other hardware software or other resources not strictly located or hosted in the cloud can be leveraged as needed. For example other software services that are provided outside of the cloud and hosted by third parties can be invoked by in cloud virtual machines. For further example other non cloud hardware and or storage services can be utilized as an extension to the cloud either on an on demand or subscribed or decided basis.

With the resource requirements identified the cloud management system can extract and build the set of virtual machines or other resources on a dynamic or on demand basis. For example one set of resource servers can respond to an instantiation request for a given quantity of processor cycles with an offer to deliver that computational power immediately and guaranteed for the next hour. A further set of resource servers can offer to immediately supply communication bandwidth for example on a guaranteed minimum or best efforts basis. In other embodiments the set of virtual machines or other resources can be built on a batch basis or at a particular future time. For example a set of resource servers can respond to a request for instantiation at a programmed time with an offer to deliver the specified quantity of processor cycles within a specific amount of time such as the next 12 hours.

The cloud management system can select a group of servers in the set of resource servers that match or best match the instantiation request for each component needed to build the virtual machine or other resource. The cloud management system can then coordinate the integration of the completed group of servers from the set of resource servers to build and launch the requested set of virtual machines or other resources. The cloud management system can track the combined group of servers selected from the set of resource servers or other distributed resources that are dynamically or temporarily combined to produce and manage the requested virtual machine population or other resources.

In embodiments the cloud management system can generate a resource aggregation table that identifies the various sets of resource servers that will be used to supply the components of the virtual machine or process. The sets of resource servers can be identified by unique identifiers such as for instance Internet Protocol IP addresses or other addresses. The cloud management system can register the finalized group of servers in the set resource servers contributing to an instantiated machine or process.

The cloud management system can then set up and launch the initiation process for the virtual machines processes or other resources to be delivered from the cloud. The cloud management system can for instance transmit an instantiation command or instruction to the registered group of servers in set of resource servers . The cloud management system can receive a confirmation message back from each participating server in a set of resource servers indicating a status regarding the provisioning of their respective resources. Various sets of resource servers can confirm for example the availability of a dedicated amount of processor cycles amounts of electronic memory communications bandwidth or applications or other software prepared to be served.

As shown for example in the cloud management system can then instantiate one or more than one set of virtual machines or other processes based on the resources supplied by the registered set of resource servers . In embodiments the cloud management system can instantiate a given number for example 10 500 1000 or other number of virtual machines to be made available to users on a network such as the Internet or other public or private network. Each virtual machine can be assigned an instantiated machine ID that can be stored in the resource aggregation table or other record or image of the instantiated population. Additionally the cloud management system can store the duration of each virtual machine and the collection of resources utilized by the complete set of instantiated virtual machines .

In embodiments the cloud management system can further store track and manage a user s identity and associated set of rights or entitlements to software hardware and other resources. Each user that populates a set of virtual machines in the cloud can have specific rights and resources assigned and made available to them. The cloud management system can track and configure specific actions that a user can perform such as provision a set of virtual machines with software applications or other resources configure a set of virtual machines to desired specifications submit jobs to the set of virtual machines or other host manage other users of the set of instantiated virtual machines or other resources and other privileges or actions. The cloud management system can further generate records of the usage of instantiated virtual machines to permit tracking billing and auditing of the services consumed by the user. In embodiments the cloud management system can for example meter the usage and or duration of the set of instantiated virtual machines to generate subscription billing records for a user that has launched those machines. Other billing or value arrangements are possible.

The cloud management system can configure each virtual machine to be made available to users of the one or more networks via a browser interface or other interface or mechanism. Each instantiated virtual machine can communicate with the cloud management system and the underlying registered set of resource servers via a standard Web application programming interface API or via other calls or interfaces. The set of instantiated virtual machines can likewise communicate with each other as well as other sites servers locations and resources available via the Internet or other public or private networks whether within a given cloud or between clouds.

It may be noted that while a browser interface or other front end can be used to view and operate the set of instantiated virtual machines from a client or terminal the processing memory communications storage and other hardware as well as software resources required to be combined to build the virtual machines or other resources are all hosted remotely in the cloud . In embodiments the set of virtual machines or other resources may not depend on or require the user s own on premise hardware or other resources. In embodiments a user can therefore request and instantiate a set of virtual machines or other resources on a purely off premise basis for instance to build and launch a virtual storefront or other application.

Because the cloud management system in one regard specifies builds operates and manages the set of instantiated virtual machines on a logical level the user can request and receive different sets of virtual machines and other resources on a real time or near real time basis without a need to specify or install any particular hardware. The user s set of instantiated virtual machines processes or other resources can be scaled up or down immediately or virtually immediately on an on demand basis if desired. In embodiments the various sets of resource servers that are accessed by the cloud management system to support a set of instantiated virtual machines or processes can change or be substituted over time. The type and operating characteristics of the set of instantiated virtual machines can nevertheless remain constant or virtually constant since instances are assembled from abstracted resources that can be selected and maintained from diverse sources based on uniform specifications.

In terms of network management of the set of instantiated virtual machines that have been successfully configured and instantiated the cloud management system can perform various network management tasks including security maintenance and metering for billing or subscription purposes. The cloud management system of a given cloud can for example install or terminate applications or appliances on individual machines. The cloud management system can monitor operating virtual machines to detect any virus or other rogue process on individual machines and for instance terminate the infected application or virtual machine. The cloud management system can likewise manage an entire set of instantiated virtual machines or other resources on a collective basis for instance to push or deliver a software upgrade to all active virtual machines. Other management processes are possible.

In embodiments more than one set of virtual machines can be instantiated in a given cloud at the same overlapping or successive times. The cloud management system can in such implementations build launch and manage multiple sets of virtual machines based on the same or different underlying set of resource servers with populations of different sets of instantiated virtual machines such as may be requested by different users. The cloud management system can institute and enforce security protocols in a cloud hosting multiple sets of virtual machines. Each of the individual sets of virtual machines can be hosted in a respective partition or sub cloud of the resources of the cloud . The cloud management system of a cloud can for example deploy services specific to isolated or defined sub clouds or isolate individual workloads processes within the cloud to a specific sub cloud. The subdivision of the cloud into distinct transient sub clouds or other sub components which have assured security and isolation features can assist in establishing a multiple user or multi tenant cloud arrangement. In a multiple user scenario each of the multiple users can use the cloud platform as a common utility while retaining the assurance that their information is secure from other users of the overall cloud system. In further embodiments sub clouds can nevertheless be configured to share resources if desired.

In embodiments and as also shown in the set of instantiated virtual machines generated in a first cloud can also interact with a set of instantiated virtual machines or processes generated in a second third or further cloud . The cloud management system of a first cloud can interface with the cloud management system of a second cloud to coordinate those domains and operate the clouds and or virtual machines or processes on a combined basis. The cloud management system of a given cloud can track and manage individual virtual machines or other resources instantiated in that cloud as well as the set of instantiated virtual machines or other resources in other clouds.

In the foregoing and other embodiments the user making an instantiation request or otherwise accessing or utilizing the cloud network can be a person customer subscriber administrator corporation organization or other entity. In embodiments the user can be or include another virtual machine application or process. In further embodiments multiple users or entities can share the use of a set of virtual machines or other resources.

In embodiments the one or more users and can utilize one or more of the clouds to support computing processes of the users and . The computing processes can be any type of computing processes such as virtual machines software appliances software programs e.g. OS applications and the like etc. The users and can be any type of entity such as individual users corporations companies universities and the like that utilizes the clouds to support computing processes. While will be described below in examples with specific reference to the user one skilled in the art will realize that the processes and methods can apply to any of the users and or any other users. Additionally while illustrates users and one skilled in the art will realize that methods and processes can apply to any number of users.

In embodiments the clouds can be any type of cloud computing environment such as the cloud computing environments described above in . As described above the clouds can include any number of computing systems to support the computing processes in the cloud. The computing systems can be any type of computing systems capable of supporting computing processes such as servers laptops desktops and the like. The computing systems can include a number of hardware resources which are used to support the computing processes e.g. virtual machines software appliances processes software programs and the like in the clouds such as processors memory network hardware and bandwidth storage devices etc. Additionally each of the clouds can include a cloud management system as described above. The cloud management systems can be supported by the computing resources of their respective clouds or supported by independent computing systems.

In embodiments the clouds can be operated and controlled by any number of entities. For example one or more of the clouds can be owned and or operated by a public cloud vendor such as Amazon Inc. in order to provide the services of the cloud to subscribers and customers. Likewise for example one or more of the clouds can be owned and or operated by one or more of the users and and the resources of the cloud can be used by the entity internally to support various computing processes. In either case the clouds can be configured to include hardware described above and software resources to support computing processes. For example if a particular cloud is operated by a public cloud vendor the software resources can include operating systems such as a distribution of Linux provided by Red Hat Corporation and various software programs requested or typically desired by subscribers such as middleware applications web hosting applications electronic mail email applications and the like.

In embodiments the one or more networks can be or include the Internet or other public or private networks. The one or more or more networks can be or include wired wireless optical and other network connections. One skilled in the art will realize that the one or more networks can be any type of network utilizing any type of communication protocol to connect the computing systems.

As mentioned above the clouds can provide software resources such as software programs to the users and . Typically the clouds will offer access to these software resources for a fee. The users and can desire to utilize software programs already purchased and owned by the users in the clouds . For example the user can own an off the shelf OTS software program provided by one of the ISVs . In embodiments the user can desire to utilize the OTS software program in one or more of the clouds such as a public cloud. The OTS software program can be covered by an OTS software license . When the user purchased the OTS software program the user agreed to the terms of the OTS software license . The terms of the OTS software license can be tailored to cover the use of the OTS software program on computing systems owned and operated by the user . The terms of the OTS software license can include number of users allowed to utilize the OTS software program the number of instances of the OTS software program allowed to operate simultaneously the duration of the OTS software license and technical support provided by the ISV . The terms of the OTS software license however may not be applicable or translate to the use of the OTS software program in the clouds . In fact the terms of the OTS software license may prohibit or restrict the use of the OTS software program in the clouds .

In embodiments the BYOL service can be configured to provide a service to convert OTS software licenses offered by the ISVs and owned by the users and into new cloud software licenses so that the users and can utilize OTS software programs in the clouds . To convert the OTS software licenses the BYOL service can be configured to convert the OTS software licenses according to rules provided by the ISVs . The BYOL service can be operated by an entity that provides the conversion services to the users and and the ISVs . The conversion services can be provided to the users and and the ISVs at a fee. The BYOL service can be supported by one or more computing systems such as servers laptops desktops and the like which include conventional components of a computing system such as such as processors memory network interfaces computer readable storage media and devices etc. Likewise the BYOL service can be provided and supported by one or more of the clouds .

In embodiments the conversion processes of the BYOL service can be performed by a conversion module . The conversion module can be implemented as a software program that is configured to perform the conversion services as described herein. Likewise the conversion module can be implemented as a portion of other software programs. In either case the conversion module can be configured to include the necessary logic commands instructions and protocols to perform the processes described herein. In any implementation the conversion module can be written in any type of conventional programming language such as C C JAVA Perl and the like. Additionally the conversion module can be stored in computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to computing systems supporting the BYOL service or remotely located.

In embodiments to provide the conversion services the BYOL service can be configured to register the ISVs with the BYOL service . The BYOL service can be configured to receive from the ISVs rules by which to convert terms of OTS software licenses provided by the ISVs to terms relevant to the clouds . To register the ISVs the BYOL service can be configured to provide an interface to register the ISVs and to receive the rules from the ISVs . The interface can be configured to provide the details and terms of the conversion services conversion services offered fee etc. . Likewise if an ISV accepts the offer of conversion services the interface can be configured to receive from the ISV the rules for converting the OTS software licenses. To achieve this the conversion module can be configured to include the necessary logic commands instructions and protocols to generate and provide the interface such as command line or graphical user interfaces GUIs to receive the request for the conversion services.

The conversion module can be configured to provide the interface to the ISVs via the network utilizing any type of network protocol such as Internet protocol IP user datagram protocol UDP transmission control protocol TCP hypertext transfer protocol HTTP file transfer protocol FTP electronic mail email protocols or any other type of known or proprietary network protocol. Likewise the conversion module can be configured to allow software programs executing on the computing systems of the ISVs to provide the request. The conversion module can be configured to include an application programming interface API to provide the interface that allows software programs of the ISVs to call the conversion module and provide the request.

In embodiments the rules provided by an ISV can convert the terms associated with the ISV s OTS software licenses to terms associated with the clouds . For example the rules can define general rules for converting general terms associated with any OTS software licenses e.g. number of instances number of users duration technical support provided to general terms associated with the clouds e.g. number of concurrent users number of virtual machines number of different clouds technical support . Likewise the rules can define specific rules for converting a particular OTS software license provided by a ISV to a new cloud software license.

In embodiments once the rules are received the BYOL service can be configured to store the rules in a set of ISV records . In particular the conversion module can be configured to store the rules for each ISV in a ISV record associated with an identification of the ISV e.g. name . The conversion module can maintain the set of ISV records in a repository such as a database. The repository can be stored in computer readable storage devices or media CD DVD hard drive portable storage memory etc. whether local to the computing systems supporting the BYOL service or remotely located.

In embodiments the BYOL service can be configured to register and to receive requests from the users and that wish to use OTS software programs in the clouds and configured to convert the OTS software licenses to new cloud software licenses. To register the users and the BYOL service can be configured to provide an interface to receive the request from the users and . The interface can be configured to provide the details and terms of the conversion services conversion services offered fee etc. . Likewise if one of the users and accepts the offer of conversion services the interface can be configured to receive from the users and the details of the OTS software licenses to be converted. To achieve this the conversion module can be configured to include the necessary logic commands instructions and protocols to generate and provide the interface such as command line or graphical user interfaces GUIs to receive the request for the conversion services.

The conversion module can be configured to provide the interface to the users and via the network utilizing any type of network protocol such as Internet protocol IP user datagram protocol UDP transmission control protocol TCP hypertext transfer protocol HTTP file transfer protocol FTP electronic mail email protocols or any other type of known or proprietary network protocol. Likewise the conversion module can be configured to allow software programs executing on the computing systems of the users and to provide the request. The conversion module can be configured to include an application programming interface API to provide the interface that allows software programs of the users and to call the conversion module and provide the request.

In embodiments the request provided by the users and can identify the OTS software license held by the users and by providing details such as software program name identification of the associated ISV number of OTS software licenses held and terms of the OTS software license if necessary . Once received the conversion module can be configured to search the set of ISV records to identify the appropriate rules to convert the terms of the OTS software license held by the users and to a new cloud software license. Once identified the conversion module can be configured to convert the requested OTS software license to the new cloud software license. To achieve this the conversion module can be configured to include the necessary logic commands instructions and protocols to search the set of ISV records to retrieve the appropriate rules and to convert the terms of the OTS software license according to the retrieved rules.

For example the user can request to convert the OTS software license for the OTS software program . The user can provide to the BYOL service the details of the OTS software license such as the OTS software program name e.g. web server version 1 identification of the associated ISV e.g. XYZ software company number of OTS software licenses held e.g. 5 and terms of the OTS software license e.g. of users 5 of instances 3 duration 1 year technical support limited 90 days . The BYOL service can retrieve the appropriate ISV record e.g. record from the repository and can identify the rules for conversion. The BYOL service can then convert the terms of the OTS software license to terms for the cloud . For example based on the rules in the example record each new cloud software license can include the terms of concurrent users 5 of virtual machines 3 duration in the cloud 1 year technical support none.

In embodiments once converted the BYOL service can be configured to notify the appropriate users and and the appropriate ISVs of the terms of the new cloud software license converted for use in the clouds . The conversion module can be configured to notify the appropriate users and and appropriate ISVs utilizing the interface and respectively. Likewise the BYOL service can be configured to store the new cloud license and the converted terms in a record associated with the appropriate users and and the appropriate ISVs . The conversion module can be configured to maintain the record in the repository .

In embodiments the BYOL service can be configured to offer additional license terms to the users and during conversion of the OTS software licenses on behalf of the ISVs . The additional license terms can be any type of terms that were not contemplated by the OTS software license but relevant to the use of the software in the clouds . For example the additional license terms can be an expansion of the use of the OTS software programs e.g. additional concurrent users additional virtual machines additional number of cloud deployments beyond the new cloud software license terms an expansion of the technical support offer by the new cloud license e.g. technical support for the cloud deployment expansion of the duration and the like.

In embodiments the BYOL service can be configured to receive from the ISVs the additional license terms that can expand or modify the new cloud software license. Additionally the BYOL service can be configured to receive from the ISVs a charge associated with the additional license terms. In particular the conversion module can be configured to receive the additional license terms in the interface .

In embodiments once the additional license terms are received the BYOL service can be configured to store the additional license terms in a set of ISV additional license terms ALT records . In particular the conversion module can be configured to store the additional license terms for each ISV in a ALT record associated with an identification of the ISV e.g. name . The conversion module can maintain the set of ALT records in a repository .

In embodiments once an OTS software license is converted as described above the BYOL service can be configured to offer the additional license terms to the users and requesting conversion. In particular the conversion module can be configured to search the set of ALT records to identify the additional license terms and charge associated with the appropriate ISV . To achieve this the conversion module can be configured to include the necessary logic commands instructions and protocols to search the set of ALT records and to retrieve the additional license terms. Once identified the conversion module can be configured provide the additional license terms and associated charge to the users and via the interface . Likewise the conversion module can be configured to receive the users and acceptance of any additional terms via the interface .

In embodiments if any of the user and accepts the additional license terms the BYOL service can be configured to notify the appropriate ISV of the acceptance of the additional license terms. In particular the conversion module can be configured to notify the appropriate ISV via the interface . Likewise the BYOL service can be configured to negotiate payment of the charge for the additional license terms with the users and and forward the payment to the appropriate ISV . In particular the conversion module can be configured to negotiate payment of the charge for the additional license terms with the users and via the interface utilizing any type of known electronic payment procedure and forward the payment to the appropriate ISV utilizing the known electronic payment procedures. If payments is accepted the conversion module can be configured to modify the new cloud software license according to the purchased additional license terms.

In embodiments the BYOL service can be configured to establish a communication channel between the users and and the appropriate ISV in the event the user and and ISV desire to negotiate the additional license terms and or payment of the charge.

Processor also communicates with the conversion module to execute control logic and allow for software license conversion processes as described above and below. Other configurations of the computing system associated network connections and other hardware and software resources are possible.

While illustrates the computing system as a standalone system including a combination of hardware and software the computing system can include multiple systems operating in cooperation. The conversion module can be implemented as a software application or program capable of being executed by the computing system as illustrated or other conventional computer platforms. Likewise the conversion module can also be implemented as a software module or program module capable of being incorporated in other software applications and programs. In either case the conversion module can be implemented in any type of conventional proprietary or open source computer language. When implemented as a software application or program code the conversion module can be stored in a computer readable storage medium or device such as storage accessible by the computing system . Likewise during execution a copy of the conversion module can be stored in the memory .

In the BYOL service can store the rules in ALT records. For example the BYOL service can store the additional license terms in a set of ISV additional license terms ALT records . In the BYOL service can receive a request to convert an OTS software license to a new cloud software license. For example the request provided by the users and can identify the OTS software license held by the users and by providing details such as software program name identification of the associated ISV number of OTS software licenses held and terms of the OTS software license if necessary .

In the BYOL service can convert the terms of the OTS software license to the new cloud software license. For example the BYOL service can search the set of ISV records to identify the appropriate rules to convert the terms of the OTS software license held by the users and to a new cloud software license. Once identified the BYOL service can convert the requested OTS software license to the new cloud software license.

In the BYOL service can offer the additional license terms to the user requesting conversion. In the BYOL service can modify the new cloud software license if the additional license terms are accepted. For example the BYOL service can modify the terms of the new cloud software license by the additional license terms that are accepted and purchased.

In the BYOL service can notify the appropriate ISV of the accepted additional license terms. In the process can end but the process can return to any point and repeat.

Certain embodiments may be performed as a computer application or program. The computer program may exist in a variety of forms both active and inactive. For example the computer program can exist as software program s comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include computer readable storage devices and media and signals in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present teachings can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program s of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the aspects have been described with reference to the exemplary embodiments thereof those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular although the method has been described by examples the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the term one or more of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents.

