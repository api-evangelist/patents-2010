---

title: Methods and apparatus to control privileges of mobile device applications
abstract: Methods and apparatus to control privileges of mobile device applications are disclosed. A disclosed example method includes assigning a process identifier to an application on a mobile device, the process identifier generated by an operating system of the mobile device, determining via a digital certificate that the application is authorized to be executed on the mobile device and that the application is authorized to access a network interface of the mobile device, configuring a mandatory access control module of the mobile device to enforce access of the network interface by providing the process identifier to the mandatory access control module, and enabling the application to access the network interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08650620&OS=08650620&RS=08650620
owner: AT&T Intellectual Property I, L.P.
number: 08650620
owner_city: Atlanta
owner_country: US
publication_date: 20101220
---
This disclosure relates generally to mobile devices and more particularly to methods and apparatus to control privileges of mobile device applications.

Mobile device security is becoming increasingly important with increases in the spread of malicious applications or other fraudulent code e.g. malware targeted towards mobile devices. Many mobile devices also include functionality that enables the mobile devices to connect to more than one type of wireless network. For example a mobile device with cellular functionality and WiFi functionality may connect to a cellular wireless network and or a WiFi wireless network. In this example some applications on the mobile device e.g. voice communications global positioning system GPS related applications service provider related functions may connect to the cellular network while other applications e.g. web browsing text messaging media streaming may connect to the WiFi network. In some examples the applications on a mobile device may access a wireless network without a user knowing which wireless network the applications are utilizing.

Example methods articles of manufacture and apparatus to control privileges of mobile device applications are disclosed. A disclosed example method includes assigning a process identifier to an application on a mobile device the process identifier generated by an operating system of the mobile device. The example method also includes determining via a digital certificate that the application is authorized to be executed on the mobile device and that the application is authorized to access a network interface of the mobile device. The example method further includes configuring a mandatory access control module of the mobile device to enforce access of the network interface by providing the process identifier to the mandatory access control module. The example method then enables the application to access the network interface.

A disclosed example apparatus includes a certificate processor to determine via a digital certificate that an application on a mobile device is authorized to access a network interface of the mobile device. The apparatus further include a policy processor to configure a mandatory access control module of the mobile device to enforce access of the network interface by providing the process identifier to the mandatory access control module.

Mobile device security is becoming important as software worms viruses and other malicious code is designed to target mobile devices. Mobile devices include for example any laptop smartphone cellular phone computing pad personal digital assistant tablet personal computer personal communicator etc. Because many mobile devices have relatively small memories these mobile devices typically do not include anti malware protection. However many mobile devices are primarily used to access data and or communications from servers via a wireless network. In some instances malicious code may be embedded within data which then penetrates an operating system of a mobile device. In many instances malicious code can expose sensitive information stored on a mobile device. In other instances malicious code can use the mobile device as a launching pad to propagate to other mobile devices. In yet other instances the malicious code may use the mobile device as a host to perform denial of service attacks on web servers and or wireless networks.

To prevent and or limit a mobile device from receiving malicious code some mobile devices include a VPN client that encrypts keys and or authenticates data and or communication transmissions through a wireless network. In many instances a mobile device uses a VPN client to create a secure connection to a host server located in a private enterprise network or a carrier network e.g. a wireless network . The VPN client establishes a relatively secure virtual tunnel and or virtual circuit from a mobile device to a host server and or network.

However there are some known issues with current VPN clients that expose mobile devices to malicious code. In some instances malicious code can bypass a VPN client on a mobile device. For example some mobile devices are configured to connect to more than one wireless network. These mobile devices grant applications access to connect e.g. communicatively couple to the wireless networks via corresponding wireless hardware interfaces. In many of these instances the mobile devices may enable any application to connect to a wireless network without prompting a user for permission. In these instances a malicious application may bypass a VPN connecting to a first wireless network and connect to a second wireless network. The malicious application can bypass the VPN and any corresponding firewalls on the mobile device by for example accessing the second wireless network at the link layer of the mobile device e.g. an application programming interface API for processing network traffic .

In other instances user installed applications may not be configured to access a wireless network through a VPN client. A malicious application may use the connections of these applications to bypass the VPN. Additionally some mobile device users may disable and or uninstall VPN clients thereby exposing the mobile devices to potentially malicious code. In yet other instances malicious applications and or code can utilize tools and or components that are used by VPN clients to protect a mobile device. The malicious applications can utilize the tools and or components to connect to a wireless network in parallel with the VPN client thereby bypassing the security of the VPN client.

The example methods apparatus and articles of manufacture described herein integrate an App e.g. application Policy Engine with a kernel of an operating system of a mobile device to control which application on the mobile device can be executed and or to control which of the applications are authorized to access device interfaces and or network interfaces of the mobile device. The example methods apparatus and articles of manufacture described herein interact with an application execution manager of an operating system a certificate validation processor and or a mandatory access control MAC module to enforce execution of device and or network interface access policies. Thus the example methods apparatus and articles of manufacture described herein block applications and or services that are not authorized and or certified from accessing security sensitive interfaces including for example a wireless network a VPN and or host service platform.

The example methods apparatus and articles of manufacture described herein restrict application execution and or restrict application access to device and or network interfaces by assigning a process identifier to each application and or service on a mobile device. The example methods apparatus and articles of manufacture use the process identifiers to determine if each of the applications is authorized to be executed on the mobile device and or to access requested device interfaces and or network interfaces. The example methods apparatus and articles of manufacture described herein determine which applications and or services are authorized to be executed on the device by checking a digital application certificate provided by a certificate authority.

A certificate authority may provide a digital certificate for each application or alternatively provide a digital certificate for each of the authorized applications on a mobile device. A list of certificate authorities that are recognized by a mobile device as valid authorities to sign applications may be preconfigured and or hard coded into the example App Policy Engine. Alternatively the list of certificate authorities may be provided through a network via a local memory module of the mobile device such as for example a Subscriber Identity Module SIM card. In examples where a digital certificate is assigned to each application the example methods apparatus and articles of manufacture described herein use the digital certificate to identify that the corresponding application is authorized to be executed on the mobile device. The digital certificate may also indicate which device interfaces and or network interfaces of the mobile device the application is authorized to access.

An application service and or function on a mobile device includes any software and or firmware routine and or algorithm that performs a function within a mobile device. An application and or a service includes for example a messaging application an e mail service a social network application a gaming application a web browsing application a word processing application a database management application etc. When an authorized application is executed on a mobile device the example App policy engine configures the example MAC module to grant only the application access to device interface s and or network interface s on the mobile device. In this manner the example App Policy Engine manages which applications with process identifiers are granted permission to interfaces of the mobile device. The example MAC module may then enable authorized applications and or services to access the device and or network interfaces and block and or restrict unauthorized applications from accessing those interfaces.

A MAC module provides access control between an operating system layer and device interfaces e.g. an interface to a camera a microphone a memory card etc. and or network interfaces e.g. network interface cards NICs of a mobile device. Network interfaces may be communicatively coupled to a network and or server. By providing access control a MAC module determines which applications and or services may transmit and or receive data from networks and or servers via the network interfaces. By providing a MAC module with a list of authorized applications for a network that identifies which device and or network interfaces the applications are authorized to access the example methods apparatus and articles of manufacture described herein create a controlled environment for application execution and or application access to device and or network interfaces thereby preventing unauthorized applications from being executed on a mobile device and or from applications improperly accessing the device and or network interfaces. In this manner the example methods apparatus and articles of manufacture described herein ensure that application execution and or device and or network interface access privileges correspond to specified polices of a certificate authority.

The example methods apparatus and articles of manufacture described herein also enable applications and or services that are authorized and or certified e.g. signed in a digital certificate by a host service platform e.g. a certificate authority to access physical network interfaces of a network thereby blocking malicious and or unauthorized applications from executing on a mobile device. Further the example methods apparatus and articles of manufacture described herein permit exclusive privileges to be granted to a specific application e.g. a VPN client . By granting relative higher privileges to for example a VPN client other applications with relatively lower privileges have to abide by the privileges granted to the VPN client. For example a VPN client may have exclusive authorized access to a wireless network interface. Other certified and or authorized applications on the mobile device with relatively lower privileges are forced to go through the VPN to obtain access to the wireless network.

In the interest of brevity and clarity throughout the following disclosure reference will be made to an example wireless environment of . However the methods articles of manufacture and apparatus described herein to control mobile device application access to wireless networks are applicable to other types of networks constructed using other network technologies topologies and or protocols.

In the illustrated example the mobile device is capable of communicatively coupling to a cellular network and a WiFi network . The example networks and include any number and or types of routers switches servers etc. to enable communications e.g. packet based data between the mobile device and a packet switched network e.g. the Internet . Further the networks and may utilize and or conform to any routing and or communication protocols. For example the cellular network may include components network elements and or controllers that conform to the 3Generation Partnership Project 3GPP Long Term Evolution LTE wireless communication standard the General Packet Radio Service GPRS for second generation 2G protocol the Wideband Code Division Multiple Access W CDMA based third generation 3G protocol the Universal Mobile Telecommunication System UMTS protocol and or the Global System for Mobile Communications GSM protocol. In other examples the wireless environment may include other wireless protocols compatible with the mobile device including for example Bluetooth IP and or IEEE 802.11 wireless local area network WLAN .

In the example of the example mobile device is within a coverage area of the cellular network and a coverage area of the WiFi network . By being within the coverage areas and applications within the mobile device may communicatively couple to either of the wireless networks and . To manage which of the wireless networks and the applications may access the example mobile device includes the App Policy Engine .

In many known examples a mobile device without the App Policy Engine may establish a VPN link to a VPN within for example the cellular network . In these known examples applications that are configured to connect to the VPN on the mobile device may transfer data with the VPN. However other applications including malicious code may bypass the VPN and access the WiFi network . By being able to bypass the VPN applications may transfer data through the WiFi network to known and or unknown destinations without a user of the mobile device knowing of the connection to the WiFi network .

The example App Policy Engine establishes a VPN tunnel within the mobile device so that application access to the cellular network is restricted at the device interface and or the network interface e.g. NIC level. By restricting application access to the hardware interface level e.g. locking a physical interface of the mobile device a MAC module within the mobile device can determine which applications are to be granted access to a VPN within the cellular network and which applications are to be blocked and or not granted access to the VPN. In this manner the example App Policy Engine ensures that only authorized applications are able to connect to a network while preventing unauthorized applications from transmitting and or receiving data.

The application layer includes software and or firmware routines algorithms and or programs that are configured to perform at least one predetermined function. In the illustrated example the application layer includes the applications APP . In this example APP is a VPN client and the applications APP may include any type of software application.

The example VPN client within the application layer enables the applications APP to securely communicatively couple to a VPN within for example the cellular network . Through the exchange of encrypted registration messages with a VPN the example VPN client establishes a virtual connection e.g. a virtual circuit through a public network e.g. the wireless network . The VPN client uses this virtual connection to relatively securely transmit and receive data from servers processors and or computers within a private network of a host service platform connected to the VPN. In this manner the applications APP may transmit and or receive data securely with a VPN via the VPN client and a MAC module .

In the example of the mobile device includes a user interface for displaying the applications APP including the VPN client . A user of the mobile device may connect to a VPN by selecting the VPN client or an icon representing the VPN client displayed within the user interface . A user may execute the certified applications APP to transmit and or receive data from a VPN by selecting the applications APP or an icon representing the applications APP displayed within the user interface .

To connect to a VPN each of the applications APP includes respective digital certificates e.g. an application and or electronic certificate . The example digital certificates certify that the certificates belong to a user organization server and or other entity. The digital certificates may also be used to establish an encryption scheme and or security protocol with a VPN. The VPN client connects to a VPN by transmitting the certificate to a VPN authorization agent that grants access to a VPN. The VPN authorization agent verifies the credentials within the certificate and provides the VPN client access to a VPN. After establishing a connection to a VPN the VPN client encrypts data from the applications APP to transmit to the VPN and decrypts data from the VPN for the applications APP . In many instances the digital certificates are provided by a certificate authority and or an administrator of a VPN.

In the example of the digital certificates includes a list of device interfaces and or network interfaces that are authorized to be accessed by the applications APP . In some examples a certificate authority and or a network administrator may only allow certain applications and or certain types of applications to access device and or network interfaces. A VPN administrator and or a certificate authority may only allow certain applications that have trusted security properties applications that are business appropriate and or applications that are relevant to the purpose of a VPN. For example a network administrator may specify in the certificates and that the application APP and the VPN client are authorized to access a VPN via a network interface. Further the network administrator may specify within the digital certificate that the VPN client is to have relatively greater privileges to access network interfaces and specify within the certificates and that the applications APP are to have relatively fewer privileges to access network interfaces. The relatively fewer privileges may cause the applications APP to go through the VPN client to access the network interfaces.

In other examples a user of the mobile device may request from a VPN administrator and or a certificate authority that certain applications are to have access to a VPN. For example a user may request to have a digital certificate e.g. the digital certificate assigned to the application APP by sending a request to a certificate authority. The certificate authority may respond by providing the digital certificate to reflect that the application APP is authorized to access a VPN. Alternatively a VPN administrator and or a certificate authority may assign a single digital certificate that specifies which of the applications APP may be executed on the mobile device and or specify which interfaces the applications APP may access.

The example operating system OS kernel layer provides services to execute the applications APP and the VPN client within the application layer . For many hardware functions e.g. input functions output functions memory allocation and or wireless communication functions of the mobile device the OS kernel layer functions as an interface so that the hardware functions are interpreted properly by the applications APP and the VPN client . The example OS kernel layer includes the App Policy Engine for interfacing between the VPN client and the MAC module .

The example OS kernel layer may also bridge e.g. interface the application layer with a hardware layer not shown for processing data from the applications APP . The hardware level includes device interface s and network interface s of the mobile device . The example OS kernel layer in the illustrated example manages data from the application layer for transmission to the networks and via for example NICs e.g. wireless network cards . The example OS kernel layer also propagates data received from the networks and to the appropriate applications APP .

In addition to the MAC module the example OS kernel layer includes a network tunnel and a network tap . Together the example MAC module the example network tunnel and the example network tap operate at the OS kernel level to provide security prior to data reaching the applications APP within the application layer . While the example OS kernel layer includes the MAC module the network tunnel and the network tap the OS kernel layer may include additional or fewer components to establish and or manage VPN security.

The example network tunnel TUN creates a VPN tunnel through the device OS platform and or the mobile device by encapsulating data within a packet data payload conforming to a protocol of a packet switched network. In this manner the network tunnel enables communications to propagate securely from for example the VPN client to a destination via a VPN within for example the cellular network . The example network tunnel may create a virtual circuit and or a VPN tunnel upon the VPN client receiving permission to connect to a VPN.

The example network tap monitors data propagating within a VPN tunnel to detect a network intrusion from an unauthorized third party. The example network tap may also be used for Voice over Internet Protocol VoIP recording tp monitor a Quality of Service QoS for a VPN connection. The example network tap may operate in conjunction with the example network tunnel to provide relatively secure data communications through a VPN tunnel.

The example MAC module of provides access control to hardware interface s of the wireless device . Specifically the example MAC module provides access control for the applications APP to connect to wireless NICs which provide a wireless connection to for example the wireless networks and . The example MAC module may also determine which of the applications APP maybe executed and or operated on the mobile device by restricting unauthorized applications from access device interfaces of the mobile device . For example the MAC module may prevent unauthorized applications from accessing a microphone and enabling authorized telephony applications to access the microphone. In this example the MAC module prevents any unauthorized applications e.g. malware from secretly accessing the microphone and recording for example confidential conversations.

In the illustrated example of the MAC module includes an interface to an NIC configured to connect to the cellular network and an interface to an NIC configured to connect to the WiFi network . For example communications approved by the MAC module for the cellular network are routed through the appropriate cellular interface to the wireless NIC configured for the wireless network . In other examples the MAC module may include additional or fewer interfaces to other hardware interfaces of the wireless device .

In the example of the App Policy Engine configures the MAC module to grant specific applications access to a VPN and or host service platform via one of the wireless networks and . To grant certain applications access an operating system within the OS layer assigns a unique process identifier to each of the applications APP . For example the operating system assigns process identifier PID to the application APP and assigns process identifier PID to the VPN client . The process identifiers PID are numbers and or names assigned to the respective applications APP . An operating system the MAC module and or the App Policy Engine may use the process identifiers PID to locate identify and or access the appropriate applications APP . In some instances the process identifiers PID may be used in a function call to access the applications APP .

The example App Policy Engine uses the process identifiers PID as a reference for the MAC module to indicate which of the applications APP are authorized to access a VPN. For example after the process identifiers PID are assigned to the respective applications APP the App Policy Engine checks the digital certificates to determine which of the applications APP are authorized to access device and or network interfaces of the mobile device . The example App Policy Engine sends an instruction to the MAC module with the process identifiers of the applications APP that are authorized to access a VPN. The example MAC module stores the allowed process identifiers to later determine if an application requesting to access a VPN a wireless network and or a host service platform is authorized.

In some examples the App Policy Engine may provide the MAC module with a list of authorized applications upon the mobile device requesting to connect to a VPN. In other examples the App Policy Engine may detect that one of the applications APP is attempting to transmit data to one of the wireless networks and . In response to detecting the attempted transmission the App Policy Engine determines if the application APP is authorized to access a network interface to transmit the data by checking the certificate and sending an instruction to the MAC module to allow the application APP to access the wireless network and or if the application APP is authorized. In these other examples the App Policy Engine provides the MAC module application access permission as each of the applications APP attempts to access a network. In yet other examples the App Policy Engine may provide a list of authorized process identifiers to the MAC module periodically and or after the VPN client receives updated and or new digital certificates.

In examples where the mobile device includes more than one VPN client the App Policy Engine may identify for the MAC module which of the applications APP are authorized to access each of the VPNs via respective network interfaces. For example the application APP may be authorized to access a first VPN via the cellular network and the application APP may be authorized to access a second VPN via the WiFi network . In this example the App Policy Engine instructs the MAC module to allow the application APP to access an NIC for the cellular network and instructs the MAC module to allow the application APP to access an NIC for the WiFi network . Thus the App Policy Engine prevents the MAC module from allowing the application APP to access the VPN on the WiFi network and prevents the MAC module from allowing the application APP from accessing the VPN on the cellular network . Further in examples where more than one VPN client may connect to respective VPNs through for example the cellular network the App Policy Engine ensures that the appropriate applications connect to the respective VPNs through the appropriate VPN client by having the MAC module restrict applications from accessing a VPN on the cellular network that are not authorized to access the VPN.

The example App Policy Engine includes application execution unit to interface within an operating system of the mobile device . The example application execution unit also assigns process identifiers e.g. process IDs to each of the applications e.g. the applications APP within the mobile device . The example MAC module uses the process identifiers to grant and or restrict application access to device and or network interfaces of the mobile device .

Further the application execution unit may determine which applications may be executed on the mobile device. For example the App Policy Engine may receive an indication that an application is attempting to operate and or initialize. The application execution unit determines if the application is associated with a digital certificate and that indicates the application may be executed. If the digital certificate indicates the application may be executed the example application execution unit enables the application to operate e.g. execute on the mobile device .

To identify privileges of applications the example App Policy Engine includes a certificate processor . The example certificate processor requests to access for example the certificate stored on the mobile device . The certificate processor reads the certificate to determine if the associated application APP is authorized to be executed access device and or network interfaces access a VPN access a wireless network and or access a host service platform. In some instances the certificate processor identifies applications by a name included within a digital certificate and references the name to determine the corresponding application within the application layer . In other instances the certificate processor examines a digital certificate for any other identifying information e.g. file names application metadata application identifiers etc. to locate a corresponding application with the application layer .

After determining which applications are authorized to be executed access device and or network interfaces access a VPN access a wireless network and or access a host service platform the example certificate processor stores an identifier of the authorized applications to a database . The example certificate processor may create a separate group of authorized applications within the database for each device and or network interface. Additionally the certificate processor may group authorized applications within the database based on a relatively amount of granted privileges.

The certificate processor may also query the VPN client for process identifiers assigned to the applications and store the respective process identifiers with the identifiers of the authorized application to the database . In this manner the certificate processor maintains a group of applications that are authorized to be executed access device and or network interfaces access a VPN access a wireless network and or access a host service platform. The database may be implemented by Electronically Erasable Programmable Read Only Memory EEPROM Random Access Memory RAM Read Only Memory ROM and or any other type of memory.

In some examples the certificate processor may identify applications that are unauthorized to be executed access device and or network interfaces access a VPN access a wireless network and or access a host service platform. In these examples the certificate processor stores the process identifies of these applications to the database . Further the certificate processor may periodically query the VPN client and or a SIM card of the mobile device to determine if new and or updated versions of digital certificates are available. In other examples the VPN client may notify the certificate processor that new and or modified certificates have been received. In instances where digital certificate have been updated and or replaced the certificate processor updates the database with identifiers of authorized applications.

To provide the MAC module of with instructions specifying authorized applications the example App Policy Engine includes a policy processor . The example policy processor of accesses the database to identify privileges of applications. The example policy processor then configures the MAC module by providing the list of process identifiers that correspond to the authorized applications.

The example policy processor of the illustrated example may provide the MAC module with a list of authorized applications periodically upon a request to connect to a wireless network upon a request to execute upon a request to connect to a VPN and or host service platform upon an application accessing a wireless network upon powering of the mobile device upon updating of digital certificate s and or upon a request from the MAC module . In examples where the MAC module does not include a list of authorized applications the policy processor responds to queries from the MAC module asking an application is authorized to be executed and or access device and or network interfaces of the mobile device . In these examples the policy processor determines which applications are authorized by accessing the database and searching for privileges associated with process identifiers of the applications.

The example policy processor of communicatively couples the App Policy Engine to the MAC module . The example policy processor receives instructions including process identifiers corresponding to authorized applications and transmits the instructions to the MAC module . Further the policy processor may detect that a VPN tunnel has been established via for example the VPN client . Alternatively the MAC module may inform the policy processor that a VPN tunnel has been created. In response to the policy processor receiving an indication of a VPN tunnel the policy processor may transmit instructions to the MAC module providing a list of authorized applications.

In some examples the VPN client creates a VPN tunnel though the device OS platform to device and or network interfaces of the mobile device upon detecting and or receiving an indication that a user has selected to connect to a VPN and or host service platform. To create a VPN tunnel the VPN client may instruct the network tunnel to establish a VPN tunnel from the VPN client to a wireless hardware interface of the mobile device via the MAC module . The VPN client may also instruct the access controller to send instructions to the MAC module to identify authorized applications that can transmit and or receive communications via the VPN tunnel.

While the example App Policy Engine has been illustrated in one or more of the servers platforms interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any way. Further the example VPN client the example MAC module the example application execution unit the example certificate processor the example database the example policy processor and or more generally the example App Policy Engine may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example VPN client the example MAC module the example application execution unit the example certificate processor the example database the example policy processor and or more generally the example App Policy Engine could be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc.

When any apparatus claim of this patent is read to cover a purely software and or firmware implementation at least one of the example VPN client the example MAC module the example application execution unit the example certificate processor the example database and or the example policy processor are hereby expressly defined to include a computer readable medium such as a memory DVD CD etc. storing the software and or firmware. Further still the example App Policy Engine may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

Alternatively some or all of the example processes of may be implemented using any combination s of application specific integrated circuit s ASIC s programmable logic device s PLD s field programmable logic device s FPLD s discrete logic hardware firmware etc. Also some or all of the example processes of may be implemented manually or as any combination s of any of the foregoing techniques for example any combination of firmware software discrete logic and or hardware. Further although the example processes of are described with reference to the flow diagrams of other methods of implementing the processes of may be employed. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated sub divided or combined. Additionally any or all of the example processes of may be performed sequentially and or in parallel by for example separate processing threads processors devices discrete logic circuits etc.

The example process of controls privileges of mobile device applications via the App Policy Engine of . While the example process provides access control for an application the example process may provide access control for multiple applications attempting to access device and or network interfaces on a mobile device. Further the example process may provide access control for application s attempting to access multiple wireless networks VPNs and or host service platforms. Further while the example process provides access control the example process may provide execution control for any of the applications on a mobile device.

The example process of begins by installing an application on a mobile device e.g. the mobile device of block . The example App Policy Engine then processes a digital certificate associated with the application block . In many examples the application includes the digital certificate which specifies if the application is authorized to be executed on the mobile device and or specifies which device and or network interfaces the application is authorized to access. In other examples the digital certificate may be processed from for example a SIM card within the mobile device . In yet other example the App Policy Engine may request the digital certificate from a certificate authority and or a service provider prior to processing the certificate.

The example process of continues by the example application execution unit and or an operating system assigning a process identifier to the application block . The example certificate processor and or the policy processor then determines if the application is identified within a digital certificate as an authorized application block . The example certificate processor and or the policy processor may determine a relative amount of privileges granted to the application and identity which device and or network interfaces the application is authorized to access. If privileges for the application are specified within the certificate the example policy processor next configures for example the MAC module of block . To configure the MAC module the policy processor sends to the MAC module an instruction including the process identifier of the application to cause the MAC module to authorize and or grant privileges to the application to execute and or access device and or network interfaces. The privileges may also specify that the application may access a VPN a wireless network and or a host service platform. Additionally if the application is associated with a digital certificate the example certificate processor stores an identifier of the application and or the corresponding process identifier to the example database .

The example process of the illustrated examples continues by the VPN client receiving a request from the mobile device that the application is attempting to execute and or access a wireless network VPN and or host service platform e.g. access a device and or network interface block . The example MAC module uses the process identifier of the application to determine that the application has permission and or is authorized to access the specified interface block . The example network tunnel may also create a VPN tunnel from the VPN client to an appropriate wireless hardware interface of the mobile device . The example MAC module then enables the application to access the specified interface by allowing communications associated with the application to propagate through the VPN tunnel block . The example process then terminates. In other examples the example process may return to detecting that an application is installed on the mobile device block .

However if the example certificate processor and or the policy processor identifies that the application is not included within a digital certificate as an authorized application block the example process of continues by the policy processor configuring the MAC module to deny execution access and or interface access to the application block . In some examples the policy processor may instruct the MAC module to deny access by providing the process identifier of the application to the MAC module with an instruction to deny communications associated with the process identifier. In other examples the policy processor may deny access to an application by not sending the process identifier of the application to the MAC module .

The example process of the illustrated example continues by the VPN client receiving a request from the mobile device that the application is attempting to execute and or access a device and or network interface block . The example MAC module determines that the application is not authorized to execute and or access the specified interface block . The example MAC module then denies the application access to connect to specified interface and or to execute block . The example process then terminates. In other examples the example process may return to detecting that an application is installed on the mobile device block .

The processor platform P of the example of includes at least one general purpose programmable processor P. The processor P executes coded instructions P and or P present in main memory of the processor P e.g. within a RAM P and or a ROM P . The processor P may be any type of processing unit such as a processor core a processor and or a microcontroller. The processor P may execute among other things the example processes of and or B to implement the example methods and apparatus described herein.

The processor P is in communication with the main memory including a ROM P and or the RAM P via a bus P. The RAM P may be implemented by DRAM SDRAM and or any other type of RAM device and ROM may be implemented by flash memory and or any other desired type of memory device. Access to the memory P and the memory P may be controlled by a memory controller not shown . One or both of the example memories P and P may be used to implement the example database of .

The processor platform P also includes an interface circuit P. The interface circuit P may be implemented by any type of interface standard such as an external memory interface serial port general purpose input output etc. One or more input devices P and one or more output devices P are connected to the interface circuit P.

At least some of the above described example methods and or apparatus are implemented by one or more software and or firmware programs running on a computer processor. However dedicated hardware implementations including but not limited to application specific integrated circuits programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and or apparatus described herein either in whole or in part. Furthermore alternative software implementations including but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the example methods and or apparatus described herein.

To the extent the above specification describes example components and functions with reference to particular standards and protocols it is understood that the scope of this patent is not limited to such standards and protocols. For instance each of the standards for Internet and other packet switched network transmission e.g. Transmission Control Protocol TCP Internet Protocol IP User Datagram Protocol UDP IP HyperText Markup Language HTML HyperText Transfer Protocol HTTP represent examples of the current state of the art. Such standards are periodically superseded by faster or more efficient equivalents having the same general functionality. Accordingly replacement standards and protocols having the same functions are equivalents which are contemplated by this patent and are intended to be included within the scope of the accompanying claims.

Additionally although this patent discloses example systems including software or firmware executed on hardware it should be noted that such systems are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software. Accordingly while the above specification described example systems methods and articles of manufacture the examples are not the only way to implement such systems methods and articles of manufacture. Therefore although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

