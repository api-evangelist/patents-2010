---

title: Methods and systems for displaying, on a first machine, data associated with a drive of a second machine, without mapping the drive
abstract: Methods and systems for displaying data associated with a client drive of a client computing device in a virtualized desktop executing on a remote computing device without explicitly mapping the client drive onto the remote computing device are described. A first client agent executing on a client computing device establishes a user session with a remote computing device. The first client agent transmits data identifying the client drive of the client computing device to a second client agent executing on the remote computing device. The second client agent receives data associated with the client drive and generates a shell link using the received data associated with the client drive in the context of the user session. The second client agent displays the data associated with the client drive of the client computing device in a virtualized desktop executing on the remote computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667050&OS=08667050&RS=08667050
owner: Citrix Systems, Inc.
number: 08667050
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20101209
---
This application claims priority to U.S. Application Ser. No. 61 285 016 entitled Methods and Systems for Displaying on a First Machine Data Associated with a Drive of a Second Machine Without Mapping the Drive filed Dec. 9 2009 the entire disclosure of which is incorporated herein by reference in its entirety for any and all purposes.

The present disclosure relates to methods and systems for displaying data identifying characteristics of network drives. In particular the present disclosure relates to methods and systems for displaying on a remote computing device data associated with a drive of a client computing device without mapping the drive.

In conventional environments for integrating a display of remotely generated desktop environments with listings of locally provided storage devices data identifying characteristics of the locally provided storage devices is not incorporated into the remotely generated desktop environments. For example some conventional systems may map a network drive as a local volume but will not typically make data identifying characteristics of the mapped network drive available to the user of the desktop environment. In other conventional systems Uniform Naming Convention UNC Links to storage devices are provided. However these types of systems do not conventionally allow for the display of the data identifying characteristics of the storage device such as type name label icon device category disk size or available space. These systems may present an inconvenient and potentially counter intuitive end user experience especially if there are a variety of storage devices available e.g. USB drives CD ROM drives hard disk drives floppy drives network mapped drives shares combinations of server drives and remote client drives etc. .

In its broadest interpretation this disclosure describes methods and systems for enumerating client drives of a client computing device in a virtualized desktop executing on a remote computing device without explicitly mapping the client drive on the remote computing device. The present invention provides a user the ability to use a client computing device to access client drives on the client computing device through a virtualized desktop on a remote computing device. This approach allows users to access and view drive information such as type of drive availability of space on the drive capacity of the drive without explicitly mapping the drive to the remote computing device.

The present application is directed towards methods and systems for displaying on a remote computing device data associated with a drive of a client computing device without mapping the drive to the remote computing device.

In one aspect the present invention is related to displaying in a virtualized desktop executing on a remote computing device data associated with a client drive of a client computing device without explicitly mapping the client drive onto the remote computing device. A first client agent executing on a client computing device establishes a user session with a remote computing device. The first client agent transmits data identifying a client drive of the client computing device to a second client agent executing on the remote computing device. The second client agent receives data associated with the client drive of the client computing device. The second client agent generates a shell link using the received data associated with the client drive of the client computing device in the context of the user session. A shell link may comprise a data object that contains information used to access the client drive of the client computing device. The second client agent displays the data associated with the client drive of the client computing device in a virtualized desktop executing on the remote computing device.

In one embodiment the client drive further comprises a Universal Serial Bus USB flash drive. In a further embodiment the second client agent intercepts device notifications for the USB flash drive generated by the client computing device and modifies the USB flash drive shell link responsive to the intercepted device notifications. In one embodiment the data associated with the client drive of the client computing device further comprises disk space data for the client drive. In one embodiment the data associated with the client drive of the client computing device further comprises graphical data representative of the client drive. In one embodiment the data associated with the client drive of the client computing device further comprises a user assigned alphanumeric string forming a volume name of the client drive. In one embodiment the second client agent generates an identifier for the shell link. In a further embodiment the second client agent registers the identifier for the shell link in a registry provided by an operating system executing on the remote computing device. In one embodiment the second agent suppresses display of the client drive responsive to a security policy. In one embodiment the remote computing device displays the data associated with the client drive of the client computing device as a cursor hovers over the client drive displayed on the remote computing device.

In another aspect the present invention is related to a system for displaying in a virtualized desktop executing on a remote computing device data associated with a client drive of a client computing device without explicitly mapping the client drive onto the remote computing device. The system include a client computing device and a remote computing device. The client computing device includes a first client agent establishing a user session with a remote computing device and transmitting data identifying a client drive of the client computing device to a second client agent executing on the remote computing device. The remote computing device includes a second client agent receiving data associated with the client drive of the client computing device generating a shell link using the received data associated with the client drive of the client computing device in the context of the user session and displaying the data associated with the client drive of the client computing device in a virtualized desktop executing on the remote computing device. A shell link may include a data object that contains information used to access the client drive of the client computing device.

In one embodiment the client drive further comprises a Universal Serial Bus USB flash drive. In a further embodiment the second agent intercepts device notifications for the USB flash drive generated by the client computing device and modifies the USB flash drive shell link responsive to the intercepted device notifications. In one embodiment the data associated with the client drive of the client computing device further comprises disk space data for the client drive. In one embodiment the data associated with the client drive of the client computing device further comprises graphical data representative of the client drive. In one embodiment the data associated with the client drive of the client computing device further comprises a user assigned alphanumeric string forming a volume name of the client drive. In one embodiment the second client agent generates an identifier for the shell link. In a further embodiment the second client agent registers the identifier for the shell link in a registry provided by an operating system executing on the remote computing device. In one embodiment the second agent suppresses display of the client drive responsive to a security policy. In one embodiment the remote computing device displays the data associated with the client drive of the client computing device as a cursor hovers over the client drive displayed on the remote computing device.

The details of various embodiments of the invention are set forth in the accompanying drawings and description below.

Referring now to an embodiment of a network environment is depicted. In brief overview the network environment comprises one or more local machines also generally referred to as local machine s client s client node s client machine s client computer s client device s endpoint s or endpoint node s in communication with one or more remote machines also generally referred to as server s or remote machine s via one or more networks . In some embodiments a local machine has the capacity to function as both a client node seeking access to resources provided by a server and as a server providing access to hosted resources for other clients 

Although shows a network between the local machines and the remote machines the local machines and the remote machines may be on the same network . The network can be a local area network LAN such as a company Intranet a metropolitan area network MAN or a wide area network WAN such as the Internet or the World Wide Web. In some embodiments there are multiple networks between the local machines and the remote machines . In one of these embodiments a network not shown may be a private network and a network may be a public network. In another of these embodiments a network may be a private network and a network a public network. In still another embodiment networks and may both be private networks. In yet another embodiment networks and may both be public networks.

The network may be any type and or form of network and may include any of the following a point to point network a broadcast network a wide area network a local area network a telecommunications network a data communication network a computer network an ATM Asynchronous Transfer Mode network a SONET Synchronous Optical Network network a SDH Synchronous Digital Hierarchy network a wireless network and a wireline network. In some embodiments the network may comprise a wireless link such as an infrared channel or satellite band. The topology of the network may be a bus star or ring network topology. The network may be of any such network topology as known to those ordinarily skilled in the art capable of supporting the operations described herein. The network may comprise mobile telephone networks utilizing any protocol or protocols used to communicate among mobile devices including AMPS TDMA CDMA GSM GPRS or UMTS. In some embodiments different types of data may be transmitted via different protocols. In other embodiments the same types of data may be transmitted via different protocols.

In some embodiments the system may include multiple logically grouped remote machines . In one of these embodiments the logical group of remote machines may be referred to as a server farm. In another of these embodiments the remote machines may be geographically dispersed. In other embodiments a server farm may be administered as a single entity. In still other embodiments the server farm comprises a plurality of server farms. The remote machines within each server farm can be heterogeneous one or more of the remote machines can operate according to one type of operating system platform e.g. WINDOWS NT WINDOWS 2003 WINDOWS 2008 WINDOWS 7 or WINDOWS Server 2008R2 all of which are manufactured by Microsoft Corp. of Redmond Wash. while one or more of the other remote machines can operate on according to another type of operating system platform e.g. Unix or Linux .

The remote machines of each server farm do not need to be physically proximate to another remote machine in the same server farm. Thus the group of remote machines logically grouped as a server farm may be interconnected using a wide area network WAN connection or a metropolitan area network MAN connection. For example a server farm may include remote machines physically located in different continents or different regions of a continent country state city campus or room. Data transmission speeds between remote machines in the server farm can be increased if the remote machines are connected using a local area network LAN connection or some form of direct connection.

A remote machine may be a file server application server web server proxy server appliance network appliance gateway application gateway gateway server virtualization server deployment server SSL VPN server or firewall. In some embodiments a remote machine provides a remote authentication dial in user service and is referred to as a RADIUS server. In other embodiments a remote machine may have the capacity to function as either an application server or as a master application server. In still other embodiments a remote machine is a blade server. In yet other embodiments a remote machine executes a virtual machine providing to a user or client computer access to a computing environment.

In one embodiment a remote machine may include an Active Directory. The remote machine may be an application acceleration appliance. For embodiments in which the remote machine is an application acceleration appliance the remote machine may provide functionality including firewall functionality application firewall functionality or load balancing functionality. In some embodiments the remote machine comprises an appliance such as one of the line of appliances manufactured by the Citrix Application Networking Group of San Jose Calif. or Silver Peak Systems Inc. of Mountain View Calif. or of Riverbed Technology Inc. of San Francisco Calif. or of F5 Networks Inc. of Seattle Wash. or of Juniper Networks Inc. of Sunnyvale Calif.

In some embodiments a remote machine executes an application on behalf of a user of a local machine . In other embodiments a remote machine executes a virtual machine which provides an execution session within which applications execute on behalf of a user of a local machine . In one of these embodiments the execution session is a hosted desktop session. In another of these embodiments the execution session provides access to a computing environment which may comprise one or more of an application a plurality of applications a desktop application and a desktop session in which one or more applications may execute.

In some embodiments a local machine communicates with a remote machine . In one embodiment the local machine communicates directly with one of the remote machines in a server farm. In another embodiment the local machine executes a program neighborhood application to communicate with a remote machine in a server farm. In still another embodiment the remote machine provides the functionality of a master node. In some embodiments the local machine communicates with the remote machine in the server farm through a network . Over the network the local machine can for example request execution of various applications hosted by the remote machines in the server farm and receive output of the results of the application execution for display. In some embodiments only a master node provides the functionality required to identify and provide address information associated with a remote machine hosting a requested application.

In one embodiment the remote machine provides the functionality of a web server. In another embodiment the remote machine receives requests from the local machine forwards the requests to a second remote machine and responds to the request by the local machine with a response to the request from the remote machine . In still another embodiment the remote machine acquires an enumeration of applications available to the local machine and address information associated with a remote machine hosting an application identified by the enumeration of applications. In yet another embodiment the remote machine presents the response to the request to the local machine using a web interface. In one embodiment the local machine communicates directly with the remote machine to access the identified application. In another embodiment the local machine receives output data such as display data generated by an execution of the identified application on the remote machine .

In some embodiments the remote machine or a server farm may be running one or more applications such as an application providing a thin client computing or remote display presentation application. In one embodiment the remote machine or server farm executes as an application any portion of the CITRIX ACCESS SUITE by Citrix Systems Inc. such as the METAFRAME or CITRIX PRESENTATION SERVER products any of the following products manufactured by Citrix Systems Inc. CITRIX XENAPP CITRIX XENDESKTOP CITRIX ACCESS GATEWAY and or any of the MICROSOFT WINDOWS Terminal Services manufactured by the Microsoft Corporation. In another embodiment the application is an ICA client developed by Citrix Systems Inc. of Fort Lauderdale Fla. In still another embodiment the remote machine may run an application which for example may be an application server providing email services such as MICROSOFT EXCHANGE manufactured by the Microsoft Corporation of Redmond Wash. a web or Internet server or a desktop sharing server or a collaboration server. In yet another embodiment any of the applications may comprise any type of hosted service or products such as GOTOMEETING provided by Citrix Online Division Inc. of Santa Barbara Calif. WEBEX provided by WebEx Inc. of Santa Clara Calif. or Microsoft Office LIVE MEETING provided by Microsoft Corporation of Redmond Wash.

A local machine may execute operate or otherwise provide an application which can be any type and or form of software program or executable instructions such as any type and or form of web browser web based client client server application a thin client computing client an ActiveX control or a Java applet or any other type and or form of executable instructions capable of executing on local machine . In some embodiments the application may be a server based or a remote based application executed on behalf of the local machine on a remote machine . In other embodiments the remote machine may display output to the local machine using any thin client protocol presentation layer protocol or remote display protocol such as the Independent Computing Architecture ICA protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. the Remote Desktop Protocol RDP manufactured by the Microsoft Corporation of Redmond Wash. the X11 protocol the Virtual Network Computing VNC protocol manufactured by AT T Bell Labs the SPICE protocol manufactured by Qumranet Inc. of Sunnyvale Calif. USA and of Raanana Israel the Net2Display protocol manufactured by VESA of Milpitas Calif. the PC over IP protocol manufactured by Teradici Corporation of Burnaby B.C. the TCX protocol manufactured by Wyse Technology Inc. of San Jose Calif. the THINC protocol developed by Columbia University in the City of New York of New York N.Y. or the Virtual D protocols manufactured by Desktone Inc. of Chelmsford Mass. The application can use any type of protocol and it can be for example an HTTP client an FTP client an Oscar client or a Telnet client. In still other embodiments the application comprises any type of software related to voice over Internet protocol VoIP communications such as a soft IP telephone. In further embodiments the application comprises any application related to real time data communications such as applications for streaming video and or audio.

The local machine and remote machine may be deployed as and or executed on any type and form of computing device such as a computer network device or appliance capable of communicating on any type and form of network and performing the operations described herein. depict block diagrams of a computing device useful for practicing an embodiment of the local machine or a remote machine . As shown in each computing device includes a central processing unit and a main memory unit . As shown in a computing device may include a storage device an installation device a network interface an I O controller display devices a keyboard and a pointing device such as a mouse. The storage device may include without limitation an operating system software and a client agent . As shown in each computing device may also include additional optional elements such as a memory port a bridge one or more input output devices generally referred to using reference numeral and a cache memory in communication with the central processing unit .

The central processing unit is any logic circuitry that responds to and processes instructions fetched from the main memory unit . In many embodiments the central processing unit is provided by a microprocessor unit such as those manufactured by Intel Corporation of Mountain View Calif. those manufactured by Motorola Corporation of Schaumburg Ill. those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor those manufactured by International Business Machines of White Plains N.Y. or those manufactured by Advanced Micro Devices of Sunnyvale Calif. The computing device may be based on any of these processors or any other processor capable of operating as described herein.

Main memory unit may be one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor such as Static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDEC SRAM PC100 SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM or Ferroelectric RAM FRAM . The main memory may be based on any of the above described memory chips or any other available memory chips capable of operating as described herein. In the embodiment shown in the processor communicates with main memory via a system bus described in more detail below . depicts an embodiment of a computing device in which the processor communicates directly with main memory via a memory port . For example in the main memory may be DRDRAM.

A wide variety of I O devices may be present in the computing device . Input devices include keyboards mice trackpads trackballs microphones and drawing tablets. Output devices include video displays speakers inkjet printers laser printers and dye sublimation printers. The I O devices may be controlled by an I O controller as shown in . The I O controller may control one or more I O devices such as a keyboard and a pointing device e.g. a mouse or optical pen. Furthermore an I O device may also provide storage and or an installation medium for the computing device . In still other embodiments the computing device may provide USB connections not shown to receive handheld USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. of Los Alamitos Calif.

Referring again to the computing device may support any suitable installation device such as a floppy disk drive for receiving floppy disks such as 3.5 inch 5.25 inch disks or ZIP disks a CD ROM drive a CD R RW drive a DVD ROM drive tape drives of various formats USB device hard drive or any other device suitable for installing software and programs. The computing device may further comprise a storage device such as one or more hard disk drives or redundant arrays of independent disks for storing an operating system and other related software and for storing application software programs such as any program related to the client agent . Optionally any of the installation devices could also be used as the storage device. Additionally the operating system and the software can be run from a bootable medium for example a bootable CD such as KNOPPIX a bootable CD for GNU Linux that is available as a GNU Linux distribution from knoppix.net.

Furthermore the computing device may include a network interface to interface to the network through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 SNA DECNET broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET wireless connections or some combination of any or all of the above. Connections can be established using a variety of communication protocols e.g. TCP IP IPX SPX NetBIOS Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI RS232 IEEE 802.11 IEEE 802.11a IEEE 802.11b IEEE 802.11g CDMA GSM WiMax and direct asynchronous connections . In one embodiment the computing device communicates with other computing devices via any type and or form of gateway or tunneling protocol such as Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. The network interface may comprise a built in network adapter network interface card PCMCIA network card card bus network adapter wireless network adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein.

In some embodiments the computing device may comprise or be connected to multiple display devices which each may be of the same or different type and or form. As such any of the I O devices and or the I O controller may comprise any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection and use of multiple display devices by the computing device . For example the computing device may include any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . In one embodiment a video adapter may comprise multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple displays . In other embodiments one or more of the display devices may be provided by one or more other computing devices such as computing devices and connected to the computing device for example via a network. These embodiments may include any type of software designed and constructed to use another computer s display device as a second display device for the computing device . One ordinarily skilled in the art will recognize and appreciate the various ways and embodiments that a computing device may be configured to have multiple display devices 

In further embodiments an I O device may be a bridge between the system bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire 800 bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus.

A computing device of the sort depicted in typically operates under the control of operating systems which control scheduling of tasks and access to system resources. The computing device can be running any operating system such as any of the versions of the MICROSOFT WINDOWS operating systems the different releases of the Unix and Linux operating systems any version of the MAC OS for Macintosh computers any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein. Typical operating systems include but are not limited to WINDOWS 3.x WINDOWS 95 WINDOWS 98 WINDOWS 2000 WINDOWS NT 3.51 WINDOWS NT 4.0 WINDOWS 7 WINDOWS CE WINDOWS XP and WINDOWS VISTA all of which are manufactured by Microsoft Corporation of Redmond Wash. MAC OS manufactured by Apple Inc. of Cupertino Calif. OS 2 manufactured by International Business Machines of Armonk N.Y. and Linux a freely available operating system distributed by Caldera Corp. of Salt Lake City Utah or any type and or form of a Unix operating system among others.

The computing device can be any workstation desktop computer laptop or notebook computer server handheld computer mobile telephone or other portable telecommunication device media playing device a gaming system mobile computing device or any other type and or form of computing telecommunications or media device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein. For example the computing device may comprise a device of the IPOD family of devices manufactured by Apple Inc. of Cupertino Calif. a PLAYSTATION 2 PLAYSTATION 3 or PERSONAL PLAYSTATION PORTABLE PSP device manufactured by the Sony Corporation of Tokyo Japan a NINTENDO DS NINTENDO GAMEBOY NINTENDO GAMEBOY ADVANCED or NINTENDO REVOLUTION device manufactured by Nintendo Co. Ltd. of Kyoto Japan or an XBOX or XBOX 360 device manufactured by the Microsoft Corporation of Redmond Wash.

In some embodiments the computing device may have different processors operating systems and input devices consistent with the device. For example in one embodiment the computing device is a TREO 180 270 600 650 680 700p 700w wx 750 755p 800w Centro or Pro smart phone manufactured by Palm Inc. In some of these embodiments the TREO smart phone is operated under the control of the PalmOS operating system and includes a stylus input device as well as a five way navigator device.

In other embodiments the computing device is a mobile device such as a JAVA enabled cellular telephone or personal digital assistant PDA such as the i55sr i58sr i85s i88s i90c i95c1 i335 i365 i570 I576 i580 i615 i760 i836 i850 i870 i880 i920 i930 ic502 ic602 ic902 i776 or the im1100 all of which are manufactured by Motorola Corp. of Schaumburg Ill. the 6035 or the 7135 manufactured by Kyocera of Kyoto Japan or the i300 or i330 manufactured by Samsung Electronics Co. Ltd. of Seoul Korea. In some embodiments the computing device is a mobile device manufactured by Nokia of Finland or by Sony Ericsson Mobile Communications AB of Lund Sweden.

In still other embodiments the computing device is a Blackberry handheld or smart phone such as the devices manufactured by Research In Motion Limited including the Blackberry 7100 series 8700 series 7700 series 7200 series the Blackberry 7520 the Blackberry PEARL 8100 the 8700 series the 8800 series the Blackberry Storm Blackberry Bold Blackberry Curve 8900 and the Blackberry Pearl Flip. In yet other embodiments the computing device is a smart phone Pocket PC Pocket PC Phone or other handheld mobile device supporting Microsoft Windows Mobile Software. Moreover the computing device can be any workstation desktop computer laptop or notebook computer server handheld computer mobile telephone any other computer or other form of computing or telecommunications device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein.

In some embodiments the computing device is a digital audio player. In one of these embodiments the computing device is a digital audio player such as the Apple IPOD IPOD Touch IPOD NANO and IPOD SHUFFLE lines of devices manufactured by Apple Inc. of Cupertino Calif. In another of these embodiments the digital audio player may function as both a portable media player and as a mass storage device. In other embodiments the computing device is a digital audio player such as the DigitalAudioPlayer Select MP3 players manufactured by Samsung Electronics America of Ridgefield Park N.J. or the Motorola m500 or m25 Digital Audio Players manufactured by Motorola Inc. of Schaumburg Ill. In still other embodiments the computing device is a portable media player such as the Zen Vision W the Zen Vision series the Zen Portable Media Center devices or the Digital MP3 line of MP3 players manufactured by Creative Technologies Ltd. In yet other embodiments the computing device is a portable media player or digital audio player supporting file formats including but not limited to MP3 WAV M4A AAC WMA Protected AAC AIFF Audible audiobook Apple Lossless audio file formats and .mov .m4v and .mp4 MPEG 4 H.264 MPEG 4 AVC video file formats.

In some embodiments the computing device comprises a combination of devices such as a mobile phone combined with a digital audio player or portable media player. In one of these embodiments the computing device is a Motorola RAZR or Motorola ROKR line of combination digital audio players and mobile phones. In another of these embodiments the computing device is a device in the iPhone line of smartphones manufactured by Apple Inc. of Cupertino Calif.

In one embodiment a computing device may request resources from a remote machine while providing the functionality of a remote machine to a client . In such an embodiment the computing device may be referred to as a client with respect to data received from the remote machine which may be referred to as a server and the computing device may be referred to as a server with respect to the second client . In another embodiment the client may request resources from the remote machine on behalf of a user of the client .

As shown in the computing device may comprise multiple processors and may provide functionality for simultaneous execution of instructions or for simultaneous execution of one instruction on more than one piece of data. In some embodiments the computing device may comprise a parallel processor with one or more cores. In one of these embodiments the computing device is a shared memory parallel device with multiple processors and or multiple processor cores accessing all available memory as a single global address space. In another of these embodiments the computing device is a distributed memory parallel device with multiple processors each accessing local memory only. In still another of these embodiments the computing device has both some memory that is shared and some memory that can only be accessed by particular processors or subsets of processors. In still even another of these embodiments the computing device such as a multicore microprocessor combines two or more independent processors into a single package often a single integrated circuit IC . In yet another of these embodiments the computing device includes a chip having a CELL BROADBAND ENGINE architecture and including a Power processor element and a plurality of synergistic processing elements the Power processor element and the plurality of synergistic processing elements linked together by an internal high speed bus which may be referred to as an element interconnect bus.

In some embodiments the processors provide functionality for execution of a single instruction simultaneously on multiple pieces of data SIMD . In other embodiments the processors provide functionality for execution of multiple instructions simultaneously on multiple pieces of data MIMD . In still other embodiments the processor may use any combination of SIMD and MIMD cores in a single device.

In some embodiments the computing device may comprise a graphics processing unit. In one of these embodiments depicted in the computing device includes at least one central processing unit and at least one graphics processing unit. In another of these embodiments the computing device includes at least one parallel processing unit and at least one graphics processing unit. In still another of these embodiments the computing device includes a plurality of processing units of any type one of the plurality of processing units comprising a graphics processing unit.

In one embodiment a resource may be a program an application a document a file a plurality of applications a plurality of files an executable program file a desktop environment a computing environment or other resource made available to a user of the local computing device . The resource may be delivered to the local computing device via a plurality of access methods including but not limited to conventional installation directly on the local computing device delivery to the local computing device via a method for application streaming delivery to the local computing device of output data generated by an execution of the resource on a third computing device and communicated to the local computing device via a presentation layer protocol delivery to the local computing device of output data generated by an execution of the resource via a virtual machine executing on a remote computing device or execution from a removable storage device connected to the local computing device such as a USB device or via a virtual machine executing on the local computing device and generating output data. In some embodiments the local computing device transmits output data generated by the execution of the resource to another client computing device

In some embodiments a user of a local computing device connects to a remote computing device and views a display on the local computing device of a local version of a remote desktop environment comprising a plurality of data objects generated on the remote computing device . In one of these embodiments at least one resource is provided to the user by the remote computing device or by a second remote computing device and displayed in the remote desktop environment. However there may be resources made available to the user by the local computing device . For example the local computing device may provide access to a local disk drive a drive available over a network a removable storage device e.g. floppy disks CD DVDs removable disks such as USB drive etc. or other device and the user may wish to access that device to store or retrieve data for use in conjunction with a resource executed on behalf of the user by the remote computing device . In another of these embodiments a user may make requests for retrieving data from or storing data on a device by interacting with the remote desktop environment generated by the remote computing device .

Referring now to a block diagram depicts one embodiment of a system for displaying on a remote computing device in a networked computing environment data associated with a drive of a client computing device in the networked computing environment without mapping the drive on the remote computing device . In brief overview the system includes a second client agent executing on a remote computing device and a first client agent executing on a client computing device . The second client agent receives data identifying a characteristic of a drive provided by the client computing device . The second client agent intercepts a request by an operating system executing on the remote computing device for an enumeration of drives provided by the remote computing device . The second client agent directs a display of the received data provided by the client computing device in the enumeration of drives provided by the remote computing device without mapping the drive responsive to the intercepted request. In some embodiments data identifying a characteristic of a drive may include without limitation a user designated name or label including without limitation user designated drive label Local Disk CD DVD Drive Network Drive and user designated drive letter C D E etc. a type of the drive hard drive removable device CD ROM DVD floppy drive network mapped drive client share etc. device category graphical data representing the drive in a desktop environment e.g. an icon and a size of the disk including for example total size of the disk and size of available space on the disk . In one of these embodiments a type of a drive is indicated via a drive label.

Referring still to and in greater detail the second client agent executes on the remote computing device . In one embodiment the remote computing device is a computing device as described above in connection with . In some embodiments the second client agent includes a receiver for receiving from the first client agent executing on the client computing device data identifying a characteristic of a drive provided by the client computing device . In one of these embodiments for example the second client agent includes a receiver provided as a dynamically linked library. In still another of these embodiments the second client agent includes a receiver provided as a network redirector file system driver. In still even another of these embodiments the second client agent is a presentation layer protocol agent communicating with the first client agent according to a presentation layer protocol for example the second client agent and the first client agent may communicate according to any of the presentation layer protocols described above in connection with . In other embodiments the second client agent is referred to as a network provider component and performs drive enumeration mapping and unmapping of drives and creation and removal of shell links identifying a drive without the use of mapping.

In some embodiments the second client agent is in communication with a shell executing on the remote computing device . The shell is software providing a user interface to the user of a computing device. In one embodiment a shell may be supplemented or replaced with a third party shell. In MICROSOFT WINDOWS the default shell is EXPLORER which determines the configuration of the desktop e.g. the task bar notification area start menu etc. .

In some embodiments the first client agent executes on the local computing device . In one embodiment the local computing device is a computing device as described above in connection with . In another embodiment the first client agent is part of a presentation layer protocol agent executing on the local computing device . In still another embodiment the first client agent is in communication with a presentation layer protocol agent.

In some embodiments the first client agent is in communication with a shell executing on the client computing device . The shell is software providing a user interface to the user of a computing device. In one embodiment a shell may be supplemented or replaced with a third party shell. In MICROSOFT WINDOWS the default shell is EXPLORER which determines the configuration of the desktop e.g. the task bar notification area start menu etc. .

In some embodiments a drive is a storage device as described above in connection with . In other embodiments a drive is a removable storage device such as a USB drive. In still other embodiments a drive is a media device such as a disk drive or tape drive. In further embodiments and by way of example the drive may be a storage device in a storage area network.

In some embodiments the drive is a component external to a machine . In one of these embodiments the drive is a machine such as a network accessible drive. In other embodiments the drive is a flash memory data storage device. In further embodiments the drive is connected to a machine either physically including both external devices connected to the machine and internal devices embedded into the machine or wirelessly.

In some embodiments the drive is a client share. In one of these embodiments the client share acts as a shortcut to a drive on a third machine . In another of these embodiments the client share acts as a security label. In still another of these embodiments there are multiple client shares assigned different levels of permissions. In yet another of these embodiments some users of the machine are permitted to access the client share while others are not. In another of these embodiments the drive includes client directories and subdirectories local client shares and other shares accessible to the client. In still another of these embodiments the system includes a user interface allowing an administrator to control what types of shares subdirectories or other drives are to be considered when generating by the remote computing device a display of data associated with a drive of a client computing device .

Referring now to a flow diagram depicts one embodiment of a method for displaying on a remote computing device in a networked computing environment data associated with a drive of a client computing device in the networked computing environment without mapping the drive on the remote computing device. In brief overview the method includes receiving by a second client agent executing on a remote computing device data identifying a characteristic of a drive provided by a client computing device . The method includes intercepting by the second client agent a request by an operating system executing on the remote computing device for an enumeration of drives provided by the remote computing device . The method includes directing by the second client agent a display of the received data provided by the client computing device in the enumeration of drives provided by the remote computing device without mapping the drive responsive to the intercepted request .

Referring still to and in greater detail a second client agent executing on a remote computing device receives data identifying a characteristic of a drive provided by a client computing device . In one embodiment the second client agent receives the data from the first client agent which executes on the client computing device . In another embodiment the second client agent receives the data across a virtual channel established between the second client agent and the first client agent as part of a communication session established according to a presentation layer protocol.

In some embodiments the second client agent transmits a request for the data to the first client agent . In one of these embodiments the second client agent initiates a data retrieval request for example when the second client agent receives an indication that a new device has connected to the client computing device or when the second client agent receives an indication that a user has logged in to the client computing device . In other embodiments the first client agent transmits the data to the second client agent without first receiving a request for the transmission. In one embodiment the first client agent collects the requested data and transmits the collected data to the second client agent . In another embodiment the first client agent accesses an application programming interface API to retrieve the data. For example and without limitation the first client agent may retrieve the data by using an API such as GetLogicalDrives GetDriveType DeviceIoControl GetVolumeInformation GetVolumeInformationByHandle or GetDiskFreeSpace . In still another embodiment the first client agent may retrieve the data for a device at a time when the device is first connected to the client computing device e.g. in Plug and Play scenarios in such an embodiment the first client agent may use an API such as by way of example a RegisterDeviceNotification API to receive notifications regarding the arrival or removal of the device from a component of the operating system executing on the client computing device e.g. an OS Plug and Play Manager . In still another embodiment and without limitation the first client agent may generate a command according to a MICROSOFT WINDOWS API such as for example and without limitation GetSystemMetrics WTSQuerySessionInformation GetCurrentProcessId or ProcessIdToSessionId transmit the command to an operating system executing on the client computing device and transmit a response received from the operating system to the second client agent .

In some embodiments when retrieving data for a UNC mapped drive the first client agent accesses a registry provided by an operating system executing on the client computing device . In one of these embodiments the first client agent identifies within the registry a shell link that identifies a remote drive in the context of the current user s session e.g. HKEY CURRENT USER Software Microsoft Windows CurrentVersion Explorer SessionInfo MyComputer Namespace where Session ID identifies the user Terminal Services session and GUID is a unique identifier for the shell link the first client agent may then retrieve additional detail associated with the identified shell link and identifying a name or label for the drive e.g. by accessing a registry key such as HKEY CLASSES ROOT CLSID and retrieving a key value identifying the mapped drive from the key or a sub key . In another of these embodiments one or more registry keys associated with the GUID identify additional data such as total disk size available disk space default icons etc. In other embodiments the first client agent uses an API to retrieve a listing of one or more drives provided by the client computing device for example the first client agent may access a WNetEnumResource API or WNetGetConnection API.

In some embodiments the first client agent transmits graphical data representative of the drive e.g. an icon to the second client agent . In other embodiments the second client agent directs the generation of graphical data representing the drive responsive to the identification of a drive type received from the first client agent .

The second client agent intercepts a request by an operating system executing on the remote computing device for an enumeration of drives provided by the remote computing device . In some embodiments the second client agent intercepts a request by the operating system for a display of a characteristic of one of the enumerated drives. In one of these embodiments the second client agent intercepts enumeration mapping and I O redirection requests.

In some embodiments the second client agent receives from the first client agent an indication that a user of the client computing device has generated a request for data identifying a characteristic of an enumerated drive. In one of these embodiments by way of example a user may have interacted with a local display of a remotely generated desktop environment to request an enumeration of drives provided by the remote computing device and provided by the client computing device or to request a characteristic such as name type or drive size of the drive . In another of these embodiments the second client agent transmits the indication to the operating system for processing. In still another of these embodiments the operating system generates a command for retrieving the requested data from the remote computing device for example a query for a drive size of a drive . In yet another of these embodiments the second client agent intercepts the generated command and determines that a response to the command should include data identifying a characteristic of the drive provided by the client computing device .

The second client agent directs a display of the received data provided by the client computing device in the enumeration of drives provided by the remote computing device without mapping the drive responsive to the intercepted request . In one embodiment the second client agent makes a determination to display the received data without mapping the identified drive . In another embodiment the second client agent associates at least one registry entry e.g. a Shell Link with the received data the registry entry stored within an operating system environment dedicated to a session with the client computing device . In still another embodiment the associated registry entry represents the drive . In still even another embodiment the shell on the remote computing device such as WINDOWS Explorer acting as the default Shell and on behalf of the user reads these links and presents them in a user interface element enumerating drives available to a user of the client computing device .

In one embodiment a user of a client computing device generates a request for data identifying disk size of a drive by using a pointing device e.g. a mouse to hover a cursor over an icon shown in a local display of a remotely generated desktop environment and representing the drive the first client agent intercepts the generated request and transmits the intercepted request to the second client agent which forwards the intercepted request to the operating system executing on the remote computing device for processing as part of the processing of the intercepted request the second client agent may communicate with the operating system to direct the display of data identifying a characteristic of a drive provided by a client computing device . In another embodiment the second client agent directs a display of data identifying a total amount of space provided by the drive . In still another embodiment the second client agent directs a display of data identifying an amount of space available on the drive

In one embodiment the second client agent directs the display of data identifying a user assigned alphanumeric string forming a volume name of the drive . In another embodiment by way of example an end user of the client computing device has assigned a volume name as opposed to a drive letter and uses the assigned volume name to distinguish the drive from other drives such as a drive provided by the remote computing device or other drives the second client agent then directs the display of the volume name in a format such as Drive Letter on Client computing device on Name of Client computing device e.g. C on MachineName in enumerations of drives provided by both the remote computing device and the client computing device .

In some embodiments the second client agent receives from the first client agent a drive letter for a drive provided by the machine and a machine name for the machine . In one of these embodiments the second client agent generates a symbolic link such as a UNC link in the format of MachineName DriveLetter. In another of these embodiments the second client agent generates a symbolic link such as a UNC link in the format of Client DriveLetter. In another of these embodiments the second client agent directs the display of the UNC link in the remotely generated desktop environment rather than directing the operating system to mount the drive provided by the client computing device . In still another of these embodiments the second client agent directs the display of the UNC link in the remotely generated desktop environment in addition to directing the operating system to mount the drive provided by the client computing device .

In one embodiment the second client agent receives with the data identifying the characteristic of the drive graphical data representative of the drive for example the second client agent may receive an icon representing the drive . In another embodiment the second client agent directs the display of the received icon in the enumeration of drives provided by both the remote computing device and the client computing device . In still another embodiment the second client agent directs the display of different icons for different types of drives . For example the second client agent may receive a first icon representative of a drive provided by the client computing device and a second icon representative of a second drive provided by the client computing device a user may use a display of different icons for different drives to determine a type of the drive e.g. USB CD ROM hard drive etc. . In other embodiments the second client agent receives from the first client agent an identification of a type of drive of the drive and identifies graphical data stored by the remote computing device for use in generating a representation of the drive

In some embodiments the second client agent intercepts the request by the operating system executing on the remote computing device for the enumeration of drives provided by the remote computing device and determines to prevent a display at least one drive provided by the remote computing device . In one of these embodiments by way of example the remote computing device is forwarding data from the client computing device to a third machine in such an embodiment there may be security or other policy reasons for not displaying drives for machines that are intermediaries between a machine generating a remote desktop environment and the machine from which an end user accesses the remote desktop environment.

In other embodiments the second client agent intercepts the request by the operating system executing on the remote computing device for the enumeration of drives provided by the remote computing device and determines not to display data identifying characteristics of a drive provided by the client computing device . In one of these embodiments by way of example due to security or other policy reasons a user of the client computing device is prevented from accessing any hardware or software resources of the client computing device and is only allowed to access resources provided by the remote computing device .

Referring now to a flow diagram depicts another embodiment of a method for displaying data associated with a drive of a client computing device in a virtualized desktop executing on a remote computing device in a networked computing environment without explicitly mapping the drive . In brief overview the method includes a client agent executing on a client computing device establishing a user session with a remote computing device step . At step the client agent transmits data identifying a client drive of the client computing device to a client agent executing on the remote computing device . At step the client agent executing on the remote computing device receives data associated with the client drive of the client computing device . At step the client agent executing on the remote computing device generates a shell link in the context of the user session using the received data associated with the client drive . At step the client agent executing on the remote computing device displays the data associated with the client drive of the client computing device in the virtualized desktop executing on the remote computing device .

Referring still to and in greater detail at step a client agent executing on a client computing device establishes a user session with a remote computing device . The client agent may establish a user session with the remote computing device using any known methods in the art or methods of connection and communication as described herein. The user has access to a virtualized desktop executing on the remote computing device . Different environments provided by the remote computing device provide different end user experience and security requirements influencing availability and visibility of native desktop environment drives and remote client drives. For instance in one environment the client computing device does not display the local client desktop at all and directly connects to a full screen remote desktop on a virtual desktop infrastructure VDI . In some embodiments data stored locally may need to be accessed and can most easily be done through the features of the present disclosure in the virtualized desktop environment executing on the remote computing device .

At step the client agent transmits data identifying a client drive of the client computing device to a client agent executing on the remote computing device . In some embodiments the first client agent transmits data identifying the client drive upon establishing a connection with the remote computing device . In some embodiments the first client agent transmits data identifying all client drives . In other embodiments the first client agent transmits data identifying only pre determined client drives of the client computing device . In some embodiments the client drives are predetermined at the time of connection by the user. In other embodiments the client drives are predetermined by an administrator. In some embodiments the first client agent transmits data identifying one or more client drives to the remote computing device after receiving a request from the remote computing device . In some embodiments the client agent ignores suppresses or otherwise omits transmitting data associated with a client drive responsive to a policy. In some embodiments the omissions is for security purposes ensuring that sensitive information stored in an identified client drive is not visible to the remote computing device . This is especially important in the event that multiple users have access to the remote computing device or otherwise share the resources utilized by the remote computing device .

In some embodiments the first agent transmits data identifying the client drive upon identification of the client drive through a device detection mechanism such as Plug and Play. In some embodiments the device detection mechanism may be implemented by means described in U.S. patent application Ser. No. 10 711 647 entitled System and Method for Event Detection and Re Direction Over a Network Using a Presentation Level Protocol filed on Sep. 29 2004 the entire disclosure of which is incorporated herein by reference in its entirety for any and all purposes. In some embodiments where the client drive is a removable drive such as a Universal Serial Bus USB flash drive the first client agent communicates with the operating system of the client computing device and registers to receive device notifications e.g. device arrival and removal from the client computing device and receives device change notifications which may contain information about the USB device. In some embodiments the first client agent transmits the device notifications to the second client agent which generates a new shell link or removes an existing shell link in the virtualized desktop for the removable client drive responsive to receiving messages from device detection mechanisms. In other embodiments the second client agent generates a new shell link or removes an existing shell link for the removable client device only after receiving explicit instructions from the user.

At step the client agent executing on the remote computing device receives data associated with the client drive of the client computing device . In some embodiments the first client agent transmits all data associated with the client device to the second client agent . In some embodiments the first client agent transmits minimal data associated with the client device and the second client agent uses the received data to calculate statistics and other information pertaining to the client drive . In some embodiments the first client agent transmits graphical data representative of the client drive . Such graphical data may include icons identifying or representing the client drive type such as removable disk CD ROM and hard drive. In some embodiments the data associated with the client drive may include a user assigned alphanumeric string forming a volume name of the client drive.

At step the client agent executing on the remote computing device generates a shell link in the context of the user session using the received data associated with the client drive. In some embodiments a shell link comprises a data object that contains information used to access the client drive of the client computing device. In other embodiments a shell link is data object that contains information used to access another object in the shell s namespace. In some embodiments the second client agent generates an identifier for the shell link and adds the identifier to the registry of the operating system of the virtualized desktop. In some embodiments the identifier is known as a Globally Unique Identifier or GUID. Using a GUID ensures that any shell links are uniquely identified regardless of the number of client or remote computing devices involved or included in the system. In some embodiments the shell links are processed by the operating system of the virtualized desktop executing on the remote computing device. The Windows shell i.e. Explorer executing in the context of the virtualized desktop on the remote computing device displays the client drive of the client computing device along with any local or network drives associated with the virtualized desktop. When a user selects a displayed shell link the Windows shell handles the redirection to the corresponding client target drive as the drive is explicitly not mapped in the virtualized desktop environment. When a user hovers a cursor over a displayed shell link the Windows shell displays the data associated with the corresponding client drive on the client computing device. The information that is displayed when a cursor hovers over a displayed shell link may be determined by the user. In some embodiments the information displayed is pre determined either at the time of manufacture or by an administrator of the system. In still some embodiments different types of information may be displayed responsive to right clicking or time thresholds set for the shell link.

At step the client agent executing on the remote computing device displays the data associated with the client drive of the client computing device in a virtualized desktop executing on the remote computing device. In some embodiments only the data associated with the client drive may be displayed by the remote computing device. In other embodiments the data associated with the client drive may be displayed by the remote computing device with an indication that it is an enumerated or unmapped drive accessible to the user.

Referring now to a screen shot depicts an example of a system in which the second client agent directs the display of data identifying characteristics of a drive provided by a machine . As shown in a volume name D on GEORGY DEV1 is displayed with an icon representing a drive . also depicts an embodiment in which a type of drive CD DVD Drive is listed with the graphical representation of the drive

Referring now to a screen shot depicts another example of a system in which the second client agent directs the display of data identifying characteristics of a drive provided by a machine . In some embodiments and as shown in when an end user of the client computing device uses a pointing device such as a mouse to hover a cursor over the representation of the drive additional data such as the amount of space available on or a total disk size of the drive may be displayed.

Referring now to a screen shot depicting an embodiment of a system in which data identifying a characteristic of a drive of a client computing device in a networked computing environment is depicted in an enumeration of drives on the remote computing device without mapping the drive on the remote computing device. As shown in the system has not mapped the drive to the remote computing device as a local drive this is evidenced by the designation of the drive as a remote drive without a corresponding local drive.

In some embodiments implementation of the methods and systems described herein provides a seamless experience to a user of hardware and software provided by a plurality of networked machines. For example rather than mapping the drive to the remote computing device and having the remote computing device assign the mapped drive a drive letter based upon letters available to the remote computing device the methods and systems described herein provide functionality for providing a display in a remotely generated desktop of data identifying characteristics of the drive that improve the end user experience.

It should be understood that the systems described above may provide multiple ones of any or each of those components and these components may be provided on either a standalone machine or in some embodiments on multiple machines in a distributed system. The systems and methods described above may be implemented as a method apparatus or article of manufacture using programming and or engineering techniques to produce software firmware hardware or any combination thereof. In addition the systems and methods described above may be provided as one or more computer readable programs embodied on or in one or more articles of manufacture. The term article of manufacture as used herein is intended to encompass code or logic accessible from and embedded in one or more computer readable devices firmware programmable logic memory devices e.g. EEPROMs ROMs PROMs RAMs SRAMs etc. hardware e.g. integrated circuit chip Field Programmable Gate Array FPGA Application Specific Integrated Circuit ASIC etc. electronic devices a computer readable non volatile storage unit e.g. CD ROM floppy disk hard disk drive etc. . The article of manufacture may be accessible from a file server providing access to the computer readable programs via a network transmission line wireless transmission media signals propagating through space radio waves infrared signals etc. The article of manufacture may be a flash memory card or a magnetic tape. The article of manufacture includes hardware logic as well as software or programmable code embedded in a computer readable medium that is executed by a processor. In general the computer readable programs may be implemented in any programming language such as LISP PERL C C C PROLOG or in any byte code language such as JAVA. The software programs may be stored on or in one or more articles of manufacture as object code.

Having described certain embodiments of methods and systems for displaying on a remote computing device in a networked computing environment data associated with a drive of a client computing device in the networked computing environment without mapping the drive on the remote computing device it will now become apparent to one of skill in the art that other embodiments incorporating the concepts of the invention may be used.

