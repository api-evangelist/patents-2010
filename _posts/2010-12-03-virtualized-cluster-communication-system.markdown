---

title: Virtualized cluster communication system
abstract: A method includes executing, in each of a number of nodes of a cluster communication system, a specialized instance of an operating system privileged to control a corresponding hypervisor configured to consolidate one or more VM(s) on a system hardware. The one or more VM(s) is configured to be associated with a non-privileged operating system. The method also includes providing a cluster stack associated with the specialized instance of the operating system on the each of the number of nodes to enable communication between peers thereof in different nodes, and controlling the one or more VM(s) as a cluster resource through the cluster stack.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08707083&OS=08707083&RS=08707083
owner: LSI Corporation
number: 08707083
owner_city: Milpitas
owner_country: US
publication_date: 20101203
---
This disclosure relates generally to virtualized computing systems and more particularly to a method an apparatus and or a system of realizing a virtualized cluster communication system.

Hypervisor based virtualization may allow for consolidation of multiple virtual machines VMs onto a single physical server platform. The increased utilization of the single physical server platform may increase the risk of service loss in the event of a hardware failure at the physical server. Moreover a software fault associated with the hypervisor may precipitate failure of an entire virtualized computing system. Redundancy may be introduced into the virtualized computing system through introducing a second physical server and executing a copy of the VMs thereon in parallel with the VMs on the primary physical server.

The abovementioned approach to provide redundancy may require continuous replication of the primary VM s on the secondary server e.g. second physical server which in turn may consume significant Input Output I O bandwidth leading to decreased overall performance. Another approach may include VM live migration where a copy of the primary VM is saved and then transferred to the second physical server. The VM may then be restored at the second physical server. This approach may require a virtualized environment at the second physical server identical to that at the primary server. In the event of a severe hardware and or a software fault at the primary server the live migration service may be disabled.

Disclosed are a method an apparatus and or a system of realizing a virtualized cluster communication system.

In one aspect a method includes executing in each of a number of nodes of a cluster communication system a specialized instance of an operating system privileged to control a corresponding hypervisor configured to consolidate one or more VM s on a system hardware. The one or more VM s is configured to be associated with a non privileged operating system. The method also includes providing a cluster stack associated with the specialized instance of the operating system on the each of the number of nodes to enable communication between peers thereof in different nodes and controlling the one or more VM s as a cluster resource through the cluster stack.

In another aspect a method includes executing in each of a number of nodes of a cluster communication system a specialized instance of an operating system privileged to control a corresponding hypervisor configured to consolidate one or more VM s on a system hardware. The one or more VM s is configured to be associated with a non privileged operating system. The method also includes controlling the one or more VM s as a cluster resource through a cluster stack associated with the specialized instance of the operating system. The cluster stack is provided on the each of the number of nodes to enable communication between peers thereof in different nodes.

Further the method includes electing a node of the number of nodes as a designated controller of a cluster formed by the number of nodes and reinstantiating the one or more VM s on another node of the number of nodes through the cluster stack upon detection of a failure of the node elected as the designated controller. The designated controller is configured to be a decision maker of the cluster.

In yet another aspect a virtualized cluster communication system includes a number of nodes. Each node includes a system hardware configured to have one or more VM s consolidated thereon through a corresponding hypervisor. The hypervisor is configured to be controlled by a specialized instance of a privileged operating system associated with a control VM also consolidated on the system hardware. The one or more VM s is configured to be associated with a non privileged operating system. The each node further includes a cluster stack associated with the specialized instance of the privileged operating system to enable communication between peers thereof in different nodes. The cluster stack is configured to control the one or more VM s as a cluster resource.

The methods and systems disclosed herein may be implemented in any means for achieving various aspects and may be executed in a form of a machine readable medium embodying a set of instructions that when executed by a machine cause the machine to perform any of the operations disclosed herein. Other features will be apparent from the accompanying drawings and from the detailed description that follows.

Other features of the present embodiments will be apparent from the accompanying drawings and from the detailed description that follows.

Disclosed are a method an apparatus and or a system of realizing a virtualized cluster communication system. Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments.

In one or more embodiments an existing running instance of one or more VMs e.g. VMs on host server may be copied onto host server across network following which the original running instance may be destroyed. In one or more embodiments a copy of the VMs on host system may be made therein following which the copy may be migrated e.g. using VMware s VMotion to host system . In one or more embodiments after the migration the VMs may be restored on host system . Here host server serves as the host and host server serves as the destination. In one or more embodiments in order to achieve appropriate redundancy the virtualized environment at the destination may need to be identical to the virtualized environment at the source. In one or more embodiments in the event of a severe hardware fault e.g. a fault with host server and or a software fault e.g. a fault with the hypervisor configured to enable consolidation of VMs on host server at the source the live migration service may be disabled.

Referring to in one or more embodiments hypervisor hypervisor hypervisor and hypervisor may each be a high level system software executing on a platform associated with system hardware system hardware system hardware and system hardware respectively. For example each of hypervisor hypervisor hypervisor and hypervisor may be capable of accessing all machine instructions in a processor and or a memory associated with system hardware system hardware system hardware and system hardware respectively. In one or more embodiments each of hypervisor hypervisor hypervisor and hypervisor may provide abstraction for one or more operating systems configured to execute on the platform associated with system hardware system hardware system hardware and system hardware respectively.

In one or more embodiments each of hypervisor hypervisor hypervisor and hypervisor may consolidate VMs e.g. control VM VM and VM associated with system hardware control VM VM and VM associated with system hardware control VM VM and VM associated with system hardware and control VM VM and VM associated with system hardware on the platform associated with system hardware system hardware system hardware and system hardware respectively. In the example embodiment of each of the set of VMs the associated control VM the associated hypervisor and the associated system hardware may together form a node e.g. node A node B node C node D of hypervisor based computing system . shows four nodes merely for example purposes. Two or more nodes may serve to illustrate the concepts associated with the exemplary embodiments discussed herein.

In one or more embodiments in each node e.g. A node B node C node D each of the corresponding control VM control VM control VM and control VM may execute a specialized instance of an operating system privileged to control the corresponding set of hypervisor VM and VM hypervisor VM and VM hypervisor VM and VM and hypervisor VM and VM respectively. In one or more embodiments the aforementioned instances of the privileged operating system may be peer instances and according to one or more protocols defined in a set of instructions e.g. cluster control software associated with cluster management and or control configured to execute on the control VMs a node e.g. node A may be elected e.g. through an administrator of the cluster as the designated controller in a cluster formed by node A node B node C and node D .

In one or more embodiments all decisions associated with the cluster may be made at the designated controller node e.g. node A . In one or more embodiments if the designated controller fails one of the additional nodes e.g. node B node C or node D may be elected e.g. through the administrator of the cluster as the designated controller. In one or more embodiments each of the set of VM and VM VM and VM VM and VM and VM and VM may be associated with a non privileged operating system and may execute for example user applications application programs.

In one or more embodiments hardware redundancy may be added to hypervisor based computing system through node B node C and node D being coupled to node A through a network e.g. Internet analogous to network . In one or more embodiments each of control VM control VM control VM and control VM may have a cluster stack associated therewith not shown configured to each include a corresponding Cluster Resource Manager CRM stack and Cluster Infrastructure Services CIS stack e.g. CRM stack and CIS stack CRM stack and CIS stack CRM stack and CIS stack CRM stack and CIS stack .

In one or more embodiments each of CRM stack and CIS stack of a node e.g. node A the CRM stack and the CIS stack associated therewith being CRM stack and CIS stack may exchange cluster communication messages with the corresponding peers thereof on other nodes e.g. node B node C and node D and CRM stack and CIS stack CRM stack and CIS stack and CRM stack and CIS stack respectively through network . Here in one or more embodiments the CRM stack and the CIS stack on each node may reside on the control VM therein and may function as in a non virtualized system. In one or more embodiments the CRM stack may enable an additional level of abstraction that allows VMs having non privileged operating systems associated therewith and controlled through a corresponding control VM to be managed as a cluster resource. Here a resource an example of an abstraction may execute instances of application programs on a hardware device associated with system hardware system hardware system hardware or system hardware .

In one or more embodiments the CRM stack e.g. CRM stack CRM stack CRM stack and CRM stack may deploy resource control scripts configured to enable operations on the resource including but not limited to starting stopping and monitoring. Therefore in one or more embodiments the CRM stack may enable control of VMs associated therewith in a way similar to that described above. In other words in one or more embodiments the CRM stack may have sufficient privilege s to start stop and or monitor the VMs. In one or more embodiments the VMs may have specific instances of applications and or programs which also may be managed in the same way.

In one or more embodiments the CIS stack e.g. CIS stack CIS stack CIS stack and CIS stack may provide expose a set of cluster resource management Application Programming Interfaces APIs to the CRM stack e.g. CRM stack CRM stack CRM stack and CRM stack to enable independence thereof from the underlying cluster infrastructure. Examples of cluster infrastructures available as open source include High Availability Linux Linux HA and OpenAIS. The cluster infrastructure services provided include messaging between nodes e.g. node A and node B and or High Availability HA services such as Heartbeat services notifications cluster memberships etc. In one or more embodiments one or more of the aforementioned example cluster infrastructure services may be made hypervisor aware and may be provided without any modifications required therefor.

In one or more embodiments the VMs executing under the control of the corresponding hypervisor on each instance may possess at least some level of cluster awareness and may run as a clustered application. In one or more embodiments the CRM stack may be configured to detect failure of a node associated therewith. For example the node may panic fault and all instances of the applications application programs executing therein may disappear. Then the CRM stack may reinstantiate the aforementioned instances on another host server controller board or a new designated controller node in hypervisor based computing system which is now a cluster. In one or more embodiments a clustered application associated with the VMs may receive notification s through the cluster stack when a node is disabled from the cluster and or when a node is added to the cluster.

In one or more embodiments thus hypervisor based computing system may continue to provide service to one or more client devices thereof even in the event of a single hardware fault and or a software fault e.g. a fault in the privileged operating system a hypervisor fault . In one or more embodiments in the case of hypervisor based computing system having more than two nodes therein e.g. see more than one hardware and or software fault s may be tolerated. Therefore in one or more embodiments hypervisor based computing system is an HA system.

In one or more embodiments hardware redundancy may be utilized in hypervisor based computing system through the cluster control software configured to execute on the control VMs. In one or more embodiments as the VMs associated with one or more non privileged operating systems may be treated as cluster resources hypervisor based computing system may be a system of aggregated physical host servers with virtualization capabilities in contrast to merely being a system of aggregated physical host servers. In one or more embodiments HA capability may be extended to support the VMs associated with the one or more non privileged operating systems and to treat the aforementioned VMs as cluster resources.

In one or more embodiments cluster API services of the cluster stack e.g. exposed by CIS stack of the nodes of hypervisor based computing system may be presented to the cluster aware applications executing in the VMs associated with the one or more non privileged operating systems. In one or more embodiments hypervisor based computing system may also be configured to support VM replication and or migration.

It is obvious that the number of nodes of hypervisor based computing system function may be increased arbitrarily scaled and that the number of nodes may be dictated merely by factors such as the capacity of the system hardware e.g. system hardware system hardware system hardware and or system hardware the capacity of the network e.g. network switch and the maximum number of nodes that can be managed by the CRM stack.

In one or more embodiments operation may involve controlling the one or more VM s as a cluster resource through a cluster stack associated with the specialized instance of the operating system. The cluster stack may be provided on the each of the number of nodes to enable communication between peers thereof in different nodes. In one or more embodiments operation may involve electing a node of the number of nodes as a designated controller of a cluster formed by the number of nodes. In one or more embodiments the designated controller may be configured to be a decision maker of the cluster. In one or more embodiments operation may then involve reinstantiating the one or more VM s on another node of the number of nodes through the cluster stack upon detection of a failure of the node elected as the designated controller.

Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. Also for example the various devices and modules described herein may be enabled and operated using hardware circuitry e.g. CMOS based logic circuitry firmware software or any combination of hardware firmware and software e.g. embodied in a machine readable medium .

In addition it will be appreciated that the various operations processes and methods disclosed herein may be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer devices and may be performed in any order e.g. including using means for achieving the various operations . Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

