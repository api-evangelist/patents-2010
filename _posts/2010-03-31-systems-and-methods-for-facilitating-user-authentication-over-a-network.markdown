---

title: Systems and methods for facilitating user authentication over a network
abstract: In accordance with embodiments of the present disclosure, systems and methods for facilitating network transactions include user authentication over a network by providing strong mutual authentication of client web application to server side application server, providing session encryption key negotiation after authentication to continue encryption during communication, and providing a high-level encryption technique referred to as an effective zero knowledge proof of identity (eZKPI) algorithm. In various implementations, the eZKPI algorithm is adapted to couple something the user Knows (e.g., a password or personal identification number) with something the user Has (e.g., a secure identification card) to create a stronger identity authentication proof for access to a mobile device and applications running on the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08539569&OS=08539569&RS=08539569
owner: eBay Inc.
number: 08539569
owner_city: San Jose
owner_country: US
publication_date: 20100331
---
This application claims priority to and benefit of Provisional Patent Application Ser. No. 61 285 115 entitled SYSTEMS AND METHODS FOR FACILITATING USER AUTHENTICATION OVER A NETWORK filed Dec. 9 2009 which is incorporated herein by reference in its entirety.

The present invention generally relates to network transactions and more particularly to facilitating user authentication over a network.

Presently many online web based applications use password based user identity authentication. That is a user is typically required to provide a user ID and password as a proof of identity before using an application. Generally web application users select a password out of band through a process known as registration to the site. During this process which may be carried over a secure communication channel e.g. Https the user selects a password. During an authentication process a password may be sent over a network from a web application as typed by the user. In many cases this password exchange occurs over a secure communication session. Typically the user provides the known password when prompted by the web application.

Even though password authentication is used in many web application settings there are many security concerns with password authentication. For example many passwords chosen by web users are weak. These user chosen passwords are typically short use few of the allowable characters in the password mix and are sometimes easily guessable because they are based on the user s child name pet name hobbies etc. In general weak passwords may be easily compromised by hackers using algorithms such as a Dictionary Attack.

In another example since a password is sent over a network there may be some leakage of data and information to a man in the middle having successfully eavesdropped on information transferred over the network. Eavesdropping may be accomplished with ease and in more common settings than is generally noticed. For instance many banks and web applications e.g. electronic commerce eCommerce pages use an Http page for web site navigation. For example when users are ready to sign on they are redirected to a secure Https page. However by this time it may be already too late if an eavesdropper or a man in the middle has been able to successfully proxy the user s request. If the eavesdropper or man in the middle is able to do a DNS i.e. domain name server attack and redirect the external site to its proxy then users may think that they are connecting to their bank or eCommerce site securely but in actuality users are connecting to a proxy site which in turn has a secure connection with the end site. At this point any confidential information entered by users may be compromised.

In another example password based authentication is prone to phishing attacks where users are redirected without their knowledge to a phishing site. Once redirected users are then phished for confidential information including passwords.

In another example many password authentication protocols require the use of Https for secure end to end transmission of passwords over the network. However in many high volume eCommerce and financial settings the Https protocol may be terminated at the edge of a web application network. As such any confidential data in the payload e.g. passwords or related hash values may be sent over the network with standard Http e.g. in clear text in many cases protocol.

Accordingly there exists a need to improve network security when authenticating user identity so as to inhibit illicit access to personal data and information.

Embodiments of the present disclosure are directed to facilitating user authentication over a network by improving data security providing strong mutual authentication between client web application and server side application server providing session encryption key negotiation after authentication to continue encryption during communication and providing a high level encryption technique referred to herein as an effective zero knowledge proof of identity eZKPI algorithm.

In accordance with embodiments of the present disclosure systems and methods are adapted to avoid sending any information over a network that may be intercepted and reduce reliance on Https for authentication by sending data over Http and assuming the data may be intercepted and the session is proxied. Systems and methods disclosed herein are adapted to inhibit the use of weak passwords by having a wider key space in both the total possible keys and in common use during web navigation wherein a desirable range for a password is about 2 70 keys or better. Systems and methods disclosed herein are adapted to reduce and inhibit the possibility of dictionary attack reduce and inhibit phishing attacks that target capture of identification credentials and keep the computational aspect of password validation the same on client and server sides.

In accordance with embodiments of the present disclosure systems and methods disclosed herein are adapted to provide strong mutual authentication of client web application to server side application server and vice versa. For example client side authentication and mutual authentication provides distribution of client side knowledge and proof of identity i.e. KPI keys that are issued by the server. Systems and methods disclosed herein are adapted to provide session encryption key negotiation so that following authentication the remainder of the communication may continue to be encrypted.

Embodiments of the present disclosure facilitate coupling of something the user Has e.g. secure identification card with something the user Knows e.g. password and or personal identification number . By combing two types of information in a unique manner for example through the use of a high level encryption technique referred to as an effective zero knowledge proof of identity eZKPI algorithm benefits for secure user authentication increase for both types of information.

In accordance with embodiments of the present disclosure the eZKPI algorithm uses a 2 factor authentication scheme for authenticating the user to applications on a device such as a mobile communication device. One component of the 2 factor authentication scheme is based on user selected identification information e.g. something the user Knows such as a password and or personal identification number and another component of the 2 factor authentication scheme is based on possession of identification information related to the user e.g. something the user Has such as a secure identification card . Accordingly by combing something the user Has with something the user Knows confidence in authenticating user identity increases as viewed from an end user application perspective e.g. eCommerce Banking and or Social Networking application .

In accordance with embodiments of the present disclosure systems and methods for facilitating transactions over a network including user authentication provide strong mutual authentication of web client application to server application server provide high level encryption with use of the eZKPI algorithm and provide session encryption key negotiation after authentication to continue encryption during communication.

In accordance with embodiments of the present disclosure systems and methods for facilitating transactions e.g. user authentication over a network include communicating with a web client over the network receiving a request for authentication from the web client over the network the request including user information related to a user verifying that the user information includes a first integer value P corresponding to a first identification number related to the user and a second integer value Q corresponding to a second identification number related to the user challenging the web client over the network by generating and sending a plurality of different random integer values to the web client over the network including a first random integer value R a second random integer value T and a third random integer value K. The systems and methods include defining a first line segment PR between the first integer value P and the first random integer value R defining a second line segment QT between the second integer value Q and the second random integer value T and determining an intersection point S of the first line segment PR and the second line segment QT. The systems and methods include calculating a first hash value from the third random integer value K and the intersection point S receiving a second hash value from the web client over the network performing a first authentication protocol by comparing the first hash value with the second hash value wherein if the first and second hash values match then the web client is authenticated and wherein if the first and second hash values do not match then the first authentication protocol is aborted and storing information related to performing the first authentication protocol.

In various implementations the systems and methods may include receiving a fourth random integer value L with the second hash value from the web client over the network and performing a second authentication protocol by calculating a third hash value from the third random integer value K the intersection point S and the fourth random integer value L and sending the third hash value to the web client over the network. In one aspect if the third hash value is accepted by the web client then communication may continue with the web client and if the third hash value is not accepted by the web client then communication with the web client may be aborted by the web client. The systems and methods may include storing information related to performing the second authentication protocol.

In various implementations the systems and methods may include locating a user account related to the user based on the user information passed with the request. The user account may include information related to the user. The systems and methods may include comparing the user information passed with the request with user information of the user account to verify that the user information includes a first integer value P and a second integer value Q related to the user. The first integer value P may include a value for the first identification number related to the user and the first identification number may include a user identification number from a secure identification card.

In various implementations the second integer value Q may include a value for the second identification number related to the user and the second identification number may include an alpha numeric password selected by the user or a personal identification number selected by the user. Each different random integer value may include 10 to 20 digits. The first line segment PR passes through point values for the first integer value P and the first random integer value R the second line segment passes through point values for the second integer value Q and the second random integer value T and the intersection of the first line segment PR and the second line segment QT passes through a point value for the intersection point S. The first integer value P may include a first shared secret with the web client and the second integer value Q may include a second shared secret with the web client.

In various implementations the systems and methods may include storing one or more of the first integer value P the second integer value Q the third random integer value K and the fourth random integer value L. The systems and methods may include storing a first encryption value having the third random integer value K plus a value for intersection point S and storing a second encryption value having the third random integer value K plus the fourth random integer value L plus a value for intersection point S.

These and other features and advantages of the present disclosure will be more readily apparent from the detailed description of the embodiments set forth below taken in conjunction with the accompanying drawings.

Embodiments of the present disclosure and their advantages are best understood by referring to the detailed description that follows. It should be appreciated that like reference numerals are used to identify like elements illustrated in one or more of the figures wherein showings therein are for purposes of illustrating embodiments of the present disclosure and not for purposes of limiting the same.

Embodiments of the present disclosure provide strong mutual authentication of client web application to server side application server and vice versa provide session encryption key negotiation after user authentication to continue encryption during communication and provide a high level encryption technique referred to as an effective zero knowledge proof of identity eZKPI algorithm.

The network in one embodiment may be implemented as a single network or a combination of multiple networks. For example in various embodiments the network may include the Internet and or one or more intranets landline networks wireless networks and or other appropriate types of communication networks. In another example the network may comprise a wireless telecommunications network e.g. cellular phone network adapted to communicate with other communication networks such as the Internet. As such in various embodiments the user device and service provider device may be associated with a particular network link e.g. a link such as a URL Uniform Resource Locator to an IP Internet Protocol address and or a mobile phone number.

The user device in various embodiments may be implemented utilizing any appropriate combination of hardware and or software configured for wired and or wireless communication over the network . In one embodiment the user device may be implemented as a mobile communication device e.g. mobile phone and or various other generally known types of wireless communication devices adapted for communication with the network . In various other embodiments the user device may be implemented as a personal computer PC a personal digital assistant PDA a notebook computer and or various other generally known types of wired and or wireless computing devices for communication with the network . It should be appreciated by those skilled in the art that the user device may be referred to as a client device or a customer device without departing from the scope of the present disclosure.

The user device in one embodiment includes a user interface application which may be utilized by a user to conduct network transactions including electronic commerce and user authentication with the service provider device over the network . For example the user interface application may be implemented as an electronic commerce application to create list store track and manage information related to items products and or services proffered for sale over the network . In another example the user interface application is adapted to utilize an eZKPI module and a secure ID module adapted to assist the user with user authentication and identity verification with the service provider device over the network . These and other aspects of the present disclosure are described in greater detail herein.

In one implementation the user interface application comprises a software program such as a graphical user interface GUI executable by a processor that is configured to interface and communicate with the service provider device via the network . In another implementation the user interface application comprises a network browser module that provides a network interface to browse information available over the network . For example the user interface application may be implemented in part as a web browser to view information available over the network . In another example the user is able to access the service provider device to conduct electronic commerce and authenticate user identity via the network . As such the user may conduct various types of network transactions including user authentication and electronic commerce with the service provider device over the network .

The user interface application in one embodiment utilizes the eZKPI module and the secure ID module to authenticate user identity with the service provider device over the network . In one implementation the eZKPI module is adapted to assist with processing of the eZKPI algorithm for authentication and verification of user identity. In one aspect the eZKPI module is adapted to utilize the eZKPI algorithm for encryption of user data and information for transfer to the service provider device over the network . In another implementation the secure ID module is adapted to assist with processing of user related secure identification data and information for authentication and verification of user identity. In one aspect the eZKPI module is adapted to utilize the eZKPI algorithm and the secure ID module for encryption of user identity data and information for transfer to the service provider device over the network . These and other aspects of the present disclosure are described in greater detail herein.

The user device in one embodiment may include a secure ID input component e.g. data input component magnetic card reader image capture component RFID communication component etc. adapted to interface with the user interface application the eZKPI module and the secure ID module to capture store analyze and utilize secure ID data and information related to the user . The secure ID input component may comprise any type of user input component which for example receives user input and provides representative user input data. The secure ID input component may comprise a portable input component that is adapted to be incorporated into the user device e.g. a mobile communication device such as a mobile phone . In one implementation the user device may operate as a mobile phone comprising the secure ID input component in communication with the network which is adapted to provide user identification data and information related to the user directly from the user device .

In one embodiment the secure ID input component may comprise an image capture component adapted to capture biometric image data and information from the user wherein the image capture component may include one or more of a fingerprint reader a voice analyzer a retina scanner a palm reader and or a facial recognition device.

In one implementation the user device may comprise a processing component adapted to convert captured user input signals into user identification data and information store user identification data and information in a memory component and retrieve stored user identification data and information from the memory component. The processing component is adapted to process user identification data and information stored in the memory component and the user identification data and information may include user inputted data and information and or processed user inputted data and information.

The user device in various embodiments may include other applications as may be desired in one or more embodiments of the present disclosure to provide additional features available to the user . In one example such other applications may include security applications for implementing client side security features programmatic client applications for interfacing with appropriate application programming interfaces APIs over the network and or various other types of generally known programs and or software applications. In still other examples one or more of the other applications may interface with the user interface application the eZKPI module and the secure ID module for improved security.

The user device in one embodiment may include at least one user identifier which may be implemented e.g. as identity attributes operating system registry entries cookies associated with the user interface application identifiers associated with hardware of the user device and or various other appropriate identifiers. The user identifier may include one or more attributes related to the user such as personal information related to the user e.g. a username password alpha numeric password personal identification number PIN address phone number etc. biometric information related to the user e.g. biometric identification data including fingerprint data voice analysis data retina data palm data and or facial recognition data and or account information related to the user e.g. banking institutions credit card issuers user account numbers security data etc. . In various aspects the user identifier may be passed with a login request and or an authentication request to the service provider device via the network and the user identifier may be used by the service provider device to associate the user with a particular user account maintained by the service provider device .

The service provider device in various embodiments may be maintained by a network based electronic commerce entity adapted to process network transactions financial transactions and or information transactions on behalf of the user via the user device over the network . In one implementation the service provider device includes a service application adapted to interact with the user device over the network to process network transactions including verifying user identity and facilitating electronic commerce. In one embodiment the service provider device may be provided by PayPal Inc. and or eBay of San Jose Calif. USA.

The service application in one embodiment is adapted to utilize a processing module to process network transactions including user authentication purchases and or payments for financial transactions between network users including user and in some examples merchants. In one implementation the processing module working in conjunction with an eZKPI module and a secure ID module assists with resolving user authentication. In another implementation the processing module assists with resolving financial transactions through validation delivery and settlement. Accordingly the service application in conjunction with the processing module the eZKPI module and the secure ID module is adapted to settle indebtedness between users including user and in some examples merchants wherein user accounts may be directly and or automatically debited and or credited of monetary funds in a manner as accepted by the banking industry.

The service application in one embodiment utilizes the eZKPI module and the secure ID module to authenticate user identity with the user via the user device over the network . In one implementation the eZKPI module is adapted to assist the processing module with processing of the eZKPI algorithm for authentication and verification of user identity. In one aspect the eZKPI module is adapted to utilize the eZKPI algorithm for decryption of user data and information received from the user via the user device over the network . In another implementation the secure ID module is adapted to assist the processing module with processing of user identification data and information for user authentication and verification of identity. In one aspect the eZKPI module is adapted to utilize the eZKPI algorithm and the secure ID module for decryption of user identification data and information received from the user via the user device over the network . These and other aspects of the present disclosure are described in greater detail herein.

The service provider device in one embodiment may be configured to maintain one or more user accounts and in some examples merchant accounts in an account database wherein each account may include account information associated with one or more individual users e.g. user and or merchants. For example account information may include private financial information of the user or merchant such as one or more account numbers passwords alpha numeric passwords personal identification numbers credit card information banking information or other types of financial information which may be used to facilitate electronic commerce transactions between users including the user and or merchants. In various implementations the methods and systems described herein may be modified to accommodate one or more users and or merchants that may or may not be associated with at least one existing account. As such the service application in various implementations is adapted to utilize the eZKPI module and the secure ID module to verify user identity over the network for account access. These and other aspects related to the eZKPI module and the secure ID module are described in greater detail herein.

In one implementation the user may have identity attributes stored with the service provider device in the account database as part of a user account and the user may have credentials to authenticate or verify identity with the service provider device . In various aspects user attributes may include identification information e.g. username alpha numeric password and or PIN biometric information e.g. biometric identification information and or banking information e.g. user account number . In various other aspects the user attributes may be passed to the service provider device as part of a login request authentication request and or some other related request and the user attributes may be utilized by the service provider device to associate the user with one or more particular user accounts maintained by the service provider device .

In one embodiment the eZKPI algorithm is based on properties of lines and points in two dimensional 2D Euclidean geometry. In reference to Euclidean geometry and based on the parallel postulate or 5th axiom any line that is not parallel to another line intersects it at exactly one point. Moreover given two points on a two dimensional space e.g. P and R as shown in the equation of the line passing through those points is Y AX B where X and Y are the variables and A and B are the chosen constants based on the two points.

In one aspect the eZKPI algorithm uses the properties of lines and point in Euclidean geometry along with a particular zero knowledge protocol to implement an effective zero knowledge proof of identity eZKPI algorithm to overcome the deficiencies of conventional password authentication.

As shown in the eZKPI algorithm is provided as follows in accordance with an embodiment of the present disclosure.

1. A web client e.g. user service application initiates a conversation to a server application e.g. service application by sending a request for authentication. In that authentication request the web client e.g. user service application sends one or more references to identity e.g. Consumer X .

2. During the entire protocol which may be run over Http only it may be assumed that there is an eavesdropper or man in the middle in conversation between the web client e.g. user service application and the server application e.g. service application . In one aspect this is the core and strength of zero knowledge proof of identity wherein the middle man gains nothing from eavesdropping or proxying the request.

3. The server application e.g. service application receives the authentication request verifies that it has a shared secret with Consumer X and then to challenge the web client e.g. user service application generates one or more random integer values e.g. 3 random integer values of order 10 to 20 digits each. In one aspect two of the random values represent points T and R wherein the web client e.g. user service application calculates the line intersection thereof. The value K is a random value to seed all subsequent hash functions and also takes part in the final negotiated encryption key. Since T R and K are all random and are all different per authentication request in one aspect only the combination of all 3 random integers is unique and any subset may be repeated which does not weaken the algorithm each intersection S or data sent over the network is different. In one aspect this means no record and replay of this data is possible by the eavesdropper or man in the middle.

4. The web client e.g. user service application receives the 3 values R T and K. The web client e.g. user service application then defines line segment PR passing through points PR and line segment QT using shared secret values of P and Q. Further discussion for how this done is described in greater detail herein. The web client e.g. user service application computes the intersection of lines PR and QT and the intersection point is S.

5. Next the value H H K S is computed. The Hash function is a cryptographically secure one way message digest function like SHA 2. However since this is a Hash of a Hash even less secure message digests like MD5 and SHA 1 may be used. In one aspect Hash of Hash itself is a strong secure message digest function. In another aspect the operator connotes concatenation. The value computed in this step is K left concatenated to S and Hash of Hash of that value obtained.

6. Next a random integer value L of order of 10 to 20 digits may be selected by the client. The random value L is selected to challenge the server application e.g. service application to authenticate itself. Since a new random value is used per authentication request this may eliminate any replay of data by the server or the man in the middle to the web client e.g. user service application . In one aspect the value of L may be repeated across authentication protocols as long as combination of R T K and L is unique.

8. The server application e.g. service application may use the same action as 4 and 5 above to compute the same H H K S using the shared secret values. It then compares its value with the received value. If the two match the web client e.g. user service application is authenticated. If not this is an authentication error and the protocol may be aborted.

9. Once the web client e.g. user service application is authenticated the server application e.g. service application needs to authenticate itself. In one implementation the server application e.g. service application computes H H L S K and returns the computation to web client e.g. user service application for validation. In one aspect the random value L may be used in this context to make the hash unique for each authentication request.

10. The server application e.g. service application stores the values L K S as the negotiated shared secret for subsequent encryption. In one aspect the hash of this value may be used as the shared encryption key.

11. The web client e.g. user service application receives the value H H L S K and computes an equivalent value. If the two values match the server is authenticated. If not this is an error and the authentication protocol may be aborted.

12. In one implementation same as server application e.g. service application the value L K S is used as the common negotiated encryption key for subsequent data exchange between the web client e.g. user service application and the server application e.g. service application .

Referring to the eZKPI algorithm provides the following benefits according to embodiments of the present disclosure.

No Https or use of X.509 certificates are needed. In one aspect only Http throughout the authentication protocol is used. All data over the network may be assumed to have been captured by a man in the middle with no consequence. Mutual strong authentication for both the web client e.g. user service application and the server application e.g. service application is utilized. Negotiated encryption key for subsequent encrypted data exchanges is utilized. Each authentication request is unique in both directions given random values for T R K and L. The authentication process is highly secure with zero knowledge about shared secrets leaking out.

Comparable computational effort if not less for using this protocol versus sending a hashed password over Https session. Https setup is quite computationally expensive due to digital signature validation and certificate chain validation of X.509 certificates. Also each data transfer has to be encrypted to keep it protected. No encryption or certificate chain validation is needed in this protocol.

No weak passwords as all shared secret points are numbers that have no direct affinity to common information such as user s child s name pet name etc. At 12 digits for each shared secret logical point value total of 10 12 10 12 or roughly 2 3 12 2 3 12 or about 2 72 logical points are possible. This is larger than the key space of 6 character passwords with roughly 70 characters in the mix e.g. upper lower alpha plus digits plus up to 8 punctuation characters or 70 6 or roughly 2 7 6 or 2 42 . In one aspect conversion of pass phrases to 12 digit values and translation of logical point values to physical x y coordinates is described in greater detail herein.

As shown in given point P with its physical coordinate values of X1 and Y1 and point R with its coordinates of X3 and Y3 the equation of the line is Y AX B where A and B are as calculated and shown in . In one aspect the equations for line segments PR and QT are shown in .

In one aspect shared secrets P and Q may be selected out of band. During web user registration process the server application e.g. the service application is adapted to ask the web user e.g. user to select at least one of the three ways of selecting logical values for P and Q as follows.

For example selecting logical values for P and Q may involve selecting two 10 to 20 digit numbers for P and Q such as for example 235798014211 8956091234.

In another example selecting logical values for P and Q may involve selecting a 12 character or longer pass phrase such as today is a nice day. In one aspect punctuation including white spaces and mixed case may be ignored for pass phrases. This is one reason why the length needs to be longer than usual password length. This pass phrase approach allows the user to provide an easily remembered pass phrase that is less likely to be vulnerable to dictionary attack as would be the case for a weak password. If this mode is selected the pass phrase is hashed to a 256 bit value 32 bytes . Ignoring the top 4 bytes and the bottom 4 bytes the remaining middle 24 bytes are split in 2 halves wherein the top half is used for point P and the bottom half is used for point Q. Each byte of the top or bottom half is processed modulo to give a digit in range 0 to 9. In one aspect P and Q are 12 digits each in this scenario.

In another example this may involve selecting a password of at least 8 characters in length that is composed of mixed case alpha characters punctuation and numbers. If this mode is selected the password is hashed to a 256 bit value 32 bytes . Ignoring the top 4 bytes and the bottom 4 bytes the remaining middle 24 bytes are split in 2 halves wherein the top half is used for point P and the bottom half is used for point Q. Each byte of the top or bottom half is processed modulo to give a digit in range 0 to 9. In one aspect P and Q are 12 digits each in this scenario.

In one aspect regardless of which method is used by the web client user e.g. user a 10 to 20 digit logical value for points P and Q is derived and used as a shared secret between the web client e.g. user interface application and the server application e.g. service application .

The following discusses a process of translating a logical value to coordinate system values for computation of an equation of a line. In one aspect the implementation of a web client e.g. user service application or a server application e.g. service application may decide whether to store P and Q as logical values and convert them to coordinate system values as needed or to store them as coordinate values from the start.

The following discusses conversion of logical values to x y coordinates. In one aspect logical value in this case refers to a 10 to 20 digit integer value. However as shown in to compute the equation of the line for lines PR or QT or to compute the intersection point S one needs to be working with coordinate system values of P and Q e.g. x and y coordinates . There are many ways logical values may be translated to coordinate values. Two practical ways are described as follows.

In one example for a given 10 to 20 digit logical value e.g. the value for point P split the value in half and use the top half for an X coordinate and the bottom half for a Y coordinate.

In another example a 256 bit 32 byte Hash value of any logical value e.g. point P is computed. The middle 5 bits of each byte bits through are used to form a 160 bit or 20 byte number. The top 10 bytes of this 20 byte number is an X coordinate. The bottom 10 bytes is a Y coordinate. Each byte is processed modulo to give a digit in the range 0 to 9.

In one aspect referring to the eZKPI algorithm there may not be a need for reverse conversion from coordinate format back to logical format. Even when the intersection point S is computed in coordinate format the H H K S or any similar hash function involving S is actually based on concatenation of physical coordinates of S e.g. x5 and y5 and not the logical value of S. This provides many ways for converting logical values to coordinate values as the conversion process does not need to be reversible.

In accordance with embodiments of the present disclosure the eZKPI algorithm is unique and novel and the formulation of the eZKPI algorithm and the application of the eZKPI algorithm to the problem of web based authentication is also unique and novel.

In one embodiment the eZKPI secure ID based user authentication utilizes the eZKPI algorithm to combine something the user Has e.g. secure ID card with something the user Knows e.g. user selected information . The eZKPI biometric based user authentication creates a seamless strong authentication scheme for both authenticating to the device as well as authenticating to the application running on that device. In one aspect the eZKPI algorithm is utilized to couple device authentication to application authentication.

As described herein the secure ID input component may include a data input component a magnetic card reader an image capture component an RFID communication component etc. In these cases one objective of adding the secure ID input component to a mobile user device e.g. user device such as a mobile phone is to provide higher confidence in authenticating user identity when a user e.g. user accesses the mobile device. In one aspect each identity authentication scheme produces one or more effects. For example one effect is the data that is captured by the secure ID input component may be utilized to validate user identity which may be referred to as Input Data or I D. Another effect is the action produced by the Input Data which may be referred to as Verification of Identity or V I.

In one implementation of the eZKPI algorithm the user may select two points P and Q. For the coupling of what the user Has e.g. secure ID card to what the user Knows e.g. user selected information let P F I D and Q F V I . For example point P may be selected as some function of Input Identification Data e.g. secure ID card and point Q may be selected by the user as something the user Knows such as User Selected Input Data e.g. a password . In one aspect both P and Q are selected through an out of band user registration process. During a registration process the user may be asked to participate in a user authentication process. Input Data collected from the user authentication process may be converted to point P and shared with a remote server application e.g. the service application as a shared secret. The user may select point Q as user selected information such as a password or some information known only to the user.

Once points P and Q are selected the eZKPI authentication scheme is challenged with two random points R and T for computing intersection point of S of lines PR and QT as described herein in reference to the eZKPI algorithm. Point Q is obtained from the user as something they Know. Point P is obtained from the mobile device by asking for User Input Data from last time the user authenticated itself to the device or if needed the user is asked to re authenticate their secure ID card data. Once points P and Q are known the eZKPI algorithm is adapted to proceed with calculation of intersection point S and provide zero knowledge proof of identity eZKPI of the intersection point S to the other party.

In one implementation point P may be calculated as Hash of raw input data from the user via user input data. This raw data or some unique subset of it if provided to the eZKPI algorithm may be run through a one way hash function like SHA 2 Secure Hash Algorithm version 2 256 bits to create a value for point P. It should be appreciated by those skilled in the art that any cryptographically strong one way hash function may be utilized without departing from the scope of the present disclosure.

In one aspect the cryptographic strength of eZKPI algorithm as discussed herein may remain unchanged through use of this application. For example having point P directly dependent on something the user Has reduces the likelihood that both what the user Knows point Q and what the user Has point P may be compromised at the same time.

If the device is lost or stolen access to the device or to the applications running on that device is protected because the secure ID signature of the device owner may not be replicated. If what the user has point Q is compromised again that information alone may not be used to successfully access the device or the application on that device because the secure ID data point P is missing from eZKPI algorithm.

In one embodiment the user may only be asked to input point Q and point P may be derived from the user device itself wherein a go around path may not exist for applications that deploy the eZKPI algorithm. That is someone may not be able to phish for point Q and try to authenticate to remote backend application via that information alone. Similarly if the secure device ID or secure ID card of the user is somehow obtained the knowledge of P may be compromised but the knowledge of Q may still be with the user. As such the eZKPI algorithm comprises a strong 2 factor authentication scheme with several natural controls against information compromise.

From the perspective of end user remote application e.g. a Banking or eCommerce application not only the user is authenticated by correctly running through eZKPI proof of identity but also the device from which the request is coming from is authenticated as part of its User Input Data may include the unique device ID e.g. a Serial Number or a GUID Globally Unique Identifier . The remote application has a higher confidence in the identity of the user because both what the user knows point Q and what the user has point P are used to authenticate the user. In accordance with embodiments of the present disclosure remote backend applications which may have no knowledge of user input data may accept indirect user based data and strongly authenticate user identity via the eZKPI Secure ID Card based user authentication utilizing the eZKPI algorithm.

In one implementation the service provider device is adapted to receive and analyze an authentication request from the user block . For example the service provider device is adapted to communicate with the user via the user device over the network receive an authentication request from the user via the user device over the network and analyze the authentication request to obtain user information and verify first shared secret data P and second shared secret data Q related to the user.

In one aspect a web client e.g. user interface application initiates communication with a network server application e.g. service application of service provider device by sending a request for authentication. In that authentication request the web client sends one or more references to identity e.g. a username first shared secret data P and or second shared secret data Q . The first shared secret data may comprise secure ID card data represented by a first integer value P. The secure ID card data may comprise at least one of data input data magnetic card reader data image capture component data RFID communication component data. The second shared secret data may comprise user selected data represented by a second integer value Q. The user selected identification data may comprise a user selected password or other information known only by the user.

In another aspect the service provider device may be adapted to verify the first shared secret P and the second shared secret data Q of the user by locating a user account in the account database related to the user based on user information passed with the authentication request compare the user information of the authentication request with user information of the user account to verify the first shared secret data P and the second shared secret data Q related to the user. The user account may include information related to the user including at least one of username the first shared secret data and the second shared secret data. Accordingly the service provider device may be adapted to store information related to the user including the username the first shared secret data P and the second shared secret data Q.

The service provider device is adapted to generate and send user challenge data to the user block . For example the service provider device is adapted to generate user challenge data e.g. 3 random integers R T K and send the user challenge data R T K to the user via the user device over the network .

In one aspect the user challenge data R T K may comprise a plurality of data components including a plurality of different random integer values. Each random integer value may comprise 10 to 20 digits. A first data component may comprise a first integer value T a second data component may comprise a second integer value R and a third data component may comprise a third integer value K. The service provider device may be adapted to store information related to the user challenge data including the 3 random integers R T K.

In another aspect the server application e.g. service application of service provider device is adapted to receive the authentication request verify that it has a shared secret with the user e.g. user interface application and then challenge the user by generating one or more random integer values e.g. 3 random integer values R T K of order 10 to 20 digits each. In one example two of the random values represent points R and T from . The value K may comprise a random value that may seed all subsequent hash functions and takes part in negotiated encryption keys. Since T R and K are random and are different per authentication request each intersection S is different. In another example the combination of all 3 random integers is unique and any subset may be repeated which does not weaken the algorithm.

The service provider device is adapted to define one or more relationships PR QT between the first shared secret data P the second shared secret data Q and the user challenge data R T K block . For example referring to defining one or more relationships may include defining a first line segment PR from the first shared secret data P and a first data component of the user challenge data R and defining a second line segment QT from the second shared secret data Q and a second data component of the user challenge data T . The first line segment PR may pass through point values for the first shared secret data P and the first data component of the user challenge data R and the second line segment QT may pass through point values for the second shared secret data Q and the second data component of the user challenge data T . The service provider device may be adapted to store information related to the defined relationships including the first line segment PR and the second line segment QT .

The service provider device is adapted to determine intersection data S for the one or more relationships PR QT block . For example referring to determining intersection data S for the one or more relationships PR QT may comprise determining an intersection point S of the first and second line segments PR QT .

The service provider device may be adapted to store information related to the intersection point S including a value for the intersection point S .

In one aspect the web client e.g. user interface application receives the three values R T and K from the service provider device over the network . The user interface application of the user device is adapted to define line segment PR passing through points P and R and line segment QT passing through points Q and T using shared secret values of P and Q. The user interface application of the user device is adapted to compute the intersection of lines PR and QT at the intersection point S.

The service provider device is adapted to calculate user authentication data block . For example the service provider device is adapted to calculate the user authentication data as first user hash data e.g. user hash value H H K S from the user challenge data K and the intersection data S . The first user hash data e.g. user hash value H H K S may comprise a hash value calculated from a third data component of the user challenge data K and the intersection data S . In one implementation the service provider device may be adapted to store a first encryption value K S related to the first user hash data in a memory component wherein the first encryption value K S comprises a third component of the user challenge data K and the intersection data S . The service provider device may also be adapted to store information related to the first user hash data including a value for the first user hash data.

In one aspect the server application e.g. service application of service provider device is adapted to compute the hash value H H K S . The Hash function comprises a cryptographically secure one way message digest function like SHA 2. Since H H K S is a Hash of a Hash even less secure message digests like MD5 and SHA 1 may be used. In one example Hash of Hash itself is a strong secure message digest function. In another example the operator connotes concatenation. The value computed in this step is K left concatenated to S and Hash of Hash of that value obtained.

The service provider device is adapted to receive user identity data block . For example the service provider device is adapted to receive second user hash data e.g. user hash value H H K S from the user via the user device over the network . The hash value H H K S is calculated by the user interface application from a third data component of the user challenge data K and the intersection data S .

The service provider device is adapted to authenticate user identity block by for example comparing the user authentication data i.e. the first user hash data H H K S with the user identity data i.e. the second user hash data H H K S to authenticate user identity. In one aspect comparing the first user hash data H H K S with the second user hash data H H K S to authenticate user identity may comprise determining if the first user hash data H H K S matches the second user hash data H H K S . The service provider device is adapted to compare the calculated hash value with the received hash value. If the two values match then the web client e.g. user interface application is authenticated. If the two values do not match then an authentication error occurs and the protocol may be aborted by the service provider device .

If user identity is authenticated block then the service provider server continues communicating with the user via the user device over the network block . Otherwise if user identity is not authenticated block then the service provider server aborts communicating with the user via the user device over the network block .

The service provider device is adapted to store results of the authentication process block . In one aspect the results may be stored in a memory component e.g. account database as part of the user account related to the user. As such whether communication with the user was continued block or aborted block the results of the authentication process may be stored along with any other information related to the authentication request.

In one implementation the service provider device is adapted to receive server challenge data L from the user via the user device over the network block . The server challenge data L may comprise a random integer value L having 10 to 20 digits. In one aspect the service provider device may be adapted to receive server challenge data L with the user identity data i.e. the second user hash data user hash value H H K S from the user via the user device over the network as described in reference to method block of . The service provider device may be adapted to store information related to the server challenge data L including a value for the server challenge data L .

In one aspect the random integer value L of order of 10 to 20 digits may be selected by the web client e.g. user interface application . The random value L may be selected to challenge the server application e.g. service application to authenticate itself. Since a new random value is used per authentication request this may eliminate any replay of data by the server to the web client. In one example the value of L may be repeated across authentication protocols as long as combination of R T K and L is unique.

The service provider device is adapted to calculate server authentication data block . For example the service provider device is adapted to calculate the server authentication data by calculating first server hash data e.g. server hash value H H L S K from the server challenge data L the intersection data S and a third component of the user challenge data K .

The service provider device is adapted to send the server authentication data to the user block . For example the service provider device is adapted to send the first server hash data i.e. server hash value H H L S K to the user via the user device over the network . In one implementation the service provider device may be adapted to store a second encryption value L S K related to the first server hash data in a memory component wherein the second encryption value L S K comprises the server challenge data L the intersection data S and the third component of the user challenge data K . The service provider device may be adapted to store information related to the first server hash data including a value for the first server hash data.

In one aspect the server application e.g. service application of service provider device may be adapted to authenticate itself. As such in one implementation the server application may be adapted to compute H H L S K and return the computation to the web client e.g. user interface application for validation. In one example the random value L may be used in this context to make the hash unique for each authentication request.

In another aspect the server application e.g. service application of service provider device may store value L K S as a negotiated shared secret for subsequent encryption. In one example the hash of value L K S may be used as a shared encryption key. As such the value L K S may be used as a common negotiated encryption key for subsequent data exchange between the web client e.g. user interface application and the server application e.g. service application .

The service provider device is adapted to wait for server authentication by the user block . For example the user is adapted to receive the first server hash data i.e. server hash value H H L S K from the service provider device via the user device over the network . The user device is adapted to calculate second server hash data e.g. server hash value H H L S K from the server challenge data L the intersection data S and the third component of the user challenge data K . Then the user device is adapted to compare the first server hash data H H L S K with the second server hash data H H L S K to authenticate server identity of itself.

In one aspect the web client e.g. user interface application receives the value H H L S K and computes an equivalent value. If the two values match the server is authenticated. If not an authentication error occurs and the authentication protocol may be aborted.

If server identity is authenticated block then the user via the user device continues communicating with the server over the network block . The user device may send a message or alert to the service provider device confirming the continued communication. Otherwise if server identity is not authenticated block then the user via the user device aborts communicating with the server over the network block . The user device may send a message or alert to the service provider device confirming the aborted communication.

The service provider device is adapted to store results of the authentication process block . In one aspect the results may be stored in a memory component e.g. account database as part of the user account related to the user. As such whether communication with the user was continued block or aborted block the results of the authentication process may be stored along with any other information related to the authentication request.

In accordance with embodiments of the present disclosure the following discusses cryptographic analysis of the eZKPI algorithm including observations about security and cryptographic strength of eZKPI algorithm. All information exchange between web client e.g. user service application and server application e.g. service application are sent over the network via plain Http. It may be assumed that an eavesdropper or a man in the middle may be listening to the conversation. shows what the eavesdropper may be able to capture. For example as shown in the eavesdropper may only be able to capture a series of random numbers plus some non reversible hash values. The value for Consumer X is assumed to be publicly known as is the case with many online electronic commerce i.e. eCommerce sites or social networking sites which readily list the name of their users along with their profiles winning bids etc.

No direct information about point P and Q is sent over the wire. In one aspect this is in direct contrast to password authentication wherein the password or its hashed value is always sent over the wire. No direct information about the intersection point S is sent over the wire. In one aspect the intersection point value of S may be sent over in context of some non reversible strong hash function. The use of hash of a hash creates a stronger hash function than the original hash function. For this reason even a theoretically compromised hash function like MD5 or SHA 1 may be usable as a stronger version of SHA 2 256 bit.

In one aspect the use of random values K and L in the protocol may reduce play back by an eavesdropper or man in the middle in either the client or server direction. The use of random values K and L in the protocol create the basis for a shared encryption key.

In another aspect to calculate intersection point S all four points P Q R and T are needed. Since P and Q are never exchanged it is not possible to calculate S without their knowledge. Even if P or Q was compromised it would still not be possible for S to be computed from knowledge of only 3 points.

Thus since the intersection point S is not possible to calculate without knowledge of shared secret points the value L K S or more importantly its Hash value is a strong session encryption key. When used as encryption key along side some algorithm like AES 256 with minimum 14 rounds of encryption it results in a strong encryption of data content at comparable computation effort to that of Https.

In another aspect the key space for the eZKPI algorithm is larger than password authentication with passwords of 6 characters or less. For example approximately 2 70 keys versus 2 42 keys respectively. Even when points P and Q are derived from a password or a pass phrase the length of the selected pass phrase or password is longer than 6 characters which results in stronger and wider key space than typical web base passwords.

In accordance with embodiments of the present disclosure the eZKPI algorithm is adapted to avoid sending any information over the wire that may be intercepted and used by an eavesdropper or man in the middle. For example all data sent over the network may be assumed to have been captured by a man in the middle with no consequence.

In accordance with embodiments of the present disclosure the eZKPI algorithm is adapted to avoid the use of Https for the authentication process. In various aspects all data is sent over Http and assumes that there is an eavesdropper or man in the middle and the session may be completely proxied. For example no Https or use of X.509 certificates are utilized and only Http utilized throughout authentication protocol.

In accordance with embodiments of the present disclosure the eZKPI algorithm provides comparable computational effort if not less for using this protocol versus sending a Hashed Password over Https session. Https setup is quite computationally expensive due to digital signature validation and certificate chain validation of X.509 certificates. Also each data transfer has to be encrypted to keep it protected. In one aspect no encryption or certificate chain validation may be needed in the eZKPI algorithm protocol.

In accordance with embodiments of the present disclosure the eZKPI algorithm is adapted to substantially reduce or eliminate weak passwords and to have a wider key space in both the total possible keys. For example one range is about 2 70 keys or better. In one aspect weak passwords are avoided since all shared secret points are numbers that have no direct affinity to a child name pet name etc. At 12 digits for each shared secret logical point value total of 10 12 10 12 or roughly 2 3 12 2 3 12 or about 2 72 logical points are possible. This is much larger than the key space of 6 character passwords with roughly 70 characters in the mix e.g. upper lower alpha plus digits plus up to 8 punctuation characters or 70 6 or roughly 2 7 6 or 2 42 .

In accordance with embodiments of the present disclosure the eZKPI algorithm is adapted to keep user experience at the same level as password based authentication and keep computational aspects of password validation similar on client and server sides. In one aspect user experience for the eZKPI algorithm is similar to password authentication wherein the web client e.g. user service application is asked to input either a pass phrase a password or a set of P and Q numbers. This may be all the user is prompted to input and the remainder of the protocol may occur without further user involvement.

In accordance with embodiments of the present disclosure the eZKPI algorithm is adapted to have strong mutual authentication for the web client e.g. user service application and server application e.g. service application . In one aspect each authentication request is considered unique in both directions given random values for T R K and L. The eZKPI algorithm may be adapted to have a negotiated encryption key for subsequent encrypted data exchanges. The authentication process is highly secure with zero knowledge about shared secrets leaking out.

In accordance with embodiments of the present disclosure the eZKPI algorithm is adapted to substantially reduce or eliminate the possibility of dictionary attack and substantially reduce or eliminate phishing attacks targeting capture of identification data information and or credentials. For example to substantially reduce or eliminate phishing attacks the eZKPI algorithm is adapted to convert one of the factors of shared secret on client side say P to something the user Has. The other factor remains as what the user Knows. Under this model point P is encrypted with Hash of point Q value and stored on the local web client e.g. user service application device. This prevents the phisher to use the value Q standalone even if the phisher is able to capture value of Q. The phisher needs both values P and Q but P is only recoverable from the device to which it is bound to e.g. encrypted and stored thereto . For the phisher attack to be successful at recovering both P and Q the phisher needs to be more sophisticated than the mere URL redirection that is used today for common password phishing attacks. As such any such type of sophisticated attack has a reduced probability of success which dramatically decreases the effectiveness and frequency of phishing attacks.

In another example to substantially reduce or eliminate phishing attacks the eZKPI algorithm is adapted to use secure ID cards device ID information or other information only known to the user. In one implementation one of two secret points such as point P may be assumed to come from something the user Has e.g. secure ID card device ID number . The other point Q may be assumed to be something the user Knows e.g. secure password secure phrase etc. . Thus if the user is phished only what the user Knows may be compromised and what the user Has is not compromised. Similarly if the device with which the user is invoking the web client e.g. user service application is compromised what the user Has is compromised not what the user Knows. As such the effectiveness of phishing is substantially reduced or eliminated.

In accordance with embodiments of the present disclosure the eZKPI algorithm may be adapted to replace and modernize the web client authentication process. The eZKPI algorithm may be adapted to substantially reduce or eliminate the use of Https for many of the client server interactions while providing strong mutual authentication between clients and servers. The eZKPI algorithm may be adapted to substantially reduce or eliminate phishing attacks for web client password capture. The eZKPI algorithm may be adapted to operate along with other policy based session management controls for a more secure mobile user experience e.g. cell phone laptop tablet PC etc. .

In accordance with various embodiments of the present disclosure computer system such as a mobile communication device and or a network server includes a bus or other communication mechanism for communicating information which interconnects subsystems and components such as processing component e.g. processor micro controller digital signal processor DSP etc. system memory component e.g. RAM static storage component e.g. ROM disk drive component e.g. magnetic or optical network interface component e.g. modem or Ethernet card display component e.g. CRT or LCD input component e.g. keyboard cursor control component e.g. mouse or trackball image capture component e.g. digital camera and biometric capture component e.g. fingerprint reader voice analyzer retina scanner palm reader and or facial recognition device .

In one implementation disk drive component may comprise a database having one or more disk drive components. In another implementation user device e.g. mobile communication device such as a cell phone comprises biometric capture component as to thereby promote higher confidence in verifying the identity of the user accessing user device . As described herein the biometric authentication schemes of the present disclosure utilize biometric identification data and information captured by biometric capture component to validate user identity.

In accordance with embodiments of the present disclosure computer system performs specific operations by processor executing one or more sequences of one or more instructions contained in system memory component . Such instructions may be read into system memory component from another computer readable medium such as static storage component or disk drive component . In other embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the present disclosure.

Logic may be encoded in a computer readable medium which may refer to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. In various implementations non volatile media includes optical or magnetic disks such as disk drive component and volatile media includes dynamic memory such as system memory component . In one aspect data and information related to execution instructions may be transmitted to computer system via transmission media such as in the form of acoustic or light waves including those generated during radio wave and infrared data communications. In various implementations transmission media may include coaxial cables copper wire and fiber optics including wires that comprise bus

Some common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer is adapted to read.

In various embodiments of the present disclosure execution of instruction sequences to practice the present disclosure may be performed by computer system . In various other embodiments of the present disclosure a plurality of computer systems coupled by communication link e.g. network of such as a LAN WLAN PTSN and or various other wired or wireless networks including telecommunications mobile and cellular phone networks may perform instruction sequences to practice the present disclosure in coordination with one another.

Computer system may transmit and receive messages data information and instructions including one or more programs i.e. application code through communication link and communication interface . Received program code may be executed by processor as received and or stored in disk drive component or some other non volatile storage component for execution.

Where applicable various embodiments provided by the present disclosure may be implemented using hardware software or combinations of hardware and software. Also where applicable the various hardware components and or software components set forth herein may be combined into composite components comprising software hardware and or both without departing from the spirit of the present disclosure. Where applicable the various hardware components and or software components set forth herein may be separated into sub components comprising software hardware or both without departing from the scope of the present disclosure. In addition where applicable it is contemplated that software components may be implemented as hardware components and vice versa.

Software in accordance with the present disclosure such as program code and or data may be stored on one or more computer readable mediums. It is also contemplated that software identified herein may be implemented using one or more general purpose or specific purpose computers and or computer systems networked and or otherwise. Where applicable the ordering of various steps described herein may be changed combined into composite steps and or separated into sub steps to provide features described herein.

The foregoing disclosure is not intended to limit the present disclosure to the precise forms or particular fields of use disclosed. As such it is contemplated that various alternate embodiments and or modifications to the present disclosure whether explicitly described or implied herein are possible in light of the disclosure. Having thus described embodiments of the present disclosure persons of ordinary skill in the art will recognize that changes may be made in form and detail without departing from the scope of the present disclosure. Thus the present disclosure is limited only by the claims.

