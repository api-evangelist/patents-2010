---

title: Scalable route resolution
abstract: A router comprises a route resolution module to maintain routing information in accordance with a topology of a network, and an indirect next hop manager to maintain indirect next hop data that associates protocol next hops with forwarding next hops. The route resolution module invokes an application programming interface (API) of the indirect next hop manager for associating and disassociating protocol next hops and forwarding next hops. In response to a network event, the route resolution module can modify the indirect next hop data to reduce the time and resources necessary to perform route resolution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08014293&OS=08014293&RS=08014293
owner: Juniper Networks, Inc.
number: 08014293
owner_city: Sunnyvale
owner_country: US
publication_date: 20100622
---
This application is a continuation of U.S. application Ser. No. 11 670 272 filed Feb. 1 2007 now U.S. Pat. No. 7 746 790 which is a continuation of U.S. application Ser. No. 10 197 922 filed Jul. 17 2002 now U.S. Pat. No. 7 184 437 the entire contents of which are incorporated herein by reference.

The invention relates to computer networks and more particularly to techniques for routing packets within computer networks.

A computer network is a collection of interconnected computing devices that can exchange data and share resources. In a packet based network such as the Internet the computing devices communicate data by dividing the data into small blocks called packets which are individually routed across the network from a source device to a destination device. The destination device extracts the data from the packets and assembles the data into its original form. Dividing the data into packets enables the source device to resend only those individual packets that may be lost during transmission.

Certain devices referred to as routers maintain routing information that describes routes through the network. A route can generally be defined as a path between two locations on the network. Upon receiving an incoming packet the router examines information within the packet and forwards the packet in accordance with the routing information.

In order to maintain an accurate representation of the network routers periodically exchange routing information in accordance with a defined protocol such as the Border Gateway Protocol BGP . Large computer networks such as the Internet often include many routers grouped into administrative domains called autonomous systems. When routers of different autonomous systems use BGP to exchange information the protocol is referred to as External BGP EBGP . When routers within an autonomous system use BGP to exchange routing information the protocol is referred to as Internal BGP IBGP . Another example protocol for exchanging routing information is the Intermediate System to Intermediate System protocol ISIS which is an interior gateway routing protocol for IP networks for communicating link state information within an autonomous system. Other examples of interior routing protocols include the Open Shortest Path First OSPF and the Routing Information Protocol RIP .

When two routers initially connect they typically exchange all of their routing information. The routers send control messages to incrementally update the routing information when the network topology changes. For example the routers may send update messages to advertise newly available routes and to withdraw routes that are no longer available.

Conventional routers often maintain the routing information in the form of one or more routing tables or other data structures. The form and contents of the routing tables often depends on the routing algorithm implemented by the router. Furthermore some conventional routers generate and maintain forwarding information in accordance with the routing information. The forwarding information associates network routes with specific forwarding next hops and corresponding interface ports of the router. The forwarding information may therefore be thought of as a subset of the information contained within routing information. The process of generating the forwarding information is generally referred to as route resolution.

Due to the size and complexity of the routing information maintained by routers within a large network such as the Internet a single change in network topology may require route resolution for tens of thousands if not hundreds of thousands of individual routes. For example it is not uncommon for a single router at the edge of an autonomous system to represent the egress for thousands of routes originating within the system. Accordingly a single network event such as the failure of the edge router or a link coupled to the edge router can force routers within the system to perform route resolution for hundreds of thousands of routes which can consume considerable computing resources and substantially delay rerouting of packets.

In general the invention provides for increased efficiency in performing route resolution as is often required in the event of a change in network topology. According to the principles of the invention a router maintains indirect next hop data that maps protocol next hops to forwarding next hops. The mapping may be implemented as a numerical space in which each unique value represents a unique combination of a protocol next hop PNH and a forwarding next hop FNH . An index into the indirect next hop data may identify a unique PNH FNH pair in which the PNH represents a key associated with a unique FNH value. Other protocol level information can be incorporated within the key such as export policy Quality of Service QoS class VPN label MPLS label and the like.

In one embodiment the invention is directed to a method comprising routing packets within a network using indirect next hop data that associates protocol next hops with forwarding next hops. The method may include receiving a packet comprising network update information and modifying the indirect next hop data in response to the network update information to associate at least one of the protocol next hops with a different forwarding next hop.

The indirect next hop data may comprise addressable entries that store forwarding next hops and associated protocol next hops. In addition the entries may store forwarding next hops associated with protocol next hops in combination with other routing information such as routing labels Quality of Service requirements packet forwarding policies and the like.

In another embodiment the invention is directed to a router comprising a computer readable medium to store indirect next hop data having addressable elements wherein the elements uniquely associate protocol next hops with forwarding next hops.

In another embodiment the invention is directed to a computer readable medium comprising indirect next hop data having addressable elements wherein the elements uniquely associate protocol next hops with forwarding next hops.

In another embodiment the invention is directed to a router comprising a route resolution module to maintain routing information in accordance with a topology of a network and an indirect next hop manager to maintain indirect next hop data that associates protocol next hops with forwarding next hops. The route resolution module invokes an application programming interface API of the indirect next hop manager for associating and disassociating protocol next hops and forwarding next hops.

The invention may offer advantages including reducing the impact and latency of network topology changes by reducing the computer resources required to perform route resolution. For example the routing engine may issue a single message directing the forwarding engine to update a key value pair i.e. to associate a protocol next hop and any additional protocol level routing information with a different forwarding next hop. In this manner the routing engine may issue a limited number of messages to update forwarding information in response to a network event that affects thousands of routes having the same protocol next hop.

Accordingly processing requirements of the routing engine can be limited to the affected routes. Furthermore the number of messages between the routing engine and the packet forwarding engine need not be a direct function of the number of routes affected by the change as with conventional routers. Consequently the techniques may greatly reduce the amount of information exchanged between the routing engine and the packet forwarding engine. In addition the routing engine can perform route resolution to revise the resolution state of any dependent resolution nodes during background processing and after directing the packet forwarding engine to update forwarding information.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

As an edge router to autonomous system A router F may have a large number of routes originating within autonomous system A. The routes may be associated with router F for forwarding packets to autonomous systems B C. In the event of a network event such as failure of link router B recomputes the FNH for BGP routing information learned via router F. As a result router B performs route resolution by invoking a path selection algorithm for each known destination affected by the link failure until new paths for each known destination is selected. Accordingly a single network event can force a router such as router B to perform route resolution for hundreds of thousands of routes. For example failure of link can cause router B to perform route resolution for those routes whose preferred path had been via router E and now must reach router F via some other path. This computation can consume considerable computing resources and substantially delay rerouting of packets.

In order to reduce the time and resources necessary to perform route resolution router employ techniques that introduce an abstracted level of association that maps protocol level routing information to forwarding information. The mapping may be implemented as a numerical space in which each unique value is associated with a combination of a protocol level routing information and respective forwarding information in the form of a key value pair.

In one embodiment for example each unique index value of the numerical space referred to herein as indirect next hop data represents a unique combination of a protocol next hop PNH and a forwarding next hop FNH . A PNH as used herein generally refers to the next hop along a route as disseminated in accordance with a routing protocol such as BGP. For example BGP enabled router F may be considered the PNH for another BGP enabled router even though the BGP enabled routers may be connected by one or more non BGP enabled routers. The PNH typically specifies an Internet Protocol IP address of the router. Accordingly router B may associate router F as the PNH for routes originating from router F. Conversely an FNH from the source router along a given route typically refers to a neighboring router physically coupled to the source router along that route. For example the FNH for a route may specify a physical interface and media access control MAC address for the interface associated with the router.

In this manner each index into the indirect next hop data may identify a unique PNH FNH pair in which the PNH represents the key associated with a unique FNH value. Other protocol level information can be incorporated within the key such as export policy Quality of Service QoS class VPN label MPLS label and the like. As described in detail below routers make use of the indirect next hop data to reduce the computational requirements needed to perform route resolution in response to a network event.

Routing engine is primarily responsible for maintaining routing information to reflect the current network topology. In accordance with routing information packet forwarding engine maintains forwarding information that associates destination information such as IP address prefixes with specific FNHs and corresponding interface ports of interface cards IFCs . Forwarding information may therefore be thought of as a subset of the information contained within routing information .

Upon receiving an inbound packet packet forwarding engine directs the inbound packet to an appropriate IFC for transmission based on forwarding information . In one embodiment each of packet forwarding engine and routing engine may comprise one or more dedicated processors hardware and the like and may be communicatively coupled by data communication channel . Data communication channel may be a high speed network connection bus shared memory or other data communication mechanism.

Routing engine generates and maintains the indirect next hop INH data in accordance with routing information . As described above INH data A may comprise a mapping between protocol level routing information and respective forwarding information in the form of a key value pair. In one embodiment for example routing engine represents INH data A as unique associations of PNHs and FNHs. Accordingly routing engine may maintain a set of valid indexes into indirect next hop data A each of which identify a unique PNH FNH pair. Other protocol level information can be incorporated within the key such as export policy Quality of Service QoS class VPN label MPLS label and the like. Routing engine communicates INH data A to forwarding engine which stores the data as INH data B. Forwarding engine forwards packets in accordance with forwarding information and INH data B which may be a replica of INH data A.

Routing engine may maintain routing information to include a number of route entries within one or more data sources and one or more radix trees having route resolution nodes. Routing engine may maintain resolution nodes for routes having FNHs and for routes having INHs. The resolution nodes may be threaded together using pointers or linked lists to represent the FNH dependencies between routes. Routing engine performs route resolution by traversing the radix tree according to the PNH associated with the route.

In response to topology changes routing engine analyzes the dependencies within the routing information to determine FNHs for the affected routes. Based on the determination routing engine issues one or more messages directing forwarding engine to update the indirect next hop data B. For example routing engine may issue a single message directing the forwarding engine to update a key value pair i.e. to associate a PNH and any additional protocol level routing information with a different FNH. In this manner routing engine may issue a single message to update forwarding information in response to a network event that affects thousands of routes having the same PNH.

Upon issuing the messages routing engine proceeds to perform route resolution and regenerate routing information as necessary based on the dependencies between the routes. Accordingly processing requirements of the centralized routing engine can be limited to the affected routes. Furthermore the number of messages is no longer a function of the number of routes affected by the change as with conventional routers. Accordingly the techniques may greatly reduce the amount of information exchanged between routing engine and packet forwarding engine . In addition routing engine can perform route resolution to revise the resolution state of any dependent resolution nodes during background processing during periods of time in which a processor of the routing engine may otherwise be idle and after directing forwarding engine to update forwarding information .

The architecture of router illustrated in is for exemplary purposes only. The invention is not limited to this architecture. In other embodiments router may be configured in a variety of ways. In one embodiment for example forwarding engine routing engine or both may be replicated and incorporated directly within IFCs .

Routing engine includes network interface that provides a hardware interface for receiving and transmitting packets. Network interface may be for example a network interface coupled to forwarding engine via an internal data communication channel . Upon receiving a packet network interface typically generates a hardware interrupt causing operating system to invoke interrupt service routine to retrieve the inbound packet for processing.

RP process includes one or more threads A N that implement the various protocols supported by routing engine . RP process A may include for example threads that implement protocols for exchanging route information with other routing devices such as BPG and IS IS. RP process further includes a route resolution module and indirect next hop INH manager .

Route resolution module performs route resolution based on information received from the network protocol threads and updates routing information based on the resolution. In addition route resolution module invokes INH manager for generating and maintaining INH data . In particular INH manager presents an application programming interface API for associating and disassociating protocol level routing information such as a PNH and respective forwarding information such as a FNH in the form of a key value pair. In addition route resolution module maintains dependency data to track FNH dependencies between routes. Although illustrated as separate modules the functionality of route resolution module and INH manager may be incorporated into a single module.

To further illustrate the techniques assume router B receives a BGP message advertising a BGP route in which an Internet Protocol prefix 3 8 is associated with a PNH 4.0.0.1 of peer BGP router F. In addition assume router B receives an IS IS message associating a prefix 4 8 with an FNH of e0 to neighboring router E. In response to the messages route resolution module determines that PNH 4.0.0.1 satisfies IP prefix 4 8 and invokes INH manager to establish an indirect next hop associating the PNH of 4.0.0.1 with the FNH of e0. INH manager updates INH data by allocating a numerical INH index e.g. incrementing the INH index from 0 to 1 and associating the INH index with a new entry 4.0.0.1 e0 within INH data A.

Similarly assume router B receives a number of additional BGP messages from router F advertising routes having IP prefixes that satisfy the IP prefix 3 8 of the first example route such as prefixes of 3.0.1.7 16 3.204.0.1 16 3.204.0.10 24 and 3.204.0.8 24. Because these routes have the same PNH FNH pair i.e. 4.0.0.1 e0 route resolution module associates these routes with the same INH index as the first example route. In this sense these routes overlap with the more general route in which prefix 3 8 is associated with a PNH 4.0.0.1.

In addition the PNH may be combined with a label that represents a packet flow such as a VPN label MPLS label combinations thereof or the like. The PNH may be further combined with a routing information base RIB identifier that indicates which one of a plurality of routing information data sources with which the particular PNH is associated. Routing engine may for example comprise a plurality of databases storing routing information for different protocols sets of routes sub networks and the like. Other protocol level information can be incorporated within the key such as a Quality of Service QoS class and the like. In this manner routing engine can maintain a finer level of control over the INH data and can selectively update INH data to more precisely and efficiently reroute packet flow.

Upon receiving an update message that advertises or withdraws routes e.g. in response to a network event routing engine reads a block of data referred to as a key from the message that describes the affected route or routes. The key may for example specify a routing prefix. Routing engine resolves the key to one of the leaf nodes e.g. leaf node by sequentially testing bits within the key e.g. bits A B and C that represent any bits within the block of data. Based on the value of each bit routing engine follows the links of data structure through the various levels until reaching one of the leaf nodes to identify a FNH associated with the key.

Upon identifying a respective leaf node routing engine traverses any dependency links to determine whether any INHs are dependent upon the affected FNH. In the illustrated example indirect next hops INH 1 INH 2 and INH 3 depend of FNH e3. In addition indirect next hops INH 4 INH 5 and INH 6 recursively depend on INH 2.

Based on the determination route resolution module issues one or more messages directing INH manager and forwarding engine to update the INH data A B respectively. In the above example route resolution module may issue messages associating INH 1 INH 6 with a new FNH. In other words route resolution module may invoke the API presented by INH manager to change the key value pairs associated with INH 1 INH 6. In this manner RP process can resolve a plurality of routes even tens of thousands of routes to a different FNH by modifying a limited number of indirect next hops.

Based on the determination routing engine may generate one or more update messages directing INH manager and packet forwarding engine to appropriately update next hop data A B respectively . Routing engine communicates the messages to packet forwarding engine to update next hop data A. As described above packet forwarding engine may dynamically reroute packets by modifying an entry within the INH numerical space thereby modifying an association between a PNH and a FNH. Alternatively packet forwarding engine may make use of the information to regenerate forwarding information which may also be in the form of a tree like data structure.

Finally routing engine performs route resolution to update routing information . In particular routing engine may revise the resolution state of any dependent resolution nodes during background processing cycles and after directing forwarding engine to update forwarding information .

Various embodiments of the invention have been described. These and other embodiments are within the scope of the following claims.

