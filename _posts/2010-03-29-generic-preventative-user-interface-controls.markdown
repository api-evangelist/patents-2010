---

title: Generic preventative user interface controls
abstract: Techniques for enforcing policies. A user requests content from an application and content is retrieved from the application. A determination is made whether any policies apply to the content. A script adapted to modify processing of the content according to any applicable policies is injected into a response to the user. The script may be dynamically generated, pulled from a cache or other data store, or a combination thereof.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08312171&OS=08312171&RS=08312171
owner: Oracle International Corp.
number: 08312171
owner_city: Redwood Shores
owner_country: US
publication_date: 20100329
---
The present application claims the benefit of priority under 35 U.S.C. 119 e of U.S. Provisional Application No. 61 164 363 filed on Mar. 27 2009 the full disclosure of which is incorporated herein by reference. The present application also incorporates by reference the full disclosure of U.S. application Ser. No. 12 714 206 with the title of Techniques for Semantic Business Policy Composition. 

Businesses often have internal business policies intended to address a wide range of issues such as security privacy trade secrets criminal activity of employees or others with access to the business and many others. These business policies address various aspects of a business such as purchasing selling marketing and internal administration. Because of the large number of activities occurring during the course of running a business which may have various entities located in a variety of geographical locations it is often impractical to manually monitor all activities in which improper behavior or mistakes may occur.

One approach to implementing business policies has been to monitor and control computer systems used to facilitate a business activities. For example information regarding various activities such as sales and payroll are often stored in one or more data stores. This information may be analyzed to find activity that might be in violation of a business policy such as an item on an invoice or paycheck to an employee being outside of a specified range or a particular employee attempting to access information to which he or she is not entitled access.

Various information stored in a business computing systems may be accessed through various applications which may be specific to certain departments such as accounting human resources or other departments relevant to a business operations. Because information is typically needed by many people who may be located in diverse geographic locations applications are often hosted on a server and accessed over a communications network by various users using client devices such as a desktop or notebook computer. The client devices may communicate with the server using various protocols such as HTTP using a browser or other software. Users accessing the applications often have varied roles and responsibilities in an organization and as a result may have varied access to information and control over computing systems. For example for privacy reasons salaries personal data and other information may be accessible only to certain employees. Similarly in order to maintain data integrity and otherwise ensure efficient operation of a business the ability to change or delete certain electronically stored files may be limited to a certain class of employee.

Accordingly one way of enforcing policies is to control the behavior of applications to operate in accordance with a business policies such as in ways described above. For example if a business policy specifies that certain employees should not have access to certain data an application should not allow those employees to see the data. For instance it may be desirable for certain employees in an accounting department to have access to salary data while at the same time prohibiting those employees from being able to identify specific persons with specific salaries. Therefore enforcement of an appropriate business policy may allow an application used by those employees to view anonymized salary data without allowing viewing of specific data for a specific person.

As another example an interface for a particular business application may have a variety of navigational controls that allow the user to navigate to different interface pages. For users without organizational permission to view certain pages controls that would typically provide for navigation to those pages may be disabled and or hidden. For instance a human resources application may allow full access to employees in the human resources department but navigation to employee personal information may be blocked for employees of other department. Specific levels of access may be assigned for particular departments certain classes of employees and or other factors. Generally implementation of policies may involve any type of control over behavior of applications used in a business or organization.

Conventional approaches for modifying application behavior include modifying a core application using configuration or extension application programming interface and using a protocol specific such as HTTP specific proxy server that modifies the user interface. One problem with application specific configurations and extensions is that such an approach may be resource intensive and may require complex integration with a generic policy engine. A problem with a proxy server approach is that typically it is specific to HTTP and HTML and not applicable to other protocols such as SIP and other client types. In addition conventional proxy server approaches are not well suited for scalability.

Embodiments of the present invention provide techniques for enforcing policies. In one embodiment a computer implemented method performed under the control of one or more computer systems configured with executable instructions includes storing policies in a data store and receiving content that is responsive to a request for information from a client. One or more of the policies applicable to the content are identified based at least in part on the content. Executable instructions that are configured to cause the client to process the content according to the identified policies are determined based at least in part on the identified one or more policies. The content is modified to include the executable instructions and the modified content is provided to the client for processing in accordance with the executable instructions.

In an embodiment the content is a markup document and the executable instructions are a script. The content may include one or more document object model elements and identifying the one or more policies applicable to the content may include determining whether any of the policies apply to the one or more identified document object model elements. Further identifying the one or more policies applicable to the content may be further based at least in part on an identity of a user of the client. In one embodiment the executable instructions identify one or more portions of the content to be hidden by the client. The content may also include one or more navigational controls and the executable instructions may be configured to instruct the client to disable at least a subset of the one or more navigational controls.

In another embodiment a system for providing content is disclosed. The system may include a communication device operable to receive client requests for information and provide responses to the requests a data store having stored therein a plurality of policies and a computing device having one or more processors. In an embodiment the one or more processors are operable to receive content responsive to a request from the client identify based at least in part on the content one or more of the policies applicable to the content determine based at least in part on the identified one or more policies executable instructions that are configured to cause the client to process the content according to the identified one or more policies modify the content to include the executable instructions and provide the content for processing by the client. The computing device may be a proxy server that includes the communication device.

In an embodiment the content includes one or more document object model elements and the computing system is further operable to identify at least one of the one or more document object model elements to which one or more policies apply and the executable instructions are configured to cause the client to modify the identified at least one document object model element. The computing system may be further operable to determine the executable instructions based at least in part on an identity of a user of the client. In addition the executable instructions may identify one or more portions of the content to be hidden by the client. The content may also include one or more navigational controls and wherein the executable instructions are configured to instruct the client to disable at least a subset of the one or more navigational controls. The executable instructions may be configured to instruct the client to prevent the client from causing modification of a data store in response to input from a user of the client.

In yet another embodiment a computer readable storage medium storing a plurality of computer executable instructions that cause a computer system to enforce a set of policies is disclosed. The computer executable instructions may include instructions that cause the computer system to receive content that is responsive to request from a client to identify based at least in part on the content and based at least in part on a plurality of policies stored in a data store one or more of the policies applicable to the content to determine based at least in part on the identified one or more policies one or more scripts that are configured to cause the client to process the content according to the identified one or more policies to modify the content to include the script and to provide the content for processing by the client.

In an embodiment the content is an markup document and the one or more scripts include JavaScript . The content may include one or more document object model elements and the computer executable instructions may include instructions that cause the computer system to identify at least one of the one or more document object model elements to which one or more policies apply. The one or more scripts may be configured to cause the client to modify the identified at least one document object model element. The instructions that cause the computer system to determine one or more scripts may include instructions that cause the computer system to determine the one or more scripts based at least in part on an identity of a user of the client. In addition the one or more scripts identify one or more portions of the content to be hidden by the client. Also the content may include one or more navigational controls and the one or more scripts may be configured to instruct the client to disable at least a subset of the one or more navigational controls. The one or more scripts may be configured to instruct the client to prevent the client from causing modification of a data store in response to input from a user of the client.

In the following description for the purposes of explanation specific details are set forth in order to provide a thorough understanding of embodiments of the invention. However it will be apparent that the invention may be practiced without these specific details.

The following description describes an embodiment of the present invention in the business policy domain and specifically with the operation of applications in accordance with business policies. However the scope of the present invention is not restricted to business policies but may be applied to other domains or applications. For example any domain or application where a set of rules or criteria is used to analyze data may make use of the present invention. Examples of domains in which embodiments of the present invention may be used include segregation of duties separation of powers transaction monitoring and the like.

Embodiments of the present invention provide techniques for implementing policies. As used herein unless otherwise clear from context a policy includes a set of one or more conditions. A policy may also include a set of one or more actions to be taken when the set of conditions is met. For example a policy may be that certain data is only accessible to a certain class of employees such as employees from a specific department within an organization. In this example the conditions of the policy are that data be of a specified type and an action of the policy is that access to the data is or should be blocked to all users except those of a predefined class. As another example a policy may be that only specified people are allowed to direct an application to perform certain functions such as modifying certain data. In this instance the conditions are that a user not be part of a specified group and an action may be to disable a control providing for execution of an application function for non specified users. Embodiments of the present invention may be applied to control of application behavior as seen from a user perspective based on one or more conditions.

In an embodiment a method of enforcing policies is disclosed. The method includes storing policies in a data store receiving a request from a user for content and retrieving content applicable to the request. A set of policies applicable to the user is determined for at least a portion of the content applicable to the request and the content in a manner consistent with the set of policies applicable to the user and is displayed to the user. Displaying at least a portion of said content may include injecting a script into said content applicable to the request where the script comprises one or more instructions for modifying said content applicable to the request. In an embodiment the method may also include generating a script based on the set of policies applicable to the user and injecting said script into a response to said request that includes said content applicable to the request. Several versions of the script which may be JavaScript for execution by different applications may be generated. Further displaying at least a portion of said content may include providing a response to said request and modifying and or blocking at least one document object model element included in said response.

In accordance with another embodiment a method for enforcing policies is disclosed. The method may comprise storing policies in a data store receiving a request for content and generating scripts in accordance with said policies. A response to said request including said content and at least one of said scripts may be prepared. Any of said scripts may be adapted to control display of the content to the user in accordance with one or more of the policies. The method may include identifying a user having submitted said request and determining one or more of said policies applicable to said user. Determining one or more of the applicable policies may include retrieving information applicable to said user from a policy engine. Scripts generated may be retrieved from a cache or dynamically generated based on the request. The method may also include sending the response to a user that has issued the request for content.

In accordance with yet another embodiment a method for enforcing policies is disclosed. The method comprises selecting an element of a user interface defining at least one condition for the element defining at least one action for the element when said at least one condition is satisfied generating a script comprising one or more instructions for performing said at least one action and in a request to a user request for content injecting said script into content sent to said user if said at least one condition is satisfied said content adapted for display by said user interface. The method may also include using a policy engine to determine whether said at least one condition is satisfied in response to said user request and the policy engine may verify whether the condition is satisfied against a plurality of data stores. The method may also include generating the script in request to the user request where generating the script may include generating a plurality of versions of the script. The action defined in accordance with the disclosed method may include modifying display of said user interface.

In accordance with yet another embodiment a system that operates in accordance with one or more policies is disclosed. The system comprises a client device adapted to display a user interface to a user a data store adapted to store one or more policies and a computing system communicatively coupled to the data store and the client device. In an embodiment the computing system is adapted to execute an application generate content based on execution of said application generate script that modifies the content according to one or more policies stored in the data store and provide the content and the script to the client device through the user interface. The computing system may be further adapted to inject the script into a document that includes at least a portion of said content and or to determine a set of policies applicable to the user and or to generate a plurality of versions of said script which may be JavaScript . A script generated may modify and or remove at least one document object model element used in displaying said content.

In accordance with yet another embodiment a computer readable storage medium storing a plurality of computer executable instructions for enforcing policies where the plurality instructions comprising instructions for performing a method of enforcing policies is disclosed. For example in an embodiment the method comprises storing policies in a data store receiving a request for content and generating scripts in accordance with said policies and preparing a response to said request where the response includes the content and at least one of the scripts. A response to said request including said content and at least one of said scripts may be prepared. Any of said scripts may be adapted to control display of the content to the user in accordance with one or more of the policies. The method may include identifying a user having submitted said request and determining one or more of said policies applicable to said user. Determining one or more of the applicable policies may include retrieving information applicable to said user from a policy engine. Scripts generated may be retrieved from a cache or dynamically generated based on the request. The method may also include sending the response to a user that has issued the request for content.

In a specific embodiment in a client server architecture content payload delivered to a client is modified such that the behavior of an application as exposed through the user interface viewed by a user at the client is in accordance with one or more policies. In this manner content and or features of a user interface may be modified by changing a user s view of a particular application such as by modifying controls and or modifying content. For example a client executable script such as Javascript or another script in another suitable scripting language may be injected or otherwise inserted into an HTML page sent to the client from the server in order to remove add or modify content and or other features delivered to the user such as by removing adding or modifying Document Object Model DOM elements. Other examples of content modification in accordance with an embodiment can be found in Appendix I of U.S. Provisional Application No. 61 164 363. As used herein script is code or instructions that can be executed by the client.

For example in an embodiment a user uses a web browser in order to access a business application. Accessing the application may involve directing the browser to an address for the application and identifying himself or herself by inputting login information. Use of the application by the user may involve the browser sending requests to a server and receiving responses to the requests. In an embodiment in response to a user s action such as selection of a navigational control a browser may make a request to an enterprise resource planning ERP system such as a request for data matching user specified criteria by sending a URL pattern. The request may first arrive at a proxy server which will interact with a central policy engine to determine what if any policies apply to the user. An example of a suitable policy engine can be found in Appendix II of U.S. Provisional Application No. 61 164 363.

The proxy server may also interact with a business application in order to retrieve the content requested by the user or retrieve the content from a cache. If any policies apply to the user the proxy server may inject appropriate script into the content returned to the user. For example scripts may be stored in a cache for retrieval by the proxy server. Also scripts may be generated dynamically. For example the JavaScript code may be generated directly or Java code that modifies the user interface according to applicable policies may be created and then converted to appropriate JavaScript . For instance a Google Web Tools GWT Java to JavaScript compiler may be used in order to provide a script that is compatible with commonly used browsers. Once generated the proxy server may inject script into the HTML or other content returned to the user. In an embodiment an Apache Proxy Plugin is used to inject script. Further details are located in Appendix I of U.S. Provisional Application No. 61 164 363.

In addition to the above techniques are provided for authoring policies in accordance with an embodiment. In particular in an embodiment content from various business applications can be viewed through either a user module or a developer module. Content presented through the developer module may be similar to content viewed through the user module although in an embodiment the developer module includes more functionality than that which is provided with a user module. In particular in an embodiment a user of the developer module may select one or more elements of the interface such as by right clicking with a mouse or otherwise selecting and define specific policies with respect to those elements.

For example selecting an element of the user interface through the developer module may provide the element s location in the DOM the data type of the element and or other information. In addition one or more criteria may be able to be selected for the element and one or more actions may be specified to be performed if the conditions are met. Thus a developer may specify that a value in an element is hidden except for certain classes of employees. As another example navigation controls to various portions of an application may be disabled for certain employees or similarly navigation controls may only be enabled for certain employees. Conditions and actions may be set using common user interface controls such as radio buttons drop down boxes and other controls. In an embodiment a free form text field is included for a condition or a control so that a developer may using an appropriate language such as JavaScript create his or her own conditions and or actions.

It should be understood that the present disclosure provides a specific example where a proxy server interacts with one or more business applications and injects appropriate script into content payload to be delivered to a user s browser in order to control the content displayed to the user but that other configurations are possible in accordance with the present invention. For example other computing devices other than those disclosed which may be in configurations different than those disclosed herein may be used to execute the various functions disclosed herein. In addition while examples of specific languages used to implement the various functions are given other appropriate languages may be used depending on specific contexts.

Bus subsystem provides a mechanism for letting the various components and subsystems of computer system communicate with each other as intended. Although bus subsystem is shown schematically as a single bus alternative embodiments of the bus subsystem may utilize multiple busses.

Network interface subsystem provides an interface to other computer systems networks and portals. Network interface subsystem serves as an interface for receiving data from and transmitting data to other systems from computer system .

User interface input devices may include a keyboard pointing devices such as a mouse trackball touchpad or graphics tablet a scanner a barcode scanner a touch screen incorporated into the display audio input devices such as voice recognition systems microphones and other types of input devices. In general use of the term input device is intended to include all possible types of devices and mechanisms for inputting information to computer system . A user may use an input device to provide a graphical representation of a policy.

User interface output devices may include a display subsystem a printer a fax machine or non visual displays such as audio output devices etc. The display subsystem may be a cathode ray tube CRT a flat panel device such as a liquid crystal display LCD or a projection device. In general use of the term output device is intended to include all possible types of devices and mechanisms for outputting information from computer system . The process of manipulating the graphical objects as well as results of implementing policies may be output to the user via an output device.

Storage subsystem provides a computer readable medium for storing the basic programming and data constructs that provide the functionality of the present invention. Software programs code modules instructions that when executed by a processor provide the functionality of the present invention may be stored in storage subsystem . These software modules or instructions may be executed by processor s . Storage subsystem may also provide a repository for storing data used in accordance with the present invention for example the data stored in the diagnostic data repository. For example storage subsystem provides a storage medium for persisting one or more ontologies. Storage subsystem may comprise memory subsystem and file disk storage subsystem .

Memory subsystem may include a number of memories including a main random access memory RAM for storage of instructions and data during program execution and a read only memory ROM in which fixed instructions are stored. File storage subsystem provides persistent non volatile storage for program and data files and may include a hard disk drive a floppy disk drive along with associated removable media a Compact Disk Read Only Memory CD ROM drive an optical drive removable media cartridges and other like storage media.

Computer system can be of various types including a personal computer a portable computer a workstation a network computer a mainframe a kiosk a server or any other data processing system. Due to the ever changing nature of computers and networks the description of computer system depicted in is intended only as a specific example for purposes of illustrating the preferred embodiment of the computer system. Many other configurations having more or fewer components than the system depicted in are possible.

In accordance with an embodiment the enterprise computer system includes a first location and a second location communicatively connected by a network such as the Internet or any suitable communications network or combination of networks. In an embodiment the first location and second location correspond to separate physical locations of a business such as offices in two separate cities states or countries. While shows two locations it should be understood that a business may have only a single location and may include more than two locations. As shown in the drawing the enterprise computer system may include one or more user workstations a development server and a developer workstation . The user workstation development server and or development workstation may be physically present at any of the locations or at separate locations. In an embodiment the user workstation and development server are communicatively connected to the network so as to access various components of the enterprise computer system. For example the user workstation may include a browser used for viewing content provided from the Internet and or from other systems within the business. Further the developer workstation may be connected to the network through the development server and may be adapted to provide certain employees within the organization the ability to configure install modify and perform other actions in connection with the business computing systems. As an example a developer within the organization may utilize the developer workstation in order to create the policies that are used to define scripts injected into payload content as described above and send the policies over the network to an appropriate data store.

As noted above the first location may include various computer systems used in operating the business. For example in the example shown the first location includes a web server configured to receive requests from various users such as from a user of the user workstation and to provide requests over the network . While shows the web server as a hardware component as with any of the servers described herein the web server may also be a software module operating on a computer system. Responses from the web server can be provided from a variety of sources such as from components of an internal computer system of the first location or from other web servers located at other possibly third party locations. The web server may also include a proxy server that injects script into content payload delivered to the user workstation in accordance with embodiments of the invention described herein.

In an embodiment the web server is communicably coupled to an application server which is a hardware component or software module configured to run one or more applications such as one or more policy engines and other applications for managing organizational data. As is known a user of the user workstation may send a request to the web server that specifies a specific action to be taken in connection with an internal business application implemented on the application server . The web server then relays the request to the application server which takes the specified action and returns the result of that action to the web server which in turn relays the result to the user workstation . In accordance with an embodiment the web server or other component may modify the content returned to the user workstation in accordance with one or more policies applicable to a user of the user workstation .

As shown in the example of the application server interacts with data stored in a first data store and a second data store each of which stores data relevant to the business operation such as in one or more relational or other databases. While the disclosed example shows the first location having two data stores it should be understood that the first location may have less than two data stores or more than two data stores. Information in the data stores can include a wide variety of data such as data relating to business transactions invoices human resources data user account data receipts bank account data accounting data payroll data and generally any data relevant to the operation of a particular business.

In an embodiment the second location includes its own web server application server first data store and second data store which may be configured to function similarly to the identically named components above.

In an embodiment communications between the browser and the ERP system is transmitted through a governor . In an embodiment the governor is a computing device operable to receive requests from the browser forward those requests to an appropriate server of the ERP system receive responses to the requests from the appropriate server of the ERP system and forward those responses to the browser .

In an embodiment the governor applies one or more policies to the communications occurring between the ERP system. Examples include preventing or restricting access to certain data in the ERP system preventing certain navigational sequences by the browser modifying display content to be hidden or read only pre populating fields with calculated values validating data entries validating transactions displaying messages to the user displaying required approval requests updating approval status and the like. The policies implemented by the governor may be based on a variety of conditions such as conditions related to data in the communications characteristics of the browser s requests a user identity and the like. For example the governor may include a Single Sign On SSO adaptor that allows a user of the browser to provide login credentials a single time in order to authenticate with a plurality of the subsystems of the ERP system and remain authenticated with the subsystems for a complete session. Content provided from the subsystems of the ERP system may be modified based on a classification of the user which may be ascertained by the user s login credentials. As a concrete example the governor may use the user s identity to determine that the user is an employee of the accounting department and therefore the governor may anonymize any salary data sent from a human resources system of the ERP system . Using this same example the governor may prevent the user from modifying salary data sent from the human resources system and or from navigating to one or more content pages of the human resources system.

In an embodiment the governor communicates with a policy engine which receives data from the various data stores of the ERP system and analyzes the data to determine whether one or more policies stored in a policy repository are implemented. An example of a policy engine appears in U.S. patent application Ser. No. 12 714 206 filed Feb. 26 2010 which is incorporated herein by reference for all purposes. However other policy engines may be used. A suitable policy engine is available in Oracle Application Access Controls Governor 8.0 available from Oracle Corporation.

As noted in an embodiment when content is directed from the ERP system toward the browser the governor receives the content and generates a message that is sent to the policy engine . The message may identify information about the content from which the policy engine may determine whether any policies in the policy repository are invoked. Information about the content in the message may indicate which semantic objects are included in the content employees employee classes invoices line items and the like identify the user of the browser and or a classification the user is in and the like. The message may also include the data included in the content such as numerical values employee names identification numbers and the like. In an embodiment the governor identifies document object model DOM elements in the content and converts the DOM elements into data usable by the policy engine according to a mapping that associates DOM elements with corresponding semantic objects. For example the governor may convert information from the content into a file containing information organized according to the Ontology Web Language OWL according to a mapping that associates DOM elements with OWL elements of an OWL based schema.

Upon receipt of the message the policy engine inspects the message and determines whether conditions of any of the policies in the policy repository are met. If the conditions of any of the policies are met then the policy engine sends a message to the governor that indicates to the governor how the content should be modified before it is sent to the browser . In an embodiment the governor caches a plurality of JavaScript files that may be applicable and based on the message the governor selects appropriate JavaScript files from the cache and injects the script of the files appropriately. In an embodiment the injected JavaScript modifies the content such that the user s experience with the content is different from the experience provided to the user had the JavaScript not been injected. For example as noted the injected JavaScript may change the information that is displayed to the user disable one or more navigational controls add one or more navigational controls prevent access and or modification to data and or cause other changes to the user s experience with the content.

Once the content is modified by the governor the modified content in an embodiment is sent to the browser for display. The browser receives the modified content and renders and displays the modified content in accordance with the injected JavaScript . Thus in an embodiment the browser displays the modified content according to instructions of the injected JavaScript .

Accordingly shows an example page which corresponds to the page of . In this illustrative embodiment the page has been modified in accordance with one or more policies that require salary data to be anonymized and changes to the salary data prevented. For instance the user who navigated to the page may be an employee who is at most allowed to view anonymized salary data and who is not authorized to change the salary data. In an embodiment the content of the page includes a script which instructs a browser to replace employee names in the first column of the table with a series of the letter x and which removes the column of the table that includes the change buttons. Additionally the script causes the rows of the table to be in a different order than they appear in the page of . Thus the script of the page prevents a user whose browser renders the page from identifying which employees are associated with which salaries and from changing any of the values. Also the content of the page may include all of the information of the content of the page of with the script modifying the user s experience such that all of the information of the page is not displayed on the page .

In an embodiment content that is responsive to a client request for information is received . The content may be received in transit from a content source to a receiver. For example the content may be received by a proxy server through which communications between a browser on a client computer and a web server of an ERP system pass although the content may be received in other ways. Generally the content may be received in any manner.

Once the content is received in an embodiment one or more policies applicable to the content is identified . In an embodiment a policy is applicable to the content if the conditions of the policy are met. The conditions of the policy may be based on some or all of the content itself a user identity or other information. An illustrative example of identifying policies applicable to the content in accordance with an embodiment is described below in connection with . Returning to in an embodiment a script for modifying a user s experience with the content is determined . Determining the script may be performed in any suitable way. In an embodiment scripts are cached in a data store in a manner allowing for selection of an appropriate script. For example the scripts in the data store may be indexed according to one or more indexes that allow identification of an appropriate script by the user of one or more indices. For example if a particular policy is identified the policy may be associated with a unique identifier that may be used to select one or more scripts associated with the policy. Turning to the example of the policy that employees of a particular class may only view anonymized salary data and may not change salary data may be associated by an index with a script which replaces employee names with a series of the letter X or which otherwise anonymizes names . The policy may be also be associated by the index with a script that randomizes the rows of the table or that orders the rows by the salary value or otherwise changes the order to the tables. The policy may yet still be associated by the index with a script that disables removes or otherwise modifies change buttons in order to prevent changing of data. As noted scripts associated with a policy may perform other actions such as preventing information such as images or other content from being retrieved from a server removing hyperlinks or other navigational content and otherwise.

Scripts may also be determined in other ways. For example scripts may be dynamically generated. Java code for instance may be generated based on one or more factors such as the content and the identity of the user when the content is received. The Java code may be converted to a script for injection into the content. The Google Web Toolkit GWT available from Google Inc. or other suitable tool may be used to generate JavaScript dynamically and or statically. Generally any way of determining one or more scripts may be used. As another example templates of Java code may be marshaled depending on factors such as the content user identity and other factors. As above the Java code may be converted to JavaScript .

In an embodiment the determined scripts are injected into the content. For example if the content is associated with an HTML document the script may be inserted into the HTML document in an appropriate location such as immediately before a tag such that the script is executed first by a browser that receives the content. The script may be located in other locations in the content as appropriate. For example various scripts may be injected into various locations of the content as appropriate for implementation of a policy.

The following is an illustrative example of hypertext markup language HTML code prior to injection of a script in accordance with one or more policies.

It should be noted that while the illustrative example of the preceding paragraph shows JavaScript being injected by a link to externally stored JavaScript other scripts may be used and other methods of injecting the script may be practiced. For instance the code of a script may be placed directly into the HTML or other code for the document instead or in addition to a link that specifies a location of externally stored script. Generally any method of injecting script into content provided to a requestor of the content may be used.

In an embodiment the content with the injected script or scripts is provided to the client. For example the content with script s may be directed toward an Internet Protocol IP address of the client. In this manner the client will receive the content execute the script and the user s experience with the content will be in accordance with the identified policies.

As discussed above shows a process of identifying policies applicable to content in accordance with an embodiment. In an embodiment the content is embodied in a document or several documents that are organized according to a DOM. For example the content may be encoded as a hypertext markup language HTML document. Accordingly once the content is received DOM elements are identified in accordance with an embodiment. Identifying the DOM elements may include identifying the DOM of the document. With the DOM elements identified the DOM elements are accessed sequentially in an embodiment although the DOM elements may be otherwise accessed. When each next DOM element is accessed policies applicable to the accessed DOM are identified . For instance in an embodiment DOM elements may be associated by a mapping with semantic objects such as employees employee classes invoices payments line items credit card charges and the like. A policy engine such as the policy engine described above determines whether the conditions of any policies are met for the accessed DOM element. If the DOM element is a table having employee salaries for instance a determination may be made whether any policies are applicable to employee salaries. As discussed determining whether any policies are applicable to the employee salaries may be based on other factors such as the identity of the user who has requested the content or other factors.

Once the one or more policies applicable to the accessed DOM are identified the identified one or more policies may be added to a list. For example unique identifiers of policies may be added to a list or other object. Once policies applicable to the accessed DOM element are identified a determination is made whether all of the elements have been processed. If not the next DOM element is accessed and the process continues as above. It should be noted that not all DOM elements need be accessed. For example continuing with the table example once policies applicable to the table are identified the table entry DOM elements sub elements of the table DOM element may not be accessed. However all DOM elements may be accessed in an embodiment. If all elements have been accessed the process ends in an embodiment.

Although specific embodiments of the invention have been described various modifications alterations alternative constructions and equivalents are also encompassed within the scope of the invention. Embodiments of the present invention are not restricted to operation within certain specific data processing environments but are free to operate within a plurality of data processing environments. Additionally although embodiments of the present invention have been described using a particular series of transactions and steps it should be apparent to those skilled in the art that the scope of the present invention is not limited to the described series of transactions and steps.

Further while embodiments of the present invention have been described using a particular combination of hardware and software it should be recognized that other combinations of hardware and software are also within the scope of the present invention. Embodiments of the present invention may be implemented only in hardware or only in software or using combinations thereof.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that additions subtractions deletions and other modifications and changes may be made thereunto without departing from the broader spirit and scope as set forth in the claims.

