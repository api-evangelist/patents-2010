---

title: Autonomous mobile blogging
abstract: An autonomous blog engine is implemented to enable the autonomous generation of a blog. The autonomous blog engine receives media objects that are captured by an electronic device during a trip session. The autonomous blog engine determines a place of interest based on photographs selected from the media objects. The autonomous blog engine then generates textual content using one or more pre-stored knowledge items that include information on the place of interest. The autonomous blog engine further autonomously publishes a blog entry on the place of interest that includes one or more photographs from the photograph cluster and the textual content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08655889&OS=08655889&RS=08655889
owner: Microsoft Corporation
number: 08655889
owner_city: Redmond
owner_country: US
publication_date: 20101210
---
Mobile devices such as camera phones are increasingly common. These mobile devices may be capable of acquiring storing transmitting and presenting text images video and audio data. Thus more and more people are using their mobile devices to record daily experiences. For example camera phones are often used by users to record images of various locations visited during a travel excursion. However while users frequently desire to share text images and other data related to their daily experiences with their friends using their mobile devices such tasks may prove to be complex and cumbersome. For example in order for a user to share photographs taken with a camera phone the user may spend a considerable amount of time selecting transferring arranging editing and or tagging the photographs for presentation on a blogging website. Such inconvenience may reduce a user s desire to share daily experiences as captured by a mobile device or may result in a user sharing image video or audio data of his or her experiences in a haphazard and incoherent manner. Moreover due to the fact that mobile devices generally have small displays and user interfaces the tasks associated with composing and arranging media content for display on blogging website in real time or near real time may be especially difficult.

Described herein are techniques that enable a mobile device to leverage the power of cloud computing and network connectivity to become an effective tool for the automatic creation of blogs. In various embodiments the compilation and annotation of media objects e.g. images video objects audio objects and or multimedia objects captured by the mobile device as well as the arrangement of the media objects with textual information into a blog may be performed automatically by an autonomous blog engine. The autonomous blog engine may be implemented on one or more servers of a computing cloud. Accordingly a user may simply use the mobile device to capture photographs video and audio of various places as desired and the autonomous blog engine may automatically generate a blog based on the captured data and further post the blog on a blog website.

In at least one embodiment an autonomous blog engine is implemented to enable the autonomous generation of a blog. The autonomous blog engine receives media objects that are captured by an electronic device during a trip session. The autonomous blog engine initially clusters media objects that are photographs into a photograph cluster. Subsequently the autonomous blog engine determines a place of interest that corresponds to the photograph cluster. The autonomous blog engine then autonomously publishes a blog entry on the place of interest that includes one or more photographs from the photograph cluster and textual content that is generated using one or more pre stored knowledge items that include information about the place of interest.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

A mobile device may be implemented to leverage the power of cloud computing and network connectivity to become an effective tool for the automatic creation of blogs. The compilation and annotation of media objects e.g. photographs video clips audio clips and or multimedia clips captured by the mobile device as well as the arrangement of the media objects with textual information into a blog may be performed automatically by an autonomous blog engine. The autonomous blog engine may be implemented on one or more servers of a computing cloud. Accordingly a user may use the mobile device to capture photographs video and audio of various locations as desired and the autonomous blog engine may automatically generate a blog based on the captured data and further post the blog on a blog website.

The mobile device and the autonomous blog engine described herein enable a user to create a blog regarding events and experiences of the user with minimal manual input. In one example as the user travels around different locations acquiring media objects at different places of interest using the mobile device the autonomous blog engine may automatically create blog entries for at least some of the places of interest and upload the blog entries to a blogging site in real time or near real time. In another example the autonomous blog engine may automatically create the blog entries for at least some of the places of interest at a later time.

Thus users who are equipped with mobile devices that communicate with the autonomous blog engine are able to share events and experiences with other users with minimal interruption to their normal routine and without spending considerable time and effort planning and creating a blog. Various example implementations of the autonomous mobile blogging techniques are described below with reference to .

The electronic device may capture media objects e.g. photographs video clips audio clips and or multimedia clips using on board and or attached input interfaces . The input interfaces may include a still image camera a video camera a microphone and or the like. The electronic device may also capture contextual information such geolocation data and sensor data . The geolocation data indicates the position of the electronic device with respect to the globe. The sensor data may include motion data compass heading data speed velocity and or the like and may be gathered using on board and or attached sensors . Subsequently the electronic device may upload the media objects and the contextual information to the one or more servers .

The one or more servers support an autonomous blog engine that analyzes the contextual information and or the media objects to determine the various physical or geographical locations associated with the media objects as well as the movement of the electronic device around the various locations. Thus as the user who is carrying the electronic device visits different locations and captures media objects at different places of interest POIs that are within the different locations the autonomous blog engine may automatically create blog entries for at least some of the sites of the interest. Each of the blog entries may include photographs audio and or video data acquired at the location as well as textual descriptions related to the location. As further described below depending on a user affection rating e.g. positive neutral or negative assigned by the user to each POI the textual description for a POI may be a positive description a neutral description or a negative description. The autonomous blog engine may further automatically upload each blog entry to a blog website on a blog server that is pre designated by the user. In some embodiments if the user desires the user may exert some control over the blog generation process. For example the autonomous blog engine may be configured to prompt the user to review edit and or approve the content of a blog entry prior to the blog entry being uploaded to the blog web site.

The electronic device may be any mobile electronic device that is capable of acquiring text image video and audio data using input interfaces e.g. camera keyboard touch display microphone and or the like process such data and output the processed data via output interfaces e.g. displays screens speakers and or the like . The electronic device may include various sensors that acquire other information. The sensors may include a geolocation sensor such as a global position system GPS sensor and or a network assisted GPS sensor. The sensors may also include a compass direction sensor a motion sensor an inertia sensor and or the like. In various embodiments the electronic device may be a smart phone a personal digital assistant PDA a digital camera a portable media player a laptop computer a handheld computer and or the like.

The electronic device may further include one or more processors memory as well as wireless and or wired communication interface components that enable the electronic device to transmit and receive data via the network . The memory may store an operating system .

The operating system may include components that enable the electronic device to receive data via various inputs e.g. user controls network interfaces and or memory devices and process the data using the one or more processors to generate output. The operating system may include one or more components that present the output e.g. display an image on an electronic display store data in memory transmit data to another electronic device etc. . Additionally the operating system may include other components that perform other functions generally associated with an operating system.

The memory may further store components that support the collection of media objects associated contextual information as well as the configuration of settings related to blog publishing. The components or modules may include routines programs instructions objects scripts and or data structures that perform particular tasks or implement particular abstract data types. The components may include but are not limited to a login module a data acquisition module a reformat module a location module a preference module and an edit module .

The login module may authenticate the electronic device with the autonomous blog engine that is implemented on the one or more servers . In some embodiments the login module may when the device is powered on automatically authenticate the electronic device using authentication credentials that are pre stored on the electronic device . In other embodiments the login module may be configured to prompt the user of the electronic device to supply the appropriate authentication credentials. The authentication credentials may include but are not limited to a user name a password an electronic certificate a biometric characteristic and or the like.

The data acquisition module may monitor a media folder that is on the electronic device . The data acquisition module may perform the monitoring following the authentication of the electronic to the autonomous blog engine . The media folder may be a file directory location in the memory where media objects e.g. photographs video clips audio clips and or multimedia clips acquired by the input interfaces of the electronic device are stored. However in some embodiments rather than a single media folder the electronic device may have multiple media folders. For example the mobile device may store acquired photographs in a first media folder audio data in a second folder video data in a third folder and or the like. In such embodiments the data acquisition module may perform its functions on the plurality of media folders in the same manner.

Thus when the data acquisition module determines that a media object has been acquired by the electronic device the data acquisition module may obtain the geolocation information that is associated with the media object . In various embodiments the data acquisition module may interface with the geolocation sensor on the electronic device to acquire the geolocation information. In other embodiments in which the electronic device automatically embeds the geolocation information as metadata within the newly acquired media object the data acquisition module may read the media object and extract the geolocation information. The data acquisition module may also extract time and date information associated with the capture of media object . Subsequently the data acquisition module may upload the newly acquired media object and associated information to the one or more servers . The associated information may include the geolocation information a user identifier the time and date the media object was acquired and or the like.

In some embodiments the data acquisition module may use the reformat module to reformat each media object prior to uploading the media object to the autonomous blog engine . In various embodiments the reformat module may reduce the file size of a media object to conform to a predetermined data size limit when the file size of the media object exceeds the limit. For example when the media object is a photograph i.e. still image the reformat module may reduce the aspect ratios of the still image so that the size of the resultant image is equal to or less than the predetermined file size limit. In another example the reformat module may also cut a portion of a media object in the form of an audio clip a video data clip or a multimedia clip that includes both audio and video if such a media object exceeds a corresponding file size limit. In various embodiments the reformat module may use different size limits for different types of media objects. For instance a 100 kilobyte KB limit may be used for photographs while a one megabyte MB limit may be used for multimedia objects. In other embodiments the reformat module may reduce the resolution of a media object in the form of a still image a video data clip or a multimedia clip if such a media object exceeds a corresponding resolution limit. For example a 600 pixels by 800 pixels resolution limit may be used for photographs while a resolution limit of 240 pixels by 320 pixels may be used for video data clips or multimedia clips.

The location module may periodically query the geolocation sensor to determine a current geolocation of the electronic device . The location module may further upload the determined geolocation to the autonomous blog engine . As further described below the geolocations obtained by the location module may be useful in generating a blog in real time or near real time.

The preference module may enable the user of the electronic device to interact with the autonomous blog engine on the one or more servers . Through the preference module the user may configure various autonomous blog generation options. Example autonomous blog generation options provided by the preference module are depicted in .

Additionally the preference module may also enable the user of the electronic device to configure a desired blog generation mode for the autonomous blog engine . As shown in example display a user may command the autonomous blog engine to generate blogs using one of three different modes 1 fully automatic mode 2 semi automatic mode and 3 manual mode . During the fully automatic mode the autonomous blog engine analyzes the acquired media objects and contextual information received from the electronic device as the user moves from location to location and automatically generates and publishes blog entries about at least some of the locations to a blogging website without any user intervention. In the semi automatic mode the autonomous blog engine generates blog entries in the same manner but the user may be prompted to initiate the generation of each blog entry. For example after the autonomous blog engine determines that the user has finished visiting a location the autonomous blog engine may display a selection menu on the display of the electronic device so that the user may activate an option on the selection menu to initiate the generation of the blog entry or cancel the generation of the blog entry. Further while selecting the semi automatic mode the user may further select between an option of reviewing and or editing the blog entry prior to publication or an option of blog generation and publication without further user intervention.

In such instances following the blog entry generation the preference module may use the edit module to display one or more generated blog entries from the autonomous blog engine on the electronic device receive edits from the user and send the one or more edited blog entries to the autonomous blog engine for eventual publishing. In various embodiments the edit module may enable the user to edit the textual content and the arrangement of the media objects e.g. photographs audio clips video clips and or multimedia clips in the blog entries generated by the autonomous blog engine . In some embodiments the edit module may also provide the user with an option to cancel the publication of individual blog entries.

In the manual mode the user may manually trigger analysis and generation of a blog entry for publication after visiting a location and acquiring media objects at the location. In some embodiments while selecting the manual mode the user may further select between an option of reviewing and or editing the blog entry prior to publication or an option of blog generation and publication without further user intervention.

The preference module may further enable the user of the electronic device to assign affection ratings to different locations. Thus as the user captures media objects at various locations the user may also input a corresponding affection rating for each location. As shown in example display the preference module may provide a set of radio buttons for the input of affection ratings. Accordingly as the user is capturing media objects at a location the user may select the positive radio button if the user has a favorable impression of the location. Alternatively if the user has a no particular feelings regarding a location as the user is capturing media objects at the location the user may select the neutral radio button . In contrast if the user has a negative impression of a location the user may select the negative radio button as the user is capturing media objects at the location.

As further described below the affection rating of a location may eventually be used to develop textual descriptions of the location. For example a negative affection rating for a location with a quiet environment may result in a textual description that describes the location as boring while a positive affection rating for the same location may result in a textual description of tranquil. In another example a location may be described as noisy and chaotic due to a negative affection rating and energetic and colorful due to a positive affection rating.

In other embodiments the preference module may enable the user to assign an overall affection rating to a trip session that encompasses a plurality of locations rather than assign an individual affection rating to each location. Further the preference module may also enable a user to re rate a location which may cause the autonomous blog engine to automatically update a previously generated blog entry with new textual descriptions that conform to the adjusted affection rating.

While the affection rating interface shown in the example display is implemented using radio buttons the affection rating interface may also be implemented in other ways in additional embodiments. For example a slider bar based on a graduated numerical scale may be implemented e.g. a value of 10 indicates a completely positive impression while a value of 1 indicates a completely negative impression . Other implementations may include a star rating scale in which the more stars assigned the more positive the impression as well as other rating scales.

As further shown in example display the preference module may provide a configuration menu that enables the user to select between an option to publish blog entries for locations in a trip session in real time or near real time or an option to publish blog entries for locations in a trip session following the conclusion of the session. Thus as further described below if the user selects the in real time option a blog entry for a location may be published as soon as the user has finished a visit to a location.

As shown in the exemplary display the preference module may additionally enable the user of the electronic device to select a blog style from a plurality of blog styles for the construction of the blog entries into a blog by the autonomous blog engine . For example the exemplary display may include style options in which each of the style options corresponds to a particular format for presenting one or more blog entries.

Returning to the modules may be part of an application that is installed on the electronic device . The application may execute in an operating environment provided by the operating system . As such the application may leverage the functions of the operating system to display data on the electronic device and to receive inputs from the user. However in alternative embodiments the application may be a stand alone application that operates outside of the operating system . In such embodiments the application may include further components that provide the application with the ability to independently present data to the user and receive inputs from the user via the input and output interfaces of the electronic device .

The one or more servers may include one or more processors memory and or user interfaces that enable a user to interact with the autonomous blog engine. The user interface may include a data output device e.g. visual display audio speakers and one or more data input devices. The data input devices may include but are not limited to combinations of one or more of keypads keyboards mouse devices touch screens microphones speech recognition packages and any other suitable devices or other electronic software selection methods.

The memory may store components of the autonomous blog engine that generate blog entries from media objects and the geolocation data and the sensor data that are received from an electronic device such as the electronic device . The components or modules may include routines programs instructions objects scripts and or data structures that perform particular tasks or implement particular abstract data types. The components may include but are not limited to an authentication module a device interface module a media filter module a clustering module a cluster mapping module a mapping verification module a weight assignment module a blog text generation module a blog publishing module a state detection module a user interface module and a data store .

The authentication module receives and validates authentication credentials from the login module of the electronic device . For example the authentication module may validate the received authentication credentials against known credentials that are stored in the data store . Accordingly the authentication module grants the electronic device access to the autonomous blog engine when authentication is successful.

The device interface module interfaces with the data acquisition module the location module and the preference module of the electronic device . As such the device interface module acquires media objects captured by the electronic device as well as contextual information associated with the captured media objects . The contextual information may include geolocation data sensor data the time and date each media object is captured and or the like. The device interface module may sort the media objects and the corresponding geolocation data for storage in the data store . In various embodiments the media objects and the corresponding geolocation data may be sorted and stored in the data store according to trip session by the device interface module . The device interface module may also receive various settings selected by the user via the preference module . The device interface module may also send data to the various modules of the electronic device .

The media filter module filters the media objects stored in the data store to find media objects that do not meet one or more quality thresholds. In various embodiments the media filter module may filter out low quality photographs such as blurred out of focus and or incorrectly exposed photographs. Likewise the media filter module may also filter video objects based on similar criteria. In such embodiments the media filter module may use a predetermined threshold value to detect overexposure of images. Further the media filter module may implement an algorithm that performs edge type and sharpness analysis using a Harr wavelet transform or equivalent techniques to detect blurred and out of focus images. The media filter module may also filter out audio records that fail to meet one or more predetermined clarity thresholds e.g. excessive static excessive background noise distortions and or the like .

The media filter module may remove the filtered out media objects in the form of audio clips video clips and or multimedia clips. However the media filter module may mark photographs that have been filter out but such photographs are not removed right away. Instead the geolocation information associated with such photographs may be further processed by the clustering module prior to their eventual removal by the media filter module .

The clustering module clusters the photographs captured by the electronic device according to the associated geolocation information. The cluster module operates on the assumption that the user may take more photographs at a location that the user is more interested in and fewer photographs at a location that draws less user interest. Accordingly the cluster module may provide an approximation of locations of interest by clustering the photographs. In many instances the locations of interest may correspond to known man made or natural landmarks e.g. monuments buildings lakes mountains and or the like which are referred to herein as POIs. Thus a center of a photograph cluster may correspond to one POI. However in some instances the user may photograph a spot near a POI or take photographs between two POIs. As such the clustering module may use a fuzzy logic clustering algorithm such as the fuzzy c means clustering algorithm to obtain a group of coefficients in which each coefficient represent the possibility of a corresponding photograph belonging to each cluster.

The cluster mapping module may work in conjunction with the mapping verification module to match a single POI to each photograph cluster. As further explained below the cluster mapping module may preliminarily match a photograph cluster to a plurality of candidate POIs based on physical distances between a cluster center associated with the photograph cluster and the geolocations of the candidate POIs. Subsequently the mapping verification module may select a particular candidate POI of the candidate POIs as a match to the photograph cluster when a photograph from the photograph cluster depicts one or more features that match corresponding features depicted in one or more known sample photographs of the particular candidate POI.

Initially the cluster mapping module may map each photograph cluster to a POI. In various embodiments the cluster mapping module may find each candidate visited POI based on a physical distance between a POI and each photograph cluster as computed based on the associated geolocation of a center of each photograph cluster and the known geolocation of each POI. In this way the cluster mapping module may choose the one or more nearest POIs as candidate POIs for each photograph cluster based on such distances.

In various embodiments the cluster mapping module may first set an interval and a predetermined number of POIs for each cluster. Thus each POI with a distance from the cluster center that is less than may be selected as a candidate POI. The cluster center is a mean of the geolocations at which the photographs were captured in which each location is weighted by a degree that the geolocation belongs in the cluster. However if the number of selected POIs n is less than the cluster mapping module may further select at most n the nearest POIs from the predetermined number of POIs as candidate POIs in which the distance of each nearest POI from the cluster center is less than . In other words the cluster module may initially attempt to select a predetermined number of POIs that are less than a first physical distance threshold from the cluster center as candidate POIs. However if such selection results in an insufficient number of candidate POIs then the cluster module may attempt to select additional POIs as candidate POIs that are farther away from the cluster center but still within a second physical distance threshold of the cluster center. In this way the cluster mapping module may select the predetermined number of POIs in different circumstances.

The mapping verification module selects a matching POI from the one or more candidate POIs for each photograph cluster. The plurality of candidate POIs for each photograph cluster may be generated by the cluster mapping module . The mapping verification module may select a matching POI by comparing photographs from each cluster to one or more known sample photographs of each candidate POI. Thus if there is at least one match between a photograph from a particular photograph cluster and a known sample photograph of a candidate POI the mapping verification module may determine that the particular photograph cluster corresponds to the candidate POI. In this way the mapping verification module may match each photograph cluster to a corresponding candidate POI. In some embodiments if a candidate POI did not match any of the photograph clusters but geolocation data indicates the electronic device was in the vicinity of one or more candidate POIs the mapping verification module may determine that the user traveled through the candidate POIs without taking any photographs. On the other hand if mapping verification module is unable to match a particular photograph cluster to a candidate POI based on photographic comparison the particular photograph cluster may be discarded.

In some embodiments the mapping verification module may compare a pair of photographs by extracting and comparing scale invariant feature transform SIFT features from each photograph. However in other embodiments the mapping verification module may compare a pair of photographs using other image comparison techniques.

In further embodiments the weight assignment module assigns a significance weight to a POI that matches a location of interest to the user. The significance weight may represent the use s level of interest in the POI. The weight assignment module may assign the significance weight for the POI based on media objects that are associated with the POI. In some embodiments the weight assignment module may assign the significance weight to the POI based on the number of photographs in a photograph cluster of the POI as compared to the photographs in the photograph clusters of other POIs. For example the greater the comparative number of photographs in the cluster of the POI the higher the significance weight that is assigned to the POI by the weight assignment module .

In other embodiments the weight assignment module may further modify the significance weight assigned to the POI based the number of audio objects and or vide objects that are within a predetermined distance from the POI. For example the presence of each of such audio objects and or video objects may result in a corresponding increase in the assigned significance weight of the POI.

The blog text generation module may generate text for blog entries for the visited POIs. In various embodiments the blog text generation module may use a natural language generation NLG algorithm to accomplish the text generation. As shown in the NLG algorithm may construct each blog based on pre stored knowledge regarding each visited POI as well as the user supplied affection rating associated with each POI.

For example as further described below in order to generate a blog entry for a particular POI such as a man made structure in the form of a tower that is visited by the user the blog text generation module may use the blog text language structure template to designate what kind of information is to be expressed e.g. the height of the tower. The blog text generation module may use the knowledge item to designate specific information that is to be expressed e.g. the fact that the tower is 30 meters tall. Further the blog text generation module may use the corpus to designate a sentence structure for expressing the information e.g. the subject is height value meters high. As a result the blog text generation module may generate a blog entry for the particular POI that states The tower is 30 meters high. 

In various embodiments the NLG algorithm implemented by the blog text generation module to generate each blog entry may include several stages such as a text planning stage a sentence planning stage and a linguistic realization stage. During the text planning stage the blog text generation module may use a language structure template such as the language structure template . As shown the language structure template may include two fields a matching domain and a semantic domain . The matching domain may include two properties subject type property and affection variable property . The semantic domain may contain a list of messages in abstract form such as the message which describe a series of meanings and information. In other words each message may be used to describe a single semanteme i.e. piece of information. In various embodiments each of the messages may include properties such as entities concepts and relations. For example the message may include the entity properties and the relation property .

The blog text generation module may use the subject type property and the affection variable property of the matching domain as keywords to select knowledge items from a plurality of knowledge items that are associated with a POI. Each of the knowledge items that are associated with a POI may hold a piece of information for a particular aspect of the POI. The information may range from neutral data related to the POI e.g. historical facts statistics environment information etc. to subjective descriptions or opinions which may be positive or negative regarding the POI. The knowledge items may be stored in the data store and updated which may include the edit deletion or the addition of one or more knowledge items.

For example the value of subject type property e.g. building of the matching domain may match a value of a subject type property field e.g. building that is in the matching domain of the knowledge item . Likewise a value of the affection variable property e.g. neutral of the matching domain may match a value of the affection variable property e.g. neutral in the matching domain . Thus the blog text generation module may assign the values in the property domain e.g. elements and to the corresponding entity properties that is in the message of the language structure template . Nevertheless it will be appreciated that if the value of the affection variable property of the matching domain had been positive or negative the blog text generation module may have paired the language structure template to a different corresponding knowledge item with a matching affection variable property value.

The blog text generation module may use a corpus such as the corpus to perform the sentence planning and linguistic realization stages of NLG based on a language structure template and one or more knowledge items. Thus a corpus may provide a universal expression for a certain piece of information i.e. a semanteme.

As shown in the corpus may include a matching domain and a semantic domain . The matching domain may include a relations property that holds a value e.g. identity that matches the relations property value e.g. identity of the message in the language structure template . Further the matching domain may also include an affection variable property with a value e.g. neutral that also matches the value of the affection variable property e.g. neutral in the language structure template . The semantic domain may also include an expression that holds a sentence or phrase structure with incomplete parts e.g. the subject is height high .

Thus from the above descriptions the blog text generation module may use each knowledge item to determine the nature of the information to be expressed a language structure template to determine what information is to be expressed and a corpus to determine how the information is to be expression. Accordingly in an example in which the language template structure the knowledge item and the corpus were selected for a particular visited POI based on an affection rating set by the user e.g. neutral the blog text generation module may generate a sentence that states The tower is 30 meters high. 

However in other instances given a different set of language components that are associated with other affection ratings the blog text generation module may also generate sentences that state the tower is dilapidated which may correspond to a negative affection rating or the tower is resilient which may correspond to a positive affection rating. Additionally it will be appreciated the language template structure the knowledge item and the corpus are merely illustrative and the text blog generation module may use language structure templates knowledge items or corpora that includes additional and or different multi dimensional properties. Further the text blog generation module may use multiple language structure templates knowledge items or corpora to provide text content for the construction of a single blog entry for a visited POI. Following each generation the text blog generation module may store the textual content generated for each visited POI with corresponding media objects e.g. images audio objects video objects and or multimedia objects in the data store .

Returning to the blog publishing module generates a blog that may include multiple blog entries. Following the selection of a photo cluster for each POI and the creation of corresponding text content the blog publishing module generates a paragraph metadata object for each POI that encompasses the photographs of the relevant cluster and the associated text content. The blog publishing module may also compute a paragraph weight for each paragraph metadata object. The paragraph weight of each paragraph metadata object may represent a relative importance of the paragraph metadata object to the user in relation to one or more other paragraph metadata objects. In at least one embodiment the paragraph weight of a paragraph may be calculated as follows 

Subsequently in order to eventually generate a blog the blog publishing module compiles the paragraph metadata objects into blog metadata. Accordingly the blog publishing module may further generate blog metadata using one or more paragraph metadata objects and a structure template. The article structure template may be defined to control a structure of a blog such as the maximal number of photographs in each template the maximal number of paragraphs the order of the paragraphs and or the like. For instance an article structure template for a conventional blog may enable the presentation of multiple images with the textual content while a structure template for a micro blog may enable the presentation of a single image with the textual content. An example structure template may be written as follows 

Thus the particular article structure template that is used may be selected from a plurality of presentation templates based on a blog style selected by the user. As described above the user may make a style selection via the preference module on the electronic device .

Based on the selected structure template the blog publishing module combines and orders a set of paragraph metadata objects for a plurality of corresponding POIs according to the selected article structure template to create blog metadata. However if the number of the paragraph metadata objects in the set exceeds the maximum number of paragraphs defined by the structure template e.g. 10 paragraphs the blog publishing module may remove one or more paragraph metadata objects from the blog metadata based on paragraph weights.

In some embodiments the paragraph weight of each paragraph metadata object may be further used by the blog publishing module to dynamically update a blog with blog entries that are published in real time or near real time. For example a blog entry that is generated from a paragraph metadata object with a low paragraph weight may initially be published on a blog web site but as new paragraph metadata objects with higher paragraph weights are generated when the user travels to additional POIs the paragraph metadata object with the low paragraph weight may be replaced with one of the new paragraph metadata objects with a higher paragraph weight. In some embodiments the blog publishing module may prompt the user for confirmation prior to removing the paragraph metadata object with the low paragraph weight.

When the blog content in the form of blog metadata is prepared the blog publishing module may use a presentation template to represent the blog metadata. The presentation template may be a Hypertext Markup Language HTML document that includes custom tags that define the style of the overall blog. The particular presentation template that is used to represent the blog metadata may be selected from a plurality of presentation templates. As described above the user may make a blog style selection via the preference module on the electronic device .

In some embodiments each presentation template may include one or more paragraph presentation components. Custom tags in each paragraph presentation component may include for example images content and or the like. For example each images tag may be replaced by one or more photographs and a content tag may be replaced by paragraph content. For example a plurality of photographs may be presented as a collection of non overlapping images or as a partially overlapping collage or as a superimposed collage of images. As such the blog publishing module may use a collage generation algorithm not shown to automatically arrange the photographs based on one or more predetermined criteria e.g. most visually captivating most visual contrast least visual contrast and or the like .

In other embodiments each presentation template may also include one or more entry presentation components. Each entry presentation component may include custom tags such as title encoding paragraph and or the like. For example the tag title may be replaced with a blog title encoding may define a page or page section encoding for the bog and paragraph may be replaced by a list of paragraph metadata objects that are in the blog metadata.

The blog publishing module may further embed non still image objects such as audio objects video objects and or multimedia objects into the photographs. In some embodiments the blog publishing module may embed a non still image object into a photograph that is captured immediately prior to the capture of the non still image object. For example if the user captures a particular photograph then subsequently captures an audio clip the blog publishing module may embed the audio clip into the photograph. In other embodiments the blog publishing module may embed a non still image object into a photograph of a plurality of photographs when the photograph has a capture geolocation that is closest to the capture geolocation of the non still image object.

In additional embodiments the blog publishing module may embed a non still image object into a particular photograph selected from a plurality of photographs with a capture time that is closest to the capture initialization time or the capture termination time of the non still image object. In still other embodiments the blog publishing module may embed a non still image into a photograph based on weighted scores for a plurality of photographs in which each weighted score represents a combination of the time difference between the capture initiation times of a corresponding photograph and the non still image as well as location difference between the capture locations of the corresponding photograph and the non still image object. Accordingly the blog publishing module may embed the non still image object into the photograph with the most suitable e.g. highest weighted score. The embedding of the non still image object into a photograph is illustrated in .

The autonomous blog engine may depending on the user selection provided via the preference module generate and publish a blog for a completed trip session. Alternatively the autonomous blog engine may publish one or more blog entries in real time or near real time as the user moves between POIs. As shown in real time or near time blog entry publishing is dependent upon analysis of a user s moving states and detection of when the user has complete a visit to each POI and is leaving for a new POI.

In at least one embodiment the state detection module may compute a weight for each new geolocation point by using the equation 2 as follows 

Accordingly changes in the value of W may reflect the moving state of the electronic device and in turn the moving state of the user that is carrying the electronic device . For example if W begins to increase to a higher value from an average value the state detection module may determine that the user is stopped or is advancing slowly. Additionally if W holds a higher value for a predetermined period of time the state detection module may determine that the user is staying at one place. Further when W decreases the state detection module may determine that the user has left a particular place or is changing the moving state from slowly moving or stop to moving at an average pace. Thus when W increases from the average value and then maintains a relatively high value and then decreases to the average value the state detection module may designate this sequence of events as M as the sequence indicates that the user visited a site during the time interval of M. In the event that the user uses the electronic device to capture media objects during M the state detection module may cause the relevant modules of the autonomous blog engine to find a POI that corresponds to the center of the geolocations belonging to the media objects captured during M. Thus the eventual blog entry generation for the POI in real time or near real time may be initiated by the autonomous blog engine as the engine detects the sequence of events M when the autonomous blog engine is in automatic mode or semi automatic mode.

As described above if the autonomous blog engine is in automatic mode the blog publishing module may automatically generate and publish each generated blog entry to a blog website that is on the blog server as the user moves between different POIs. Further if the autonomous blog engine is in semi automatic mode the blog publishing module may prompt the user to initiate the generation and publication of each blog entry. Thus assuming the user initiates a blog entry generation in response to the prompt and the user has also selected an option to review the blog publishing module may transmit the generated blog entry to the electronic device so that the user of the electronic device may use the edit module to review edit or approve the blog entry. Otherwise if the user selected an option to not review for the semi automatic mode then the blog publishing module may publish the blog entry upon user initiation of blog generation and publication without further user review. However if the autonomous blog engine engine is in manual mode then the autonomous blog engine may perform data analysis blog generation and publication actions as the user moves between different POIs upon being triggered by the user.

Returning to the user interface module enables an administrator to configure the various modules of the autonomous blog engine via the user interface of the autonomous blog engine described above. In various embodiments the user interface module may enable the administrator to adjust the predetermined quality thresholds for the received media objects . The user interface module may further enable the administrator to add modify or delete one more of the templates knowledge items and corpora data that are stored in the data store as well as associations between blog styles selectable by the user and corresponding templates.

The data store may store the data that are received from the electronic device such as captured media objects geolocation data blog edits and or settings for the autonomous blog engine . The data store may also store the various templates knowledge items and corpora data that are used by the autonomous blog engine as well as the blogs and blog entries generated by the autonomous blog engine . Further the data store may also store any additional data used by the autonomous blog engine such as various additional intermediate data produced for the generation of blog entries.

Thus in some embodiments the autonomous blog engine may be capable of dynamically reformatting and or re publishing a generated blog using existing data when the user selects a different blog style or different affection rating for the presentation of the blog or at least a portion of the blog by once more performing the data analysis and the blog generation described above.

At block the autonomous blog engine receives one or more media objects and related information that are captured by the electronic device of the user. The media objects may include for example images video recordings and or audio recordings. The related information may include contextual information corresponding to the media objects such as geolocations of the media object captures times of the media object captures and or the like. The related information may further include the periodically queried geolocation of the electronic device from the location module . In some embodiments at least one of the received media objects may have been reformatted by the reformat module on the electronic device .

At decision block the state detection module of the autonomous blog engine determines whether the user has finished visiting a location. In various embodiments the state detection module may make such a determination based on the geolocation information supplied to the autonomous blog engine by the location module . For example the state detection module may determine that the user finished visiting a location when a weight derived from the geolocation information indicates that a moving state of the electronic device increased to a high value from an average value maintained the high value and then decreased from the high value to the average value. If state detection module determines that the user has not finished visiting a location no at decision block the process loops back to block so that the autonomous blog engine may continue to receive the media objects and the related information. However if the state detection module determines that the user has finished visiting a location yes at decision block the process proceeds to block .

At block the autonomous blog engine generates a paragraph metadata object for a POI that corresponds to the location that was just visited by the user. In various embodiments the paragraph metadata object may include data for creating a single paragraph e.g. a blog entry in which the single paragraph includes one or more photographs and textual content that is generated for the one or more photographs. At block the blog publishing module of the autonomous blog engine further calculates a paragraph weight for the paragraph metadata object.

At decision block the blog publishing module determines whether the paragraph metadata object is to be published. The determination may be based on a structure template that the user selected to present the paragraph metadata objects and the paragraph weight of the paragraph metadata object. In various embodiments the structure template may indicate a maximum number of paragraph metadata objects to be included in a blog. Thus if the maximum number of paragraph metadata objects has not been reached the blog publishing module may determine that the paragraph metadata object is to be published. However if the maximum number of paragraph metadata objects has been reached the blog publishing module may determine that the metadata paragraph metadata object is to be published when the paragraph metadata object does not have the lowest paragraph weight when compared to paragraph weights of paragraph metadata objects that have already been published for the trip session.

Thus if the blog publishing module determines that the paragraph metadata object is to be published yes at decision block the process proceeds to block . At block the blog publishing module publishes the paragraph metadata object according to a structure template and a presentation template that is selected by the user. In various embodiments the user may select the structure template and the presentation template by selecting a blog style via the preference module of the electronic device . Moreover depending on whether the autonomous blog engine is in automatic mode or semi automatic mode the blog publishing module may either automatically publish the paragraph metadata object as a blog entry or prompt the user to initiate review and or edit of the paragraph metadata object prior to publication as a blog entry. The publishing of the paragraph metadata object as a blog entry may occur in real time or near real time such as at least prior to the electronic device and the user reaching a site that follows the POI as indicated by the state detection module . Further the publishing of the paragraph metadata object may include the embedding of one or more non still image media objects e.g. an audio clip video clip and or multimedia clip into one or more photographs of the paragraph metadata object.

However if the blog publishing module determines that the paragraph metadata object is not to be published no at decision block the process proceeds to block . At block the blog publishing module prevents the paragraph metadata object from being published. In some embodiments the blog publishing module may accomplish this by removing the paragraph metadata object from the blog metadata that is eventually converted into a blog.

At block the blog publishing module of the autonomous blog engine generates a paragraph metadata object for each POI traveled to during the trip session. Further the blog publishing module calculates a paragraph weight for each paragraph metadata object.

At block the blog publishing module formats the one or more paragraph metadata objects into blog metadata according to a structure template. In various embodiments if the number of the paragraph metadata objects associated with trip session is larger than a maximum paragraph number limit in the structure template one or more paragraph metadata objects with the lowest paragraph weights may be removed from the blog metadata.

At decision block the autonomous blog engine determines whether blog metadata is to be automatically published. In various embodiments this determination may be based upon whether a review option or a no review option is currently enabled by the user. Thus if the autonomous blog engine determines that the blog metadata is to be automatically published since the no review option is enabled yes at decision block the process continues to block . At block the blog publishing module publishes the blog metadata to a blog website based on a presentation template previously selected by the user. The blog website may reside on a blog server such as the blog server . The publishing of the blog metadata may further include the embedding of one or more non still image media objects e.g. an audio clip video clip and or multimedia clip into one or more photographs of at least one paragraph metadata object.

However if the autonomous blog engine determines that the blog metadata is not to be automatically published as the review option is enabled no at decision block the process continues to block . At block the blog publishing module provides the blog metadata for review by the user of the electronic device . In various embodiments the user of the electronic device may use the edit module to view and if desired edit the blog metadata to change the textual information or arrangement of the photographs that are to be eventually published. Once the user has indicated that the review of the blog metadata is complete or has submitted the blog metadata update to the autonomous blog engine the process loops back to block so that the blog publishing module publishes the blog metadata to a blog website based on a presentation template.

At block the media filter module filters out from a plurality of captured photographs one or more photographs that do not meet a predetermined quality threshold.

At block the clustering module determines a photograph cluster from a plurality of photographs. In various embodiments the clustering module may use a fuzzy logic clustering algorithm such as the fuzzy c means clustering algorithm to derive the photograph cluster.

At block the cluster mapping module in conjunction with the mapping verification module matches the photograph cluster to a POI. In various embodiments the cluster mapping module may preliminarily match a photograph cluster to a plurality of candidate POIs based on physical distances between the geolocation of the cluster center in the photograph cluster and the geolocations of the candidate POIs. Subsequently the mapping verification module selects a particular candidate POI of the candidate POIs as a match to the photograph cluster when a photograph from the photograph cluster depicts one or more features that match corresponding features depicted in one or more known sample photographs of the particular candidate POI. In various embodiments the one or more features may be SIFT features.

At block the blog text generation module may use an NLG algorithm to generate textual content for the POI based on an affection rating the user provided for the POI. The generation of the textual content may include the use of one or more language structure templates one or more knowledge items and one or more corpora. In various embodiments the blog text generation module may first select a language structure template e.g. language structure template for the textual content to be generated for the POI. The blog text generation module may then select one or more knowledge items e.g. knowledge item with affection ratings that match an affection rating indicated by the user for the POI. Subsequently the blog text generation module may then assemble the language structure template and the one or more knowledge items into textual content for the POI using a corresponding corpus.

At block the blog publishing module composes the generated textual content with at least one photograph of the photograph cluster to generate a paragraph metadata object. In various embodiments the generation of the paragraph metadata object may be performed using a structure template selected by the user.

In at least one configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination thereof. System memory may include an operating system one or more program modules and may include program data . The operating system includes a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API . The computing device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but may interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of the computing device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. These networks may include wired networks as well as wireless networks. Communication connections are some examples of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc and is separate from the computer storage media.

It will be appreciated that the illustrated computing device is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described. Other well known computing devices systems environments and or configurations that may be suitable for use with the embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor base systems set top boxes game consoles programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and or the like.

The implementation of the autonomous mobile blogging techniques described herein may enable users to share events and experiences with other users using a blog with minimal interruption to their normal routine and without spending considerable time and effort planning and creating the blog.

In closing although the various embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended representations is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as exemplary forms of implementing the claimed subject matter.

