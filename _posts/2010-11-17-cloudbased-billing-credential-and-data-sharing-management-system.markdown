---

title: Cloud-based billing, credential, and data sharing management system
abstract: A novel solution is provided that utilizes the two-credential characteristics of accessing cloud-hosted data in a portal-oriented enterprise-specific solution. Cloud computing resources may be accessed through a separate, enterprise-specific portal clients used to manage a set of cloud service accounts. Individuals (e.g., employees of the enterprise or company) may access cloud computing resources via an instance of the portal client, and any communication between individuals in an enterprise and cloud services may be facilitated through the portal. Each portal client may also be configured to be compatible with any cloud service vendor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08984589&OS=08984589&RS=08984589
owner: Accenture Global Services Limited
number: 08984589
owner_city: Dublin
owner_country: IE
publication_date: 20101117
---
This application claims priority to U.S. Provisional Patent Application No. 61 328 448 entitled Cloud Based Billing Credential And Data Sharing Management System and filed Apr. 27 2010 in the United States Patent and Trademark Office.

Cloud computing provides computation capacity and storage on demand. Typical cloud computing service agreements are based on a self service usage model which allows a virtually unlimited amount of computing resources to be dynamically requisitioned on demand from a pool of shared computing resources offered by a cloud computing vendor. In a typical cloud provisioning sequence a user requests a virtual server from a cloud computing vendor through the vendor s user interface through a web application for example and the server may be available within a few short minutes. This eliminates the need to buy a significant portion of the capital equipment upfront. Moreover provisioned cloud computing resources are programmable. For instance when an application needs additional capacity due to unexpected or peak consumer demand the capacity may be dynamically and immediately requisitioned through a simple Application Programming Interface API call. There is no longer the need to over provision to accommodate peak demand.

Cloud computing may include many different types of cloud services. One sample service is Infrastructure as a Service IaaS where a user can request Virtual Machines VM . Other services may include key value storage services semi structured storage services or messaging services. Although the cloud computing model gives individuals quicker access to the resources it also presents significant problems for enterprise management. These problems include for example a lack of control over resource usage and difficulties in data sharing with other group or team members even with access to the same cloud computing resources. First the conventional purchasing model employed by many cloud computing vendors does not conform to the standard enterprise purchasing order process which can result in additional complexities in budget allocations. According to a common cloud computing practice individual developers employed by an enterprise may still requisition cloud resources separately during the course of employment. Under such practices the developer may be billed by the cloud computing vendor personally and may be subsequently reimbursed by the developer s employer. Unfortunately in these situations enterprise managers may not have control or even direct knowledge over the individual developer s resource usage until that usage is billed. Since developers may accrue cloud computing service charges personally a manager may have little to no control on keeping usages within or under budget. Typically managers and executives may see a total accrued cost only at the end of the month when the developer submits for reimbursement.

Potentially of even greater concern an IT department may have little to no control over the data an individual may store in a cloud resource and may be unable to enforce corporate policy. Since a cloud account is under the absolute control of the individual user and not generally speaking the department or supervisor s a disreputable employee could easily abuse the system. For example a security policy may mandate that all data stored in a cloud should be encrypted but an individual can easily ignore the policy knowing that the IT department or supervisor has no ability to audit. The developer may also store company sensitive data in cloud resources against company policy for example and sensitive corporate proprietary data may be subject to potential exploitation without the corporation s awareness or knowledge if stored in a personal cloud account. Worse yet when the employee leaves the company there may be no easy way to recover company data stored in the developer s cloud account or prevent the individual s removal destruction tampering or duplication of the potentially sensitive and valuable data.

Also since each developer has initially exclusive access to any requisitioned cloud resources sharing data stored in cloud resources with collaborating coworkers may be difficult. Currently sharing data hosted in a cloud requires the proprietor of the cloud resource to be shared to acquire identification information within the system for each intended collaborating developer such as an account ID and assign data permissions to those IDs specifically. Unfortunately individual account IDs may be hard to keep track as often the account IDs do not correspond intuitively to a user s actual name. Furthermore data sharing is often with a group of people so managing data sharing at an individual user level is often cumbersome and time consuming when larger numbers of collaborators are desired.

Moreover cloud access is different from other resources access in that it typically requires two sets of credentials. The first credential referred here as the master credential and typically implemented in the form of a user name and password combination is used by an individual to gain access to the cloud portal. Master credentials are often configurable by the corresponding user. Once logged in to the cloud portal the user can request the second credential referred here as the cloud credential which is typically in the form of a set of keys e.g. access key and secret key or authorization tokens. For the sake of security the keys are typically fairly long and complex often appearing as a randomized string of numbers letters and symbols that do not conform to typical mnemonic structures thus sharing the keys may be cumbersome if many contributors are expected or desired.

Finally usage of cloud computing resources often makes it difficult to manage credentials securely. Many cloud services are invoked through a web services API. A user must present valid credentials in order to successfully invoke these APIs. The ability to share certain provisioned cloud resources between multiple users may also compromise credential security. For example a requisitioned cloud virtual machine VM image may be shared between users. If a VM image needs to access other cloud services and or services however the VM image may have to embed the cloud credential in order to successfully proceed through embedded security protocols. Unfortunately when the VM image is shared with other users the user s cloud credential may inadvertently be shared amongst the other users as well.

Even if a VM image is never shared since the image is stored in the cloud there is the danger that a hacker may hack the image file to obtain the credential. In addition when the credential is changed rotating credential regularly is an increasingly popular cloud practice the shared VM image must be changed. Unfortunately data sharing in a cloud environment itself may be difficult. When a user needs to share data e.g. either cloud stored data or a VM image with other users the user must obtain the other users cloud account IDs and then share the data with the targeted IDs. Since the mapping from a user to the user s cloud account ID is often maintained manually it is cumbersome and time consuming to manage data sharing.

In an embodiment a cloud management system is provided that includes a credential repository. The credential repository may be implemented for example as a graphical user interface a web server and a database. Users of the cloud management system may connect to and interact with the system through the graphical user interface the portal client in order to sign into the system and gain access to additional functionality. In order to gain access to the system the user must supply credentials in order to verify the user s identity and level of authorization.

The credentials supplied by the user are received by the web server which queries the database in which a log of credentials is stored. Once the particular user s identity and level of authorization is verified the user is granted access to one or more tiers of functionality. Users with administrative and or executive access are granted access to the tier of functionality that is related to account management such as billing profile payment information policy enforcement and auditing. Users with program access are granted access to programmatic features only. These features may include access to access points of third party cloud computing providers and cloud service vendors where the user is able to provision cloud computing resources or access and modify pre provisioned cloud resources. Accordingly this solution may provide an expansion of a management of cloud computing resources beyond an individual s exclusive control.

Reference will now be made in detail to embodiments of the claimed subject matter for managing applications to avoid low and or compromised bandwidth in a cloud data center examples of which are illustrated in the accompanying drawings. While the claimed subject matter will be described in conjunction with the disclosed embodiments it will be understood that they are not intended to be limit to these embodiments. On the contrary the claimed subject matter is intended to cover alternatives modifications and equivalents which may be included within the spirit and scope as defined by the appended claims.

Furthermore in the following detailed descriptions of embodiments of the claimed subject matter numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. However it will be recognized by one of ordinary skill in the art that the claimed subject matter may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail as not to unnecessarily obscure aspects of the claimed subject matter.

Some portions of the detailed descriptions which follow are presented in terms of procedures steps logic blocks processing and other symbolic representations of operations on data bits that can be performed on computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. A procedure computer generated step logic block process etc. is here and generally conceived to be a self consistent sequence of steps or instructions leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated in a computer system. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions it is appreciated that throughout the present claimed subject matter discussions utilizing terms such as storing creating protecting receiving encrypting decrypting destroying or the like refer to the action and processes of a computer system or integrated circuit or similar electronic computing device including an embedded system that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The particular format of API credentials may vary according to the cloud provider. For example in one embodiment the API credential may consist of an access key and a secret key. In other embodiments the API credential may consist of an API key and a shared secret. In still further embodiments the API credential is an authorization token. According to these embodiments the authorization token may not be obtainable directly from the cloud portal and a user must first login to obtain a username and an API access key then use them in a subsequent process to obtain the authorization token through an API. According to conventional implementations mere knowledge of the API credential is not enough to completely control the cloud account. For example it is not generally possible to edit profiles and view change the billing credit card with the API credential only and without the master credential. However knowing the API credential is enough to access cloud resources.

In order to access the cloud once a user registers with the cloud and is granted an API credential from an account with master credential authorization the cloud portal will prompt the user to enter the API credential e.g. at step . A user is granted access to the cloud provider s access point typically the cloud provider s web interface if the user successfully submits an API credential corresponding to the user s account e.g. at step .

According to conventional cloud access models however one cloud account is often used to support a whole enterprise and a enterprise specific interface is built to multiplex multiple cloud users through the same cloud account. First In these models the interfaces may be required to be extremely scalable which may increase engineering and maintenance costs since all access to and from the cloud goes through those interfaces. In addition this approach may be unsuitable to perform accurate accounting between different projects. For example a provisioned virtual machine could consume significant bandwidth charges but since its bandwidth usage does not go through the management interfaces it is not possible for those interfaces to meter and bill projects for those bandwidth charges.

In addition data sharing practices in conventional cloud access models may also suffer from this lack of abstraction. is an illustration of a typical data sharing process in a cloud in accordance with conventional practice. Since each individual user account is largely exclusive and autonomous data sharing within a conventional cloud access model may require a user obtaining the user ids of the users with which data sharing is desired specifically identifying those user ids within the cloud provider s access point to grant access to the accounts corresponding to the user ids. This process may have to be done manually and consequently may be extremely time consuming if data sharing is desired among many user accounts. Moreover if the users with which data sharing is desired wish to share data themselves the process must again be repeated for all desired data sharing recipients. Even more cumbersome the user ids may be specific to a particular cloud vendor or provider. Thus data sharing across multiple vendors or providers may become prohibitively inefficient and complex.

As a solution to the problems noted above this disclosure provides a novel solution that utilizes the two credential characteristics of accessing cloud hosted data in a portal oriented enterprise specific solution. Cloud computing resources may be accessed through a separate enterprise specific portal that clients may use to manage a set of cloud service accounts. Individuals e.g. employees of the enterprise or company may access cloud computing resources via an instance of the portal client and any communication between individuals in an enterprise and cloud services may be facilitated through the portal. Each portal client may also be configured to be compatible with any cloud service vendor.

The master credential for each account is stored with the client and inaccessible to the individual. Since the master credential is removed from the individual user control over the usage and billing may be maintained at the portal enterprise level. Likewise access to data stored in a cloud may also be efficiently shared with other collaborators e.g. through other instances of the same enterprise specific portal and managed by other enterprise officials or executives. Accordingly this solution provides an expansion of a management of cloud computing resources beyond an individual s exclusive control.

The claimed subject matter is directed to an approach for managing a plurality of cloud user accounts while abstracting oversight and management capability from individual users by employing a multi tiered multi protocol account management system. In an embodiment the account management system may be implemented as credential vault or repository which may include features such as a database a web server and instantiable graphical user interface.

In an embodiment a cloud management system is provided to manage usage and control data hosted in cloud computing resources. A cloud management system may be a portal solution specific to an enterprise. Specifically the cloud management system is in charge of a set of cloud accounts and for each account it holds the master credential. Furthermore a program simulating user access may be executed e.g. via screen scraping technology to create accounts with a specific vendor. According to some embodiments accounts may be created on demand. The cloud management system subsequently downloads the cloud API credential for each cloud account. In further embodiments the cloud management system may also facilitate a single billable account that includes multiple threads each individual account . This allows cloud usage charges to be charged directly to the corporate account. In addition the Cloud management system may also download usage reports from the cloud portal each month to keep track of the spending on each cloud account.

An individual or employee may access cloud computing resources by registering for cloud access through the cloud management system. Once registered the individual is assigned a dedicated cloud account and the individual is given access to the cloud credential corresponding to the individual s particular cloud account. However access to the master credential is not granted to the individual. Since the individual would not have access to the cloud portal tasks normally performed in cloud computing resources or on cloud hosted data can only be accessed through the Cloud management system and by extension through the portal .

By implementing a tiered cloud management system a company s officials or executives are able to exert full control over the enterprise s cloud usage. The features include more efficient billing preservation of proprietary materials and data and simpler data sharing. For example by applying a single cost source e.g. a company or enterprise wide billing account an individual no longer has to pre pay for usage of cloud resources with personal assets. This also eliminates the need for any process for requesting and addressing compensation from the company.

According to embodiments of the present disclosure the master credential and the API credential may be separated to maintain singular control while extending access to multiple users. In one embodiment both credentials may be managed and stored in a secured software module. When a user is approved to have access to cloud resources a unique cloud account may be generated for the user with API credentials. However the user is only given the API credential so that the user is able to access cloud resources but the master credential is not provided to the user.

At step a request from a user to access the cloud management system is received. The request from a user to access the cloud management system may be received as for example opening a connection via a web browser with the cloud management system or generating an instance of the graphical user interface of the cloud management system on a local computing system of the user. At step the user is prompted to submit credentials corresponding to a user account in the cloud management system. In one embodiment the credentials are provided to the user during or following registration within the system or may be granted by an administrator such as an account with master credential access . In some embodiments a single cloud account with a cloud vendor may correspond to a plurality of enterprise side user accounts. That is the enterprise may maintain a single cloud account with a cloud vendor which integrates a plurality of employees or affiliated users of the enterprise. Once the user submits the requested credentials the user supplied credentials are authenticated in step . Authenticating the user supplied credentials may be performed by for example referencing the user supplied credentials with a database of stored credentials credential repository to verify the user s identity and or level of authorization.

Based on the user s supplied credentials the system determines the level of access the user is granted at step . If the user supplied credentials are authorized according to a first identification protocol corresponding to a master account e.g. by supplying master credentials the user may be granted access to a first tier of functionality at step . In one embodiment the first identification protocol consists of a username and password combination. Thus a user supplying a paired username and password which matches master credential s stored in the credential repository may be granted access to the first tier of services.

According to some embodiments the first tier of services comprises account management features such as for example viewing billing information corresponding to one or more user account s enabling or enforcing policy application auditing charges and billing or profile information management. Billing information may be stored in the database and may be viewable by a user by referencing the pre stored billing information. In one embodiment billing information is periodically e.g. once a month acquired from the individual cloud providers by downloading the billing statement corresponding to the cloud account for each cloud vendor.

If on the other hand the user supplied credentials are not authorized according to a first identification protocol the credentials may be submitted for authorization according to a second identification protocol at step . The second identification protocol may consist of a paired set of a username or user id and an access key e.g. a first string of letters and integers . In alternate embodiments the second identification protocol may consist of a paired set of an access key and a secret key e.g. a second string of letters and integers . In still further embodiments the second identification protocol may consist of submitting an authorization token which may be implemented as a file which may be uploaded to the cloud management system to verification or according to a combination of two or more of the above specified protocol formats.

If the user supplied credentials are authorized at step according to the second identification protocol e.g. the API or cloud credential the user is granted access to a second tier of functionality at step . According to some embodiments access to the second tier of services comprises access to cloud resource services such as provisioning cloud resources storing data in pre provisioned cloud resources executing applications in provisioned cloud resources and modifying data stored in pre provisioned cloud resources. In further embodiments a user granted access to the second tier of functionality may be directed to select from a plurality of cloud vendors or providers after which a direct connection to the access point e.g. web portal of the selected cloud vendor or provider is facilitated through the graphical user interface of the cloud management system. According to some embodiments users granted access to the first tier of functionality may also be granted access to the second tier of functionality automatically.

If the user supplied credentials are not authorized according to either the first identification protocol or the second identification protocol the process may return to step and prompt the user to re submit credentials or according to some embodiments exit the system entirely at step . In further embodiments the process may maintain a counter of the number of user credentials submitted attempted accesses for a single session. When the counter exceeds a pre determined threshold the user s connection to the system may be automatically closed and subsequent attempts to connect to the system may be temporarily rejected.

In further embodiments a separate servlet e.g. action module may be included in the credential repository that performs bulk actions that are not part of the web UI s request response exchange. For example periodically e.g. once a month the action module may log into a cloud vendor portal screen scrap and download the billing statement for each account. Screen scraping simulates a user accessing for information and a program automatically parses the output for needed information. Screen scrapping may be performed for example by employing the accessibility layer of an operating system to access UI components. Thus for instance the action module may access an individual cloud account with the individual s cloud credential request or view billing information from the cloud vendor and parse the returned graphical output displayed on the user interface for the requested information. Alternatively since cloud vendors typically provide a web portal the web page of the cloud vendor itself may be parsed for relevant information.

Besides downloading billing statements the action module may also perform auditing and policy enforcement. For example if a policy states that no cloud data should be unencrypted the action module may periodically take a sample and check to see if any file conforms to the corporate policy. Since the cloud management system not only has the master credential but also the API credential it can easily invoke an API to perform the auditing. Information downloaded from the cloud portal such as the billing statement and the credentials may be stored in a database . In some embodiments credentials may be encrypted before stored in the database for security purposes. The servlet itself does not keep any billing or credential data in memory. Credential verification and or grants may be performed by querying the database for the latest information.

In one embodiment the cloud management system interacts with the cloud portals of various cloud providers directly. Since the user no longer has access to the master credential of the cloud account the user is no longer able to perform certain functions through the cloud account. For example the user may not be able to obtain API credentials e.g. API credentials must be granted by an account with master credentials . Other functionality which may be inaccessible to a user account may include downloading billing statements directly from the cloud service provider. According to some embodiments the cloud management system may replicate those functions so that the user still has access to the same information but may not have authorization to edit or modify certain fields. For example to provide billing information to the user the portal page may be screen scrapped in order to download all billing statements.

The cloud management system is well suited to support multiple cloud providers. For example the cloud management system may store the master credentials for multiple cloud providers and may interact with each of the cloud portals. For users the cloud management system can generate cloud accounts and API credentials from multiple cloud vendors depending on user requests.

With the API credential a user of the cloud management system can login to the system and perform all the customary cloud functions that the cloud portal is able to perform such as requesting and downloading the API credential viewing personal cloud usage though account management features are still inaccessible to the user. Once the user has the API credential the user can access cloud resources directly through the cloud access point.

According to a typical process according to a user may log in to the cloud management system step . The user s authorization may be verified e.g. by comparing user supplied credentials to the enterprise s LDAP step . A cloud access credential API credential may be automatically granted based on the verification of the user s authorization or alternatively may be manually granted by a user account with master credential access at step . Subsequently the user may access cloud resources through the cloud s access point directly with the granted API credential step .

According to one aspect billing may be consolidated for all cloud accounts under the cloud management system s management. This may allow an enterprise to benefit from volume discounts. According to a typical process as presented in a user may submit corporate account information step which is relayed through the cloud management system to the portal of the cloud vendor step . Periodically the cloud vendor may submit usage reports to the cloud management system step whereupon the cloud management system may audit or parse the submitted usage reports to determine individual usage levels. At any subsequent time the user may query the cloud management system for the individual s usage report step . Meanwhile usage may be monitored and corporate policy may be enforced within the cloud by the cloud management system step .

In still further embodiments the cloud management system may be configured to integrate with an internal charge back mechanism so that the system bills the individual department directly for any corresponding cloud resource usage. For example since the cloud management system monitors the usage of each cloud account the expenditure and the identity of the corresponding individual billing can be performed efficiently at the enterprise level for all individuals and corresponding accounts.

Data sharing among disparate cloud computing accounts may be facilitated with greater ease through a two tiered system such as described in . In one embodiment the cloud management system would integrate with a service directory e.g. a lightweight directory access protocol directory to add a group concept to data sharing. If a user wants to share a file with an entire group or department for example the individual can specify within the cloud management system that the user wants to share the file with the identified group step . The cloud management system automatically translates such a request into the individual s cloud account and performs the necessary actions in the cloud. This may comprise for example referencing the LDAP directory and expanding the group identity to include a list of user names step .

From the list of user names the cloud management system then further expands the list to include a list of cloud account IDs by checking the cloud account IDs associated with each user step . The data or image may be then shared with the list of account IDs step . This can be done automatically since the cloud management system is aware of which cloud account corresponds to each user in the group or department and also maintains the cloud credential corresponding to the cloud accounts to carry out the task. When the group membership changes the cloud management system can automatically adjust the permission level s of the applicable accounts to accurately and immediately reflect which accounts should and should not have access to the data.

As presented in a system upon which embodiments of the present invention may be implemented includes a general purpose computing system environment such as computing system . In its most basic configuration computing system typically includes at least one processing unit and memory and an address data bus or other interface for communicating information. Depending on the exact configuration and type of computing system environment memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two.

Computer system may also comprise an optional graphics subsystem for presenting information to the computer user e.g. by displaying information on an attached display device connected by a video cable . According to embodiments of the present claimed invention the graphics subsystem may be coupled directly to the display device through the video cable . A graphical user interface of instantiated by the cloud management system and executing in the remote computer system of a user may be generated in the graphics subsystem for example and displayed to the user in the display device . In alternate embodiments display device may be integrated into the computing system e.g. a laptop or netbook display panel and will not require a video cable . In one embodiment the process may be performed in whole or in part by graphics subsystem in conjunction with the processor and memory with any resulting output displayed in attached display device .

Additionally computing system may also have additional features functionality. For example computing system may also include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by data storage device . Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. RAM ROM and data storage device are all examples of computer storage media.

Computer system also comprises an optional alphanumeric input device an optional cursor control or directing device and one or more signal communication interfaces input output devices e.g. a network interface card . Optional alphanumeric input device can communicate information and command selections to central processor . Optional cursor control or directing device is coupled to bus for communicating user input information and command selections to central processor . Signal communication interface input output device also coupled to bus can be a serial port. Communication interface may also include wireless communication mechanisms. Using communication interface computer system can be communicatively coupled to other computer systems over a communication network such as for example the Internet or an intranet e.g. a local area network or can receive data e.g. a digital television signal .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

