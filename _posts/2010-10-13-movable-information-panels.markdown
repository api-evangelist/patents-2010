---

title: Movable information panels
abstract: Various techniques, methods and apparatus are disclosed. In some example embodiments, a movable information panel may be moved to be displayed as a tabbed web page, moved to a different application window, or docked to a horizontal or vertical panel bar. Other example embodiments are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529517&OS=09529517&RS=09529517
owner: Google Inc.
number: 09529517
owner_city: Mountain View
owner_country: US
publication_date: 20101013
---
This application is a continuation in part application of U.S. application Ser. No. 12 774 520 filed on May 5 2010 and entitled Expandable and Collapsible Information Panels which is hereby incorporated by reference. This application claims the benefit of U.S. Provisional Application No. 61 360 319 filed Jun. 30 2010 and entitled Movable Information Panels and U.S. Provisional Application No. 61 251 289 filed Oct. 13 2009 and titled A Browser Based Cloud Optimized Computer Platform all of which are herein incorporated by reference in their entirety.

This document relates to methods and apparatus for displaying and manipulating information in a web browser.

With the creation of the world wide web and high speed computer networks the paradigm for personal computer usage has dramatically shifted. In the past users would primarily use their personal computers to run programs and store and manipulate data that was located on their local hard drive. Only rarely would users store or manipulate data located on a networked drive or run a program that was provided as a network service and even then the programs and data were usually restricted to a local area network. Today more and more users are storing more and more data on remote data servers and using remotely provided web based applications e.g. SaaS or Software as a Service programs to manipulate and organize that data. For example many users today store their personal email and contact information and even pictures videos and music archives on remote servers and access that data using third party applications that are provided through and controlled by a web browser.

Cloud computing is a style of computing in which computing resources such as application programs and file storage are remotely provided over the Internet typically through a web browser. Many web browsers are capable of running applications e.g. Java applets which can themselves be application programming interfaces API s to more sophisticated applications running on remote servers. In the cloud computing paradigm a web browser interfaces with and controls an application program that is running on a remote server. Through the browser the user can create edit save and delete files on the remote server via the remote application program.

Due to this shift in computer usage today s computer users are unlikely to want or need many of the bells and whistles provided by modern operating systems. They do not need to worry about file structures or organizing or backing up their data because much of their data is stored organized and backed up for them on the cloud. They do not need to worry about loading and updating software because most of the software they use is provided to them when needed as a cloud based service. Instead today s computer users are more interested in quickly logging onto their computer launching a web browser and accessing data and programs of interest to them which are accessible through the world wide web.

This document describes systems and techniques to manage and display information in a user interface.

According to an example embodiment a computer implemented method may include displaying by a processor an information panel that is associated with a first tabbed web page of a browser window moving by the processor via a drag and drop operation a location of the information panel to a tab strip where one or more tabs are located and displaying the information panel as a second tabbed web page of the browser based on the moving.

According to another example embodiment a computer program product is provided that is tangibly embodied on a computer readable storage medium having executable instructions stored thereon the instructions being executable to cause a second computer to display by a processor an information panel that is associated with a first tabbed web page of a browser window move by the processor via a drag and drop operation a location of the information panel to a tab strip where one or more tabs are located and display the information panel as a second tabbed web page of the browser based on the moving.

According to another example embodiment an apparatus may include at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause the server to display by a processor an information panel that is associated with a first tabbed web page of a browser window move by the processor via a drag and drop operation a location of the information panel to a tab strip where one or more tabs are located and display the information panel as a second tabbed web page of the browser based on the moving.

According to another example embodiment a computer implemented method may include displaying by a processor a movable information panel that is provided at a first location within a boundary of a first application window moving by the processor via a drag and drop operation the information panel to a second location within a boundary of a second application window and associating the information panel to the second application window.

According to another example embodiment a computer program product is provided that is tangibly embodied on a computer readable storage medium having executable instructions stored thereon the instructions being executable to cause a second computer to display by a processor a movable information panel that is provided at a first location within a boundary of a first application window move by the processor via a drag and drop operation the information panel to a second location within a boundary of a second application window and associate the information panel to the second application window.

According to another example embodiment an apparatus may include at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause the server to display by a processor a movable information panel that is provided at a first location within a boundary of a first application window move by the processor via a drag and drop operation the information panel to a second location within a boundary of a second application window and associate the information panel to the second application window.

According to yet another example embodiment a computer implemented method may include displaying by a processor an information panel that is associated to a first web page of a browser window moving by the processor via a drag and drop operation the information panel outside the first tabbed web page to a panel bar on a desktop user interface and docking the information panel to the panel bar based on the moving.

According to another example embodiment a computer program product is provided that is tangibly embodied on a computer readable storage medium having executable instructions stored thereon the instructions being executable to cause a second computer to display by a processor an information panel that is coupled associated to a first web page of a browser window move by the processor via a drag and drop operation the information panel outside the first tabbed web page to a panel bar on a desktop user interface and docking the information panel to the panel bar based on the moving.

According to another example embodiment an apparatus may include at least one processor and at least one memory including computer program code the at least one memory and the computer program code configured to with the at least one processor cause a second computer to display by a processor an information panel that is coupled associated to a first web page of a browser window move by the processor via a drag and drop operation the information panel outside the first tabbed web page to a panel bar on a desktop user interface and docking the information panel to the panel bar based on the moving.

In many web based applications for example in a web based e mail application the left hand side of the display may contain a number of Graphical User Interface GUI objects hereafter referred to as information panels which organize information such as emails or contact lists that are displayed to a user. For example in a web based email application Inbox Draft Sent or Spam information panels can be provided to organize a user s emails. To facilitate navigation of the information contained within these information panels the panels can be made expandable and collapsible. For example when a user is looking for a particular email he or she has sent the Sent folder can be expanded and the remaining folders collapsed e.g. by clicking on the panels . These information panels however can also be automatically expanded or collapsed based on the user s actions within the web browser or user interface.

In one implementation in order to view the information contained within a collapsed information panel such as the Tasks panel the user can manually collapse one or more of the currently expanded information panels and and manually expand the Tasks information panel . The user can do this for example by clicking on the Tasks information panel to manually toggle its display state from a collapsed to an expanded state and by clicking on the Inbox information panel to manually toggle its display state from an expanded to a collapsed state. Alternatively as disclosed herein when a user manually expands an information panel the operating system and or application e.g. browser can automatically collapse other information panels that are displayed in their expanded state. For example when the user clicks on the Tasks information panel to manually expand it the operating system and or browser can automatically collapse the Contacts and Inbox information panels and to maximize the screen area in the window that can be used to display the information elements under the Tasks information panel . Moreover as the user scrolls down the window the operating system and or browser can receive information about the user s movement within the user interface and or browser window and can use that information to automatically expand and collapse one or more of the information panels .

As shown in as a user scrolls through the items in an expanded Contacts information panel the operating system and or web browser can move the items under the Contacts information panel upward and can eventually move them off screen. When the user has scrolled through all of the items under the Contacts information panel the operating system and or browser can automatically collapse the information panel but continue to display its title. When the operating system and or browser automatically collapses the Contacts information panel as described above it can display the Inbox information panel directly beneath the Contacts information panel . As the user scrolls through the information elements under the expanded Inbox information panel the operating system and or browser can similarly move the information elements in the Inbox information panel upward and eventually off screen. As with the information elements under the Contacts information panel when the user has scrolled through all of the information elements under the Inbox information panel the operating system and or browser can automatically collapse the Inbox information panel but continue to display its title.

In addition to automatically collapsing information panels based on the user s actions within the user interface the operating system and or browser can automatically expand information panels. For example as the user scrolls down through the Contact and Inbox information panels the operating system and or browser can use information regarding the position of the scroll bar within the window to determine whether any information elements under the Tasks information panel have become displayable. When at least one such information element becomes displayable the operating system and or browser can automatically expand the Tasks information panel to display that information element beneath the title of the Tasks information panel. In one implementation when determining which information elements under an information panel are currently displayable within the window the operating system and or browser can reserve screen space to display the titles of the other information panels. For example when determining which information elements under the Tasks information panel are currently displayable the operating system and or browser can reserve screen space to display at least the titles of the Contacts Inbox and Drafts information panels.

The operating system and or browser can also automatically expand the Tasks information panel whenever the user has scrolled past the title of that information panel. For example when the operating system and or browser determines that the user has scrolled past the title of the Tasks information panel the operating system and or browser can automatically expand the Tasks information panel to reveal one or more information elements under the information panel. In one implementation the operating system and or browser can automatically expand the Tasks information panel to reveal as many information elements under the Tasks information panel as possible beginning with the first information element.

The process described above i.e. of automatically expanding and contracting an application s information panels to facilitate a user s view of information stored in an application is not limited to application based information panels such as the web based email application s information panels described above. Instead the process can be used to automatically expand and contract other types of information panels that can be displayed within any user interface such as a desktop display. An information panel may be moved to different locations and may be docked to an edge of the desktop display e.g. to a panel bar. Information panels may also be displayed or positioned in any other suitable way e.g. aligned in parallel with but not directly against an edge of a desktop display. Desktop user interface information panels can contain applications notifications browser histories document lists music play lists chat histories and user generated content such as pop up windows. For example a Talk application which may be a chat application can be docked as an information panel in a desktop user interface on a computer display. When expanded the Talk information panel can reveal a list of chats the user has had with other users using the Talk application as well as metadata about the chats e.g. with whom they were conducted and the content of the chats themselves. Similarly the Docs application which may be a word processing application can be docked as an information panel to the side of a desktop user interface on a computer display. When expanded the Docs information panel can reveal a list of documents the user has created reviewed or edited using the Docs application or any other document creation and viewing application. The documents in the list can be stored locally on the user s computer or remotely on a network or cloud based server.

In general the operating system and or browser can automatically expand and collapse desktop user interface information panels based on a user s activity within or movement through the desktop user interface. For example as explained above the operating system and or browser can determine whether to automatically expand or collapse an information panel based on the position and movement of a scroll bar within the user interface or based on the position and movement of a cursor representing a pointing device e.g. a mouse within the user interface. The operating system and or browser can receive information about the current position of a scroll bar or cursor within the user interface and can automatically expand one or more information panels to reveal the information elements that are contained within those information panels as described above. For example if a user selects e.g. clicks on an information panel with a pointing device the operating system and or application e.g. browser can expand that information panel to reveal its information elements to the user. In doing so the operating system and or browser can automatically collapse other information panels to reveal more content from the information panel selected by the user. Similarly as a user scrolls through the desktop user interface the operating system and or browser can determine from the position of the scroll bar when at least one information element within an information panel becomes displayable and can automatically expand the information panel when such a determination is made.

The operating system and or application e.g. browser can also automatically collapse one or more information panels based on the position and movement of a scroll bar or cursor representing a pointing device within the user interface. For example the operating system and or browser can automatically collapse all information panels except for an information panel the user selects e.g. clicks on with a pointing device. The operating system and or browser can also determine based on the position of a scroll bar within the user interface when none of the information elements within an information panel are currently displayable within the user interface and can automatically collapse the information panel when such a determination is made. Similarly as described above the operating system and or browser can automatically collapse an information panel when a user has scrolled through all of the information elements that are contained within that information panel.

As shown in Email which may be an email application Talk and Docs applications can be vertically stacked as a series of information panels in a vertical Panel Bar of a desktop user interface . Vertical Panel Bar can be displayed at the left edge of user interface as shown in the figures or along the right edge of user interface not shown . As with the information panels in an application user interface the information panels in a desktop user interface can be automatically expanded and collapsed by an operating system based on a user s activity within the user interface. The automatic expansion and collapse of information panels within a desktop user interface can occur in the same manner as the automatic expansion and collapse of information panels within an application user interface e.g. the Inbox Contacts Tasks and Drafts information panels in the web based email application as described above. As the user interacts with objects on the desktop e.g. drags a pointing device across the objects on the desktop the operating system can use information about the current position and movement of the cursor or pointing device for example to automatically expand an information panel in the Panel Bar . For example the operating system can expand an information panel when a user selects it e.g. clicks on it and can automatically collapse other information panels within the desktop user interface in order to provide the user with a deeper view into the selected information panel. Moreover the operating system can expand an information panel when the user scrolls past the title of the information panel or when the operating system and or browser determines that at least one information element within the information panel becomes displayable within the user interface. Similarly the operating system can automatically collapse an information panel in the Panel Bar when the user has scrolled past the last information element in the information panel or when the operating system and or browser determines that none of the information elements within the information panel are currently displayable.

As shown in when the operating system automatically expands an information panel such as the Talk information panel the individual information elements that are contained within that information panel are revealed. For example when a user scrolls past the Talk information panel the operating system can automatically expand the Talk information panel to reveal a number of recent chats the user has had with other users. The information revealed can include for example the person with whom the user chatted and the date and time not shown of the chat. Other information could also be revealed such as the duration of the chat and the content of the chat itself. When different information panels are expanded different information elements can be revealed. For example if the operating system and or browser automatically expanded the Docs information panel the expanded information panel could reveal a list of documents the user has recently opened saved created edited copied renamed or viewed. And as discussed above were the user to scroll up and through all of the information elements in the Talk information panel the operating system could automatically collapse the Talk information panel and expand the Email information panel . Once expanded the Email information panel could reveal a list of email messages the user has recently sent or received.

In another implementation as shown in the Email Talk and Docs applications can be horizontally displayed as a series of information panels in a horizontal panel bar of desktop user interface . The horizontal panel bar can be displayed at the bottom edge of user interface as shown in the figures or along the top edge of user interface not shown . The Email Talk and Docs information panels can be automatically expanded and collapsed when displayed in horizontal panel bar in the same manner as described above when they are displayed in a vertical panel bar . As the user moves through the user interface the operating system can use information about the current position and movement of a horizontal scroll bar or cursor representing a pointing device to automatically expand and collapse the horizontally displayed Email Talk and Docs information panels in the horizontal panel bar . For example the operating system can expand an information panel when a user selects it or when the user scrolls past its title. Similarly the operating system can automatically collapse an expanded information panel in the horizontal panel bar when the user has scrolled past the title of the information panel.

As shown in when the operating system automatically expands an information panel such as the Talk information panel the individual information elements that are contained within that information panel are revealed. For example when a user scrolls past the Talk information panel the operating system can automatically expand the Talk information panel to reveal a number of recent chats the user has had with other users. When different information panels are expanded different information elements can be revealed. And were the user to scroll past the Talk information panel the operating system could automatically collapse the Talk information panel and automatically expand the DOCS information panel . Once expanded the DOCS information panel could reveal a list of documents the user has recently opened saved created edited copied renamed or viewed.

The operating system and or browser can loop through the received information panels and can determine for each information panel whether the information panel is currently displayable and or should currently be displayed within the user interface . To make this determination the operating system can use information about the current size of the user interface or browser window and information about the user s current position within the user interface or browser window. The user s current position within the user interface or browser window can be determined from the position of a cursor or from the current position of a scroll bar within the user interface. If the information panel is not currently displayable within the user interface the operating system and or browser can select the next information panel in the list if one exists otherwise the process terminates.

However if the information panel is currently displayable within the user interface the operating system and or browser can determine if any of the information elements within the information panel is currently displayable and or should currently be displayed within the user interface . As before the operating system and or browser can use information about the current size of the user interface or browser window and information about the user s current position within the user interface or browser window to make this determination. For example as discussed above the operating system and or browser can determine that an information element within an information panel is currently displayable and should be displayed whenever the information about the current size of the user interface or browser window and the user s current position within the user interface or browser window indicates that the user has selected e.g. clicked on the information panel has scrolled past the title of the information panel or that the information elements within the information panel have become displayable.

If the operating system and or browser determines that no information elements are currently displayable in the user interface the operating system and or browser can display the title of the information panel in the user interface . By displaying only the title of the information panel the panel will appear to be in its collapsed state within the user interface. However if the operating system and or browser determines that at least one information element within the information panel is currently displayable in the user interface the operating system and or browser can display the title of the information panel and the title of the at least one currently displayable information element within the information panel in the user interface . The title of the at least one currently displayable information element can be displayed beneath the title of the information panel in the user interface. By displaying both the title of the information panel and the title of the at least one information element within the information panel the information panel will appear to be in its expanded state within the user interface. After displaying either the title of the information panel or the title of the information panel and the titles of all currently displayable information elements within the information panel the operating system and or browser can select the next information panel in the list of information panels if one exists otherwise the process terminates.

In some embodiments the operating system and or browser need not loop through the received information panels in order to determine that a particular information panel and or an information element within that information panel is currently displayable or should be displayed. For example one or more actions by the user may indicate that a particular information panel and its information elements should be displayed if possible e.g. if the user has expressed special interest in that particular information panel which may then trigger determinations of whether the information panel and its information elements are currently displayable and respectively . These determinations may then in turn trigger display of the information panel title and or displayable information elements for that particular information panel. In this way one or more information panels may be directly displayed and or expanded without the need to loop through the other information panels.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smart phone personal digital assistant or other similar mobile device.

According to an example embodiment one or more movable information panels may be provided. A movable information panel may be a set of displayable information that may be moved to different locations. An information panel may be associated with or coupled to and disassociated from or decoupled from web pages and may be converted from an information panel to a tabbed web page and vice versa . Also an information panel may be docked to a panel bar and may be undocked from the panel bar for example. Information panels may be elements such as elements or portions of a web page that may be selected by a user e.g. via a mouse or pointing device and moved to different locations. Information panels may include as some examples applications web pages a task list a buddy list or contact list a chat roster an email application e.g. Email web based email application a video application window a window for a text or Word document and other user generated content a pop up window a weather information panel that provides weather information etc. An information panel at least in some cases may be displayed as a small window or mini web page that is smaller than a full size web page or window as displayed.

For example a browser may recognize and display a movable information panel s within a tabbed page or may move e.g. based upon user input the information panel to a different page or application and the user may associate or couple or embed the information panel to the new page or application. In another example a user interested in a particular information panel in a tabbed page that is crowded with less useful information can select the information panel of interest and dock it to the left of the browser e.g. dock it to a vertical panel bar on the desktop dock it to a horizontal panel bar on a desktop or dashboard at the bottom of a desktop interface or elevate or move the information panel to its own tab e.g. displaying the information panel as its own tabbed page within the browser. These are merely some examples.

A movable information panel e.g. in the case of a web page may include an associated block of HTML Hypertext Markup Language code or code provided in another language with an attribute of extractable or movable for example which may indicate to the web browser that this information panel and associated HTML code may be disassociated or decoupled or extracted from other web pages or windows and moved to other locations and may even be associated or coupled to a new web page window or application for example.

In an example embodiment a movable information panel may be associated with or coupled to or embedded within a page or window where the information panel is provided at a fixed location. For example when an information panel is associated with a web page the information panel may cover up a portion of the web page where it resides and the information panel may be provided at a static or fixed location such that the information panel may move with the associated web page. The information panel may be disassociated or decoupled from the page or window e.g. when a user selects a pop out or disassociate area or portion of the information panel which may cause the information panel to pop out or be disassociated or extracted from the page or window allowing the information panel to move with respect to the page or window fore example. In other example embodiments an information panel may be disassociated or decoupled by a user selecting a pop out menu option using a mouse keyboard or other pointing device or by simply selecting the information panel and dragging the information panel to a new location. Similarly an information panel may be associated with or coupled to a web page by selecting a pop in or associate area or button of the information panel by selecting a pop in menu option or by simply dragging and dropping the information panel onto the web page or application to which the information panel is being associated with.

An information panel may exist as part of a web page associated with the web page or as a disassociated information panel. An information panel may also be docked to a panel bar which may be located anywhere on a desktop e.g. horizontal panel bar at an upper or lower edge or a vertical panel bar. Also information panels may be created or opened based on an address or link or URL Uniform Resource Locator . For example an information panel may be opened or created by typing in the address or link to the information panel in an application such as a web browser or by selecting or clicking on a link to the information panel. Once created or opened the information panel may be moved to various locations associated with a web page docked to a panel bar converted to a tabbed web page etc.

Information panel A may include an area or region such as a pop out area or pop out button that may allow a user to pop out or disassociate or decouple the information panel A from the web page and allow the information panel to move with respect to web page . Information panel A may include a draggable area where a user may select this draggable area to drag or move the information panel A to a different location e.g. via a drag and drop operation for example once the information panel A has been popped out or decoupled. Similarly information panel A may include a pop out area to allow a user to pop out or disassociate the information panel from web page and a draggable area that may allow a user to select to move the information panel A via a drag and drop operation once the information panel A has been popped out or decoupled. Information panels A and A may be smaller than the tabbed web page or the browser window .

Alternatively an information panel may be associated or disassociated from a web page or application based on a selection of a menu option for the information panel e.g. an associate or pop in menu option or a disassociate or pop out menu option. In another example embodiment it may not be necessary to disassociate an information panel from a web page using a pop out area or a pop out menu command. Rather the information panel may be disassociated from a web page when the information panel is selected and dragged using a pointing device for example. In this example therefore a separate disassociate or pop out operation is not necessary as the information panel may simply be dragged and dropped to a new location. Similarly in one example embodiment an information panel may be associated with a web page or application by dragging and dropping the information panel onto the web page or application window.

In an example embodiment when an information panel is associated with a web page the web page or browser window the information panel may be or may be considered to be a part of the browser window or web page and the web page may control the information panel e.g. adjust or control its size location appearance and may control other qualities of the information panel. Once the information panel has been disassociated from a web page communication may still occur between the previously associated web page and the information panel but the web page may not typically control the information panel. For example after disassociating a chat roster information panel from an email web page communication may still occur between the chat roster and the email application e.g. to perform updates on one based on changes to the other but the chat roster characteristics may not typically be controlled by the email application.

In an example embodiment a user may select pop out area to pop out or disassociate or decouple the information panel A from web page . The user may then select the draggable area to drag the information panel A via a drag and drop operation outside of the browser window and web page to a new location B on desktop . The information panel may be placed at a desired location on the desktop and may then be associated with a different web page may be docked to a panel bar or the desktop or may be converted to a tabbed web page as examples.

In another example embodiment a user may select pop out area of information panel A to pop out or disassociate the information panel A from web page . The user may then select the draggable area and pull or drag the information element as shown by line up to a tab strip of the browser and tabbed web page where one or more tabs are located or will be located. This may cause the browser to automatically display the information panel A as a tabbed web page e.g. at the same level as tabbed page . For example dragging the information panel to the tab strip and dropping the information panel over the tab strip may cause the information panel A to be converted to a tabbed web page e.g. where the size of the information panel A may be increased in size and a tab for such web page may be added to the tab strip .

Alternatively an information panel may be converted to a tabbed web page by clicking on an information panel or by selecting a convert to tabbed web page menu option for the information panel. As noted converting an information panel to a tabbed web page may include for example increasing a size or adjusting a size of the information panel and adding a tab to the tab strip for the information panel.

In an example embodiment the information panel B that is displayed as a tabbed web page B in may be moved back to a smaller movable web page A e.g. by selecting the pop out area and or by dragging the window down e.g. using the draggable area for example or by using another command or user input.

In this manner the information panel C may be displayed at a first location within a boundary of a first application window e.g. within web page . The information panel C may be moved e.g. via a drag and drop operation in accordance with user input e.g. based on user motion movement of a mouse or other pointing device to a second location shown as D within a boundary of a second application window e.g. within web page .

The user may then select the pop in area of the information panel D to pop in or associate the information panel D to the ESPN web page e.g. where the information panel D will not move without popping it out again . Note the area may in an example embodiment toggle the information panel between pop out disassociate or decouple and pop in associate or couple .

The docking may include the processor or browser reducing a size of the docked information panel to allow the panel bar A to accommodate a plurality of information panels and then attaching the reduced information panel to the panel bar. For example as more information panels are docked or attached to the panel bar A e.g. more docked panels squeezed into a same size panel bar the size e.g. width of each information panel docked to the horizontal panel bar A may be decreased. Thus the size of the information panel E may be decreased or reduced for docking the panel to the panel bar. For example information panel F that is docked to the panel bar A may be smaller than the information panel E that is not docked to the panel bar.

In addition a user may then disassociate the weather information panel H from the panel bar B which allows the information panel H to move with respect to the panel bar B. The user may then select draggable area to cause the browser or computer processor to un dock or detach or decouple the panel H from the panel bar B. The information panel may then be moved to another location on the desktop.

The information panel may be moved to a tab strip such as tab strip . The information panel may be displayed as a second tabbed web page . For example the information panel may be converted to a tabbed web page which may include increasing or adjusting a size of the information panel and adding a tab for the new web page.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations of the invention have been described above. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example the logic flows depicted in the figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or eliminated from the described flows and other components may be added to or removed from the described systems without departing from the scope of the invention. Accordingly other implementations are within the scope of the following claims.

