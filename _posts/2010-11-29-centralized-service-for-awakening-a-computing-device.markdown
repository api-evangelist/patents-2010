---

title: Centralized service for awakening a computing device
abstract: Various technologies and techniques are disclosed for providing and interacting with a centralized wake service. A server-side wake service is provided that is operable to allow applications to subscribe to the wake service. The wake service receives a wake request directed to a particular computing device from a particular one of the applications. The wake request is forwarded from the wake service to a client-side communication service on the particular computing device if forwarding is determined to be appropriate. When the client-side communication service on the particular computing device receives the wake request while in a reduced power mode, the computing device wakes up and an appropriate response is determined.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09164567&OS=09164567&RS=09164567
owner: Microsoft Technology Licensing, LLC
number: 09164567
owner_city: Redmond
owner_country: US
publication_date: 20101129
---
This application is a continuation application of co pending U.S. patent application Ser. No. 11 710 708 filed in the U.S. Patent and Trademark Office on Feb. 26 2007.

Computing devices of today have various power mode settings that control when various subsets of the device turn off to conserve power. Laptops typically find these power mode settings to be most helpful so battery life can be preserved when the computing device is not in use.

More and more services are being designed to follow the user around and communicate with the user wherever they may be. Email instant messaging voice over IP and other such network services are just a few examples of such services. However today s world of always on and always available comes into direct conflict with the idea of a reduced power mode that is available on most computing devices. In other words once the computer enters the reduced power mode many network services can no longer communicate with the user to achieve the desired goal.

Various technologies and techniques are disclosed for providing and interacting with a centralized wake service. A server side wake service is provided that is operable to allow applications to subscribe to the wake service. The wake service receives a wake request directed to a particular computing device from a particular one of the applications. The wake request is forwarded from the wake service to a client side communication service on the particular computing device if forwarding is determined to be appropriate. In one implementation various settings such as power information user contact preferences and user presence information that were provided by the client side communication service are used to determine whether forwarding is appropriate.

When the client side communication service on the particular computing device receives the wake request while in a reduced power mode the computing device wakes up and an appropriate response is determined. In one implementation an appropriate response includes responding to the wake service to acknowledge the request and then pursuit of communications with the particular application that requested the wake.

This Summary was provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

For the purposes of promoting an understanding of the principles of the invention reference will now be made to the embodiments illustrated in the drawings and specific language will be used to describe the same. It will nevertheless be understood that no limitation of the scope is thereby intended. Any alterations and further modifications in the described embodiments and any further applications of the principles as described herein are contemplated as would normally occur to one skilled in the art.

The system may be described in the general context as an application that wakes computing devices from reduced power modes but the system also serves other purposes in addition to these. In one implementation one or more of the techniques described herein can be implemented as features within a server side wake service a client side communication service and or from any other type of program or service that manages communications between applications over a network.

In one implementation a centralized wake service is provided that allows computing devices to be awakened when they are in a reduced power mode by network applications. For example a voice over IP communication application may contact the wake service when it wishes to communicate with a particular computing device. The wake service uses information about the particular computing device to communicate with that computing device and to wake it from the reduced power mode if the particular computing device is in the reduced power mode so the communications can continue. In one implementation various settings such as one or more policies allow the particular device to indicate when it should be awakened and when it should not be awakened.

Turning now to a diagram of one implementation illustrates how some of the physical components of the computer system of correlate to particular logical components. For example the network applications communicate with application programming interfaces for internet services in order to utilize the wake service of wake server . The particular computing device communicates with application programming interfaces for and or to computing devices such as the client side communication application as described in . In one implementation the core logic and wake up packet mechanism are contained in the server side wake service such as the server side wake application described in . The wake up packet mechanism communicates with the particular computing device to wake it from a reduced power mode when desired.

Turning now to client side communication application operating on computing device of is illustrated. In one implementation client side communication application is one of the application programs that reside on computing device of . However it will be understood that client side communication application can alternatively or additionally be embodied as computer executable instructions on one or more computers and or in different variations than shown on . Alternatively or additionally one or more parts of client side communication application can be part of system memory on on other computers and or applications on or other such variations as would occur to one in the computer software art.

Client side communication application includes program logic which is responsible for carrying out some or all of the techniques described herein. Program logic includes logic for providing a client side communication service that is operable to run on a computing device on a software or hardware component and to communicate with a wake service on a server the wake service being responsible for managing connectivity requests from a plurality of applications logic for receiving a wake request from the wake service even while the computing device is in a reduced power mode which may be located in hardware firmware and or software etc. logic for waking up the computing device from the reduced power mode upon receiving the wake request if applicable logic for determining an appropriate response to the wake server such as by analyzing one or more policies logic for sending communication details to the wake service such as user contact preferences availability security settings policy settings and current state and other logic for operating the application . In one implementation program logic is operable to be called programmatically from another program such as using a single call to a procedure in program logic .

Turning now to server side wake application operating on computing device of is illustrated. In one implementation client side communication application is one of the application programs that reside on computing device of . However it will be understood that server side wake application can alternatively or additionally be embodied as computer executable instructions on one or more computers and or in different variations than shown on . Alternatively or additionally one or more parts of server side wake application can be part of system memory on on other computers and or applications on or other such variations as would occur to one in the computer software art.

Server side wake application includes program logic which is responsible for carrying out some or all of the techniques described herein. Program logic includes logic for providing a server side wake service that is operable to allow a plurality of applications to subscribe to the wake service over a network logic for receiving a wake request directed to a particular computing device from a particular one of the applications e.g. because the particular application wishes to communicate with the particular computing device logic for forwarding the wake request to a client side communication service on the particular computing device if forwarding is determined to be appropriate logic for communicating with the client side communication service on the particular computing device to obtain state information about the particular computing device such as power information system connectivity information and administrative configuration information logic for communicating with the client side communication service prior to forwarding the wake request to determine if forwarding is appropriate and other logic for operating the application . In one implementation program logic is operable to be called programmatically from another program such as using a single call to a procedure in program logic .

Turning now to with continued reference to the stages for implementing one or more implementations of client side communication application and or server side wake application are described in further detail. is a high level process flow diagram for system . In one form the process of is at least partially implemented in the operating logic of computing device of . The process begins at start point with providing at least one server operable to communicate with one or more client computing devices over a network the server having a wake service stage . At least one application is provided with an ability to communicate with the wake service over the network the application being operable to send a wake request to the wake service when the application desires to communicate with a particular one of the computing devices stage .

The wake service is provided with the operability to communicate with a client side communication service on the particular computing device to obtain state information such as to determine if forwarding of the wake request is appropriate stage . The wake service is provided with the operability to forward the wake request to the particular computing device if the wake service determines forwarding is appropriate based on a set of policies stage . As a few non limiting examples the set of policies may help the wake service determine if it is appropriate to wake up the computing device from a reduced power mode if the computing device is not in reduced power mode and is ready for communications etc. stage . The process ends at end point .

As shown in an exemplary computer system to use for implementing one or more parts of the system includes a computing device such as computing device . In its most basic configuration computing device typically includes at least one processing unit and memory . Depending on the exact configuration and type of computing device memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. This most basic configuration is illustrated in by dashed line .

Additionally device may also have additional features functionality. For example device may also include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Computing device includes one or more communication connections that allow computing device to communicate with other computers applications . Device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art and need not be discussed at length here. In one implementation computing device includes client side communication application of . In another implementation computing device includes server side wake application of .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. All equivalents changes and modifications that come within the spirit of the implementations as described herein and or by the following claims are desired to be protected.

For example a person of ordinary skill in the computer software art will recognize that the client and or server arrangements user interface screen content and or data layouts as described in the examples discussed herein could be organized differently on one or more computers to include fewer or additional options or features than as portrayed in the examples.

