---

title: Architectures and methods for code combiners
abstract: Various embodiments are directed to systems and methods for combining a plurality of codes. The plurality of codes may be binary codes having possible logical values of âˆ’1 and +1 and may comprise an even number of codes. An output of the combining vmay be given by:

=sgn(),

where vis the sum of the first plurality of codes at the first time. Embodiments for allocating different power levels among various codes are presented.

url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08982924&OS=08982924&RS=08982924
owner: The Aerospace Corporation
number: 08982924
owner_city: El Segundo
owner_country: US
publication_date: 20100302
---
This invention was made with government support under Contract No. FA8802 09 C 0001 awarded by the Department of the United States Air Force. The government has certain rights in the invention.

Code division multiple access CDMA modulation techniques are used in various communications fields to allow multiple access i.e. multiple data signals to be transmitted on a single channel . According to CDMA each data signal is modulated with a pseudo random code having a wider bandwidth than the data signal. The result is a spread spectrum user signal or code. Different data signals to be transmitted on the same channel may utilize different pseudo random codes. A receiver of a particular data signal may either have or may derive the pseudo random code with which its respective data signal was modulated. The receiver may utilize the appropriate pseudo random code to demodulate the user signal or code and derive the original data signal. User signals or codes modulated by pseudo random codes not known to the receiver will appear as noise.

It is often desirable to amplify a CDMA signal composed of many individual user signals or codes e.g. to transmit the signal . For example a global positioning system GPS satellite may transmit a combination of multiple GPS signals. Also for example a mobile telephone base station may transmit a combination of multiple CDMA signals corresponding to different conversations or other data transactions. In many applications highly linearized power amplifiers LPA s may be used to amplify signals comprising a combination of codes. LPA s generate an output signal with minimal distortion however suffer from poor power efficiency. When a higher power efficiency is required high power nonlinear power amplifiers HPA s may be used. HPA s however generate a large number of distortion terms that are present along with the input signal at the amplifier output. In addition there is some loss in the signal power as a component of the amplifier output power is used up by the distortion terms. It is possible to minimize the distortion terms and associated output power loss by configuring the HPA with a larger output power back off. This however also reduces DC RF power conversion efficiency.

It is known to reduce HPA distortion by pre combining CDMA codes prior to amplification according to a majority logic scheme. A majority logic combiner counts the number of codes at its input that have a value of 1 and 1 during any chip period. The output is set to which ever value e.g. 1 or 1 occurs in a majority of the signals. Where M is the number of codes to be combined the output of a majority logic combiner at any time k may be equal to 1 if the number of codes that take the value 1 is greater than or equal to M 1 2 and is equal to 1 otherwise. For example Table 1 below shows a chart illustrating the output v of a majority logic combiner operating on three input codes c c c 

Majority logic combining may allow HPA amplifiers to operate more effectively however the majority logic combining process itself may introduce distortion terms which can be amplified by the HPA leading to signal degradation.

Various embodiments are directed to signum code combiners that combine a plurality of codes and have three possible logical outputs 1 1 and 0. For example the output of the signum combiner may be 1 if the sum of the input signals is greater than zero 1 if the sum of the input signals is less than zero and zero if the sum of the input signals is equal to zero. Various embodiments are also directed to signum combiners have various additional features including for example successive signal insertion signum combiners signum combiners with interlacing and weighted coefficient signum combiners. Various embodiments may also be directed to modulators for modulating signum combiner outputs according to any suitable modulation scheme including for example binary phase shift keying BPSK modulation and quadrature phase shift keying QPSK modulation.

Various embodiments are directed to signum code combiners that may decrease distortion and increase power efficiency and increase the number of potential output levels from two to three. For example a signum combiner may generate an output according to 1 and 2 below where c for i 1 to M represents the value of M input codes during a period k. The period k may be a chip period or other period indicating one cycle of the input codes. 1 sgn 2 The signum function is given by 3 

When the number of input codes is even a signum combiner may enjoy a reduction in distortion and an increase in power efficiency relative to a majority logic combiner. Before finding the distortion characteristics of a signum combiner however an analysis of the distortion characteristics of a majority logic combiner is first derived for comparison purposes.

In general the output of the majority logic code combiner will have some positive cross correlation with all of the input codes representing the signal component as well as a distortion term that has zero cross correlation with all of the input codes. The amplitudes and powers of the various components may be obtained by cross correlating the output with the input codes and the distortion terms of various orders. For example where the number of codes M is equal to three the output will have only the components of the input codes and the third order distortion term. Table 3 below shows the logic relationships between the input codes c c c the output X v and the third order distortion term equal to the product of c c cand v.

To derive a closed form expression for the more general case of M terms it may be observed from Table 3 that 

In a more general case of M codes the norder term may be given by odd 10 The indices i i . . . iare all distinct and may take values between 1 and M. In this case X 1 if the number of 1 s within the subsequence c c . . . cis an odd integer and X 1 if the number of 1 s in the subsequence c c . . . cis an even integer. Similarly X 1 if the number of 1 s in the complete code sequence is greater than M 2 and X 1 if the number of 1 s in the complete code sequence is less than M 2. With the order n of the term odd the number of terms Ifor which X 1 and X 1 is given by 

Equations 15a 15c below illustrate an example realization of Equations 11 14 above for the case where M 5 and n 3.

Table 4 below provides the number of terms t the amplitude of the terms a and the total power Pin all the terms of order n for M taking odd integer values between 3 and 9. The terms corresponding to n 1 of course are the signal terms while all the other terms are the distortion terms.

As illustrated by Table 5 for the existing majority logic combiners the maximum amount of power Pcorresponding to the signal is 75 of the total power with the maximum possible power to distortion ratio being 4.77 dB this for the case where M 3. This ratio decreases further as the number of codes M is increased. Implicitly the cross correlation properties of the codes are modified due to the presence of the distortion terms leading to the degradation of receiver acquisition and tracking performance.

With the distortion performance of the existing majority logic combiners as a baseline the distortion of a signum combiner with an even number of input codes may be found in a manner similar to that described above with respect to the majority logic combiner. As with the analysis of the majority logic converter above c c . . . cmay represent the input codes Xmay represent the output vand Xmay represent a distortion of term of order n n odd .

The distortion term Xmay be given by 17 1 17 In 17 the indices i i . . . iare all distinct and may take values between 1 and M. This is in view of the fact that the terms for which i i . . . iare not all distinct may reduce to terms of lower order with distinct indices due to the property that c 1 for all code indices i and time k. Accordingly 

A comparison of Table 7 with Table 5 above demonstrates that the signum combiner provides an improved signal to distortion ratio SDR and power efficiency over the majority logic combiner. For example for M 4 codes the signum combiner has an SDR of 9.54 dB. The majority logic combiner has an SDR of 4.77 dB when M 3 and an SDR of 3.74 dB for M 5. The average SDR of the majority logic combiner between the case where M 3 and the case where M 5 is 4.25 dB. Compared with the SDR for the signum combiner when M 4 this represents an improvement of more than 5 dB. Also the power loss to distortion Pof the signum combiner when M 4 is equal to 0.46 dB compared with majority logic combiner s 1.39 dB average between the M 3 and M 5 cases. Similarly the power efficiency defined as the ratio of Pand Pis equal to 90 with M 4 for the sigma combiner compared to 72.5 average for M 3 and M 5 for the majority logic combiner. As the power conversion efficiency of the high power non linear amplifier HPA with both the majority logic and signum combiners is about same the signum combiner may result in a very significant overall power efficiency improvement. For example with a 60 conversion efficiency of the HPA the overall efficiency of the sigma combiner may be 54 0.9 0.6 100 compared to 43.5 for the majority logic combiner. These advantages may be obtained with about 1 dB reduction in the signal power P. However as shown in the following the signal power Pcan be increased at the cost of a nominal reduction in the SDR which still remains relatively high.

In addition to the mathematical analysis presented the performance of a signum combiner was also obtained utilizing a computer simulation developed in the MATLAB software package available from THE MATHWORKS. According to the simulation a signum combiner with an output given by Equation 2 above was input with M random codes of length 8192. The amplitudes of the signal terms denoted by awere obtained by correlating the combiner output with the various input codes. Fifty simulations were run. Table 8 illustrates the averages of the amplitudes for various codes over the fifty simulations.

The various signum code combiners described herein may be implemented by any suitable hardware and or software combination. Also for example different architectures may utilize signum combiners in different ways. For example illustrates one embodiment of an architecture for utilizing a cascaded set of signum combiners to combine code groups of differing power. According to various embodiments the architecture and generalized versions thereof may be referred to as successive signal insertion signum combiners. In the embodiment illustrated by the architecture three code groups are received CG CG CG. Codes within a common group may have the same power level. Also for code CGmay have the highest power with CGhaving a power less than or equal that of CGand CGhaving a power less than or equal to CG. Each of the code groups CG CG CGmay be provided as input to respective signum combiners . The output of the signum combiner corresponding to the highest power code group CG may be provided as input to a logic converter . The output of the logic converter may provide a magnitude of its input. For example if the output of the signum combiner is equal to 1 or 1 the output of the logic converter may be 1. If the output of the signum combiner is equal to 0 then the output of the logic converter may be 0. The output of the logic converter may be provided to the inhibit input of a tri state gate whose input is connected to the output of the signum combiner corresponding to the next highest power code group CG . Accordingly the output of the tri state gate may be equal to zero when the signum combination of the CGcodes is equal to 1 or 1 and may be equal to the signum combination of the CGcodes when the signum combination of the CGcodes is equal to zero.

An additional signum combiner may receive as input a signal that is the output of the signum combiner corresponding to CG and a signal that is the output of the tri state gate . The output of the signum combiner may be provided to a logic converter which may operate in a manner similar to that of converter . The output of the logic converter may be provided to a tri state gate . The input of the tri state gate may be the output of the signum combiner corresponding to the next highest power code group CG . An additional signum combiner may receive as input a signal corresponding to the output of the combination of the CGand CGcodes e.g. the output of the signum combiner . In addition the combiner may receive an input that may be equal to 0 when the combination of CGand CGis equal to 1 or 1 and may be equal to the combination of CGwhen the combination of CGand CGis equal to zero. The output of the combiner may be the output of the architecture .

The cascaded architecture illustrated in may be expanded for an arbitrary number of code groups CGwhere i 1 to N. The power of each code group CGmay decrease as i increases. The number of codes in each code group CGmay be given by M. In the general case each code group would be initially combined by a signum combiner such as the combiners of the architecture . Code group CGmay be combined with code group CGutilizing the logic converter and tri state gate logic shown in the architecture . The combination of groups CGand CGmay then be combined with the code group CG also using the logic converter and tri state gate logic shown in the architecture . This pattern may continue until all of the code groups CGwhere i 1 to N are combined. For example the combination of groups CGthrough CGmay be combined with the group CGuntil all code groups i 1 to N are combined. Table 10 below shows the theoretical performance of successive signal insertion signum combiners for different numbers of code groups N having different numbers of signals M .

Table 11 shows the performance of the combiner shown in for an example with M 6 N 2 M 4 and M 2 with and denoting the amplitude of the Group 1 and Group 2 signals respectively.

According to various embodiments it may be desirable to combine codes while assigning different weights to different codes. For example for codes c c . . . c a weighted coefficients signum combiner output may be given by 23 0 sgn . . . 23 In 23 may be the combiner weighting coefficients. illustrates a block diagram of one embodiment of a two stage weighted coefficients signum combiner . The combiner may receive as input a set of code groups CGwhere i 1 to N. Each group of signals CGmay be combined by first stage combiners to generate outputs sfor i 1 to N. The outputs s s . . . smay be input to the second stage weighted signum combiner which may generate an overall output v. Each input to the combiner may be scaled by a weighting factor . According to various embodiments the first stage combiners may also weight or scale different codes from the respective code groups CGdifferently.

Table 12 shows the performance of the two stage weighted coefficients signum combiner with N 2 and the number of signals in the two groups equal to M 4 M 2. The first stage combiners may have all of their weights equal to 1 with the combiner weights of the second stage combiner given by and .

It will be appreciated that modulating the output of a signum combiner may be different than modulating the output of a majority logic or other code combiner at least because the output of the signum combiner has three possible states e.g. 1 1 and 0 as compared to the typical two states 1 1 . According to various embodiments however the output of a signum combiner may be modulated according to any suitable modulation scheme. For example illustrates a block diagram of one embodiment of a binary phase shift keying BPSK modulator for modulating the output of a signum combiner. A signum combiner may combine a series of codes c for i 1 to n. The combiner may be any suitable type of signum combiner including for example a successive insertion signum combiner such as an interlaced signum combiner such as or one or multiple stage weighted coefficients signum combiner such as .

The output v t of the combiner may be may be input to a square root raised cosine filter for band limiting. The resulting band limited signal v t may be input to a BPSK modulator which may modulate the band limited signal v t with a carrier signal to generate a modulated signal v t output. The output v t of the signum combiner may also be input to a three to two level logic converter . The output of the logic converter may be 1 if the input is non zero and 0 otherwise. The output of the logic converter may be provided to a delay adjust with a delay equal to that introduced by the filter . The output of the delay adjust may be provided to a switch which may control the DC voltage provided by supply to a power amplifier . When the logic converter output is 1 e.g. when v t is 1 or 1 the switch may be closed allowing the amplifier to amplify the modulated signal v t resulting in the transmission of an RF signal v t . When the logic converter output is zero e.g. when v t is 0 the switch may be open preventing amplification of the modulated signal v t and therefore also preventing transmission. It will be appreciated that the power supply switch may lead to some small distortion as it may block any signal caused by adjacent symbols during the period when the signum combiner output is zero. Nonetheless the overall system may provide increased power efficiency as set forth above.

According to various embodiments the band limiting filter and power supply switch may be omitted. When the filter is omitted the output v t of the modulator may be zero when the combiner output v t is also zero. For some power amplifiers such as class B and class C amplifiers there may be no conduction and therefore no transmission when the input is equal to zero. Accordingly in embodiments where the filter is omitted the power supply switch may not be necessary.

The output v t of the in phase combiner may be provided to a logic converter having an output LCequal to 1 if the input is nonzero and equal to zero otherwise. Similarly the quadruature signum combiner output v t may be input to the logic converter having an output LCequal to 1 if the input is nonzero and equal to zero otherwise. The logic converter outputs LCand LCmay be input to logic gates generating outputs L Land L respectively. Lmay be 1 if and only if LCis equal to 1 and LCis equal to zero. Lmay be equal to 1 if and only if both of the inputs LCand LCare equal to zero. Similarly Lmay be equal to 1 if LCis equal to zero and LCis equal to 1. The logic outputs L Land Lmay all equal zero if both LCand LCare equal to one.

The logic output Lmay be provided to and may control a multiplier switch . The multiplier switch may provide an output v t that is equal to v t when Lis zero and is equal to the inphase combiner output v t multiplied by square root over 2 if Lis 1. Accordingly when v t is non zero and v t is zero the combiner output v t may be multiplied by square root over 2 . Similarly a multiplier switch may generate an output v t that is equal to v t when Lis zero and equal to v t multiplied by square root over 2 when v t is nonzero and v t is zero e.g. when Lis equal to one .

The outputs v t v t of the multiplier switches may be input to the QPSK modulator generating the QPSK modulated signal v t at the modulator output. The QPSK modulated signal v t may be input to the power amplifier generating the amplified signal v t . When both the inphase and quadrature signum combiner outputs v t and v t are zero the logic output Lis 1 and the power supply switch is turned to the ground position disconnecting the DC power supply from the power amplifier . Thus no DC power is supplied to the amplifier during the period when both v t and v t are zero resulting in zero output at the QPSK modulator output and ensuring high DC to AC power conversion efficiency. For the usual class B and C amplifier designs there is no conduction with the amplifier input equal to 0 and thus the power supply switch may not be required. Again when class B and or C amplifier designs are used for the power amplifier there may not be any conduction when the input v t is equal to zero and this the power supply switch may be omitted.

The multiplication of the signum combiner outputs v t and v t by square root over 2 in a manner described herein may ensure that the QPSK modulated signal v t is a constant envelope signal when the dc power supply is ON and is zero otherwise. This may maximize the DC to RF power conversion efficiency of the power amplifier . Such a multiplication by square root over 2 may also result in a further improvement in terms of the transmitted signal power P. For example with n 4 codes at the input of the in phase combiner and m 4 codes at the input of the quadrature combiner the coefficients of the various code components present in the signal v t are equal to 0.433 compared to 0.375 for the signum combiner without such modification as given by Table 6. Multiplication by square root over 2 does not result in any increase in the peak envelope power at the amplifier input which is equal to A square root over 2 with or without the multiplication by square root over 2 . The corresponding power levels are P 0.7534 W and P 0.8599 W as compared to P 0.5625 W and P 0.625 W from Table 6. The signal to noise ratio is equal to 8.50 dB compared to 9.54 dB thus resulting in about 1 dB degradation. However the increase in the signal power Pby 1.27 dB is desirable as the signal to noise ratio equal to 8.50 dB is relatively high especially compared to the traditional majority logic combiner with equal to 4.77 dB and 3.74 dB for the number of codes equal to three and four respectively as per the results of Table 5.

It is to be understood that the figures and descriptions of the present invention have been simplified to illustrate elements that are relevant for a clear understanding of the present invention while eliminating other elements for purposes of clarity. Those of ordinary skill in the art will recognize that these and other elements may be desirable. However because such elements are well known in the art and because they do not facilitate a better understanding of the present invention a discussion of such elements is not provided herein.

In general it will be apparent to one of ordinary skill in the art that at least some of the embodiments described herein may be implemented in many different embodiments of software firmware and or hardware. The software and firmware code may be executed by a computer or computing device comprising a processor e.g. a DSP or any other similar processing circuit for example the computing device described below. The processor may be in communication with memory or another computer readable medium comprising the software code. The software code or specialized control hardware that may be used to implement embodiments is not limiting. For example embodiments described herein may be implemented in computer software using any suitable computer software language type using for example conventional or object oriented techniques. Such software may be stored on any type of suitable computer readable medium or media such as for example a magnetic or optical storage medium. According to various embodiments the software may be firmware stored at an EEPROM and or other non volatile memory associated a DSP or other similar processing circuit. The operation and behavior of the embodiments may be described without specific reference to specific software code or specialized hardware components. The absence of such specific references is feasible because it is clearly understood that artisans of ordinary skill would be able to design software and control hardware to implement the embodiments based on the present description with no more than reasonable effort and without undue experimentation.

In the example of the computing device comprises one or more processor circuits or processing units one or more memory circuits and or storage circuit component s and one or more input output I O circuit devices . Additionally the computing device comprises a bus that allows the various circuit components and devices to communicate with one another. The bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. The bus may comprise wired and or wireless buses. The processing unit may be responsible for executing various software programs such as system programs applications programs and or program modules blocks to provide computing and processing operations for the computing device . The processing unit may be responsible for performing various voice and data communications operations for the computing device such as transmitting and receiving voice and data information over one or more wired or wireless communications channels. Although the processing unit of the computing device is shown in the context of a single processor architecture it may be appreciated that the computing device may use any suitable processor architecture and or any suitable number of processors in accordance with the described embodiments. In one embodiment the processing unit may be implemented using a single integrated processor.

The processing unit may be implemented as a host central processing unit CPU using any suitable processor circuit or logic device circuit such as a as a general purpose processor. The processing unit also may be implemented as a chip multiprocessor CMP dedicated processor embedded processor media processor input output I O processor co processor microprocessor controller microcontroller application specific integrated circuit ASIC field programmable gate array FPGA programmable logic device PLD or other processing device in accordance with the described embodiments.

As shown the processing unit may be coupled to the memory and or storage component s through the bus . The bus may comprise any suitable interface and or bus architecture for allowing the processing unit to access the memory and or storage component s . Although the memory and or storage component s may be shown as being separate from the processing unit for purposes of illustration it is worthy to note that in various embodiments some portion or the entire memory and or storage component s may be included on the same integrated circuit as the processing unit . Alternatively some portion or the entire memory and or storage component s may be disposed on an integrated circuit or other medium e.g. hard disk drive external to the integrated circuit of the processing unit . In various embodiments the computing device may comprise an expansion slot to support a multimedia and or memory card for example. The memory and or storage component s represent one or more computer readable media. The memory and or storage component s may be implemented using any computer readable media capable of storing data such as volatile or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. The memory and or storage component s may comprise volatile media e.g. random access memory RAM and or nonvolatile media e.g. read only memory ROM Flash memory optical disks magnetic disks and the like . The memory and or storage component s may comprise fixed media e.g. RAM ROM a fixed hard drive etc. as well as removable media e.g. a Flash memory drive a removable hard drive an optical disk . Examples of computer readable storage media may include without limitation RAM dynamic RAM DRAM Double Data Rate DRAM DDRAM synchronous DRAM SDRAM static RAM SRAM read only memory ROM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory e.g. NOR or NAND flash memory content addressable memory CAM polymer memory e.g. ferroelectric polymer memory phase change memory ovonic memory ferroelectric memory silicon oxide nitride oxide silicon SONOS memory magnetic or optical cards or any other type of media suitable for storing information.

The one or more I O devices allow a user to enter commands and information to the computing device and also allow information to be presented to the user and or other components or devices. Examples of input devices include data ports digital to analog converters DAC s analog to digital converters ADC s a keyboard a cursor control device e.g. a mouse a microphone a scanner and the like. Examples of output devices include data ports DACs ADCs a display device e.g. a monitor or projector speakers a printer a network card . The computing device may comprise an alphanumeric keypad coupled to the processing unit . The keypad may comprise for example a QWERTY key layout and an integrated number dial pad. The computing device may comprise a display coupled to the processing unit . The display may comprise any suitable visual interface for displaying content to a user of the computing device . In one embodiment for example the display may be implemented by a liquid crystal display LCD such as a touch sensitive color e.g. 76 bit color thin film transistor TFT LCD screen. The touch sensitive LCD may be used with a stylus and or a handwriting recognizer program.

The processing unit may be arranged to provide processing or computing resources to the computing device . For example the processing unit may be responsible for executing various software programs including system programs such as operating system OS and application programs. System programs generally may assist in the running of the computing device and may be directly responsible for controlling integrating and managing the individual hardware components of the computer system. The OS may be implemented for example as a Microsoft Windows OS Symbian OS Embedix OS Linux OS Binary Run time Environment for Wireless BREW OS JavaOS or other suitable OS in accordance with the described embodiments. The computing device may comprise other system programs such as device drivers programming tools utility programs software libraries application programming interfaces APIs and so forth.

In various embodiments disclosed herein a single component may be replaced by multiple components and multiple components may be replaced by a single component to perform a given function or functions. Except where such substitution would not be operative such substitution is within the intended scope of the embodiments.

While various embodiments have been described herein it should be apparent that various modifications alterations and adaptations to those embodiments may occur to persons skilled in the art with attainment of at least some of the advantages. The disclosed embodiments are therefore intended to include all such modifications alterations and adaptations without departing from the scope of the embodiments as set forth herein.

