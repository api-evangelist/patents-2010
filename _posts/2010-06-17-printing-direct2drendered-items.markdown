---

title: Printing DIRECT2D-rendered items
abstract: Technology described herein is directed to converting display-rendering instructions (e.g., DIRECT2D) into print-rendering instructions (e.g., EMF, WMF, XPS, and SVG). For example, a request to print an item (e.g., document) is received, the item being displayable on an output device when display-rendering instructions are executed. A print render target is created that includes an instructions converter. The display-rendering instructions are routed to the print render target. The instructions converter maps the display-rendering instructions to the print-rendering instructions, which are usable to print the item.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08947697&OS=08947697&RS=08947697
owner: Microsoft Corporation
number: 08947697
owner_city: Redmond
owner_country: US
publication_date: 20100617
---
An application programming interface that leverages functionality of a graphics card or other component often allows for creation of high quality display renderings. However if the application programming interface does not also allow for interaction with a printing component then the display renderings might not be printable without modifying display rendering instructions. This can prevent developers from re using display rendering instructions for printing the display renderings.

Embodiments of the invention are defined by the claims below not this summary. A high level overview of various aspects of the invention are provided here for that reason to provide an overview of the disclosure and to introduce a selection of concepts that are further described below in the detailed description section. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in isolation to determine the scope of the claimed subject matter.

Technology described herein is directed to converting display rendering instructions into print rendering instructions. A request to print an item is received the item being displayable on an output device when display rendering instructions are executed. A print render target is created that includes an instructions converter and the display rendering instructions are routed to the print render target. The instructions converter maps the display rendering instructions to the print rendering instructions.

The subject matter of embodiments of the present invention is described with specificity herein to meet statutory requirements. But the description itself is not intended to necessarily limit the scope of the claims. Rather the claimed subject matter might be embodied in other ways to include different steps or combinations of steps similar to the ones described in this document in conjunction with other present or future technologies. Terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly stated.

Generally embodiments of the present invention are directed to converting display rendering instructions into print rendering instructions. As used herein the phrase display rendering instructions describes code e.g. primitives that when executed by a computing device enable the computing device to cause a depiction of an item to be displayed. For example a depiction might be displayed on a monitor and an item might include a webpage a word processing document or an element e.g. graphic of a webpage or word processing document. Often display rendering instructions leverage hardware e.g. graphics card capabilities in order to generate a displayable rendering of an item. As a result the display rendering instructions might not include sufficient instructions to generate a printable rendering of an item such that executing the display rendering instructions alone will not enable a computing device to cause a depiction of an item to be printed. An example of display rendering instructions includes instructions or primitives that are written in a format that leverages a DIRECT2D application programming interface API . Such instructions that leverage the DIRECT2D API are referred to herein as DIRECT2D instructions. Accordingly an embodiment of the present invention is directed to converting display rendering instructions into a form that is usable for printing scenarios.

As used herein the phrase print rendering instructions describes code that when executed by a computing device enable the computing device to cause a depiction of an item to be printed on a print surface e.g. printed on paper . Print rendering instructions might include various formats such as an Enhanced Metafile EMF format a Windows Metafile WMF format a Scalable Vector Graphics SVG format an XML Paper Specification XPS format or a combination thereof. Print rendering instructions are typically combined with print formatting instructions e.g. pagination that instruct how the content which is represented by the print rendering instructions is to be laid out on a print surface.

Having briefly described embodiments of the present invention is now described in which an exemplary operating environment for implementing embodiments of the present invention is shown and designated generally as computing device . Computing device is but one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of invention embodiments. Neither should the computing device be interpreted as having any dependency or requirement relating to any one or combination of components illustrated.

Embodiments of the invention might be described in the general context of computer code or machine usable instructions including computer executable instructions such as program modules being executed by a computer or other machine such as a personal data assistant or other handheld device. Generally program modules including routines programs objects components data structures etc. refer to code that performs particular tasks or implements particular abstract data types. Embodiments of the invention might be practiced in a variety of system configurations including handheld devices consumer electronics general purpose computers more specialty computing devices etc. Embodiments of the invention might also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network.

Embodiments of the present invention may be embodied as among other things a method system or set of instructions embodied on one or more computer readable media. Computer readable media include both volatile and nonvolatile media removable and nonremovable media and contemplates media readable by a database a switch and various other network devices. By way of example and not limitation computer readable media comprise media implemented in any method or technology for storing information. Examples of stored information include computer usable instructions data structures program modules and other data representations. Media examples include but are not limited to information delivery media RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile discs DVD holographic media or other optical disc storage magnetic cassettes magnetic tape magnetic disk storage and other magnetic storage devices. These technologies can store data momentarily temporarily or permanently.

With reference to computing device includes a bus that directly or indirectly couples the following devices memory one or more processors one or more presentation components input output ports input output components and a power supply . Bus represents what might be one or more busses such as an address bus data bus or combination thereof . Although the various blocks of are shown with lines for the sake of clarity in reality delineating various components is not so clear and metaphorically the lines would more accurately be grey and fuzzy. For example one may consider a presentation component such as a display device to be an I O component. Also processors have memory. We recognize that such is the nature of the art and reiterate that the diagram of is merely illustrative of an exemplary computing device that can be used in connection with one or more embodiments of the present invention. Distinction is not made between such categories as workstation server laptop handheld device etc. as all are contemplated within the scope of and reference to computing device. 

Computing device typically includes a variety of computer readable media. By way of example computer readable media may comprises Random Access Memory RAM Read Only Memory ROM Electronically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technologies CDROM digital versatile disks DVD or other optical or holographic media magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices carrier wave or any other medium that can be used to encode desired information and be accessed by computing device .

Memory includes computer storage media in the form of volatile and or nonvolatile memory. The memory may be removable nonremovable or a combination thereof. Exemplary hardware devices include solid state memory hard drives optical disc drives etc. Computing device includes one or more processors that read data from various entities such as memory or I O components . Presentation component s present data indications to a user or other device. Exemplary presentation components include a display device speaker printing component vibrating component etc.

I O ports allow computing device to be logically coupled to other devices including I O components some of which may be built in. Illustrative components include a microphone joystick game pad satellite dish scanner printer wireless device etc.

Referring now to an exemplary operating environment suitable for practicing an embodiment of the invention is depicted and identified generally by reference numeral . Environment includes a computing device similar to computing device of which communicates with a display output device an input device a print output device and a content server . indicates that an exemplary display output device includes a monitor or a display screen an exemplary input device includes a mouse a keyboard or a touch sensitive surface and an exemplary print output device includes a printer. Content server might communicate with computing device by way of a network such as the Internet.

Computing device functions to render e.g. display and print various types of content. For example computing device might render a document that is created and stored locally using an application running on computing device . In such a scenario display rendering instructions e.g. DIRECT2D instructions might represent code that when executed enable computing device to display the document. In another embodiment computing device communicates with content server to receive content. For example content server might provide to computing device a set of instructions that when executed by computing device enable computing device to render a requested piece of content on display output device or print output device . Instructions received from content server might include various formats such as DIRECT 2D and GDI. For example GDI instructions are often used to code for ActiveX controls whereas DIRECT2D might be used to code for other two dimensional graphics of a webpage. In an exemplary embodiment display rendering instructions were received from content server when a webpage was requested by renderer e.g. print client .

In an exemplary embodiment computing device communicates with display output device e.g. monitor or display screen to cause visual representations to be displayed. For example computing device might include renderer that causes an item e.g. word processing document web document or graphic thereof to be displayed on display output device when display rendering instructions are executed. That is for description purposes herein display rendering instructions provide instructions to computing device regarding how to display item . Although exemplary item refers to an entire document in other embodiments of the present invention an item that is rendered includes a single graphic. An exemplary renderer includes a print client and as previously indicated in one embodiment display rendering instructions include DIRECT2D instructions. Although this description describes scenarios in which display rendering instructions are for a webpage provided by content server in other embodiments display rendering instructions might be for a nonweb document such as a word processing document.

Computing device also communicates with input device to receive instructions from a user such as a request to print item that is displayed when display rendering instructions are executed and that is presented on the display output device . Absent this invention computing device might be unable to print item because item is rendered by executing display rendering instructions such as DIRECT2D instructions which do not include necessary print specific instructions. However in an embodiment of the invention display rendering instructions are converted to a form that is usable for print scenarios.

In one embodiment of the present invention computing device includes a PrintRenderTarget which is created by computing device when a request to print item is received. PrintRenderTarget includes various components including a stream maintainer an object model creator an instructions converter and a BitmapRenderTarget each of which are described in more detail below. Generally PrintRenderTarget functions to intercept draw calls that instruct computing device to render item on display output device . The intercepted draw calls are converted to a format that allows the computing device to cause item to be rendered on print surface .

When a request is received to print item which is represented by display render instructions in addition to creating PrintRenderTarget formatter determines a set of print format instructions . That is as previously described often display render instructions do not include necessary print specific instructions since display render instructions are designed to leverage hardware capabilities to generate a screen display rendering. Screen display renderings do not require certain instructions such as pagination which are required to render on a print surface. Accordingly formatter determines appropriate print format instructions that apply to display rendering instructions and that are also sent to PrintRenderTarget in parallel with display rendering instructions . In one embodiment renderer includes a print client that functions to determine print specific instructions.

In an embodiment when PrintRenderTarget is created a stream e.g. IStream is provided. The stream is utilized to serialize instructions that have been converted and to communicate serialized contents to a print API . Stream maintainer functions to maintain the stream while instructions are being converted and assembled by other components of PrintRenderTarget .

In a further embodiment instructions converter maps display rendering instructions e.g. DIRECT2D instructions to print rendering instructions . Exemplary print rendering instructions might include EMF primitives resources WMF primitives resources SVG primitives resources and or XPS primitives resources. After mapping instructions converter issues print rendering instructions to object model creator described in more detail below to be assembled with other instructions for printing.

When mapping display rendering instructions to print rendering instructions instructions converter applies various conversion rules. In an embodiment in which print rendering instructions include XPS primitives and resources exemplary conversion rules are depicted in Table 1.

In a further embodiment for any incoming ID2D1Bitmap that is received as part of display rendering instructions instructions converter draws its bits to an intermediate IWICBitmap then converts it to a printing instructions object model image resource before that image is embedded into the print instructions object model. This enables PrintRenderTarget to incorporate any bitmap from a print client to the object model without knowing what source s that bitmap comes from.

In another embodiment PrintRenderTarget creates a BitmapRenderTarget to which PrintRenderTarget directs display rendering instructions related to drawing status transformation and resource allocation. BitmapRenderTarget then serves as a manager from which instructions converter can retrieve those instructions when needed. An exemplary interface that relates to general drawing includes BeginDraw EndDraw Flush . An exemplary interface related to resources e.g. bitmap brush layer includes CreateBitmap CreateBitmapBrush CreateBitmapFromWicBitmap CreateCompatibleRenderTarget CreateGradientStopCollection CreateLayer CreateLinearGradientBrush CreateRadialGradientBrush CreateSharedBitmap CreateSolidColorBrush. An exemplary interface related to mode and status includes GetAntialiasMode GetTextAntialiasMode GetTextRenderingParams IsSupported SetTextAntialiasMode SetTextRenderingParams RestoreDrawingState SaveDrawingState SetAntialiasMode . An exemplary interface that relates to transformation includes GetTransform SetTransform .

When converting from display rendering instructions to print rendering instructions a few interfaces might require processing by PrintRenderTarget . For example GetDpi SetDpi might invoke a default 96 DPI for XPS files thereby ignoring any user DPI setting. In another embodiment GetPixelFormat returns D2D1 PixelFormat DXGI FORMAT R8G8B8A8 UNORM SRGB D2D1 ALPHA MODE PREMULTIPLIED . Furthermore GetPixelSize GetSize might return a user defined page size and GetMaximumBitmapSize might return a maximum supported bitmap size e.g. 4 MB . Also if PrintRenderTarget does not support the use of tags GetTags SetTags might be processed such that tags are designed to be printed by debug error messages.

PrintRenderTarget also includes object model creator which creates assembles and forwards an object model to be serialized into a stream . That is upon receiving a StartPage command object model creator creates and initiates a print instructions object model. A StartPage command might be received as part of print format instructions . Exemplary print instructions object models include fixed page documents which might include EMF WMF XPS or SVG. After creating and initiating the print instructions object model object model creator continues to assemble the print instructions object model as it receives print rendering instructions e.g. primitives and resources from instructions converter . Upon receiving an EndPage command also received as part of print format instructions object model creator issues print instructions object model to a serializer . In an exemplary embodiment a print client i.e. renderer issues print tickets as a parameter in a document and page calls to specify a printing configuration. Such print tickets might be received as part of print format instructions such that object model creator properly inserts the print ticket in a created print instructions object model either at document level at page level or both.

When executing tasks object model creator might apply various rules. In an embodiment in which object model creator creates an XPS object model exemplary rules are depicted in Table 2.

As described previously upon completing assembly of a print instructions object model e.g. upon receiving an EndPage command object model creator issues print instructions object model to serializer to be incorporated into a stream . Serializer sequences an object model stream which is communicated from serializer to a print API . Object model stream might include various formats such as EMF WMF XPS and SVG and print API is designed to function with the format e.g. EMF WMF XPS and SVG of object model stream . That is if object model stream is an XPS stream print API is an XPS print API. Print API facilitates interaction between object model stream and print output device thereby enabling print output device to print an item e.g. item which is represented by instructions in object model stream . As such upon completing assembly of one page to be printed into print instructions object model the object model creator issues the object model to serializer which passes the sequenced object model stream to print API . This allows the assembled page to be printed to be printed while a subsequent page to be printed is being assembled.

Using above described components an embodiment of the present invention includes a method of converting display rendering instructions into print rendering instructions. For example the method might be facilitated upon the execution of computer executable instructions which are stored on one or more computer readable media. One such method is represented in as a flow diagram and is identified generally as method . In explaining reference is made to for illustrative purposes.

At step method includes receiving a request to print an item that is displayable on an output device when display rendering instructions e.g. DIRECT2D instructions are executed. For example using input device a user might submit to computing device a request to print item e.g. document that is presented on display output device when display rendering instructions are executed. In another embodiment item might include a document having content that is rendered by executing both DIRECT2D instructions and GDI instructions .

At step method includes creating a PrintRenderTarget that includes an instructions converter and an object model creator. For example receiving a request to print might prompt computing device to create PrintRenderTarget which includes instructions converter and object model creator . Receiving a request to print might also prompt formatter to determine print formatting instructions e.g. pagination . Step includes routing the display rendering instructions to the print render target in parallel with print formatting instructions. For example display rendering instructions are routed to PrintRenderTarget in parallel with print formatting instructions . In a scenario in which item includes content that is rendered by executing both GDI instructions and DIRECT2D instructions display rendering instructions include the GDI instructions and DIRECT2D instructions which are sent in parallel with print formatting instructions .

At step method includes mapping by the instructions converter the display rendering instructions to the print rendering instructions. For example instructions converter maps display rendering instructions to print rendering instructions . In one embodiment instructions converter applies conversion rules that are depicted in Table 1. Moreover in a scenario in which item includes content that is rendered by executing GDI instructions and DIRECT2D instructions instructions converter maps both the GDI instructions and the DIRECT2D instructions to print rendering instructions . As such instructions converter might include only one component having multiple conversion functions. Alternatively instructions converter might include multiple components each responsible for converting a particular format of display rendering instructions into respective print rendering instructions which are combined into one set of print rendering instructions. As discussed previously print rendering instructions might include various formats such as EMF WMF SVG and XPS.

Step includes combining by the object model creator the print rendering instructions with the print formatting instructions to create a print instructions object model. For example object model creator combines print rendering instructions with print formatting instructions to create print instructions object model . Exemplary object models include EMF WMF SVG and WPS. At step the print instructions object model is transferred to a stream for serialization. For example print instructions object model is issued to serializer which sequences object model into stream . At step the stream is communicated to a print application programming interface. For example stream is passed to print API which facilitates interaction with print output device .

One embodiment includes a method of converting display rendering instructions into print rendering instructions. The method includes receiving a request to print an item that is displayable on an output device when the display rendering instructions are executed. In addition a print render target is created that includes an instructions converter and the display rendering instructions are routed to the print render target. Furthermore the instructions converter maps the display rendering instructions to the print rendering instructions.

A further embodiment includes one or more computer readable media having computer executable instructions stored thereon that when executed facilitate a method of converting display rendering instructions into print rendering instructions. The method includes receiving a request to print an item that is displayable on an output device when DIRECT2D instructions are executed and creating a print render target that includes an instructions converter and an object model creator. The method further includes routing the DIRECT2D instructions to the print render target in parallel with print formatting instructions. Moreover the instructions converter maps the DIRECT2D instructions to the print rendering instructions. The object model creator combines the print rendering instructions with the print formatting instructions to create a print instructions object model. The print instructions object model is transferred to a stream to facilitate serialization and the stream is communicated to a print application programming interface.

Many different arrangements of the various components depicted as well as components not shown are possible without departing from the scope of the claims below. Embodiments of the invention have been described with the intent to be illustrative rather than restrictive. Alternative embodiments will become apparent to readers of this disclosure after and because of reading it. Alternative means of implementing the aforementioned can be completed without departing from the scope of the claims below. Certain features and subcombinations are of utility and may be employed without reference to other features and subcombinations and are contemplated within the scope of the claims.

