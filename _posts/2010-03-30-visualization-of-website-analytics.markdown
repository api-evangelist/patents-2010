---

title: Visualization of website analytics
abstract: A computer-implemented method for visualization of website analytics overlaid upon the source website is described. In one example embodiment, the method can comprise receiving website usage data associated with a customer website, aggregating the website usage data to generate website statistics, processing the website statistics to generate the website analytics, receiving credential data associated with a substantially current user of the customer website, based on the credential data, identifying the substantially current user as a customer associated with the customer website, and selectively communicating the website analytics to the customer website, the website analytics being displayed within a website analytics interface having one or more graphical reports over the website. The interactive graphical reports include reporting elements positioned over website elements corresponding to the reporting elements, which are independent of any variations in the size and shape of the display window or screen. In another example embodiment, the method can comprise pre-configuring and remotely storing display options, and selectively and automatically altering the display of the customer website pages, presenting different versions of those pages to different users based on the preconfigured and remotely stored display options to establish which versions of the page are more effective.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08930818&OS=08930818&RS=08930818
owner: International Business Machines Corporation
number: 08930818
owner_city: Armonk
owner_country: US
publication_date: 20100330
---
This application claims the benefit of the filing date of Provisional Application 61 165 084 filed on Mar. 31 2009 which is incorporated herein by reference.

This application relates generally to website analytics and more specifically to visualization of website analytics.

The approaches described in this section could be pursued but are not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated herein the approaches described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

Website analytics is generally used for measurement collection analysis and reporting of website usage data as well as website visitor behaviors for purposes of understanding and optimizing website usage. Website analytics can measure and analyze performance of a website in commercial as well as noncommercial contexts. In a commercial context the website owner may want to know which pages of the website encourage people to make a purchase. The data collected during performance measurements of the website can be used to improve website effectiveness.

In website analytics various approaches can be taken to collect and process data related to website performance. According to one approach log files in which the web server records its transactions can be read and analyzed. In another approach pages of the website can be tagged with a snippet of computer code e.g. JavaScript or an image to notify a third party server when the pages are rendered by the web browser. The snippet can also pass certain information about the webpage and the visitor to the third party server. This information can then be processed and statistics generated. The statistics can then be used to provide reports which can include website performance information number of page views time of the day and click data e.g. location on the page object clicked on and other custom metrics . In order to uniquely identify a user during multiple visits the user can be assigned a cookie.

Typical website analytics provider requires a customer to log into its website to view the website analytics interface. This approach provides the customer with a third person perspective where the third party website is displaying metrics about the original client s site. This third person perspective can make it difficult to understand specific data or usage patterns because they are not presented in the context of the website.

The following detailed description includes references to the accompanying drawings which form a part of the detailed description. The drawings show illustrations in accordance with example embodiments. These example embodiments which are also referred to herein as examples are described in enough detail to enable those skilled in the art to practice the present subject matter. The embodiments can be combined other embodiments can be utilized or structural logical and electrical changes can be made without departing from the scope of what is claimed. The following detailed description is therefore not to be taken in a limiting sense and the scope is defined by the appended claims and their equivalents.

In this document the terms a or an are used as is common in patent documents to include one or more than one. In this document the term or is used to refer to a nonexclusive or such that A or B includes A but not B B but not A and A and B unless otherwise indicated. Furthermore all publications patents and patent documents referred to in this document are incorporated by reference herein in their entirety as though individually incorporated by reference. In the event of inconsistent usages between this document and those documents so incorporated by reference the usage in the incorporated reference s should be considered supplementary to that of this document for irreconcilable inconsistencies the usage in this document controls.

In an example embodiment a method for visualization of website analytics is provided. A code snippet e.g. JavaScript can be embedded into the source code of one or more web pages of a customer website. For the purposes of this description a customer website is any third party website utilizing website analytics technology described herein. The code snippet can be provided on a website analytics site or generated automatically by such a site. For the purposes of this description a website analytics site is a website that enables customers to signup for and manage their web analytics accounts. The website analytics site can also display marketing and support information for the website analytics technology.

The code snippet embedded into the customer website can send data to the remote website analytics site when a browser renders a webpage at the customer website. Thereafter another more robust bootstrap script can be loaded. The bootstrap script can then send data to the website analytics site. The bootstrap script can detect collect and pass data related to the customer website and its users to the website analytics site.

The bootstrap script can also load a library script from the website analytics site. This library script can provide broader functionality than the bootstrap script. For example the library script can provide more robust methods to collect page data traffic data browser data usage data click data event data and time based user actions and pass this data back to the website analytics site for storage and processing. The website analytics site can aggregate the received data with the historical data received from the customer website and generate statistics related to the customer website as well as derive information about the location on the page of any such events relative to the underlying elements of that page independently of the size and layout of any specific display screen.

Based on the credentials provided by a customer and verified by the website analytics site the library script can dynamically embed into the customer website a web analytics report. The web analytics report is provided by a web analytics application residing at the website analytics site and can include for example a listener server to listen to the function calls created by the library script and can include reporting servers to report the website analytics reports. The web analytics application can also include account management functionalities.

The web analytics application can enable the display of the web analytics provided by the website analytics site as one or more interactive graphical reports overlaying the customer website. The web analytics application can be implemented using for example Rich Internet Application RIA based on Flash Silverlight Java or DHTML also known as a Remote Rich Internet Application RRIA . It will be understood that other technologies can be utilized to provide the functionality and remote rendering of the web analytics application.

Thus the website analytics can be delivered as a RIA and or RRIA and presented in the form of one or more of the interactive graphical reports right at the customer website. The interactive graphical reports are generated as overlays placed over the customer website and can be transparent semitransparent and or opaque renderings presented in the context of the customer website. The web analytics application displays these overlays by management of the web page script of the underlying pages of the customer website and by controlling and modifying the rendering and display of those pages. Thus the positioning of the various elements in the interactive graphical reports can be exactly linked to the positioning of the underlying page elements of the customer website which are relevant to the website analytics being displayed independently of the size or layout of that page on any individual user s computer screen.

As the web analytics application can manage the rendering and display of the customer site web pages it can perform a number of automatic actions based on predefined criteria when such pages are displayed. For example dynamic A B testing uptime monitoring email management and others. In one such example it can perform dynamic A B testing by substituting elements on any page of the customer website according to preconfigured settings which can be defined by an analytics application user via the web analytics application and stored remotely at the website analytics site. Such substitutions can be performed by the web analytics application for example when a request to display a customer website page is detected by temporarily modifying the web script of that page immediately prior to displaying it and by replacing one or more elements of the page with one of several other page elements typically of a similar size and function but with different text colors shapes graphical images or other display characteristics. Such substitutions can be performed for example either at fixed times or for a fixed period or according to some visitor grouping criteria or simply randomly for each visitor as defined in the preconfigured stored settings.

With the focal point still being the customer website the interactive graphical reports can include thumbnail page browsing functionality in which each thumbnail can display information related to the corresponding webpage and permit navigating of the corresponding page. The thumbnails of the web pages can be arranged to show but are not limited to website visitor usage patterns click paths entry and exit points treeview structures of the website goal selection reverse goal selection and general navigation. The thumbnails can also be arranged to show the most frequent path or paths taken by the users while browsing the customer website. Such paths can be depicted within the context of a thumbnail grid or linearly.

The reports may also include one or more of collective multi page heat maps heat trails top links or other similar location based interactive graphical reports. For example the heat maps can use different colors to illustrate and contrast frequency of usage based for example on mouse movements mouse hovers mouse clicks and other similar events across multiple web pages of the customer website and website partner sites with respect to each other. The heat maps heat trails top links and other such reports can also be used to indicate click density within a given webpage and or relative time spent interacting with a given area of the web page. Single webpage heat maps heat trails and top links can also be generated to illustrate the most popular areas within each single webpage.

The listener server can also be utilized to receive customer credentials when a customer illustrated in logs into the customer website . In some example embodiments customer credentials can be based on the Internet Protocol IP address of the customer computer and or the information provided by a cookie stored on the customer computer. Thereafter the listener server can validate the customer credentials with the accounts server . The accounts server can in turn query accounts DB to validate the customer credentials. Based on successful validation the listener server can redirect the communication to one of the reporting servers which services customer s account.

The reporting servers may pull the data corresponding to the customer s account from the reporting DB and present this data as one or more interactive graphical reports as an overlay over the customer website . The data can be presented with menus charts data grids statistics overlays visualizers and thumbnails. Various technologies e.g. Adobe Flash Microsoft Silverlight Sun Java and DHTML can be used for graphical presentation of the website analytics over the customer website . A player not shown dynamically embedded in the customer website can run a file such as for example Shockwave Flash SWF generated by the website analytics site based on the customer account data and sent to the customer website . The environment can also include a computer network . The network as shown in can communicatively couple various depicted modules. The network is a network of data processing nodes interconnected for the purpose of data communication.

The example environment can also include one or more computers utilized by the customer and users to view and interact with the customer website . It will be understood that any other device having a user interface can be utilized to view and interact with the customer website . For example a mobile device e.g. a mobile telephone a personal digital assistant can be used by the customer and the users to launch the user interface through which the website can be accessed. The user interface can be rendered with a browser e.g. Internet Explorer Firefox Safari Mozilla Chrome and Opera or directly on the computer and or the computer device using a native application e.g. Adobe Integrated Runtime . The user interface can include interactive graphical reports created by the website analytics site and run by the website analytics application remotely. The website analytics interface can be interactive and overlay the customer website e.g. an HTML page . The website analytics interface can include top bottom left and right docking areas which are semi transparent overlays with the customer website being visible beneath these overlays. The website analytics interface can also include menus docked and or floating which are opaque. The top and bottom docking areas can be flush top and flush bottom. The left and right docking areas can be flush left and flush right. The customer can minimize the website analytics interface while being able to continue using the customer website .

The user interface can also include a user tracking tool . The user tracking tool can utilize a code snippet embedded into the customer website to detect initialization of a particular web page of the customer website . The code snippet can be placed for each webpage that the customer would like to track. This code snippet can interact with the webpage Data Object Model DOM add elements to the source code of the webpage initialize the webpage and retrieve a bootstrap script from the website analytics site . The bootstrap script in turn can load a library script which provides broader functionality. Both the bootstrap script and library script can send usage data to the website analytics site and or load the website analytics interface enabled remotely by the website analytics application .

The listener server is configurable to filter the incoming data by consulting with the accounts DB to ensure that the data originates from the customer website . The information provided by the accounts DB can also ensure that that the periodic traffic quotas for the customer are not exceeded. As already mentioned above the incoming data received by the listener server is stored in the listener DB for later processing as well as for real time reporting. The website analytics site is described by way of example with reference to .

The website analytics site can also include a load balancer an analytics processor reporting web services and a listener application . The load balancer can be used to spread work between two or more computers network links CPUs hard drives or other resources in order to get optimal resource utilization maximize throughput and minimize response time. The analytics processor can include the logic underlying analysis of the website statistics and generation of website analytics. The reporting web services can be utilized to access the application programming interfaces API of the website analytics site over the network in order to be executed on the customer website . The reporting services can also by utilized by the website analytics application to access customer data. Based on the customer data provided by the reporting services the website analytics application can enable display of the website analytics report on the customer website . The listener application can be utilized by the listener server to accept and filter the incoming events. The modules of the website analytics site can be utilized to perform various operations with reference to .

As shown in the method can commence at operation with the listener server receiving data related to usage of the customer website by the users from the user tracking tool . As already mentioned above the tracking tool may utilize a code snippet that the customer adds onto web pages of the customer website . This code snippet acts as a beacon collecting visitors data events and behavior and sends them back to the listener server of the website analytics site for processing. In addition to broadcasting the data to the listening server the snippet can set cookies on each user s computer to track individual sessions and visitor uniqueness . This can be used to determine whether the visitor has been to the site before the timestamp of the current visit and the referrer site or a campaign the visitor came from e.g. search engine keywords banner email . The code snippet can be automatically run every time the page is loaded.

The data collected by the code snippet can include the referring domain the referring URL browser agent information the originating IP address mouse events e.g. click hover double click right click onClick on MouseOver on Focus on Blur keyboard events e.g. key down key up character entered event data event object data click location event time and duration link events link object names and values link destinations browser size visitors screen sizes specific form data including values or the price of the goods they purchased interactions within media files partial form completions and form submitting.

The collection of this data by the code snippet can also permit the web analytics application to derive location information for events that are connected to the location of the underlying web page elements not simply the physical position on the page which may vary according to the screen size screen resolution and other factors. This permits binding of event locations to those web page elements and so ensures analytics information on an overlay can always be displayed correctly independently of any specific screen display.

The code snippet can also manage the process of assigning cookies to users. Other data collected by the code snippet can include page views which occurrence of the code snippet is being run visit session which is a series of requests from the same uniquely identified client with a set timeout e.g. 30 minutes . The snippet can also be used to collect data including first visit and or first session which are a visit from a user uniqueness who has not made any previous visits. Identification can be made to the user s computer via cookie and or IP.

Further collected data can include bounce rate which is the percentage of visits where the visitor enters and exits at the same page without visiting any other pages on the site in between. Recorded data may additionally include visibility time which is time a single page e.g. a blog and an ad banner is viewed session duration which is an average amount of time that visitors spend on the site each time they visit a page view duration time on page which is an average amount of time that visitors spend on each page of the site a page depth page views per session which is the average number of page views a visitor consumes before ending their session frequency per unique ID which measures how often visitors come to the customer website a click path which is the sequence of hyperlinks one or more website users follows on a given site the first page being the page that was visited first and the page from which the customer website was exited IP address country code screen resolution browser and browser version window size JavaScript support and regional settings.

In operation the analytics processor can aggregate the data received by the listener server and generate website statistics. At operation the reporting servers can process the website statistics to generate the website analytics. In some example embodiments the data processing can be performed periodically e.g. hourly . When the customer logs into the customer website the listener server can receive credential data associated with the customer of the customer website at operation .

At operation the reporting servers can report the website analytics created by the analytics processor to the website analytics application . The website analytics application presents the website analytics remotely as the website analytics interface overlaying the customer website . Thus the website analytics are delivered to the customer directly over the customer website . This approach results in the customer website being the focal point frame of reference which is the First Person perspective.

As shown in the method can commence at operation with the listener server receiving data from a snippet embedded in the website source code. The data can indicate that a web page is being loaded by the browser.

At operation the website analytics site can run a bootstrap script through the snippet to collect and report data related to the usage of the customer website . In some example embodiments the script delivered to the client s browser can be brought in two stages. The first stage can include pulling the initial bootstrap script and the second stage at operation can include pulling a more robust library script. At operation the listener server can receive user credentials. The accounts server can then authenticate the user credential at operation .

At operation it can be determined whether the user is a valid customer associated with the website . If the accounts server cannot authenticate the user as a valid customer associated with the website the library script will not load the website analytics interface and the process may be aborted. If on the other hand the user is authenticated as the customer the library script is enabled to load the website analytics interface upon request by the customer . Thus at operation the customer can request that the library script load the website analytics interface . In response at operation the website analytics application can remotely provide data to be loaded on the website analytics interface .

The website analytics interface can include interactive graphical reports which are displayed over the customer website at an optional operation . The interactive graphical reports may include one or more thumbnails each thumbnail accompanied by the corresponding website analytics and allowing navigating to the corresponding web page. To create the thumbnails the customer website can be crawled. The crawling of the customer website can also allow summarizing and reporting website data to the customer . For example the customer can be notified that some of the web pages do not have snippets. The thumbnails can be utilized to display and navigate around the website usage data. With the focal point being the customer website the thumbnail images of other web pages can display information and simultaneously allow for navigation to that page.

At optional operation the thumbnails may be displayed in a grid with connections representing the order in which the customer website is most frequently navigated. For example in a 5 by 5 grid of the webpage thumbnails the click path can include numbers associated with each click. At optional operation the thumbnails can be arranged linearly to represent the chronological order in which the website is most frequently navigated. This arrangement is similar to the grid arrangement but the thumbnails are listed horizontally and in chronological order according to when they were clicked. At optional operation the thumbnails can be arranged in order in which the website is most frequently entered and exited. In this arrangement vertical columns of thumbnails visually depict the top entry and exit pages.

At optional operation a multi page heat map can be presented using different colors to collectively illustrate and contrast usage frequency of different web pages of the website with respect to each other. For example the heat map can highlight with red color the place on the customer website with the most number of clicks. The multi page heat map displays the web pages collectively with the most clicked areas of the entire site within a visible graph.

Once the session ID is created the webpage load cycle proceeds to record a number of hits to the customer webpage at operation load script from the disk at operation and return the script from the browser via an HTTP stream at operation . The webpage load cycle waits for an on Load event at operation . Once the on Load event is detected at and the page is done loading at operation an initPage method is initiated at operation . Thereafter the pages load cycle proceeds to load the server library script at operation .

When an event is detected at operation the process proceeds to operations and in which the type of the detected event is determined. If the event is mousemove the flowchart proceeds to operation . If the event is mouseclick the flowchart proceeds to operation . If the event is keypress the flowchart proceeds to operation . At operation it is determined what character is being pressed. If the character being pressed is a special character e.g. tilde a flash application is launched at operation the flash application being website analytics interface .

One of the interactive features of the dashboard is the six bottom components. At any time two components can be expanded when a third is expanded one of the first two minimized. The top pages component lists the most visited pages the number of views and the percentage of total views. The top click path displays the series of pages that are most popular. This is a text listing but other features have graphic thumbnails of each page. is a block diagram illustrating a dashboard view of the user interface with top links and search terms expanded in accordance with an example embodiment. The site visitors bar chart defaults to the current month with a bar on each day of the month. A slider below the chart allows the user to select a different date range. The slider can be expanded to include a larger range and moved along a time line. Other functionalities can include allowing comparison charts with multiple date ranges drilling down capability e.g. click on a day and see the hours changing chart type e.g. bar line and curve and geo origination global map overlay.

The example computer system includes an engine or multiple engines e.g. a central processing unit CPU a graphics processing unit GPU or both and a main memory and a static memory which communicate with each other via a bus . The computer system can further include a video display unit e.g. a liquid crystal displays LCD or a cathode ray tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a computer readable medium on which is stored one or more sets of instructions and data structures e.g. instructions embodying or utilized by any one or more of the methodologies or functions described herein. The instructions can also reside completely or at least partially within the main memory and or within the engines during execution thereof by the computer system . The main memory and the engines also constitute machine readable media.

The instructions can further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. Hyper Text Transfer Protocol HTTP CAN Serial Modbus .

While the computer readable medium is shown in an example embodiment to be a single medium the term computer readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that causes the machine to perform any one or more of the methodologies of the present application or that is capable of storing encoding or carrying data structures utilized by or associated with such a set of instructions. The term computer readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media. Such media can also include without limitation hard disks floppy disks flash memory cards digital video disks random access memory RAMs read only memory ROMs and the like.

The example embodiments described herein can be implemented in an operating environment comprising computer executable instructions e.g. software installed on a computer in hardware or in a combination of software and hardware. The computer executable instructions can be written in a computer programming language or can be embodied in firmware logic. If written in a programming language conforming to a recognized standard such instructions can be executed on a variety of hardware platforms and for interfaces to a variety of operating systems. Although not limited thereto computer software programs for implementing the present method can be written in any number of suitable programming languages such as for example Hyper text Markup Language HTML Dynamic HTML Extensible Markup Language XML Extensible Stylesheet Language XSL Document Style Semantics and Specification Language DSSSL Cascading Style Sheets CSS Synchronized Multimedia Integration Language SMIL Wireless Markup Language WML Java Jini C C Perl UNIX Shell Visual Basic or Visual Basic Script Virtual Reality Markup Language VRML ColdFusion or other compilers assemblers interpreters or other computer languages or platforms.

Thus a method for visualizing of website analytics has been described. Although embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes can be made to these example embodiments without departing from the broader spirit and scope of the present application. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

