---

title: Systems and methods for a bidirectional multi-function communication module
abstract: Systems and methods are disclosed for bidirectional multifunction communication between a computing device and applications located at an external server. The bidirectional communications allows an operation to be performed on a file using a computing device and an external server. In one implementation, an application resides on a desktop computer that is connected to the Internet. The application sends a request to an external server accessible through the Internet using a bidirectional communication system. The server accepts and processes the request and provides data back to the computer via the same bidirectional communication system. A user may then access the data, manipulate it and provide an additional request to the server via the bidirectional communication system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09356991&OS=09356991&RS=09356991
owner: Litera Technology LLC
number: 09356991
owner_city: McLeansville
owner_country: US
publication_date: 20101021
---
This application claims priority from U.S. Provisional Application Ser. No. 61 333 101 filed May 10 2010 the disclosure of which is expressly incorporated herein by reference.

This disclosure generally relates to computer system applications and more particularly to methods and systems that provide bidirectional communications with remote software through an intermediary software mini application located on a user computing device such as a desktop system.

The installation and use of desktop based software programs such as Microsoft Office Adobe Acrobat Dreamweaver Autodesk and many other document lifecycle software programs has become commonplace in business and personal applications. While these products referred to herein as parent programs provide users with many useful functionalities the potential for additional features has led to the development of third party products that enhance the capabilities of the document lifecycle software programs. These third party products were developed and designed to integrate with the parent programs to provide additional features that compliment those of the parent program and include products that compare documents remove metadata from documents convert an electronic document to PDF convert a PDF document back to a word processing document or a spread sheet edit PDF documents assist with the numbering of documents created in word processing programs add document identification stamps or take screenshots of regions or selected areas of computer screens.

While these software programs allow users to perform tasks more efficiently each desktop installed software program demands a certain amount of computing resources. In addition certain desktop installed software programs may create a resource or usage conflict with other existing desktop installed software programs. This may occur when one program attempts to integrate with another program or when two programs attempt to use the same integration point to integrate with a third program.

Further integration of multiple products may cause a parent program to slow down during initial start up while integrated products load. A third party product integrated into a parent program is often referred to as an add in and often results in the addition of an icon on the parent program s toolbar to activate the third party product. These additional icons may take up valuable screen space.

A desire to access computer software products from any computer at any location has led to cloud computing as an alternative for organizations and individuals seeking new ways to manage and access multiple software programs. Also referred to as Software as a Service SaaS cloud computing is Internet based computing where computers and other devices access hosted software applications in an on demand scenario. Users log into or otherwise access a cloud computing software program through an Internet connected interface for example an Internet browser and access the full resources of the cloud computing software through this Internet connected interface.

Cloud computing frees computing resources at the user s local computing device and eliminates problems with integrating third party software applications by liberating users from the need to install the application and run it on their electronic computing device. Examples of cloud computing software include the sales management solution SalesForce.com and the document management solution NetDocuments . These products have established robust software solutions located on external servers and are available to users through the Internet without desktop installation requirements.

Several issues with the cloud computing model have limited its full adoption. First users accustomed to the desktop installed software model are not yet fully comfortable with the cloud computing model which requires visiting an Internet location to access a software program rather than simply accessing that software program directly through the user s desktop. Second while cloud computing software programs may display results of computer processing requests they do not always have the ability to enable further editing of those results or manipulation of preferences or settings at the cloud level. This limits a user s interactivity with such programs. Finally requiring an Internet connection in order to access software programs for users unaccustomed to such requirements and an inability to access some or all functions of a software program in the absence of Internet connectivity may cause users to become frustrated and unwilling to adopt the cloud computing model.

A need exists for a product that allows for the advantages provided by the cloud computing model but does not remove advantages of desktop applications. Currently available products do not provide the right methodology to meet these needs.

A desktop widget is a small application located on a user s desktop. A desktop widget takes up minimal computer resources while still providing information to a user. Desktop widgets give users the ability to view discrete and pre published information from particular data sources located either on a computer workstation or at an external location. Desktop widgets traditionally provide unidirectional personalized information after receiving a user s predetermined preferences. For example a weather widget asks the user to choose which city s weather they wish to view. After receiving that choice the widget is unidirectional and only brings back pre published weather forecast information for the chosen city from an external source such as Weather.com.

Because widgets provide a single function and serve only a simple defined purpose the level of interaction between a user and such a resource is limited. For example there is no widget that can compare documents or convert a word processing document to PDF or a PDF document to a word processing document. While a user can define predetermined settings and other parameters of their relationship with the widget application only pre published information is pulled from an external source e.g. a blog online a clock residing on a computer application and then presented to the user for viewing via the widget graphical user interface GUI .

Disclosed embodiments provide a bidirectional multi function mini application with the capacity to integrate local client applications and a cloud based computer software program. This mini application is hereby referred to as the bidirectional multi function communication module BMCM . The BMCM maintains distinct differences from widgets by providing bidirectional communication between 1 the user 2 the client application and 3 the external source. Users engage with the server by requesting processing at a detailed level through the BMCM on their desktop or other local computing device. The requests which may include processing performing an operation on one or more files or performing one or more tasks are then sent through the BMCM to the external server where the processing occurs. The external server returns the resulting documents files requests responses or other outputs to the user via the BMCM or via other mechanisms of communication.

Disclosed embodiments of a BMCM solution may mirror the capability provided in desktop applications such as comparing documents cleaning metadata converting documents to PDF extracting PDF documents to word processing documents or spread sheets or performing other capabilities. Disclosed embodiments may also provide the ability to modify preferences and settings indicating how information is processed or presented and the ability to send new documents or requirements back to the external server application for additional processing. These features may be provided without the drawbacks of having to install a desktop application such as integration problems upgrading software on multiple computing devices and usage of computing device resources. In addition disclosed embodiments may also eliminate the need for users to visit a Web site to access cloud computing functionality. A BMCM may enable users to work on their desktop computer or other computing device with the BMCM managing all processing between the user and the cloud computing software application including submitting and receiving data and requests.

Consistent with disclosed embodiments a system is provided for performing an operation on a file using a local computing device and an application on an external server. The system may include a processor and a memory. The memory may include instructions that cause the processor to receive a request at the local computing device to perform an operation on a first file and to receive the first file. The memory may further include instructions that may cause the processor to format the request and the first file so that the request can be interpreted by an application on an external server. The processor may send the request and the first file to the external server. The external server may perform the operation on the first file and create a response that includes a second file. The processor may receive the response and the second file created by the external server.

Consistent with other disclosed embodiments a method is provided for performing an operation on a file using a local computing device and an application on an external server. The method may include receiving a first file and request from the local computing device to perform an operation on the first file. The method may further include performing the operation on the first file resulting in the creation of a second file. The method may further include sending a response that includes the second file to the local computing device.

Consistent with other disclosed embodiments tangible computer readable storage media may store program instructions that are executable by a processor to implement any of the methods disclosed herein.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the disclosed embodiments as claimed.

Disclosed embodiments may enable users to manage preferences and settings for performing an operation on a file using a cloud computing software program through the BMCM as opposed to being required to visit and log in to an Internet location. Disclosed embodiments may also provide for the transmittal of documents and other information through the BMCM to one or more cloud locations for processing and then deliver those processed documents to the user. The user may receive the processed documents either as saved files in a desktop location via email or as hyperlinked files. Thus the processed documents can easily be opened and manipulated in a native desktop based software program including word processing programs such as Microsoft Word spreadsheet programs such as Excel and other programs such as PowerPoint or Adobe Acrobat. Disclosed embodiments may also provide for offline modes in which users can access limited functionality and store processing requests within the BMCM for full processing at a later date or time when the user s electronic computing device connects with the Internet.

Reference will now be made in detail to exemplary embodiments examples of which are illustrated in the accompanying drawings. One of ordinary skill in the art will recognize that the disclosed embodiments can be modified in various respects all without departing from the spirit and scope of this disclosure. Accordingly the drawings and descriptions are to be regarded as illustrative in nature and not as restrictive. Wherever convenient the same reference numbers will be used throughout the drawings to refer to the same or like parts.

In this particular embodiment BMCM contains two potential actions for an application change settings and upload a file . For example application may represent a request to remove metadata from a file a request to compare two documents a request to turn a document into a PDF document a request to translate a document or a request to add a signature to a document. Application may also initiate a request representing a change to the settings applied to one of these other requests. A file may be the object of the request and be uploaded when a user selects the file using button . Some requests such as a document comparison may require two or more uploaded files. In some embodiments selection of action action or both may submit the action with any associated files to BMCM User Interactivity Element which may be a component of BMCM . Element may format the submitted action into a request format that can be recognized by an external server. The request may be either a request for setting changes a request to perform an operation on one or more files that have been uploaded or both.

After formatting the request element may send the request to the external server via an Internet connection through Transaction level Contract Service Agreement CSA . CSA is a protocol by which disclosed embodiments may authorize a request and communicate with and pass on requests to the external server. Authorization may be accomplished through use of a user account having a login and password. In certain embodiments CSA resides on the user s computing system as part of BMCM . In such embodiments CSA may connect to authorization databases on a server to obtain an authorization code. CSA may add the authorization code to the request thus authenticating the request. CSA may then use communication layer to communicate the request to Independent Bidirectional Service BiS component . In other embodiments CSA may reside on an external server in communication with BiS . In such embodiments element may incorporate in the request user data needed to authenticate the request and may use communication layer to send the request including the user data to CSA . After receiving the request from BMCM CSA may use the user data to authenticate the request before forwarding the request to BiS .

Communications between BMCM and BiS component may be based on industry standard XML definitions. In certain embodiments where CSA resides on the user s computer system this communication may occur through communication layer using standard HTTP transport protocol using Representational State Transfer REST and or Simple Object Access Protocol SOAP methods protocols for Accessing Remote Objects in which each unique transaction represents either a request or a response. The disclosed embodiments may use both push and pull based communication. In certain embodiments the REST and or SOAP communications may be encrypted for security purposes. In other embodiments where CSA resides on a server the communication between BMCM and BiS component may occur in the same way through communication layer .

As discussed in more detail below with regard to if BMCM does not detect a connection to the Internet it may store the request until BMCM is connected to the Internet. When connected to the Internet BMCM may use CSA to integrate and communicate user requests in real time with an external server housing BiS component server. In this manner the system may provide full application interactivity to the user outside of existing standards for cloud computing architectures.

Once CSA authenticates a request CSA may submit the request to Independent Bidirectional Service BiS component . BiS component acts as the request processing center located at an external server. BiS component may include one or more components that process requests received from CSA . Each component such as component may have the ability to process several different requests from several different BMCMs. Alternatively component may only process one kind of request from various BMCMs such as a request for removing metadata and component may only process a different kind of request such as a request to compare two documents from the various BMCMs. In disclosed embodiments BiS component may submit a response back to CSA which in turn may pass the response to BMCM User Interactivity Element . Responses may include a file cleansed of metadata a marked up document showing changes between two uploaded documents or confirmation of a change in settings. Once a response is received at BMCM a user may open access and otherwise manipulate the file or setting sent as the response. In some embodiments BMCM may allow a user to save a response directly into a document management system. A document management system is used to track and store electronic files and metadata associated with the files.

In Step BMCM may check to see if the computer is connected to the Internet. If so the parameters and any uploaded files may be transmitted to the external server location via the communication layer as shown in Step . The external server may then process the file based on the user defined parameters at Step . At Step the external server may return files to BMCM and at Step the user may open or otherwise access the file from BMCM . In certain embodiments the user may save the file to a document management system. In Step BMCM may receive input that redefines the parameters by which the file is processed and or may receive input that redefines the task for processing. For example a user may wish to change the appearance of inserted text or may wish to perform metadata removal on the resulting document. If so in Step a request may be resubmitted to the external server and the process continues at step .

If at Step BMCM establishes that the user s computing device is not connected to the Internet BMCM may first determine at Step whether the proposed action can be processed without Internet access. If it cannot be processed the BMCM may store the file and the defined parameters at Step until the computer is again connected to the Internet at which time the process may restart at Step . If the action may be processed without Internet access at Step BMCM processes the files. The user may then open or otherwise access the file at Step .

The above described devices and subsystems of disclosed embodiments can include for example any suitable servers workstations PCs laptop computers PDAs Internet appliances handheld devices cellular telephones wireless devices or other devices capable of performing the processes of the exemplary embodiments.

All or a portion of the devices and subsystems of the exemplary embodiments may be implemented using one or more general purpose computer systems microprocessors digital signal processors micro controllers and the like programmed according to the teachings of exemplary embodiments as will be appreciated by those of ordinary skill in the computer and software arts. To implement such an embodiment as well as other embodiments a single computer system may be programmed to perform the special purpose functions of one or more of the devices and subsystems of the disclosed embodiments. On the other hand two or more programmed computer systems or devices may be substituted for any one of the devices and subsystems of the exemplary embodiments. Accordingly principles and advantages of distributed processing such as redundancy replication and the like increase the robustness and performance of the devices and subsystems of the exemplary embodiments.

The devices and subsystems of the exemplary embodiments can communicate with each other using any suitable protocol and can be implemented using one or more programmed computer systems or devices. One or more communication mechanisms may be used with disclosed embodiments including but not limited to Internet access telecommunications in any suitable form e.g. voice modem and the like and wireless communications media and the like. For example employed communications networks or links can include one or more wireless communications networks cellular communications networks 3G communications networks Public Switched Telephone Network PSTNs Packet Data Networks PDNs the Internet intranets or a combination thereof.

Appropriate software may be prepared by programmers of ordinary skill based on the teachings of the exemplary embodiments. Further the devices and subsystems of the exemplary embodiments can be implemented on the World Wide Web. In addition the devices and subsystems of exemplary embodiments may be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits as will be appreciated by those skilled in the electrical art. Thus the exemplary embodiments are not limited to any specific combination of hardware circuitry and or software.

Stored on any one or on a combination of solid tangible computer readable media disclosed embodiments may include instructions programmed according to the disclosed teachings for controlling the devices and subsystems of embodiments for driving the devices and subsystems of embodiments and for enabling the devices and subsystems of embodiments to interact with a user. Such software may include but is not limited to device drivers firmware operating systems development tools applications software and the like. Software implementing exemplary embodiments may include any suitable interpretable or executable code mechanism including but not limited to scripts interpretable programs dynamic link libraries DLLs Java classes and applets complete executable programs and Common Object Request Broker Architecture CORBA objects implemented using a variety of programming languages such as Java C C JavaScript or any other now known or later created programming language. Moreover parts of the processing of the exemplary embodiments can be distributed for better performance reliability and cost. The described implementation includes software but the disclosed embodiments may be implemented as a combination of hardware and software.

In addition to the stored instructions programmed according to the disclosed teachings devices and systems of disclosed embodiments may include computer readable media for storing information relating to various processes described herein using data structures tables records and or other data described herein. Computer readable media can include any suitable medium that participates in providing instructions to a processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media transmission media and the like. Non volatile media can include for example hard disks optical or magnetic disks magneto optical disks floppy disks CD ROM and the like. Volatile media can include dynamic memories and the like. Transmission media can include coaxial cables copper wire fiber optics and the like. Common forms of computer readable media can include for example a floppy disk a flexible disk hard disk magnetic tape any other suitable magnetic medium a CD ROM CDRW DVD SD cards any other suitable optical medium punch cards paper tape optical mark sheets any other suitable physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM an EPROM a FLASH EPROM any other suitable memory chip or cartridge or any other suitable medium from which a computer can read.

One or more databases of the devices and subsystems of the disclosed embodiments may store the information used to implement the disclosed embodiments. The databases may be organized using data structures e.g. records tables arrays fields graphs trees lists and the like included in one or more memories or storage devices listed herein. The processes described with respect to disclosed embodiments may include appropriate data structures for storing data collected and or generated by the processes of the devices and subsystems of the disclosed embodiments in one or more databases thereof.

The foregoing descriptions have been presented for purposes of illustration and description. They are not exhaustive and do not limit the disclosed embodiments to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practicing the disclosed embodiments. It is intended that the specification and examples be considered as exemplary only with the true scope and spirit being indicated by the following claims.

