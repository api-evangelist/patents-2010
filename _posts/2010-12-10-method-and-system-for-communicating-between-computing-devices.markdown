---

title: Method and system for communicating between computing devices
abstract: A provider device includes structured data schemas, which may be JSON schemas, that correspond to APIs. A requestor device connects to the provider device and the provider device transmits available schemas. The requestor device receives the available schemas and transmits a communication request that asks for one or more of the available schemas. The provider device receives the communication request, formats information regarding APIs according to the specified schemas, and transmits the formatted information. The formatted information specifies how the requestor device can utilize the APIs. The requestor device generates one or more API commands by processing the formatted data and transmits the API commands to the provider device. The provider device then receives and performs the API commands. Subsequently, the provider device may transmit results to the requestor device, which may evaluate the results.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08887173&OS=08887173&RS=08887173
owner: EchoStar Global B.V.
number: 08887173
owner_city: Almelo
owner_country: NL
publication_date: 20101210
---
This Application claims priority to International Application No. PCT EP2010 069428 filed Dec. 10 2010 which claims priority to European Patent Application No. 09180496.3 filed Dec. 22 2009.

The following discussion relates generally to communication between computing devices and more specifically to presenting and or accessing an application programming interface via a structured data schema.

The present disclosure provides systems and methods that enable communication between computing devices. A provider device may include structured data schemas which may be JSON JavaScript Object Notation schemas that correspond to one or more APIs of the provider device. The provider device may be operable to format information about the APIs in accordance with the structured data schemas in response to requests from requestor devices.

In one aspect the present invention is directed to a provider device receives a connection request. In response to the connection request the provider device transmits the available structured data schemas. The provider device then receives a communication request that specifies at least one of the available structured data schemas formats information regarding APIs according to the specified structured data schemas and transmits the formatted information. The formatted information specifies how the other computing device can utilize the APIs. The provider device then receives and performs API commands that were generated by processing the formatted information. The provider device may transmit results of the performance.

According to a first aspect of the present invention there is provided a method for communicating between computing devices comprising receiving a communication request that specifies at least one structured data schema of a computing device at the computing device formatting information about at least one application programming interface of the computing device according to the at least one structured data schema the formatted information specifying how the at least one application programming interface can be utilized transmitting the formatted information from the computing device receiving at least one application programming interface command at the computing device the at least one application programming interface command generated at least based on processing the formatted information and performing the at least one application programming interface command utilizing the computing device.

In one example the method further comprises receiving a connection request at the computing device the connection request requesting available structured data schemas of the computing device and transmitting the available structured data schemas from the computing device in response to the connection request.

In another example the available structured data schemas include identification information regarding the computing device.

In a further example the available structured data schemas include application programming interface information specifying application programming interfaces of the computing device.

In a variation the method further comprises transmitting results of the performance the at least one application programming interface command from the computing device.

In another variation the method further comprises storing the at least one structured data schema in a machine readable storage media of the computing device.

In one example the at least one structured data schema includes at least of a description of data a minimum value of the data or a maximum value of the data.

In another example the method further comprises adding at least one of a new one structured data schema or a new one application programming interface to the computing device.

According to a second aspect of the present invention there is provided a method for communicating between computing devices comprising transmitting a communication request to a computing device the communication request specifying at least one structured data schema of the computing device receiving information about at least one application programming interface of the computing device from the computing device the information formatted according to the at least one structured data schema the information specifying how the at least one application programming interface can be utilized generating at least one application programming interface command at least based on processing the received information and transmitting the at least one application programming interface command to the computing device.

In one example the method further comprises transmitting a connection request requesting available structured data schemas of the computing device to the computing device and receiving the available structured data schemas from the computing device.

In another example the at least one application programming interface command comprises an ordered list of application programming interface commands.

In a further example said generating at least one application programming interface command at least based on processing the received information comprises receiving at least one user input and generating the at least one application programming interface command at least based on processing the received information and the at least one user input.

In a variation the method further comprises receiving results of the performance the at least one application programming interface command by the computing device from the computing device.

In a variation the method further comprises testing the computing device by transmitting the at least one application programming interface command to the computing device and evaluating the results of the performance.

According to a third aspect of the present invention there is provided a system for communicating between computing devices comprising at least one storage media operable to store at least one structured data schema and information about at least one application programming interface the information specifying how the at least one application programming interface can be utilized at least one communications component operable receive a communication request that specifies the at least one structure data schema and at least one processing unit communicably coupled to the at least one storage media and the at least one communications component operable to format the information according to the at least one structured data schema and transmit the formatted information utilizing the at least one communications component wherein the processing unit performs at least one application programming interface command received via the at least one communications component the at least one application programming interface command generated at least based on processing of the formatted information.

In one arrangement the system further comprises a computing device communicably coupled to the at least one communications component via at least one communication link wherein the computing device transmits the communication request receives the formatted information and generates and transmits the at least one application programming interface command.

In one example the at least one communications component receives a connection request from the computing device that requests available structured data schemas and the at least one processing unit transmits the available structured data schemas via the at least one communications component in response to the connection request.

In another example the at least one storage media the at least one communications component and the at least one processing unit are components of at least one of a television receiver or a content streaming device.

In another aspect the present invention is directed to a connection request is transmitted to a provider device and available structured data schemas are received from the provider device. A communication request is then transmitted to the provider device specifying one or more of the available structured data schemas. Information regarding APIs is received formatted according to the specified structured data schema. The formatted information specifies how the APIs of the provider device can be utilized. One or more API commands are generated by processing the formatted data and the API commands are transmitted to the provider device. Results of the performance may be received and evaluated.

Generally the interface to the APIs provided through the structured data schemas is dynamic. Therefore the interface to the functions performable by the software that corresponds to the APIs is dynamic as well. Communication between the provider device and requestor devices is performed based on the specification of the APIs provided via the structure of the structured data schema. Configuration of the communication between the provider device and requestor devices based on separate documentation about functionality and corresponding APIs is unnecessary. If functions and or the corresponding APIs are added or changed structured data schemas may added to the provider device or modified on the provider device to reflect the additions or changes. Requestor devices that communicate with the provider device would efficiently access the changed or new structured data schema without any knowledge of any change or addition.

It is to be understood that both the foregoing general description and the following detailed description are for purposes of example and explanation and do not necessarily limit the present disclosure. The accompanying drawings which are incorporated in and constitute a part of the specification illustrate subject matter of the disclosure. Together the descriptions and the drawings serve to explain the principles of the disclosure.

Embodiments of the present invention will hereinafter be described by way example with reference to the accompanying drawings in which 

The description that follows includes sample systems and methods that embody various elements of the present disclosure. However it should be understood that the described disclosure may be practiced in a variety of forms in addition to those described herein.

Computing devices are devices that manipulate data by executing instructions stored in a machine readable media utilizing one or more processing units. Examples of such devices include desktop computers television receivers personal digital assistants content streaming devices in satellite transmission systems and so on. Computing devices are typically configured to execute software to perform various functions. Such devices often include application programming interfaces APIs to enable communication with software in order to utilize the various functions. Appropriate APIs may define how requestor computing devices can make calls to or request services from software executing on a provider computing device. The APIs may also determine the vocabulary and calling conventions the requestor devices employ to utilize the services. Such APIs may include specifications for routines data structures object classes and or protocols used to communicate between the requestor devices and the software executing on the provider device.

One of the many purposes for which requestor devices may communicate with a provider device is to perform testing on the provider device. White box testing is a term that refers to testing of a device based on knowledge of how a device functions. Black box testing is a term that refers to testing of a device based on knowledge of the inputs and outputs of the device without knowledge of how the device actually operates. White box testing allows for more extensive testing than black box testing. For example white box testing may include instruction a device to perform a supported function and observing the results. However this is only possible with knowledge of how the device functions. Black box testing does not require knowledge of how the device operates but is generally limited to submitting inputs and monitoring external behavior.

In order requestor devices to perform white box testing on a provider device the requestor devices generally need to be aware of the functions as well as the APIs that can be utilized to access those functions. Typically the requestor devices are configured to test the provider device based on documentation of the functions and corresponding APIs. By contrast black box testing typically offers limited ability to test those functions. Further even if the requestor devices have specific knowledge of the functions and APIs of the computing device such functions or APIs may change. Generally if the functions and or APIs for the provider device are updated the requestor devices may need updating as well before being able to test the provider device.

The present disclosure provides systems and methods for communicating between computing devices. A provider device is configured to provide structured data schemas such as JSON schemas corresponding to one or more APIs of the provider device. When requestor devices connect to the provider device the provider device is able to indicate which structured data schemas are available and upon request may provide information regarding utilization of the APIs. The information regarding utilization of the APIs is formatted according to one or more specified structured data schemas. This formatted data may allow the requestor devices to process the formatted data to generate API commands that are supported by the APIs of the provider device. The provider device may then perform the API commands generated and submitted by the requestor devices and may return results of such performance to the requestor devices for evaluation.

The disclosed systems and methods may facilitate remote testing the provider device. By providing information regarding the APIs that is formatted according to certain structured data schemas gray box testing may be performed. Gray box testing is a term that refers to testing of a device based on more knowledge of the function of a device than is used in black box testing but less than that used for white box testing. Gray box testing generally provides more thorough testing than black box testing but does not require exact knowledge of the function design of a device as would white box testing. Essentially extensive testing of the provider device can be performed based on the provider device s structured data schema. This structured data schema may for example specify how to utilize graphic generation function API can be utilized and the graphic generation function may be tested according to the protocol specified by the structured data schema. Separate documentation about functionality and corresponding APIs may not be required in effect the structured data schemas serve as their own documentation regarding utilization of the functionality and corresponding APIs.

Further as the structured data schemas specify available functions and APIs for utilzing those functions if functions of the provider device and or the corresponding APIs are changed only the related structured data schema may need updating. Requestor devices that connect to the provider device for testing purposes may access the updated structured data schema and thus may need no knowledge of any change. New APIs may be added along with new related structured data schemas. The requestor devices generally see the new structured data schema as available when connecting but may not be informed that the related API is new or updated. Thus the external interface to the provider device s APIs may be dynamic and or self updating.

The requestor device typically includes one or more processing units a storage medium which may be any machine readable storage medium a communication component and an input output component . The requestor device may utilize the one or more processing units to execute software instructions stored in the storage medium .

The provider device may be any kind of computing device such as a television receiver a set top box and or a component of a broadcast transmission system such as a content streaming device. The requestor device may be any kind of computing device that communicates with the provider device such as a desktop computer a laptop computer a server computer and or a cellular device. The requestor device may communicate with the provider device in order to test one or more functional aspects of the provider device via the available structured data schemas and the corresponding APIs.

The communication link may include any kind of communication path between the provider device and the requestor device . In one example the communication link may be a dedicated link between the provider device and the requestor device such as a serial communication cable. In another example the communication link may be a local area network and or wide area network such as a wired or wireless Ethernet network a cellular network and or the Internet. In still other examples the communication link may be a communication link other than a dedicated link or a network.

The requestor device may request and retrieve identification of the provider device including identification information and communication protocols via the communication link . The requestor device may then request and retrieve one or more available structured data schemas from the provider device via the communication link . The provider device may be configured to allow the requestor device access to or more of the structured data schemas such as if the requestor device is on an access control list of devices allowed access to the structured data schema on an access control list.

The structured data schemas may include identifiers that identify the provider device to enable the requestor device to determine whether to communicate with the provider device . For example the requestor device may connect to a number of provider devices connected via a network and may select the provider device with which to communicate based on identifiers included in the structured data schemas.

To communicate with the provider device the requestor device typically specifies at least one of the available structured data schemas and in turn receives data formatted according to the selected structured data schema . The formatted data specifies how the requestor device can utilize one or more APIs of the provider device . That is the formatted data generated by the structured data schema provides usage rights and abilities that permit the requestor device to access function s of the API s resident on the provider computing device . The formatted data may include one or more default values for the APIs of the provider device such as a description of data utilized by a function of an API a minimum value of the data utilized by the function a maximum value of the data utilized by the function and so on. The requestor device processes the formatted data generates one or more commands and instructs the provider device to perform the commands through the API. The requestor device may then receive and evaluate results from the provider device s performance of the API commands.

The requestor device may display output to a user via an output device connected to the input output component such as a monitor and may receive input from the user via an input device connected to the input output component such as a keyboard or mouse. For example the requestor device may connect to the provider device based on input from the user and may display the retrieved available structured data schemas on the output device. The requestor device may request one or more structured data schemas based on input from the user and may display the formatted data. For example the requestor device may display information relating to how to utilize an API formatted according to a structured data schema as a web page in a browser. The requestor device may also generate the commands based on both processing the formatted data that specifies how to utilize an API and input from the user that specifies what to utilize the API to accomplish. The requestor device may then display the results of the performance of the commands and or the evaluation of the results for the user.

Prior to connecting to the provider device the requestor device may have connection information for the provider device available and may connect utilizing that information. Alternatively the requestor device may lack connection information for the provider device and so may connect via a messaging service server not shown such as a Java Messaging Service server. Such a messaging service server may provide the requestor device a list of a computing devices to which the requestor device may connect including the provider device .

The provider device may update one or more of its structured data schemas and or one or more of its APIs. Such updating may occur by receiving and adding a new structured data schema and or API. Alternatively the provider device may receive an alteration to a existing structured data schema and or API and store the altered updated data in the storage media . The provider device may include a structured data schema and corresponding API that enables the provider device to be updated remotely by the requestor device .

In operation the provider device receives an identification request. The identification request may ask for identification information and communication protocols of the provider device . In operation the provider device transmits the identification information to the requestor such as the requestor device .

In operation the provider device receives a connection request. The connection request may ask for available structured data schemas resident on the provider device . In operation the provider device transmits the available structured data schemas to the requestor. Identification information for the provider device may be sent with or as part of these schemas.

In operation the provider device receives a communication request. The communication request typically requests access to at least one of the available structured data schemas of the provider device .

In operation the provider device formats information regarding its APIs according to protocols set forth in the specified available structured data schema . In operation the provider device transmits the formatted information to the requestor.

In operation the provider device receives one or more API commands. The API commands are generated at least based on processing of the formatted information. In operation the provider device performs the API commands. An example of performing such commands is set out below in paragraph .

Optionally the method may include operation . In operation the provider device transmits the results of performing the API commands. The results may include state information regarding the provider device while it performed the API commands.

In operation the requestor device transmits a identification request to a provider such as the provider device . The identification request may ask for identification information and communication protocols of the provider. In operation the requestor device receives the identification.

In operation the requestor device transmits a connection request to the provider. The connection request may ask for available structured data schemas resident on the provider. In operation the requestor device receives the available structured data schemas from the provider. These schemas may include for example identification information regarding the provider as well as information regarding the provider s functions and or APIs.

In operation the requestor device transmits a communication request to the provider. This communication request typically requests access to at least one of the available structured data schemas of the provider in order for the requestor device to be able to access one or more functions through one or more related APIs.

In operation the requestor device receives information regarding the provider s APIs from the provider. The information is formatted according to the specified structured data schemas .

In operation the requestor device generates one or more API commands based on processing the received information regarding the APIs. The one or more API commands may involve a script or a list of API commands configured in a particular order.

The requestor device may generate the aforementioned API commands by processing the information received in operation along with any input received from a user via the input output component .

The requestor device may display the received information from the provider in a browser application. A user may enter input based on the information displayed in the browser application via an input device connected to the input output component . The processing unit of the requestor device may then generate the API commands from the received information in light of the input received from the user. For example the requestor device may display a web page based on received information concerning an API that corresponds to rebooting the provider. The web page may include a text box for a user to enter a number of times to reboot the provider. If the user enters the number twenty in the text box the requestor may generate a command to reboot the provider twenty times.

Optionally the method may include operation and operation . In operation the requestor device receives results from the provider regarding its performance of the API commands. In operation the requestor device may evaluate the results.

At block the requestor transmits a connection request to the provider and the flow proceeds to block . At the provider receives the connection request and the flow proceeds to block . At block the provider transmits available schemas resident on the provider and the flow proceeds to block . At block the requestor receives the available schemas from the provider and the flow proceeds to block .

At block the requestor transmits a communication request to the provider and the flow proceeds to block . At block the provider receives the communication request and the flow proceeds to block .

At block the provider formats information regarding its APIs according to protocols of at least one structured data schema specified in the communication request and the flow proceeds to block . At block the provider transmits the formatted information and the flow proceeds to block .

At block requestor receives the formatted information about the APIs from the provider and the flow proceeds to block . At block the requestor generates one or more API commands at least by processing the formatted information and the flow proceeds to block . At block the requestor transmits the API commands to the provider and the flow proceeds to block .

At block the provider receives the API commands and the flow proceeds to block . At block the provider performs the API commands and the flow proceeds to block . At block the provider transmits the results of performing the API commands and the flow proceeds to block .

At block the requestor receives the results from the provider regarding its performance of the API commands and the flow proceeds to block . At block the requestor evaluates the results. The flow then proceeds to block and ends.

In one example implementation the provider device includes a calculator function that may be accessed remotely through a calculator API. Also in this implementation the provider device includes a calculator JSON schema which corresponds to the calculator API. A user may utilize a browser application implemented by the requestor device to send a identification request to the provider device . Although this example implementation describes a user interacting with a web browser a user may interact with any kind of user interface to direct communication between the requestor device and the provider device . When the requestor device transmits the identification request to the provider device the provider device responds to the requestor device and provides an identifier and communication protocol preferences for the provider device . The browser application then displays the provider device s identifier and or communication protocol preferences. The user may then utilize the browser application to send a connection request to the provider device . When the requestor device transmits the connection request to the provider device the provider device responds to the requestor device by formatting information about the calculator schema and transmitting that formatted information to the requestor device .

The browser application then displays the formatted information to the user. The formatted information specifies how the calculator API can be accessed and utilized. For example the formatted information may specify that the calculator API facilitates a division operation that can be utilized by transmitting a Divide first operand second operand command to a particular port of the provider device . Through the browser application the user may direct the calculator function by selecting possibilities and entering data. The requestor device generates a series of API commands based on the user s actions and the information specifying how to utilizing the calculator API.

Thus in this example the connection request and communication request are the same request. However in other examples the APIs may be more dynamic and the connection request and communication request may be separate requests. For instance a file download API may support downloading a file from a device. In such a case in response to the connection request the browser application may display a drop down list a list of possible drives. The communication request then specifies the drive that is selected by the user. In response to the communication request the browser application may display the drive as fixed and a new drop down list with all the files on that drive where the user can select a file. The API command then specifies the drive and file selected by the user to initiate the download upon.

Returning to the implementation discussed above in one example the calculator API facilitates at least an addition operation and a subtraction operation. The formatted information specifies that the addition operation and the subtraction operation are available operations for the calculator API. The formatted information also specifies that that the addition operation can be utilized by transmitting an Addition first operand second operand command to a particular port of the provider device and the subtraction operation can be utilized by transmitting a Subtraction first operand second operand command to the particular port of the provider device .

When this formatted information about the addition operation and the subtraction operation are displayed in the browser the user may decide to test these operations of the calculator API of the provider device . The browser application may allow the user to repeatedly drag and drop the displayed addition operation and or subtraction operation to form a list of API commands to generate in a particular order. Although this example describes the user s input in terms of dragging and dropping a user may enter input in any manner without departing from the scope of the present disclosure. After dragging and dropping the user selected addition operation and or subtraction operation the browser application may allow the user to modify information about the operation such as the operands.

In this example the user forms the list of API commands to generate by dragging and dropping the addition operation ten times and then the subtraction operation ten times. The user may modify the information about each of the dragged and dropped operations by inputting values for the operands. For example the user may specify that the first operand of the ten addition operations is five and that the second operand of the ten addition operations is four. The user may also specify that the first operand of the ten subtraction operations is six and that the second operand of the ten subtraction operations is two. The requestor device may then generate an ordered list of API commands based on the user s input. Here this list instructs the provider device to add five plus four ten times utilizing the calculator API and then subtract two from six ten times utilizing the calculator API. Once constructed the requestor device may transmit the ordered list of API commands to the provider device .

The provider device receives and performs the ordered list of API commands. The provider device then transmits the results of the ten addition operations and the ten subtraction operations to the requestor device . Upon receipt of the results the requestor device verifies that the results of the ten addition operations are all nine and that the results of the ten subtraction operations are all four. If the results of all the specified operations are correct the browser application may display a message to the user that the test completed successfully. If one or more results of the specified operations are not correct the browser application may display an error message to the user. The error message may indicate which operation did not complete successfully and may indicate the incorrect result.

In the present disclosure the methods disclosed may be implemented as sets of instructions or software readable by a device. Further it is understood that the specific order or hierarchy of steps in the methods disclosed are examples of sample approaches. In other embodiments the specific order or hierarchy of steps in the method can be rearranged while remaining within the disclosed subject matter. The accompanying method claims present elements of the various steps in a sample order and are not necessarily meant to be limited to the specific order or hierarchy presented.

The described disclosure may be provided as a computer program product or software that may include a machine readable medium having stored thereon instructions which may be used to program a computer system or other electronic devices to perform a process according to the present disclosure. A machine readable medium includes any mechanism for storing information in a form e.g. software processing application readable by a machine e.g. a computer . The machine readable medium may take the form of but is not limited to a magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory and so on.

It is believed that the present disclosure and many of its attendant advantages will be understood by the foregoing description and it will be apparent that various changes may be made in the form construction and arrangement of the components without departing from the disclosed subject matter or without sacrificing all of its material advantages. The form described is merely explanatory and it is the intention of the following claims to encompass and include such changes.

While the present disclosure has been described with reference to various embodiments it will be understood that these embodiments are illustrative and that the scope of the disclosure is not limited to them. Many variations modifications additions and improvements are possible. More generally embodiments in accordance with the present disclosure have been described in the context or particular embodiments. Functionality may be separated or combined in blocks differently in various embodiments of the disclosure or described with different terminology. These and other variations modifications additions and improvements may fall within the scope of the disclosure as defined in the claims that follow.

