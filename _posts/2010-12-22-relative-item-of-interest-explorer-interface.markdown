---

title: Relative item of interest explorer interface
abstract: Systems and methods are disclosed for providing a Graphical User Interface (GUI) for representing a reference item and a number of items of interest. In one embodiment, each item of interest is assigned to one of a number of concentric regions in a two-dimensional space based on one or more attributes of the item of interest. The concentric regions in the two-dimensional space are centered at a location in the two-dimensional space that corresponds to the reference item. A GUI is then generated such that the GUI includes concentric display regions that correspond to the concentric regions in the two-dimensional space, where a select concentric display region provides an expanded view of the items of interest located within the corresponding region in the two-dimensional space and the remaining concentric display region(s) provide collapsed view(s) of the items of interest in the corresponding region(s) of the two-dimensional space.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08782560&OS=08782560&RS=08782560
owner: Waldeck Technology, LLC
number: 08782560
owner_city: Wilmington
owner_country: US
publication_date: 20101222
---
This application claims the benefit of provisional patent application Ser. No. 61 289 107 filed Dec. 22 2009 the disclosure of which is hereby incorporated herein by reference in its entirety.

The present disclosure relates to a Graphical User Interface GUI and more specifically relates to a GUI for representing a reference item and a number of items of interest.

Many services provided to users give the users access to vast amounts of data. For instance many location based services provide information to users regarding Points of Interest POIs that are near the users current locations. Other services provide information to users regarding other users or crowds of users near the users current locations. The vast amount of data returned to the users by such services can be overwhelming. This problem is further compounded by the often limited screen space available on mobile devices on which the data can be displayed. Thus there is a need for an intuitive interface that enables a user to understand navigate and utilize vast amounts of data.

The present disclosure relates to a Graphical User Interface GUI for representing a reference item and a number of items of interest. In one embodiment each item of interest is assigned to one of a number of concentric regions in a two dimensional space based on one or more attributes of the item of interest. The concentric regions in the two dimensional space are centered at a location in the two dimensional space that corresponds to the reference item. A GUI is then generated to represent the reference item and the items of interest such that the GUI includes a number of concentric display regions that correspond to the concentric regions in the two dimensional space where a select one of the concentric display regions provides an expanded view of the items of interest located within the corresponding region in the two dimensional space and the remaining one s of the concentric display regions provide collapsed view s of the items of interest in the corresponding region s of the two dimensional space. Presentation of the GUI to a user is then effected. In one embodiment the GUI is generated at a user device of the user and presentation of the GUI is effected by presenting the GUI to the user via a display of the user device. In another embodiment the GUI is generated at a server computer connected to a user device of the user via a network and presentation of the GUI to the user is effected by sending the GUI to the user device of the user via the network.

In another embodiment the reference item is a reference location and the items of interest are crowds of users located at or near the reference location. Each crowd is assigned to one of a number of concentric geographic regions centered at the reference location based on the location of the crowd. A GUI is then generated and presented such that the GUI includes a number of concentric display regions that correspond to the concentric geographic regions where a select one of the concentric display regions provides an expanded view of the crowds located in the corresponding geographic region and the remaining one s of the concentric display regions provide collapsed view s of the crowds located in the corresponding geographic region s .

Those skilled in the art will appreciate the scope of the present disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.

The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

The present disclosure relates to a Graphical User Interface GUI for representing a reference item and a number of items of interest wherein placement of representations of the items of interest in the GUI is based on a comparison of one or more defined attributes of the reference item and the items of interest. describe an exemplary embodiment where the reference item is a reference geographic location hereinafter reference location and the items of interest are crowds of users located at or near the reference location. However as also described below the present disclosure is not limited to a reference location and crowds of users. The GUI described herein may be utilized to represent any type of reference item and items of interest that can be represented in two dimensional space based on comparisons of one or more defined attributes of the reference item and the one or more items of interest.

Before describing the generation and presentation of a GUI that represents a reference location and nearby crowds of users it is beneficial to describe a system for forming crowds of users. illustrates a Mobile Aggregate Profile MAP system hereinafter system that operates to form crowds of users to enable generation and presentation of GUIs that represent reference locations and nearby crowds of users according to one embodiment of the present disclosure. Note that the system is exemplary and is not intended to limit the scope of the present disclosure. In this embodiment the system includes a MAP server one or more profile servers a location server a number of mobile devices through N generally referred to herein collectively as mobile devices and individually as mobile device having associated users through N generally referred to herein collectively as users and individually as user a subscriber device having an associated subscriber and a third party service communicatively coupled via a network . The network may be any type of network or any combination of networks. Specifically the network may include wired components wireless components or both wired and wireless components. In one exemplary embodiment the network is a distributed public network such as the Internet where the mobile devices are enabled to connect to the network via local wireless connections e.g. Wi Fi or IEEE 802.11 connections or wireless telecommunications connections e.g. 3G or 4G telecommunications connections such as GSM LTE W CDMA or WiMAX connections .

As discussed below in detail the MAP server operates to obtain current locations including location updates and user profiles of the users of the mobile devices . The current locations of the users can be expressed as positional geographic coordinates such as latitude longitude pairs and a height vector if applicable or any other similar information capable of identifying a given physical point in space in a two dimensional or three dimensional coordinate system. Using the current locations and user profiles of the users the MAP server is enabled to provide a number of features such as but not limited to forming crowds of users using current locations and or user profiles of the users and generating aggregate profiles for crowds of users. Note that while the MAP server is illustrated as a single server for simplicity and ease of discussion it should be appreciated that the MAP server may be implemented as a single physical server or multiple physical servers operating in a collaborative manner for purposes of redundancy and or load sharing.

In general the one or more profile servers operate to store user profiles for a number of persons including the users of the mobile devices . For example the one or more profile servers may be servers providing social network services such as the Facebook social networking service the MySpace social networking service the LinkedIN social networking service or the like. As discussed below using the one or more profile servers the MAP server is enabled to directly or indirectly obtain the user profiles of the users of the mobile devices . The location server generally operates to receive location updates from the mobile devices and make the location updates available to entities such as for instance the MAP server . In one exemplary embodiment the location server is a server operating to provide Yahoo s Fire Eagle service.

The mobile devices may be mobile smart phones portable media player devices mobile gaming devices or the like. Some exemplary mobile devices that may be programmed or otherwise configured to operate as the mobile devices are the Apple iPhone the Palm Pre the Samsung Rogue the Blackberry Storm the Motorola Droid or similar phone running Google s Android Operating System an Apple iPad and the Apple iPod Touch device. However this list of exemplary mobile devices is not exhaustive and is not intended to limit the scope of the present disclosure.

The mobile devices through N include MAP clients through N generally referred to herein collectively as MAP clients or individually as MAP client MAP applications through N generally referred to herein collectively as MAP applications or individually as MAP application third party applications through N generally referred to herein collectively as third party applications or individually as third party application and location functions through N generally referred to herein collectively as location functions or individually as location function respectively. The MAP client is preferably implemented in software. In general in the preferred embodiment the MAP client is a middleware layer operating to interface an application layer i.e. the MAP application and the third party applications to the MAP server . More specifically the MAP client enables the MAP application and the third party applications to request and receive data from the MAP server . In addition the MAP client enables applications such as the MAP application and the third party applications to access data from the MAP server .

The MAP application is also preferably implemented in software. The MAP application generally provides a user interface component between the user and the MAP server . More specifically among other things the MAP application enables the user to initiate requests for crowd data from the MAP server and present corresponding crowd data returned by the MAP server to the user as described below in detail. The MAP application also enables the user to configure various settings. For example the MAP application may enable the user to select a desired social networking service e.g. Facebook MySpace LinkedIN etc. from which to obtain the user profile of the user and provide any necessary credentials e.g. username and password needed to access the user profile from the social networking service.

The third party applications are preferably implemented in software. The third party applications operate to access the MAP server via the MAP client . The third party applications may utilize data obtained from the MAP server in any desired manner. As an example one of the third party applications may be a gaming application that utilizes crowd data to notify the user of Points of Interest POIs or Areas of Interest AOIs where crowds of interest are currently located. It should be noted that while the MAP client is illustrated as being separate from the MAP application and the third party applications the present disclosure is not limited thereto. The functionality of the MAP client may alternatively be incorporated into the MAP application and the third party applications .

The location function may be implemented in hardware software or a combination thereof. In general the location function operates to determine or otherwise obtain the location of the mobile device . For example the location function may be or include a Global Positioning System GPS receiver. In addition or alternatively the location function may include hardware and or software that enables improved location tracking in indoor environments such as for example shopping malls. For example the location function may be part of or compatible with the InvisiTrack Location System provided by InvisiTrack and described in U.S. Pat. No. 7 423 580 entitled Method and System of Three Dimensional Positional Finding which issued on Sep. 9 2008 U.S. Pat. No. 7 787 886 entitled System and Method for Locating a Target using RFID which issued on Aug. 31 2010 and U.S. Patent Application Publication No. 2007 0075898 entitled Method and System for Positional Finding Using RF Continuous and or Combined Movement which published on Apr. 5 2007 all of which are hereby incorporated herein by reference for their teachings regarding location tracking.

The subscriber device is a physical device such as a personal computer a mobile computer e.g. a notebook computer a netbook computer a tablet computer etc. a mobile smart phone or the like. The subscriber associated with the subscriber device is a person or entity. In general the subscriber device enables the subscriber to access the MAP server via a web browser to obtain various types of data preferably for a fee. For example the subscriber may pay a fee to have access to crowd data such as aggregate profiles for crowds located at one or more POIs and or located in one or more AOIs pay a fee to track crowds or the like. Note that the web browser is exemplary. In another embodiment the subscriber device is enabled to access the MAP server via a custom application.

Lastly the third party service is a service that has access to data from the MAP server such as aggregate profiles for one or more crowds at one or more POIs or within one or more AOIs. Based on the data from the MAP server the third party service operates to provide a service such as for example targeted advertising. For example the third party service may obtain anonymous aggregate profile data for one or more crowds located at a POI and then provide targeted advertising to known users located at the POI based on the anonymous aggregate profile data. Note that while targeted advertising is mentioned as an exemplary third party service other types of third party services may additionally or alternatively be provided. Other types of third party services that may be provided will be apparent to one of ordinary skill in the art upon reading this disclosure.

Before proceeding it should be noted that while the system of illustrates an embodiment where the one or more profile servers and the location server are separate from the MAP server the present disclosure is not limited thereto. In an alternative embodiment the functionality of the one or more profile servers and or the location server may be implemented within the MAP server .

The business logic layer includes a profile manager a location manager a history manager a crowd analyzer and an aggregation engine each of which is preferably implemented in software. The profile manager generally operates to obtain the user profiles of the users directly or indirectly from the one or more profile servers and store the user profiles in the persistence layer . The location manager operates to obtain the current locations of the users including location updates. As discussed below the current locations of the users may be obtained directly from the mobile devices and or obtained from the location server .

The history manager generally operates to maintain a historical record of anonymized user profile data by location. Note that while the user profile data stored in the historical record is preferably anonymized it is not limited thereto. The crowd analyzer operates to form crowds of users. In one embodiment the crowd analyzer utilizes a spatial crowd formation algorithm. However the present disclosure is not limited thereto. In addition the crowd analyzer may further characterize crowds to reflect degree of fragmentation best case and worst case degree of separation DOS and or degree of bi directionality. Still further the crowd analyzer may also operate to track crowds. The aggregation engine generally operates to provide aggregate profile data in response to requests from the mobile devices the subscriber device and the third party service . The aggregate profile data may be historical aggregate profile data for one or more POIs or one or more AOIs or aggregate profile data for crowd s currently at one or more POIs or within one or more AOIs. For additional information regarding the operation of the profile manager the location manager the history manager the crowd analyzer and the aggregation engine the interested reader is directed to U.S. Patent Publication number 2010 0198828 entitled FORMING CROWDS AND PROVIDING ACCESS TO CROWD DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 and published Aug. 5 2010 U.S. Patent Application Publication number 2010 0197318 entitled ANONYMOUS CROWD TRACKING which was filed Dec. 23 2009 and published Aug. 5 2010 U.S. Patent Application Publication number 2010 0198826 entitled MAINTAINING A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA BY LOCATION FOR USERS IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 and published Aug. 5 2010 U.S. Patent Application Publication number 2010 0198917 entitled CROWD FORMATION FOR MOBILE DEVICE USERS which was filed Dec. 23 2009 and published Aug. 5 2010 U.S. Patent Application Publication number 2010 0198870 entitled SERVING A REQUEST FOR DATA FROM A HISTORICAL RECORD OF ANONYMIZED USER PROFILE DATA IN A MOBILE ENVIRONMENT which was filed Dec. 23 2009 and published Aug. 5 2010 U.S. Patent Application Publication number 2010 0198862 entitled HANDLING CROWD REQUESTS FOR LARGE GEOGRAPHIC AREAS which was filed Dec. 23 2009 and published Aug. 5 2010 and U.S. Patent Application Publication number 2010 0197319 entitled MODIFYING A USER S CONTRIBUTION TO AN AGGREGATE PROFILE BASED ON TIME BETWEEN LOCATION UPDATES AND EXTERNAL EVENTS which was filed Dec. 23 2009 and published Aug. 5 2010 all of which are hereby incorporated herein by reference in their entireties.

The persistence layer includes an object mapping layer and a datastore . The object mapping layer is preferably implemented in software. The datastore is preferably a relational database which is implemented in a combination of hardware i.e. physical data storage hardware and software i.e. relational database software . In this embodiment the business logic layer is implemented in an object oriented programming language such as for example Java. As such the object mapping layer operates to map objects used in the business logic layer to relational database entities stored in the datastore . Note that in one embodiment data is stored in the datastore in a Resource Description Framework RDF compatible format.

In an alternative embodiment rather than being a relational database the datastore may be implemented as an RDF datastore. More specifically the RDF datastore may be compatible with RDF technology adopted by Semantic Web activities. Namely the RDF datastore may use the Friend Of A Friend FOAF vocabulary for describing people their social networks and their interests. In this embodiment the MAP server may be designed to accept raw FOAF files describing persons their friends and their interests. These FOAF files are currently output by some social networking services such as LiveJournal and Facebook . The MAP server may then persist RDF descriptions of the users as a proprietary extension of the FOAF vocabulary that includes additional properties desired for the system .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the MAP client of the mobile device sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the mobile device step B . The MAP client of the mobile device then sends the user profile of the user to the MAP server step C . Note that while in this embodiment the MAP client sends the complete user profile of the user to the MAP server in an alternative embodiment the MAP client may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user from the MAP client of the mobile device the profile manager of the MAP server processes the user profile step D . More specifically in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server that operate to map the user profiles of the users obtained from the social network services to a common format utilized by the MAP server . This common format includes a number of user profile categories or user profile slices such as for example a demographic profile category a social interaction profile category a general interests category a music interests profile category and a movie interests profile category. For example if the MAP server supports user profiles from Facebook MySpace and LinkedIN the profile manager may include a Facebook handler a MySpace handler and a LinkedIN handler. The social network handlers process user profiles from the corresponding social network services to generate user profiles for the users in the common format used by the MAP server . For this example assume that the user profile of the user is from Facebook . The profile manager uses a Facebook handler to process the user profile of the user to map the user profile of the user from Facebook to a user profile for the user for the MAP server that includes lists of keywords for a number of predefined profile categories or profile slices such as for example a demographic profile category a social interaction profile category a general interests profile category a music interests profile category and a movie interests profile category. As such the user profile of the user from Facebook may be processed by the Facebook handler of the profile manager to create a list of keywords such as for example liberal High School Graduate 35 44 College Graduate etc. for the demographic profile category a list of keywords such as Seeking Friendship for the social interaction profile category a list of keywords such as politics technology photography books etc. for the general interests profile category a list of keywords including music genres artist names album names or the like for the music interests profile category and a list of keywords including movie titles actor or actress names director names movie genres or the like for the movie interests profile category. In one embodiment the profile manager may use natural language processing or semantic analysis. For example if the Facebook user profile of the user states that the user is 20 years old semantic analysis may result in the keyword of 18 24 years old being stored in the user profile of the user for the MAP server .

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step E . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the mobile device to the MAP client and the MAP client then provides the current location of the mobile device to the MAP server step A . Note that step A may be repeated periodically or in response to a change in the current location of the mobile device in order for the MAP application to provide location updates for the user to the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step B . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user . Any historical data maintained by the MAP server is preferably anonymized by the history manager in order to maintain the privacy of the users .

In addition to storing the current location of the user the location manager sends the current location of the user to the location server step C . In this embodiment by providing location updates to the location server the MAP server in return receives location updates for the user from the location server . This is particularly beneficial when the mobile device does not permit background processes. If the mobile device does not permit background processes the MAP application will not be able to provide location updates for the user to the MAP server unless the MAP application is active. Therefore when the MAP application is not active other applications running on the mobile device or some other device of the user may directly or indirectly provide location updates to the location server for the user . This is illustrated in step where the location server receives a location update for the user directly or indirectly from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

At some point after authentication is complete a user profile process is performed such that a user profile of the user is obtained from the profile server and delivered to the MAP server step . In this embodiment the profile manager of the MAP server sends a profile request to the profile server step A . In response the profile server returns the user profile of the user to the profile manager of the MAP server step B . Note that while in this embodiment the profile server returns the complete user profile of the user to the MAP server in an alternative embodiment the profile server may return a filtered version of the user profile of the user to the MAP server . The profile server may filter the user profile of the user according to criteria specified by the user . For example the user profile of the user may include demographic information general interests music interests and movie interests and the user may specify that the demographic information or some subset thereof is to be filtered or removed before sending the user profile to the MAP server .

Upon receiving the user profile of the user the profile manager of the MAP server processes the user profile step C . More specifically as discussed above in the preferred embodiment the profile manager includes social network handlers for the social network services supported by the MAP server . The social network handlers process user profiles to generate user profiles for the MAP server that include lists of keywords for each of a number of profile categories or profile slices.

After processing the user profile of the user the profile manager of the MAP server stores the resulting user profile for the user step D . More specifically in one embodiment the MAP server stores user records for the users in the datastore . The user profile of the user is stored in the user record of the user . The user record of the user includes a unique identifier of the user the user profile of the user and as discussed below a current location of the user . Note that the user profile of the user may be updated as desired. For example in one embodiment the user profile of the user is updated by repeating step each time the user activates the MAP application .

Note that while the discussion herein focuses on an embodiment where the user profiles of the users are obtained from the one or more profile servers the user profiles of the users may be obtained in any desired manner. For example in one alternative embodiment the user may identify one or more favorite websites. The profile manager of the MAP server may then crawl the one or more favorite websites of the user to obtain keywords appearing in the one or more favorite websites of the user . These keywords may then be stored as the user profile of the user .

At some point a process is performed such that a current location of the mobile device and thus a current location of the user is obtained by the MAP server step . In this embodiment the MAP application of the mobile device obtains the current location of the mobile device from the location function of the mobile device . The MAP application then provides the current location of the user of the mobile device to the location server step A . Note that step A may be repeated periodically or in response to changes in the location of the mobile device in order to provide location updates for the user to the MAP server . The location server then provides the current location of the user to the MAP server step B . The location server may provide the current location of the user to the MAP server automatically in response to receiving the current location of the user from the mobile device or in response to a request from the MAP server .

In response to receiving the current location of the mobile device the location manager of the MAP server stores the current location of the mobile device as the current location of the user step C . More specifically in one embodiment the current location of the user is stored in the user record of the user maintained in the datastore of the MAP server . Note that in the preferred embodiment only the current location of the user is stored in the user record of the user . In this manner the MAP server maintains privacy for the user since the MAP server does not maintain a historical record of the location of the user . As discussed below in detail historical data maintained by the MAP server is preferably anonymized in order to maintain the privacy of the users .

As discussed above the use of the location server is particularly beneficial when the mobile device does not permit background processes. As such if the mobile device does not permit background processes the MAP application will not provide location updates for the user to the location server unless the MAP application is active. However other applications running on the mobile device or some other device of the user may provide location updates to the location server for the user when the MAP application is not active. This is illustrated in step where the location server receives a location update for the user from another application running on the mobile device or an application running on another device of the user step A . The location server then provides the location update for the user to the MAP server step B . In response the location manager updates and stores the current location of the user in the user record of the user step C . In this manner the MAP server is enabled to obtain location updates for the user even when the MAP application is not active at the mobile device .

First the crowd analyzer establishes a bounding box for the crowd formation process step . Note that while a bounding box is used in this example other geographic shapes may be used to define a bounding region for the crowd formation process e.g. a bounding circle . In one embodiment if crowd formation is performed in response to a specific request the bounding box is established based on the POI or the AOI of the request. If the request is for a POI then the bounding box is a geographic area of a predetermined size centered at the POI. If the request is for an AOI the bounding box is the AOI. Alternatively if the crowd formation process is performed proactively the bounding box is a bounding box of a predefined size.

The crowd analyzer then creates a crowd for each individual user in the bounding box step . More specifically the crowd analyzer queries the datastore of the MAP server to identify users currently located within the bounding box. Then a crowd of one user is created for each user currently located within the bounding box. Next the crowd analyzer determines the two closest crowds in the bounding box step and determines a distance between the two crowds step . The distance between the two crowds is a distance between crowd centers of the two crowds. Note that the crowd center of a crowd of one is the current location of the user in the crowd. The crowd analyzer then determines whether the distance between the two crowds is less than an optimal inclusion distance step . In this embodiment the optimal inclusion distance is a predefined static distance. If the distance between the two crowds is less than the optimal inclusion distance the crowd analyzer combines the two crowds step and computes a new crowd center for the resulting crowd step . The crowd center may be computed based on the current locations of the users in the crowd using a center of mass algorithm. At this point the process returns to step and is repeated until the distance between the two closest crowds is not less than the optimal inclusion distance. At that point the crowd analyzer discards any crowds with less than three users step . Note that throughout this disclosure crowds are only maintained if the crowds include three or more users. However while three users is the preferred minimum number of users in a crowd the present disclosure is not limited thereto. The minimum number of users in a crowd may be defined as any number greater than or equal to two users.

Next the crowd analyzer determines whether the new and old bounding boxes overlap step . If so the crowd analyzer creates a bounding box encompassing the new and old bounding boxes step . For example if the new and old bounding boxes are 40 40 meter regions and a 1 1 meter square at the northeast corner of the new bounding box overlaps a 1 1 meter square at the southwest corner of the old bounding box the crowd analyzer may create a 79 79 meter square bounding box encompassing both the new and old bounding boxes.

The crowd analyzer then determines the individual users and crowds relevant to the bounding box created in step step . The crowds relevant to the bounding box are crowds that are within or overlap the bounding box e.g. have at least one user located within the bounding box . The individual users relevant to the bounding box are users that are currently located within the bounding box and not already part of a crowd. Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density within the bounding box step . More specifically in one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is set according to the following equation 

The crowd analyzer then creates a crowd for each individual user within the bounding box that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . At this point the process proceeds to where the crowd analyzer analyzes the crowds relevant to the bounding box to determine whether any of the crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd step . The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds for the bounding box step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is not less than the optimal inclusion distance then the process proceeds to step . Otherwise the two closest crowds are combined or merged step and a new crowd center for the resulting crowd is computed step . Again a center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the resulting crowd is computed step . In one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . The maximum number of iterations is a predefined number that ensures that the crowd formation process does not indefinitely loop over steps through or loop over steps through more than a desired maximum number of times. If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer discards crowds with less than three users or members step and the process ends.

Returning to step in if the new and old bounding boxes do not overlap the process proceeds to and the bounding box to be processed is set to the old bounding box step . In general the crowd analyzer then processes the old bounding box in much the same manner as described above with respect to steps through . More specifically the crowd analyzer determines the individual users and crowds relevant to the bounding box step . The crowds relevant to the bounding box are crowds that are within or overlap the bounding box e.g. have at least one user located within the bounding box . The individual users relevant to the bounding box are users that are currently located within the bounding box and not already part of a crowd. Next the crowd analyzer computes an optimal inclusion distance for individual users based on user density within the bounding box step . More specifically in one embodiment the optimal inclusion distance for individuals which is also referred to herein as an initial optimal inclusion distance is set according to the following equation 

The crowd analyzer then creates a crowd of one user for each individual user within the bounding box that is not already included in a crowd and sets the optimal inclusion distance for the crowds to the initial optimal inclusion distance step . At this point the crowd analyzer analyzes the crowds for the bounding box to determine whether any crowd members i.e. users in the crowds violate the optimal inclusion distance of their crowds step . Any crowd member that violates the optimal inclusion distance of his or her crowd is then removed from that crowd step . The crowd analyzer then creates a crowd of one user for each of the users removed from their crowds in step and sets the optimal inclusion distance for the newly created crowds to the initial optimal inclusion distance step .

Next the crowd analyzer determines the two closest crowds in the bounding box step and a distance between the two closest crowds step . The distance between the two closest crowds is the distance between the crowd centers of the two closest crowds. The crowd analyzer then determines whether the distance between the two closest crowds is less than the optimal inclusion distance of a larger of the two closest crowds step . If the two closest crowds are of the same size i.e. have the same number of users then the optimal inclusion distance of either of the two closest crowds may be used. Alternatively if the two closest crowds are of the same size the optimal inclusion distances of both of the two closest crowds may be used such that the crowd analyzer determines whether the distance between the two closest crowds is less than the optimal inclusion distances of both of the two closest crowds. As another alternative if the two closest crowds are of the same size the crowd analyzer may compare the distance between the two closest crowds to an average of the optimal inclusion distances of the two closest crowds.

If the distance between the two closest crowds is not less than the optimal inclusion distance the process proceeds to step . Otherwise the two closest crowds are combined or merged step and a new crowd center for the resulting crowd is computed step . Again a center of mass algorithm may be used to compute the crowd center of a crowd. In addition a new optimal inclusion distance for the resulting crowd is computed step . As discussed above in one embodiment the new optimal inclusion distance for the resulting crowd is computed as 

At this point the crowd analyzer determines whether a maximum number of iterations have been performed step . If the maximum number of iterations has not been reached the process returns to step and is repeated until either the distance between the two closest crowds is not less than the optimal inclusion distance of the larger crowd or the maximum number of iterations has been reached. At that point the crowd analyzer discards crowds with less than three users or members step . The crowd analyzer then determines whether the crowd formation process for the new and old bounding boxes is done step . In other words the crowd analyzer determines whether both the new and old bounding boxes have been processed. If not the bounding box is set to the new bounding box step and the process returns to step and is repeated for the new bounding box. Once both the new and old bounding boxes have been processed the crowd formation process ends.

The crowd analyzer then identifies the two closest crowds and in the new bounding box and determines a distance between the two closest crowds and . In this example the distance between the two closest crowds and is less than the optimal inclusion distance. As such the two closest crowds and are merged and a new crowd center and new optimal inclusion distance are computed as illustrated in . The crowd analyzer then repeats the process such that the two closest crowds and in the new bounding box are again merged as illustrated in . At this point the distance between the two closest crowds and is greater than the appropriate optimal inclusion distance. As such the crowd formation process is complete.

Since the old bounding box and the new bounding box overlap the crowd analyzer creates a bounding box that encompasses both the old bounding box and the new bounding box as illustrated in . In addition the crowd analyzer creates crowds through for individual users currently located within the bounding box . The optimal inclusion distances of the crowds through are set to the initial optimal inclusion distance computed by the crowd analyzer based on the density of users in the bounding box .

Next the crowd analyzer analyzes the crowds and through to determine whether any members of the crowds and through violate the optimal inclusion distances of the crowds and through . In this example as a result of the user leaving the crowd and moving to his new location both of the remaining members of the crowd violate the optimal inclusion distance of the crowd . As such the crowd analyzer removes the remaining users from the crowd and creates crowds and of one user each for those users as illustrated in .

The crowd analyzer then identifies the two closest crowds in the bounding box which in this example are the crowds and . Next the crowd analyzer computes a distance between the two crowds and . In this example the distance between the two crowds and is less than the initial optimal inclusion distance and as such the two crowds and are combined. In this example crowds are combined by merging the smaller crowd into the larger crowd. Since the two crowds and are of the same size the crowd analyzer merges the crowd into the crowd as illustrated in . A new crowd center and new optimal inclusion distance are then computed for the crowd .

At this point the crowd analyzer repeats the process and determines that the crowds and are now the two closest crowds. In this example the distance between the two crowds and is less than the optimal inclusion distance of the larger of the two crowds and which is the crowd . As such the crowd is merged into the crowd and a new crowd center and optimal inclusion distance are computed for the crowd as illustrated in . At this point there are no two crowds closer than the optimal inclusion distance of the larger of the two crowds. As such the crowd analyzer discards any crowds having less than three members as illustrated in . In this example the crowds and have less than three members and are therefore removed. The crowd has three or more members and as such is not removed. At this point the crowd formation process is complete.

More specifically as illustrated in as a result of the movement of the user from the old location to the new location the remaining users in the crowd no longer satisfy the optimal inclusion distance for the crowd . As such the remaining users in the crowd are removed from the crowd and crowds and of one user each are created for the removed users as shown in . In this example no two crowds in the old bounding box are close enough to be combined. As such crowds having less than three users are removed and processing of the old bounding box is complete and the crowd analyzer proceeds to process the new bounding box .

As illustrated in processing of the new bounding box begins by the crowd analyzer creating a crowd of one user for the user. The crowd analyzer then identifies the crowds and as the two closest crowds in the new bounding box and determines a distance between the two crowds and . In this example the distance between the two crowds and is less than the optimal inclusion distance of the larger crowd which is the crowd . As such the crowd analyzer combines the crowds and by merging the crowd into the crowd as illustrated in . A new crowd center and new optimal inclusion distance are then computed for the crowd . At this point the crowd formation process is complete. Note that the crowd formation processes described above with respect to are exemplary. The present disclosure is not limited thereto. Any type of crowd formation process may be used.

First the MAP application of the mobile device sends a crowd request to the MAP server via the MAP client of the mobile device step . The crowd request is a request for crowd data for crowds currently formed at or near a specified reference location. The crowd request may be initiated by the user of the mobile device via the MAP application or may be initiated automatically by the MAP application in response to an event such as for example start up of the MAP application movement of the user or the like. The reference location specified by the crowd request may be the current location of the user a POI selected by the user a POI selected by the MAP application a POI implicitly defined via a separate application e.g. the POI is implicitly defined as the location of the nearest Starbucks coffee house in response to the user performing a Google search for Starbucks an arbitrary location selected by the user or the like.

In response to receiving the crowd request the MAP server identifies one or more crowds relevant to the crowd request step . More specifically in one embodiment the crowd analyzer performs a crowd formation process such as that described above in to form one or more crowds relevant to the reference location specified by the crowd request. In another embodiment the crowd analyzer proactively forms crowds using a process such as that described above in and stores corresponding crowd records in the datastore of the MAP server . Then rather than forming the relevant crowds in response to the crowd request the crowd analyzer queries the datastore to identify the crowds that are relevant to the crowd request. The crowds relevant to the crowd request may be those crowds within or intersecting a bounding region such as a bounding box for the crowd request. The bounding region is a geographic region of a predefined shape and size centered at the reference location. A crowd may be determined to be within or intersecting the bounding region if for example a crowd center of the crowd is located within the bounding region at least one user in the crowd is currently located within the bounding region a bounding box for the crowd e.g. a box passing through the northwest and southeast most users in the crowd is within or intersects the bounding region or the like.

Once the crowd analyzer has identified the crowds relevant to the crowd request the MAP server obtains crowd data for the relevant crowds step . The crowd data for the relevant crowds includes spatial information that defines the locations of the relevant crowds. The spatial information that defines the location of a crowd is any type of information that defines the geographic location of the crowd. For example the spatial information may include the crowd center of the crowd a closest street address to the crowd center of the crowd a POI at which the crowd is located or the like. In addition the crowd data for the relevant crowds may include aggregate profiles for the relevant crowds information characterizing the relevant crowds or both. An aggregate profile for a crowd is generally an aggregation or combination of the user profiles of the users in the crowd. For example in one embodiment the aggregate profile of a crowd includes for each keyword of at least a subset of the keywords in the user profile of the user of the mobile device that issued the crowd request a number of user matches for the keyword i.e. a number of the users in the crowd that have user profiles that include a matching keyword or a ratio of the number of user matches for the keyword to a total number of users in the crowd. The MAP server then returns the crowd data to the mobile device step .

Upon receiving the crowd data the MAP application of the mobile device assigns each of the relevant crowds to one of a number of concentric geographic regions centered at the reference location step . More specifically for each of the relevant crowds the MAP application assigns the relevant crowd to the one of the concentric geographic regions in which the crowd is located. In one embodiment the concentric geographic regions are two or more concentric circular geographic regions that are centered at the reference location. The size of the concentric geographic regions e.g. the radii of the concentric circular geographic regions may be predefined static values or dynamic values. For instance the size of the concentric geographic regions may be a function of the size of the bounding region for the crowd request where the bounding region for the crowd request may be configured by the user of the mobile device . As another example the size of the concentric geographic regions may be a function of the number of concentric geographic regions e.g. two concentric geographic regions versus three concentric geographic regions which may be specified by the user at the time of the crowd request or dynamically controlled by the user during presentation of the GUI see below .

Next the MAP application generates and presents a GUI that includes a number of concentric display regions that correspond to the concentric geographic regions where a select one of the concentric display regions provides an expanded view of the relevant crowds located within the corresponding geographic region and the remaining one s of the concentric display regions provide collapsed view s of the relevant crowds in the corresponding geographic region s step . In one preferred embodiment in the selected display region the expanded view is provided by displaying crowd representations in the selected display region that represent the relevant crowds in the corresponding geographic region where the crowd representations represent or at least substantially represent both relative distances within the corresponding geographic region between the reference location and the corresponding crowds and relative bearings within the corresponding geographic region from the reference location to the corresponding crowds. In contrast for each non selected display region the collapsed view is provided by displaying crowd representations in the non selected display region that represent the relevant crowds in the corresponding geographic region where the crowd representations represent the relative bearings within the corresponding geographic region from the reference location to the corresponding crowds. However the crowd representations in the non selected display region do not represent the relative distances within the corresponding geographic region between the reference location and the corresponding crowds. In other words even though the actual distances between the crowds represented by the crowd representations in the non selected display region and the reference location may be different in the collapsed view the crowd representations are equidistant or at least substantially equidistant from a point in the GUI that corresponds to the reference location. In one exemplary alternative the crowd representations in the non selected display region may represent relative distances of the corresponding crowds from reference location but in an attenuated manner such that the crowd representations fit within the non selected display area.

In this embodiment the MAP application next receives user input from the user of the mobile device that selects a different display region from the concentric display regions step . In response the MAP application updates the GUI step . More specifically the MAP application updates the GUI such that the newly selected display region provides an expanded view of the crowds located in the corresponding geographic region. The previously selected display region is also updated to provide a collapsed view of the crowds located in the corresponding geographic region. As such in this embodiment at any one time only one of the display regions is selected to provide an expanded view of the relevant crowds located in the corresponding geographic region while all of the remaining display regions provide collapsed view s of the relevant crowds located in the corresponding geographic region s .

In contrast because the display regions and are not selected the display regions and provide collapsed views of the relevant crowds in the corresponding geographic regions. More specifically in this example the relevant crowds located within the geographic region corresponding to the display region are represented by crowd representations and . In the collapsed view the crowd representations and represent the relative bearings within the corresponding geographic region from the reference location to the corresponding crowds. However the crowd representations and do not represent the relative distances within the corresponding geographic region between the reference location and the corresponding crowds. In other words even though the actual distances between the crowds represented by the crowd representations and and the reference location may be different in the collapsed view the crowd representations and are equidistant or at least substantially equidistant from the reference location indicator .

Likewise in this example the relevant crowds located within the geographic region corresponding to the display region are represented by crowd representations and . In the collapsed view the crowd representations and represent the relative bearings within the corresponding geographic region from the reference location and the corresponding crowds. However the crowd representations and do not represent the relative distances within the corresponding geographic region between the reference location and the corresponding crowds. In other words even though the actual distances between the crowds represented by the crowd representations and and the reference location may be different in the collapsed view the crowd representations and are equidistant or at least substantially equidistant from the reference location indicator .

In contrast because the display regions and are not selected the display regions and provide collapsed views of the relevant crowds in the corresponding geographic regions. More specifically in the collapsed view the crowd representations through represent the relative bearings within the corresponding geographic region from the reference location and the corresponding crowds. However the crowd representations through do not represent the relative distances within the corresponding geographic region between the reference location and the corresponding crowds. In other words even though the actual distances between the crowds represented by the crowd representations through and the reference location may be different in the collapsed view the crowd representations through are equidistant or at least substantially equidistant from the reference location indicator .

Likewise in the collapsed view the crowd representations and represent the relative bearings within the corresponding geographic region from the reference location and the corresponding crowds. However the crowd representations and do not represent the relative distances within the corresponding geographic region between the reference location and the corresponding crowds. In other words even though the actual distances between the crowds represented by the crowd representations and and the reference location may be different in the collapsed view the crowd representations and are equidistant or at least substantially equidistant from the reference location indicator .

It should be noted that other collision avoidance schemes may additionally or alternatively be used. As a first example a z order of the crowd representations through can be controlled based on attributes of the corresponding crowds such as for example the locations of the crowds. As a second example the distances of the crowd representations through from the group center may be scaled to a non linear scale in order to provide more space for displaying and interacting with the crowd representations through . As a final example as the user interacts with the GUI to attempt to select one of the crowd representations through which crowd representation of the crowd representations through that is selected may be intelligently controlled to assist the user in selecting a desired crowd representation if the user repeatedly tries to select a desired crowd representation at a particular location within the GUI .

It should also be noted that the positions of the crowd representations through within the GUI may be adjusted based upon empty space within the GUI or a more uniform division of the display area in order to make better use of the display area. Also in addition to or as an alternative to grouping crowd representations when there is a collision crowd representations may be grouped based on their relations to one another. For example crowd representations for two crowds may be grouped if a user in one of the crowds is a friend of one of the users in the other crowd if the two crowds are at the same POI or if the two crowds are at two POIs within the same AOI.

More specifically first the subscriber device sends a crowd request to the MAP server step . In one embodiment the crowd request is sent via the web browser of the subscriber device . As discussed above the crowd request is a request for crowd data for crowds currently formed at or near a specified reference location. The reference location in this embodiment is preferably a location selected by the subscriber . However the reference location is not limited thereto.

In response to receiving the crowd request the MAP server identifies one or more crowds relevant to the crowd request step and obtains crowd data for the relevant crowds step . Again the crowd data for the relevant crowds includes spatial information that defines the locations of the crowds. In addition the crowd data may include aggregate profiles for the crowds information characterizing the crowds or both.

Next the crowd analyzer of the MAP server assigns each of the relevant crowds to one of a number of concentric geographic regions centered at the reference location step . More specifically for each of the relevant crowds the MAP application assigns the relevant crowd to the one of the concentric geographic regions in which the crowd is located. The crowd analyzer then generates a GUI that includes a number of concentric display regions that correspond to the concentric geographic regions where a select one of the concentric display regions provides an expanded view of the relevant crowds located within the corresponding geographic region and the remaining one s of the concentric display regions provide collapsed view s of the relevant crowds in the corresponding geographic region s step . The MAP server then delivers the GUI to the subscriber device step where the GUI is presented to the subscriber via for example the web browser step .

In this embodiment the subscriber device next receives user input from the subscriber that selects a different display region from the concentric display regions step and provides the selection to the MAP server step . In response the MAP server updates the GUI step and delivers the updated GUI to the subscriber device step . The subscriber device then presents the updated GUI to the subscriber via for example the web browser step .

Next a number of items of interest are identified step . The items of interest are generally other items having the same attributes as the reference item. For example if the reference item is an ideal computer the items of interest may be real computers that are commercially available. Each of the items of interest is then assigned to one of a number of concentric regions in the two dimensional space centered at the location of the reference item in the two dimensional space based on the attributes of the item of interest step . Note that the attribute s of the item of interest represents the location of the item of interest in the two dimensional space. As such the item of interest is assigned to the concentric region in the two dimensional space in which the item of interest is located as determined by the attribute s of the item of interest. Also note that if more than two attributes of the reference item and the items of interest are to be compared the reference item and the items of interest may be mapped to the two dimensional space using an appropriate mapping scheme.

A GUI that represents the reference item and the items of interest is then generated such that the GUI includes concentric display regions that correspond to the concentric regions within the two dimensional space where a select one of the concentric display regions provides an expanded view of the items of interest located within the corresponding region in the two dimensional space and the remaining ones of the concentric display region s provide collapsed view s of the items of interest located within the corresponding region s in the two dimensional space step . The GUI is then presented to a user step . User input may then be received from the user to select a different one of the concentric display regions step . In response the GUI is updated such that the newly selected display region provides an expanded view of the items of interest in the corresponding region of the two dimensional space while the other one s of the concentric display regions provide collapsed view s of the items of interest located in the corresponding region s of the two dimensional space step . The updated GUI is then presented to the user step .

While the discussion above mentions an example where the reference item is a reference computer and the items of interest are other computers to be compared to the reference computer numerous other examples will be apparent to one of ordinary skill in the art upon reading this disclosure. As a first example as discussed above with respect to the reference item may be a reference location and the items of interest may be crowds of users. As a second example the reference item may be a reference location and the items of interest may be POIs. As a third example the reference item may be a user and the items of interest may be friends or at least a subset of the friends of the user in a social network. In this example the attributes of the user and his friends represented in the GUI may be the locations of the user and his friends. As a fourth example the reference item may be a user and the items of interest may be friends and friends of friends of the user in a social network. In this example the attributes of the user and his friends and friends of friends represented in the GUI may be the locations of the user and his friends and friends of friends. Alternatively the attributes of the user and his friends and friends of friends represented in the GUI may be social network distance i.e. degree of separation between the user and his friends and friends of friends and degree of similarity between the user profiles of the user and his friends and friends of friends. Note that these examples are provided for illustrative purposes only and are not intended to provide an exhaustive list of the types of items that may be represented in the GUI disclosed herein. Numerous other examples will be apparent to one of ordinary skill in the art upon reading this disclosure and are to be considered within the scope of the present disclosure.

Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow.

