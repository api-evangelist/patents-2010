---

title: Capacity availability aware auto scaling
abstract: Technologies are described herein for capacity availability aware auto scaling. Capacity event auto scaling rules can be defined that specify how computing resources are to be scaled during a capacity event. The capacity event auto scaling rules can be defined to allow utilization of the computing resources to increase during a capacity event. A probability that capacity will be available for providing computing resources during a capacity event can also be computed. Standard auto scaling rules utilized by an auto scaling component can then be modified based upon the computed probability. Other types of actions might also be taken based upon the computed probability, such as reserving instances of computing resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09448824&OS=09448824&RS=09448824
owner: Amazon Technologies, Inc.
number: 09448824
owner_city: Seattle
owner_country: US
publication_date: 20101228
---
Cloud services allow for the on demand provision and utilization of computing resources such as processing resources storage resources database resources and communication resources. Cloud services also allow customers to purchase computing resources on a continual or as needed basis. The capacity of purchased computing resources can also be scaled as needed. In this manner the capacity of resources purchased by a cloud services customer can be scaled on demand and the customer pays only for the utilized capacity.

Auto scaling is one mechanism for scaling cloud computing resources in response to increases or lulls in demand for the resources. Auto scaling allows cloud services customers to automatically scale cloud capacity according to conditions they define. For instance rules may be defined for scaling up capacity in a particular manner in response to the occurrence of specified conditions such as a spike in demand. Similarly rules might also be defined to scale down capacity in a particular manner in response to the occurrence of other conditions such as a lull in demand.

Some cloud services customers using auto scaling might specify that computing resources be operated at a relatively low percentage of their maximum operating capacity. By operating computing resources at a relatively low percentage of their maximum operating capacity demand can be rapidly reallocated to existing computing resources if an event occurs a capacity event that causes a number of a customer s computing resources to fail.

As an example a cloud services customer might operate a fleet of 300 virtual machine instances instances spread equally across three data centers 100 instances each . The customer might also define auto scaling rules specifying that new instances be created when the average processor utilization of existing instances reaches 60 . In the event of a failure of one of the three data centers the load served by instances in the failed data center will be rapidly reallocated to the two surviving data centers. Consequently the average processor utilization of the instances executing in the surviving data centers at the time of the failure will likely climb above 60 . As a result the auto scaling mechanism described above will cause additional instances to be generated in the surviving data centers until the average processor utilization of these instances returns to 60 .

The scenario described above illustrates several shortcomings of typical auto scaling implementations. First operating computing resources at a relatively low percentage of their maximum operating capacity is inefficient because significant computing resources may be unused on a day to day basis. Second sufficient computing resources might not be available to handle a spike in demand resulting from a capacity event. Consequently cloud services customers may be very frustrated in the event that needed computing resources are unavailable when a capacity event occurs.

The following detailed description is directed to technologies for capacity availability aware auto scaling. Utilizing the technologies described herein auto scaling functionality can be coupled with an awareness of data center availability to allow an auto scaling mechanism to react to the occurrence of a capacity event. In particular two sets of rules for auto scaling computing resources can be defined in one embodiment disclosed herein. An auto scaling component utilizes the two sets of rules to determine when computing resources should be scaled up or down. A first set of rules referred to herein as standard auto scaling rules is utilized during normal data center operation. A second set of rules referred to herein as capacity event auto scaling rules is utilized during a capacity event. A capacity event is an event that permanently or temporarily reduces data center capacity for providing the computing resources.

The capacity event auto scaling rules can be defined to allow utilization of the computing resources to increase during a capacity event. For instance standard auto scaling rules may be defined that specify utilization of certain computing resources at 60 . If average utilization of the computing resources exceeds 60 additional instances of the computing resources will be instantiated so that the utilization returns to 60 . In this example capacity event auto scaling rules may be defined that specify utilization of computing resources at 90 during a capacity event. If a capacity event occurs the average utilization of the computing resources will be permitted to increase to 90 thereby preventing additional instances from being instantiated. In this manner the rules utilized by an auto scaling component to determine when to instantiate and terminate instances of computing resources can be modified during a capacity event. The capacity event auto scaling rules might also specify the location at which new instances should be created during a capacity event.

In one implementation the capacity event auto scaling rules include scale up rules and scale down rules for use during a capacity event. The scale up rules define conditions and actions for instantiating new instances of computing resources during a capacity event. For instance a scale up rule may be defined indicating that three new instances of a computing resource are to be created when average utilization of existing instances reaches a specified percentage e.g. 90 during a capacity event. The scale down rules define conditions and actions for terminating existing instances of computing resources during a capacity event. For instance a scale down rule may be defined indicating that one instance of a computing resource is to be terminated when average utilization of existing instances reaches a specified percentage e.g. 30 during a capacity event.

According to another aspect presented herein a probability that data center capacity will be available for providing computing resources during a capacity event is computed. The standard auto scaling rules utilized by an auto scaling component may then be modified based upon the computed probability. For instance if the computed probability indicates a high likelihood that data center capacity for providing computing resources will be available during a capacity event the standard auto scaling rules may be modified to allow the computing resources to operate at a relatively high percentage of maximum capacity.

Other types of actions might also be taken based upon the computed probability. For instance reserved instances may be purchased on behalf of a cloud services customer if the computed probability indicates a low likelihood that data center capacity will be available during a capacity event. Reserved instances are instances of a computing resource that are reserved for a customer in exchange for a payment. By reserving instances of computing resources in this manner a cloud services customer can increase the likelihood or possibly guarantee that data center capacity will be available during a capacity event.

According to embodiments the probability that data center capacity will be available during a capacity event may be computed based upon one or more factors. For instance the probability may be computed based upon historical data regarding the availability of computing resources following a capacity event the time within which new data center capacity may be made available for use a maximum capacity and currently available capacity of data centers providing the computing resources auto scaling rules specified by cloud services customers historical data regarding the reaction of customers to previous capacity events the likelihood that data center capacity will be depleted by other services during a capacity event and the number of reserved instances purchased by data center customers. These factors might be utilized in various combinations and with various weights. Other factors might also be utilized to compute the probability that data center capacity will be available during a capacity event.

It should be appreciated that the subject matter presented herein may be implemented as a computer process a computer controlled apparatus a computing system or an article of manufacture such as a computer readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types.

Those skilled in the art will also appreciate that the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein including multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers handheld computers personal digital assistants e readers cellular telephone devices special purposed hardware devices network appliances and the like. The embodiments described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In the following detailed description references are made to the accompanying drawings that form a part hereof and that show by way of illustration specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures.

The computing resources provided by the cloud computing platform may include various types of resources such as data processing resources data storage resources communication resources and the like. Each type of computing resource may be general purpose or may be available in a number of specific configurations. For example data processing resources may be available as virtual machine instances instances configured to provide World Wide Web Web servers application servers media servers database servers and the like. Data storage resources may include file storage devices block storage devices and the like.

Each type or configuration of computing resource may be available in different sizes such as large resources consisting of many processors large amounts of memory and or large storage capacity and small resources consisting of fewer processors smaller amounts of memory and or smaller storage capacity. Customers may choose to allocate a number of small processing resources as Web servers and or one large processing resource as a database server for example.

The computing resources provided by the cloud computing platform are enabled by one or more data centers A N which may be referred herein singularly as a data center or in the plural as the data centers . The data centers are facilities utilized to house and operate computer systems and associated components. The data centers typically include redundant and backup power communications cooling and security systems. The data centers might also be located in geographically disparate locations. One illustrative configuration for a data center that implements the concepts and technologies disclosed herein for capacity availability aware auto scaling will be described below with regard to .

The customers and other consumers of the cloud computing platform may access the computing resources provided by the data centers over a wide area network WAN . Although a WAN is illustrated in it should be appreciated that a local area network LAN the Internet or any other networking topology known in the art that connects the data centers to remote consumers may be utilized. It should also be appreciated that combinations of such networks might also be utilized.

The customer computing system is a computer utilized by a customer or other consumer of the cloud computing platform . For instance the customer computing system may be a server computer a desktop or laptop personal computer a tablet computer a wireless telephone a personal digital assistant PDA an e reader a game console a set top box or any other computing device capable of accessing the cloud computing platform .

As will be described in greater detail below the customer computing system may be utilized to configure aspects of the computing resources provided by the cloud computing platform . In this regard the cloud computing platform might provide a Web interface through which aspects of its operation may be configured through the use of a Web browser application program executing on the customer computing system . Alternately a stand alone application program executing on the customer computing system might access an application programming interface API exposed by the cloud computing platform for performing the configuration operations. Other mechanisms for configuring the operation of the cloud computing platform might also be utilized.

According to embodiments disclosed herein the capacity of purchased computing resources provided by the cloud computing platform can be scaled in response to demand. In this regard scaling refers to the process of instantiating which may be referred to herein as launching or creating or terminating instances of computing resources in response to demand. In this manner the capacity of resources purchased by a customer of the cloud computing platform can be scaled on demand.

Auto scaling is one mechanism for scaling computing resources in response to increases or lulls in demand for the resources. Auto scaling allows customers of the cloud computing platform to configure the platform to scale their purchased computing resources according to conditions defined by the customer. For instance rules may be defined for scaling up capacity in a particular manner in response to the occurrence of specified conditions such as a spike in demand. Using these rules instances may be launched in any of the data centers or in other cloud computing platforms if available. Similarly rules might also be defined to scale down capacity in a particular manner in response to the occurrence of other conditions such as a lull in demand. Details regarding one auto scaling mechanism implemented by the cloud computing platform will be provided below with regard to .

As will also be described in greater detail below the auto scaling mechanism disclosed herein is coupled with an awareness of the availability of capacity at the data centers . This allows the auto scaling mechanism to react to the occurrence of a capacity event. As discussed above a capacity event is an event that permanently or temporarily reduces the capacity of the data centers for providing the computing resources. For instance the failure of all or a portion of a data center is a capacity event. Other types of capacity events might also occur that reduce or eliminate the available capacity of one or more of the data centers either permanently or temporarily.

When a capacity event occurs at one of the data centers requests for computing resources are typically re routed to other data centers . For instance if the data center A experiences a capacity event incoming requests will be redirected to the remaining data centers B N. Consequently demand for the computing resources received at the data centers B N will likely increase following the occurrence of a capacity event at the data center A.

As will be described in greater detail below the auto scaling mechanism disclosed herein is capable of responding to the occurrence of a capacity event at one or more of the data centers . For instance the auto scaling mechanism described herein may be configured to allow utilization of the computing resources to increase during a capacity event. In the example described above the utilization of computing resources at the data centers B N may be permitted to increase during a capacity event to allow these computing resources to respond to the increased demand caused by the failure of the data center A. Additional details regarding this process will be provided below with regard to .

It should be appreciated that while the embodiments disclosed herein are discussed primarily in the context of the data centers the embodiments disclosed herein might also be utilized with other types of availability zones. Availability zones are groups of computing resources that are configured to be insulated from failures in other groups of computing resources. For instance each of the data centers might be an availability zone if the data centers are engineered such that a failure in one data center will not cause the failure of any other data center. Similarly racks of server computers may be availability zones if the racks are configured such that a failure of one rack will not cause the failure of another rack. Availability zones might also include other independent groups of computing resources within a data center data centers located within a region regions within a cloud computing platform and cloud computing platforms. It should be appreciated that the embodiments disclosed herein are not limited to use with data centers and may be utilized with any type of availability zone.

It should also be appreciated that while a single cloud computing platform has been illustrated in and described above multiple cloud computing platforms might also be implemented and configured to use the embodiments disclosed herein. In particular the auto scaling mechanism disclosed herein might be configured to scale instances not only among the data centers but also among multiple cloud computing platforms if appropriate.

In one embodiment the instances A N which may be referred herein singularly as an instance or in the plural as the instances are virtual machine instances. As known in the art a virtual machine instance is an instance of a software implementation of a machine i.e. a computer that executes programs like a physical machine. In the example of virtual machine instances each of the servers may be configured to execute an instance manager capable of executing the instances. The instance manager might be a hypervisor or another type of program configured to enable the execution of multiple instances on a single server for example.

It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances other types of instances can be utilized with the concepts and technologies disclosed herein. For instance the technologies disclosed herein might be utilized with instances of storage resources instances of communications resources and with other types of resources.

The instances provided by the server computers may be on demand instances reserved instances spot instances or other types of instances. On demand instances allow customers of the cloud computing platform to pay for capacity per unit of time without requiring a long term commitment. Reserved instances are instances of a computing resource that are reserved for a customer in exchange for a payment. Spot instances allow customers to bid on unused capacity in the cloud computing platform and to run those instances for as long as their bid exceeds a current spot price which may fluctuate based upon supply and demand. The data centers might also be configured to provide other types of instances .

The data center shown in also includes a server computer reserved for executing software components for managing the operation of the data center the server computers and the instances . In particular the server computer might execute a management component . As discussed above a customer of the cloud computing platform might utilize the customer computing system to access the management component to configure various aspects of the operation of cloud computing platform and the instances purchased by the customer. For instance the customer may purchase on demand reserved or spot instances and make changes to the configuration of these instances. The customer might also specify settings regarding how the purchased instances are to be scaled in response to demand. As will be described in greater detail below these settings are utilized by an auto scaling component also executing on the server computer in one embodiment.

The auto scaling component provides the functionality disclosed herein for capacity aware auto scaling. In particular the auto scaling component scales the instances based upon rules defined by a customer of the cloud computing platform . In one embodiment for instance the auto scaling component allows a customer to specify rules that define how computing resources are to be scaled during a capacity event. For instance the rules can be defined to allow utilization of the computing resources to increase during a capacity event. The auto scaling component might also provide functionality for modifying or adjusting auto scaling rules based on the probability that desired capacity in the data centers will be available during a capacity event. Other types of actions might also be taken based upon the computed probability such as purchasing reserved instances. Details regarding these processes will be provided below with regard to .

The auto scaling component may execute on a single server computer or in parallel across multiple server computers in the cloud computing platform . In addition the auto scaling component may consist of a number of subcomponents executing on different server computers or other computing devices in the cloud computing platform . The auto scaling component may be implemented as software hardware or any combination of the two. The auto scaling component may monitor available computing resources in the cloud computing platform over an internal management network for example. Additional details regarding the operation of the auto scaling component will be provided below with regard to .

It should be appreciated that although desirable for an operator of the cloud computing platform it is likely that not all of the customers of the cloud computing platform will utilize the auto scaling component . For instance some customers of the cloud computing platform might utilize a third party tool for scaling the instances . In this regard the management component might provide an appropriate mechanism such as an API for allowing a third party tool to instantiate or terminate the instances . Other customers of the cloud computing platform might manually scale the instances through an appropriate interface provided by the management component .

In the example data center shown in an appropriate LAN is utilized to interconnect the server computers A N and the server computer . The LAN is also connected to the WAN illustrated in . It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate devices might also be utilized for balancing a load between each of the data centers A N and between each of the server computers A N in each data center . These network topologies and devices should be apparent to those skilled in the art.

In one embodiment disclosed herein the auto scaling component utilizes two sets of auto scaling rules standard auto scaling rules and capacity event auto scaling rules . The standard auto scaling rules are auto scaling rules utilized by the auto scaling component during normal operation of the data centers i.e. in the absence of a capacity event . The capacity event auto scaling rules are auto scaling rules utilized by the auto scaling component during a capacity event. Although two sets of auto scaling rules have been illustrated in and described herein it should be appreciated that in other embodiments the auto scaling component utilizes a single set of auto scaling rules that are modified according to customer instructions during a capacity event. Other implementations might also be utilized.

As shown in the standard auto scaling rules include scale up rules A and scale down rules A. The scale up rules A define when new instances should be instantiated. In particular one or more conditions A may be specified indicating the conditions under which new instances should be created and one or more actions A might be specified indicating how the instances should be created. For instance a customer might define conditions A and actions A specifying that three new instances should be created when the average utilization of existing instances reaches 60 . The scale up rules A might also define where new instances should be instantiated. For example the scale up rules A might specify particular availability zones in which new instances should be created.

The scale down rules A define when instances should be terminated during normal operation. For instance one or more conditions B may be specified indicating the conditions under which instances should be terminated and one or more actions B might be specified indicating how the instances should be terminated. As an example a customer might define conditions B and actions B specifying that two instances should be terminated in the event that average utilization of the instances falls below 10 . The scale down rules A might also define where unneeded instances should be terminated. For instance the scale down rules A might specify the particular availability zones in which unneeded instances are to be terminated. As discussed above the scale up rules A and the scale down rules A are utilized by the auto scaling component during normal operation of the data centers .

The capacity event auto scaling rules are auto scaling rules utilized by the auto scaling component during a capacity event and may include scale up rules B and scale down rules B. The scale up rules B define when and how new instances should be instantiated during a capacity event. In particular one or more conditions C may be specified indicating the conditions under which new instances should be created during a capacity event. One or more actions C might also be specified indicating how the instances should be created during the capacity event. For instance a customer might define conditions C and actions C specifying that new instances should not be created during a capacity event until the average utilization of existing instances reaches 90 . The scale down rules A define when instances should be terminated during a capacity event and may include one or more conditions D and actions D indicating when and how instances should be terminated during a capacity event.

It should be appreciated that the capacity event auto scaling rules might also specify where new instances should be created during a capacity event. For instance the capacity event auto scaling rules might specify the particular availability zones in which new instances should be created in the event of a failure of another availability zone. The capacity event auto scaling rules might also specify where instances are to be terminated during a capacity event in a similar manner. In other embodiments the capacity event auto scaling rules also specify how instances created during a capacity event are to be migrated to other availability zones after a capacity event has been resolved.

According to various embodiments a customer of the cloud computing platform might operate a fleet of instances across the data centers A N. In this scenario the management component might provide functionality for allowing the customer to define groups of instances within the fleet. Additionally the management component might also provide functionality for defining different standard auto scaling rules and capacity event auto scaling rules for each group of instances . In this manner the auto scaling component may scale groups of instances differently during a capacity event. Additional details regarding the use of the standard auto scaling rules and capacity event auto scaling rules by the auto scaling component will be provided below with regard to .

Turning now to additional details will be provided regarding one illustrative process disclosed herein for capacity availability aware auto scaling. It should be appreciated that the logical operations described herein with respect to and the other FIGURES are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the figures and described herein. These operations may also be performed in parallel or in a different order than those described herein.

The routine begins at operation where the auto scaling component utilizes the standard auto scaling rules to scale the instances during normal operation of the data centers . As discussed above the auto scaling component will utilize the auto scaling rules to instantiate and terminate instances during normal operation of the data centers .

From operation the routine proceeds to operation where the auto scaling component determines whether a capacity event has occurred. For instance the auto scaling component might receive a notification from the management component or another component operating within one of the data centers indicating that a capacity event has occurred. If the auto scaling component determines that a capacity event has not occurred the routine proceeds back to operation described above. If the auto scaling component determines that a capacity event has occurred the routine proceeds to operation .

At operation the auto scaling component begins utilizing the capacity event auto scaling rules to scale the instances during the capacity event. The routine then proceeds to operation where the auto scaling component determines whether capacity has been restored following the capacity event. For instance the auto scaling component might receive a notification from the management component or another component operating within one of the data centers indicating that data center capacity has been restored to its original level. If the auto scaling component determines that data center capacity has not been restored the routine proceeds back to operation described above. If the auto scaling component determines that capacity has been restored the routine proceeds to back to operation where the auto scaling component once again utilizes the standard auto scaling rules to scale the instances .

In the example shown in the customer has also defined capacity event auto scaling rules specifying that new instances should be instantiated during a capacity event when average utilization of the instances exceeds 80 . Consequently if a capacity event occurs at the data center A as shown in the average utilization of the instances B and C in the data centers B and C will be permitted to rise to 80 . In this manner a lower number of new instances may be created in the data centers B and C than were operating in the data center A at the time of the capacity event.

In the example shown in 100 instances were lost as a result of the capacity event at the data center A. However only 25 new instances were created in each of the data centers B and C 50 instances total in order to absorb the reallocation of demand from the data center A. It should be appreciated that the example shown in is merely illustrative and that the embodiments disclosed herein contemplate other types of capacity events e.g. capacity events occurring at multiple data centers simultaneously and the scaling of instances within the data centers in different ways.

It should be appreciated that the example shown in is for illustration purposes only and that the particular number of instances illustrated therein as being utilized following a capacity event will depend upon the specific application hosted by the instances. In this regard it should be appreciated that application performance typically does not vary linearly with processor utilization. Consequently it may be difficult to predict the number of instances needed to support a particular application at various levels of processor utilization. In practice a customer of the cloud computing platform might monitor application performance at various levels of processor utilization and modify the auto scaling rules described herein in an appropriate manner to ensure that suitable application performance will be maintained during normal operation and during a capacity event.

The concepts and technologies described below with regard to compute a probability that capacity will be available in the data centers for providing computing resources such as the instances during a capacity event. The standard auto scaling rules utilized by the auto scaling component can then be modified based upon the computed probability. For instance if the computed probability indicates a high likelihood that data center capacity for providing computing resources will be available during a capacity event the standard auto scaling rules may be modified to allow the computing resources to operate at a relatively high percentage of maximum capacity.

Other types of actions might also be taken based upon the computed probability. For instance reserved instances may be purchased on behalf of a customer of the cloud computing platform if the computed probability indicates a low likelihood that capacity will be available in the data centers during a capacity event. Additional details regarding these processes will be provided below.

The routine shown in begins at operation where the probability that desired capacity will be available in the cloud computing platform for a customer during a capacity event is computed. The probability might be computed by the management component the auto scaling component or another component operating within the cloud computing platform . As will be discussed in detail below a number of factors might be utilized to compute the probability. One illustrative routine for computing the probability that data center capacity will be available during a capacity event will be described below with regard to .

From operation the routine proceeds to operation where the standard auto scaling rules are modified based upon the probability computed at operation . For instance if there is a high probability that capacity will be available during a capacity event then the standard auto scaling rules may be modified to allow the instances to operate at a higher percentage of their maximum capacity. Alternately if there is a low probability that capacity will be available during a capacity event then the standard auto scaling rules may be modified to require the instances to operate at a lower percentage of their maximum capacity.

It should be appreciated that modification of the standard auto scaling rules might be performed by a component within the cloud computing platform such as the management component or the auto scaling component . Alternately a customer of the cloud computing platform might be presented with the computed probability and permitted to manually adjust the standard auto scaling rules through an appropriate user interface. The capacity event auto scaling rules might also be adjusted based upon the computed probability.

From operation the routine proceeds to operation where other actions might also be taken based upon the computed probability. For instance reserved instances may be purchased on behalf of a cloud services customer if the computed probability indicates a low likelihood that data center capacity will be available during a capacity event. As discussed above reserved instances are instances of a computing resource that are reserved for a customer in exchange for a payment. By reserving instances of computing resources in this manner a cloud services customer can increase the probability or possibly guarantee that data center capacity will be quickly available during a capacity event. Other actions might also be taken based upon the computed probability. From operation the routine proceeds to operation where it ends.

The routine begins at operation where historical data regarding the availability of the instances following a capacity event is retrieved. The historical data regarding the timely availability of data center capacity following a capacity event may be utilized to predict the probability that data center capacity will be available following a future capacity event.

From operation the routine proceeds to operation where the maximum capacity and current available capacity of the data centers is determined. Quantifying the maximum load that can be served by the data centers and the current load served by the data centers can assist in predicting the likelihood that capacity will be available if one or more of the data centers experiences a capacity event.

From operation the routine proceeds to operation where the capacity event auto scaling rules for the customers of the cloud computing platform are retrieved. The capacity event auto scaling rules provide insight into the operation of the data centers if a capacity event occurs. For instance an analysis of the capacity event auto scaling rules specified by the customers of the cloud computing platform might reveal that a significant number of new instances will be created in response to a capacity event that a significant number of instances will operate at a higher utilization during a capacity event and other information relevant to computing the probability of data center availability during a capacity event.

From operation the routine proceeds to operation where data is generated and or retrieved describing the historical reaction to previous capacity events by customers of the cloud computing platform that utilize a third party auto scaling mechanism or that auto scale their instances manually. This information may provide insight into the behavior of these customers in response to a future capacity event and the additional demand that will be placed upon the data centers if a capacity event occurs.

From operation the routine proceeds to operation where the number of reserved instances purchased by the customers of the cloud computing platform is determined. A high number of reserved instances may indicate a lower probability that capacity will be available to a customer that has not purchased reserved instances. Conversely a low number of reserved instances may indicate a higher probability that data center capacity will be available during a capacity event.

The number of reserved instances purchased by the customer for which the probability determination is being made might also be identified. If the customer has purchased reserved instances for their entire fleet the probability that data center capacity will be available for this customer may be at or near 100 . If the customer has purchased no reserved instances or has only purchased reserved instances for a small portion of their fleet the probability that data center capacity will be available may be significantly lower than 100 depending upon other factors.

From operation the routine proceeds to operation where the probability that desired data center capacity will be available for a customer following a capacity event is computed. As discussed above some or all of the factors described above with regard to operations may be utilized. Other factors not described herein might also be utilized. Additionally the factors might also be weighted variously to emphasize or de emphasize the relevance of the various factors. Once the probability has been computed the routine proceeds to operation where it returns to operation of the routine described above.

It should be appreciated that the probability discussed above might also be computed with regard to particular availability zones or groups of availability zones. For instance the probability that capacity will be available in a particular availability zone following the failure of another availability zone might be computed. Similarly the probability that capacity will be available from a group of availability zones following the failure of one or more other availability zones might also be calculated. The calculated percentages might be utilized in the manner described above.

It should also be appreciated that in other embodiments a probability is computed that server computers hosting instances in different availability zones will fail concurrently. This calculation takes into account the reality that in practice server computers in two different availability zones might fail concurrently. Additionally the probability that individual server computers within the same availability zone might also be computed. For instance the probability may be computed that server computers within two different racks within the same data center may be calculated. Action may be taken based upon the results of these calculations such as placing instances in server computers in the same or different availability zones that have the smallest chance of concurrent failure.

In the absence of any other information regarding the data centers A C an assumption may be made that the total load served by the data centers A C will remain constant following a capacity event. In this example such an assumption implies that 1000 new instances will be instantiated at the data centers B and C 500 new instances each in response to a large scale capacity event at the data center A for instance as shown in . These new instances might be instantiated by the auto scaling component a third party auto scaling component or manually.

If each of the data centers B and C has a maximum capacity of 1300 instances then certain customers i.e. those that have not purchased reserved instances may be unable to obtain desired capacity during a capacity event. However utilizing the mechanism described above with respect to it may be calculated that the actual number of instances that will be instantiated at the data centers B and C will be 500 instead of 1000 as shown in . For instance using the factors described above it may be determined that a significant number of instances utilize the capacity event auto scaling rules described above to increase average utilization during a capacity event. This in turn will reduce the number of new instances launched at the data centers B and C. Consequently the data centers B and C will be able to handle the redirected load in the event of a capacity event at the data center A. As discussed above the results of such a probability analysis may be utilized to modify the capacity event auto scaling rules or the standard auto scaling rules for a customer. Other actions might also be taken such as purchasing reserved instances on behalf of the customer.

It should be appreciated that in another scenario a customer might specify auto scaling rules that increase the number of instances utilized following a capacity event. For example if a customer needs 2000 instances to support their application they might configure three data centers to host 1000 instances each in the manner shown in . This configuration allows one data center to fail completely while still guaranteeing acceptable application performance. To account for the possible failure of a second data center however the customer might specify auto scaling rules that cause an additional 1000 instances to be launched in each of the surviving data centers. In this manner each of the two surviving data centers will host 2000 instances. If one of the two surviving data centers fails then a single data center hosting 2000 instances will be present and the application can continue executing in a performant manner.

The computer includes a baseboard or motherboard which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment one or more central processing units CPUs operate in conjunction with a chipset . The CPUs are standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .

The CPUs perform the necessary operations by transitioning from one discrete physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states such as flip flops and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements such as logic gates. These basic switching elements may be combined to create more complex logic circuits including registers adders subtractors arithmetic logic units floating point units and the like.

The chipset provides an interface between the CPUs and the remainder of the components and devices on the baseboard. The chipset may provide an interface to a random access memory RAM used as the main memory in the computer . The chipset may further provide an interface to a computer readable storage medium such as a read only memory ROM or non volatile RAM NVRAM for storing basic routines that that help to startup the computer and to transfer information between the various components and devices. The ROM or NVRAM may also store other software components necessary for the operation of the computer in accordance with the embodiments described herein.

The computer may operate in a networked environment using logical connections to remote computing devices and computer systems through the network . The chipset may include functionality for providing network connectivity through a network interface controller NIC such as a gigabit Ethernet adapter. The NIC is capable of connecting the computer to other computing devices over the network . It should be appreciated that multiple NICs may be present in the computer connecting the computer to other types of networks and remote computer systems.

The computer may be connected to a mass storage device that provides non volatile storage for the computer. The mass storage device may store system programs application programs other program modules and data which have been described in greater detail herein. The mass storage device may be connected to the computer through a storage controller connected to the chipset . The mass storage device may consist of one or more physical storage units. The storage controller may interface with the physical storage units through a serial attached SCSI SAS interface a serial advanced technology attachment SATA interface a fiber channel FC interface or other type of interface for physically connecting and transferring data between computers and physical storage units.

The computer may store data on the mass storage device by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the physical storage units whether the mass storage device is characterized as primary or secondary storage and the like.

For example the computer may store information to the mass storage device by issuing instructions through the storage controller to alter the magnetic characteristics of a particular location within a magnetic disk drive unit the reflective or refractive characteristics of a particular location in an optical storage unit or the electrical characteristics of a particular capacitor transistor or other discrete component in a solid state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this description. The computer may further read information from the mass storage device by detecting the physical states or characteristics of one or more particular locations within the physical storage units.

In addition to the mass storage device described above the computer may have access to other computer readable storage medium to store and retrieve information such as program modules data structures or other data. It should be appreciated by those skilled in the art that computer readable storage media can be any available media that provides for the storage of non transitory data and that may be accessed by the computer .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology. Computer readable storage media includes but is not limited to RAM ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory or other solid state memory technology compact disc ROM CD ROM digital versatile disk DVD high definition DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information in a non transitory fashion.

The mass storage device may store an operating system utilized to control the operation of the computer . According to one embodiment the operating system comprises the LINUX operating system. According to another embodiment the operating system comprises the WINDOWS SERVER operating system from MICROSOFT Corporation. According to further embodiments the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device may store other system or application programs and data utilized by the computer such as the instances A N the instance manager and the management component each of which was described above.

In one embodiment the mass storage device or other computer readable storage media is encoded with computer executable instructions which when loaded into the computer transforms the computer from a general purpose computing system into a special purpose computer capable of implementing the embodiments described herein. These computer executable instructions transform the computer by specifying how the CPUs transition between states as described above. According to one embodiment the computer has access to computer readable storage media storing computer executable instructions which when executed by the computer perform the routines and described with regard to respectively.

The computer may also include an input output controller for receiving and processing input from a number of input devices such as a keyboard a mouse a touchpad a touch screen an electronic stylus or other type of input device. Similarly the input output controller may provide output to a display such as a computer monitor a flat panel display a digital projector a printer a plotter or other type of output device. It will be appreciated that the computer may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different than that shown in .

Based on the foregoing it should be appreciated that technologies for adjusting auto scaling behavior during a capacity event have been presented herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

