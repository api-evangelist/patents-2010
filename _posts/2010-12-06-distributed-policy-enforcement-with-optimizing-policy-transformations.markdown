---

title: Distributed policy enforcement with optimizing policy transformations
abstract: User-specified policies may be efficiently implemented and enforced with a distributed set of policy enforcement components. User-specified policies may be transformed into a normal form. Sets of normal form policies may be optimized. The optimized policies may be indexed and/or divided and provided to the distributed set of policy enforcement components. The distributed policy enforcement may have a sandbox mode and/or verification mode enabling policy configuration verification. With appropriate authorization, substitute data may be used in verification mode to evaluate requests with respect to policies. Evaluation results, relevant policies, and decision data utilized during request evaluation may be collected, filtered and reported at a variety of levels of detail. Originating user-specified policies may be tracked during the policy normalization process to enable reference to user-specified policies in verification mode reports.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09237155&OS=09237155&RS=09237155
owner: Amazon Technologies, Inc.
number: 09237155
owner_city: Seattle
owner_country: US
publication_date: 20101206
---
Modern computing networks provide access to a wide variety of computing resources such as data archives search engines data processing data management communications electronic marketplaces as well as media and entertainment services. As the number and size of such computing resources and their user communities have grown and become more sophisticated a need has arisen to establish increasingly sophisticated usage policies. For example such policies may include policies that address security privacy access regulatory and cost concerns. However conventional approaches to policy enforcement have drawbacks.

For example conventional approaches to policy enforcement can be ad hoc limited to a particular type of computing resource and or limited to a particular set of policy controls. In heterogeneous computing environments incorporating even a modest number of computing resource types an ad hoc approach can be a significant administrative burden. In addition some conventional approaches scale poorly as the number of computing resources grows large. Small administrative and or performance inefficiencies can become problematic at larger scales. Some conventional approaches lack a centralized policy management service which can hamper consistent policy management in distributed computing environments. Some conventional approaches are limited to centralized policy management which can be insufficiently flexible in response to changing requirements.

Policy set complexity can also be a problem for some conventional approaches to policy enforcement. For example policy administrators may have difficulty implementing a desired policy in practice even when it is possible in theory. Policies may be inconsistently enforced by different computing resource types. The specification of a particular policy may have unanticipated and or unintended consequences. Furthermore it is becoming increasingly common to provision such computing resources with virtual computing resource providers. In such cases computing resource administrators may not have control over or direct access to computing hardware or other infrastructure that implements the provisioned computing resources. In some conventional approaches to policy enforcement such environments can hinder acquisition of sufficient diagnostic information to efficiently resolve policy enforcement problems.

Same numbers are used throughout the disclosure and figures to reference like components and features but such repetition of number is for purposes of simplicity of explanation and understanding and should not be viewed as a limitation on the various embodiments.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Policies may be specified with a convenient policy specification language and or user interface. However such user specified policies may be inefficient for the purposes of policy enforcement particularly as the set of user specified policies grows large. In at least one embodiment user specified policies may be transformed and or processed into a normal policy form normal form . The normal form may include a defined set of policy elements each with a defined set of possible values. For example the set of policy elements may include an actions element corresponding to a set of actions governed by the policy a principals element corresponding to a set of principals or actors with respect to the set of actions a resources element corresponding to a set of resources or subjects of the action and or a conditions element corresponding to a set of conditions to be satisfied before the policy is enforced.

The set of normal form policies may be efficiently optimized for example optimized for efficient indexing and or optimized with respect to set size. Normal form policies may be split and or joined with respect to policy elements and duplicates efficiently removed. Normal form policies may be efficiently indexed with respect to policy element values and or particular subsets of policy element values. For example when the set of normal form policies are to be enforced with respect to a variety of computing resources the set may be indexed by computing resource computing resource type computing resource server and suitable combinations thereof. Subsets of the set of normal form policies may be distributed to multiple policy enforcement components based on the indexing and or based on a relevance of particular policy subsets to particular policy enforcement components.

A virtual resource provider capable of provisioning a variety of virtual computing resources may include a centralized policy management service that maintains the set of normalized policies and distributes appropriate subsets to multiple policy enforcement components distributed throughout the virtual resource provider. Alternatively or in addition normal form policies may be maintained local to particular policy enforcement components and or associated virtual computing resource implementation services. As a further alternative policies may be provided along with action requests. In each case a policy may be compatible with the normal form and be associated with and or accompanied by cryptographic credentials that authenticate and or authorize the policy and or an associated user. For example the user may be authorized to set policies with respect to a particular set of computing resources. Such policies themselves are an example of a computing resource that may be subject to policy control.

Requests with respect to resources may be submitted to one or more policy enforcement components. For example a request may be submitted to one or more policy enforcement components locally maintaining one or more policies that are relevant to the request. A distributed policy enforcement system with multiple policy enforcement components may have a sandbox mode and or verification mode for processing requests. An authorized user may activate the verification mode with an indicator incorporated into an service interface with an explicit verification mode service interface and or with a cryptographic verification mode token the acquisition of which is subject to policy control. During the verification mode requests may be evaluated with respect to policies as usual while requested actions are inhibited.

Such evaluations may depend on a set of decision data including user identity a user s group memberships protocol level details such as network source address of the request and protocol utilized to transmit the request geographic regions associated with the request such as source geographic location of the request regulatory classifications associated with the request date and time. Authorized users may substitute pieces of decision data with specified values for example to enable an administrator to verify that a particular set of policies will govern the actions of a particular user or group of users as intended and or to diagnose problems. In verification mode evaluation results relevant policies and decision data utilized during request evaluation may be collected filtered and reported at a variety of levels of detail. The reported set of relevant policies may include normal form policies utilized to evaluate a request and or a corresponding set of user specified policies. Originating user specified policies may be tracked during the policy normalization process to enable reporting of user specified policies in verification mode. The reported set of decision data may include decision data not otherwise accessible to the report recipient.

Various approaches may be implemented in various environments for various applications. For example illustrates aspects of an example environment for implementing aspects in accordance with various embodiments. As will be appreciated although a Web based environment may be utilized for purposes of explanation different environments may be utilized as appropriate to implement various embodiments. The environment shown includes both a testing or a development portion or side and a production portion. The production portion includes an electronic client device which may include any appropriate device operable to send and receive requests messages or information over an appropriate network and convey information back to a user of the device . Examples of such client devices include personal computers cell phones smartphones handheld messaging devices laptop computers tablet computers set top boxes personal data assistants electronic book readers and the like.

The network may include any appropriate network including an intranet the Internet a cellular network a local area network a wide area network a wireless data network or any other such network or combination thereof. Components utilized for such a system may depend at least in part upon the type of network and or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network may be enabled by wired or wireless connections and combinations thereof. In this example the network includes the Internet as the environment includes a Web server for receiving requests and serving content in response thereto although for other networks an alternative device serving a similar purpose could be utilized as would be apparent to one of ordinary skill in the art.

The illustrative environment includes at least one application server and a data store . It should be understood that there may be several application servers layers or other elements processes or components which may be chained or otherwise configured which may interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and or retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment.

The application server may include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device and may even handle a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example.

The handling of all requests and responses as well as the delivery of content between the client device and the application server may be handled by the Web server . It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein may be executed on any appropriate device or host machine as discussed elsewhere herein. Further the environment may be architected in such a way that a test automation framework may be provided as a service to which a user or application may subscribe. A test automation framework may be provided as an implementation of any of the various testing patterns discussed herein although various other implementations may be utilized as well as discussed or suggested herein.

The environment may also include a development and or testing side which includes a user device allowing a user such as a developer data administrator or tester to access the system. The user device may be any appropriate device or machine such as is described above with respect to the client device . The environment may also include a development server which functions similar to the application server but typically runs code during development and testing before the code is deployed and executed on the production side and becomes accessible to outside users for example. In some embodiments an application server may function as a development server and separate production and testing storage may not be utilized.

The data store may include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which may be utilized to serve content for the production side. The data store also is shown to include a mechanism for storing testing data which may be utilized with the user information for the testing side. It should be understood that there may be many other aspects that are stored in the data store such as for page image information and access right information which may be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store .

The data store is operable through logic associated therewith to receive instructions from the application server or development server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and may access the catalog detail information to obtain information about items of that type. The information then may be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest may be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

In at least one embodiment one or more aspects of the environment may incorporate and or be incorporated into a virtual computing resources architecture. depicts aspects of an example virtual computing resources architecture in accordance with at least one embodiment. The example virtual computing resources architecture includes a virtual resource provider enabling various clients to interact with provisioned computing resources over a network . The provisioned computing resources may include multiple types of virtual resource such as virtual computing systems and clusters virtual file system volumes virtual private networks data object stores notification services and suitable combinations thereof. The ellipsis between the types of virtual resource and indicates that the virtual resource provider may maintain any suitable number of such computing resource types and or instances. Ellipses are used similarly throughout the drawings.

The virtual resource provider may be implemented at least in part with server computers such as the Web server and the application server described above with reference to and one or more data stores such as the data store of interconnected by a relatively high speed data network not shown in . The server computers and or data store s implementing the virtual resource provider may include different types and or configurations of server computers and or data stores allocated to different virtual resource types and to a control plane of the virtual resource provider . The control plane may include multiple user interfaces that enable the clients to interact with the virtual resource provider including provisioning and interacting with the virtual resources as well as setting policies with respect to the virtual resources . depicts further aspects of a control plane in accordance with at least one embodiment.

The user interfaces of the control plane may include any suitable type of user interface. For example the user interface may include graphical user interfaces GUIs Web based interfaces programmatic interfaces such as application programming interfaces APIs and or sets of remote procedure calls RPCs corresponding to interface elements messaging interfaces in which the interface elements correspond to messages of a communication protocol and or suitable combinations thereof. The user interfaces may include multiple resource interfaces enabling user interaction with the virtual resources . For example there may be one of the resource interfaces for each of the types of virtual resource . As another example one or more of the resource interfaces may enable interaction with multiple virtual resource types . Alternatively or in addition one or more of the types of virtual resource may incorporate interfaces enabling direct interaction e.g. by the clients without mediation by one of the user interfaces .

The user interfaces may further include a provisioning interface enabling authorized users to provision configure re configure and or de provision collectively provision the virtual resources . Although the example control plane includes one such provisioning interface embodiments may include any suitable number of such provisioning interfaces including a provisioning interface for each type of virtual resource . Alternatively or in addition the resource interface corresponding to a particular type of virtual resource may incorporate the provisioning interface for that virtual resource type . The user interfaces of the control plane may still further include a policy management interface enabling establishment viewing editing and or deletion collectively maintenance of virtual resource provider policies including policies with respect to the virtual resources and with respect to policy management. Again although the example control plane includes one such policy management interface embodiments may include any suitable number of policy management interfaces including a policy management interface for each type of virtual resource . The resource interface corresponding to a particular type of virtual resource may incorporate the policy management interface for that virtual resource type .

The control plane may include a policy management component configured at least to provide centralized policy management for the virtual resource provider . The policy management component may receive user specified policies for example specified with the policy management interface and transform user specified policies into a normal form. The policy management component may then optimize the set of normal form policies for example for indexing and or with respect to set size and index the set of normal form policies based at least in part on one or more policy elements of the normal form. The policy management component may then distribute the optimized normal form policies to a set of policy enforcement components in a manner based at least in part on the index.

The control plane may further include a verification mode component configured at least to facilitate verification mode reporting. The verification mode component may collect request evaluation results normal form policies and or decision data map normal form policies to user specified policies and generate reports at specified levels of detail. For example verification mode report detail levels may include a low detail level corresponding to an evaluation result and basic contextual information a medium detail level that adds a set of policies considered to determine the evaluation result a high detail level that further adds a set of decision data considered to determine the evaluation result and a very high detail level that further adds virtual resource provider operational information that may assist anomalous behavior diagnosis e.g. debugging . For example such operational information may include an identification of the set of policy enforcement components involved in evaluating a request associated with the report. In at least one embodiment verification mode may be a mechanism by which authorized users are permitted access to such virtual resource provider operation information. Verification mode may correspond to a sandbox mode in the software development and or testing sense enabling configuration verification and or testing without possible high cost consequences e.g. in terms of financial and or resource costs .

The verification mode component may be further configured to process requests for verification mode tokens e.g. cryptographic tokens and to authenticate such tokens. For example a verification mode token may be submitted with a request in order to indicate that the request is to be processed in verification mode. Alternatively or in addition verification mode tokens may authorize substitution of decision data or at least a portion of the decision data utilized when evaluating a request with respect to a set of policies. For example the verification mode token may authorize substitution of decision data related to user identity thus enabling an administrator to verify that a particular policy set has an intended effect with respect to a particular user.

The control plane may include a workflow management component configured at least to establish and maintain workflows such as resource workflows provisioning workflows and or policy management workflows established responsive to user interaction with the resource interfaces the provisioning interface and or the policy management interface respectively. Workflows may include one or more sequences of tasks to be executed to perform a job such as virtual resource configuration provisioning or policy management. A workflow as the term is used herein is not the tasks themselves but a task control structure that may control flow of information to and from tasks as well as the order of execution of the tasks it controls. For example a workflow may be considered a state machine that can manage and return the state of a process at any time during execution. Workflows may be created from workflow templates. For example a policy management workflow may be created from a policy management workflow template configured with parameters by the policy management component .

The workflow management component may modify further specify and or further configure established workflows. For example the workflow management component may select particular implementation resources of the virtual resource provider to execute and or be assigned to particular tasks. Such selection may be based at least in part on the computing resource needs of the particular task as assessed by the workflow management component . As another example the workflow management component may add additional and or duplicate tasks to an established workflow and or reconfigure information flow between tasks in the established workflow. Such modification of established workflows may be based at least in part on an execution efficiency analysis by the workflow management component . For example some tasks may be efficiently performed in parallel while other tasks depend on the successful completion of previous tasks.

The normal form of a policy may include a defined set of policy elements. depicts aspects of an example normal form policy in accordance with at least one embodiment. The policy includes a policy identifier uniquely identifying the policy one or more effects of the policy reference to one or more principals or actors governed by the policy a specification of one or more actions governed by the policy reference to one or more resources governed by the policy a specification of one or more conditions to be satisfied before the policy is enforced and a set of element modifiers corresponding to the policy elements respectively. The policy may have an alphanumeric and or Unicode representation and or encoding sometimes called the policy document.

The policy identifier may be any suitable identifier uniquely identifying the policy . For example the policy identifier may correspond to an alphanumeric and or Unicode collectively alphanumeric string or integer number. The policy identifier may be utilized to reference the policy . Examples of policy effects include permit and deny. The effect s element of the policy may specify such policy effects. For example a particular policy may permit one or more principals to take one or more actions with respect to one or more resources while another policy may deny a set of actions to a set of principals .

The principal s element of the policy may specify one or more entities known to the virtual resource provider that are capable of making requests of the virtual resource provider . Such entities may include users having a user account with the virtual resource provider customers having a commercial account e.g. a cost tracking account with the virtual resource provider and groups of users and or customers including role based groups such as administrators. Such entities may be specified with any suitable identifier including user identifiers customer account numbers group identifiers and alphanumeric strings.

The action s element of the policy may specify one or more actions capable of being performed by the virtual resource provider . Such actions may include actions capable of being performed by the virtual resources of the virtual resource provider and or actions that may be requested with the user interfaces of the virtual resource provider including policy management actions. In at least one embodiment actions specified by the action s element correspond to elements of the user interfaces . Such actions may be specified with any suitable action identifier including interface element identifiers and alphanumeric strings.

The resource s element of the policy may specify one or more resources of the virtual resource provider for which one or more of the action s is valid. Such resources may include virtual resources implementation resources policies and verification mode tokens. Such resources may be specified with any suitable resource identifier including resource identifiers in accordance with a uniform resource identifier URI standard such as Berners Lee et al. Uniform Resource Identifier URI Generic Syntax Request for Comments RFC 3986 Network Working Group January 2005.

The condition s element of the policy may specify a set of conditions to be satisfied before the policy is enforced. For example the condition s may specify the conditions under which the principal s are permitted to perform the action s with respect to the resource s . Such conditions may be specified with any suitable condition specification language including suitable programming languages and may include compound conditions for example specified with Boolean operators. Condition parameters may include any suitable data available to the virtual resource provider . Condition parameter examples include environmental data such as calendar date and time of day and request associated data such as originating network address originating geographical location originating political and or administrative division and communication protocol employed.

By default the policy effect s may be enforced when the specified principal s request the specified action s with respect to the specified resource s and the specified set of condition s are satisfied. However the element modifiers may indicate that the corresponding policy elements specify exceptions. That is that the policy effect s be enforced unless the specified principal s are the actors unless the specified action s are requested unless the specified resource s are the subject of action and or unless the specified set of conditions is satisfied. In addition policy element specifications may include wildcard values. For example a wildcard value may match all and or any valid values of the policy element . Alternatively or in addition wildcard values may be matched contextually. For example a wildcard value may match all and or any values of the policy element that are valid with respect to a particular user customer group and or other context of a particular request.

As described above with reference to the policy management component may transform user specified policies into normal form policies and optimize sets of normal form policies. The optimized set of normal form policies may differ significantly from the supplied set of user specified policies. A single user specified policy can result in the addition of multiple normal form policies. A single normal form policy can participate in enforcing multiple user specified policies. In at least one embodiment each normal form policy maintains a set of references to parent policies which the normal form policy participates in enforcing. For example the set of parent policies may be updated during user specified policy transformation and normal form policy set optimization operations.

The virtual resource provider may be implemented as a collection of networked services. depicts aspects of an example virtual resource provider implemented in accordance with at least one embodiment. The virtual resource provider includes multiple virtual resource services a policy management service an authentication service a set of decision data providers and a verification mode service each interconnected by a network . The arrow indicates that the network is connected to the network of .

Each virtual resource service may maintain a set of provisioned resources and incorporate a resource interface . For example each virtual resource service may maintain one type of virtual resource as described above with reference to and incorporate a corresponding one of the resource interfaces described above with reference to . The policy management service may incorporate a policy management interface corresponding to the policy management interface of .

The policy management service may act as a centralized policy management service for the virtual resource provider managing transforming optimizing and distributing one or more sets of policies to other services of the virtual resource provider . In addition in at least one embodiment services of the virtual resource provider other than the policy management service may maintain policies. For example the virtual resource services may each maintain a set of policies that are relevant to the respective set of provisioned resources . Such policies may be established viewed edited and deleted with policy management interface functionality integrated into the associated resource interface . Such policies may be compatible with the policies maintained by the policy management service . For example the policies may each have a form corresponding to the normal form policy . Further in addition in at least one embodiment policies may be maintained at a location external to the virtual resource provider and supplied for enforcement as part of interactions with the services of the virtual resource provider . For example request incorporates such a policy .

The authentication service may provide authentication services for the virtual resource provider . For example the authentication service may authenticate an integrity and or an authenticity of policies . In addition the authentication service may authenticate an identity of clients customers and or users of the virtual resource provider . For example the policy management interface and or the resource interfaces may utilize the authentication service to establish and or verify an identify and or authority of a user with respect to policies and or provisioned resources . The authentication service may utilize any suitable authentication mechanism including any suitable cryptographic authentication mechanism to provide the authentication services. Such authentication mechanisms are well known in the art and need not be detailed here.

The decision data providers may provide data required by policy enforcement components to evaluate requests that are subject to policies. For example the provisioned resources may be associated with various labeling and or naming schemes resource names and the decision data providers may include a name resolution provider that maps or resolves such resource names to locations e.g. network locations within the virtual resource provider . The decision data providers may further include providers of data required to determine whether the condition s of the policy are satisfied. For example a particular policy may deny interaction with a particular resource from a specified set of geographic locations and or regions collectively geographic locations . In such a case the decision data providers may include a geographic resolution provider capable of identifying a set of geographic locations associated with the request .

The verification mode service may provide verification mode functionality e.g. as described above with reference to the verification mode component of as a service to the other services of the virtual resource provider . For example the resource interfaces and or the policy management interface may query the verification mode service to authenticate a verification mode token and or may provide evaluation results for reporting in response to a request. An example verification mode service is described below in more detail with reference to . However the description first turns to further aspects of the policy management service in accordance with at least one embodiment.

The policy management service of is an example of the policy management service of and includes a policy management interface corresponding to the policy management interface of . Users of the virtual resource provider may interact with the policy management interface to specify view edit and or delete policies in a user specified policy set maintained by the policy management service . The policy management service may further maintain a normalized policy set corresponding to the user specified set . The normalized policy set may be maintained by a policy normalization component . The policy management service may participate in policy enforcement for example the policy management service may include a policy enforcement component corresponding to one of the policy enforcement components of . In particular the policy enforcement component may enforce policies referencing actions that may be requested with the policy management interface . Furthermore in at least one embodiment at least a portion of the normalized policy set or a copy thereof is distributed to policy enforcement components located throughout the virtual resource provider . The policy management service may include a policy distribution component configured at least to distribute the normalized policy set throughout the virtual resource provider for example based at least in part on a policy index .

Policies in the user specified policy set may be specified with alphanumeric strings. A first example of such a policy is 

The policy normalization component may generate sets of normalized policies corresponding to user specified policies and store the normalized policies in the normalized policy set . For example each policy in the normalized policy set may have a form corresponding to the normal form policy of . The policy normalization component may generate multiple normal form policies corresponding to a user specified policy for example due to decompounding with respect to policy elements . The fourth user specified policy example described above may be decompounded to generate two normal form policies both with the effect element specifying a permit effect the principal element specifying the user with identifier msmith and the action element specifying the configure action. For example the resource element of one of the normal form policies may specify all virtual computer systems associated with the customer identifier example corp the resource element of the other of the normal form policies may specify all block data volumes associated with the customer identifier example corp . In this example the user specified policy has been decompounded with respect to the resource element. As another example the policy normalization component may be configured to decompound the first user specified policy example described above with respect to the action element and or the resource element.

Wildcards may be first expanded into a set of values for example based on a context of the user specified policy before being decompounded. The decompounding need not be complete with respect to policy element values. For example the policy normalization component may be configured to protect particular subsets of policy element values policy element atoms or indivisibles from decompounding. As one example the set of actions corresponding to create read write delete may be protected from decompounding.

The policy normalization component may reduce a size of the normalized policy set for example by reducing redundancy in the normalized policy set . The policy normalization component may detect that a newly added normal form policy is contained within the scope of one or more of the normalized policy set and delete the newly added normal form policy from the normalized policy set . Normal form policies such as the normal form policy of may correspond to sets of points in one or more policy spaces for example spaces having dimensions corresponding to the policy elements of the normal form and or Boolean valued functions over the policy spaces. Each effect element value may correspond to such a policy space. For example there may be a permit space and a deny space. The policy enforcement components may be configured to require an explicit permit in the absence of a deny in order to permit a particular action that is to require a point in a permit space without a corresponding point in the deny space. Wildcards may correspond to regions of such policy spaces. Element modifiers may be used to define complimentary sets of the policy spaces. The policy normalization component may detect whether the normal form policy is within in the scope of a set of normal form policies e.g. the normalized policy set by determining whether the set of points corresponding to the normal form policy is contained within the set of points corresponding to the set of normal form policies.

The policy normalization component may further reduce the size of the normalized policy set by compounding and or recompounding normal form policies in the normalized policy set with respect to policy elements . Some policy element values may correspond to multiple other policy element values so that a single normal form policy may correspond to a same policy space region as multiple other normal form policies. For example a principal element value corresponding to a group may be equivalent to multiple principal element values corresponding to individual users. The policy normalization component may be configured to detect compoundable subsets of the normalized policy set and to compound the detected subsets along policy element dimensions to configured granularities which need not be the coarsest available granularity . Throughout generation and or transformation of the normalized policy set the policy normalization component may be configured to maintain the set of parent policies of each normal form policy . For example the set of parent policies may include the identifier of each user specified policy that the normal form policy participates in enforcing.

Different regions of the policy space s may be enforced by different policy enforcement components . Different policy enforcement components may enforce overlapping and even same regions of the policy space s . However in at least one embodiment different policy enforcement components enforce disjoint regions of the policy space s . The policy distribution component may determine regions of the policy space s and corresponding subsets of the normalized policy set to assign and or distribute to the policy enforcement components . To facilitate such distribution the policy distribution component may establish and maintain the policy index . The policy index may index the normalized policy set with respect to policy element values and or subsets thereof. For example the policy index may index the normalized policy set with respect to resource and or resource type. Policies in the normalized policy set may be multiply indexed for example with respect to multiple different policy element values and or value subsets. The policy distribution component may distribute the normalized policy set to the policy enforcement components based at least in part on the policy index . For example sets of indices of the policy index may define policy enforcement domains corresponding to subsets of the normalized policy set and the policy distribution component may distribute such subsets to the policy enforcement components as units. In at least one embodiment each normal form policy incorporates its indexing information and or the policy index is incorporated into the normalized policy set .

The distributed nature of policy enforcement in the virtual resource provider can complicate efforts to verify that a particular set of user specified polices has its intended consequences. depicts aspects of an example verification mode service in accordance with at least one embodiment that can facilitate such verification. The verification mode service may include a token management component accessible through a token interface . The token management component may issue verification mode tokens in response to authorized requests record the issued tokens in an issued token database and authenticate the issued tokens upon request. Following processing of the request in verification mode a reporting component of the verification mode service may prepare a verification mode report at a specified level of detail. Requests for such reports as well as level of detail specification may be made with a reporting interface of the verification mode service . Such report requests may not include all the data required by the reporting component . The verification mode service may further include a data collection component configured to interact with other services of the virtual resource provider to obtain the required data.

Policies with respect to actions that may be requested with the token interface and or the reporting interface may be enforced by a policy enforcement component corresponding to one of the policy enforcement components of . For example such policies may define a set of users of the virtual resource provider authorized to be issued verification mode tokens and may require an authentic verification mode token before providing the verification mode report. The token management component may issue multiple types of tokens for example tokens authorizing verification mode reporting may be a separate type from tokens authorizing substitution of decision data during verification mode processing of the request . Tokens authorizing substitution of different subsets and or types of decision data may also be separate types. Verification mode policies may distinguish between different types of tokens. Generation issuance authentication and revocation of cryptographic tokens are well known in the art and need not be described here in detail.

Requests at the reporting interface may specify a type of report and or level of reporting detail. For example the workflow management component may generate the request in response to detecting a verification mode request at one of the resource interfaces . The reporting component may generate the requested report based on a corresponding report template utilizing the data collection component to collect data as necessary. Fields that may be included in the verification mode report include one or more results of evaluation of the verification mode request by one or more of the policy enforcement components a subset of the normalized policy set and or the user specified policy set relevant to the verification mode request and or utilized during the evaluation by the one or more policy enforcement components decision data utilized during the evaluation virtual resource provider contextual operating data capable of influencing the evaluation and or versions thereof filtered and or summarized to the specified level of detail. The reporting component may be configured to map a set of normal form policies to a corresponding set of user specified policies based at least in part on the set of parent policies referenced by each normal form policy .

Each virtual resource service may be implemented with a collection of physical server computers and or network elements. depicts aspects of an example virtual resource service in accordance with at least one embodiment. The virtual resource service depicted in is an example of the virtual resource service of . The example virtual resource service includes multiple virtual resource servers and one or more interface servers interconnected by a network . The provisioned resources and policies of may be distributed across the virtual resource servers of utilizing any suitable data distribution technique. For example each virtual resource server may maintain a subset of the provisioned resources and a corresponding subset of the policies . Such subsets may deliberately overlap for various purposes including data durability and service capability.

The interface server s may collectively maintain a resource interface and a policy enforcement component . The resource interface may correspond to one of the resource interfaces of . Similarly the policy enforcement component may correspond to one of the policy enforcement components of . The policy enforcement component of may enforce policies referencing actions that may be requested with the resource interface of . Such policies may include policies distributed by the policy management service policies stored on the virtual resource servers and policies accompanying requests to the resource interface such as the policy of . For example the resource interface may require a permit evaluation by the policy enforcement component before further processing a request.

Clients may utilize the configure resource interface element to request a configuration and or reconfiguration of one or more of the provisioned resources . For example if the provisioned resources include data object stores the configure resource interface element may enable clients to set a maximum size of a data object store over which they have authority. Clients may utilize the read resource attribute s interface element to request a read or view of one or more attributes of one or more of the provisioned resources . For example the read resource attribute s interface element may enable clients to obtain copies of specified data objects from specified data object stores. Clients may utilize the update resource attribute s interface element to request an update of one or more attributes of one or more of the provisioned resources . For example the update resource attribute s interface element may enable clients to update specified data objects and or create specified data objects in specified data object stores.

Some provisioned resources may have functionality that can be activated and the activate resource functionality interface element may be utilized to request an activation of that functionality. For example some types of data object store may have a capability to analyze stored data objects and the activate resource functionality interface element may enable authorized clients to start stop suspend and or perform the analysis. The delete resource attribute s interface element may enable clients to request a deletion and or re initialization of one or more attributes of one or more of the provisioned resources . For example clients with sufficient authorization may delete specified data objects from specified data object stores.

In the example resource interface utilization of the verification mode versions of the interface elements indicates that the corresponding request is to be processed in the verification mode is a verification mode request . For example the resource interface may submit the request to the policy enforcement component as usual but inhibit any actions that would usually result from a permit evaluation result. Regardless of the evaluation result the resource interface may respond to the request with a verification mode report. For example the resource interface and or a controlling workflow may invoke an interface element of the verification mode reporting interface to generate the verification mode report. The use of dedicated interface elements is only one technique for indicating that a request is to be processed in verification mode. Alternate embodiments may utilize any suitable technique. For example interface elements may incorporate an explicit indicator e.g. a flag for indicating the request is a verification mode request. The resource interface may include an explicit set of interface elements not shown in for activating and deactivating verification mode processing. As a further alternative or in addition receipt of a verification mode token e.g. issued by the verification mode service may act as an indication that an associated request is to be processed in verification mode.

Each interface element may correspond to a request e.g. the request of subject to a subset of the policies . In order to evaluate the request with respect to the subset of the policies the resource interface receiving the request may submit the request to the policy enforcement component . depicts aspects of an example policy enforcement component in accordance with at least one embodiment. The policy enforcement component of is an example of the policy enforcement component of .

The policy enforcement component may include a policy collector configured at least to collect relevant policies from locations throughout the virtual resource provider and store them local to a decision engine in a policy cache . Collected policies may not be in normal form . The policy enforcement component may further include a policy normalization component having functionality corresponding to that of the policy normalization component of the policy management service . The policy normalization component may normalize the set of policies in the policy cache . The decision engine may evaluate requests submitted to the policy enforcement component with respect to relevant policies in the policy cache . At times additional data may be required to support particular decisions with respect to particular policies. The policy enforcement component may still further include one or more decision data collectors configured at least to collect the required decision support data decision data from locations throughout the virtual resource provider . Collected decision data may be stored local to the decision engine in a decision data cache .

The policy collector may update the policy cache responsive to policy update notifications for example received from the policy management service and or the virtual resource servers . The policy collector may subscribe to notifications of updates to relevant policies and or policy sets maintained at the policy management service and or the virtual resource servers . Alternatively or in addition the policy collector may periodically search for changes to policies in the policy cache and or for newly relevant policies.

The decision data collector s may include one or more data collectors configured to interact with the decision data providers . The decision data collector s may collect decision data responsive to requests by the decision engine for example requests by the decision engine for decision data that is not present in the decision data cache and or that is out of date. The decision data collector s may furthermore maintain one or more subsets and or types of decision data in the decision data cache for example responsive to update notifications from the decision data providers and or with updates discovered by periodic searching

The description now turns to example procedures that may be performed by for example the virtual resource provider . depicts example steps for policy enforcement in accordance with at least one embodiment. At step one or more virtual resources may be provisioned. For example authorized users may interact with the provisioning interface of to provision one or more of the virtual resources of . At step one or more user specified policies may be received. For example authorized users may specify policies with the policy management interface of the policy management service with policy management interface elements of resource interfaces and or with policy specifications that accompany requests such as the policy . At step one or more optimized policy sets may be maintained. For example the policy management service may maintain the normalized policy set and the policy index and distribute the normalized policy set to the policy enforcement components based at least in part on the policy index . In addition the policy enforcement components may collect relevant policies and locally normalize and or re normalize the collected policies.

At step a request may be received with respect to one or more virtual resources. For example a user may make the request with the resource interface of the virtual resource service with respect to one or more of the virtual resources maintained by one or more of the virtual resource servers . At step a relevant policy subset may be determined. For example the resource interface may submit the request to the policy enforcement component for evaluation and the policy enforcement component may search the policy cache for policies relevant to the request. A particular normal form policy may be determined relevant to the request when one or more principals associated with the request e.g. the user making the request match a value of the principal s element of the policy when one or more actions associated with the request match a value of the action s element of the policy when one or more resources associated with the request match a value of the resource s element of the request and or when one or more attributes of the request or a context of the request satisfies the condition s of the policy .

At step the request may be evaluated with respect to the relevant policy subset determined at step . For example the decision engine may evaluate the request with respect to the relevant policy subset in the policy cache based at least in part on decision data in the decision data cache . At step a result of the evaluation of step may be identified. For example the resource interface may identify the result based at least in part on information provided by the policy enforcement component . The resource interface may determine that the request is to be permitted in which case a procedure incorporating step may progress to step . The resource interface may determine that the request is to be denied in which case the procedure may progress to step . The resource interface may determine that the request is to be processed in verification mode in which case the procedure may progress to step . For example the resource interface may determine that the request is to be processed in verification mode based at least in part on an indicator incorporated into and or accompanying the request such as a verification mode flag or a verification mode token.

At step the request may be fulfilled. For example the resource interface may interact with one or more of the virtual resource servers and or the provisioned resources to fulfill the request. Alternatively or in addition the resource interface may establish a request fulfillment workflow. At step the request may be denied. For example the resource interface may respond to the request with a request denied message. Alternatively or in addition the resource interface may establish a request denial workflow. The request denied message may contain minimal information so as to avoid information leakage to unauthorized users. The resource interface may even be configured to silently deny requests so that no request denied message is sent. At step a verification mode report may be generated and provided to the sender of the request. For example the resource interface may interact with the reporting interface of the verification mode service to request and or generate the verification mode report. Alternatively or in addition the resource interface may establish a verification mode report workflow.

At step the managed policy set may be optimized with respect to the normal form. For example the policy normalization component may decompound the normalized policy set reduce redundancy in the normalized policy set and or recompound the normalized policy set with respect to the normal form . At step one or more subsets of the managed policy set may be determined based at least in part on the normal form. For example the policy distribution component may update the policy index for the updated normalized policy set and determine the one or more subsets for distribution based at least in part on the updated policy index .

At step the one or more subsets of the managed policy set may be distributed to one or more policy enforcement components PECs . For example the policy distribution component may notify policy enforcement components of the updated normalized policy set and or the updated policy index . Different policy enforcement components may have different subscriptions to different portions of the policy index and the policy distribution component may be configured to send update notifications to those policy enforcement components with matching subscriptions.

At step a received request may be associated with one or more policy enforcement components . The virtual resource provider may make an explicit determination of an association between the received request and a particular set of the policy enforcement components . Alternatively or in addition the associated may be determined at least in part by the user interface selected by the user to place the request. For example a request arriving at the resource interface may be associated with the policy enforcement component . At step the received request may be submitted to the associated one or more policy enforcement components for evaluation.

At step a next e.g. a first normal form policy may be selected from the generated set of normal form policies. At step it may be determined whether the selected normal form policy is contained in a managed set. For example the policy normalization component may determine whether the normal form policy selected at step is contained by one or more of the policies in the normalized policy set . If so the selected normal form procedure has been determined to be redundant and the procedure may progress to step . Otherwise the procedure may progress to step .

At step one or more of the containing policies determined at step may be updated to reference the user specified policy of step and at step the selected normal form policy discarded as redundant. For example the policy normalization component may update the set of parent policies of the containing policy set to reference the user specified policy.

At step it may be determined whether there are more policies to be checked for redundancy in the generated normal form policy set. If so the procedure may return to step . Otherwise the procedure may progress to step . At step the managed policy set may be updated. For example the policy normalization component may update the normalized policy set with those of the generated normal form policies not discarded as redundant. At step a managed policy set index may be updated. For example the policy distribution component may update the policy index to account for the policies added to the normalized policy set at step .

At step it may be determined whether the verification mode indication is authentic and or authorized. For example the resource interface may submit a received verification mode token to the verification mode service for authentication. If so a procedure incorporating step may progress to step . Otherwise the procedure may progress to step to report a problem with verification mode to the user making the request.

At step a relevant policy subset may be determined. For example the policy enforcement component may determine a subset of policies in the policy cache that are relevant to the request received at step . At step a required set of decision data may be determined. For example the decision engine may request decision data required to evaluate the request with respect to the relevant policy subset determined at step from the decision data cache and the requested decision data may correspond to the required set. At times the decision data cache may not contain each piece of the required set of decision data. At step the required set of decision data may be collected. For example the decision data collector s may update the decision data cache as necessary to contain the required set of decision data.

Circle is a diagrammatic connector corresponding to a like diagrammatic connector of . The verification mode indication received at step may include and or be accompanied by substitute decision data. The verification mode authentication step may include authentication of an authority to replace collected decision data with the substitute decision data. At step it may be determined whether one or more pieces of the set of decision data collected at step is to be replaced with substitute data. For example the decision engine may so determine based at least in part on the verification mode indication received at step . If so the procedure may progress to step . Otherwise the procedure may progress to step . At step the decision data collected at step may be replaced by the substitute decision data. For example the decision engine may utilize the substitute decision data as indicated by the verification mode indication received at step .

At step the request received at step may be evaluated with respect to the relevant policy subset determined at step and the decision data collected at step and or the substitute decision data if any. For example the decision engine may perform the evaluation. At step request fulfillment may be inhibited. For example the resource interface responsive to the verification mode authentication of step may inhibit request fulfillment independent of the result of the evaluation of step .

At step the relevant policy subset determined at step may be mapped to a set of user specified policies to be reported. For example each of the relevant policy subset may be in normal form and the reporting component of the verification mode service may map each of the relevant policy subset to the user specified policies referenced by the set of parent polices of the policy. In at least one embodiment the union of such sets correspond to the set of user specified policies to be reported. At step a verification mode report may be generated for example by the reporting component utilizing the data collection component as necessary. At step the verification mode report may be provided for presentation. For example the verification mode service may provide the verification mode report generated at step to the user that made the request of step . In at least one embodiment the user is notified of the generation of the verification mode report and may later obtain the verification mode report with the reporting interface .

As described above with reference to the control plane may be facilitated by one or more workflows maintained by the workflow management component . depicts example steps for workflow management in accordance with at least one embodiment. At step a request may be received by an interface of the control plane . For example one of the user interfaces of the control plane may receive the request from a user customer and or administrator of the virtual resource provider . The request may be a call to a programmatic interface such as an application programming interface API or a Web services interface e.g. utilizing a Simple Object Access Protocol SOAP call. Alternatively or in addition the request may be received through a graphical user interface GUI such as a Web based GUI. At step the request may be analyzed to determine one or more actions required to successfully complete the request. For example the provisioning interface may analyze the request and determine a set of actions required to provision a set of virtual resources . When an interface element receiving the request corresponds to a specific action to be performed the interface may extract information from the request to be utilized in determining aspects and or parameters of the action to be performed.

At step a request may be sent to create a workflow based at least in part on the one or more actions determined at step . For example provisioning interface may send the request to the workflow management component . The request to create the workflow may include the action s action metadata such as type of action and or action parameters. In at least one embodiment the control plane and or the workflow management component maintains a job queue for such requests and workflows are created responsive to new additions to the job queue. At step a workflow and one or more component tasks may be created. For example the workflow management component may analyze the request of step to determine the appropriate workflow and component tasks to create.

At step execution of the component task s may be guided in accordance with the workflow. For example the workflow management component may activate elements of interfaces of various implementation resources to provision the set of virtual resources. Alternatively or in addition the workflow management component may manage bids for execution of the component task s by components of the virtual resource provider . At step it may be determined whether the workflow has finished. For example the workflow management component may determine whether a final task in a sequence of tasks managed by the workflow has completed. If so a procedure incorporating step may progress to step . Otherwise the procedure may return to step for a next task and or task sequence. Workflows may guide multiple task sequences executing in parallel. In this case it may be that the workflow is not finished until each of the multiple task sequences completes and or an explicit workflow finished flag is set by one of the component tasks. At step the sender of the request of step may be informed of result s of the action s .

The various embodiments described herein may be implemented in a wide variety of operating environments which in some cases may include one or more user computers computing devices or processing devices which may be utilized to operate any of a number of applications. User or client devices may include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also may include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also may include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. Such a network may include for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof. The network may furthermore incorporate any suitable network topology. Examples of suitable network topologies include but are not limited to simple point to point star topology self organizing peer to peer topologies and combinations thereof.

In embodiments utilizing a Web server the Web server may run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment may include a variety of data stores and other memory and storage media as discussed above. These may reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device may include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also may include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader may be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules including program modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be utilized and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code may include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be utilized to store the desired information and which may be accessed by the a system device. Program modules program components and or programmatic objects may include computer readable and or computer executable instructions of and or corresponding to any suitable computer programming language. In at least one embodiment each computer readable medium may be tangible. In at least one embodiment each computer readable medium may be non transitory in time. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

The use of the terms a and an and the and similar referents in the context of describing embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments and does not pose a limitation on the scope unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of at least one embodiment.

Preferred embodiments are described herein including the best mode known to the inventors. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments to be constructed otherwise than as specifically described herein. Accordingly suitable embodiments include all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is contemplated as being incorporated into some suitable embodiment unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

