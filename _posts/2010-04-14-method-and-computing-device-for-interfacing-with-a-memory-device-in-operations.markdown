---

title: Method and computing device for interfacing with a memory device in operations
abstract: A method for interacting with a memory device is provided. In this method, a cryptographic communication application is registered to be associated with a protocol type in a web browser. A message encapsulated in the protocol type from the web browser is received and thereafter transmitted to the memory device. Here, the message is associated with a cryptographic operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08135961&OS=08135961&RS=08135961
owner: SanDisk Technologies Inc.
number: 08135961
owner_city: Plano
owner_country: US
publication_date: 20100414
---
This application is a continuation of U.S. patent application Ser. No. 11 511 766 filed Aug. 28 2006 now U.S. Pat. No. 7 743 258 which is incorporated by reference herein. Also this application is related to U.S. patent application Ser. No. 11 511 687 filed on Aug. 28 2006 which is incorporated herein by reference.

The present invention relates generally to memory technologies and more particularly to methods and devices for interacting with a memory device in cryptographic operations.

A hardware token is a physical device used for cryptographic operations such as authentication digital signature and other cryptographic operations. For example a hardware token may be configured to generate a one time password. The one time password may be used to logon to a corporate network. To logon to a corporate network a user may be prompted on a web page to enter in his login identification password and a one time password generated by the hardware token. In response the user enters his login identification password and a one time password generated by and displayed on the hardware token. To input the one time password the user must physically transcribe the one time password onto the web page. In other words the user must read the one time password from the hardware token memorize the one time password and physically input the one time password onto the web page.

Such manual transcription of the one time password from the hardware token onto a web page is prone to errors. As a result there is a further need for continuing efforts to improve the transcription of information from the hardware token.

Various embodiments of the present invention provide methods systems and or devices for interacting with a memory device in cryptographic operations. It should be appreciated that the embodiments can be implemented in numerous ways including as a method a circuit a system or a device. Several embodiments of the present invention are described below.

In accordance with an embodiment of the invention a method for interacting with a memory device is provided. In this method a cryptographic communication application is registered to be associated with a protocol type in a web browser. A message encapsulated in the protocol type from the web browser is received and thereafter transmitted to the memory device. Here the message is associated with a cryptographic operation.

Other embodiments and advantages of the invention are apparent from the following detailed description taken in conjunction with the accompanying drawings illustrating by way of example the principles of the invention.

A detailed description of one or more embodiments is provided below along with accompanying figures. The detailed description is provided in connection with such embodiments but is not limited to any particular embodiment. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided for the purpose of example and the described embodiments may be implemented according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the embodiments has not been described in detail to avoid unnecessarily obscuring the description.

The embodiments described herein provide methods systems and or devices for interacting with a memory device. To interact with a memory device a computing device may issue messages associated with cryptographic operations to a web browser. As will be explained in more detail below a cryptographic communication application receives the messages through the web browser and communicates the messages to the memory device on behalf of the computing device. The memory device may additionally post messages to the computing device through the web browser. The computing device may therefore establish a communication channel with the memory device through the web browser.

Client computing device is in communication with server computing device . Client computing device may be in communication with server computing device through a computer network which can include local area network LAN Internet or through other connections. Client computing device may be configured to host web browser and cryptographic communication application . Server computing device may be configured to host a message generator . Client computing device and server computing device as will be explained in more detail below include memories for storing web browser cryptographic communication application and message generator . Additionally included in client computing device and server computing device are processors for executing web browser cryptographic communication application and message generator stored in the memories.

In general web browser is a software application that enables a user to display and interact with text images and other information located on a web page or other sources. There are a variety of web browsers such as web browser that may be hosted on client computing device examples being those sold under the trademarks Internet Explorer Mozilla Firefox and Netscape. The web page or other sources accessed by web browser may be stored on server computing device . Server computing device for example may include a web server configured to store and serve web pages. Web browser may communicate with server computing device using Hypertext Transfer Protocol HTTP or secure HTTP. Generally HTTP is a method used to transfer information on the World Wide Web web . HTTP allows web browser to submit information such as message to server computing device as well as fetch web pages from the server computing device. Alternatively secure HTTP may be used to provide authenticated and encrypted communication between web browser and server computing device . Secure HTTP is similar to HTTP but uses a different default port e.g. and has an additional encryption authentication layer between the HTTP and Transmission Control Protocol TCP .

Cryptographic communication application is associated with web browser . For example cryptographic communication application may be a plug in application that may be loaded into web browser . A plug in application is a computer program that operates within the confines of web browser . Cryptographic communication application may also be a helper object software standalone application or other application types. Cryptographic communication application is initially stored in memory device and can be loaded into or associated with web browser when the memory device is connected to client computing device . In general cryptographic communication application is configured to enable communications associated with cryptographic operations between memory device and server computing device . In other words cryptographic communication application establishes a communication channel between memory device and server computing device through web browser . Cryptographic operations may include for example operations associated with retrieving a one time password from memory device challenges and responses secure key exchanges Digital Rights Management DRM token provisioning digital certificates digital signatures and other cryptographic operations. Message generator encapsulates messages from server computing device in a unique protocol type e.g. Multipurpose Internet Mail Extensions MIME and as will be explained in more detail below cryptographic communication application is configured to receive messages encapsulated in the unique protocol type such as MIME message that are transmitted to web browser from the server computing device.

Accordingly as shown in operation the cryptographic communication application is registered to be associated with the protocol type in the web browser such that when the web browser encounters this protocol type the web browser executes the cryptographic communication application to process the message encapsulated in the protocol type. In an embodiment the cryptographic communication application may be loaded into and registered with the web browser when the memory device is connected to the computing device that hosts the web browser. When the memory device is disconnected the cryptographic communication application may be unregistered from the web browser. Accordingly the cryptographic communication application may be registered with the web browser when the memory device is connected to the computing device and may be unregistered when the memory device is removed. Such dynamic registration may avoid modifying the host configuration e.g. registry and furthermore the cryptographic communication application may be loaded into open web browsers and removed without closing the web browser.

When the cryptographic communication application is registered the cryptographic communication application receives messages encapsulated in the protocol type from the web browser in operation . The messages are transmitted to the web browser from another computing device such as a web server. A message may include a variety of data associated with a cryptographic operation. Examples of messages include commands to generate one time passwords commands to request one time passwords commands to activate requests connectivity information commands to provision requests and other messages. After the cryptographic communication application receives the message the cryptographic communication application transmits the message to the memory device in operation .

After the messages are routed and processed protocol modules transmit the messages to device API . Device API is configured to interface high level API with memory device . An example of an interface operation is the translation of commands from high level API into memory device operations. Device API may for example include the lower level interface functions to communicate with memory device . An example of lower level interface functions includes input out memory device operations associated with the input and output of data to and from memory device . It should be appreciated that in other embodiments shared library may include fewer or more modules apart from those shown in . For example if only one protocol type is handled by cryptographic communication application shared library may not include protocol router . If the device API is built into memory device then shared library may not include the device API.

Modules of dynamic linked libraries and are loaded into both LaunchPad application and web browser . Modules include PluginLoader.dll PluginHelper.dll ServiceProvider and cryptographic communication application which may also be a dynamic link library. Cryptographic communication application may be a MIME filter and in an embodiment web browser may call the cryptographic communication application to handle text otp MIME type. ServiceProvider.dll handles the device commands received from cryptographic communication application . PluginLoader.dll loads PluginHelper.dll into all instances of web browser as well as newly created instances. PluginLoader.dll may also unload PluginHelper.dll from all instances of web browser when memory device is disconnected. PluginHelper.dll is configured to register or unregister cryptographic communication application and may additionally provide form fill functionality to fill a web page with data.

In the illustrated embodiment of once memory device is connected to client computing device PluginLoader.dll is loaded. PluginLoader.dll then loads PluginHelper.dll into all instances of web browser . It should be noted that there may be multiple instances of web browser depending on the number of web browser windows that are open. If there is more than one instance of web browser the modules of dynamic linked libraries and are loaded into each instance. Once PluginHelper.dll is loaded into web browser the PluginHelper.dll registers cryptographic communication application to handle for example the text otp MIME type.

Server computing device receives the user name and password and generates a request for a one time password based on the user name and password. For the request to be communicated to memory device server computing device encapsulates the one time password request in a unique protocol type. Here server computing device encapsulates the one time password request in MIME protocol and in operation transmits the MIME one time password request to web browser . In an embodiment as discussed above web browser may not be configured to handle messages encapsulated in MIME protocol and therefore the web browser executes cryptographic communication application to handle the MIME OTP request. In another embodiment cryptographic communication application may intercept all messages transmitted to web browser and extracts messages encapsulated in a unique protocol type such as the MIME one time password request. It should be noted that web browser may communicate with server computing device using secure HTTP. Accordingly the MIME one time password request and other communications between web browser and server computing device are additionally encapsulated in secure HTTP.

Cryptographic communication application receives the one time password request in operation because the request is encapsulated in MIME protocol and in response transmits the request to device API in operation . Device API is configured to interface with memory device and generates a memory device command to the memory device to generate a one time password in operation . In response to the command memory device generates the one time password and in operation transmits the one time password to device API . Device API then transmits the one time password to cryptographic communication application in operation and the cryptographic application transmits the one time password to server computing device through web browser in operation . Server computing device receives and authenticates the one time password to be associated with the user name and password provided in operation . If the one time password is valid then server computing device transmits the requested web page to web browser in operation .

Cryptographic communication application then establishes a communication channel with provisioning service based on the received connectivity information and transmits a second request for the shared secret in operation . In operation provisioning service generates a shared secret in response to the second response and transmits the shared secret to cryptographic communication application in operation . It should be appreciated that communication between cryptographic communication application and provisioning service may not be through web browser . In other words cryptographic communication application may be in direct communication with provisioning service . Accordingly messages transmitted to cryptographic communication application from provisioning service are not encapsulated in MIME protocol. With the receipt of the shared secret cryptographic communication application transmits the shared secret to memory device in operation .

It should be appreciated that properties may be used in a selector in accordance with an embodiment of the invention. In the example of server computing device A is configured to use validation service A or validation service B for authentication. On the other hand server computing device B is configured to use validation service C for authentication. Memory device may store multiple virtual tokens and each token is associated with a different validation service or . A selector may be included in a message transmitted to cryptographic communication application to select virtual token or . For example server computing device A transmits MIME one time password request to web server . MIME one time password request includes a selector that specifies the retrieval of a one time password from a token for use with validation service A which is virtual token A . Based on the selector cryptographic communication application transmits one time password request for virtual token A to memory device . In response memory device transmits one time password for use with validation service A to server computing device A . In another example server computing device B transmits MIME one time password request to web browser . Here MIME one time password request includes a selector that specifies the retrieval of a one time password from a token for use with validation service C which is virtual token C . Based on the selector cryptographic communication application transmits one time password request for a one time password from virtual token C to memory device . In response memory device transmits one time password for use with validation service C to server computing device B .

In some embodiments computing device performs specific operations by processor when executing one or more sequences of one or more program instructions stored in system memory . Such program instructions may be read into system memory from another computer readable medium such as storage device . In some embodiments hard wired circuitry may be used in place of or in combination with software program instructions to implement embodiments of the invention.

It should be appreciated that the term computer readable medium refers to suitable medium that participates in providing program instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media may include for example optical or magnetic disks such as storage device . Volatile media may include dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infrared data communications. Common forms of computer readable media include for example magnetic mediums e.g. floppy disk flexible disk hard disk magnetic tape and other magnetic mediums optical mediums e.g. compact disc read only memory CD ROM and other optical mediums physical medium with patterns e.g. punch cards paper tape any other physical mediums memory chips or cartridges carrier waves e.g. RAM programmable read only memory PROM erasable programmable read only memory EPROM flash memory and other memory chips or cartridges and any other medium from which a computer can read.

In some embodiments execution of the sequences of program instructions to practice the embodiments may be performed by a single computing device . In other embodiments two or more computer systems such as computing device coupled by communication link e.g. local area network LAN public switched telephone network PSTN wireless network and other communication links may perform the sequence of program instructions to practice the embodiments in coordination with one another. In addition computing device may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program instructions may be executed by processor as the program instructions are received and or stored in storage device or other non volatile storage for later execution.

The above described embodiments provide methods systems and or devices for interacting with a memory device. By being able to communicate with a memory device through a web browser communication channel cryptographic operations between a computing device and a memory device may be automated without user participation. For example a server computing device may request a one time password from a memory device and the memory device may automatically respond by generating and transmitting a one time password to the server computing device through a web browser. The establishment of a communication channel through web browser reduces participation of the user in cryptographic operations. As a result such communication channel simplifies for example an authentication operation for the user because the communication channel eliminates the need for a user to manually transcribe a one time password onto a web page.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the embodiments are not limited to the details provided. There are many alternative ways of implementing the embodiments. Accordingly the disclosed embodiments are to be considered as illustrative and not restrictive and the embodiments are not to be limited to the details given herein but may be modified within the scope and equivalents of the appended claims. In the claims elements and or operations do not imply any particular order of operation unless explicitly stated in the claims.

