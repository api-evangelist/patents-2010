---

title: System and method for personalizing devices
abstract: A system and method for personalizing a device is disclosed herein. A user configures a plurality of settings associated with a device. Each setting is identified as a user setting or a platform setting. The user settings are stored in a personalization virtual object with the user. Platform settings are stored separately from the personalization virtual object. Software for personalizing a device provided on a computer readable medium is disclosed herein. The software comprises a code for execution on a central processing unit operable to configure a plurality of settings associated with a device by a user. The software identifies each setting as a user setting or a platform setting. The user settings are stored in a personalization virtual object associated with the user, and the platform settings are stored separately from the personalization virtual object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08443184&OS=08443184&RS=08443184
owner: Dell Products L.P.
number: 08443184
owner_city: Round Rock
owner_country: US
publication_date: 20100114
---
The present disclosure relates generally to the operation of computer systems and information handling systems and more particularly to a system and method for personalizing devices.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option available to these users is an information handling system. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may vary with respect to the type of information handled the methods for handling the information the methods for processing storing or communicating the information the amount of information processed stored or communicated and the speed and efficiency with which the information is processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include or comprise a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

An information handling system may include one or more central processing units coupled to a memory and one or more devices that provide additional functionality. Such devices may include display devices such as monitors or graphics adapters input devices such as mice keyboard or touch pads or output devices such as sound cards or printers to name a few. Device manufacturers continually design new devices for information handling systems to meet the changing needs of users. Various settings that control the operation of a device may be configured depending upon the other components of the information handling system the environment in which the information handling system operates or the preferences of the user.

In accordance with the present disclosure a system and method for personalizing a device is disclosed herein. A user configures a plurality of settings associated with a device. Each setting is identified as a user setting or a platform setting. The user settings are stored in a personalization virtual object with the user. Platform settings are stored separately from the personalization virtual object.

Software for personalizing a device provided on a computer readable medium is disclosed herein. The software comprises a code for execution on a central processing unit operable to allow a user to configure a plurality of settings associated with a device. The software identifies each setting as a user setting or a platform setting. The user settings are stored in a personalization virtual object associated with the user and the platform settings are stored separately from the personalization virtual object.

An information handling system is disclosed herein. The information handling system has a central processing unit a device coupled to the central processing unit and a memory coupled to the central processing unit. The memory includes a code that when executed by the central processing unit is operable to allow a user to configure a plurality of settings associated with a device. The code is operable to identify each setting as a user setting or a platform setting. The user settings are stored in a personalization virtual object associated with the user. Platform settings are stored separately from the personalization virtual object. The code is operable to apply the platform settings to the device during a power on initialization. Finally the code is operable to apply the user settings from the personalization virtual object to the device during a logon by the user.

The system and method disclosed herein is technically advantageous because it allows for user centric device settings to be preserved even after patches are applied to the device driver or operating system. A second advantage of the system and method disclosed herein is that user centric device settings can be applied to systems that a user has not previously configured. A third advantage of the system and method disclosed herein is that the devices are personalized at run time which makes it easier to integrate new equipment or to reassign existing equipment to new users. A fourth advantage of the system and method disclosed herein is that it enables a user to configure certain settings for a device once and reuse those same settings on any other information handling system where the same device is available. Other technical advantages will be apparent to those of ordinary skill in the art in view of the following specification claims and drawings.

For purposes of this disclosure an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control or other purposes. For example an information handling system may be a personal computer a network storage device or any other suitable device and may vary in size shape performance functionality and price. The information handling system may include random access memory RAM one or more processing resources such as a central processing unit CPU or hardware or software control logic ROM and or other types of nonvolatile memory. Additional components of the information handling system may include one or more disk drives one or more network ports for communication with external devices as well as various input and output I O devices such as a keyboard a mouse and a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.

Various devices may be connected to an information handling system. A device can be part of an integrated chipset such as a network interface card a sound adapter or a graphics adapter. A device may also be provided as a card that connects to an interface such as peripheral component interconnect PCI . Finally a device may use an external form factor and connect to the information handling system using a universal serial bus USB or IEEE 1394 interface. Devices are not limited to being physical devices and this term also includes virtual devices. Virtual devices are not physical devices but appear to be physical devices to the operating system. Typically a device manufacturer provides one or more device drivers designed to provide an interface between an operating system running on the information handling system and the device which may not have existed at the time the operating system code was written. The device driver interacts with the operating system through an application programming interface API implemented by the operating system. The interface exposed by the API may be proprietary to the operating system or may comply with a widely known standard for device drivers.

In addition to a device driver the device manufacturer may supply a configuration utility. A configuration utility presents the user with various settings that alter the operation or personality of the device. For example settings may alter the speed at which the device operates or performs a task how it displays an image or how it produces a sound. Some of the settings may be necessary for the device to properly operate. For example in order for a graphics adapter to produce an image on an attached monitor the graphics adapter must know at what resolution it should render the image. Other device settings may not be necessary for the device to properly function but may alter the device s operation to better reflect the preferences of the user. The level of bass or treble for a sound adapter may not need to be adjustable to meet the needs of most users but it may be desirable to allow the user to change these settings to satisfy their personal preferences.

The configuration utility allows a user to configure settings related to the device by providing a user interface. Any number of user interfaces are possible. In some implementations a user may enter settings using a simple command line interface. Graphical user interfaces may also be used to show various options that may be selected or altered using a mouse or pointing device in addition to a keyboard. Touch pad or touch screen interfaces are increasingly common. The choice of user interface may depend on any number of factors depending upon the type of device and the environment in which it is used. A configuration utility may present itself as a stand alone program that runs when the device is first installed or connected similar to a setup wizard or software installation program. The configuration utility may also be implemented as a control panel and may be grouped together by the operating system to present a dashboard of various device controls. In some instances an operating system may provide a standard device driver or configuration utility for common devices.

Device settings can be classified as one of two types user centric settings user settings or platform centric settings platform settings . User settings are typically settings where the optimal setting varies upon a user s personal preferences or the user s particular use of the device. An example of a user setting might be the choice of resolution used with the attached monitor. A graphics adapter and attached monitor may support several different resolutions in common. However a particular user may prefer a lower resolution display while another user prefers a higher resolution display. Platform settings are typically settings that are driven by other devices or components present in the information handling system the software used with the device or a combination of these factors. As a result platform settings are typically hardware configuration driven and do not vary based upon the user presently operating the device. For example if a device is connected to an information handling system using a USB connection a setting that tells the device to use version 1.1 or version 2.0 of the USB specification will be determined by whether the information handling system supports one version or the other. When multiple users share an information handling system it would be advantageous to track the user s preferred user settings and to restore them whenever that user logs onto the system. At the same time platform settings should be applied to the device regardless of the current user.

Like all software it is sometimes necessary to supply a replacement device driver or configuration utility or to patch the software. When a patch is applied device settings may be lost or restored to their default values. It would be advantageous to provide a way for settings to be retained particularly user settings even after the device driver or configuration utility is patched.

Shown in is a diagram of various entities used to control and manage a device according to the system and method herein disclosed. An information handling system may be connected to one or more devices such as device . An operating environment or operating system OS runs on the information handling system to control and coordinate the operation of the system. The operating system includes not only the OS provided kernel but also may include third party device or OS provided configuration utilities such as device configuration utility or device drivers such as device driver . The operating system may provide a device configuration manager user manager and security module as well as a profile management agent . The information handling system may possess one or more interfaces to other systems such as a network interface that provides a connection to network . Network may use any type of connection technology including Ethernet fiber optics fibre channel or wireless technologies. Network is not limited to any particular connection protocol and protocols that may be used include TCP IP or a storage networking protocol such as iSCSI SAS or fibre channel. A profile virtualization repository PVR may be connected to the information handling system via network . The profile virtualization repository is an information handling system operable to store user settings as described in the system and method disclosed herein. The PVR may be as simple as a file server where user settings are stored in encrypted files a directory service such as a Microsoft Active Directory or LDAP directory or it may be a database server.

At step the device driver identifies which settings are user settings and which settings are platform settings. The logic for identifying the type of setting is provided by code in the device driver . At step the device driver passes the configured settings with an identification of each setting s type to the device configuration manager . In a different embodiment the logic for identifying the type of setting may be provided by code in the device configuration utility or even in the device configuration manager . If the device configuration utility performs the identification then the setting type information would be included in the transfer of settings to the device driver and from the device driver to the device configuration manager . If the device configuration manager performs the identification of user or platform settings then only the settings would be passed from the configuration utility to the device driver and then to device configuration manager . In another embodiment the logic for identifying the type of setting may be modified by a user such as an administrator. The device configuration utility or device driver may be configurable by a user typically an administrator to change the identification logic by specifying whether a particular setting is treated as a user setting or a platform setting.

At step the device configuration manager stores the platform settings locally. The platform settings may be stored in any number of ways which include but are not limited to a registry a directory such as an LDAP directory a flat file in a text based format or a binary file.

At step the device configuration manager creates a personalization virtual object PVO containing the user settings. The PVO may be in any number of formats which may include the virtual hard disk format VHD the virtual machine disk format VMDK or the open virtualization format OVF . The device configuration manager may encrypt the PVO using an encryption key associated with the user . The user manager and security module of the operating system may be called by the device configuration manager to perform the encryption. At step the device configuration manager stores the encrypted PVO locally.

In one embodiment the system and method disclosed herein ends at step . In another embodiment of the system and method disclosed herein a profile management agent PMA reads the encrypted PVO at step . The profile management agent may decrypt the PVO directly or it may call the user manager and security module to perform the decryption. PMA may store a full copy of the PVO in the profile virtualization repository . Alternatively the PMA may synchronize the PVO with an existing version of the PVO stored in PVR . When synchronization is used different versions of the PVO may be stored as file deltas between the different versions of the PVO maintained in the PVR .

At step a user logon is detected and the device initialization module is notified. At step the device initialization module calls the device driver to perform user initialization of device . At step device driver requests the user settings associated with the logged in user and device from the device configuration manager . In one embodiment device configuration manager retrieves the PVO from local storage and decrypts the PVO using the user manager and security module .

In another embodiment of the system and method the PMA checks the version of the PVO in local storage and compares it with the version available in the PVR . If a newer version of the PVO is available from the PVR then PMA updates the local copy before the device configuration module uses the local copy of the PVO.

Once the device configuration module has retrieved the PVO the device configuration module provides the user settings to the device driver at step . The device driver finishes the initialization of device using the user settings associated with the logged on user.

When the particular user logs on to information handling system the streaming and personalization policy may specify that the particular user is to receive the latest Gold Image A with device personalization applied. In that instance the information handling system will receive a stream containing a complete Gold Image A with the contents of Gold Image A overlaid on top of the master gold image. Any platform settings that have been configured for devices connected to the information handling system would then be applied to the composite image of Gold Image A and Gold Image A . On top of these images the personalization virtual object would be applied so that the particular user s user settings will be applied to any devices connected to information handling system .

Although the present disclosure has been described in detail it should be understood that various changes substitutions and alterations can be made hereto without departing from the spirit and the scope of the invention as defined by the appended claims.

