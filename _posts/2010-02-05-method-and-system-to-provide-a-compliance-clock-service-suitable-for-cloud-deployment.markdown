---

title: Method and system to provide a compliance clock service suitable for cloud deployment
abstract: A method and system for providing an improved compliance clock service are described. An example method comprises establishing a system compliance clock (SCC) for a storage system that provides a compliant storage service, and establishing, for a volume in the storage system, a volume compliance clock (VCC). A current value of the SCC may be periodically updated based on hardware ticks monitored at the associated storage node. The volume compliance clock is to update its value based on a current value of the SCC.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473773&OS=08473773&RS=08473773
owner: NetApp, Inc.
number: 08473773
owner_city: Sunnyvale
owner_country: US
publication_date: 20100205
---
The present disclosure pertains to storage systems and more particularly to method and system for providing a compliance clock service suitable for cloud deployment.

Data storage is an increasingly crucial and central part of many industries dealing in financial transactions and other sensitive tasks such as banks government facilities contractors defense health care institutions pharmaceutical companies and securities brokerages. In many of these environments it is necessary to store selected data in an immutable and unalterable manner. Forms of data that require immutable treatment often include e mails financial documents and transaction records and any other record that may act as proof of an important action or decision. Even in less critical unregulated environments the ability to store a secure unalterable data cache is highly desirable. For example engineering medical law and other professional firms may wish to establish a cache of key data e.g. invention reports or design files client communications medical images etc. that will remain unaltered and online for long periods on time. These caches can provide reliable references and proofs for clients and other interested parties.

There are a number of government regulations that require a variety of data records be available for retrieval for a specified period of time from non modifiable non erasable archives. For example Securities and Exchange Commission SEC Rule 17a 4 i.e. 17 C.F.R. 240.17a 4 hereinafter the Rule requires that certain stock exchange members brokers and dealers maintain certain records for a period of time typically three or seven years . This data must therefore be archived for the period of time specified by the Rule in order to comply with the Rule. There may be various other reasons to store certain data for at least a predetermined period of time. A compliant storage service is used to store data reliably and without altering for a predetermined period that may be set by an administrator predetermined by a manufacturer of the storage system etc. Compliant storage refers to data storage that complies with predetermined requirement. Compliance generally requires that the data must be archived and cannot be deleted or modified until the end of the period for which it must be retained.

Some existing systems utilize a secure compliance clock to gauge the time relative to the retention period. A compliance clock uses a trusted time base a source of the current time value that is as a reliable source such as a repetitive file server process to derive its time value. A file server is a computer attached to a network that has the primary purpose of providing a location for the shared storage of computer files. The clock may be designed to be tamper resistant and its time value that is measured with respect to a value initially set by an administrator is increased in a manner that the retention period is never reduced but may be longer to further ensure observance of the full retention period. Alternatively the clock can be based upon a trusted third party clock such as a government based clock or an additional secure hardware based clock. In existing systems compliance clock falls behind when a volume is powered down etc. which may result the actual retention time to be greater than the required retention time and thus cause inefficient use of storage resources. A volume is a set of stored data associated with a collection of mass storage devices such as disks which obtains its storage from i.e. is contained within an aggregate and which is managed as an independent administrative unit.

An improved compliance clock service is provided for use with a compliant data storage service. In one embodiment an improved compliance clock service comprises a system wide master clock termed system compliance clock or SCC and a plurality of volume compliance clocks VCCs where a VCC is maintained for each volume in the compliant storage system. The current value of the SCC is increased periodically using hardware ticks obtained from the node on which the SCC is being maintained. A hardware tick also referred to as a hardware clock tick or a cycle the smallest unit of time recognized by a device. A VCC value is initialized to the current value of the SCC and then periodically updated each time utilizing the current value of SCC to determine elapsed time from the last VCC update thus localizing compliance time skews to affected volumes and increasing the accuracy of the retention time. This relationship between the SCC and VCC makes an example compliance clock service suitable for use in systems configured to provide data retention in for example a cloud deployment where some of the features of a cloud storage infrastructure include ability to expand or reduce storage capacity of the storage system ability to move physical storage devices between the servers reliable protection of data against modification and unauthorized access and ability to utilize power saving measures.

In the following detailed description numerous specific details are set forth to provide a thorough understanding of claimed subject matter. However it will be understood by those skilled in the art that claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Some portions of the detailed description which follow are presented in terms of algorithms or symbolic representations of operations on binary digital signals stored within a memory of a specific apparatus or special purpose computing device or platform. In the context of this particular specification the term specific apparatus or the like includes a general purpose computer once it is programmed to perform particular functions pursuant to instructions from program software. Algorithmic descriptions or symbolic representations are examples of techniques used by those of ordinary skill in the signal processing or related arts to convey the substance of their work to others skilled in the art. An algorithm is here and generally is considered to be a self consistent sequence of operations or similar signal processing leading to a desired result. In this context operations or processing involve physical manipulation of physical quantities. Typically although not necessarily such quantities may take the form of electrical or magnetic signals capable of being stored transferred combined compared or otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to such signals as bits data values elements symbols characters terms numbers numerals or the like. It should be understood however that all of these or similar terms are to be associated with appropriate physical quantities and are merely convenient labels. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining or the like refer to actions or processes of a specific apparatus such as a special purpose computer or a similar special purpose electronic computing device. In the context of this specification therefore a special purpose computer or a similar special purpose electronic computing device is capable of manipulating or transforming signals typically represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the special purpose computer or similar special purpose electronic computing device.

Method and system are presented for providing an improved compliance clock service. A compliance clock service in one example embodiment may be provided in a cluster of storage servers as well on an unclustered storage server running a storage operating system. A compliance clock service provides a tamper resistant time base for data retention and may eliminate time skews resulting from taking volumes off line and localize inevitable time skews to the concerned volume thereby avoiding a ripple effect. A compliance clock service in one example embodiment comprises at least one volume compliance clock VCC and a system compliance clock SCC .

VCC provides tamper resistant reference time per volume in a compliant storage system. The value of a VCC is used to determine the retention dates and expiry of objects within the volume. VCC uses the system wide compliance clock value SCC value as reference to update its current value. In embodiments where a storage system is a cluster of storage servers or nodes the system wide compliance clock is a cluster wide compliance clock.

An SCC operates by employing a plurality of processes also referred as daemons running on one or more nodes of the associated storage system. These processes include a node compliance clock daemon and a tick daemon. The node compliance clock daemon cooperates with the tick daemon to maintain node specific compliance clock. The tick daemon stores the current SCC value in memory and makes the current SCC value available to VCCs associated with the node. In a clustered storage system a node compliance clock daemon running on a node that is designated as a master node is a cluster clock daemon a node compliance clock daemon that runs on any other node in the cluster is a local clock daemon. Local clock daemons in a cluster obtain synchronize their respective compliance clock values from the current SCC value that may be provided periodically by the cluster clock daemon. In an unclustered storage system a node compliance clock daemon is termed an unclustered clock daemon. Example architecture of a compliance clock service may be described with reference to .

The management host includes an SCC process that may also be termed a node compliance clock daemon. As mentioned above a node compliance clock daemon may be a clustered clock daemon if the filer is part of a cluster of storage servers and is designated as a master node in the cluster or a local clock daemon if the filer is not as a master node in the cluster . The SCC process may be an unclustered clock daemon if the filer is an unclustered storage server. The SCC process cooperates with a tick daemon running on the data blade to periodically update the SCC value that is used as the current SCC value for updating respective VCCs on the volumes . As shown in the data blade includes a file system alternatively the file system may be replaced by a layer of abstraction for organizing the data on the storage devices and a RAID component that bridge the SCC process and the VCC . RAID redundant array of inexpensive disks is a storage scheme that can divide and replicate data among multiple hard disk drives. It will be noted that in some embodiments a compliance clock service may be implemented in an architecture that does not include a separate management host and a separate data blade while the VCCs are updated based on the current SCC value via a file system associated with the respective VCC.

The VCC is a compliance clock maintained on a per volume basis that provides the reference time to determine retention and expiry of data objects in the volume . In one embodiment the VCC may be initialized once during the lifetime of the volume. The VCC may obtain its starting value from the system wide compliance clock SCC at the time of volume creation or alternatively from the compliance clock value stored in the volume e.g. in case of an upgrade from some versions of the associated storage operation system . The VCC uses the current SCC value as reference to update itself. The updates of the VCC value on the volume may be performed when a write operation is performed with respect to the volume. If one of the volumes is taken off line such that as it is no longer accessible as part of the storage system and then brought back on line after a period of time thus permitting again access to data stored on the volume via the storage server the associated VCC value is updated based on the elapsed time measured with reference to the current value of the SCC and a reference SCC value that is stored on the volume whenever the VCC value is updated. The VCC value may thus be advanced accurately even when a volume is powered down or otherwise taken off line for an extended period of time.

In one example embodiment each volume may store on disk metadata as shown in Table 1 below. The metadata may be generated at initialization of the volume using data provided by the filer .

The metadata shown in Table 1 which may be termed compliance clock metadata and may include other fields may be utilized to detect any change in the Node Cluster SCC association of a given volume and perform appropriate actions to maintain the VCC correctly.

As noted in Table 1 above the SCC scope parameter identifies whether the containing node is maintaining the current value of SCC using a cluster local clock daemon or an unclustered clock daemon. The SCC scope parameter determines whether the Node id or the Cluster id parameter needs to be matched to confirm correct association prior to authorizing an update of the VCC. The SCC id may also be used when the SCC needs to be reinitialized. The reinitialization operation causes the SCC id of the SCC to change. In such cases the Node Cluster association does not change and the SCC id parameter may be used to detect a change in association. In addition the SCC id provides another level of association check on top of the Node Cluster id. In one embodiment the VCC or the VCC value value is updated as shown in Table 2.

As is shown in Table 1 an updated value of the VCC may be calculated as the sum of the current value of the VCC and an elapsed time value. The elapsed time value is determined by subtracting the SCC reference value from a current value of the SCC.

In one example embodiment the VCC is updated only if the SCC association matches which is determined using SCC id Node id if the SCC scope is Node and using SCC id Cluster id if the SCC scope is Cluster . A change in SCC association determined by comparing metadata associated with the volume with the values provided by the filer may be treated as an indication that the current SCC time provided to the volume cannot be trusted. If it is determined that that the current SCC time provided to the volume cannot be trusted the current SCC time is discarded and the VCC time is not updated at the next update with the assumption that the time elapsed is zero. The SCC id and other metadata may be updated if it is necessary to adopt the new SCC e.g. the filer determines that a new SCC is adopted and stored an updated SCC id value on volumes associated with the filer . An update to the compliance metadata on a volume may cause a skew in the VCC time. In order to minimize such skews all operations which may change SCC association SCC Cluster Node id may be preceded by an attempt to update the VCC before proceeding. In some embodiments any command that may potentially lead to a skew of the VCC time may also be preceded by an attempt to update the VCC before proceeding. For example in response to a request to join a node into a cluster the VCC is updated before the join operation is completed. Some of the commands that may potentially lead to a skew of the VCC time include commands that take a volume off line restrict a volume move a volume or cluster commands that join and unjoin a node into the cluster.

Compliance metadata associated with the VCC may be updated on disk when a write operation is performed with respect to the volume. In some embodiments the VCC value may be synchronized with the current SCC value the process referred to as catching up at a configurable rate e.g. maximum of 7 days per year in order to compensate for any skews that may occur between the VCC and SCC . The catch up operation may be performed in small increments to the stored VCC value which may be performed automatically or by an administrator interfacing with the storage server.

The storage devices connected to the storage servers may also include for example magnetic disks magnetic tape optical storage devices such as DVDs and or any other similar media adapted to store data persistently. In an illustrative embodiment the disks are arranged into a plurality of volumes . A volume may include one or more file systems according to one embodiment. A file system is an independently managed self contained hierarchical set of data units. A volume or file system may store data in the form of files or in the form other units of data such as blocks or logical units LUNs .

In one embodiment the physical disks are configured into RAID groups. In one embodiment this organization is arranged so that some disks store striped data and some disks store separate parity for the data in accordance with a RAID configuration e.g. RAID DP double parity or RAID Level 4 RAID4 . The volumes are write once read many WORM volumes in which selected files cannot be modified erased or otherwise deleted once they are committed to storage at least until the expiration of an applicable retention period.

The retention period is maintained in one embodiment by a compliance clock system provided with the storage server . The compliance clock system provides improved compliance clock service and may include an SCC serving as a master clock and a VCC for each volume that derives its value from the current value of the system compliance clock. As mentioned above a storage service enhanced with a compliance clock service provided by the compliance clock system may be deployed on a cloud utilizing cloud computing infrastructure. An architecture that relies upon a remotely deployed internet accessible server tier e.g. utilizing a web browser based client to provide functionality is commonly referred to as software as a service SaaS or cloud computing. The term software as a service SaaS is used as a blanket term for a set of features that uses network accessible hosted service architecture. An example of a storage service deployed on a cloud as a service over the Internet is shown in .

As shown in the method commences at operation with establishing an SCC for a compliant storage system that maintains a plurality of volumes. At operation a VCC is established for one or more volumes in the storage system. As mentioned above the current value of a VCC is updated based on determined elapsed time with reference to the SCC. A compliant storage service associated with the storage system is then deployed to a cloud at operation utilizing cloud computing infrastructure. Specifically in one example embodiment the storage system of receives a request from the client of to launch a storage service also referred to as a storage management application that permits access and management of data stored by the storage system . The storage system communicates with a virtualization provider that causes the launching of the read only boot image for the virtual instance of a storage service that comprises the system compliance clock and the volume compliance clocks . The client may then perform any data access and management functions via the virtual instance provided by the storage service utilizing a web browser application.

The data accessible to the client via the virtual instance is stored on the disks that may be physically located at a facility of the provider of the storage system .

An example storage server configured to provide an improved compliance clock service may be described with reference to .

Referring now to a storage server comprises host processor s a memory a network adapter a storage adapter and a local storage coupled by a bus . The processors are the central processing units CPUs of the storage system shown in and thus control the overall operation of the storage system . In certain embodiments the processors accomplish this by executing software such as that described in more detail herein. The processors may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

The memory comprises storage locations that are addressable by the processors and adapters a network adapter and a storage adapter a file system and one or more processes . The processors and adapters and may in turn comprise processing elements and or logic circuitry configured to execute the software code and manipulate various data structures. The memory can be a random access memory RAM a read only memory ROM or the like or a combination of such devices. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the invention described herein.

The network adapter comprises a plurality of ports adapted to couple the storage system to one or more clients shown in over point to point links wide area networks virtual private networks implemented over a public network Internet or a shared local area network. The network adapter thus may comprise the mechanical electrical and signalling circuitry needed to connect the node to the network.

The storage adapter cooperates with the host operating system executing on the storage system to access data from disks shown in . The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the disks over an I O interconnect arrangement such as a conventional high performance fibre channel FC link topology.

The local storage is a device that stores information within the storage server such as software applications host operating system and data. The storage server loads the software applications and host operating system into the memory as running processes . The processes in one example embodiment include one or more processes associated with the compliance clock service provided by the compliance clock system of . As mentioned above the processes associated with the compliance clock service may be referred as compliance clock daemons. Compliance clock daemons are used to maintain the value of the system wide compliance clock and to propagate the current value of the system wide compliance clock to the volumes within the storage system. As discussed above compliance clock daemons include node compliance clock daemons and a tick daemon. Interactions between compliance clock daemons in a cluster of storage servers as provided by one example embodiment may be described with reference to .

Shown in is a cluster equipped with a compliance clock system that comprises a system wide compliance clock SCC a cluster SCC and a VCC for any volume in the cluster that was designated to store data that is to be retained for a certain compliance period. The cluster comprises a master node that has been designated as a master node for the cluster with respect to an associated compliance clock service and a node . The nodes and include respective management hosts and and respective data blades and . The management host provided on the master node runs a cluster clock daemon while the management host provided on the node runs a local clock daemon . The data blades and run respective tick daemons and .

The tick daemon ticks the system compliance clock SCC by increasing the value of the compliance clock SCC and periodically provides the current SCC value to the cluster clock daemon e.g. via a remote procedure call RPC . The cluster clock daemon updates the received SCC value into a replication database RDB . From the replication database RDB the SCC value is provided to a replication database maintained on the node . The local clock daemon running on the node receives an update notification from the replication database and communicates the updated current SCC value to the tick daemon which then updates the SCC on the node . The dashed line connecting the RDB and the RDB illustrates an RDB replication ring.

In one embodiment communications from a management host to a data blade are performed using a set of customized APIs. For example when a node joins the cluster the cluster clock daemon receives a notification that a new member has joined the cluster. In response the cluster clock daemon issues a customized API call to the data blade to obtain the current value of the SCC stored in the SCC . The RDB is updated with the obtained current value of the SCC. The update of the RDB triggers an update notification to all nodes in the cluster including the node .

An example compliance clock system may be viewed as a collection of functional modules and may be discussed with reference to . As shown in a compliance clock system comprises an initialization module a VCC update trigger a current SCC value detector an updated VCC value calculator a VCC value keeper a SCC reference value keeper a handshake module and a VCC metadata module . The modules of the compliance clock system may be implemented in software hardware or a combination thereof. In one embodiment the modules of the compliance clock system may be implemented by the processor of .

The initialization module may be configured to set a current value of the VCC to a current value of the SCC. The VCC update trigger may be configured to detect an update event e.g. an update of backup data associated with the volume . The current SCC value detector may be configured to determine the current value of the SCC e.g. by accessing the current value of the SCC maintained by a tick daemon. The updated VCC value calculator may be configured to update the current value of the VCC based on the current value of the SCC. The VCC value keeper may be configured to store the current value of the VCC on the volume e.g. in the root directory. The SCC reference value keeper may be configured to store a SCC reference value on the volume and update the SCC reference value with the current value of the SCC. The handshake module may be configured to determine whether the SCC is a trusted SCC prior to authorizing an update to the current value of the VCC e.g. by performing a comparison between of the values stored as compliance metadata on the volume with the corresponding values associated with the SCC. The VCC metadata module may be configured to store compliance clock metadata on the volume. An example operations performed by the compliance clock system may be discussed with reference to .

As shown in in response to a request to create a volume that is a subject to data retention policy operation in a storage system the initialization module of initializes the current value of the associated VCC to the current value of the system wide compliance clock SCC operation and also stores on the volume compliance clock metadata as described with reference to Table 1 above. At operation the VCC update trigger of detects an update event e.g. an update of backup data associated with the volume and the handshake module determines at operation whether the SCC is a trusted SCC utilizing compliance clock metadata stored on the volume. At operation the updated VCC value calculator determines the updated VCC value based on the current value of the SCC and updates the current value of the VCC with the updated VCC value. As explained above with reference to Table 2 the updated value of the VCC may be calculated as the sum of the current value of the VCC and an elapsed time value wherein the elapsed time value is determined by subtracting the SCC reference value corresponding to the value of the SCC at the time of the last VCC update from a current value of the SCC.

As mentioned above in a cluster of storage servers one node may be designated as the master node and the current value of the SCC may be determined based on the node compliance clock process running on the master node. In the event where the master node in a cluster fails another node from the cluster may be designated as the new master node such that the current value of the SCC may be determined based on the node compliance clock process running on the new master node. Designating another node from the cluster may be based e.g. on the order in which the nodes were initialized in the cluster or some other criteria. Example failover operations may be discussed with reference to .

As shown in the method commences at operation where a storage server a node in a cluster of storage servers is designated as a master node for the purposes of maintaining a system wide compliance clock. In one embodiment a data structure may be maintained by the cluster including a list of node entries each node entry indicating whether the associated node is designated as the master node. The tick daemon running on the master node is used to periodically increase the value of the SCC based on hardware ticks operation . At operation a failure of the master node is detected e.g. by utilizing a process running on each of the nodes for determining that a request from one node in the cluster to any other node in the cluster fails with a certain error indication. Another storage server from the cluster is designated as a new master node e.g. based on the order in which the nodes joined the cluster or some other criteria operation . A tick daemon running on the new master node is now used to tick the SCC operation .

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an alpha numeric input device e.g. a keyboard a user interface UI navigation device e.g. a cursor control device a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system with the main memory and the processor also constituting machine readable media.

The software may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. Hyper Text Transfer Protocol HTTP .

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing and encoding a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of embodiments of the present invention or that is capable of storing and encoding data structures utilized by or associated with such a set of instructions. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media. Such media may also include without limitation hard disks floppy disks flash memory cards digital video disks random access memory RAMs read only memory ROMs and the like.

Thus method and system for providing an improved compliance clock service have been described. The techniques described herein may be adapted for use in other systems that include customizable and or complex installation configurations. The embodiments described herein may be implemented in an operating environment comprising software installed on a computer in hardware or in a combination of software and hardware. Although embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

Plural instances may be provided for components operations or structures described herein as a single instance. Finally boundaries between various components operations and data stores are somewhat arbitrary and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the embodiment s . In general structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements fall within the scope of the embodiment s .

