---

title: Real-time speech-to-text conversion in an audio conference session
abstract: Various embodiments of systems, methods, and computer programs are disclosed for providing real-time resources to participants in an audio conference session. One embodiment is a method for providing real-time resources to participants in an audio conference session via a communication network. One such method comprises: a conferencing system establishing an audio conference session between a plurality of computing devices via a communication network, each computing device generating a corresponding audio stream comprising a speech signal; and in real-time during the audio conference session, a server: receiving and processing the audio streams to determine the speech signals; extracting words from the speech signals; analyzing the extracted words to determine a relevant keyword being discussed in the audio conference session; identifying a resource related to the relevant keyword; and providing the resource to one or more of the computing devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09560206&OS=09560206&RS=09560206
owner: American Teleconferencing Services, Ltd.
number: 09560206
owner_city: Atlanta
owner_country: US
publication_date: 20100430
---
This application is related by subject matter to the following concurrently filed patent applications filed on Apr. 30 2010 each of which is hereby incorporated by reference in its entirety International Patent Application Serial No. PCT US2010 033084 entitled Systems Methods and Computer Programs for Providing a Conference User Interface Applicant American Teleconferencing Services Ltd. International Patent Application Serial No. PCT US2010 033096 entitled Conferencing Application Store Applicant American Teleconferencing Services Ltd. International Patent Application Serial No. PCT US2010 033108 entitled Sharing Social Networking Content in a Conference User Interface Applicant American Teleconferencing Services Ltd. International Patent Application Serial No. PCT US2010 033122 entitled Distributing Information Between Participants in a Conference via a Conference User Interface Applicant American Teleconferencing Services Ltd. International Patent Application Serial No. PCT US2010 033137 entitled Record and Playback in a Conference Applicant American Teleconferencing Services Ltd. U.S. patent application Ser. No. 12 771 979 entitled Conferencing Alerts First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 920 entitled Participant Profiling in a Conferencing System First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 827 entitled Location Aware Conferencing First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 789 993 entitled Systems Methods and Computer Programs for Providing a Conference User Interface First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 790 057 entitled Conferencing Application Store First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 790 110 entitled Sharing Social Networking Content in a Conference User Interface First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 772 023 entitled Managing Participants in a Conference via a Conference User Interface First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 772 069 entitled Managing Conference Sessions via a Conference User Interface First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 790 153 entitled Distributing Information Between Participants in a Conference via a Conference User Interface First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 772 068 entitled Participant Authentication via a Conference User Interface First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 172 entitled Location Aware Conferencing with Participant Rewards First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 668 entitled Location Aware Conferencing with Graphical Representations That Enable Licensing and Advertising First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 253 entitled Location Aware Conferencing with Graphical Interface for Communicating Information First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 942 entitled Location Aware Conferencing with Entertainment Options First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 366 entitled Location Aware Conferencing with Graphical Interface for Participant Survey First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 790 193 entitled Record and Playback in a Conference First Named Inventor Boland T. Jones U.S. patent application Ser. No. 12 771 522 entitled Transferring a Conference Session Between Client Devices First Named Inventor Boland T. Jones and U.S. patent application Ser. No. 12 771 742 entitled Location Aware Conferencing with Calendar Functions First Named Inventor Boland T. Jones .

Currently there are a number of conference solutions for enabling people to conduct live meetings conferences presentations or other types of gatherings via the Internet the public switched telephone network PSTN or other voice and or data networks. Participants typically use a telephone computer or other communication device that connects to a conference system. The meetings include an audio component and a visual component such as a shared presentation video whiteboard or other multimedia text graphics etc. These types of convenient conference solutions have become an indispensable form of communication for many businesses and individuals.

Despite the many advantages and commercial success of existing conference meeting grouping or other types of gathering systems there remains a need in the art for improved conference meeting grouping or other types of gathering systems methods and computer programs.

Various embodiments of systems methods and computer programs are disclosed for providing real time resources to participants in an audio conference session. One embodiment is a method for providing real time resources to participants in an audio conference session via a communication network. One such method comprises a conferencing system establishing an audio conference session between a plurality of computing devices via a communication network each computing device generating a corresponding audio stream comprising a speech signal and in real time during the audio conference session a server receiving and processing the audio streams to determine the speech signals extracting words from the speech signals analyzing the extracted words to determine a relevant keyword being discussed in the audio conference session identifying a resource related to the relevant keyword and providing the resource to one or more of the computing devices.

Another embodiment comprises a computer system for providing real time resources to participants in an audio conference session. The computer system comprises a conference system and a server. The conference system establishes an audio conference session between a plurality of computing devices connected via a communication network. The server is configured to communicate with the conference system and the plurality of computing devices via the communication network. The server comprises a processor a memory and a pre processing engine a speech to text conversion engine a relevance engine and a resources engine stored in the memory and executed by the processor. The pre processing engine comprises logic configured to receive an audio stream associated with one or more of the computing devices the audio stream comprising a speech signal and extract the speech signal from the audio stream. The speech to text conversion engine comprises logic configured to extract words from the speech signal. The relevance engine comprises logic configured to receive the extracted words from the speech to text conversion engine and determine a relevant keyword or topic being discussed in the audio conference session. The resources engine comprises logic configured to identify a resource related to the relevant keyword or topic and provide via a graphical user interface the resource to the one or more computing devices.

Various embodiments of systems methods and computer programs are disclosed for providing a visually engaging conference experience to participants of a conference via a conference user interface presented to a client device. The conference interface may be used for conferences meetings groupings or other types gatherings collectively a conference with a system that provides the conference interface for a conference being referred to herein as a conferencing system for any variety of purposes of one or more people groups or organizations including combinations thereof and collectively referred to as participants with or without an audio component including without limitation enabling simulcast audio with such conference for the participants. As mentioned above and described below in detail with reference to one or more of the embodiments illustrated in the drawings the conference interface may be configured to provide any desirable content and or functionality and may support various user interface and conferencing features. In some embodiments the conference interface comprises a computer simulated virtual conference location that is presented to one or more of the participants of an audio conference via a graphical user interface.

The client devices may comprise any desirable computing device which is configured to communicate with the conferencing system and the server via the networks . The client device may comprise for example a personal computer a desktop computer a laptop computer a mobile computing device a portable computing device a smart phone a cellular telephone a landline telephone a soft phone a web enabled electronic book reader a tablet computer or any other computing device capable of communicating with the conferencing system and or the server via one or more networks . The client device may include client software e.g. a browser plug in or other functionality configured to facilitate communication with the conferencing system and the server . It should be appreciated that the hardware software and any other performance specifications of the client device are not critical and may be configured according to the particular context in which the client device is to be used.

The conferencing system generally comprises a communication system for establishing an audio conference between the client devices . The conferencing system may support audio via a voice network and or a data network. In one of a number of possible embodiments the conferencing system may be configured to support among other platforms a Voice Over Internet Protocol VoIP conferencing platform such as described in U.S. patent application Ser. No. 11 637 291 entitled VoIP Conferencing filed on Dec. 12 2006 which is hereby incorporated by reference in its entirety. It should be appreciated that the conferencing system may support various alternative platforms technologies protocols standards features etc. Regardless of the communication infrastructure the conferencing system may be configured to establish an audio connection with the client devices although in some embodiments the audio portion may be removed. As illustrated in the conferencing system may establish the audio conference by combining audio streams associated with the client devices respectively.

In the embodiment of the server comprises a virtual conference location application that generally comprises the logic or functionality for configuring and presenting via the graphical user interface a virtual conference location or other conference user interface with the audio conference to the client devices . One of ordinary skill in the art will appreciate that the virtual conference location application and any associated or other modules described herein may be implemented in software hardware firmware or a combination thereof. In one embodiment the systems are implemented in software or firmware that is stored in a memory and that is executed by a suitable instruction execution system. In software or firmware embodiments the logic may be written in any suitable computer language. In hardware embodiments the systems may be implemented with any or a combination of the following or other technologies which are all well known in the art a discrete logic circuit s having logic gates for implementing logic functions upon data signals an application specific integrated circuit ASIC having appropriate combinational logic gates a programmable gate array s PGA a field programmable gate array FPGA etc.

As mentioned above the virtual conference location comprises a computer simulated conference location that is presented to the client devices . The virtual conference location may be presented to the participants via a graphical user interface . The virtual conference location may store in an associated memory various forms of data for managing and presenting the computer simulated conference locations. In the embodiment illustrated in the virtual conference location comprises graphical representations of one or more virtual location views . The same virtual location view may be provided to each of the participants . In some embodiments the participants may customize a virtual location view or other aspects of the conference interface in which case the system may present different location views across the client devices . The virtual conference location may further comprise graphical representations of the participants as well as user related information associated with each participant . In this manner the virtual conference location graphically represents the participants on the audio conference in a simulated conference location via the GUI .

It should be appreciated that the graphical representations of the participants may comprise for example a 2 D graphic a 3 D graphic an avatar an icon an uploaded image or any other suitable graphics emblems designs or other marks each a graphical representation for uniquely or otherwise identifying the participants . The user related information e.g. name address email telephone number profile information etc. may be displayed in association with or separately from the graphical representations . illustrates an exemplary implementation of a virtual conference location presented in the graphical user interface as one of a number of possible embodiments of a conference interface. In the embodiment of the virtual location view comprises an image of an office conference table with chairs and a background of a golf course. The participants are visually represented with participant objects e.g. tiles and . The image may generally comprise any background or visual backdrop or functionality for the tiles . The graphical representation in the tiles comprises a picture or photograph of the corresponding participant although any content audio video media or functionality may be presented. The graphical representation in the tiles comprises an avatar like image which may be uploaded to the server or selected and or customized from predefined images.

As further illustrated in the embodiment of the conference interface may further comprise various user interface control s for enabling a participant to access any of the following or other features a drop down menu for selecting and or changing the virtual conference location view etc. an invite control for inviting additional participants to the audio conference a lock room control for locking the current conference an audio control for managing aspects of the audio conference e.g. recording the audio conference a volume control a mute unmute control and an account control for accessing and managing the participant s account with the conferencing system .

As described below in more detail with reference to conference alert module s support a conference alert or notification feature which may be provided to client devices . An alert application or other software residing on a client device may be configured to notify the host that a conference e.g. audio conference an online conference a virtual conference location or other conference interface has started and manages who has joined by showing the name and number of participants via for example a push from the application. As participants join the notification may maintain a count of the number of participants . It may also allow the host to quickly enter the conference from the application modify settings prior to an audio conference starting and provide easy access to account numbers. The application may display for example an icon or other user interface control or feature in a system application tray of the client device which exposes a menu or other functionality that enables users to modify certain settings configurations options etc.

While the conference alert application is running it communicates with the conferencing infrastructure using for example a conferencing API . The communications may comprise for example status checks of the user s conferencing bridges or locations to determine if there are any active participants . In the event that someone has entered the user s location or joined one of their bridges via a phone this activity may be transmitted to the alert application as a status update. The update may include other information about the newly joined participant such as the incoming phone number email address name or other identifiable details e.g. user related information that may determined using for example a caller ID database.

The application alerts the user by displaying a message on a display of the client device . The message may appear for a pre determined amount of time which may be configurable in the application s settings. The content of the message may further include the details transmitted in the status update mentioned above. The message display may also provide a mechanism for the user to acknowledge the message by either cancelling or joining a location. If the user chooses to cancel a particular message subsequent messages will appear as new members join a location or audio bridge with a running tally indicating the total number of participants. If the user chooses to join their own location the alerts will cease until the event has ended.

The in conference participant identification module s generally support various techniques for developing and operating a database e.g. participant ID database for identifying participants in an audio conference . The conferencing system and or servers may employ caller identification ID databases to capture information about who has dialed into or otherwise accessed the audio conference . For callers who dial in without joining via a web presence the system can capture the dial in number ANI . There are numerous databases that store information such as name location etc. about that ANI. In order to better identify the caller in the audio conference data may be pulled from various databases and made visible in the virtual conference location . Once obtained that data may be stored to be used when that caller dials in again. In this manner the virtual conference location application may create and manage a proprietary caller ID database for participants which may provide more information about them.

As illustrated in the embodiment of the virtual conference location application may obtain information about participants by sending a request to the client device s or otherwise enabling the participants to submit information either about themselves or other participants to the virtual conference location application . For example the GUI may include various UI mechanisms for enabling the user to provide the information . During the audio conference a participant may recognize an unidentified participant s voice and provide appropriate contact information which may then be stored in the database via interface . Participants may also specify additional information about themselves by for example supplementing user info or providing new information. This information may be specified manually or the participants may authorize the server to access user information stored in remote servers. For example a participant may authorize the server to access data stored on a social networking site or the information may automatically be obtained via for example search engine s based on the currently available user info . As illustrated in user information may be obtained from caller ID databases or other server s via requests and responses between the server and the databases . The information obtained from the databases or servers may be stored in the participant identification database via interface .

At decision block the conferencing system may determine whether the participant is joining the audio conference via an incoming voice call. If the participant is not joining the audio conference via an incoming voice call e.g. the participant is joining via a web presence the system may request that the participant provide participant profile information block . The participant profile information may comprise any desirable parameters identifying the participant or other information related to the participant e.g. the parameters identified in the exemplary screen shots of . At block the conferencing system receives the specified parameters and at block stores them in a database e.g. database . illustrates an embodiment of a data structure for storing various participant profile parameters associated with a particular participant . Each participant in an audio conference may be identified with a unique participant identifier and may include any of the following or other parameters a name a title an email address a phone number a resident and or home address a current location which may be obtained by GPS coordinates from the client device from an IP address etc. social networking profile parameters a graphical representation a virtual location view and conference applications that the participant has purchased selected or are otherwise accessible to the participant during an audio conference .

At block the conferencing system may present a conference user interface to the computing device associated with the participant as well as the other devices participants in the audio conference . To identify the participant the conference user interface may display one or more of the specified participant profile parameters in association with an audio indicator . The audio indicator comprises a user interface control that indicates when the participant is speaking. In this regard each participant identifier may have a corresponding audio indicator . In an embodiment the conference user interface may be configured as a virtual conference location as described above although it should be appreciated that the term conference user interface or conference interface refers to any graphical user interface associated with the audio conference an online conference or any other conference which presents information data multimedia etc. and or functionality or applications e.g. conferencing applications to the participants.

The profile information may comprise one or more of the participant profile parameters. The audio indicator visually identifies when the associated participant is speaking during the audio conference . By monitoring the audio streams for certain audio characteristics the conferencing system may determine when a participant is speaking. The audio stream may be logically mapped to the corresponding audio indicator according to the participant identifier and or the audio indicator identifier . When a participant is speaking the audio indicator may be displayed in a first visual state such as by graying out the audio indicator . When the participant is speaking the audio indicator may be displayed in a second visual state such as by blacking out the audio indicator . It should be appreciated that any visual and or audio distinctions may be employed to identify a speaking participant in the conference interface.

The business card component comprises a user interface control that when selected displays further information about the participant . The business card component may trigger the display of any additional participant profile parameters. In the embodiment illustrated in the business card component flips the object to display additional parameters . As further illustrated in and at block the object may further comprise a participant profile control which comprises a user interface control for enabling the participants to edit their own or another participant s participant profile parameters during the audio conference .

Referring again to if the participant is joining the audio conference via an incoming voice call decision block a caller ID database resource or service may be used to automatically identify the originating telephone number block . If an originating telephone number is not available the participant may be added to the audio conference and displayed in the conference user interface as an unidentified participant . Where an originating telephone number is available at decision block the number may be used as an input to a look up table database service etc. to determine additional information. In an embodiment the originating telephone number may reference a stored participant profile such as the data structure . If additional information is not available either in a stored participant profile or a response the participant may be identified in the conference user interface based on the originating telephone number and the associated audio indicator . Regardless the availability of participant information telephone numbers etc. at block the objects may be presented with the participant profile edit control .

It should be appreciated that the participant profile control provides a convenient mechanism for enabling participants to specify during the audio conference additional profile information about themselves and or other participants via the conference user interface. In this manner the conferencing system may develop a proprietary database e.g. participant database for identifying participants . illustrates an embodiment of a simplified method for operating the participant profile control to develop or supplement a participant database . At block a first participant and a second participant join an audio conference . At block the conference user interface displays an object associated with the first and second participants . The objects may comprise no profile information i.e. an unidentified participant or any level of profile details as described above. Regardless the existence of or level of profile information each object displays a corresponding audio indicator to indicate when the participant is speaking. Each object may further display a corresponding participant profile control for specifying information about the participant . The participant profile control may be selected decision block by any participant in the audio conference enabling participants to specify information about themselves or any of the other participants. This mechanism may be particularly useful when for example the participant is an unidentified participant the participant specified minimal information at log in or there is otherwise minimal and or incorrect profile information.

For example assume that a first participant is an unidentified participant. During the audio conference a second participant may recognize the identity of the first participant based on the speaker s voice and the state of the audio indicator in the object . The second participant may select the participant profile edit control in the object associated with the first participant . In response the conference user interface may enable the second participant to specify profile parameters such as those described above. When selected the conference user interface may prompt the participant to enter known parameters. In another embodiment the conference user interface may be configured to enable the second participant to specify information via for example a search engine results page a local or remote contact application a social networking system or any other source of profile information. At block the specified profile parameters may be linked to the participant identifier . At block the conferencing system receives the specified profile parameters and at block stores the parameters in the participant database according to the participant identifier . At block the specified parameters may be added or updated to the participant object displayed in the conference user interface.

Referring again to and the various modules located in the server memory the location based services module s comprise the logic and or functionality for supporting various location based services provided by the conferencing system . As illustrated in the embodiment of the location based module s may receive location information from the client devices arrow . It should be appreciated that the location information may be obtained in various ways. As described below in more detail when a participant joins an audio conference an online conference or otherwise accesses the conferencing system the location information may be captured from GPS information caller ID IP address sign in profiles etc.

The client device may include a GPS transceiver that acquires GPS signals. When the client device accesses the conferencing system the GPS coordinates may be passed to the location based module s . The conferencing system may also obtain caller ID information in the manner described herein. The caller ID information may be automatically obtained by the conferencing system when the participant joins an audio conference . The conferencing system may perform various look ups to determine the location associated with the telephone number. The conferencing system may translate the area code into a corresponding geographic area. In other embodiments the conferencing system may use the telephone numbers as an input to a look up table web service query etc. to determine if there is an associated location. The location may be a stored current location associated with a participant identifier e.g. current location . The stored current location may be a previously stored location specified by a user or acquired as described herein. The conferencing system may also query the client device for or otherwise obtain an IP address of the client which may be used to determine the current location of the device.

In additional embodiments the location information may be obtained from the participant s social networking data via a request and response to a social networking system . For example as described below the participant may be a member of the social networking system and provide location information to a communication channel . This information may be automatically acquired by the social networking system from the client device or specified by the user. Regardless of the manner in which the location information is acquired by the social networking system it should be appreciated that the conferencing system may obtain this information via the API and associated social networking integration module s as described below.

As illustrated in the conferencing system may implement various software mechanisms to obtain the location information from the client device . In the embodiment of the conferencing system comprises a Participant Manager Service a Location Service and a Caller ID Service . In operation the computing device may access the conferencing system by visiting a particular web site. The Participant Manager Service may send a getClientIPAddress message to the computing device . In response the client device may send a ClientIP response containing an IP address associated with the device. It should be appreciated that the IP address may be associated with the client device or other communication devices associated with the client device . The Participant Manager Service may send a getLocationbyIP request to the Location Service which returns a response to the client device . The response may specify location according to for example latitude and longitude or any other means.

In another embodiment the client device may access the conferencing system and send a Login Request to the Participant Manager Service . The Participant Manager Service may authenticate the participant . If the login is successful the Participant Manager Service may send a getClientPhoneNumber request to the client device . The participant may provide the information via for example a conferencing user interface such as those described herein or others. The entered telephone number may be provided to the Participant Manager Service as a PhoneNumber response . The Participant Manager Service may send a getLocationbyPhoneNumber request to the Caller ID Service which contains the entered phone number. The Caller ID Service may provide corresponding location information to the client device in a response .

It should be appreciated that additional information may be requested from the client device . For example the Participant Manager Service may send a getClientCurrentLocation request and receive a City State response containing the entered city state zipcode etc. The Participant Manger Service may send a getLocationByCity request which may include any of the entered information to the Location Service . The Location Service may provide corresponding location information to the client device in a response . Regardless of the manner in which the location information is obtained the client device may send a getMapParticipantLocation request to a map service . The map service may return a showMapWithParticipantDetails response . The conferencing system may perform this process for each participant and then present the combined location information in a map view . An exemplary embodiment of a map view is illustrated in although it should be appreciated that the location information may be presented in the conference interface in any manner.

Based on the location information the conference interface may customize the presentation of the interface with location based information associated with one or more participants . For example the conferencing system may provide a unique conference interface to each participant based on the participant s corresponding location. The customization may involve providing location based resources services functionality etc. to the participant e.g. news weather traffic events etc. . Furthermore in some embodiments a virtual location view may be selected by the conferencing system to match the location information obtained from the participant e.g. a participant in San Francisco may be presented a virtual location view including the Golden Gate Bridge .

In further embodiments the location information may be used to provide an intelligent conference dial out and or dial in feature which dynamically provides guidance to the participants on how to join the audio conference e.g. via a login screen or setup screens or automatically configures an appropriate dial out from the conferencing system to the participant . When a participant accesses the conferencing system the location information may be obtained. Based on the participant location the conferencing system may recommend a dial in number taking into consideration customer data and or voice plans and carrier provider rates or automatically determine a desirable dial out number. For example based on this information the conferencing system may select a dial in number for a more cost effective incoming call from the participant . Furthermore it should be appreciated that the location information may be used to present an optimal e.g. lowest cost highest quality dial in option as well as the optimal dial out. The conferencing system may dial out to the participant after checking for example a routing database and then initiating the dial out from the optimal node on the network based on the acquired location information.

The virtual conference location application or other conference interface applications may support a real time speech to text functionality that may automatically convert speech from the audio streams into text. As described below in more detail the output text is processed by one or more algorithms to identify keywords topics themes or other subject matter being discussed during the audio conference . The keywords are used as input to a search engine knowledge base database etc. for the purpose of identifying resources related to the keywords which may be presented in real time to the participants during the audio conference via the conference interface e.g. virtual conference location . In this manner the participants may be provided with additional materials information educational material etc. collectively referred to as resources based on the subject matter being discussed during the audio conference . It should be appreciated that the resources may be embodied in any desirable format including for example audio video graphics text or any other medium presentable via the conference interface and or the audio conference session.

As illustrated in the embodiment of the server may comprise a speech to text conversion engine that processes the audio streams from the conferencing system . The speech to text conversion engine may output the text to one or more algorithm s via interface . The algorithm s may be configured to identify based on the words spoken in the audio conference relevant keyword s or topics of interest being discussed. The identified keywords or other identified terms i.e. output of the algorithm s may be received by a resources engine via interface . The resources engine may be configured to select additional information data or other resources related to the identified terms and provide the information to the participants in the conference interface. The resources engine may make requests to and receive responses from a resources database or knowledge base . The resources engine may also make calls to and receive responses from a search engine via for example an API .

The server comprises one or more functional processors for implementing aspects of the overall speech to text conversion process. It should be appreciated that the functional processors may be implemented in hardware software firmware or any combination thereof. The overall speech to text conversion process and any associated processes are preferably performed in real time during the audio conference . In an embodiment the functional processors comprise a pre processing engine a speech to text conversion engine a relevance engine and a resource engine . The pre processing engine communicates with the conference system which may be integrated with the server s or remotely located. The pre processing engine receives the audio streams from the conference system extracts a speech signal from each audio stream and provides the speech signals to the speech to text conversion engine . The speech to text conversion engine receives the speech signals extracts words from the speech signals and provides the words to the relevance engine . It should be appreciated that any desirable conversion algorithms models processes etc. may be used to quickly and accurately extract the words .

The relevance engine processes the words according to for example heuristic algorithms to determine relevant keywords spoken in the audio conference . The relevance engine provides the relevant keywords to the resource engine . It should be appreciated that the relevant keywords may represent for example frequently spoken words statistically significant words topics etc. The keywords may comprise one or more of the words or in alternative embodiments may comprise related words based on the subject matter of the audio conference .

The resource engine receives the keywords and determines resources . The resources are selected with the purpose of providing to the participants during the audio conference any desirable information material data or other subject matter related to the keywords . As illustrated in and described below in more detail the resources may be selected from a remote search engine and or a local resources database by sending a query and receiving a response to the query .

At block the audio streams are received and processed by for example a pre processing engine which converts the audio streams into the corresponding speech signals . At block words are extracted from the speech signals using any suitable algorithms for converting the speech signals into computer readable data identifying the words . The words may be extracted in a real time stream in batch mode or otherwise. At block the words are analyzed either individually or in groups to determine relevant keyword s being discussed in the audio conference session. The relevant keyword s may comprise an identification of frequently spoken word s determination of a particular topic or otherwise identify meaningful subject matter being spoken in the audio conference session and or related to one or more extracted words . In this regard it should be appreciated that in an embodiment a keyword may comprise an extracted word which is repeated a certain number of times either in absolute terms or relative to a period of time e.g. a word occurrence or usage density . A keyword may also comprise an extracted word which appears to be of particular importance based on for example the identity of the participant speaking the extracted word the waveform characteristics of the speech signal etc.

The keyword s may be determined using various algorithms. In the embodiment illustrated in the keyword s are determined based on a relevance score that is calculated as the words are analyzed by for example the relevance engine . At block one or more extracted words are identified. The extracted word s may be identified by a word identifier stored in a database. In this regard it should be appreciated that the database may store a record or other data structure for maintaining data associated with a relevance score for one or more words .

Referring again to as words are extracted at block a timestamp may be generated for each instance of the extracted word and stored in the associated record according to the word identifier . At block the counter may be set or incremented. At block the identity of the speaker may be determined and stored in the database. At block a relevance score may be calculated according to various desirable algorithms based on one or more of the following or other types of data timestamps speaker identifiers and counter . The relevance score at any point in the audio conference may be stored in real time score .

At decision block it may be determined whether the relevance score exceeds a predetermined or calculated threshold. If the threshold is not exceeded flow returns to block . If the threshold is exceeded at block it is determined that the extracted word is relevant and the system attempts to locate a desirable resource related to the extracted word . At block the resources are provided to the participants in real time during the audio conference .

It should be appreciated that in an embodiment the resource s may be identified by for example matching the extracted words to predetermined resources according to resource identifiers associated with the extracted word . The resource identifiers may link to records in the resources database . In another embodiment a resource may be determined by querying the resources database or a search engine query and response .

Various embodiments of the conference app store functionality will be described with reference to . The conference app store functionality generally comprises an online store or marketplace referred to as a conferencing application store or conferencing app store that offers various audio and or web conferencing applications or other desirable applications collecting referred to conferencing applications or conferencing apps to participants . The conferencing app store may be provided to participants via a conference interface e.g. conferencing user interface presented to the computing devices during the audio conference . The conferencing applications may include for example web based applications widgets or other computer programs made available to participants via the conferencing system and or servers . The conferencing applications may be provided by a host associated with the conferencing system or in some cases may also be provided by and or developed by third party developers . In these embodiments the conferencing system may include an associated API e.g. API and or a software developer kit SDK for enabling developers to develop various conferencing applications that may be included in the conferencing app store and made available to the participants .

As illustrated in the conferencing application store may be integrated with a social networking system such as those described below in connection with or others. The social networking system may include various social networking applications that are provided to members . In an embodiment the conferencing system may be configured to communicate with the social networking system e.g. via API API etc. access the social networking applications and include access to the social networking applications in the conferencing application store. In this manner a member who is also a participant in an audio conference may conveniently access their social networking applications via the conferencing system . Similarly the social networking system may access the conferencing system and make them available to members via the social networking website .

To facilitate certain aspects of the conferencing application store the conferencing system may comprise a conference application database a participant database a participant application control module and a conference user interface . The conference application database may store information related to the conferencing applications such as for example links to the application code or the application code itself. In this regard it should be appreciated that the conferencing system need not but may store the code associated with the conferencing applications. In some embodiments the conferencing applications may be served by for example a third party system. Regardless within the conference application database each conferencing application may be identified by a unique application identifier.

The participant database may store information related to the participants and their corresponding conferencing applications. An exemplary data structure is illustrated in . Each participant in an audio conference may be identified with a unique participant identifier and may include any of the following or other parameters a name a title an email address a phone number a resident and or home address a current location which may be obtained by GPS coordinates from the client device from an IP address etc. social networking profile parameters a graphical representation a virtual location view conference applications and an account profile . The conferencing applications may be identified with a corresponding unique application identifier as described above. The account profile may include account information associated with the participant including for example account numbers credit card numbers etc. to facilitate online transactions that enable the participant to purchase conferencing application.

The participant application control modules comprise the logic functionality etc. for performing various features associated with the conferencing application store. The participant application control module s enable the conferencing system to manage which conferencing applications a user has purchased or selected and presents the appropriate applications via the conference interface when the user joins an audio conference . In this regard it should be appreciated that the conferencing system may provide enterprise level conferencing services to corporations organizations government agencies etc. In such embodiments the control modules may manage access permissions etc. for enterprise employees. For example the enterprise may specify which conferencing applications a particular employee may access based on title organization role organizational level employee ID etc. This information may be stored in an enterprise database and used by the control modules to select which conferencing applications are to be made available to the employee.

As illustrated in the conferencing app store component may display a categories menu and a top apps menu . Categories menu comprises a scrollable list displaying a plurality of categories. Each category may be selected using a category object or control . When selected the control may present a further user interface for enabling the participants to browse applications in that particular category. The conferencing application store may provide other browsing navigation or other mechanisms for enabling the participants to view the conferencing applications in the conference interface. In one embodiment a search engine may be provided via a search text box displayed in the conference user interface . The conferencing application store may also implement a recommendations feature that automatically displays suggested applications to participants based on for example current applications usage characteristics profile parameters social networking profiles etc. In further embodiments the conferencing application store may enable the participants to recommend or share conferencing applications with other participants and or members .

The top apps menu may display another scrollable list of application objects organized based on for example a ranking algorithm. Each application object is associated with a further user interface screen e.g. component for displaying information about the corresponding conferencing application. As illustrated in the embodiment of when selected one or more of the following types of information may be displayed an application title a description of the conferencing application a user ranking one or more screen shots of the conferencing application and comments provided by other participants . Anywhere within the conference user interface an add app object may be displayed or otherwise presented. The add app object provides a user interface control for enabling the participant to select the corresponding conferencing application. When selected the conferencing application may be automatically added to the participant s profile and made available to the participant . Some conferencing applications may be made available for purchase from the host of the conferencing system or the third party developers while others may be free. If the conferencing application is for purchase the add app object may be linked to an online transaction functionality for enabling the participant to purchase the application. In other embodiments purchases may be automatically processed according to a stored account profile and made available to the participant.

At block the participant application control module determines the conferencing applications associated with the participant identifier . The participant application control module may access this information from a database e.g. conference app database participant database and or from a social networking system . As mentioned above in the enterprise context the conferencing applications associated with an employee may be specified according to permissions roles etc. provided by the enterprise. In this manner at block the conferencing applications are determined based on the enterprise related information.

At block the conference user interface is presented to the computing device associated with the participant and the associated conferencing applications are made available for use. The conference user interface may display the available conferencing applications in for example the my apps component with a corresponding application control . The application control may be selected to launch the conferencing application configure application settings share the application or access other features.

At blocks and the participant application control module may automatically launch one or more of the available conferencing applications. Alternatively the participant may manually launch a conferencing application by selecting the corresponding application control .

The participant may select one or more of the available conferencing applications in the conferencing application store. At decision block the participant application control module may determine that one of the application objects has been selected by the participant . The selected conferencing application may be launched or made available for launching by the participant. In some embodiments to access the conferencing application the participant may be required to purchase it. At block the participant application control module may determine the account identifier associated with the participant and authorize the purchase block . At block the conferencing application may be added to the participants profile.

Referring again to and the software modules stored in memory the participant configuration module s generally comprise the logic or functionality for enabling participants to join the conference and or configure their user related information via the conference interface. is a flowchart illustrating the architecture operation and or functionality of an embodiment of the virtual participant configuration module s . At block the server receives a request from a client device . The request may originate from or be initiated from for example a link embedded in an electronic message sent to a participant by the host. By selecting the embedded link the client device may access the server and initiate a login and or setup procedure . At block the server may prompt the participant to select a graphical object to visually represent the participant in the conference interface. At block the server may prompt the participant to provide profile or contact information e.g. user related information . At block the server may receive the user selections and or information. illustrates an exemplary login screen for enabling the participants to join the conference. The login screen comprises a first name text field a last name text field an email address text field and a phone number text field. The login screen also enables the user to request that the server and or the conferencing system initiate an outgoing call to the user to join the audio conference .

Various embodiments of virtual location view s are illustrated in . illustrates a participant setup screen for enabling the participants to configure a user profile. illustrates a host setup screen for enabling the host to configure a conference and customize a profile. illustrates an exemplary conference location view of the conference. illustrate an exemplary tile view of the virtual conference. In the embodiments of the tiles are arranged in a grid format. The conference interface further comprises various selectable side panels. An attendees panel may display the participants in a list format along with any desirable user information. A chat panel may enable the participants to chat during the audio conference . A map panel may display the locations of the participants in a map view. illustrates an exemplary theatre view for the conference interface which may be desirable for conferences with a relatively large number of participants . In this embodiment participants defined as presenters may be displayed on a stage and the other participants may be displayed in the seats of the theatre. In the theatre view the participants may be presented in a default state without any contact information to reduce visual clutter although the contact information may be accessed by a suitable user interface command e.g. a mouse over mouse click hot key etc. . illustrate an alternative embodiment of a conference interface in which the virtual location comprises a conference room environment with the participants arranged around the conference table.

It should be appreciated that the location views may be stored in a database which is accessible to one or more of the module s stored in memory . The location views database may be leveraged to provide various advertising campaigns to advertiser server s . For example advertisers may desire to provide product placement advertisements or other advertisements in the virtual conference location . The server may manage these advertisements via the database . One of ordinary skill in the art will appreciate that the database may further support licensed assets that are also provided in the virtual conference location during the audio conference . For example the virtual conference location may be customized to resemble a distinctive setting such as corporate boardroom a host s office or otherwise present licensed assets in the location view .

The conferencing system may license the assets from third parties and offer them for purchase by participants for use in a virtual conference location . A licensed asset may comprise a licensed location for the virtual conference location or graphics audio video items etc. that may be licensed from third parties and presented in a location view . As an example a licensed asset may include displaying a particular celebrity as a participant displaying artwork e.g. wall paintings sculptures etc. in the location view . Although not necessary to be considered licensed assets it should be appreciated that the licensed assets may comprise any embodiment of intellectual property rights in any medium that are capable of being presented in the virtual conference location .

The conferencing system may be configured to support any desirable conferencing system such as for example a teleconferencing system a VoIP based Voice Over Internet Protocol system a web based or online conferencing system or any other suitable conferencing platform or system. illustrate several exemplary non limiting embodiments of VoIP conferencing systems or platforms for supporting the audio portion of the conference which may be integrated with the conference interface. The VoIP conferencing systems may be configured to readily handle different protocols load balance resources and manage fail over situations

The bridge is SIP protocol enabled as illustrated by reference numeral s . A control layer SIPSHIM may comprise an implementation of a B2BUA allowing the bridge application to interact with the caller and the media servers through generic higher level commands rather than dealing directly with SIP protocol and SIP signaling events.

When a PSTN user calls into a conference the call is routed through a gateway through the proxy and to the VSD . The VSD plays a greeting and asks the user for a passcode. Different passcodes may be used to differentiate the conference leader for a given conference as well as to select a particular conference. These passcodes are validated by the DDS at the request of the VSD . Based on the DNIS ANI passcode or any combination of these customer defining code a specific greeting may be selected by the VSD rather than playing a generic greeting. Next the VSD asks the ACS which bridge the conference is assigned to. The VSD then transfers the caller to the appropriate conferencing bridge where the caller s media is joined to a conference.

The back to back user agents allow the system to handle failures in conferencing resources. The call from the telephone is terminated at the first user agent . If a media server stops functioning or gives indication of a pending failure failure mode the second user agent is instructed to reroute the call to another media server . The back to back user agents also allow the system to handle different protocols. The first user agent generally receives SIP protocol information but the second user agent can use a different protocol if that is convenient. This allows the system to interoperate between resources that use differing protocols.

It should be appreciated that the systems connected to the SIP BOC channels may be considered part of the conference control system while those systems connected to the RTP or media data streams can be considered to be part of the data portion of the conference system.

This approach minimizes audio latency by having a common focal point for all child conferences to converge. However this approach may use more linking ports on the parent conference. Hence the initial conference may be deprecated to be a child conference while the second conference is assigned to be the parent or step parent and thus the media for all conferences is linked to the second conference as the focal point. When instantiating the second conference sufficient ports may be reserved to allow linking further child conferences in the future.

This approach of linking conferences may also apply where large numbers of callers are located in different geographical regions or possibly on different types of networks such as a combination of standard VoIP network or a proprietary network but these need to be linked together. Rather than having all callers connect to a single location each region or network could connect to a regional bridge then the bridges and the media are linked together. This minimizes audio latency for callers in the same region and may also reduce media transport and or conversion costs. Each region or network could also use parent and child conferences as needed and only the two parent or step parent conferences in different regions or networks would have their media linked together.

During the call the state of the conference and of individual users can be controlled through DTMF by the caller or from any other mechanism that allows a user to access the bridge directly or indirectly such as a web based interface that ties to the bridge through the back office. The bridge will subsequently control the media server s in use.

For both the VSD and the conferencing bridge when the caller presses a digit on his phone the digit press may be passed on as in band tones within the RTP audio media stream or may optionally be converted by the gateway to a telephony event signaling protocol that is carried inside the RTP. In either case the digit press is detected by the media server and reported to the VSD or bridge application. The above describes the basic call flow of typical conference user.

SIP Session Initiation Protocol as defined primarily by IETF Standard RFC3261. SIP is an application layer control protocol that can establish modify and terminate multimedia sessions such as Internet telephony calls.

INVITE a SIP Request method used to set up initiate or modify a SIP based communication session referred to as a SIP dialog .

SDP Session Description Protocol. An IETF protocol that defines a text based message format for describing a multimedia session. Data such as version number contact information broadcast times and audio and video encoding types are included in the message.

ACK Acknowledgement. A SIP Request used within the SIP INVITE transaction to finalize the establishment or renegotiation of a SIP session or dialog .

NOTIFY a SIP Request method that is used to convey information to one SIP session about the state of another SIP session or dialog .

REFER a SIP Request method that is used to transfer one end of a SIP session to a different SIP destination.

Sipfrag SIP fragment. A fragment of a SIP message such as a Response code from another SIP session that is sent as part of the body of a SIP NOTIFY message.

A conferencing system such as those described above or other conferencing systems may interface with a social networking system to provide various enhanced communication features. illustrates a computer system comprising a conferencing system and a social networking system that may communicate with client devices via a communication network . In the embodiment of the conferencing system is configured in the manner described above and comprises one or more servers social networking integration module s a conference interface and one or more datastore s . As described below in more detail the social networking integration module s enable the conferencing system to communicate with the social networking system via for example an application programming interface API . The conferencing system and or the social networking system may access data applications or any other stored content or functionality associated with the respective systems.

It should be appreciated that the social networking integration module s may be configured to interface with any desirable social networking system . However to illustrate the general principles of the integrated systems various exemplary embodiments of a social networking system will be described.

The social networking system generally comprises one or more server s for providing a social networking website to client devices via for example a client or web browser . The social networking system may expose an application program interface API to other computer systems such as the conferencing system . The API enables third party applications to access data applications or any other stored content or functionality provided by the social networking system to members .

The social networking system offers its members the ability to communicate and interact with other members of the social network. Members may join the social networking system and then add connections to a number of other members to whom they desire to be connected. Connections may be explicitly added by a member . For example the member may select a particular other member to be a friend or the social networking system may automatically recommend or create connections based on common characteristics of the members e.g. members who are alumni of the same educational institution organization etc. . As used herein the term friend refers to any other member to whom a member has formed a connection association or relationship via the social networking system . Connections in social networks are usually in both directions but need not be so the terms member friend or follower may depend on the frame of reference. For example if Bob and Joe are both members and connected to each other in the website Bob and Joe both members are also each other s friends. The connection between members may be a direct connection. However some embodiments of a social networking system may allow the connection to be indirect via one or more levels of connections. It should be appreciated that the term friend does not require that the members are friends in real life. It simply implies a connection in the social networking system .

The social networking system may be implemented in various types of computer systems. The implementation of the social networking system may provide mechanisms for members to communicate with each other form connections with each other store information and share objects of interest among other things. The implementations described below include a social networking website that interacts with members at client devices via a communication network such as a web based interface e.g. via the browser . However other implementations are possible such as one or more servers that communicate with clients using various client and server applications e.g. non web based applications . Furthermore the social networking system may not include any centralized server but rather may be implemented as for example a peer to peer system with peer to peer applications running on the client devices that allow members to communicate and perform other functions. One example is a peer to peer network of smart phones communicating via Short Message Service SMS over a cellular network. It should be appreciated that the embodiments of a social networking website described below may be adapted to various other implementations of social networking systems.

In addition to interactions with other members the social networking website provides members with the ability to take actions on various types of items supported by the social networking system . These items may include groups or social networks a social network refers not to physical communication networks but rather to social networks of people to which members may belong events or calendar entries in which a member might be interested computer based applications that a member may use via the social networking website and transactions that allow members to buy sell auction rent or exchange items via the social networking website . These are just a few examples of the items upon which a member may act on the social networking website and many others are possible.

As illustrated in the embodiment of the social networking website maintains a number of objects for the different kinds of items with which a member may interact on the social networking website . In one embodiment these objects include member profiles group objects event objects application objects respectively hereinafter referred to as profiles groups events and applications . In one embodiment an object is stored by the social networking website for each instance of its associated item. For example a member profile is stored for each member who joins the social networking website a group is stored for each group defined in the social networking website and so on. The types of objects and the data stored for each is described in more detail below.

The member of the social networking website may take specific actions on the social networking website where each action is associated with one or more objects. The types of actions that a member may perform in connection with an object are defined for each object and may depend on the type of item represented by the object. A particular action may be associated with multiple objects. Described below are a number of examples of particular types of objects that may be defined for the social networking website as well as a number of actions that may be taken for each object. The objects and actions are provided for illustration purposes only and one or ordinary skill in the art will readily appreciate that an unlimited number of variations and features may be provided on the social networking website .

The social networking website maintains a member profile for each member of the website . Any action that a particular member takes with respect to another member is associated with each member s profile through information maintained in a database or other data repository such as the action log . The tracked actions may include for example adding a connection to the other member sending a message to the other member reading a message from the other member viewing content associated with the other member attending an event posted by another member among others. In addition a number of actions described below in connection with other objects may be directed at particular members in which case these actions may be associated with those members as well.

A group may be defined for a group or network of members . For example a member may define a group to be a fan club for a particular band. The social networking website would maintain a group for that fan club which might include information about the band media content e.g. songs or music videos by the band and discussion boards on which members of the group may comment about the band. In this regard member actions that are possible with respect to a group may include joining the group viewing the content listening to songs watching videos and posting a message on the discussion board.

An event may be defined for a particular event such as a birthday party. A member may create the event by defining information about the event such as the time and place and a list of invitees. Other members may accept the invitation comment about the event post their own content e.g. pictures from the event and perform any other actions enabled by the social networking website for the event . The creator of the event as well as the invitees for the event may perform various actions that are associated with that event .

The social networking website also enables members to add applications to their profiles. These applications provide enhanced content and interactivity within the social networking website which maintains an application object for each application hosted in the social networking system. The applications may be provided by the social networking system the conferencing system and or by third party developers. The social networking system and the conferencing system may share applications between the respective computer systems. The use of any functionality offered by the application may constitute an action by the member in connection with the application . The actions may be passive and need not require active participation by a member . The scope and type of applications provided is limited only by the imagination and creativity of the application developers. The applications are generally written as server side code that is run on servers of the social networking website although in other embodiments an application may also use client side code as appropriate or any combination thereof. When a member logs into the social networking website site the system determines which applications the user has installed e.g. registered for purchased etc. and then loads and runs such applications in combination with the underlying functionality of the social networking website .

When a member takes an action on the social networking website the action is recorded in an action log . In one embodiment the social networking website maintains the action log as a database of entries. When an action is taken the social networking website may add an entry for that action to the log . The action log may maintain any of the following or other types of information a timestamp of when the action occurred an identifier for the member who performed the action an identifier for the member to whom the action was directed an identifier for the type of action performed an identifier for an object acted on by the action e.g. an application and content associated with the action. It should be appreciated that many types of actions that are possible in the social networking website need not require all of this information.

The social networking website generally comprises a computing system that allows members to communicate or otherwise interact with each other and access content and or functionality as described herein. The social networking website stores member profiles in for example a member profile store . A member profile may describe the member including biographic demographic and other types of descriptive information such as work experience educational history hobbies or preferences location and the like. The social networking website further stores data describing one or more relationships between different members . The relationship information may indicate members who have similar or common work experience group memberships hobbies or educational history. The social networking website may include member defined relationships between different members allowing members to specify their relationships with other members . For example member defined relationships may allow members to generate relationships with other members that parallel real life relationships such as friends co workers partners and so forth. Members may select from predefined types of relationships or define their own relationship types as needed.

To further illustrate the manner in which the conferencing system may share data and or applications with a social networking system shows a block diagram of the social networking website . In this embodiment the social networking website includes a web server an action logger an action log a member profile store an application data store a group store and an event store. In other embodiments the social networking website may include additional fewer or different modules for various applications. Conventional components such as network interfaces security mechanisms load balancers failover servers management and network operations consoles and the like are not shown so as to not obscure the details of the system.

The web server s link the social networking website via the network to the client devices . The web server serves web pages as well as other web related content such as for example Java Flash XML and so forth. The web server may include a mail server or other messaging functionality for receiving and routing messages between the social networking website the client devices and the conferencing system . The messages can be instant messages queued messages e.g. email text and SMS messages or any other suitable messaging technique using any suitable protocol s .

The action logger is capable of receiving communications from the web server about member actions on and or off the social networking website . The action logger populates the action log with information about member actions to track them.

As discussed above the social networking website maintains data about a number of different types of objects with which a member may interact on the social networking website . In this regard each of the member profile store application data store the group store and the event store stores instances of the corresponding type of object s maintained by the social networking website . Each object type has information fields that are suitable for storing information appropriate to the type of object. For example the event store may contain data structures that include the time and location for an event whereas the member profile store may contain data structures with fields suitable for describing a member s profile . When a new object of a particular type is created the social networking website may initialize a new data structure of the corresponding type assign a unique object identifier to it and begin to add data to the object as needed.

Having described exemplary embodiments of a social networking system with which the conferencing system may share data and or functionality the operation of additional embodiments of the social networking integration module s will be described with reference to . illustrates another embodiment of a graphical user interface for presenting the audio conference and the conference interface to participants . The graphical user interface may comprise a first portion a second portion and a third portion . The conference interface may be presented in the first portion. The second portion and the third portion may comprise user interface mechanisms for accessing communication features related to the social networking system via for example the API . It should be appreciated that the second portion and the third portion may be provided in separate screens from the first portion . The graphical user interface may employ any desirable layout and other user interface mechanisms for accessing the associated content and or functionality.

In an embodiment the first portion may comprise an input mechanism for capturing content during the audio conference which may be posted to one or more of the social networking communication channels . The input mechanism may enable the participants to input text upload photos and or video send invitations join groups etc. The content may comprise any form of content and may be specified by the participant or otherwise captured by hardware and or software on the client device .

As illustrated in in operation the conferencing system establishes the audio conference with the participants block . At block the conferencing system presents the graphical user interface to a client device operated by a participant . At any time during the audio conference at block the participant enters or specifies content to be provided to the social networking system . At block a request is sent to the social networking system . The request may originate from the client device e.g. the browser or the conferencing system . The social networking system may send a response to the originator enabling the content to be added to the participant s profile block . It should be appreciated that the content may be provided with the request or subsequently via additional message s . Furthermore the request may include the participant s credentials e.g. username password etc. to automatically authenticate the participant . In other embodiments the participant may be prompted by either the conferencing system or the social networking system to enter the authentication credentials block .

If the participant is properly authenticated for access to the social networking system at block data from the social networking system e.g. communication channels may be integrated with the graphical user interface . The data may be presented in the second portion and may comprise any data described above or any other data content and or functionality associated with the social networking system . As mentioned above the data may be accessed using the API in which case suitable requests and responses may be sent block from and received by either the client device or the conferencing system . The participant may also access social networking applications via a user interface control . The participant may select or otherwise engage the control which may trigger a menu for enabling the participant to access applications associated with the participant s social networking profile .

Referring to the conferencing system may support an alert notification functionality for enabling the participants to receive information about an audio conference and an associated conference without necessarily joining the audio conference or viewing the conference interface. The alert notification functionality generally comprises logic for monitoring an audio conference and the content functionality presented in the conference interface and providing alerts notifications or other messages collectively referred to as alerts to the participant . An alert may comprise audio video text graphics or other information embodied in any medium and presentable via hardware and or software components supported by the computing device including a browser an operating system a GUI a microphone and a display such as for example a touchscreen .

In the embodiment illustrated in the alert notification functionality comprises a conferencing notification application residing in memory on a client device and executed by processor s . It should be appreciated that the logic associated with the conferencing notification application may be located at and or controlled by the conferencing system or other computer devices systems etc.

In general operation the conferencing notification application may provide alerts based on various events monitored by the conferencing system . For instance the conferencing notification application may notify a host when an audio conference or conference has started and alert the host to who has joined the audio conference or accessed the conference by showing for example the participant name the number of current participants etc. The alerts may be implemented using a push methodology by which the alerts are pushed from the conferencing system a pull methodology by which the alerts are pulled from the conferencing system by the computing device using for example the conferencing API or other alert protocols services methodologies etc. As participants join the audio conference or the associated conference the conferencing system maintains a counter of the number and identity of participants and provides related or other information to the host. The conferencing notification application may also enable the host to conveniently access the conference interface from within the application e.g. via a menu key shortcut or other user interface control as well as modify conferencing notification or account settings prior to or during a virtual conference.

The conferencing notification application may incorporate a user interface control for enabling users to launch the application or conveniently access certain functions or features of the application e.g. configure remote or local settings join a virtual conference etc. . The user interface control may be presented in various ways depending on for example the configuration of the operating system the GUI the display type and or size and other hardware and or software characteristics.

The user interface control may be displayed anywhere within the desktop . In the user interface control is displayed on a system application tray . The system application tray may display various icons e.g. a search icon a battery level icon a system time icon a volume icon or any other system icon application icon or user defined icon .

The touchscreen display may comprise a resistive touchscreen panel having two thin metallic electrically conductive layers separated by a narrow gap. When an object such as a finger presses down on a point on the panel s outer surface the two metallic layers become connected at that point. The touchscreen panel then behaves as a pair of voltage dividers with connected outputs. This causes a change in the electrical current which is registered as a touch event and sent to a controller e.g. processor for processing.

The touchscreen display may be implemented using surface acoustic wave SAW technology that uses ultrasonic waves that pass over the touchscreen panel. When the panel is touched a portion of the wave is absorbed. This change in the ultrasonic waves registers the position of the touch event and sends this information to the processor .

In another embodiment the touchscreen display supports capacitive sensing via a capacitive touchscreen panel. A capacitive touchscreen panel comprises an insulator such as glass coated with a transparent conductor such as indium tin oxide. As the human body is also a conductor touching the surface of the screen results in a distortion of the local electrostatic field measurable as a change in capacitance. Different technologies may be used to determine the location of the touch. The location may be passed to the processor which may calculate how the user s touch or gestures relate to the particular functions of the conferencing notification application .

The touchscreen display may also support surface capacitance implementations in which only one side of the insulator is coated with a conductive layer. In such implementations a small voltage is applied to the layer resulting in a uniform electrostatic field. When a conductor such as a human finger touches the uncoated surface a capacitor is dynamically formed. The sensor controller may determine the location of the touch indirectly from the change in the capacitance as measured from the four corners of the display area .

In a further embodiment the touchscreen display implements a projected capacitive touch PCT display having an etched conductive layer. An XY array may be formed by for example etching a single layer to form a grid pattern of electrodes or by etching two separate perpendicular layers of conductive material with parallel lines or tracks to form the grid. Applying voltage to the array creates a grid of capacitors. Bringing a finger or conductive stylus close to the surface of the sensor changes the local electrostatic field. The capacitance change at every individual point on the grid may be measured to accurately determine the touch location. The use of a grid permits a higher resolution than resistive technology and also allows multi touch operation. The PCT display may allow operation without direct contact such that the conducting layers can be coated with further protective insulating layers and operate even under screen protectors.

The touchscreen display may be configured to optically sense touch using for example an array of infrared IR light emitting diodes LEDs on two adjacent bezel edges of a display with photosensors placed on the two opposite bezel edges to analyze the system and determine a touch event. The LED and photosensor pairs may create a grid of light beams across the display. An object such as a finger or pen that touches the screen interrupts the light beams causing a measured decrease in light at the corresponding photosensors. The measured photosensor outputs can be used to locate a touch point coordinate.

Another embodiment of the touchscreen technology involves dispersive signal technology which uses sensors to detect the mechanical energy in the glass that occurs due to a touch. Algorithms stored in memory and executed by processor interpret this information and provide the actual location of the touch.

Acoustic pulse recognition may also be used to detect the touch. In this embodiment two piezoelectric transducers are located at some positions of the screen to turn the mechanical energy of a touch i.e. vibration into an electronic signal. The screen hardware then uses an algorithm to determine the location of the touch based on the transducer signals.

Referring again to the mobile telephone includes a microphone and various hardware keys including for example a scroll button for navigating the GUI . The mobile telephone includes a notification bar for displaying system information such as signal strength icon battery level icon or any other system of application information. The notification bar may be expandable based on touch input to display additional notification icons.

Regardless of the type and configuration of the computing device the conferencing notification application may be accessed by selecting the user interface control. For example a user may select the user interface control to display a conferencing notification menu . The conferencing notification menu may comprise a display header and one or more additional user interface controls for selecting certain configuration or other options. In the embodiment of conferencing notification menu displays an iMeet Now button a Manage Account button a Notification Settings button a Conference Scheduler button a Help button and an About button .

The iMeet Now button may enable the user to connect to the conferencing system . When the user selects the button the conferencing notification application may launch the browser and enable the user to join an audio conference and access the conference user interface . The Manage Account button may enable the user to configure the account profile . In an embodiment the user may configure the parameters via the conferencing notification application and the parameters subsequently provided to the conferencing system via the conferencing API . In alternative embodiments the Manage Account button may direct the user to a web page provided by the conferencing system which receives the configuration parameters. The Notification Settings button may operate in a similar manner to enable the user to configure parameters associated with the conferencing notification. For example the conferencing notification parameters may specify any of the following or other parameters alert push enabled disabled alert pull enabled disabled alert frequency and alert types.

In operation the conferencing notification application may communicate with the conferencing system using conferencing API s . The conferencing API s may enable the conferencing notification application to submit requests to and receive responses from the conferencing system . These communications may include for example status checks of the user s conferences to determine if there are any active participants . In the event that someone has entered the user s conference or joined one of their bridges via a phone this activity may be transmitted to the conferencing notification application as a status update or alert. The update may include other information about the newly joined participants such as the participant parameters described above and illustrated in information stored in participant database or other relevant information about the user including information associated with the social networking system .

The alerts provided to the conferencing notification application may be presented on the display. illustrates an exemplary message or alert notifying the user of the identity of a newly joined participant and the current number of participants. The alert may appear for a predetermined amount of time which may be configurable via the Notification Settings button or the user may cancel the alert message by selecting the Done button . It should be appreciated that the content and or format of the alert may vary depending on for example the events being monitored by the conferencing system . The alert may include a convenient mechanism for enabling the user to join the audio conference and or the associated conference from the displayed alert . In an embodiment the conferencing notification application may prompt the user to join the audio conference and or the associated conference. As illustrated in the displayed alert may include a Join button . When selected the conferencing notification application may initiate a process to enable the user to join the audio conference and present a conferencing user interface on the computing device . The conferencing user interface may be configured in the manner described herein.

If the user chooses to cancel a particular message or the message expires without the user joining the conference the conferencing system may continue to send alerts as events occur. If the user chooses to join the conference the conferencing system may disable alerts.

To implement the conferencing notification application the conferencing system may support various web services for exchanging structured information with the conferencing notification application . The web services may be implemented using any suitable protocol. In an embodiment the web services may be implemented via the Simple Object Access Protocol SOAP using Extensible Markup Language XML as the messaging format. The conferencing system may respond to web service calls from the conferencing notification application by either returning the requested information immediately or by initiating the request and then providing the results later via a polling action.

The subscribe unsubscribe service may be implemented with a Subscribe call that establishes authorization to use the resources provided by the conferencing system . The Subscribe call may be the first call made by the conferencing notification application to the conferencing system . In an embodiment the Subscribe call may require an authorization response before the conferencing notification application may access other services. In this regard the subscribe unsubscribe service may be configured without a security token in the SOAP header. The other web services may be implemented with the security token e.g. a session ID obtained with the Subscribe call .

An Unsubscribe call may be made to unsubscribe the user from the web services when the conferencing notification application is closed. The call may terminate the session with the conferencing system . Further interactions with the conferencing system may require a subsequent Subscribe call to be made by the conferencing notification application.

The conference watch service may invoke a SetConferenceWatch call that establishes a conference watch which enables the conferencing system to begin sending alerts to the conferencing notification application . After setting a conference watch the user may receive notifications or alerts for conference s associated with the user including for example when a participant joins or leaves a conference when a participant speaks during an audio conference when a participant posts or receives information associated with a social networking system etc.

The conference watch service may be useful for hosts who are too busy to join a conference do not wish to join the conference or are otherwise unable to join the conference but want to monitor the activity of the conference. For example the host may be interested in joining the conference for example but only after a particular person has joined or some other event has occurred. The host may view the alert messages as they are provided by the conferencing system and displayed by the computing device . When the desired event has occurred the host may elect to join the conference. As described below the alerts may be retrieved from the conferencing system via the conference polling service .

The conference watch service may also invoke a ClearConferenceWatch call that may be used to clear a previously established conference watch. Removing a conference watch may cause the alerts for the specified conference to be disabled. After clearing the conference watch the user will no longer receive alerts.

The conferencing polling service may invoke a PollForMessages call which is used to request events from a watched conference. In response to the request the conferencing notification application will receive events associated with the watched conference.

The authentication service the conference schedule service and the join conference service may enable the conferencing notification application to interface with a registration system. The authentication service may invoke a SecurityValidateLogOn call to validate a user s logon credentials. The call may return a security token which may be used to create a login header. The login header may be sent with one or more of the other service calls. An exemplary XML request for the SecurityValidateLogOn call may be configured as follows 

The conference schedule service may invoke a FindReservation call that returns a list of conferences. The FindReservation call may be initiated when a user selects the Conference Schedule button as illustrated in . The result contains detailed information of all conferences associated with the user. The conferencing notification application may present the results to the user. illustrates an exemplary display for presenting the results. The display comprises a list of conference entries . Additional details e.g. dial in numbers passcodes date time agenda participants etc. about each conference may be accessed by selecting the particular entry . As illustrated in when a user wants to watch a conference to receive alerts about that conference the user may select an entry and select a watch button .

The join conference service may be invoked when for example the user selects the join button or selects a conference from the conferencing schedule . A WebHostLogin call may return a location for the virtual conference location. In an embodiment the call may return a redirectUrl of a given client and host which logs the client into a host. The conferencing notification application may send the WebHostLogin request which contains the user s credentials and then opens a web browser placing the user directly into the conference without the need to login again.

Referring to various embodiments of systems methods and computer programs will be described for managing users participating in an audio conference via a conference interface. In this regard illustrates an embodiment of a computing device comprising one or more modules stored in memory and executable by processor participant management module s . As described below in more detail in general the participant management module comprises the logic and or functionality for enabling a user of the computing device to add and or remove participants in the conference via for example a drag and drop functionality associated with the conference interface. The participant management module may control the operation of the drag and drop functionality in association with related functionality provided by the graphical user interface and or the conference interface provided by the conferencing system . The user of the computing device e.g. participant host etc. may interface with the drag and drop functionality via any desirable input mechanism. In one embodiment the drag and drop functionality supports a touchscreen display as described above or otherwise that enables the user to perform the drag and drop functionality by touching the touchscreen display with their fingers or other input device such as a stylus. In other embodiments the drag and drop functionality may be performed with a mouse or other input device that controls movement of a displayed cursor associated with the graphical user interface and provides inputs for selecting displayed objects and providing user input commands. In further embodiments the drag and drop functionality may be performed using voice commands keyboard shortcuts or any other desirable input means for providing the commands to specify objects in the conference interface to be moved and or the manner in which they should be moved.

The contacts list displays a list or other desirable visual arrangement of contact objects . A contact object may display information identifying a particular contact or group of contacts. The identifying information may comprise any suitable information for enabling a user of the contacts list to uniquely identify contacts. For example in an embodiment the contact object may display one or more of a contact identifier or description name nickname image avatar icon email address telephone number social networking profile identifier or name etc. Regardless of information displayed by the contact object it should be appreciated that each contact object is logically associated with corresponding contact information. The contact information may comprise any data identifying a contact that may be used by the client device and or the conferencing system to initiate and or establish a connection between the contact and the conferencing system . The contacts list and any associated data including the contact information may be stored in memory on the client device or stored remotely by the conferencing system the social networking system or otherwise accessible by the client device .

Referring to it should be appreciated that each contact object is configured to support a drag and drop functionality via the graphical user interface . In general the drag and drop functionality enables a user of the computing device to select a contact object in the contacts list and perform an input gesture to instruct the contact object to be added to the conference interface e.g. screen portion as a participant object . The contact object may be selected in various ways depending on for example the configuration of the graphical user interface and the input mechanism. In the embodiment illustrated in the drag and drop functionality is provided via a touchscreen display . The drag and drop functionality may be configured to determine the location on the touchscreen display of a human touch or stylus touch. The contact object may be selected by touching the displayed region of the object. illustrates the contact object being selected by the user touching the appropriate display region. In other embodiments the user selection of the contact object may be performed by moving the location of a displayed cursor over the displayed region and initiating a selection command e.g. by clicking a mouse touchpad or other input mechanism .

After the contact object is selected the user may perform any desirable gesture to move the selected contact object to the conference user interface e.g. screen portion . As illustrated in in one embodiment the selected contact object may be moved with a drag operation. The drag operation may be configured to further monitor the location of the input mechanism e.g. human or stylus touch cursor etc while the contact object is selected. In the embodiment of the contact object is moved at least partially within the screen portion . The user may deselect the contact object within the screen portion which triggers an add participant command to invite the contact to join the audio conference or automatically establish a connection with the contact using the corresponding contact information. As illustrated in after the contact is added to the conference or perhaps before or during the establishment process the conference interface may be configured to add a new participant object that identifies the particular contact.

It should be appreciated that the selected contact object need not be moved within the screen portion to initiate the add participant command. The conference interface may include a separate screen portion e.g. a drop target for dropping or otherwise capturing the contact objects . The separate screen portion may be included within the screen portion or any other location within the conference interface. It should be further appreciated that the graphical user interface may support other input gestures or mouse driven commands for implementing the drag and drop or similar functionality. For example in one embodiment a selected contact object may be flicked toward the screen portion or other capture region or drop target using monitored location and or acceleration parameters. In other embodiments the selected contact object may be added to the online conference via a hotkey or other keyboard input or a selectable menu. For example when a contact object is selected a menu may be automatically or selectively displayed with an add participant prompt. The menu may include options for enabling the user to specify the manner in which the contact is to be added to the conference e.g. sending an email invitation initiating an outgoing call or otherwise establishing the connection via the contact information . In response to the selection from the user the add participant command may be configured with appropriate parameters to invite the participant or establish the connection with the conferencing system .

The participant management module may configure and send a request directly to the contact using the contact information or forward a request to the conferencing system for processing. The request may initiate an email message a social networking message or other message containing for example a URL directing the contact to a web page hosted by the conferencing system . In the manner described above the user may then enter the audio conference e.g. via an outgoing call incoming call to an audio conference etc. as well as configure a user profile associated with the participant object . In other embodiments the request may automatically initiate the outgoing call to the contact information to add the contact to the audio conference . It should be appreciated that from the perspective of the participant management module the contact may be added in any suitable manner to either the audio conference or the online conference. At block regardless of the manner in which the contact participates in the online conference the participant management module may add the participant object to the conference interface to indicate that the contact has joined the conference.

Referring to in other embodiments the participant management module may be further configured to enable the user of the computing device to remove an existing participant in the audio conference via the graphical user interface . The participant removal feature may be implemented using the drag and drop functionality and other user interface mechanisms described above in connection with . As illustrated in the participant objects displayed in the conference interface may be similarly configured as selectable objects. During an existing conference the user of computing device may select a participant object and perform an input gesture or other command as described above to move the selected participant object from an original location in the conference interface . The selected participant object may be moved away from the conference interface e.g. screen portion and deselected which triggers a remove participant command. The remove participant command may be initiated in other ways via the graphical user interface as described above in connection with the add participant command. The remove participant command may initiate the removal of the participant object from the conference interface and disconnect the participant from the audio conference . As illustrated in the user may be prompted by a display menu to confirm the removal of the participant.

Referring to various embodiments of systems methods and computer programs e.g. information distribution module s will be described for distributing information between participants in an online conference via a graphical user interface . As described below in more detail in general the information distribution module s comprise the logic and or functionality for enabling a user of the computing device to distribute information between participants in the online conference by selecting and moving via the conference interface a source information object to a drop target associated with one or more participants. The selection and movement of the information objects may be implemented via a drag and drop functionality and any suitable input mechanisms such as those described above or others.

The information distribution module s may be configured to control the selection and distribution of various types of information objects to participants in the online conference. An information object refers to any user interface component to which a drag and drop operation may be performed and which has an associated source information object. The information object may comprise a data file or programming code or a universal resource locator URL associated with a data file or programming code. It should be appreciated that the information source may be in the form of text audio video graphics etc. or any combination thereof. Furthermore the information source may be stored on the computing device the conferencing system or any other system accessible by either the computing device or the conferencing system .

Various information objects and methods of operation are described below with respect to another embodiment of a conference interface. illustrate an embodiment in which the information source comprises profile information associated with a participant object displayed by the conferencing system and the profile information is added as a new contact to a participant s contact list. illustrate an embodiment in which the information source comprises one of the participant s information resources and the information source is distributed to one or more participants in the online conference. illustrate an embodiment in which the information source comprises an information object introduced to the online conference via a collaboration application.

As illustrated in the conference interface may be configured with a my contacts list comprising a plurality of contact objects and a screen portion in which each participant in the online conference is identified with a participant object . The contacts list may be provided and or managed by the conferencing system an application operated by the computing device a social networking computer system or other contact management application. As described above the participant object may be associated with stored profile information identifying the participant. The profile information may comprise any desirable parameters including those described above and illustrated in .

The profile information may be stored by the conferencing system and obtained in any of the ways described above. In one embodiment the profile information may be provided by a participant when accessing the conferencing system . In other embodiments the profile information may be specified by participants during an audio conference via the conference interface obtained from local or remote call identification databases or imported from other online services such as search engines social networking profiles etc.

In operation the drag and drop functionality enables a user of the computing device to select a participant object and perform an input gesture or other input command to move the participant object to the contacts list . The participant object may be selected in various ways depending on for example the configuration of the graphical user interface and the input mechanism. In the embodiment illustrated in the drag and drop functionality is provided via a touchscreen display .

After the participant object is selected the user may perform any desirable gesture to move the selected participant object to the my contacts list . As illustrated in in one embodiment the selected participant object may be moved with a drag operation. The drag operation may be configured to further monitor the location of the input mechanism e.g. human or stylus touch cursor etc while the participant object is selected. In the embodiment of the participant object is moved at least partially within the display region of the contacts list . The user may deselect the participant object within display region which triggers an add contact command that instructs the contact management application to create a new contact containing one or more of the profile parameters. As illustrated in after the new contact is added to the contacts list a new contact object may be displayed in the contacts list .

It should be appreciated that the selected participant object need not be moved within the contacts list to initiate the add contact command. The conference interface may include a separate screen portion for dropping or otherwise capturing the participant object as a new contact. The separate screen portion may be included within the screen portion or any other location within the conference interface. It should be further appreciated that the graphical user interface may support other input gestures or mouse driven commands for implementing the drag and drop or similar functionality. For example in one embodiment a participant object may be flicked toward the capture region or drop target using monitored location and or acceleration parameters. In other embodiments the participant object may be added as a new contact via a hotkey or other keyboard input or a selectable menu. For example when a participant object is selected a menu may be automatically or selectively displayed with an add contact prompt . The menu may include options for enabling the user to specify the location of the contacts list. For example the contact may be added to for example a local contacts list a social network list or to a list maintained by the conferencing system . In response to the selection from the user the add contact command may be configured with appropriate parameters to communicate with the participant contact management application specified by the user including for example automatically or selectively inviting the contact to join the user s social networking list.

In another embodiment as illustrated in a conference interface may be configured with a my resources list that displays user interface objects associated with one or more information sources. The information objects may comprise for example a document object corresponding to a document a video object corresponding to a video an audio object corresponding to an audio clip an image object corresponding to an image a contact object corresponding to a contact e.g. contact objects a message object corresponding to an email text message blog post social networking update etc. or any other information object . In one embodiment the my resources list comprises a file browser window for browsing files stored in memory . In this regard the information objects may comprise an icon identifying one or more files or folders. The my resources list may interface with a web service such as for example a video audio or image hosting site. The information objects may include selectable objects identifying the underlying embedded code or the location of the hosted file. In further embodiments the my resources list may interface with and display messages videos documents files etc. shared via a social networking system .

The conference interface may include the screen portion that displays a participant object identifying each participant in the online conference. The conference interface corresponds to a version of the conference interface presented to a first participant . The conference interface corresponds to a version of the conference interface presented to a second participant . The screen portion is similar for versions and although the my resources list may be individually configured by each respective participant to display their own unique information objects .

In this embodiment the drag and drop functionality enables a user e.g. the first participant to select one of the information objects and distribute the associated information source to one more of the other participants in the conference. In the first participant has selected a document object . In the manner described above the first participant may perform an input gesture or other input command to move the selected document to the conference interface. The document object may be moved to a participant object to distribute the document to the corresponding participant i.e. the second participant . In other embodiments the document object may be moved to a predetermined location or drop target within the screen portion to distribute the document to all of the participants in the online conference.

The document object may be selected in various ways depending on for example the configuration of the graphical user interface and the input mechanism. In the embodiment illustrated in the drag and drop functionality is provided via a touchscreen display . After the document object is selected the user may perform any desirable gesture to move the selected document object to the drop target. The first participant may deselect the document object to trigger a distribute object command that initiates delivery of the information source to the selected participants. A menu may be displayed to enable the first participant to select one or more delivery parameters. An email button may be selected to deliver the document to an email address stored in the participant profile associated with the participant object s . A conference profile button may be selected to store the information source by the conferencing system . The conferencing system may store the information source at a designated participant profile or otherwise enable the participants to access the information source e.g. download select a link . The online profile button may be selected to send the information source or a link to the information source to the participant s social networking profile.

In this embodiment the drag and drop functionality enables a user to select one of the information objects displayed in collaboration application and distribute the associated information source to one more of the other participants in the conference. In the participant has selected a video object that has been shared by one of the participants in the conference. In the manner described above the participant may perform an input gesture or other input command to move the selected video to the conference interface the my resources list or other drop target. The video object may be moved to a participant object to distribute the video to the corresponding participant. In other embodiments the video object may be moved to a predetermined location or drop target within the screen portion to distribute the video to all of the participants in the online conference. The video object may also be dragged and dropped to the my resources list . As illustrated in the user may also distribute information objects from the collaboration application to non participants by dropping the selected objects to for example a contact object displayed in the contacts list .

The information object may be selected in various ways depending on for example the configuration of the graphical user interface the input mechanism s and the particular functionality supported by the collaboration application . In the embodiment illustrated in the drag and drop functionality is provided via a touchscreen display . After the video object is selected the user may perform any desirable gesture to move the selected document object to the drop target. The first participant may deselect the video object to trigger a distribute object command that initiates delivery of the information source to the selected participants contacts etc. As described above the user may also specify the method for delivering the selected information object via prompts in a menu .

The conferencing system may also support various additional mechanisms for transferring information to and distributing information from the conferencing system . For example in one embodiment the conferencing system may provide a customized email address that is associated with the participant s account. When the participant creates an account with the conferencing system the customized email address may be automatically established associated with the participant s account and made available for use. The participant may use the email account to send and receive emails via a separate client application a web based interface or via the conference interface. Because the customized email address is linked to the participant s account when an email to this address is received the conferencing system may automatically determine the corresponding account. Any file attachments links or other documents or information may be automatically or manually parsed from the email and made available to the participant via the conference interface for presentation during a conference or for distribution to other participants in the manner described above. In another embodiment the participant may associate an existing email address with the account instead of using a separate customized email address.

Referring to various embodiments of systems methods and computer programs will be described for managing conference sessions in an online conference via a graphical user interface . Embodiments of a conference session management functionality may be implemented via the module s stored in memory . As described below in more detail in general the conference session management module s comprise the logic and or functionality for enabling a user of the computing device to create a breakout session of a conference session via the graphical user interface . The breakout session may be created by selecting and moving one or more participant objects to a predetermined drop target. The selection and movement of the participant objects may be implemented via a drag and drop functionality and any suitable input mechanisms such as those described above or others.

During the conference session a user of the client device may select the breakout session component which may trigger the display of a breakout session window in a screen portion . Referring to it should be appreciated that each participant object may be configured to support a drag and drop functionality via the graphical user interface . The drag and drop functionality or other input gesture s as described herein enables the user to select and move a participant object from a main conference window in the screen portion to the breakout session window in the screen portion . The drag and drop operation may initiate an appropriate command for instructing the conferencing system to add the corresponding participant to a breakout session.

The participant object may be selected in various ways depending on for example the configuration of the graphical user interface and the input mechanism. In one embodiment the drag and drop functionality is provided via a touchscreen display . The drag and drop functionality may be configured to determine the location on the touchscreen display of a human touch or stylus touch. The participant object may be selected by touching the displayed region of the object. illustrates the participant object being selected by the user touching the appropriate display region. In other embodiments the user selection of the participant object may be performed by moving the location of a displayed cursor over the displayed region and initiating a selection command e.g. by clicking a mouse touchpad or other input mechanism .

After the participant object is selected the user may perform any desirable gesture to move the selected participant object to the screen portion . As illustrated in in one embodiment the selected participant object may be moved with a drag operation. The drag operation may be configured to further monitor the location of the input mechanism e.g. human or stylus touch cursor etc while the participant object is selected. In the embodiment of the participant object is moved within the breakout session window. The user may deselect the participant object to trigger the command to add the corresponding participant to the breakout session. illustrate a second participant object being added to the breakout session.

In an embodiment the breakout session may be created by processing the audio streams in an audio conference . Consider the example illustrated in in which participant objects and are moved to the breakout session window. Prior to moving the participant objects and the conferencing system has established an audio conference involving six participants identified by participant identifiers . Each participant has a corresponding audio stream and is identified in the conference interface with a corresponding participant object . When the participant objects and are moved to the breakout session window the conference session management module s may identify the corresponding audio streams and with reference to the participant identifiers and . The conference session management module s may configure and initiate appropriate command s to the conferencing system . In an embodiment the command for adding a participant to the breakout session may specify the participant identifier and . The conferencing system may receive the command s and identify the corresponding audio streams and

As illustrated in the conferencing system may establish a breakout session comprising the audio streams and . The conferencing system may remove or otherwise disable or mute the audio streams and in the audio conference associated with the original conference and create a separate mix of the two streams for the breakout session . In this manner the participants in the conference session do not hear the audio streams and and the participants in the breakout session do not hear the audio streams and . It should be appreciated that the processing of the audio streams may be implemented in various alternative ways depending on the architecture of the conferencing system .

As illustrated in the breakout session may be selectively recombined or rejoined with the audio conference by similarly processing the audio streams . In the embodiment of a user may recombine the breakout session with the audio conference by selecting a user interface component e.g. combine sessions component . In another embodiment the breakout session window may be configured as a draggable object which the user may select and move to the main conference window . Individual participants may be added back to the conference session by selecting and moving the participant object from the breakout session window to the main conference window as described above.

Referring to various embodiments of systems methods and computer programs will be described for authenticating participants in an online conference via a graphical user interface . The functionality for implementing the participant authentication may be embodied in for example the participant authentication module s . As described below in more detail the participant authentication module s comprise the logic and or functionality for authenticating a participant via a signature capture mechanism displayed in the conference interface. The signature capture mechanism may comprise an area within the conference interface presented via the graphical user interface . The signature capture area is configured to electronically recognize and or capture the location of an input device via the graphical user interface as the input device is moved with respect to the screen portion. In an embodiment a touchscreen display may be used to enable a user to write or trace on the screen portion with for example a finger or other input device such as a stylus. In other embodiments a mouse or other input device may be used to control the movement of a displayed cursor within the screen portion.

Another conference event may involve confirming a participant vote or affirmation of an issue being discussed in the audio conference . shows a meeting minutes approval screen which prompts the participant to approve meeting minutes which may be displayed for example in the conference interface by the collaboration application . The screen may include a description of the issue being voted on as well as a yes button and a no button or other input mechanisms. After making a selection a signature capture area may be displayed for authenticating the participant .

Regardless the conference event requesting authentication at block the participant authentication module presents to the participant being authenticated a signature capture area in the conference interface. The signature capture area may comprise a window menu display area region etc. or any other user interface component displayed in the conference interface via the graphical user interface . The user interface component may display the border of the signature capture area to highlight the defined area. As illustrated at block the signature capture area is configured to electronically capture location coordinates of an input device e.g. human or stylus touch on a touchscreen display or a cursor as the input device is moved within the defined area. The signature capture area may capture continuous movement or a series of movements. Signature capture area is configured to capture a handwritten signature. It should be appreciated however that the signature may comprise any series of one or more movements as determined by the particular user.

In the embodiment illustrated in the signature capture area may display a reference grid comprising a plurality of nodes . The participant may be asked to trace a predefined pattern through two or more of the nodes . The signature capture area may detect the traced pattern as a node to node sequence. For example in the example of the participant has traced a node to node sequence from the top left node to the top right node to the bottom right node and terminating at the center node. This trace pattern may define the node to node sequence according to numbered nodes. It should be appreciated that other reference grids patterns arrangements etc. may be implemented.

At block the location coordinates of the electronic signature e.g. handwritten signature trace pattern gestures etc. are converted into a participant electronic signature. The participant electronic signature may be compared to a stored electronic signature block . The stored electronic signature may be stored locally in memory in the conferencing system or at another remote location. The stored electronic signature may have been previously specified as a reference signature for purposes of authenticating the participant. The stored electronic signature may be logically associated with a participant identifier. In this regard the participant electronic signature and the participant identifier may be provided to the application performing the comparison. The application may look up the stored electronic signature corresponding to the participant identifier and determine whether there is match decision block . The comparison of the two signatures may be implemented via any suitable algorithms taking into account human error and or any technical limitations associated with the input mechanism. If there is a match the participant may be authenticated block . If there is not a match the process may be repeated one or more times or the participant may be denied access to the conference event.

To record and playback the audio conference and the content displayed or otherwise presented in the conference interface the client device s further comprise a record module a playback module a control module and one or more buffer s and or storage device s . The record module the playback module and the control module may be embodied in memory e.g. memory and executed by one or more processor s . In one embodiment the modules and may be integrated with the client although it should be appreciated that the modules may comprise separate modules that interface with the client the graphical user interface the conference interface or other associated software and or hardware programs. Furthermore it should be appreciated that one or more of these modules may reside at the server s or other components in the conferencing system .

The record module is configured to capture content and or functionality displayed or otherwise presented in the conference interface including audio streams in the audio conference and any other audio video graphics images documents text data or other multimedia presented via the conference interface . A user of the client device may selectively control the record module via the control module and an associated user interface. The recording module may store the captured content in one or more buffers or storage devices . In an embodiment the captured content is buffered in real time during the conference for immediate or subsequent playback by the playback module as described below in more detail. The record module may comprise a screen capture functionality for capturing portions of or the entire display region of the conference interface. The record module may separately capture embedded audio and or video content. At the conclusion of or during a conference the captured content may be processed and stored in a playable format for storage distribution etc.

As illustrated in the captured content may comprise data related to any of a plurality of conference channels associated with the conference. The conference channels may comprise for example the audio streams in the audio conference the presentation content associated with the conference interface and any inserted media from participants . The example illustrated in comprises an audio conference comprising three participants . Each participant has an associated audio stream . The inserted media may comprise audio video documents notes images graphics data etc. that a participant may share post or otherwise present or display via the conference interface.

In operation each client device in the conference record playback system may selectively capture one or more of the conference channels for immediate or subsequent playback. The captured content may be stored on the respective client devices or at the conferencing system . In this regard the conferencing system may include the record module and the buffer s or storage device s .

As illustrated in the recorded conference channels are synchronized according to a master timeline associated with the conference e.g. conference timeline . As part of the recording process the record module may generate timestamps for the recorded content. In an embodiment the timestamps may include a time reference an event type and an event identifier . The time reference defines a temporal location along the master timeline. The event type and event identifier may be used to catalogue specific types of events that occur in the conference. In the example illustrated in a participant may insert a video object in the conference interface . The video object may be shared with the other participants and via the conference interface and an appropriate event type and event identifier may be created to identify the beginning and end of the inserted video. Later in the conference the participant may insert an audio object and the participant may display a document object . The record module may generate a timestamp to identify the beginning and end of the inserted audio and document.

It should be appreciated that the record module may be configured to generate timestamps for any conference event related to the conference interface . In the embodiment illustrated in timestamps may be generated for participant specified comments notes or markers . The markers may be used to identify relevant points in the conference for subsequent review or otherwise annotate the conference. Furthermore timestamps may be generated to identify incoming and or outgoing posts associated with a data feed such as for example a communication channel related to a social networking system . Timestamps for the markers and feeds may be categorized as private or public which may define whether the channel components are shared with other participants or only available to the user who defined them.

Having described the general structure and operation of the conference record playback system various additional features and functions will be described with reference to an exemplary embodiment of a conference interface . The conference interface displays an interactive participant object that identifies each participant in the conference. The interactive participant object may display similar information as described above in connection with participant objects e.g. a graphical representation profile information an audio indicator a business card component etc. . As mentioned above in connection with the business card component may flip the participant object to display additional parameters . The interactive participant objects may comprise further interactive functionality and visual effects. For example the participant object may comprise a cube having multiple display faces. When a participant selects a user interface component the cube may be expanded to display one or more faces of the object.

The conference interface may comprise one or more selectable components for accessing various features. A my connection component may launch a display for enabling a participant to configure the existing connection between the client device and the conferencing system . The participant may disconnect a connection to the audio conference establish a new connection to the audio conference e.g. by dial out or reconfigure the existing connection to the audio conference . In addition to configuring the audio connection the participant may also configure the connection to the online conference via the conference interface . In an embodiment the connection to the online conference may be transferred to another client device or another client on an existing client device . This may enable the participant to seamlessly maintain a presence in the online conference during the transfer.

An invite component may launch a menu for enabling a participant to invite additional participants to the online conference. As illustrated in additional participants may be invited by for example dialing out to a telephone number phone component sending an email including information for accessing the conferencing system email component or sending a message to a web service web presence component such as for example a social networking system .

A share component may launch a menu for enabling a participant to insert and share media with other participants in the online conference. The menu may prompt the participant to specify a browse location for selecting the media. A conference room component may display media stored by the conferencing system . A local device component may display a file browser for enabling the participant to select files located on the client device . A web component may display available media hosted by a web service such as for example a third party video audio or document hosting service. illustrates the conference interface after a participant has identified a web based video . The client device may launch the web based video and the conferencing system shares it with all of the participants via the conference interface .

In an embodiment when the participant launches the web based video or other user interface component presentation display etc. the component may be introduced in the conference interface as a fly in component to provide a more visually engaging experience. For instance the component may appear to be raised from a bottom portion of the conference interface and the participant objects may be automatically rearranged in the remaining available screen space or hidden to accommodate the component. The movement of the component may originate from any portion of the screen and may implement any desirable animation or effects. In one implementation the fly in component is configured to simulate the motion of a physical screen being raised from the floor of the screen with the participant objects being pushed aside by the display or otherwise rearranged or hidden. In another embodiment the participant objects may be displayed in the background with the fly in component being raised in the foreground.

When the web based video or other presentation display is completed or otherwise deactivated manually or automatically the animation or effects may be reversed and the participant objects returned to an original or other layout and the fly in component moved to the original or other state. It should be appreciated that the fly in component animation and or effects may be used with any desirable presentation content and or functionality e.g. a display pane window etc. .

A my room component may launch a display for enabling a participant to configure the appearance of the conference interface . The participant may configure the arrangement of the participant objects specify a location view or configure any other presentation parameter.

An apps component may launch a menu for enabling a participant to launch conference applications. As described above the conferencing system may host a conference apps store for purchasing various conference applications. An app store component may launch the app store where the participant may purchase conference applications. A my apps component may launch a display for enabling the participant to select from applications that have already been purchased or are otherwise available to the participant . A host apps component may display conferencing applications that have been made available by the host of the online conference.

A record component may launch a display for enabling a participant to launch a conference recorder component or configure record options component or alert options . The record options component may launch a display for enabling participants to select e.g. via check boxes which components to record. In the embodiment illustrated in the participant may select to record according to one or more of the following parameters audio conference interface shared media conference apps my feeds or all conference components. When activated the record module will record and store the selected components.

As illustrated in the alert options component may launch an alerts manager for enabling the participants to configure the conference interface for various in conference alerts. For example the conference interface may be configured to alert the participant when certain events occur in the conference component such as for example when a video is shared a conference application is launched etc. Other types of participant based alerts may be generated component . The participant may wish to be alerted via the conference interface when a particular participant is speaking or when the participant takes a certain action in the conference.

When the conference recorder is launched and the record module is recording the conference the conference interface may present a record playback navigation controller for facilitating various record and playback features. The record navigation controller comprises the user interface associated with the control module . The controller comprises a navigation controller comprising a pause play input a rewind input and a forward input for initiating the respective playback functions. The pause play input toggles between the functions of pausing the conference and playing the conference. The rewind input and the forward input enable the participant to navigate to earlier and later locations along the master timeline of the conference during playback. During the playback function a participant may select the live input to automatically return the live conference. The mute input mutes the audio conference .

The record playback navigation controller may further comprise an insert marker portion for enabling participants to insert comments tags etc. markers into the master timeline . The comment may be added to a text insertion component and specified as a private or public comment. When the insert component is selected a timestamp comprising the comment is generated.

As illustrated in the embodiment of to facilitate the transfer of a conference session from one client device to another a client device may comprise participant inter device conference transfer module s . The module s generally comprise the logic or functionality for initiating controlling or implementing one or more aspects of the transfer process. The module s may be embodied in memory e.g. memory and executed by one or more processor s . One or more portions of the module s may reside at the first client device i.e. an initial or primary client device the second client device i.e. a subsequent or secondary client device the server s or other components in the conferencing system .

In this regard it should be appreciated that the first participant client device refers to a client device that establishes an initial or earlier conference session i.e. first conference session with the conferencing system . The second participant client device refers to a target client device to which the participant wishes to transfer the first conference session. The first and second participant client devices may comprise any computing device as described above capable of communicating with the conferencing system via the communication network s . The transfer process may be implemented in any situation in which it is desirable for a participant to transfer a session with the conferencing system from one device to another.

For example consider the situation in which a participant initially joins the conference via a personal computer such as a desktop computer or a laptop or notebook computer at the participant s work area. During the conference the participant may be required to leave the work area. While many participants may have a mobile computing device capable of accessing the conference conventional conference solutions may require the participant to disconnect from the personal computer and establish a new connection via the mobile computing device. During this period the participant may be conspicuously absent from the conference. One solution to this problem is for the participant to establish the new session with the mobile computing device prior to disconnecting the personal computer. However in this scenario until the second session is established and the first session is terminated the participant may appear in the conference as two separate participants. Although this may be preferable to appearing absent it may still confuse other participants or undesirably highlight the fact that the participant is no longer at the work area or accessing the conference via a mobile computing device.

The participant may experience a similar problem when the first conference session is established via a mobile computing device. For a variety of reasons the participant may desire to access the conference from a device other than the original mobile computing device. For instance the mobile computing device may be losing battery power or the connection to a carrier network or other wireless network may become problematic. Another reason may be that the participant desires to experience the conference on a computing device with a larger display or other preferred performance characteristics. As mentioned above during the conference one of the participants may share a video or introduce an audio clip or other content or functionality via the conference interface . The mobile computing device or other computing device may not have compatible software to view the video or perhaps the display size processing power other hardware and or software specifications or other performance characteristics make it problematic to view the content or functionality presented in the conference interface . The participant may desire to experience the conference from a more suitable computing device or platform. In this situation the participant would have the same problems described above.

The computing system may provide a solution to one or more of these or other problems by enabling the participant to seamlessly change devices during the conference in an inconspicuous manner without interrupting the participant s presence in the conference. illustrates an embodiment of a method for transferring a conference session from the first client device to the second client device while maintaining the corresponding participant s presence in the conference interface . It should be appreciated that the method illustrates functionality steps or logic that may occur or reside at the first client device the second client device or the conferencing system .

At block a participant joins an online conference via the first client device . The first client device establishes a first conference session with the conferencing system . The online conference may include an audio conference . At block the conferencing system presents a conference interface such as for example the conference interface to the client device as well as the other client devices in the conference. As mentioned above the conference interface may display a participant object e.g. objects identifying each participant in the conference including the participant operating the first client device . The conferencing system may reference each participant object by a unique participant identifier corresponding to the participant.

At block the participant initiates the transfer of the conference session to the second client device . In an embodiment the participant may initiate the transfer via the conference interface by for example the my connection component or other user interface component s or input device s . At block the first client device generates a transfer request which may include the participant identifier corresponding to participant . The transfer request is sent to the second client device . It should be appreciated that the transfer request may be configured in and delivered to the second client device in various ways. In the embodiment illustrated in the transfer request is sent to the second client device via a local communication network such as for example a short range wireless network using any desirable protocol. This delivery method may be desirable in situations in which the client devices and are located in proximity to each other.

As illustrated in the transfer request may be sent to the second client device via one or more of the communication networks . The first client device may send a message e.g. an email social networking message short message service SMS message etc. that may be received or otherwise retrieved by the second client device . The message may comprise a uniform resource locator URL as a link or otherwise which directs the participant to the conferencing system . The message may further comprise the participant identifier . In a further embodiment the transfer request may be sent to the conferencing system with or without the participant identifier and the conferencing system may configure a new request or forward the original request to the second client device

Regardless the delivery method at block the second client device may acknowledge the request by sending a response or message to the first client device and or the conferencing system . As illustrated in at block the second client device establishes a second conference session with the conferencing system via any of the methods described above. The first conference session may be terminated. With knowledge of the participant identifier the conferencing system may continuously display in the conference interface the participant object corresponding to the participant during and after the transfer process. The conferencing system may logically associate the second conference session second client device with the first conference session first client device based on the participant identifier . In this manner the conferencing system may maintain the identity of the participant in the conference interface during both sessions and thereby enable the participant to inconspicuously change devices without being perceived as having disconnected from the conference or as having changed devices or connections.

It should be appreciated that one or more of the process or method descriptions associated with the flow charts or block diagrams above may represent modules segments logic or portions of code that include one or more executable instructions for implementing logical functions or steps in the process. It should be further appreciated that the logical functions may be implemented in software hardware firmware or any combination thereof. In certain embodiments the logical functions may be implemented in software or firmware that is stored in memory or non volatile memory and that is executed by hardware e.g. microcontroller or any other processor s or suitable instruction execution system associated with the multi platform virtual conference location system. Furthermore the logical functions may be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device such as a computer based system processor containing system or other system associated with the multi platform virtual conference location system that can fetch the instructions from the instruction execution system apparatus or device and execute the instructions.

It should be noted that this disclosure has been presented with reference to one or more exemplary or described embodiments for the purpose of demonstrating the principles and concepts of the invention. The invention is not limited to these embodiments. As will be understood by persons skilled in the art in view of the description provided herein many variations may be made to the embodiments described herein and all such variations are within the scope of the invention.

