---

title: Method and apparatus for anonymous IP datagram exchange using dynamic network address translation
abstract: Methods, apparatus, system and computer program are provided for concealing the identity of a network device transmitting a datagram having a network layer header. A unique local identifier and broadcast address are determined in accordance with a next-hop address. A partially encrypted network layer header is determined by encrypting a plurality of identifying portions of the network layer header, where one portion of the network layer header is the unique local identifier. The datagram is encapsulated with another network layer header whose address is set to the broadcast address. The encapsulated datagram can be received and detunneled, and an address of a recipient can be extracted from the network layer header. The datagram is then admitted into a network domain.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08549285&OS=08549285&RS=08549285
owner: Raytheon BBN Technologies Corp.
number: 08549285
owner_city: Cambridge
owner_country: US
publication_date: 20100614
---
This is a continuation of prior U.S. patent application Ser. No. 10 103 424 filed Mar. 21 2002. titled METHOD AND APPARATUS FOR ANONYMOUS IP DATAGRAM EXCHANGE USING DYNAMIC NETWORK ADDRESS TRANSLATION. which issued on Jun. 15 2010 as U.S. Pat. No. 7 739 497 the contents of which are expressly incorporated herein by reference which application claims the benefit of U.S. Provisional Application No. 60 277 685 filed Mar. 21 2001.

The present invention was made with government support under Contract No. N66001 00 D 8041 awarded by the Defense Advanced Research Projects Agency DARPA . The government has certain rights in the invention.

The present invention relates generally to the field of network communication systems and more particularly to security systems for use with network communication systems.

A set of inter connected computer networks that spans a relatively large geographical area is called a wide area network WAN . Typically a WAN consists of two or more local area networks LANs that are themselves interconnected. Computers connected to a WAN are often connected through public networks such as the telephone system. They can also be connected through leased lines or satellites. The largest and best known WAN in existence is the Internet.

The Internet is a public world wide WAN defined by the IP Internet Protocol suite of protocols which has in recent years gone from being a tool used primarily in scientific and military fields to become an important part of the missions of a wide variety of organizations including commercial organizations. Organizations often run one or more LANs and connect their LANs to the Internet to share information with other remotely located organization run LAN and with the cyber world in general. However along with providing new levels of connectivity and sources of information connection to the Internet or to a private WAN has brought security risks in the form of adversaries seeking to disrupt or infiltrate the organization s mission by interfering with or monitoring the organizations networks.

Several security devices that exist today are designed to keep external adversaries from obtaining access to a LAN. Firewalls for example protect the LAN against unauthorized access by allowing only communications data commonly called datagrams or packets from known machines to pass. This is accomplished by monitoring network IP addresses on these packets which correspond uniquely to a particular machine and TCP service ports which usually map into a specific type of software application such as mail ftp http and the like. The firewall then determines whether to allow or disallow entry of the packet into the LAN as it deems appropriate.

Virtual Private Network VPN and other Internet Protocol Security IPsec devices protect against unauthorized interception of transmitted data by encrypting the entire packet. For example a VPN in tunnel mode wraps outgoing datagrams with its own header and sends the encrypted packet to a destination VPN. A limitation of VPNs however is that adversaries can determine where the VPN devices are located in the network since each VPN has a specific IP address. Accordingly a VPN does not hide its location in the network and is therefore vulnerable to an attack once its location is known. Similarly other security technology such as configured routers Secure Socket Layer SSL and host based Internet Protocol Security IPsec fail to obscure the location of nodes inside a network.

Although conventional security techniques are generally good for some of their intended purposes they do not address the problem of detecting intrusion attempts against the network. To alert against possible intrusion attempts network administrators have turned to intrusion detection sensing IDS technology. IDS technology is used to ascertain the level of adversary activity on the LAN and to monitor the effectiveness of other security devices such as those discussed above. IDS products work by looking for patterns of known attack including network probes specific sequences of packets representing attacks called known intrusion patterns or KIPs and the like. An administrator uses IDS technology primarily to determine the occurrence of any adversarial activity information useful in evaluating the effectiveness of current security technology and justifying additional commitment to network security.

In addition to protecting transmitted data an organization may wish to prevent unauthorized parties from knowing the topology of their LANs. Existing security techniques do not completely secure a network from adversaries who employ traffic mapping analysis. Data packets exchanged across networks carry not only critical application data but also contain information that can be used to identify machines involved in the transactions.

Today s sophisticated adversaries employ network level sniffers to monitor passively freely transmitted network traffic and thereby gather critical network topology information including the identities of machines sending and receiving data and the intermediate security devices that forward the data. The sophisticated adversary can use this identity information to map internal network topologies and identify critical elements such as roles of the servers clients and security devices on the network classes of data associated with specific servers and relative mission importance of specific machines based on network traffic load. The adversary can then use this network map information to plan a well structured network based attack.

Network security techniques have been developed that addresses this problem by concealing the identities of machines and topology in the LAN. Such technology was developed by the assignee of the present application and is described in U.S. patent application Ser. No. 09 594 100 entitled Method and Apparatus for Dynamic Mapping DYNAT Ser. No. 09 927 671 entitled Method and Apparatus for Providing Adaptive Self Synchronized Dynamic Address Translation ASD Ser. No. 09 928 133 entitled Method And Apparatus For Providing Adaptive Self Synchronized Dynamic Address Translation As An Intrusion Detection Sensor and Ser. No. 09 927 979 entitled Sliding Scale Adaptive Self Synchronized Dynamic Address Translation each of which is hereby incorporated by reference.

Both the DYNAT and ASD techniques can hide machine identities on for example IP data packets by translating source and destination addresses just prior to transmitting them over the Internet. When packets arrive at an authorized destination a receiving device programmed with the techniques restores the source and destination addresses according to a negotiated scheme and forwards the packets to the appropriate host on its LAN.

These techniques can perform direct translation of specific fields in the IP portion of the packet as well as in the transport session layer. The specific fields are summarized in . Thus it can be seen that these techniques obfuscate the identities in routable packets.

While the above techniques represent a significant advancement in the field of network security there exists a need for a method of concealing the identities of LAN machines and topology. There also exists a need for methodologies that thwart address based traffic analytic attacks within the local subnet. This additional security would make existing network security systems more robust and more difficult to defeat. The technique should ideally allow for construction of network access devices such as routers that offer the benefits of DYNAT and ASD to protect an enclave of computers. In addition these devices should be flexible enough to be self discovering able to negotiate mapping parameters with one another on a need based authorized basis.

Accordingly it is an object of this invention to drive up an adversary s cost of analyzing network traffic.

It is further an object of this invention to improve the DYNAT and ASD techniques by protecting sender recipient identities.

It is a further object of the invention to protect host level identities negating a wide range of address port based attacks.

Another object of the invention is to be able to be deployed in the last hop of the network in a local host collision domain.

It is also an object of the invention to be compatible with additional security techniques that protect packet payloads.

In accordance with the teachings of the present invention these and other objects may be accomplished by the present invention which is a method apparatus computer program and system for concealing the identity of a network device transmitting a datagram having a network layer header.

One embodiment includes determining a unique local identifier in accordance with a next hop address generating a broadcast address in accordance with the next hop address creating a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header wherein one portion of the network layer header is the unique local identifier and encapsulating the datagram with another network layer header whose address is set to the broadcast address. A method is also provided for receiving and detunneling the encapsulated datagram extracting an address of a recipient from the network layer header and admitting the datagram into a network domain.

Another embodiment of the present invention is an apparatus for concealing the identity of a network device transmitting a datagram having a network layer header. This embodiment includes a processor including processing circuitry configured to determine a unique local identifier in accordance with a next hop address generate a broadcast address in accordance with the next hop address and create a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier. The processor is further adapted to encapsulate the datagram with another network layer header whose address is set to the broadcast address.

Yet another embodiment includes an apparatus for forwarding a datagram having a network layer header. The apparatus includes a transceiver adapted to receive an encapsulated datagram from a network device. The apparatus further includes a processor including processing circuitry configured to detunnel the encapsulated datagram extract an address from the network layer header and admit the datagram into a network domain. The network device is adapted to determine a unique local identifier in accordance with a next hop address generate a broadcast address in accordance with the next hop address and create a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier. The network device is further adapted to encapsulate the datagram with another network layer header whose address is set to the broadcast address and transmit the encapsulated datagram.

Another embodiment of the present invention is an apparatus for concealing the identity of a network device transmitting a datagram having a network layer header including means for determining a unique local identifier in accordance with a next hop address means for generating a broadcast address in accordance with the next hop address means for creating a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier and means for encapsulating the datagram with another network layer header whose address is set to the broadcast address.

Yet another embodiment of the present invention is an apparatus for forwarding a datagram having a network layer header. This apparatus includes means for receiving and detunneling an encapsulated datagram from a network device means for extracting an address from the network layer header and means for admitting the datagram into a network domain. The network device is adapted to determine a unique local identifier in accordance with a next hop address generate a broadcast address in accordance with the next hop address and create a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier. The network device is further adapted to encapsulate the datagram with another network layer header whose address is set to the broadcast address and transmit the encapsulated datagram.

Another embodiment of the present invention is a computer program for concealing the identity of a network device transmitting a datagram having a network layer header operable to determine a unique local identifier in accordance with a next hop address generate a broadcast address in accordance with the next hop address and create a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier the network device is further adapted to encapsulate the datagram with another network layer header whose address is set to the broadcast address.

Another embodiment of the present invention is a computer program for forwarding a datagram having a network layer header operable to receive and detunnel an encapsulated datagram from a network device extract an address from the network layer header and admit the datagram into a network domain. The network device is adapted to determine a unique local identifier in accordance with a next hop address generate a broadcast address in accordance with the next hop address and create a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier. The network device is further adapted to encapsulate the datagram with another network layer header whose address is set to the broadcast address and transmit the encapsulated datagram.

Yet another embodiment of the present invention is a system for concealing the identity of a network device transmitting a datagram having a network layer header. The system includes a first processor adapted to determine a unique local identifier in accordance with a next hop address generate a broadcast address in accordance with the next hop address and create a partially encrypted network layer header by encrypting a plurality of identifying portions of the network layer header where one portion of the network layer header is the unique local identifier. the network device is further adapted to encapsulate the datagram with another network layer header whose address is set to the broadcast address. The system further includes a first transceiver electrically coupled to the first processor adapted to transmit and receive the encapsulated datagram. A second transceiver is adapted to receive the encapsulated datagram and a second processor electrically coupled to the second transceiver is adapted to detunnel the encapsulated datagram extract an address from the network layer header and admit the datagram into a network domain via the second transceiver.

The invention will next be described in connection with certain exemplary embodiments however it should be clear to those skilled in the art that various modifications additions and subtractions can be made without departing from the spirit or scope of the claims.

Applicants have previously invented a method of translating source and destination address and packet identifier information which remaps machine source and destination addresses and packet identifier information thereby changing the network appearance to adversaries outside a DYNAT or ASD protected enclave. The present invention makes the above mentioned techniques even more robust. In particular Applicants have invented a method that takes a datagram upon which the DYNAT or ASD techniques have been performed and then wraps that datagram inside another routable datagram. This new concept which may be referred to for the sake of convenience as Anonymous Unicast Dynamic Address Translation AUD sets the destination address of the enclosing header to the broadcast address of the recipient s subnet thereby preventing sniffers in the local collision domain from detecting the intended recipient of the datagram.

It should be noted that while the present invention will be described in the context of the Internet and the TCP IP version 4 suite of protocols it is not limited as such. To the contrary the invention could be used for other protocols such as for example Asynchronous Transfer Mode Token Ring Frame Relay IPv6 cellular digital packet data CDPD Internet control message protocol ICMP Internet group management protocol IGMP and more generally other entity address based protocols for wireline or wireless communications. Each of these protocols contains header parameters relating to a machine s location in the network that could be translated thereby providing obfuscation of the network topology.

A preferred embodiment of the AUD technique of the present invention will now be described with reference to . is a block diagram of a network including enclaves of local sending and receiving hosts respectively connected to the Internet . A bastion host computer hereinafter referred to as a sending peer or receiving peer is a gateway between an inside network and an outside network. Conventional routers are coupled to the peers and connect the enclaves to the Internet . A private WAN can also be connected between the enclaves. An exemplary embodiment of the present invention can be implemented in a host such as in the form of a network card or a bump in the wire intercept device and in the routers . Such cards and devices should include a transceiver having transmitting and receiving circuitry for transmitting and receiving packets. The cards or devices should also include memory for storing program code and data as well as some form of microprocessor computer chip or the like including circuitry for running the program code. The implementation preferably includes processes for setup packet receipt packet reply proxy mode and unsolicited send scenarios.

The setup process will now be described with reference to . In step the host and router are assigned to designated subnets and given true IP addresses one IP address per network interface for a router . These can be non routable addresses as long as they are unique on the domain to which their interface is connected. In step each network interface is assigned a unique local address. This unique identifier is simply the IP address for IPv4 or can be the EUI64 MAC address for IPv6.

Next in step the hosts network cards are configured with the other hosts keys in the local AUD domain as well as the AUD router s key corresponding to the network interface connected to the local domain. Preferably the key can be asymmetric certificate style public keys or a common group key. The AUD technique does not rely on any specific style of keys it only requires that one exist.

Next the router is given the hosts keys and keys are indexed by the unique local address of each host shown at step . The router is given beforehand a list of true IP addresses of the hosts. Additionally AUD routers external interface is configured with the knowledge of the subnet and similarly with keys and subnets of adjacent peer AUD routers.

In step a unique random initialization vector i.e. a large number is created for each host and the router and distributed to the hosts for use as an index counter to control encryption properties and to reduce the likelihood of collisions. A conventional pseudo random number generator PRNG can be used create the vector.

In step the hosts are given the IP address of their default AUD router. Each host in an AUD domain is configured with a default route specifically the address of an AUD router connected into its local collision domain. A default route is a path along which packets with unknown addresses are sent by default. Similarly an AUD enabled host preferably has a default location in which to send packets that are not intended for a host in the local collision domain. Several default routers may be used in accordance with the present invention. This scheme could be used to handle failover redirection or other backup operation for example.

A process for sending a packet from one host to another will now be described with reference to . More particularly this scenario describes how a host in an AUD domain sends a packet either to the outside world or to another host on the local domain. It should be noted that a sender may have access to more than one local AUD domain such as in the case of AUD routers.

In step the sender is given a complete IP packet with the true recipient IP address specified. The sender receives this packet from its upper level IP software. Next in step a next hop address is determined i.e. the next hop a packet will visit in a string of connections between two network devices. If the recipient is in the sender s AUD domain s i.e. the recipient subnet matches one of the sender s subnets then the next hop address is set to the IP address of the intended recipient as shown in step . If the recipient is not in any of the sender s AUD domains then a routing table is consulted to look up the IP address of the AUD router that handles the recipient s subnet as shown in step and at step the next hop address is set to the IP address of the looked up AUD router. Preferably the routing table applies to AUD routers and is a lookup table of packet subnets to interfaces i.e. the interface to which packets that match a particular subnet are sent to . The next hop address can be a multicast address one that is established for the purpose of multiple AUD routers in separate networking domains to communicate packets anonymously.

If it is determined at step that the recipient is not an AUD endpoint e.g. yahoo.com then this procedure is aborted and proxy mode is used as shown in step . Proxy mode is described in more detail below.

With regard to routing tables and proxying preferably the end point hosts always have a default AUD router for all non local traffic whether the destination specifies an AUD or a non AUD host. That is the AUD router is the only device that should be proxying and ideally only the AUD router sits on the edge of the enclave.

If it is determined at step that the recipient is an AUD endpoint then the tunneled datagram is created as shown in step . The creation of a tunneled datagram is described in detail below.

Next the sender creates a link layer frame to contain the tunneled datagram. The destination link layer address is set to the link layer broadcast value and the source link layer address is chosen per the link layer addressing description as shown in steps and respectively. This technique provides sender anonymity at the link layer.

At step the sender emits the link layer frame with datagram on the network interface that matches the next hop address. In one of the various paranoid modes described in more detail below the emission of the frame may be on a time controlled basis or other basis for use with a variety of full pipe traffic whitening techniques. Whitening techniques attempt to smooth out the emission of packets i.e. control the burstiness of data at the cost of artificial latency to defeat various timing detection analyses.

The creation of a tunneled datagram will now be described with reference to . This procedure requires an original IP datagram with the recipient IP address specified in the header and the next hop address as specified in the preceding paragraph.

Tunneled datagram creation begins at step by computing a unique local identifier such as one that is 64 bits long for the next hop address. For IPv4 networks this is simply the 32 bit IP address of the next hop prepended by zeros. For IPv6 networks this is the 64 bit extended unique identifier EUI media access control MAC address. In step the sender adds the unique next hop identifier UNHI into the original datagram s IP options field. If other options exist the UNHI is added to the end of the other options.

Next the sender looks up the appropriate encryption key using the unique next hop identifier as shown in step . In step the sender encrypts portions of the original IP header including the IP source and destination addresses IP identification number TTL time to live and IP options fields and the entire transport session layer headers using the looked up key. The resulting network layer header is hereinafter called the obfuscated datagram header.

A determination is made at step whether the recipient is in the sender s AUD domain. If the recipient is in the sender s AUD domain then at step the sender determines the destination IP address to be the broadcast address for the next hop subnet. For example if the sender has an IP address of 128.33.11.150 and the recipient address is 128.33.11.161 then the new IP datagram is addressed to 128.33.11.255 assuming IPv4 class C is used . This result is hereinafter called the broadcast datagram. Similarly the IPv6 multicast address would be used if running over IPv6 networks. If the recipient is not in the sender s AUD domain the sender determines the destination IP address to be the broadcast address for the next hop subnet. For example if the sender has an IP address of 128.33.11.150 and the recipient address is 207.123.169.100 and the default AUD router s address is 128.33.11.1 then the new IP datagram is addressed to 128.33.11.255. Note that the encrypted IP address would be set to 207.123.169.100 and the encrypted identifier would be 128.33.11.1 to indicate a forwarding operation.

If on the other hand the default AUD router is non local at the far side of the Internet for example then the broadcast address would appear different than for traffic destined locally. For example if the sending host s IP address is 128.33.11.150 and the AUD router has an address of 207.123.169.100 then the broadcast address 207.123.169.255 would be used as that is the broadcast of the AUD router s interface as shown at step .

At step the sender creates the encapsulating datagram sets the encapsulating source IP address to a completely random value that makes sense for the subnet and then in step encapsulates the obfuscated datagram in the encapsulating datagram with the broadcast address by using IP in IP encapsulation. The IP in IP encapsulation technique is known to those skilled in the art and described for example in Simpson W. 1853 IP in IP Tunneling 1853 October 1995.

Next at step the next protocol field in the broadcast datagram is set to type IP and at step the obfuscated datagram is appended to the encapsulating datagram header. In summary the packet structure used for Anonymous Unicast DYNAT is shown in the .

Packet reception will now be described with reference to . As shown in step all the hosts in the local domain receive a link layer frame including the sender having a broadcast IP header followed by an obfuscated IP datagram as described above in the packet send scenario.

In link layer technologies that utilize a sender address such as Ethernet the sender may recognize the link layer source address as one it chose. In the preferred mode the sender will choose to discard the link layer frame as shown in step . An alternative is to ignore the sender address and have every host including the sender decrypt the obfuscated IP address and check if the packet is meant for itself or another host.

Next at step the recipient and other hosts in the local domain decrypt the obfuscated IP header using their individual keys. The sender obtains the recipient s key and encrypts data using that key. When the recipient receives the packet it knows its own key so it uses that to decrypt the data. There are differences depending on whether symmetric or asymmetric keys are used. In the first case the same key is used for encryption and decryption and in the latter case the public key is used for encryption and a private key is used for decryption. As mentioned above either symmetric or asymmetric encryption can be used in the present invention.

The following actions are taken next. Each host makes a determination whether the decrypted IP header address matches its true IP address and if the decrypted unique local identifier in the IP options field matches its unique local identifier as shown at steps and respectively. If both the IP header address and unique local identifier match the host concludes it is the intended recipient. The host decapsulates the datagram decrypts the rest of the obfuscated datagram and forwards it to its local IP software for standard processing as shown at steps and respectively. Such forwarding may include sending a reply discussed in more detail below or can include further routing to an exterior network such as would be done by the AUD router on receipt of an out bound packet.

If the determinations at steps and determine that the decrypted unique local identifier matches the host s unique local identifier and the decrypted IP header address does not match its true IP address then the flow continues to step . Step makes a determination whether the subnet of the destination address matches a subnet that the host is connected to. If so then the host forwards the packet onto the appropriate network interface as shown in step . If the network interface that received the packet is also the interface for forwarding the packet the host can choose to drop the packet and prevent internal forwarding. That host then follows the above mentioned packet sending procedure to forward the packet on the proper network interface.

If a determination at step determines that the decrypted unique local identifier does not match that of the host then at step the packet is dropped i.e. packet is not intended for that host . A packet is also dropped if the destination address subnet does not match the host subnet as shown in steps and .

A process for receiving an inbound packet from a remote domain will now be described with reference to . This scenario describes how an inbound packet is distributed anonymously within the local AUD domain while protecting the identity of the recipient. As shown in step first the local AUD router receives a packet from the outside destined to a host inside the AUD domain. Next in step the AUD router detunnels the packet and extracts the IP address of the intended recipient. It can also determine which of many local domains the IP address belongs to allowing the AUD to support multiple physically distinct local collision domains. In step the packet is admitted into the AUD domain per description in the packet send scenario discussed above.

An illustrative scenario is shown in . Here during a packet s travel represented by the dashed line between domain and AUD AUD receives the packet from AUD . When the packet comes in AUD decrypts it as in the above mentioned receive scenario. AUD determines that the packet belongs inside its domain since the subnet broadcast address matches its subnet. AUD then behaves like any other host in domain AUD and performs a send operation to place the packet in the noise domain to be received by the local recipient. Thus the local AUD router receives a broadcast datagram header with an obfuscated datagram. i.e. tunneled datagram and retunnels the datagram into its own local domain. Tunneling is therefore performed at every step of the way. This is useful for the case when someone is sniffing the local domain. Advantageously there is no concept of trusted network subnets or domains. It is assumed that all network segments leading up to and touching the individual hosts are possibly hostile. is a flowchart showing a steady state operation in accordance with the present invention. This scenario describes how hosts behave when not involved in sending or receiving specific packets. There are two modes of operation na ve mode in which no extra traffic is emitted and paranoid mode in which spurious traffic is emitted.

In na ve mode the host s checks for new packets as shown in step and if step determines that a packet is being received then conventional packet processing is performed as shown in step . That is when the host is not receiving or sending a packet no action is taken resulting in a quiet wire condition. Notably na ve mode may lead to detection of a responder based on characteristics of the reply latency etc. A quite wire situation is when traffic is only transmitted when there is a legitimate cause for traffic to be sent. In other words there is no noise as in the paranoid mode every packet is being used for something. Thus when traffic is being observed one could theoretically know there is a cause for transmittal. An adversary could watch a series requests and replies and eventually conclude which machine was requesting and which was replying the number of parties requesting and replying and so on. From that information the adversary could perform external stimulus attacks e.g. flood a host and determine whether the request reply pattern changes. Similarly the host conventionally receives or sends a packet.

In paranoid mode the host s checks for new packets as shown in step . If step determines that a packet is not being received then it periodically emits traffic whether or not the host is replying to something as shown in step . Conventional packet processing is performed otherwise as shown in step . The purpose of paranoid mode is to defeat traffic frequency analysis and critical event stimulus analysis. This can be done on a timing chain mode of operation. Traffic is generated to approximate a pipe full condition at the cost of bandwidth efficiency. In this mode as opposed to na ve mode there is spurious traffic and chatty line. An attempt to extract messages from a line implementing the present invention in the paranoid mode would appear to be listening to multiple machines. The real messages however are hidden in that noise such that it is hard to pick out the actual messages from the noise and difficult to tell if any actual i.e. meaningful messages are being sent.

Proxy mode in accordance with the present invention will now be described. A proxy mode enables an AUD router to talk to a non AUD enabled device such as an Internet web server. A recipient is determined to be non AUD capable if no entry in an AUD routing table exists. That is only AUD enabled enclaves and hosts are contained in routing tables along with their keys . A standard NAT style connection is established with the recipient host terminated at the AUD router. As AUD packets enter in from the host the AUD router receives them as described above and creates NAT style datagrams for forwarding to the outside. Replies from the non AUD host are handled in standard NAT style.

The link layer source address specification will now be described with reference to . In order to reasonably hide the sender from being discovered the link layer source address is made as untraceable to the sender as possible. This process involves replacing the true link layer sender address with a contrived one. By following these steps the sender of the packet is concealed from passive wiretappers e.g. those adversaries with hardware connected to common hubs switches or the like . First in step the sender accesses its stored initialization vector. The sender then increments the vector by one and stores the result shown at step . Should the vector reach its maximum value determined by the number of bits it will be reset to zero rather than be incremented. With the incremented initialization vector value the sender encrypts its true link layer MAC address as shown at step . The encryption algorithm can be a symmetric cipher of appropriate strength or the like. Next at step the sender constructs an obfuscated sending link layer address using portions of the encrypted link layer address from step and by combining it with special reserved codes to create a custom link layer address.

In the case of Ethernet the obfuscated link layer address may be constructed in the following manner. Ethernet is a 6 octet or 48 bit address. The top three octets are set to the vendor code as per a designation list maintained in a database or on a server. Preferably all the vendors link layer software implementing AUD use a common vendor code for the sender address so that the adversary will not be able to distinguish the sender based on the brand of their network card software. The bottom three octets are the bottom bytes of the encrypted link layer address. Next the Ethernet frame is constructed with the destination address set to broadcast and the source address set to this unique value.

Note that with only twenty four unique bits to work with different keys in use and different initialization vectors there may be recipient collisions of addresses. A recipient collision would occur if two hosts simultaneously chose the same sender address for frames.

As described above with regard to receiving a packet if a sender recognizes a source address as its own it may drop the packet. This may seem problematic for the true intended recipient if a collision is occurring i.e. if the true recipient s sending address matches the destination address . The recipient involved in the collision will discard the packet. If this should happen then upper layer protocols would detect that the host did not receive the packet causing the packet to be re sent. The chances of a collision occurring again would be much less. It would be as if a momentary network outage had occurred.

Note that the AUD technique can be used over a unique link layer protocol that omits the sender link layer address.

A local AUD collision domain is defined to be a group of AUD aware apparatus connected to a common link layer collision domain and one of these apparatus is be an AUD aware router that is capable of forwarding AUD tunneled datagrams to other AUD aware routers and receiving AUD tunneled datagrams from other routers.

A back to back arrangement of default AUD routers chaining together a series of adjacent collision domains within a local network may be used but a router to router topology is more flexible and is preferred. The recipient subnet is used to construct the broadcast header i.e. that of the enclosing datagram . If the AUD default router is in the local collision domain perfect anonymity is achieved. If however the AUD default router is in a different link layer collision domain a traffic analyst may be able to determine a communication linkage between these two logically separated subnetworks. This represents a tradeoff between anonymity and operational versatility.

Two AUD routers may be employed simultaneously. In addition to an AUD router inside a network an additional AUD router at the border for use in enclave internet enclave communications may be installed. This allows for the creation of a single tunnel between enclaves. For example multiple AUD domains can be fed into one border AUD router which is connected to the Internet resulting in one AUD tunnel going over the Internet. Without this border router an adversary would see multiple individual AUD tunnels going over the Internet. Accordingly using the border router makes it still more difficult to correlate traffic.

With regard to proxying preferably the enclave border AUD router handles all proxying for the enclave. By pushing proxying up to the edge of the network maximum obfuscation of the identity of the host is achieved.

An example of a message transmission from host H e.g. address 128.11.33.100 to host H e.g. address 207.123.169.5 will now be described. The AUD processing features of H receive an IP datagram i.e. original IP datagram from H s system software. It looks at the datagram and first determines that H is not in its local domain an consequently chooses a next hop address of the router AUD . From this next hop address H creates the next hop unique identifier and puts this in the IP options field of the original IP datagram. H encrypts portions of the original IP datagram and then creates an encapsulating IP header and sets the destination address to AUD s broadcast address i.e. 128.11.33.255 sets the source to some random value X i.e. 128.11.33.X and sends the message onto the wire. It should be noted that this example could easily have been implemented using Ethernet protocols and still be within the scope of the invention. The IP suite of protocols is merely being used for illustrative purposes. 

AUD receives the tunneled datagram as do all of the hosts . AUD then decrypts the tunneled packet examines the destination subnet on the encapsulating header i.e. 128.11.33.X and decrypts the unique next hop identifier out of the encapsulated IP options field and sees that it is the next hop. Next based on routing tables AUD determines in order to get to H the next hop must be AUD . A similar retunneling operation is performed the next hop becomes AUD and the packet is admitted into ND. The message is then received by AUD and similarly next hopped to AUD .

AUD determines that the destination IP address the destination on the inner encapsulated datagram is in its domain and next hops the message to H. H receives it and at this point the unique next hop identifier should equal H and should match the true IP address in the encapsulated datagram. H detunnels and decapsulates the original IP datagram and forwards this datagram up into its operating software for proper handling.

As an alternative to enclave to enclave AUD network administrators may choose to implement IPsec or some other tunneling scheme between AUD routers. Though this has several advantages the primary disadvantage is that the traffic analyzer can correlate communicating subnets which may give useful information to an adversary. The use of noise domain tunneling may thwart knowledge of which subnets are communicating.

The use of Anonymous Unicast DYNAT AUD overcomes some of the problems with the previous per packet and other variants on DYNAT and gains many benefits. The AUD technique allows the DYNAT address obfuscation technique to be deployed in the last hop of the network in the local host collision domain i.e. last hop deployability . The AUD technique is also firewall friendly. Since the DYNAT packets are being tunneled using IP in IP encapsulation firewalls can be configured to accept the broadcast IP in IP packets while rejecting other packets. The firewall would not have to look at the address or the port of the encapsulated datagram.

The AUD technique also layers well with additional security techniques including IPsec and SSL which protect packet payloads HTTP FTP and the like from analysis. The AUD technique according to the present invention protects sender recipient identities. Along with the AUD technique tunneling technologies can be used to protect packet headers sent into the local AUD domain such that the destination address is hidden when the AUD router receives it. Tunneling techniques may include per packet DYNAT ASD IPsec or other encipherment techniques.

Another advantage of the AUD technique is that it is impervious to fragmentation. A common problem with encapsulating techniques such as IPsec is that fragmentation of the IP datagram often results in undecipherable fragments. The AUD technique functions only on the header portions of the packet and would not incur fragmentation decryption problems.

Yet another advantage of the present invention is that it has application layer independence. Since the AUD technique only operates on the link network and transport layers of the protocol stack networks need no special application specific proxies.

Another advantage of the AUD technique is that it can protect host level identities negating a wide range of address port based attacks enabling special intrusion detectors to be used.

It should also be noted that while the invention has been described above in the context being implemented as a host card or software modification to a router the invention is not limited as such. For example the present invention can also be implemented as software or hardware modifications to a computer bastion host firewall network address translator NAT Bridge Switch Gateway virtual private network VPN device transceiver mobile communications device satellite and the like. Accordingly the teaching of this invention can be applied to any type of network communications device or system using addressing techniques to route to a network device.

More generally the invention has been particularly shown and described with respect to preferred embodiments thereof it will be understood by those skilled in the art that changes in form and details may be made therein without departing from the scope and spirit of the invention.

