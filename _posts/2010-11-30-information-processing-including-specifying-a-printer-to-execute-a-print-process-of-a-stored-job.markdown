---

title: Information processing including specifying a printer to execute a print process of a stored job
abstract: An information processing apparatus which stores a job generated by a printer driver in memory unit, and specifies a printer to execute a print process of the stored job in accordance with a request from a client, comprises: determination unit for determining whether a job for which a print instruction is issued by the request is generated by a generic driver; device type specification unit for specifying a device type of a printer capable of printing the job for which the print instruction is issued, based on setting information of the job, when the determination unit determines that the job is generated by the generic driver; and printer specification unit for specifying, as the printer capable of printing the job for which the print instruction is issued, a printer corresponding to the printer information which is managed by a management unit and matches the device type specified.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08553264&OS=08553264&RS=08553264
owner: Canon Kabushiki Kaisha
number: 08553264
owner_city: Tokyo
owner_country: JP
publication_date: 20101130
---
The present invention relates to an information processing apparatus a network device a system a control method and a computer readable medium. The present invention more particularly relates to a technique of specifying a printer that prints a job to be printed after a PDL job generated by a generic driver is stored in a print server.

A generic driver is a printer driver that is generically common to print devices such as a color multifunction peripheral a monochrome multifunction peripheral and an single function peripheral SFP and can output print data described in a PDL Page Description Language to these devices as a print job. On the other hand a conventional driver that is unique for each device model is called a specific driver. In a print server which starts to print a print job after storing and temporarily suspending it a printer is selected upon a print start request.

Note that a print job generated by a specific driver can be printed only by a printer related to the driver. On the other hand in generating a print job by a generic driver the type of printer used to carry out the print job need not be considered. Also in the latter case a printer corresponding to the generic driver can be selected at the start of printing and this realizes a more flexible print system.

In printing that uses a conventional generic driver a printer capable of printing a job is specified from information on a network in job generation in accordance with the type of PDL for example PS or PCL see Japanese Patent Laid Open No. 2002 91732 .

Print data generated by a generic driver is a job generic for a plurality of device models but nonetheless print data generated upon for example A3 color setting cannot be printed by an A4 monochrome specific printer. That is a printer capable of printing a job differs depending on job setting for example an A4 A3 monochrome or color job .

A certain print system temporarily stores print data in a print server and thereafter starts to print. In this system the user selects print data stored in the print server and selects a printer from a list of printers capable of printing this data to issue a print instruction and the selected data is output to the printer as a job to start its printing. In such a system it is a conventional practice to specify a printer capable of printing print data generated by a specific driver by referring to the name of the driver that has generated this data.

However as described earlier a printer capable of printing print data generated by a generic driver differs depending on its setting A4 A3 monochrome or color data so a printer capable of printing this data cannot be specified by referring to the driver name.

The present invention provides a method which can specify a printer capable of printing jobs print data stored in the server of the above mentioned system upon an actual print request even if the jobs include a job generated by a generic driver.

According to one aspect of the present invention there is provided an information processing apparatus which stores a job generated by a printer driver in memory unit and specifies a printer to execute a print process of the stored job in accordance with a request from a client comprising storage unit for receiving a job generated by a generic driver corresponding to printers of a plurality of device types and a job generated by a specific driver corresponding to a specific printer and storing the received jobs in the memory unit management unit for managing printer information including a device type of a printer determination unit for determining whether a job for which a print instruction is issued by the request is generated by a generic driver device type specification unit for specifying a device type of a printer capable of printing the job for which the print instruction is issued based on setting information of the job when the determination unit determines that the job is generated by the generic driver and printer specification unit for specifying as the printer capable of printing the job for which the print instruction is issued a printer corresponding to the printer information which is managed by the management unit and matches the device type specified by the device type specification unit wherein the printer specification unit specifies as the printer capable of printing the job for which the print instruction is issued a printer corresponding to a specific driver which has generated the job when it is determined that the job for which the print instruction is issued is generated by the specific driver.

According to one aspect of the present invention there is provided an information processing apparatus which stores a job generated by a printer driver in memory unit and specifies a job which can be printed by a printer in accordance with a request from the printer comprising storage unit for receiving a job generated by a generic driver corresponding to printers of a plurality of device types and a job generated by a specific driver corresponding to a specific printer and storing the received jobs in the memory unit management unit for managing printer information including a device type of a printer and device type specification unit for specifying a device type of the printer which has issued the request based on the printer information managed by the management unit 1 determining whether the job which is generated by the generic driver and stored in the memory unit can be printed by the printer of the specified device type 2 determining whether the job which is generated by the specific driver and stored in the memory unit can be printed by the printer based on driver information of the job and specifying a job which can be printed by the printer from the jobs stored in the memory unit wherein the printer executes a print process of the specified job.

According to another aspect of the present invention there is provided a network device which communicates with an information processing apparatus that stores a plurality of jobs generated by a printer driver in memory unit comprising reception unit for receiving information used to select a job to undergo a print process from the plurality of jobs stored in the memory unit control unit for displaying a list of jobs on display unit based on the information received by the reception unit and requesting unit for issuing a print request to the information processing apparatus to execute a print process of a job selected from the displayed list of jobs wherein the selected job includes a job generated by a generic driver corresponding to printers of a plurality of device types and a device type of a printer capable of printing the job generated by the generic driver is specified based on setting information of the job and a printer corresponding to the specified device type executes a print process of the job.

According to another aspect of the present invention there is provided a system which includes an information processing apparatus that stores a job generated by a printer driver in memory unit and is configured to execute a print process of the stored job using a printer in accordance with a print request comprising storage unit for storing in the memory unit a job generated by a generic driver corresponding to printers of a plurality of device types and a job generated by a specific driver corresponding to a specific printer management unit for managing printer information including a device type of a printer and device type specification unit for specifying a device type of a printer capable of printing the job which is generated by the generic driver and stored in the memory unit wherein a printer corresponding to the printer information which is managed by the management unit and matches the device type specified by the device type specification unit executes a print process of the job generated by the generic driver.

According to another aspect of the present invention there is provided a control method for an information processing apparatus which stores a job generated by a printer driver in memory unit and specifies a printer to execute a print process of the stored job in accordance with a request from a client comprising a storage step of receiving a job generated by a generic driver corresponding to printers of a plurality of device types and a job generated by a specific driver corresponding to a specific printer and storing the received jobs in the memory unit a management step of managing printer information including a device type of a printer a determination step of determining whether a job for which a print instruction is issued by the request is generated by a generic driver a device type specification step of specifying a device type of a printer capable of printing the job for which the print instruction is issued based on setting information of the job when it is determined in the determination step that the job is generated by the generic driver and a printer specification step of specifying as the printer capable of printing the job for which the print instruction is issued a printer corresponding to the managed printer information which matches the device type specified in the device type specification step wherein in the printer specification step a printer corresponding to a specific driver which has generated the job for which the print instruction is issued is specified as the printer capable of printing the job when it is determined that the job for which the print instruction is issued is generated by the specific driver.

According to another aspect of the present invention there is provided a control method for an information processing apparatus which stores a job generated by a printer driver in memory unit and specifies a job which can be printed by a printer in accordance with a request from the printer comprising a storage step of receiving a job generated by a generic driver corresponding to printers of a plurality of device types and a job generated by a specific driver corresponding to a specific printer and storing the received jobs in the memory unit a management step of managing printer information including a device type of a printer and a device type specification step of specifying a device type of the printer which has issued the request based on the managed printer information 1 determining whether the job which is generated by the generic driver and stored in the memory unit can be printed by the printer of the specified device type 2 determining whether the job which is generated by the specific driver and stored in the memory unit can be printed by the printer based on driver information of the job and specifying a job which can be printed by the printer from the jobs stored in the memory unit wherein the printer executes a print process of the specified job.

According to another aspect of the present invention there is provided a control method for a system which includes an information processing apparatus that stores a job generated by a printer driver in memory unit and is configured to execute a print process of the stored job using a printer in accordance with a print request comprising a storage step of storing in the memory unit a job generated by a generic driver corresponding to printers of a plurality of device types and a job generated by a specific driver corresponding to a specific printer a management step of managing printer information including a device type of a printer and a device type specification step of specifying a device type of a printer capable of printing the job which is generated by the generic driver and stored in the memory unit wherein a printer corresponding to the managed printer information which matches the device type specified in the device type specification step executes a print process of the job generated by the generic driver.

According to another aspect of the present invention there is provided a control method for a network device which communicates with an information processing apparatus that stores a plurality of jobs generated by a printer driver in memory unit comprising a reception step of receiving information used to select a job to undergo a print process from the plurality of jobs stored in the memory unit a control step of displaying a list of jobs on display unit based on the information received in the reception step and a requesting step of issuing a print request to the information processing apparatus to execute a print process of a job selected from the displayed list of jobs wherein the selected job includes a job generated by a generic driver corresponding to printers of a plurality of device types and a device type of a printer capable of printing the job generated by the generic driver is specified based on setting information of the job and a printer corresponding to the specified device type executes a print process of the job.

According to the present invention it is possible to specify a printer capable of printing jobs print data stored in the server of the above mentioned system upon an actual print request based on setting information such as the device type and driver name of the stored job even if the jobs include a job generated by a generic driver.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

Best modes for carrying out the present invention will be described below with reference to the accompanying drawings. Note that in a system according to the present invention a network device including a display means and connected to a network such as a client or a printer requests an external server in the system to output a job to the printer thereby executing desired printing.

The CPU reads a program stored in the HDD into the RAM and executes a process based on this program thereby managing each process on the computer. The ROM stores programs and data that are associated with each process of the device and is not rewritable. The RAM can electrically store temporary data that is associated with each process of the device and is rewritable. The programs and data that are associated with each process of the device and the temporary data that is associated with this process for example are stored in the HDD . The input device includes a keyboard and pointing device which accept an instruction input to the device. The display device displays the operation status of the device and information output by each program running on the device. The network I F connects to a LAN and the Internet via a network and exchanges information with the outside. The external device I F can connect for example to an external storage device.

The image reader reads an original using the original feed unit . The image reader and image forming unit convert a read original or data received via a network into a print image and print it out. The paper delivery unit delivers the printout paper and performs processes such as sorting and stapling for this paper. The network I F can connect to a LAN and a WAN via a network and exchanges information with the outside. The CPU reads a program stored in the ROM or HDD into the RAM and executes a process based on this program thereby managing each process on the device printer . The ROM as a nonvolatile memory means stores programs and data that are associated with each process of the device. The rewritable RAM electrically stores temporary data that is associated with each process of the device. The HDD stores for example the programs and data that are associated with each process of the device and the temporary data that is associated with this process. The operation unit displays a screen and accepts a user operation instruction via the screen.

The Web server includes a request processing unit interface unit Web page generation unit and logic unit . The request processing unit receives requests from the client and a pull print application and sends back responses to them. The request processing unit sends back a Web page to the client as a response to the request from it and sends back information formatted in XML to the client as a response to the request from it. The interface unit processes communication with the document server cache server system management server and authentication server . The logic unit executes a process in accordance with a request accepted by the request processing unit .

Examples of requests to the Web server include login and print start print cancel display deletion of a stored document. In accordance with the requests the Web server acquires data from each server or issues a document operation request to another server and sends back the results of these operations to these servers as responses.

The document server includes an interface unit document manager and data management unit . The interface unit processes communication with the Web server print server and cache server . The document manager executes a process in accordance with a request accepted by the interface unit . The data management unit manages document information in the form of a database and updates it in accordance with an instruction from the document manager . The database is stored in the HDD shown in . Also device model information and printer information are periodically acquired from the system management server and stored on the RAM .

The print server includes an interface unit job manager device manager and data management unit . The interface unit processes communication with the document server cache server and system management server . The job manager reads out print document data stored in the network storage and transmits it to the printer in accordance with a request accepted by the interface unit . Also the job manager monitors a print job of the printer and tracks the print job until printing is completed. The device manager monitors the status of the printer . The data management unit manages job information in the form of a database and updates it in accordance with an instruction from the job manager or device manager . The database is stored in the HDD shown in . Also the device model information and printer information that are necessary for printing are periodically acquired from the system management server and stored on the RAM . Note that a print job to be executed is defined in a PDL Page Description Language based on a print instruction and generated by a generic driver or a specific driver. Also a print job PDL job to be executed herein will be simply referred to as a job unless otherwise specified. Moreover the type of PDL used for description is not particularly limited.

The cache server includes an interface unit cache manager and data management unit . The interface unit processes communication with the Web server document server cache server and system management server . The cache manager executes a process in accordance with a request accepted by the interface unit . The data management unit manages caches of document information job information device model information and printer information in the form of a database. The data management unit updates these data in accordance with an instruction from the cache manager . The database is stored in the HDD shown in .

The document information job information device model information and printer information held in the cache server are caches. The pieces of information held in the cache server are equivalent to those managed by the document server print server and system management server . In updating the pieces of information managed by the document server print server and system management server the cache server is also notified of the updating. The caches managed by the cache server are updated in accordance with the update notification.

The system management server includes an interface unit master manager and data management unit . The interface unit processes communication with the Web server document server print server and cache server . The master manager executes a process in accordance with a request accepted by the interface unit . The data management unit manages caches of the device model information and printer information in the form of a database and updates these data in accordance with an instruction from the master manager . The database is stored in the HDD shown in .

The client typically is for example a desktop personal computer a notebook sized personal computer a mobile personal computer or a PDA Personal Data Assistant but may be a cellular phone which includes the execution environment of a program. The client includes a Web browser as a user interface application and can access the Web server via the Web browser.

The printer is a printer for example a multifunction peripheral or a laser printer which can be connected to a network and executes a print process. Although only a single printer is shown in for the sake of convenience the present invention is not limited to this and a plurality of printers of different models may be provided on the system.

The network storage is a storage which can be directly connected to a network such as a SAN Storage Area Network or a NAS Network Attached Storage . In this embodiment a NAS for example is used as the network storage . The network storage holds print document data related to the document information .

The authentication server is a server which supports a protocol such as LDAP and provides a directory service and manages user information in the system. The authentication server performs user authentication in response to a request from the Web server and sends back authentication information to it.

A data structure used in this embodiment will be described next. Note that the data structure described herein is merely an example and the present invention is not limited to the information shown in this example.

The document information includes a document ID document name user name data path driver name and device type . The document ID is the identifier of a stored document and is issued and registered in document registration by the document server . The document name is a document name given by the user. The user name is the account name of the user who has registered the document. The data path is a path in which print data related to the document is stored.

The driver name is the name of a printer driver which has generated the print data. The device type is set especially when a generic driver has generated the print data. In this case information such as A3 color A3 monochrome A4 color or A4 monochrome is set as a device type corresponding to the printer functions for example the paper size and color printing .

The document server analyzes print data generated by a generic driver in document registration and registers the device type based on information embedded in it. The device type is embedded in the head field of the print data so not all data need be analyzed. However the device type may be specified device type specification by analyzing all data for example other setting information . Although four device types are defined in this embodiment the present invention is not limited to this and other device types may be defined in accordance with various types of print settings such as the paper size and post processing setting for example stapling of a job.

The job information includes a job ID document ID user name status printer name and driver name . The job ID is the identifier of a job and is issued and registered by the print server upon print request acceptance. The document ID is the same as that of the document information . The user name is that of the user who has executed printing. The status is the status of a job. The status includes a standby status in which a job is standing by to be printed a transfer in progress status in which data is being transferred to the printer and a printing in progress status in which printing is being executed by the printer . The printer name is the name of a printer which prints the job. The driver name is the name of a driver having been used for print data generation.

The device model information includes a model name driver name and device type . The model name is the model name of the printer . The model name is fixed for the printer and is not changed. The driver name is the name of a printer driver with which the printer with the model name can print a job. In the device type the printer with the model name is classified in accordance with the type of printable job. The device type includes A3 color A3 monochrome A4 color and A4 monochrome types. A3 color for example indicates a printer of a model corresponding to A3 paper size A4 paper size monochrome printing and color printing. Note that the number of device types can be changed in accordance with the performance of a device model. That is other device types may be defined in addition to the above mentioned four device types.

The printer information includes a printer name address port number transfer method status substitution condition substitute printer model name device type pull print flag and driver name . The printer name is a printer name given by the user. The address is an IP address which can be connected to the printer and has a specification such as IPv4 or IPv6. The port number is a port number used to transmit print data to the printer . The transfer method is a transfer method used to transmit print data to the printer . Examples of the transfer scheme include RAW and LPR Line PRinter daemon protocol in which data is continuously transmitted as a stream by TCP IP and a scheme of transmitting data by HTTP.

The status indicates the status of the printer and stores a notification from a schedule application . The substitution condition is a condition for determining whether to execute substitute printing using another printer as upon a failure interruption of printing. A plurality of statuses of the printer can be designated as the substitution condition and substitute printing is executed when the status of the printer printing of which is in progress matches the substitution condition . The substitute printer indicates the name of a substitution destination printer which executes substitute printing and a plurality of printers can be registered as the substitute printer by assigning priority levels to them. The model name is designated by the user in printer registration. The device type is set by referring to the model name and device type of the device model information based on the model name . The pull print flag is a flag for specifying a printer which prints from a pull print application on the printer and takes a true false value. The pull print flag of the printer which prints from the pull print application has a true value. The driver name is a driver name corresponding to the printer. Printer information in which no driver name is set is also present.

Referring to an image forming unit executes a series of image forming processes such as paper handling and image transfer fixation to form an image on a recording medium such as recording paper. The image forming unit includes for example an inkjet printer or an electrophotographic image forming unit.

An image reading unit includes for example a scanner and optically reads and converts an original image into digital image information. Also the image reading unit outputs the digital image information to the image forming unit to form an image or passes it to for example a facsimile unit or a network interface unit to transmit it via a line.

A device controller controls the operations of the image forming unit and image reading unit so that for example original information read by the image reading unit is copied by the image forming unit . Also the device controller includes a network interface unit a print processing unit the facsimile unit and an operation control unit and controls information exchange among these units. The facsimile unit transmits receives a facsimile image that is transmits digital image information read by the image reading unit or conversely decodes a received facsimile signal and performs a process of for example recording the decoded image using the image forming unit .

The operation control unit performs control so that a signal corresponding to user operation which uses an operation panel of the operation unit is generated and various types of data messages etc. are displayed on for example the operation unit or the display unit . The print processing unit controls an operation of for example processing print data input via the network interface unit outputting it to the image forming unit and printing it using the image forming unit . The network interface unit controls data transmission reception with another communication terminal via a communication line.

A virtual machine is positioned at a level higher than the device controller and can control the device controller . The network interface unit can be directly used from both the device controller and the virtual machine and allows them to independently access an external network.

Furthermore applications described in programming languages corresponding to APIs Application Programming Interfaces provided by the virtual machine are present at a level higher than the virtual machine . These applications can indirectly act on the device controller via the virtual machine and also can operate the image forming unit and image reading unit .

In this embodiment the printer includes as the above mentioned applications the schedule application the pull print application and an authentication application . Each of these applications can be uninstalled from the virtual machine or a new application can be installed on the virtual machine . Although the above mentioned applications are installed on the printer in this embodiment their functions may be implemented as hardware. The above mentioned applications may be implemented as those on a computer communicably connected to the printer as an external device.

An external storage device control unit converts an image read by the image reading unit into data in a format which can be stored in the image forming unit and stores it in an external storage device. Also the external storage device control unit reads out the data stored in the external storage device and performs its print process via the image forming unit or performs its network transmission to the outside via the network interface unit . In this embodiment an IC card reader is communicably connected to the printer as a means for login to it and the authentication application can be notified of user account information via the IC card reader . As a matter of course this login means may use another method such as the use of an ID card reader or an input from a device panel managed by the operation control unit .

The schedule application performs connection to the print server and request acceptance from it and notification of a change in status of a print job which is sent from the device controller via the virtual machine . The schedule application is a module that schedules or manages a print job accepted from the print server and performs control to sequentially execute printing in accordance with the schedule. Also the schedule application communicates with the device controller via the virtual machine to acquire a change in status of the printer and notifies the print server of the acquired information.

The authentication application acquires IC card information from the IC card reader communicably connected to the printer and acquires a user ID from a user management table managed by itself. The user management table is a two dimensional table including the IC card information and the user ID.

The authentication application notifies the pull print application of the acquired user ID. Also the authentication application detects logout of the user and notifies the pull print application of the logout. Examples of logout detection methods include detection of pressing of a hard key of the printer and automatic logout when the user has not operated for a predetermined time.

Upon receiving an authentication success response not shown from the authentication server the Web server acquires a list of document information of the user who has succeeded in the authentication from the cache server and holds it on the RAM S . The document information acquired in this case is formatted in a list of the authenticated user name and the user name registered in the document information which match each other. The Web server generates a document list screen shown in based on the list of document information and transmits it to the client S .

A document list screen shown in is displayed on the Web browser on the client and a document is selected by the user on the screen S . The user can simultaneously select more than one document using document selection check boxes in the document list . When the user presses a print button after he or she selects documents on the document list screen the Web browser issues a request to the Web server to print the selected documents S . The print request S includes a list of document IDs selected by marking the document selection check boxes in the document list .

Upon accepting the print request S the Web server specifies document information to be printed using the list of document IDs included in the print request. Next the Web server specifies a printer capable of printing the list of document information to be printed S . Although not shown the device model information and printer information that are used for the printer specification S are acquired from the cache server and stored on the RAM of the Web server . These pieces of information may be acquired during the printer specification S or periodically acquired updated. Details of a method of specifying a printer capable of printing the document information in step S will be described later.

When the Web server specifies a printer capable of printing the document information S it generates a printer selection screen shown in based on the specified printer and transmits it to the client . The printer selection screen is displayed on the Web browser on the client . When the user selects a printer selection check box on the printer selection screen and presses a print button a print request is transmitted from the Web browser to the Web server S . The print request S includes the printer name selected via the printer selection check box .

Upon accepting the print request S the Web server instructs the document server to execute printing S . A print request issued at that time S includes the list of document IDs and the printer name which are included in the print requests issued from the client in steps S and S respectively. Upon accepting the print request S the document server instructs the print server to execute printing S . A print request issued at that time includes the list of document IDs and the printer name . In accordance with the print request S the print server generates job information and issues a print instruction to the printer .

The print server is executing printing using the printer and can detect a job print error. Examples of a method of detecting a print error include determination that the print server cannot be connected to the printer and notification of a print error by the schedule application due to a paper jam in the process of delivery. Upon detecting a print error the print server notifies the document server of the print error as a response to for example the sequence shown in S . This print error notification S includes a print error factor the printer name and the document ID and the document server can specify the job information and printer information based on this notification.

In response to the print error notification S the document server performs substitution determination S . The substitution determination is performed under the substitution condition set in the printer information of a printer that has encountered a print error and substitute printing is executed if the substitution condition matches the error factor sent from the print server . If it is determined by the substitution determination S that the error factor satisfies the substitution condition the document server specifies a printer to substitute S . A substitution destination printer is selected from substitute printers for the printer that has printed. Among the substitute printers a printer capable of printing the print job that has resulted in a print error is determined as a substitution destination. Details of the determination in step S as to whether the job that has resulted in a print error can be printed by the substitute printer will be described later. When the document server specifies a substitution destination printer S it issues a print request to the print server S . The print request S includes the document ID of the job that has resulted in a print error and the printer name of the substitution destination printer. After that the print server issues a print instruction to the substitution destination printer.

The process sequence of the Web server in printing based on an instruction from the client will be exemplified. The Web server determines whether a job print data generated by a generic driver is included in a list of jobs for which the print request S is accepted S . The determination in step S is based on whether the driver name of the document matches the name of the generic driver. If it is determined in step S that a job generated by a generic driver is included in the list of jobs requested to be printed it is determined in step S whether all jobs are jobs print data generated by the generic driver based on the driver name as in step S. If it is determined in step S that all jobs are jobs print data generated by the generic driver the process advances to step S in which a printer capable of printing the jobs is determined based on a table for determining a printer capable of printing a job shown in . This process sequence then ends. Although the driver name is used as a determination criterion in this sequence another driver information may be used as long as it can be used to identify a driver. In this case corresponding information must be held in the data.

 The table for determining a printer capable of printing a job will be described herein. The printer determination table is an association table for determining whether printing is possible by comparing the device type of a job with the device type of a printer. A job corresponding to an A3 color device type can be printed by a printer corresponding to an A3 color device type . A job corresponding to an A4 color device type can be printed by a printer corresponding to an A3 color or A4 color device type . A job corresponding to an A3 monochrome device type can be printed by a printer corresponding to an A3 color or A3 monochrome device type . A job corresponding to an A4 monochrome device type can be printed by a printer corresponding to an A3 color A4 color A3 monochrome or A4 monochrome device type . It is determined whether printing is possible using the table for determining a printer capable of printing a job based on device types of all jobs requested to be printed in step S and device types of all printers registered in the print system. A printer capable of printing all jobs requested to be printed is specified. In this embodiment the printer determination table is an association table in which four types of jobs are associated with printers. However when device types are added in accordance with for example the functions of printer devices the determination table can also be newly defined in accordance with them.

If it is determined in step S that not all jobs requested to be printed are jobs print data generated by the generic driver the process advances to step S in which it is determined whether a specific driver of only one type has been used. This determination is done by referring to driver names of the documents. If specific drivers of a plurality of types have been used it is determined that no printer capable of printing is present and an error is output S . This process sequence then ends. If it is determined in step S that a specific driver of only one type has been used the device model is specified based on the driver name of the specific driver of one type. The device model has the model name of printers with the same driver name in the device model information . It is determined whether the jobs generated by the generic driver among the jobs requested to be printed can be printed by the printer with the specified model name S . This determination is done using the table for determining a printer capable of printing a job based on the device types of all jobs generated by the generic driver and the device type of the model name . Details of the determination based on the table for determining a printer capable of printing a job are as described above.

If it is determined in step S that the jobs generated by the generic driver cannot be printed by the printer of the device model related to the specific driver it is determined that no printer can print the jobs and an error is output S . This process sequence then ends.

If it is determined in step S that printing is possible the process advances to step S in which the next determination operation is performed. In step S printer information in which the device model related to the specific driver of one type matches the model name is specified and it is determined whether the driver name is that of a specific driver. If it is determined in step S that the driver name is that of a specific driver it is confirmed whether this specific driver is the same as the specific driver which has generated the jobs requested to be printed and if YES is determined in this confirmation a printer corresponding to the specific driver is decided as a candidate for a printer capable of printing the requested jobs S . This process sequence then ends.

If it is determined in step S that the driver name is not of a specific driver the process advances to step S. In step S it is determined whether printer information which is specified in the same way as in step S and designates no driver by a driver name is present. If it is determined in step S that the printer information designates no driver the process advances to step S. In step S if the driver name related to the device model of the printer information matches that of the jobs which are requested to be printed and generated by the specific driver a printer corresponding to this printer information is decided as a candidate for a printer capable of printing the jobs. This process sequence then ends. If it is determined in step S that all printer information designate drivers it is determined that no printer capable of printing the jobs is present and an error is output S . This process sequence then ends.

If it is determined in step S that jobs requested to be printed include no job generated by a generic driver the number of driver names of the jobs is determined S . If it is determined in step S that the jobs have a plurality of driver names it is determined that no printer capable of printing the jobs is present and an error is output S .

If it is determined in step S that a driver of one type has been used the process advances to step S. In step S printer information having a driver name which matches that of a specific driver is determined. In step S a printer corresponding to printer information which is determined to designate a specific driver and in which the name of the specific driver matches the driver name of the jobs is decided as a candidate for a printer capable of printing the jobs. This process sequence then ends. If it is determined in step S that no printer information which designates a specific driver is present the process advances to step S. In step S it is determined whether printer information which designates no driver by a driver name is present. If it is determined in step S that the printer information designates no driver the process advances to step S. If the driver name related to the device model of the printer information matches that of the jobs which are requested to be printed and generated by the specific driver a printer corresponding to this printer information is decided as a candidate for a printer capable of printing the jobs S . This process sequence then ends. If it is determined in step S that all printer information designate drivers it is determined that no printer capable of printing the jobs is present and an error is output S . This process sequence then ends.

As described above a printer capable of printing jobs print data stored in a server can be specified upon a print request based on the device types and driver names of the jobs even if the jobs include a job print data generated by a generic driver. Also in printing the user can designate a printer which prints one or more designated jobs from a plurality of printers specified from setting of these jobs.

The sequence of a process in which a print instruction is issued from a client has been described in the first embodiment. A case in which a print instruction is issued from a printer will be described next as the second embodiment. Note that a description of details which overlap those in the first embodiment will not be given and only differences from the first embodiment will be described.

In step S in response to login from the IC card reader an authentication application acquires a user account user name and notifies the pull print application of the login S . The pull print application accepts the login using a pull print controller .

In step S the pull print application logs in to a Web server . At this time the pull print application uses the above mentioned user account user ID acquired from the authentication application as login information. Also the pull print application notifies the Web server of the IP address of a printer as information to specify a printer. A method of inputting an ID or a password on the screen can also be used instead of using the IC card reader .

In response to the login notification from the pull print application the Web server authenticates the user using an authentication server S . The authentication server authenticates the user by referring to user information registered in advance. Although not shown if the user succeeds in the authentication the authentication server sends back as authentication information user information and domain group information to which the user belongs. However if the user fails in authentication the authentication server sends back failure information and the user fails in login.

If the user succeeds in the authentication the Web server specifies a printer which has an IP address matching that of the printer sent upon the login S and has a pull print flag with a true value S . The Web server acquires printer information of the specified printer from a cache server S . Although steps S and S are shown as separate processes in the sequence of for the sake of descriptive convenience they are simultaneously executed to specify and acquire a document by searching a database stored in the cache server .

A document which can be printed by the specified printer is specified S to acquire a list of document information from the cache server . Although steps S and S are shown as separate processes in the sequence of for the sake of descriptive convenience they are simultaneously executed to specify and acquire a document by searching a database stored in the cache server . Details of a method of specifying a printable job will be described later. When the pull print application acquires S a list of document information which can be printed by the printer it generates a pull print screen S .

First in step S it is determined whether the job is generated by a generic driver based on a driver name set in the document information . If it is determined that the job is generated by a generic driver the process advances to step S. In step S it is determined whether printing is possible using a table for determining a printer capable of printing a job shown in based on a device type of the printer information of the printer which has issued the print request and a device type of the document S . This process sequence then ends.

 The table for determining a printer capable of printing a job will be described herein. In the job determination table a job which can be printed by a printer corresponding to an A3 color device type is an A3 color A4 color A3 monochrome or A4 monochrome job . A job which can be printed by a printer corresponding to an A4 color device type is an A4 color or A4 monochrome job . A job which can be printed by a printer corresponding to an A3 monochrome device type is an A3 monochrome or A4 monochrome job . A job which can be printed by a printer corresponding to an A4 monochrome device type is an A4 monochrome job .

If it is determined in step S that the job is not generated by a generic driver the process advances to step S. In step S it is determined whether a specific driver is set for a driver name of the printer information . If it is determined in step S that a specific driver is set it is determined that a job with the driver name which matches that of the specific driver is printable S . This process sequence then ends.

If it is determined in step S that no specific driver is set the process advances to step S. In step S it is determined whether printer information designates a driver by the driver name . If it is determined in step S that the printer information designates no driver it is determined that a job with the driver name which matches the driver name that can be specified by the model name of the printer information is printable S . This process sequence then ends. If it is determined in step S that the setting contents of the driver name of the printer are other information it is decided that the job is not printable S . This process sequence then ends.

As described above a printer capable of printing a job stored in a print server is specified based on the device type and driver name of the job and this makes it possible to specify a job which can be printed by a printer which has issued a print request.

Aspects of the present invention can also be realized by a computer of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device for example computer readable medium .

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2009 298834 filed Dec. 28 2009 which is hereby incorporated by reference herein in its entirety.

