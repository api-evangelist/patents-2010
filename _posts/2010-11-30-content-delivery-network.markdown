---

title: Content delivery network
abstract: A request to store a data object is received at a hosted storage service. The request includes the data object and an associated object reference. The object reference configured to enable retrieval of the data object from the hosted storage service. The data object is stored at the hosted storage service in association with the object reference. The data object is sent from the hosted storage service to a content delivery network node such that the data object is cached in and retrievable from the content delivery network node using the object reference.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09148332&OS=09148332&RS=09148332
owner: Google Inc.
number: 09148332
owner_city: Mountain View
owner_country: US
publication_date: 20101130
---
This application claims priority under to U.S. Patent Application Ser. No. 61 346 166 filed on May 19 2010 the entire contents of which are hereby incorporated by reference.

Hosted or cloud based storage refers to off site or remote data storage that is typically provided by a third party. The third party may implement the hosted storage in a data center and provide access to the hosted storage over a network such as the Internet.

In one aspect a request to store a data object is received at a hosted storage service. The request is associated with the data object and an object reference. The object reference enables retrieval of the data object from the hosted storage service. The data object is stored in association with the object reference at the hosted storage service. The data object is sent from the hosted storage service to a content delivery network node such that the data object is cached in and retrievable from the content delivery network node using the object reference.

Implementations may include one or more of the following features. Sending the data object from the hosted storage service to the content delivery network node may include sending the data object from the hosted storage service to the content delivery network node without requiring a user to request the sending of the object from the hosted storage service to the content delivery network node. Sending the data object from the hosted storage service to the content delivery network node such that the data object is cached in the content delivery network may be performed without action by an owner of the data object other than causing the data object to be stored in the hosted storage service and designated as publicly accessible.

Sending the data object from the hosted storage service to a content delivery network node may include receiving a request to retrieve the data object at the content delivery network node the request to retrieve the data object including the object reference determining at the content delivery network node that the data object is not cached at the content delivery network node in response to determining that the data object is not cached at the content delivery network node sending a request for the data object from the content delivery network node to the hosted storage service the request for the data object including the object reference receiving the request for the data object at the hosted storage service retrieving the data object at the hosted storage service using the object reference received with the request for the data object and sending the retrieved data object to the content delivery network node such that the data object is cached in and retrievable from the content delivery network node using the object reference. Sending the retrieved data object to the content delivery network such that the data object is cached may include sending the data object with a cache header that indicates the object is cacheable.

The content delivery network node may include a primary cache configured to cache data objects below a threshold size and a secondary cache configured to cache data objects above the threshold size.

The data object may be above the threshold size and sending the data object from the hosted storage service to a content delivery network node may include receiving a request to retrieve the data object at the primary cache the request to retrieve the data object including the object reference determining at the primary cache that the data object is not cached at the primary cache in response to determining that the data object is not cached at the primary cache sending a first request for the data object from the primary cache to the hosted storage service the first request for the data object including the object reference receiving the first request for the data object at the hosted storage service determining that the data object is above the threshold size and that the first request was received from the primary cache in response to determining that the data object is above the threshold size and that the first request was received from the primary cache redirecting the request to retrieve the data object to the secondary cache receiving the redirected request to retrieve the data object at the secondary cache the redirected request to retrieve the data object including the object reference determining at the secondary cache that the data object is not cached at the secondary cache in response to determining that the data object is not cached at the secondary cache sending a second request for the data object from the secondary cache to the hosted storage service the second request for the data object including the object reference retrieving the data object at the hosted storage service using the object reference received with the second request for the data object and sending the retrieved data object to the secondary cache such that the data object is cached in and retrievable from the secondary cache using the object reference.

A request for the data object may be received from a client system and at the content delivery network node. The request may include the object reference. The data object cached at the content delivery network node may be retrieved using the object reference received with the request for the data object. The retrieved data object may be sent to the client system. The object reference may include a bucket name and an object name.

In another aspect a system includes one or more processing devices and one or more storage devices storing instructions that when executed by the one or more processing devices cause the one or more processing devices to receive at a hosted storage service a request to store a data object wherein the request is associated with the data object and an object reference the object reference enabling retrieval of the data object from the hosted storage service store at the hosted storage service the data object in association with the object reference and send the data object from the hosted storage service to a content delivery network node such that the data object is cached in and retrievable from the content delivery network node using the object reference.

Implementations may include one or more of the following features or one or more of the features noted above. To send the data object from the hosted storage service to the content delivery network node the instructions may include instructions that cause the one or more processing devices to send the data object from the hosted storage service to the content delivery network node without requiring a user to request the sending of the object from the hosted storage service to the content delivery network node.

The instructions may cause the one or more processing devices to perform the sending of the data object from the hosted storage service to the content delivery network node such that the data object is cached in the content delivery network without action by an owner of the data object other than causing the data object to be stored in the hosted storage service and designated as publicly accessible.

To send the data object from the hosted storage service to a content delivery network node the instructions may include instructions that cause the one or more processing devices to receive a request to retrieve the data object at the content delivery network node the request to retrieve the data object including the object reference determine at the content delivery network node that the data object is not cached at the content delivery network node in response to determining that the data object is not cached at the content delivery network node send a request for the data object from the content delivery network node to the hosted storage service the request for the data object including the object reference receive the request for the data object at the hosted storage service retrieve the data object at the hosted storage service using the object reference received with the request for the data object and send the retrieved data object to the content delivery network node such that the data object is cached in and retrievable from the content delivery network node using the object reference.

To send the retrieved data object to the content delivery network such that the data object is cached the instructions may include instructions that cause the one or more processing devices to send the data object with a cache header that indicates the object is cacheable.

The content delivery network node may include a primary cache configured to cache data objects below a threshold size and a secondary cache configured to cache data objects above the threshold size. The data object may be above the threshold size and to send the data object from the hosted storage service to a content delivery network node the instructions may include instructions that cause the one or more processing devices to receive a request to retrieve the data object at the primary cache the request to retrieve the data object including the object reference determine at the primary cache that the data object is not cached at the primary cache in response to determining that the data object is not cached at the primary cache send a first request for the data object from the primary cache to the hosted storage service the first request for the data object including the object reference receive the first request for the data object at the hosted storage service determine that the data object is above the threshold size and that the first request was received from the primary cache in response to determining that the data object is above the threshold size and that the first request was received from the primary cache redirect the request to retrieve the data object to the secondary cache receive the redirected request to retrieve the data object at the secondary cache the redirected request to retrieve the data object including the object reference determine at the secondary cache that the data object is not cached at the secondary cache in response to determining that the data object is not cached at the secondary cache send a second request for the data object from the secondary cache to the hosted storage service the second request for the data object including the object reference retrieve the data object at the hosted storage service using the object reference received with the second request for the data object and send the retrieved data object to the secondary cache such that the data object is cached in and retrievable from the secondary cache using the object reference.

The instructions may include instructions that cause the one or more processing devices to receive from a client system and at the content delivery network node a request for the data object the request including the object reference retrieve the data object cached at the content delivery network node using the object reference received with the request for the data object and send the retrieved data object to the client system. The object reference may include a bucket name and an object name.

In another aspect a system includes a hosted storage service a content delivery network node and a client system. The hosted storage service stores a data object in association with an object reference. The hosted storage service is configured to send the data object from the hosted storage service to a content delivery network node such that the data object is cached in and retrievable from the content delivery network node using the object reference. T content delivery network node is configured to receive the data object sent from the host storage service and cache the received data object such that the data object is retrievable from the content delivery network node using the object reference. The client system is configured to send a request for the data object including the object reference to the content delivery network node such that the content delivery network node retrieves the cached data object using the object reference and sends the cached data object to the client system.

Implementations may include one or more of the following features or one or more of the features noted above. For example the host storage service may configured to send the data object to the content delivery network node without requiring a user to request the sending of the object from the hosted storage service to the content delivery network node. The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will be apparent from the description and drawings and from the claims.

A service provider may provide a hosted or cloud based storage service into which users for example stand alone or web based application developers can store objects and an associated Content Delivery Network CDN that provides caching of stored objects in one or more CDN nodes. In some implementations to take advantage of the CDN a user simply needs to store an object in the hosted storage service and set the appropriate permissions. In this case the caching of the object in the CDN is automatic in the sense that the user does not necessarily need to request such caching or take any other action such as registering for the CDN service storing multiple different e.g. differently named versions of the object or publishing multiple different Uniform Resource Locators URLs for the object. In various circumstances such a set up may be advantageous to a user because this type of set up provides a user with a CDN that just works. In other words the user stores objects in the hosted storage using the hosted storage s normal mechanisms for doing so and the stored objects are cached as appropriate in the CDN without further actions on behalf of the user.

The client device implements a client application by executing instructions on one or more processing devices. In some implementations the client application may be implemented by more than one client device. In some implementations the client application may be implemented as a web application running in a web browser. The client application can include functionality to store retrieve or otherwise access data on the client device as well as to store retrieve or otherwise access data in an off site hosted or cloud based data storage system such as a hosted storage service included in the server system .

The client device can be implemented using a computing device such as the computing device or the mobile device described with respect to . The client device can communicate across the network using communication protocols such as for example one or more of Transmission Control Protocol Internet Protocol TCP IP Hypertext Transfer Protocol HTTP Secure Shell Remote Protocol SSH or Application Program Interfaces API . While only a single client device is shown there can be multiple client devices communicating across the network with the server system .

The server system includes hosted or cloud based storage and a CDN that includes CDN nodes and . In some implementations the server system is owned and operated by a single entity that provides the hosted storage service and the CDN. Although one hosted storage service is shown some implementations can include multiple hosted storage services.

The hosted storage service can provide access to stored data by applications running on computing devices geographically separate from each other provide offsite data backup and restore functionality provide data storage to a computing device with limited storage capabilities and or provide storage functionality not implemented on a computing device.

For instance the hosted storage service can be implemented such that client applications for example executing on client device can store retrieve or otherwise manipulate data objects in the hosted storage service . The hosted storage service can be implemented by one or more server devices which can be implemented using a computing device such as the computing device or mobile device described with respect to . For example the hosted storage service can be implemented by multiple server devices operating in the same or different data centers.

The hosted storage service can be implemented as a Web Service with a corresponding set of Web Service Application Programming Interfaces APIs . The Web Service APIs may be implemented for example as a Representational State Transfer REST based Hypertext Transfer Protocol HTTP interface or a Simple Object Access Protocol SOAP based interface. Generally in a REST based interface a data object is accessed as a resource uniquely named using a Uniform Resource Indicator URI and the client application and service exchange representations of resource state using a defined set of operations. For example requested actions can be represented as verbs such as by HTTP GET PUT POST HEAD and DELETE verbs. The GET verb may be used to retrieve an object while the HEAD verb may be used to retrieve information about an object without retrieving the object itself. The DELETE verb may be used to delete an object from the hosted storage service . The PUT and POST verbs may be used to upload an object to the service . PUT requests can come from the client and contain authentication and authorization credentials and object metadata in a header such as an HTTP header. POST requests can be received when a client wants to upload from a web browser form. The form POST upload protocol for the hosted storage service can involve multiple required form fields to provide authentication authorization and object metadata. More generally any of the API requests may include credentials for authentication and authorization for example in a header of the request. For example an authorization header may be included in the REST requests which includes an access key to identify the entity sending the request. Requests also may include a secure SHA 1 Secure Hashing Algorithm HMAC Hash Message Authentication Code signature. In general an Access Control List ACL is used to ensure that a user is authorized to perform a requested action on the data object and or on the bucket including the data object .

Objects can be stored in hosted storage service in buckets. A bucket can be used in the hosted storage system to organize stored data objects . For example a bucket can include one or more data objects . In some examples each bucket is uniquely named in the hosted storage service each object is uniquely named in a bucket and every bucket and object combination is unique. In some implementations a bucket can include one or more other buckets. In other implementations a bucket cannot include a bucket.

In general data objects stored in the hosted storage service can be referenced by object identifiers. The hosted storage service can define namespaces to which a valid object identifier must conform. For example the namespace can require that object identifiers be a sequence of Unicode characters whose UTF 8 encoding is at most 1024 bytes long. As another example the namespace can require that object identifiers be globally unique identifiers GUIDs which may be 128 bit integers.

In one implementation objects may be uniquely identified by a URI that includes the bucket name and the object name and identifies the hosted storage service . For example an object named long song.mp3 in a bucket named music could be specified using a URI pattern such as http s.hostedstoragesystem.com music long song.mp3 or http music.s.hostedstoragesystem.com long song.mp3. Alternatively the user of the client can create a bucket named www.music.org publish a CNAME alias redirecting that to http music.s.hostedstoragesystem.com and address the object as http www.music.org long song.mp3.

As described further below a first user may use a client system to store data objects in the hosted storage and then set appropriate permissions to make those objects readable by other users and client systems. That first user as the owner of the object may be authorized to perform other actions on the object such as deleting the object while other users may only be able to perform limited actions such as reading the object.

For example a first user may use a client system either the same as or different from client system to communicate with the hosted storage service to store a data object in a datastore included in the hosted storage service . The first user may designate the object as being publicly available which means that any other user can retrieve the object. As a result a second user can subsequently use the client application to retrieve the data object from the datastore . As a specific example the data object may be an image included in a web page and retrieved in response to the second user using the client application to load a web page which references the data object .

When users retrieve the data object the data object may be served from a cache included in one of the CDN nodes or . In general a CDN includes nodes deployed in multiple locations often over multiple backbones. These nodes cooperate with each other to satisfy requests for content by end users. Requests for content are typically algorithmically directed to nodes that are optimal in some way such as reducing bandwidth costs or reducing the time it takes to deliver an object to a user for example by decreasing latency . For instance a node may be chosen because the node is the fewest network hops away from the client the fewest number of network seconds away from the client geographically the closest to the client has the highest availability in terms of server performance is the least expensive cost wise or some combination of these and or other factors.

For example the CDN node can include a cached copy of the data object . The CDN node can be one of multiple CDN nodes such as CDN nodes and included in the server system . The CDN nodes and possibly other CDN nodes can each be strategically placed at various geographic locations so as to maximize bandwidth for access to data objects included in the server system from multiple geographically dispersed client devices .

When client device requests the data object for example the CDN node geographically closest to the client device e.g. the CDN node may receive the request for the data object . If the CDN node includes a cached copy of the data object e.g. the cached copy the CDN node can send the cached copy to the client device . If the CDN node does not include a cached copy of the data object the CDN node can request the data object from the hosted storage service can receive a copy of the data object from the hosted storage service can cache the copy of the data object e.g. as the cached copy and can send the copy of the data object to the client device .

In some implementations whether to cache a copy of the data object in the CDN node can be based on various factors. For example the data object might not be cached if there is not sufficient available space in the CDN node or if the available space is at or below a threshold level. As another example a copy of the data object may be cached after a certain number of requests e.g. three have been received for the data object within a particular time period. That is if the data object is rarely requested a copy of the data object might not be stored in the CDN node . As yet another example a copy of the data object may be cached in the CDN node if the distance between the hosted storage service and the client device as measured for example by geographic distance or network distance is more than a threshold distance greater than the distance between the client device and CDN node . As described in more detail below configuration of the data object such as access permissions and cache control settings may also affect whether the data object is cached in the CDN node

The fact that the data object can be served from a CDN node is transparent to the client application and potentially to the user that stored the data object on the hosted storage . The client application can issue the same request using the same URL Uniform Resource Locator regardless of whether the data object is retrieved from the CDN node or another CDN node or directly from the hosted storage service . The data object can be served from the CDN node without requiring the user who initially stored the data object in the hosted storage service to register for a CDN service or to store or register multiple different e.g. differently named versions of the data object or to publish multiple different Uniform Resource Locators URLs for the client application to use to retrieve the data object . When storing the data object in the hosted storage service a single copy of the data object can exist in the hosted storage service e.g. the hosted storage service does not store a second copy of the data object to support serving of the data object through a CDN .

In other words in some implementations the owner of the data object may store the data object on the hosted storage with a particular name or object reference for example in the format described above . Rather than making a copy of the object on the hosted storage with a different name or reference for use in the CDN network the user need only set the permissions of the object appropriately for the object to be cached in a CDN node such as node or . As a result the same name or reference is used when retrieving the object regardless of whether the object is served from a CDN node or or the hosted storage rather than using one name or reference for addressing the object in the hosted storage and another name or reference corresponding to a copy of the object in hosted storage when the object is to be retrieved from the CDN network.

In this case for instance an owner of the object need only store the object in the hosted storage service with an object reference and that same reference can be used to retrieve the object regardless of whether the object is served from a cache in a CDN node or or from the hosted storage service . The caching of the object may be automatic in the sense that the user does not necessarily need to request such caching but rather simply stores the object and sets permissions as appropriate. The system then caches objects appropriately in the CDN nodes or

In some implementations the data object is eligible to be cached in one or more CDN nodes if the data object is configured to be publicly accessible. For example the data object can be publicly accessible if an ACL Access Control List associated with the data object is configured so that an anonymous user can read the data object . In some implementations data objects that are not publicly accessible are not cached in the CDN nodes . In some implementations the data object is eligible to be cached in one or more of the CDN nodes if a cache control parameter associated with the data object does not specify that caching is disallowed. In such implementations if the cache control parameter associated with the data object specifies that caching is disallowed the data object is not cached in the CDN nodes . In some implementations the data object is not cached in the CDN nodes unless the data object is both publicly accessible and the cache control parameter associated with the data object does not specify that caching is disallowed.

In some implementations the ACL may be stored at or otherwise accessible to the CDN nodes which may use the ACL to determine whether or not the object is publicly accessible. If a CDN node determines that the object is not publicly accessible the CDN node then may refrain from caching the object. On the other hand if the CDN node determines the object is publicly accessible the CDN node then may cache the object. In some implementations criteria other than public accessibility may be required before an object is cached. In this case the CDN node may verify that the other criteria apply before caching the object. Alternatively or additionally as described below in some implementations the hosted storage may use the ACL to determine whether the object is publicly accessible and mark a cache header as appropriate depending whether the object is publicly accessible and in some cases whether other criteria is met . If the cache header indicates that the object is not cacheable for instance because it is not publicly accessible then the CDN node may refrain from caching the object and conversely may cache the object if the cache header indicates the object is cacheable.

The data object may be an immutable collection of bytes. For example in some implementations the data object can be replaced but the content of the data object cannot be incrementally modified. A data object can have associated metadata. For example metadata for the data object can include the ACL a cache control parameter size and other information.

The hosted storage service can include a single type of datastore or multiple types of datastores . For example in implementations where a single type of datastore is used data that is stored by the hosted storage service can be received managed and stored in the same way. For example all data in the datastore can be stored as Binary Large Objects BLOBs . As another example in implementations where multiple types of datastores are used each datastore used can have different requirements limits available functions and performance profiles for example. For instance a first datastore can provide fast access to small data objects and can automatically build multiple search indexes to support different access methods e.g. data can be stored in a database format . By comparison a second datastore can accept much larger data objects store those objects more efficiently on disk e.g. by including less fragmentation of objects for faster disk reading but cannot ensure speedy searching e.g. the second datastore can store data as BLOBs . In this example a destination datastore e.g. the first datastore or the second datastore for data sent from the client application can be selected based on the type size and expected use of the data.

A hosted storage service that has multiple types of datastores can provide a single access protocol for accessing the service and the service can determine which datastore is used. For instance the hosted storage service can provide a single access protocol to store retrieve or otherwise manipulate a data object with the hosted storage service selecting which of multiple datastores is to be used to store a data object or components of a data object . Alternatively the hosted storage service can have different access protocols for the different types of datastores . For example there can be one access protocol for a first datastore and a different access protocol for a second datastore .

The hosted storage service receives a request to store a data object . The request is associated with the data object and an object reference associated with the object. For example the request itself may include the data object and the associated object reference. The object reference enables retrieval of the data object from the hosted storage service . For example the hosted storage service can receive a request from the client device to store the data object . The request can include an object reference which can be for example a URI as described above.

The data object is stored at the hosted storage service in association with the object reference . For example as described above in response to receiving the request to store the object hosted storage service can store the data object in one of a variety of formats such as in a database format or a BLOB format. The hosted storage service can determine which storage format to use.

The CDN node receives a request for a data object from the client application . For example the CDN node can receive an HTTP request from the client application where the HTTP request includes a request for the data object . The request may be a REST based request that includes a verb such as GET and identifies the object by an object reference that for example includes bucket name and object name.

The CDN node determines whether the data object is cached at the CDN node . For example the CDN node can extract a data object reference from the received HTTP request and can determine whether a data object having the same data object reference is included in a cache of the CDN node . For example the CDN node can determine that a cache of the CDN node includes the cached copy of the data object with the same object reference.

If the data object is cached at the CDN node the CDN node sends the data object to the client application . For example the CDN node can send the cached copy of the data object to the client application using an HTTP response.

If the data object is not cached at the CDN node the CDN node requests the data object from the hosted storage service . For example the CDN node can send an HTTP request to the hosted storage service requesting the data object using the same object reference that was received from the CDN node which is the same object reference used by the owner of the object to initially store the object in the hosted storage service .

The CDN node receives the data object from the hosted storage service . For example the CDN node can receive the data object from the hosted storage service in an HTTP response. Before sending the data object the hosted storage service can verify that user credentials included in the HTTP request received from the CDN node enable access to the data object e.g. according to the ACL .

The CDN node caches the data object as appropriate and sends the data object to the client application . For example the CDN node can send the data object to the client application using an HTTP response. The CDN node can examine a cache control header included in an HTTP response received from the hosted storage service to determine whether to cache the data object in the CDN node . If the cache control header specifies that caching is not allowed the CDN node does not cache the data object . If the cache control header does not specify that caching is disallowed the CDN node can cache the data object in a cache included in the CDN node . Caching may not be allowed for example if the data object is not publicly accessible.

The hosted storage service receives a request for a data object from the CDN node . For example the CDN node can request the data object from the hosted storage service if the CDN node determines that the data object is not cached in the CDN node . The hosted storage service can receive for example an HTTP request from the CDN node

The hosted storage service determines whether the data object is publicly accessible . For example the hosted storage service can determine whether the data object is publicly accessible by examining the ACL which is associated with the data object . For example the hosted storage service can determine whether the ACL specifies that an anonymous user can read the data object .

If the data object is not publicly accessible the hosted storage service sends the data object to the CDN node without caching . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response to specify no caching. The CDN node can read and comply with the cache control header e.g. the CDN node can receive the data object without caching the data object .

If the data object is publicly accessible the hosted storage service determines whether a cache control setting for the data object indicates that caching is disallowed for the data object . For example the hosted storage service can access the cache control parameter from metadata associated with the data object .

If the cache control setting for the data object indicates that caching is disallowed for the data object the hosted storage service sends the data object to the CDN node without caching . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response to specify no caching. The CDN node can read and comply with the cache control header e.g. the CDN node can receive the data object without caching the data object .

If the cache control setting for the data object indicates that caching is not disallowed for the data object the hosted storage service sends the data object to the CDN node with appropriate cache headers . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response which specifies a length of time to cache the data object and possibly other cache control information.

The hosted storage service receives a request for a data object from a CDN node . For example the hosted storage service can receive an HTTP request for the data object from the CDN node described with respect to . In general the request from the CDN node may originate from the primary cache or the secondary cache . In one implementation initial requests for an object from a client application are received at the primary cache and if the object is not cached in the primary cache a request for the object may be sent from the primary cache to the hosted storage service for the object. In the event the hosted storage service causes the client application to be redirected to the secondary cache as described below another request may be received from the client application at the secondary cache . If the object is not cached in the secondary cache a request for the object may be sent from the secondary cache to the hosted storage service for the object. Thus in this case the request may be received from the primary cache or the secondary cache depending on which cache received the request from the client application .

The hosted storage service determines whether the data object is publicly accessible . For example the hosted storage service can determine whether the data object is publicly accessible by examining the ACL which is associated with the data object . For example the hosted storage service can determine whether the ACL specifies that an anonymous user can read the data object .

If the data object is not publicly accessible the hosted storage service sends the data object to the CDN node without caching . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response to specify no caching. The CDN node can read and comply with the cache control header e.g. the CDN node can receive the data object without caching the data object .

If the data object is publicly accessible the hosted storage service determines whether a cache control setting for the data object indicates that caching is disallowed for the data object . For example the hosted storage service can access the cache control parameter from metadata associated with the data object .

If the cache control setting for the data object indicates that caching is disallowed for the data object the hosted storage service sends the data object to the CDN node without caching . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response to specify no caching. The CDN node can read and comply with the cache control header e.g. the CDN node can receive the data object without caching the data object .

If the cache control setting for the data object indicates that caching is not disallowed for the data object the hosted storage service determines whether the size of the data object is less than a threshold . The threshold may be for example two megabytes. The hosted storage service can determine the size of the data object for example by examining metadata associated with the data object .

If the size of the data object is less than a threshold the hosted storage service returns the data object to the CDN node and in particular the primary cache assuming for example that initial requests for an object are issued from the primary cache with appropriate cache headers . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response which specifies a length of time to cache the data object and possibly other cache control information. The CDN node can for example cache the data object in the primary cache e.g. so that subsequent requests for the data object are served from the primary cache .

If the size of the data object is not less than a threshold the hosted storage service determines whether the request for the data object originated from a secondary cache . For example the hosted storage service can determine whether the request for the data object originated from the secondary cache by examining an origin domain included in a header of the request or by determining whether an IP Internet Protocol address associated with the request is included in a set of recognized IP addresses. The request for the data object can originate from the secondary cache for example due to a redirect sent to the client application where the redirect directs the client application to request the data object from the secondary cache e.g. so that subsequent requests for the data object are served from the secondary cache .

If the request for the data object originated from the secondary cache the hosted storage service returns the data object to the CDN node and in particular to the secondary cache with appropriate cache headers . For example the hosted storage service can send the data object to the CDN node using an HTTP response and can configure a cache control header included in the HTTP response which specifies a length of time to cache the data object and possibly other cache control information. The CDN node can for example cache the data object in the secondary cache .

If the request for the data object did not originate from the secondary cache the hosted storage service redirects the request for the data object to the secondary cache . For example the hosted storage service can send a redirect request to the CDN node which in turn sends an HTTP response with a status code of 302 to the client application indicating a redirect to the secondary cache . The client application would then send a request for the object directed to the secondary cache which would result in the hosted storage service sending the object to the secondary cache after determining the request for the object was received from the secondary cache .

The computing device includes a processor a memory a storage device a high speed interface connecting to the memory and multiple high speed expansion ports and a low speed interface connecting to a low speed expansion port and the storage device . Each of the processor the memory the storage device the high speed interface the high speed expansion ports and the low speed interface are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as a display coupled to the high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In some implementations the memory is a volatile memory unit or units. In some implementations the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In some implementations the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. Instructions can be stored in an information carrier. The instructions when executed by one or more processing devices for example processor perform one or more methods such as those described above. The instructions can also be stored by one or more storage devices such as computer or machine readable mediums for example the memory the storage device or memory on the processor .

The high speed interface manages bandwidth intensive operations for the computing device while the low speed interface manages lower bandwidth intensive operations. Such allocation of functions is an example only. In some implementations the high speed interface is coupled to the memory the display e.g. through a graphics processor or accelerator and to the high speed expansion ports which may accept various expansion cards not shown . In the implementation the low speed interface is coupled to the storage device and the low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. In addition it may be implemented in a personal computer such as a laptop computer . It may also be implemented as part of a rack server system . Alternatively components from the computing device may be combined with other components in a mobile device not shown such as a mobile computing device . Each of such devices may contain one or more of the computing device and the mobile computing device and an entire system may be made up of multiple computing devices communicating with each other.

The mobile computing device includes a processor a memory an input output device such as a display a communication interface and a transceiver among other components. The mobile computing device may also be provided with a storage device such as a micro drive or other device to provide additional storage. Each of the processor the memory the display the communication interface and the transceiver are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the mobile computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the mobile computing device such as control of user interfaces applications run by the mobile computing device and wireless communication by the mobile computing device .

The processor may communicate with a user through a control interface and a display interface coupled to the display . The display may be for example a TFT Thin Film Transistor Liquid Crystal Display display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may provide communication with the processor so as to enable near area communication of the mobile computing device with other devices. The external interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the mobile computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. An expansion memory may also be provided and connected to the mobile computing device through an expansion interface which may include for example a SIMM Single In Line Memory Module card interface. The expansion memory may provide extra storage space for the mobile computing device or may also store applications or other information for the mobile computing device . Specifically the expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example the expansion memory may be provide as a security module for the mobile computing device and may be programmed with instructions that permit secure use of the mobile computing device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory non volatile random access memory as discussed below. In some implementations instructions are stored in an information carrier. That the instructions when executed by one or more processing devices for example processor perform one or more methods such as those described above. The instructions can also be stored by one or more storage devices such as one or more computer or machine readable mediums for example the memory the expansion memory or memory on the processor . In some implementations the instructions can be received in a propagated signal for example over the transceiver or the external interface .

The mobile computing device may communicate wirelessly through the communication interface which may include digital signal processing circuitry where necessary. The communication interface may provide for communications under various modes or protocols such as GSM voice calls Global System for Mobile communications SMS Short Message Service EMS Enhanced Messaging Service or MMS messaging Multimedia Messaging Service CDMA code division multiple access TDMA time division multiple access PDC Personal Digital Cellular WCDMA Wideband Code Division Multiple Access CDMA2000 or GPRS General Packet Radio Service among others. Such communication may occur for example through the transceiver using a radio frequency. In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition a GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to the mobile computing device which may be used as appropriate by applications running on the mobile computing device .

The mobile computing device may also communicate audibly using an audio codec which may receive spoken information from a user and convert it to usable digital information. The audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of the mobile computing device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on the mobile computing device .

The mobile computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smart phone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium and computer readable medium refer to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

Although a few implementations have been described in detail above other modifications are possible. For example while two tiers of cache have been described other implementations may have any number of cache tiers. In addition even though the size of the object has been described as a metric for choosing the tiered cache from which the object is delivered other metrics may additionally or alternatively include type of the object or the proximity of the cache to users. In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other actions may be provided or actions may be eliminated from the described flows and other components may be added to or removed from the described systems.

