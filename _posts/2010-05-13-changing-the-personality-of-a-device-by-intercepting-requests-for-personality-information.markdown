---

title: Changing the personality of a device by intercepting requests for personality information
abstract: A method and system for a target to adopt the personality of a source without loading the personality information of the source onto the target is provided. The personality system extracts personality information from the source and stores the personality information on a removable storage medium. The storage medium is then connected to the target. The personality system intercepts requests of the target to retrieve personality information, which but for the interception would be serviced based on personality information of the target. When a request is intercepted, the personality system retrieves the personality information from the connected storage medium, rather than from the personality information of the target. The personality system then replies to the request with the retrieved personality information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732449&OS=08732449&RS=08732449
owner: Tranxition Corporation
number: 08732449
owner_city: Portland
owner_country: US
publication_date: 20100513
---
This application is a continuation of Ser. No. 11 847 024 filed Aug. 29 2007 which is a continuation of U.S. patent application Ser. No. 11 249 750 filed Oct. 13 2005 which claims the benefit of U.S. Patent Application No. 60 688 226 entitled Method for Virtualizing a Computer Personality on an External Device filed on Jun. 6 2005 which applications are hereby incorporated by reference.

Computer users configure their computers in order to most efficiently and comfortably perform typical tasks. For example a computer user typically sets up favorites in an Internet browser to enable easy navigation to often visited Internet sites. Similarly a user sets wallpaper to suit their preference along with adjustments such as mouse speed and sensitivity. The favorites and wallpaper settings are referred to as configuration settings. A configuration setting can be global to the computer in the sense that all applications executing on the computer share that same configuration setting or it can be specific to an application or group of applications. For example a configuration setting that indicates the base color for a window may be global whereas a configuration setting that indicates to automatically correct a spelling error may be specific to a word processing application. In addition to establishing the configuration settings of a computer a user may also create and maintain information e.g. documents and data in files relating to the tasks for which the user is using the computer. This collection of configuration settings and files is referred to as personality information and represents the personality of the computer or other device.

When a computer user needs to use a computer other than their own the user loses both the ease of use represented by the configuration settings and the information in the files available on their computer. This makes it difficult to do meaningful computer work remotely. One solution is the use of portable e.g. laptop computers that can be carried when the user travels. This solution has disadvantages that include the inconvenience of transport due to weight fragility of the device and cost of the device and accessories. Another disadvantage is the inconvenience related to security measures employed in airports that require unpacking and repacking the portable computer every time a user goes through a security checkpoint.

Another solution to the problem is to copy the configuration settings and files to the other computer. A disadvantage however of this solution is privacy. The user may have very sensitive information e.g. passwords represented as configuration settings or files and may not be comfortable storing such information on another computer. Although it may be possible to delete such information from the other computer after its use such deletion may not always be possible. For example if the computer loses power after the configuration settings and files have been copied to the hard drive then the user may not be able to delete the configuration settings and files from the hard drive after power is restored. In such a case the next user of the computer system may be able to access the sensitive information.

A method and system for a target to adopt the personality of a source without loading the personality information of the source onto the target is provided. In one embodiment the personality system extracts personality information from the source and stores the personality information on a removable storage medium such as a Universal Serial Bus USB device. The personality information may include configuration settings e.g. settings of a word processing program of the source. The source and target may be computing devices such as a personal computer personal digital assistant cell phone digital camera other consumer electronic device and so on. The storage medium is then connected to the target. The personality system intercepts requests of the target to retrieve personality information which but for the interception would be serviced based on personality information of the target. When a request is intercepted the personality system retrieves the personality information from the connected storage medium rather than from the personality information of the target. The personality system then replies to the request with the retrieved personality information. The personality system preferably does not write any personality information to the disk drives or other persistent storage of the target rather the personality information is retrieved as needed from the removable storage medium and provided as in memory data which is typically not available after the requesting process executing on the target terminates. Because the personality system does not store personality information to persistent storage of the target normal reticence on the part of visiting users who want to use a target with their personality information but fear that their personality information may be compromised is reduced. In this way the personality system causes the target to adopt the personality of the source without persistently loading the personality information of the source onto the target.

In one embodiment the personality system may include an extraction component and an adoption component. These components may be stored on the storage medium. When the storage medium is first connected to a device i.e. source or target an auto execute component from the storage medium may prompt the user to indicate whether the device should be used as a source or target that is whether the personality information of the device should be extracted and stored on the storage medium or whether the device should adopt the personality based on the personality information stored on the storage medium. When the user selects to use a device as a source the extraction component is loaded from the storage medium and executed by the device. The extraction component may use various techniques to extract personality information from the device such as those described in U.S. Pat. No. 6 728 877 entitled Method and System for Automatically Transitioning of Configuration Settings among Computer Systems which is hereby incorporated by reference. The extraction component then stores the personality information on the storage medium. When the storage medium is then connected to another device the auto execute component again prompts the user to indicate whether the device should be used as a source or target. When the user selects to use the device as a target the adoption component is loaded from the storage medium and executed by the device. The adoption component may install interception code onto the target to intercept requests by the target for personality information of the target. For example the personality information of the target may be stored in a system registry that provides an application programming interface API for storing and retrieving personality information. The adoption component may identify locations within the functions of the application programming interface and install transfer instructions to transfer execution from the function of the application programming interface to code of the adoption component. When an application executing on the target requests personality information by invoking a function of the application programming interface the invoked function executes the transfer instruction to transfer control to the adoption component. The adoption component retrieves the personality information of the source from the storage medium and then replies to the request by returning from the invoked function with the retrieved personality information.

In one embodiment the personality system stores the personality information on the storage medium in a canonical form. The canonical form may be neutral in the sense that it is independent of any application program and independent of the operating system under which an application program executes. For example the configuration settings of a word processing program e.g. Microsoft Word such as default font type may be stored in a format that is independent of the word processing program through which the configuration settings were specified and used on the source. When the storage medium is connected to a target that uses a different word processing application e.g. StarOffice the personality system may convert the configuration settings from the canonical form to a target specific form that can be used by the applications of the target. As another example the source and target may execute different operating systems. In such a case the personality system stores personality information of the operating system of the source in a canonical form on the storage medium and converts the personality information to a target specific form when accessed by the target. For example the personality information of a source computer that operates under Microsoft Windows may include a wallpaper image. Once extracted the wallpaper image can be part of the personality adopted by a target computer that operates under an Apple or Linux operating system. The canonical form may be a neutral form or may default to the form specific to an application or an operating system.

The user may then disconnect the storage medium from the source and connect the storage medium to a target . When the storage medium is connected to the target the auto execute component may be launched and prompt the user to indicate whether the user wants to use the device as a target or source. When the user specifies to use the device as a target the personality system then loads the interceptor component onto the target as an interceptor component . The interceptor component then installs code to intercept requests for personality information and to redirect the requests to the interceptor component so that the requests can be serviced from the personality information of the storage medium. For example the interceptor component may direct the operating system of the target to load an interceptor dynamic link library DLL as part of each process that it creates and to execute a certain function of the interceptor DLL before any other code of the process executes. The function of the interceptor DLL that is executed first may scan the address space of the process to locate the personality API of the operating system. The interceptor DLL may then insert a jump instruction within each function of the personality API to transfer control to the interceptor component. When the created process invokes a function of the personality API the jump instruction will cause control to be transferred to the interceptor component which retrieves the appropriate personality information from the storage medium and returns the retrieved personality information rather than the personality information from the personality store of the target. One skilled in the art will appreciate that many different techniques may be used for intercepting requests for personality information. For example some APIs provide a hooking mechanism through which hooks can be registered e.g. via a callback and passed control before the function of the API is performed. In such a case the hooking function may notify the API not to perform its function. As another example an API may provide a table that contains pointers to functions e.g. a virtual function table of an object and the interceptor DLL may replace those pointers with pointers to code within the interceptor component.

In an alternate embodiment the personality information of a source may not be extracted until a target requests the personality information. For example when the interceptor component intercepts a request of a target for personality information rather than retrieving information of the storage medium that has been previously extracted from the source the interceptor component may forward the request via a network to an extraction component executing on the source. When the extraction component receives the request it retrieves the appropriate personality information from the personality store of the source and sends a reply via the network to the interceptor component of the target. The interceptor component then returns the provided personality information to the application.

In one embodiment the storage medium may be part of a server that is connected to sources and targets via a network such as the Internet. An extraction component of the personality system executing on a source can then extract the personality information of the source and send the personality information to the server for storage on the storage medium. An adoption component of the personality system executing on a target can request the server to provide the personality information of a source that is stored on the storage medium of the server.

In one embodiment the personality system stores the personality information in a neutral format as a set of eXtensible Markup Language XML files. In other embodiments the personality system may store the personality information in a neutral format as a set of indexed master files with data converted to text as a B tree database and so on. In one embodiment the personality system may organize the personality information by application type setting description and setting state. An example of this organization follows 

The computing devices on which the personality system may be implemented may include a central processing unit memory input devices e.g. keyboard and pointing devices output devices e.g. display devices and storage media e.g. disk drives . The memory and storage media are computer readable media that may contain instructions that implement the personality system. The removable storage medium that contains personality information may include a USB device removable disk storage optical storage medium flash E PROM and so on. In addition the data structures and message structures may be stored or transmitted via a data transmission medium such as a signal on a communications link. Various communications links may be used such as the Internet a local area network a wide area network or a point to point dial up connection.

The personality system may be implemented in various operating environments that include personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and so on. The personality system may also be implemented on computing devices such as cell phones personal digital assistants consumer electronics home automation devices and so on.

The personality system may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures and so on that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

From the foregoing it will be appreciated that specific embodiments of the invention have been described herein for purposes of illustration but that various modifications may be made without deviating from the spirit and scope of the invention. The targets can include publicly accessible kiosks or computers e.g. at a library automated teller machines terminals through which airline tickets can be purchased and so on. In addition one skilled in the art will appreciate that the personality information that is adopted by a target need not be extracted from a source. For example a company may distribute storage media to its employees that contain personality information that the company wants its employees to use when using a non company computer system. In addition the personality system may be adapted to implement the preferences of an organization. For example if a company does not want certain highly sensitive personality information to be made available when an employee uses a third party computer the company may modify the personality system to prevent the extraction of such information. In addition one skilled in the art will appreciate that the personality system may be stored persistently on devices rather than loaded from the removable storage medium that is used for storing the personality information. The personality information on a storage medium may be encrypted and decrypted by the extraction component and adoption components respectively to ensure the privacy of the personality information. Accordingly the invention is not limited except as by the appended claims.

