---

title: Data packet switching within a communications network including aggregated links
abstract: In one embodiment, an apparatus includes a memory, a communications interface and a processor. The processor is operatively coupled to the memory and the communications interface. The processor is configured to receive, at a first time, a label identifier associated with an aggregated link within the communications network via the communications interface. The aggregated link including a plurality of redundant links. The processor is configured to receive, at a second time after the first time, a data packet including the label identifier via the communications interface. The processor is configured to send at least a portion of the data packet via a first link separate from the aggregated link based on the label identifier. The processor is configured to not send the data packet via a link from the plurality of redundant links of the aggregated link based on the label identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407537&OS=09407537&RS=09407537
owner: Juniper Networks, Inc.
number: 09407537
owner_city: Sunnyvale
owner_country: US
publication_date: 20100723
---
One or more embodiments relate generally to switching data packets within a communications network including aggregated links. More specifically one or more embodiments relate to preventing data packets received via an aggregated link from being transmitted via any link in that aggregated link.

Known methods of preventing data packets received via an aggregated link from being transmitted via any link in that aggregated link are based on multiple virtual links using Multiprotocol Label Switching MPLS . Virtual links or tunnels are defined by labels that identify the destination network element e.g. a network element such as a gateway switch or router of a data packet within a communications network. Data packets received via an aggregated link are encapsulated in the labels and network elements forward the data packets through a communications network based on the labels. The data packets are received at the destination network element within the communications network and the destination network element can determine to which if any ports i.e. egress ports operatively coupled to one or more computing devices of the destination network element the data packet should be forwarded based on the label. Finally the data packets are forwarded to the appropriate ports of the destination network element.

Such known methods suffer several disadvantages. For example the number of tunnels and therefore labels supported within the communications network is proportional to the number of aggregated links and destination network elements within the communications network. Because each destination network element can determine via which aggregated link a data packet was received each tunnel is particular to a set of destination network elements and the aggregated link via which a data packet sent via that tunnel was received. That is there is a tunnel and corresponding label for each aggregated link for each set of possible destination network elements. Thus the number of tunnels and corresponding labels which are managed within the communications network can become large and consume significant amounts of memory and processing resources within the network elements of the communications network.

In one embodiment an apparatus includes a memory a communications interface and a processor. The processor is operatively coupled to the memory and the communications interface. The processor is configured to receive at a first time a label identifier associated with an aggregated link within the communications network via the communications interface. The aggregated link including a plurality of redundant links. The processor is configured to receive at a second time after the first time a data packet including the label identifier via the communications interface. The processor is configured to send at least a portion of the data packet via a first link separate from the aggregated link based on the label identifier. The processor is configured to not send the data packet via a link from the plurality of redundant links of the aggregated link based on the label identifier.

One or more embodiments can forward i.e. route or switch data packets received via an aggregated link within an communications network without sending the data packets via any links of the aggregated link via which the data packet was received. In other words one or more embodiments can prevent the formation of loops within the communications network by preventing data packets to be sent via the aggregated links from which the data packets were received at the communications networks.

A communications network can be any of a variety of topologies of network elements that are in communication with one another. Network elements can be network switches switches network routers routers edge devices such as access switches network bridges bridges network gateways gateways and or other elements or components of a communications network. Additionally a communications network can include a switch core network element such as a multi stage switch fabric. The network elements communicate one with another to transmit or forward or send data through the communications network.

In some embodiments for example a switch core can be a rearrangeably non blocking Clos network such as a Benes network. In other embodiments a switch core can be a strictly non blocking Clos network. In still other embodiments a switch core can be any switch fabric configured to route data from a first access switch to a second access switch.

Computing devices coupled to one or more network elements such as access switches can communicate with one another via the communications network. For example a computing device such as a personal computer can be operatively coupled e.g. via a wired or wireless network connection to a network element of the communications network via a link. That computing device can send data to the network element and the network element can forward that data to another computing device via one or more other network elements within the communications network.

The link by which a computing device is operatively coupled to the communications network can be one of multiple links between the computing device and network elements within the communications network. Such multiple links between a computing device or network element and one or more network elements of a communications network can be referred to collectively as an aggregated link. In other words a computing device or network element can be operatively coupled to a communications network or one or more network elements of a communications network via an aggregated link. For example a computing device can be connected to two network elements within a communications network via an aggregated link including two separate links one link per network element. Thus the computing device can send data to and receive data from other computing devices operatively coupled to the communications network via either of the two links in the aggregated link. In some embodiments the computing device can handle the aggregated link as a single logical link. In other words the computing device can provide an interface or application programming interface API for sending data to and receiving data from the aggregated link e.g. via an operating system hosted at the computing device to application programs and other software modules that presents the aggregated link as a single link. Thus application programs and other software modules that use or are bound to the interface do not manage and are not aware of the individual links that define the aggregated link.

Device drivers middleware and or other software modules defining or providing the interface at the computing device can determine which link from the links of the aggregated link will be used to send a data packet. For example a device driver can monitor data throughput and or link speed of the links of an aggregated link and send a data packet via the link with the highest data throughput and link speed. In some embodiments other factors or parameters of the links of an aggregated link such as bit error rates checksum errors and bus or link collisions can be monitored and used at a device driver or other software module to select a link via which data will be sent.

The communications network or network elements within the communications network can add one or more label identifiers to data that are forwarded from one network element to other network elements to identify the source aggregated link of the data i.e. the aggregated link via which the data were received . A network element that receives the data including the label identifier can determine whether to forward the data via a particular link of that network element based on the label identifier. For example the network element can determine that a link is included within the aggregated link identified by the label identifier and not forward the data via that link because the computing device operatively coupled to that link is operatively coupled to the source aggregated link of the data. In other words the network element does not forward data via an aggregated link identified by a label identifier as the source aggregated link for the data.

As used in this specification the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a processor is intended to mean a single processor or multiple processors and memory is intended to mean one or more memories or a combination thereof.

In some embodiments communications network can be a cell based communications network in which data are grouped into fixed length cells that are sent through the communications network. Similar to data packets each cell can describe its source and destination using for example an identifier or address of the computing device or network element that is the source of that data cell and an identifier or address of the computing device or network element that is the destination address of that data cell. Furthermore each data cell can include a header portion that describe or characterize that data cell. Although data packets and data cells can be distinguished as discussed above the term data packet will be used herein to refer generically to data packets and data cells. Thus embodiments discussed in relation to data packets are applicable to embodiments based on data cells. Furthermore embodiments discussed in relation to data cells are applicable to embodiments based on data packets.

In some embodiments communications network can include a data plane and a control plane. A data plane can be a portion of communications network in which data signals e.g. data packets or data cells sent between network elements of the communications network and computing devices operatively coupled to communications network are transmitted through communications network . A control plane can be a portion of a communications network in which control signals e.g. routing information related to data signals and state information related to one or more stages or network elements of communications network are transmitted within communications network . A data plane and a control plane can be separate physical portions or segments of communications network each including or defined by separate cabling back planes mid planes and or other physical portions of a network. In some embodiments a data plane and a control plane can be logically separate. That is the data plane and the control plane can transmit information via common physical signaling and or common physical channels i.e. physical portions or segments of communications network including or defined by cabling back planes mid planes and or other physical portions of a network but can be separated by time division frequency division addressing and or other logical divisions.

Access switches and are operatively coupled to switch core via one or more network links or connections including a physical layer a logical layer and or other protocol layers. For example access switches and can be operatively coupled to switch core via a physical layer including a signaling protocol e.g. binary transmission protocol and physical addressing and electrical cabling optical cabling an electrical backplane an optical backplane and or a combination of one or more of these or other coupling mechanisms. Additionally access switches and can be operatively coupled to computing devices and via a logical layer including data framing e.g. dividing data sets into data packets and or data cells logical addressing data security and or other protocols. Thus access switches can be in communication with computing devices and and network elements such as switch core of communications network .

Access switches and can be network elements that are edge devices of communications network . In other words as illustrated in access switches and can communicate with computing devices outside of communications network and other network elements such as switch core inside communications network .

Additionally access switch includes communication interfaces and operatively coupled to processor . Processor can send and receive data via communication interfaces and . Communication interfaces and can be homogeneous or heterogeneous. For example communication interfaces and can be packet based communication interfaces and communication interfaces and can be cell based communication interfaces. Furthermore communication interfaces and can be electrical communication interfaces and communication interfaces and can be optical communication interfaces. In some embodiments access switch can function as a bridge between a computing device with packet based communications operatively coupled to one of communication interfaces and and network elements with cell based communications within a communications network.

Returning to computing device is operatively coupled to access switch of communications network via link L. Computing device is operatively coupled to access switches and of communications network via links L L and L respectively. Links L L and L are included in or are part of or define aggregated link AL. Computing device is operatively coupled to access switches and of communications network via links L and L respectively. Links L and L are included in aggregated link AL.

Additionally computing device includes communication interface . Processor can send and receive data via communication interface . Communication interface can be one of a variety of communication interfaces. For example in some embodiments communication interface can be a packet based communication interface. In some embodiments communication interface can be a cell based communication interface. In some embodiments communication interface can be electrical communication interface. In some embodiments communication interface can be optical communication interface.

Returning to links L L L L L and L can be one or more of various network links or connections including a physical layer a logical layer and or other protocol layers. For example computing devices and can be operatively coupled to communications network or access switch access switch access switch and access switch by links L L L and L and L and L respectively via a physical layer including a signaling protocol e.g. binary transmission protocol and physical addressing and electrical cabling optical cabling an electrical backplane an optical backplane and or a combination of one or more of these or other coupling mechanisms. Additionally computing devices and can be operatively coupled to communications network or access switch access switch access switch and access switch by links L L L and L and L and L respectively via a logical layer including data framing e.g. dividing data sets into data packets and or data cells logical addressing data security and or other protocols. In some embodiments links L L L L L and L can be homogenous. For example links L L L L L and L can be Ethernet links over Category 5e twisted pair cables. In some embodiments links L L L L L and L can be heterogeneous. For example links L L and L can be Ethernet links over Category 5e twisted pair cables and links L L and L can be Fiber Channel links over single or multi mode fiber cables.

Access switches and can receive data e.g. data packets from computing devices and and forward that data to others of computing devices and via switch core and access switches and . Thus computing devices and can communicate one with another via communications network .

Computing device can communicate with computing devices and via communications network using aggregated link AL. More specifically computing device can communicate with computing devices and via communications network using any of links L L and L that define aggregated link AL. Thus computing device can send and or receive data via communication network using links L L and L in parallel or simultaneously to increase a data transfer rate at computing device . Furthermore if one or more of links L L and L are severed or become disabled computing device can send and or receive data via communication network using the remaining links of links L L and L. For example if link L becomes disabled during operation of computing device computing device can cease sending and or receiving data via link L and send and or receive data only via links L and L. Thus the links that define or are included in an aggregated link can be referred to as parallel or redundant links because they can provide parallelism e.g. parallel links or routes to and from a communications network and redundancy between a computing device and communications network.

In some embodiments links L L and L can be homogenous i.e. share a common physical layer logical layer and or additional protocol layer . For example links L L and L can be Ethernet links over Category 5e twisted pair cables. In some embodiments links L L and L can be heterogeneous i.e. have different physical layers logical layers and or additional protocol layers . For example link L can be an Ethernet link over a Category 5e twisted pair cable and links L and L can be Fiber Channel links over single or multi mode fiber cables.

Similarly computing device can communicate with computing devices and via communications network using aggregated link AL. More specifically computing device can communicate with computing devices and via communications network using either of links L and L that define aggregated link AL. Thus computing device can send and or receive data via communication network using links L and L in parallel or simultaneously to increase a data transfer rate at computing device . Furthermore if one of links L and L is severed or becomes disabled computing device can send and or receive data via communication network using the remaining link of links L and L. For example if link L becomes disabled during operation of computing device computing device can cease sending and or receiving data via link L and send and or receive data only via link L.

In some embodiments links L and L can be homogenous. For example links L and L can be Ethernet links over Category 5e twisted pair cables. In some embodiments links L and L can be heterogeneous i.e. have different physical layers logical layers and or additional protocol layers . For example link L can be an Ethernet link over a Category 5e twisted pair cable and link L can be a Fiber Channel link over a single or multi mode fiber cable.

Data packets P P P and P illustrate transmission of a broadcast data packet from computing device to computing devices and via communications network . Additional details regarding P P P and P will be discussed with reference to which illustrates data packets according to the embodiment described in . Although this embodiment is discussed with reference to a broadcast data packet the methods apparatus and systems discussed in relation to this embodiment are applicable to other data sets such as data cells unicast data sets and multicast data sets within a communications network.

Computing device sends data packet P to computing devices and as a broadcast data packet. Data packet P is sent to access switch of communications network via link L of aggregated link AL. As illustrated in data packet P includes header payload and trailer . Header can include for example a source identifier or address such as a device address of computing device and a destination identifier or address such as a broadcast address unicast address such as a device address of computing device or a multicast address. Payload can include for example data to be transferred to one or more computing devices. Trailer can include a checksum or digital signature of one or more portions of data packet P such as payload . In some embodiments one or more of header payload and trailer can be omitted or include additional or different information than discussed above. For example trailer can be omitted from data packet P and header can include a synchronization sequence.

Returning to access switch receives data packet P and determines that data packet P was received via aggregated link AL. For example access switch can detect that data packet P was received at a port of access switch that is bound to or associated with aggregated link AL. In alternative embodiments a header of data packet P can include an identifier of aggregated link AL and access switch can determine that data packet P was received via aggregated link AL using for example a lookup table that correlates the identifier to aggregated link AL. In some embodiments the identifier can uniquely identify aggregated link AL within communications network .

After access switch determines that data packet P was received via aggregated link AL access switch adds one or more label identifiers or labels to data packet P to define data packet P. The label identifiers can be for example multiprotocol label switching labels MPLS labels that identify the aggregated link AL in via which a data packet such as data packet P was received. In some embodiments other labels and or identifiers are added to a data packet to identify a source aggregated link i.e. the aggregated link via which that data packet was received for that data packet. Access switch can determine or select a label identifier that identifies source aggregated link AL using for example an identifier not illustrated in included within data packet P or a lookup table that correlates label identifiers or labels with identifiers of aggregated links.

In some embodiments labels identifiers can occupy less space or memory than aggregated link identifiers. In other words label identifiers and aggregated link identifiers can have different lengths. For example label identifiers within a communications network can be eight bits in length and aggregated link identifiers can be 32 bits in length. In some embodiments label identifiers and aggregated link identifiers within a communications network can be of equal length. In some embodiments an aggregated link identifier can be a port number or identifier such as an identifier of an ingress port and or egress port that is operatively coupled to a link of an aggregated link. Thus a label identifier for a data packet can be selected from table based on a port of an access switch at which that data packet was received.

For example each access switch within a communications network can be a context and implement its own set of label identifiers. That is each access switch can independent of the other access switches define a label identifier for an aggregated link. Thus one access switch can associate one label identifier with an aggregated link and another access switch can associate a different label identifier with that aggregated link. Each access switch can distribute a list of the label identifiers and the aggregated link identifiers with which each label identifier is associated to the other access switches. Each access switch can store the label identifiers context identifiers and aggregated link identifiers in a table similar to table .

An access switch can upon receiving a data packet including a label identifier and a context identifier that identify a source aggregated link of that data packet determine which aggregated link is the source aggregated link by performing a lookup on the table using the label identifier and the context identifier as keys or collectively as a single key . Thus if two access switches each associate one label identifier with different aggregated links another access switch upon receiving a data packet including a label identifier and context identifier can determine which aggregated link is the source aggregated link of that data packet by matching the label identifier and context identifier from the data packet with a label identifier and a context identifier in the table because the context identifiers for the two access switches are different. Multiple label values within a data packet such as a label context and a label identifier can be referred to as a label stack. In some embodiments a label stack can include multiple label identifiers label contexts and or other label values.

The label identifiers are arranged in one column of table the label contexts are arranged in one column of table and the aggregated link identifiers are arranged in another column of table . Each row of table includes an aggregated link identifier and a label identifier and a context identifier that are related to or associated with the aggregated link identified by that aggregated link identifier. In other words the label identifier and label context of a row is the label that identifies the aggregated link identified by the aggregated link identifier of that row. Said differently the rows of table indicate which label identifier and label context are related to which aggregated link. Furthermore it can be said that a row of table indicates that the label identifier of that row within the label context of that row are related to aggregated link identified by the aggregated link identifier of that row.

In some embodiments an access switch can include at a memory table and table . The access switch can access table to determine which label identifier to add to a data packet. In some embodiments the access switch can also add a context identifier of that access switch to the data packet. The access switch can access table upon receipt of a data packet including a label identifier and or label context to determine a source aggregated link of that data packet.

In some embodiments the functions of rows and columns of table and or table can be reversed. That is the label identifiers the label contexts and or the aggregated link identifiers can be included within respective rows of a table and the columns can indicated relationships between or associations among a label identifier label context and aggregated link of a column. In some embodiments one or more data structures other than tables can be used to make accessible relationships between label identifiers label contexts and or aggregated link identifiers. For example a database such as a relational database can be used to represent such relationships or associations. In some embodiments a linked list data structure e.g. a linked list in which each node has a data field for a label identifier and a data field for an aggregated link identifier can be used.

Returning to after access switch has determined which label identifier will be added to data packet P to define data packet P access switch sends data packet P to switch core . Data packet P is illustrated in and includes header label stack and trailer . Additionally data packet P includes header payload and trailer of data packet P. Thus in some embodiments data packet P can be a payload of data packet P. In some embodiments one or more portions of data packet P can be omitted from data packet P. For example header and or trailer or portions of header and or trailer can be omitted from data packet P.

Header can include for example a source identifier or address such as a device address of access switch and a destination identifier or address such as a broadcast address unicast address such as a device address of switch core or a multicast address. Label stack can include label values such as a label identifier and label context that individually and or collectively identify a source aggregated link of data packet P. In some embodiments label stack can include additional label values such as destination aggregated links virtual local area network identifiers and or other label values. Trailer can include a checksum or digital signature of one or more portions of data packet P such as payload . In some embodiments one or more of header payload and trailer can be omitted or include additional or different information than discussed above. For example trailer can be omitted from data packet P and header can include a synchronization sequence.

Returning to switch core receives data packet P and sends data packet P to other network elements of communications network . In other words switch core switches or routes data packet P modified as illustrated in to define data packet P within communications network . As illustrated in data packet P includes header and trailer . Header and trailer can include information and or values similar to the information and or values included in data packet P and described above. In some embodiments header and trailer have been updated from header and trailer respectively to include for example a new source identifier a new destination identifier and or a new checksum value.

As illustrated in data packet P also includes label stack header payload and trailer . As discussed above in relation to data packet P one or more of these portions can be omitted. For example header and or trailer can be omitted. In some embodiments label stack can identical to i.e. include the same label values in the same order as label stack of data packet P. In some embodiments label stack can include more and or fewer label values than label stack . For example a network element such as an access switch or switch core can add label values to or remove label values from a label stack. In some embodiments label stack includes label values from label stack that have been reordered from an ordering within label stack .

Returning to switch core sends data packet P to access switches and . As illustrated in switch core does not send data packet P to access switch because access switch sent data packet P the data packet on which data packet P is based to switch core . In some embodiments switch core can send data packet P to access switch . For example switch core can perform processing of data packet P network accounting and or other functions and then return portions of data packet P to access switch as data packet P. In some embodiments access switch can be operatively coupled to a computing device in addition to computing device . Switch core can send data packet P to access switch and access switch can send data packet P to the additional computing device. In alternative embodiments access switch can send data packet P to the additional computing device before or after sending data packet P or another data packet such as data packet P including data packet P to switch core and switch core does not send data packet P to access switch .

Because data packet P is a broadcast data packet data packet P should be sent to all the computing devices other than the computing device that generated or originally sent data packet P. In other words data packet P should be sent via each individual link i.e. a link that is not a link of an aggregated link and via at least one link of each aggregated link other than the individual link or aggregated link via which data packet P is transmitted. More specifically with reference to data packet P should be sent to computing device via link L and to computing device via aggregated link AL.

As illustrated in data packet P is identical to data packet P. This is because the route through communications network was to forward data packet P to the destination of data packet P. That is data packet P is a broadcast data packet and is therefore sent to all the computing devices within the same network segment as computing device . Because computing device is not directly coupled to those computing devices i.e. computing devices and computing device relies on communications network to send data packet P to those computing devices. Accordingly communications network sends data packet P to computing devices and as though computing device had sent data packet P directly to computing devices and . In some embodiments a communications network can alter a data packet before sending or forwarding that data packet to a destination or recipient . For example a communications network can update time to live TTL values accounting values and or other values or fields of a data packet before forwarding that data packet to a destination. In some embodiments a communications network can perform deep packet inspection analysis routines or processes to identify and or modify data packets with particular properties. Thus in some embodiments data packet P is not identical to data packet P.

Returning to the access switches that receive data packet P access switches and in can define or generate data packet P by discarding or removing one or more portions of data packet P from data packet P. For example label stack can be discarded from data packet P. Said differently data packet P or data packet P can be extracted from data packet P. Additionally the access switches that receive data packet P access switches and in determine whether data packet P will be sent via the links of those access switches to computing devices. Thus access switches and each receive data packet P and determine the source aggregated link of data packet P. More specifically access switches and receive data packet P and extract a label identifier and if used a label context from label stack of data packet P. Access switches and then determine the source aggregated link of data packet P the payload of data packet P based on the label identifier and if used the label context. For example access switches and can perform a lookup on a table database linked list or other data structure to determine an identifier of the source aggregated link of data packet P. In some embodiments one or more of access switches and uses a table such as table or table to determined an identifier of the source aggregated link of data packet P.

After access switches and have determined the source aggregated link of data packet P each access switch determines which ports of that access switch are operatively coupled to or associated with or bound to that aggregated link. For example each access switch can include a table database or other data structure that correlates the ports of that access switch with aggregated links and or individual links. For example using an aggregated link identifier as a key an access switch can determine which if any of its ports are operatively coupled to links of that aggregated link. After each access switch of access switches and have determined which ports of that access switch are associated with the source aggregated link of data packet P access switches and can send data packet P via the links operatively coupled to the remaining ports of each access switch from access switches and . In other words data packet P can be sent via the ports or links that are not associated with the source aggregated port of data packet P. More specifically data packet P can be sent via link L and aggregated link AL. Thus using an identifier of the source aggregated port of data packet P communications network can prevent sending data packet P based on and in some embodiments identical to data packet P to the computing device computing device in that originally sent data packet P via any links of the aggregated link via which that computing device is operatively coupled to communications network .

As illustrated in data packet P is sent to computing device via only one link of aggregated link AL. In some embodiments access switch and access switch can be configured such that only one of access switch and access switch forwards particular classes of data packets to computing device . For example access switch and access switch can communicate via a control plane of communications network to negotiate which of access switch and access switch will forward multicast and broadcast data packets to computing device via aggregated link AL. In some embodiments one access switch from access switch and access switch sends data packets to computing device and both of access switch and access switch receive data packets from computing device via aggregated link AL. In some embodiments access switch and access switch negotiate in real time i.e. when a data packet is received at access switch and or access switch which of access switch and access switch will send the data packet to computing device via aggregated link AL. In some embodiments a control processor not shown within or operatively coupled to a control plane of communications network configures access switch and access switch and or communicates with access switch and access switch to control or direct which of access switch and access switch send individual data packet and or classes of data packets to computing device via aggregated link AL.

In some embodiments access switch and access switch periodically send test data packets e.g. ping data packets to computing device and receive responses to the test data packets via links L and L respectively to test whether links L and L are active or operational. If one of links L or L becomes inoperative access switch and access switch can communicate e.g. via a control plane of communications network to determine that the access switch from access switch and access switch that is operatively coupled to the active link of links L and L will send data packets to computing device via the active link of aggregated link AL. In some embodiments data packet P can be sent to computing device via each link L and L of aggregated link AL and computing device can discard redundant or duplicate data packets.

In some embodiments communications network can include more or fewer elements than illustrated in . For example access switches and can be operatively coupled one to another directly rather than through switch core . In some embodiments data packets P and or data packet P can traverse or pass through additional network elements between access switches and or .

A label identifier is defined at in response to for example detection of a new aggregated link. For example an access switch hosting a software module that implements method can define a label identifier when it detects that a link of an aggregated link has become operatively coupled to a port of that access switch. In some embodiments the access switch can define a label identifier that is unique with respect to label identifiers previously stored at that access switch. The label identifier is then sent to network elements within a communications network at . The network elements can receive the label identifier and insert the label identifier into a list used to determine an aggregated link identifier based on a label identifier. In some embodiments an aggregated link identifier that identifies an aggregated link associated with the label identifier is sent to the network elements at with the label identifier. In some embodiments a label context such as an a device identifier of an access switch sending a label identifier is sent to the network elements at . A label context can be used as discussed above to identify an aggregated link.

After the labor identifier is sent to network elements at it is determined whether more aggregated links are detected or not at . If there are more aggregated links at method can return to step to define a label identifier for another aggregated link. If there are no more aggregated links at method can stop defining and sending label identifiers to network elements of a communications network. For example after a label identifier an optional label context and an aggregated link identifier for each aggregated link with which an access switch is associated have been sent to the network elements of a communications network that access switch can cease notifying the network elements about the label identifiers used by that access switch to identify aggregated links.

Concurrently with steps and label identifiers can be received from network elements at . In other words other network elements within a communications network such as access switches can also implement method and can send label identifiers label contexts and or aggregated link identifiers. After a label identifier is received the label identifier is compared with other label identifiers to determine whether there is a conflict in the label identifiers at . For example a label identifier and an aggregated link identifier can be received at . If that label identifier exists for example in a table or database or other data structure and is associated with an aggregated link different from the aggregated link associated with the received aggregated link identifier a conflict in the label identifiers exists that can be resolved or rectified. If conversely that label identifier does not exist in the table or database or exists for the aggregated link associated with the received aggregated link identifier a conflict does not exist between label identifiers. Additionally if label contexts are used a conflict can exist if both a label identifier and context label exist in the table or database for an aggregated link different from the aggregated link associated with the received aggregated link identifier. If either of the label identifier or context label does not exist in the table or database for an aggregated link different from the aggregated link associated with the received aggregated link identifier a conflict does not exist. In other words a conflict exists when a received label identifier and label context exist in a table or database for an aggregated link that is not the aggregated link that is associated with the received aggregated link identifier.

If a conflict between label identifiers exists network elements within a communications network can negotiate a new or alternate label identifier at . For example the network element that first detects the conflict can send a broadcast message to other network elements to inform the other network elements of the conflict. That network element can then request that the network element that defined the label identifier giving rise to the conflict define a new label identifier. In some embodiments the network element that detects the conflict can suggest a new label identifier. That suggestion can in some embodiments be deemed or assumed operative or authoritative unless another network element notes a conflict with that label identifier. In some embodiments the network element that defined the label identifier giving rise to the conflict can ratify the suggested label identifier as authoritative. In some embodiments a predetermined number of network elements such as half of the network elements for example can ratify the suggested label identifier as authoritative. A network element can ratify a label identifier by for example sending a ratification or accept message to the network elements within a communications network after a check for conflicts with other label identifiers indicates no conflicts.

If there are not conflicts at or if a label identifier has been successfully negotiated such that a conflict has been removed at a table or database or other data structure including label identifiers and associated identifiers of aggregated links at a network element can be updated. That is the new label identifier aggregated link identifier and if used label context can be added to the table or database.

At if there are more label identifiers method can return to step to receive a label identifier aggregated link identifier and if used a label context. Steps and are then repeated as appropriate to update the label identifiers stored at a network element. If there are no more label identifiers at method can proceed to . If there are more aggregated links at the network element method can return to step to receive a label identifier aggregated link identifier and if used a label context. Steps and are then repeated as appropriate to update the label identifiers stored at a network element. If there are no more aggregated links at the network element for which label identifiers are to be defined method can stop.

Method can include more or fewer steps than illustrated in . Additionally the steps of method can be rearranged from the order illustrated in . For example steps and can be processed or executed serially rather than concurrently with other steps of method . In some embodiments steps and can be processed after steps and . Furthermore in some embodiments step can include multiple sub steps to effect negotiation of a new label identifier. Additionally in some embodiments access switches and or other network elements within a communications network can be preconfigured or statically configured with lookup tables and or databases to map or relate label identifiers and or label contexts to aggregated link identifiers.

Method includes at receive at a first time and via a communications interface a label identifier associated with an aggregated link 1 within a communications network and 2 including multiple redundant links operatively coupled to multiple network elements of the communications network. The label identifier is stored after the first time and before a second time at a first memory location of a memory to produce a stored label identifier at .

A label context identifier associated with a network element within the communications network is received at . The method further includes at storing at the third time and before a second time at a second memory location of the memory the label context identifier to produce a stored label context identifier such that the first memory location is associated with the second memory location.

A data packet including a label identifier corresponding to the stored label identifier and a label context identifier corresponding to the stored label context identifier is received at a second time after the first time and via the communications interface at . The label identifier and the label context identifier are discarded from the data packet at and 1 the data packet or 2 the data packet with one or more portions of the data packet omitted is sent via a first link separate from the aggregated link based on the label identifier at . The data packet is not sent based on the label identifier via a link from the multiple redundant links of the aggregated link at .

Some embodiments described herein relate to a computer storage product with a computer readable medium also can be referred to as a processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The media and computer code also can be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks carrier wave signal processing modules and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs and Read Only Memory ROM and Random Access Memory RAM devices.

A processor can be for example a single physical processor such as a general purpose processor an ASIC a PLD or a FPGA having a single processing core or a group of processing cores. In some embodiments a processor can be a group or cluster of processors such as a group of physical processors operatively coupled to a shared clock or synchronization signal a shared memory a shared memory bus and or a shared data bus. In other words a processor can be a group of processors in a multi processor computing device. In some embodiments a processor can be a group of distributed processors e.g. computing devices with one or more physical processors operatively coupled one to another via a communications network. Said differently a processor can be a group of distributed processors in communication one with another via a communications network. In some embodiments a processor can be a combination of such processors. For example a processor can be a group of distributed computing devices where each computing device includes a group of physical processors sharing a memory bus and each physical processor includes a group of processing cores.

Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. For example embodiments may be implemented using Java C or other programming languages e.g. object oriented programming languages and development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While various embodiments have been described above it should be understood that they have been presented by way of example only not limitation and various changes in form and details may be made. Any portion of the apparatus and or methods described herein may be combined in any combination except mutually exclusive combinations. For example embodiments discussed in relation to data packets can be equally applicable to embodiments using or based on data cells. Furthermore embodiments discussed in relation to communications between a computing device and network elements of a communications network can be applicable to communications between portions or segments of a communications network. Such portions of a communications network can include other communications networks network elements and or groups of computing devices. The embodiments described herein can include various combinations and or sub combinations of the functions components and or features of the different embodiments described.

