---

title: Locating product references in content pages
abstract: Disclosed are various embodiments for locating product references in community content. Character sequences (n-grams) are extracted from a page of text content. Each n-gram is evaluated as a potential product reference using a product catalog search for the n-gram or a conditional probability for the n-gram. The conditional probability is obtained from behavior-based search data. When the search was used for the evaluation, each n-gram is found to be a potential product based on results from the product catalog search. When the behavior-based search data was used for the evaluation; each n-gram is found to be a potential product based on the conditional probability exceeding a threshold.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08290925&OS=08290925&RS=08290925
owner: Amazon Technologies, Inc.
number: 08290925
owner_city: Reno
owner_country: US
publication_date: 20101115
---
An electronic commerce system operated by an online merchant allows users to purchase products online. Some online merchants also host pages of user provided community content such as product reviews user comments posts on discussion boards etc. In creating content for a page related to a particular product a user may include a reference to another product. Other readers may be interested in obtaining more information about the second product for example by viewing a product specific page in the electronic commerce catalog. However such readers may have trouble determining exactly which product is being referred to in the user comment since the text used to refer to the product in the comment may not be the specific product identifier used in the catalog.

The present disclosure relates to locating references to products within pages of user provided community content such as product reviews user comments posts on discussion boards etc. Text analysis and data mining is performed on the pages of community content to identify pools of potential product references. Attributes of the products which correspond to the potential references may be used to narrow from potential to actual product references. Such attributes may include for example brand product category title author artist etc. Once a product reference has been identified the community content page may be modified to replace the existing product reference text with a hyperlink to a product specific page. This data mining process may be performed offline using pages of already generated community content or may be performed while a user is in the process of modifying a community content page.

With reference to shown is a networked environment according to various embodiments. The networked environment includes one or more computing devices in data communication with one or more client devices by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing device may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. A plurality of computing devices together may comprise for example a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience the computing device is referred to herein in the singular. Even though the computing device is referred to in the singular it is understood that a plurality of computing devices may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing device for example include a product reference locator and a search engine . The components executed on the computing device may also include other applications services processes systems engines or functionality not discussed in detail herein. The data stored in the data store includes data accessed by the product reference locator for example community content data catalog data and behavior based search data as well as potentially other data.

The product reference locator is executed to locate potential product references within pages of community content. The pages of community content may take the form of web pages text metadata etc. The pages are user modifiable for example through a user leaving a comment on a product page through a user posting to a discussion board etc. The search engine is executed to find a product in catalog data using a search query. In various embodiments the product reference locator and the search engine may utilize any type of middleware framework to communicate with a client application executing on a client device or with other applications executing on the computing device . Examples of such frameworks include remote procedure calls service oriented architecture protocol SOAP representational state transfer REST Windows Communication Foundation and other frameworks.

The client device is representative of a plurality of client devices that may be coupled to the network . The client device may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer a personal digital assistant a cellular telephone a set top box a music player a video player a media player a web pad a tablet computer system a game console or other devices with like capability.

The client device may be configured to execute various applications such as a browser and other applications. The browser may be executed in a client device for example to access and render network pages such as web pages or other network content served up by a web server a page server or other servers. The client device may be configured to execute applications beyond browser such as for example email applications instant message applications and or other applications.

Referring next to a general description of the operation of the product reference locator is provided along with a description of various data used by the product reference locator . To begin the product reference locator obtains a community content page from the community content data . The pages of community content include text of any kind. The text may be embedded within web pages metadata etc. The community content pages include any form of user submitted or user modifiable text for example through a user leaving a comment on a product page through a user posting to a discussion board etc. The product reference locator divides the community content page into sentences then divides the sentences into character sequences called n grams . Data mining is then performed on the n grams to identify pools of potential product references.

One pool of potential product references is generated by searching the product catalog data using an n gram as a search query . The search results include a list of product identifiers that serve as an index into the product catalog data . Any n gram that returns a product identifier in the search is placed in the first pool of potential product references . Each n gram in the pool is associated with one or more product identifiers .

Another pool of potential product references is generated by using an n gram in conjunction with the behavior based search data . The behavior based search data is an aggregation of past searches of the product catalog data by multiple users. The behavior based search data captures user behavior as users perform searches with particular queries and then follow links in the search results to particular products. Thus the behavior based search data indicates how many times a particular search query resulted in a user viewing a product page. An n gram is used to search behavior based search data . The search results provide a mapping between n grams and product identifiers and a measure of success for that mapping. More specifically the search results are used to calculate the probability that using a particular n gram as a search query will result in the user viewing a particular product. Any n gram having a probability exceeding a particular threshold is added to the second pool of potential product references . Each n gram in the second pool is associated with a product identifier s .

Attributes such as brand product category title author artist etc. may be used to narrow the first pool and or the second pool from potential to actual product references. More specifically attributes of a product identifier associated with an n gram in pool or pool are compared to attributes of the community content page which contained the particular n gram . An n gram that is a potential product reference in the pool or is confirmed as an actual product reference when the comparison is within a predefined range. Product identifier attributes may be obtained from the catalog data . Community content attributes may be obtained from metadata of the community content page .

Turning now to shown is a flowchart that provides one example of the operation of a portion of the product reference locator according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the product reference locator as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

Beginning at box the product reference locator extracts the n grams from a community content page where an n gram is a subsequence of characters up to a specific length. Thus if maximum length is 3 the n grams for the text go to are g go go o o o t t to t and to. In some embodiments n grams may be limited to words and sequences of words thus excluding sequences within a word or shorter than a word. In some embodiments the product reference locator may split the text of the community content page into sentences before extracting n grams.

Next at box the product reference locator begins an iteration loop to process each of the n grams starting with the first n gram . At box the product reference locator selects a method to use for determining whether the n gram is a potential product reference using either a behavior based search strategy or a search relevance strategy. The selection is based on character attributes of the n gram . In some embodiments character attributes of the n gram are used to categorize the n gram as an explicit product or an implicit product reference and the search relevance strategy is used for explicit reference n grams and the behavior based search data strategy is used for implicit reference n grams. As an example the product reference locator could select the strategy based on the length of the n gram . As another example the product reference locator could select based on the presence of a particular character or type of character in the n gram . Other character attributes could also be used. The product reference locator could also use combinations of attributes to categorize for example n grams with length less than a predetermined value e.g. five and including a digit as implicit mentions and to categorize as explicit mentions otherwise.

In some embodiments some n grams are eliminated from consideration as potential product references based on character attributes of the individual n grams . The criteria for elimination may vary depending on the type of search strategy. For example n grams that don t use title case first letter capitalized might be eliminated before using the search relevance strategy to find potential product references. As another example n grams that don t include a digit might be eliminated before using behavior based search data strategy to find potential product references. In addition to eliminating based on criteria other criteria might be used to keep an n gram from elimination. For example an n gram that includes a quotation mark at its boundary might be saved from elimination even if it doesn t include a digit and or doesn t use title case. While specific examples are mentioned other character attributes are also possible.

If at box it is determined that a basic search will be used to identify n grams as potential product references the product reference locator continues at box . At box the product reference locator searches the product catalog data using the n gram as a search query . At box the product reference locator places the n gram into the first pool of potential product references if the search for the n gram produced any search results . The product reference locator then continues at box .

If at box it is determined that behavior based search data will be used to identify n grams as potential product references the product reference locator continues at box . At box the product reference locator uses behavior based search data to determine whether the n gram is a potential product reference. Behavior based search data can be viewed as a mapping between n grams and product identifiers and a measure of success for that mapping. Next at box the product reference locator places the n gram into the second pool of potential product references if the measure of success for the n gram exceeds a specific threshold. The product reference locator then continues at box .

Box is reached after the product reference locator applies one of the methods to determine whether the current n gram is a potential product reference. At box the iterator moves to the next in the set of n grams and the product reference locator continues processing at the top of the iteration loop box . If the last n gram has been processed then product reference locator moves to box . At box the product reference locator merges the pools of potential product references and to eliminate any n gram that appears in both pools. The process of is then complete.

Although the flowchart of includes a number of boxes or functions these functions are optional and a particular embodiment may not include all functions. For example some embodiments include the merge feature in box while others do not.

As explained above in connection with the product reference locator uses behavior based search data to identify some n grams as potential product references. Moving on to shown is a flowchart that provides further details of this use of behavior based search data in various embodiments of the product reference locator . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the product reference locator as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

Beginning at box the product reference locator searches behavior based search data for the n gram . This search produces a list of product identifiers which a user has viewed after using that n gram as a query in past searches. Next at box the product reference locator uses attributes to filter out product identifiers that don t match the community content page which contained the particular n gram . Examples of attributes include author artist title brand product category etc. The product reference locator combines attributes of the product identifier associated with the n gram with attributes of the community content page which contained the particular n gram . The resulting combination is an attribute score for each product identifier . Product identifiers with a score less than a threshold are removed at box and are not considered in the further processing of .

The search performed at box also provides the number of hits for each of the product identifiers in the search results. At box the product reference locator uses the number of hits to estimate a conditional probability for viewing the identified product after a search using the n gram . Next at box the product reference locator compares the conditional probability for the n gram to a threshold. If at box it is determined that the probability does not exceed the threshold then n gram is not a potential product reference and the process of is complete. If at box it is determined that the probability meets or exceeds the threshold at box the product reference locator places the n gram into the second pool of potential product references and the process of is complete.

Although the flowchart of includes a number of boxes or functions these functions are optional and a particular embodiment may not include all functions. For example some embodiments include the attribute score filtering feature in box while others do not.

As explained above in connection with the product reference locator uses a product relevance search strategy to identify some n grams as a potential product reference. Referring now to shown is a flowchart that provides further details of this use of product relevance strategy in various embodiments of the product reference locator . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the product reference locator as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments.

Beginning at box the product reference locator searches the product catalog data using the n gram as a search query . At box the product reference locator selects from the search results the product identifiers with the N highest relevance scores where N can be predefined user configurable or calculated. Next at box the product reference locator generates a similarity score for each product identifier using attributes of the selected product identifier and attributes of the n gram . Examples of such attributes may include title author brand name etc. In some embodiments the similarity score is a longest common weighted subsequence LCWS score.

At box the product reference locator compares the similarity score for the n gram to a threshold. If at box it is determined that the similarity score does not exceed the threshold then n gram is not a potential product reference and the process of is complete. If at box it is determined that the similarity score meets or exceeds the threshold the product reference locator proceeds to box .

At box the product reference locator combines attributes of the product identifier associated with the n gram with attributes of the community content page which contained the particular n gram . Examples of attributes include author artist title brand product category etc. The resulting combination is an attribute score for each product identifier .

Next at the product reference locator determines whether any of the attribute scores meet a threshold. If at box it is determined that no attribute score meets the threshold then n gram is not a potential product reference and the process of is complete.

If at box it is determined that at least one attribute score meets the threshold processing continues at block . At block the product reference locator selects the product identifier with the highest score and links the selected product identifier to the n gram . Next at block the product reference locator places the n gram into the first pool of potential product references and the process of is complete.

Although the flowchart of includes a number of boxes or functions these functions are optional and a particular embodiment may not include all functions. As a non limiting example the relevance score filtering feature box the similarity score feature boxes and and the attribute score feature boxes and are each independent and may be included or excluded in any combination.

Moving on to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the product reference locator and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor . While not illustrated the client device also includes components like those shown in whereby product reference locator is stored in a memory and executable by a processor.

It is understood that there may be other applications that are stored in the memory and are executable by the processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java Javascript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the product reference locator and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of and show the functionality and operation of an implementation of portions of the product reference locator . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of and show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in and may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in and may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the product reference locator that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

