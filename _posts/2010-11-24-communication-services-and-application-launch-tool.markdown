---

title: Communication services and application launch tool
abstract: Resources in a communication system are associated based on a query by receiving the query from a client device, generating requests based on the query, each request being formatted in a different message format, transmitting each of the plurality of requests to at least one corresponding source, and receiving at least one result associated with the query from the at least one corresponding source, where each result is associated with a communications application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09191517&OS=09191517&RS=09191517
owner: IPC SYSTEMS, INC.
number: 09191517
owner_city: Jersey City
owner_country: US
publication_date: 20101124
---
Example aspects of the present invention generally relate to communication systems and more particularly to products for providing a query and launch tool for communications system.

A turret system is a specialized key telephony switching system that allows a relatively small number of users to access a large number of external lines and provides enhanced communication features such as hoot n holler push to talk intercom video and large scale conferencing. These features are often utilized in the financial industry such as trading floor environments as well as security law enforcement public safety utilities healthcare and customer support e.g. contact centers environments.

Users interface with a turret system through a turret device which is a phone like desktop device with multiple handsets and speakers and multiple buttons. A turret is either implemented in dedicated hardware sometimes referred to as a hard turret or a general purpose computer sometimes referred to as a soft turret .

Turret devices can reside in a fixed environment of dedicated voice communications trading resources or a more virtualized trading environment across multiple sites. A virtual environment allows resources to be shared dynamically when and where required across a global corporate enterprise.

Typical global corporate enterprises lack mechanisms for querying sharing and organizing information related to communications resources and infrastructure. Search engines for example are not designed to identify and organize resources across a communications system. A search engine searches for information on a network and presents the search results in a list where each identified resource is associated with a uniform resource locator URL that specifies where the identified resource is available. The mechanism for retrieving the content is typically defined by the file pointed to by the URL e.g. by the extension of the file .docx .html .mp3 and the like . The content may consist of web pages images information and other types of files. Depending on the type of resource pointed to by the URL the appropriate program is launched. For example an image pointed to by the URL causes a computer to launch an image viewer a document type file causes an appropriate word processing document to launch etc.

Applications such as e mail and contact applications allow users to search for e mails and contacts based on a query term. E mails can be queried by sender recipients subject and the like. Similarly a local or global contact database can be searched for a particular contact or group and in some cases the same application that runs the search can execute a service such as make a call or prepare and e mail to the contact or group.

What is needed is a communications resource tool that initiates queries of several remote sources based on a single query associates the results and provides communications related resources related to the results so as to allow associated communication system applications to be quickly and easily executed.

The example embodiments described herein meet the above identified needs by providing methods systems and computer program products for providing a query and program launch tool specialized for use in a communications infrastructure.

In one aspect of the present invention methods computer readable medium and apparatus are provided for associating resources in a communication system based on a query by receiving the query from a client device generating requests based on the query each request being formatted in a different message format transmitting each of the plurality of requests to at least one corresponding source and receiving at least one result associated with the query from the at least one corresponding source where each result is associated with a communications application.

Further features and advantages as well as the structure and operation of various example embodiments of the present invention are described in detail below with reference to the accompanying drawings.

The example embodiments presented herein are directed to methods systems and computer program products for associating resources located on multiple sources and executing application and or services within a communications system which are now described herein in terms of an example trading environment. This is for convenience only and is not intended to limit the application of the present disclosure. In fact after reading the following description it will be apparent to one skilled in the relevant art s how to implement alternative embodiments such as security law enforcement utilities healthcare and customer support e.g. contact centers environments.

Generally a tool provides a search window into which the user can type search criteria text in order to search for some feature or an entry list accessible via a unified desktop application UDA . The user may type in any alphanumeric character into the window to search for a UDA function or feature. Features that are searchable include but are not limited to a contact management application forums communication history favorites a speaker application call control voice services and click to dial. The user may select any of the result entries presented through a user interface and then launch an actions window which presents all viable and logical actions for that entry.

The trading floor communication infrastructure turret devices soft turrets sources and application server are all interconnected via a network which may be a private or public network or combination of both.

Application server is responsible for receiving a query via the user interface of a soft turret or turret device . Application server alone or in combination with a device such as turret device is also responsible for processing the query. The query is formatted into the formats accepted by sources by generating packet messages including the query. The messages are then communicated to the appropriate source . Each source in turn performs an independent search of its database and returns results based on the query to the requestor. Application server organizes and formats the results returned by sources for presentation via the output interfaces of turrets and provides a mechanism to launch communications related applications associated with the types of results. In one embodiment a local personal computer PC desktop for example obtains the relevant information from application server . When a user initiates a search request the information saved in memory on the PC desktop is searched.

One type of resource is a conference server . Conference server combines audio streams to provide voice and or video conferencing services. For example if users A and B are communicating through audio stream and users Y and Z are communicating through audio stream conference server provides a mechanism to bridge audio streams and to create a conference call between users A B Y and Z. Another service is provided by a media gateway . Media gateway connects the communications network to other networks such as a public switched telephone network PSTN . Another resource is directory resource which provides global directory information such as contact information.

An application server database coupled to application server maintains application configurations and other information such as contacts functions named entities and application licenses.

Application server communicates with sources using the appropriate protocols. The Lightweight Directory Access Protocol LDAP application protocol for example can be used for querying and modifying data of directory services implemented in Internet Protocol IP networks. Structured Query Language SQL can be used to obtain data from relational database management systems RDBMS . Other protocols may used to query or modify data in sources as well such as Messaging Application Programming Interface MAPI Java Naming and Directory Interface JNDI and the like. The results are collected by the application server and returned to the user interfaces on the soft turret or turret device .

As shown in the main UDA communicator application includes a controller a model builder and a UDA model database . Controller instructs model builder to build a user defined model based on logon information and prestored models stored in UDA model database . In one embodiment the extent of actions available to the user is controlled by a license engine and the user s role as defined by user management. For example if a user is not licensed to use communication history then the action list would not include View History .

User defined model is an aggregate of licensed models stored in UDA model database for which the logged on user has permission. The prestored models correspond to various UDA applications where each individual model stored in UDA model database is a collection itself. User defined model is thus an array of collections.

Tear off interface includes a component interface and a mediator . Component interface is a user interface which accepts input from a user to perform a query and in turn display query results. In addition component interface accepts input from the user to launch a component application .

Mediator is the interface between component interface and main UDA communicator application particularly via controller . Mediator receives messages from component interface and modifies them into a format parseable by controller . Mediator need not wait for the entire query term to be entered. As query text is entered mediator intercepts formats and forwards it to controller . Thus mediator provides a cumulative results search. As each character is entered into the window the results matching the cumulative total characters entered thus far are displayed. As more characters are entered the search criteria are refined and the search results adjusted to match.

Tear off model corresponds to user defined model . Particularly when user defined model is pushed to the tear off interface the data are saved on the local device in its local memory as tear off model .

Controller in turn instruct model builder to build a combined model from a database of UDA models . Particularly controller requests model builder to obtain licensed models from UDA model database . The retrieved models available to the user are stored in memory as a user defined model .

The search domain is governed by license and role based access control RBAC to restrict system access to authorized users. The extent of a user s ability to search lists such as contact lists and features is controlled by licenses stored in database or other application or database server and the user s role as defined in the user management. For example if a user is not licensed to use PSTN voice services then their search will not include any PSTN dial tone point of contact entries. Additionally if a user is not licensed to use the speaker then Speaker Application would not appear as a result of a search.

Thus by aggregating the contacts model and favorites model for example a search for a particular term will associate records records that otherwise would have been unassociated and require separate searches using different search means. In this example a search for a particular person or entity would not only return that person or entity s contact information it would also present available macros available for that person or entity and present both to the requesting user through a user interface on a single results page organized to provide easy access to information and selection of functions associated the particular result selected by the user.

Public and private line communications systems execute applications which generate both transitory and persistent data. Transitory short term or temporary data are those data that remain alive only for a relatively short time period typically not surviving the activation or execution of an application such as the instantiation of a call session whereas persistent or long term data are those data that are stored in a storage architecture for long term reliable retention such as a contact which will be accessed after a call session has ended. The data stored in records corresponding to these models may include both transient and persistent data. This permits queries to return current information such as whether a trader is currently on a call forum or conference as well as persistent data such as contact information call history information and the like.

A user defined model is an array collection i.e. ordered list of individual records obtained from different entities such as a speaker server a directory server an Outlook server a history server and a faxline server. The user has the ability to select a mode which identifies the particular models to use to build the user defined model . For example in one mode a user defined model contains data records corresponding to exemplary models contacts model speaker model history model favorites model as shown in . In another mode a user defined model will contain only the records corresponding to for example contacts model and speaker model . Accordingly by aggregating two or more models stored in UDA model database searches across all the horizontal layers of the models can be performed.

Tear off interface initiates a database query based on the user defined model as a user begins to enter a query through a component interface e.g. trader application . As the user keys in a query mediator collects the keystrokes and communicates them to controller . Controller in turn performs a search of various application databases based on the user defined model . In another embodiment controller commands applications to provide a current status of communications activity such as active call sessions forums and conferences speaker activity e.g. hoot n holler call volume and the like.

A conference can be an ad hoc conference that is uncontrolled where a user initiates a conference call with other parties to initiate the conference. A forum allows a user to preconfigure a conference call. In one embodiment the component interface includes who is on the conference and a moderator will have control over the forum . A forum has a name and the name is searchable.

Statistics such as the call history of a caller or line number including information regarding whether the call was forwarded to where it was forwarded and whether and when other lines joined the call. The particular attributes of a call session e.g. caller identifier time caller joined or dropped from the call can also be provided via a graphical interface.

The results are then sent to tear off model which in turn communicates the results to the user through component interface . The results provided to the user include but are not limited to a directory service a favorites service a history service a speaker service e.g. hoot n holler push to talk intercom etc. and an outlook service each of which has a corresponding model.

Each model stored in UDA model database has one or more attributes associated with a corresponding source of information and which are used for associating related results. For example one model may have an attribute that defines its corresponding application as a directory service. Another model may have an attribute that defines its corresponding application as a speaker application.

An attribute may be common to the models such as a contact name attribute. If the user defined model includes fields associated with sources or application resources that have information the fields of user defined model will be populated with the information and returned by controller to component interface as shown in . Component interface in turn presents the results to a user via a user interface in an organized manner so as to easily identify applications associated with the results.

The results can be presented in a hierarchical manner where a result such as a contact name is presented and then related results e.g. licensed applications are listed after the result is selected. Alternatively the results can be presented based on the applications which can be executed where the input to those applications is based on a data item or query term common to all the sources that provide a response to the query. For example if the name Ben is input as the query term the results from the sources might be application identifiers capable of performing a communications function associated with Ben . If for example someone named Ben is on a conference call and has a hoot n holler service one of the application sources e.g. conferencing server will return data permitting the user who performed the search the ability to launch an application that joins the user to the conference Ben is participating in. Similarly another application source will return data permitting the user to launch a hoot n holler speaker function to instantly connect to Ben . The possible applications are listed on a user interface with an indication that they are all in some way associated with the query term in this example Ben .

The search results can then be used to establish a communications connection associated with a particular result the user selects through component interface .

Each UDA model stored in UDA model database includes an attribute which is used to identify an associated application. The user defined model formed by model builder includes this attribute. As shown in for example directoryContactType has different values to indicate whether the contact information stored in this collection is from a users global contacts database or a user s local e mail contact database. Similarly as shown in callCategoryType has different values to indicate whether a record is from missed received or initiated calls.

When query results corresponding to the user defined model are communicated to the user via component interface indicators such as predefined icons corresponding to the associated applications are displayed.

A user can select from the component interface a component application to launch by for example selecting an icon corresponding to an application associated with a particular query result. The component application is then launched based on the attribute associated with the selection.

In one embodiment a dynamic sizing results window is provided. The results window dynamically lengthens or shortens as the results of the search change. The default maximum number of results that appear in the result window is for example ten 10 but this is customizable by the user. Results that are available but are not shown within the results window can be viewed via a scroll bar which allows the user to scroll up and down through the search results.

The results are selectable by mouse where each result shown in the result window can be selected by for example a mouse left click. Upon selecting the entry a list of actions is presented. Similarly the results are selectable by a keyboard where each result shown in the result window can be selected by use of the keyboard cursor keys traversing up and down the list of results . Upon selecting the entry and hitting ENTER a list of actions is presented.

In one embodiment a result shown at the head of the results window is highlighted by default. The highlighted result can be selected by pressing the ENTER key. Upon pressing the ENTER key a list of actions is presented.

Similarly in another aspect an action listed at the top of the results list is launched by selecting the enter key. Particularly the result shown at the head of the actions window is highlighted by default and thus can be selected by pressing the ENTER key. Upon selecting the entry the chosen action is performed.

In yet another aspect an action list is provided. After selecting an entry within the results window a list of actions is presented. The list of actions presented are those that are logically available based upon the type of object selected and the various records associated with that object. For example if a contact entry is selected then the actions that could be available would be Call View Contact Record View Related History Add to favorites Add to Hot list etc.

In yet another embodiment an icon or result representing a communications function can be selected or double clicked to launch a call associated with data obtained from an information sources or application resource. If a CONTACT entry from within the results window is selected and then the left button is selected or double clicked for example a call to the counter party is launched. Thus the double left click in effect is a short cut to placing an outbound call to a contact.

Each result shown in the action window can be selected by a mouse. Upon selecting the entry the chosen action is performed. For example if Call is selected then the UDA initiates a communication session to the target counter party.

In addition to the text entry window a number of short cut icon buttons can be embedded within the toolbar window which allow a user to launch a particular UDA feature. Features that may be included within the short cut buttons may include a contact management application forums communication history favorites speaker application call control voice services click to dial and the like. Upon clicking the left mouse button on top of one of the buttons the associated UDA function is launched provided the user has sufficient access .

When the interface receives a keyword search as shown in screen shot packet messages are generated for all the licensed sources associated with the logged in user. For example an entry of the name Ben will cause the application to generate messages to all available sources to perform a search associated with Ben to be communicated to controller to query sources for information and resources. The results will be pushed back to the tear off interface particularly to tear off model .

As shown in screen shot of a search for the term Ben returns several results associated with that name. In this case the results are various contacts associated with various persons having the same name Ben . The results also can include one or more communications applications associated with contacts having the name Ben . For example one item in the list can include a name e.g. Ben a status on conference and one or more possible actions e.g. Join Conference that would if selected execute the appropriate application in the communications system.

Referring back to the example in as shown in screen shot Ben Jones was selected in screen . Upon selection a list of possible applications services are presented via the graphical user interface. In this example applications that are licensed to the user who logged onto the UDA and are also associated with the selection i.e. Ben Jones are presented. In the example shown in the user has selected Call . Accordingly as shown in screen shot a dialer application is launched and the appropriate record associated with the contact is used to obtain the contact s line number and the line number is sent to the dialer application which in turn makes the call.

In another aspect of the present invention a mechanism of using a press key combination via a keyboard is provided to enter a query string or launch an application. For example when the interface receives the entry it causes controller to generate a message requesting a forum server not shown or corresponding application to search for all forums. As a result all forums are displayed in the format Forum . Thus in this embodiment there is no need to type a word such as conference or forum .

If the user interface receives the entry conference the application generates a message formatted for the conference server which in turn causes the conference server to search for a range of conferences that are pending. In another aspect the system returns corresponding conference and forum states.

The example embodiments described above such as for example system functional modules procedure graphical user interface or any part s or function s thereof may be implemented in one or more computer systems or other processing systems. Useful machines for performing the operation of the example embodiments presented herein include general purpose digital computers or similar devices.

The computer system preferably includes without limitation a processor device a main memory and an interconnect bus . The processor device may include without limitation a single microprocessor or may include a plurality of microprocessors for configuring the computer system as a multi processor system. The main memory stores among other things instructions and or data for execution by the processor device . The main memory may include banks of dynamic random access memory DRAM as well as cache memory.

The computer system may further include a mass storage device peripheral device s portable storage medium device s input control device s a graphics subsystem and or an output display . For explanatory purposes all components in the computer system are shown in as being coupled via the bus . However the computer system is not so limited. Devices of the computer system may be coupled through one or more data transport means. For example the processor device and or the main memory may be coupled via a local microprocessor bus. The mass storage device peripheral device s portable storage medium device s and or graphics subsystem may be coupled via one or more input output I O buses. The mass storage device is preferably a nonvolatile storage device for storing data and or instructions for use by the processor device . The mass storage device may be implemented for example with a magnetic disk drive or an optical disk drive. The mass storage device is preferably configured for loading contents of the mass storage device into the main memory .

The portable storage medium device operates in conjunction with a nonvolatile portable storage medium such as for example a compact disc read only memory CD ROM to input and output data and code to and from the computer system . In some embodiments the application may be stored on a portable storage medium and may be inputted into the computer system via the portable storage medium device . The peripheral device s may include any type of computer support device such as for example an input output I O interface configured to add additional functionality to the computer system . For example the peripheral device s may include a network interface card for interfacing the computer system with a network .

The input control device s provide a portion of the user interface for a user of the computer system . The input control device s may include a keypad and or a cursor control device. The keypad may be configured for inputting alphanumeric and or other key information. The cursor control device may include for example a mouse a trackball a stylus and or cursor direction keys. In order to display textual and graphical information the computer system preferably includes the graphics subsystem and the output display . The output display may include a cathode ray tube CRT display and or a liquid crystal display LCD . The graphics subsystem receives textual and graphical information and processes the information for output to the output display .

Each component of the computer system may represent a broad category of a computer component of a general and or special purpose computer. Components of the computer system are not limited to the specific implementations provided here.

Portions of the disclosure may be conveniently implemented by using a conventional general purpose computer a specialized digital computer and or a microprocessor programmed according to the teachings of the present disclosure as will be apparent to those skilled in the computer art. Appropriate software coding may readily be prepared by skilled programmers based on the teachings of the present disclosure.

Some embodiments may also be implemented by the preparation of application specific integrated circuits field programmable gate arrays or by interconnecting an appropriate network of conventional component circuits.

Some embodiments include a computer program product. The computer program product may be a non transitory computer readable storage medium or media having instructions stored thereon or therein which can be used to control or cause a computer to perform any of the processes of the disclosure. The computer readable storage medium may include without limitation a floppy disk a mini disk an optical disc a Blu ray Disc a DVD a CD ROM a micro drive a magneto optical disk a ROM a RAM an EPROM an EEPROM a DRAM a VRAM a flash memory a flash card a magnetic card an optical card nanosystems a molecular memory integrated circuit a RAID remote data storage archive warehousing and or any other type of device suitable for storing instructions and or data.

Stored on any one of the computer readable storage medium or media some implementations include software for controlling both the hardware of the general and or special computer or microprocessor and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the disclosure. Such software may include without limitation device drivers operating systems and user applications. Ultimately such computer readable storage media further includes software for performing aspects of the disclosure as described above.

Included in the programming and or software of the general and or special purpose computer or microprocessor are software modules for implementing the processes described above.

While various example embodiments of the present disclosure have been described above it should be understood that they have been presented by way of example and not limitation. It will be apparent to persons skilled in the relevant art s that various changes in form and detail can be made therein. Thus the present disclosure should not be limited by any of the above described example embodiments but should be defined only in accordance with the following claims and their equivalents.

In addition it should be understood that the figures are presented for example purposes only. The architecture of the example embodiments presented herein is sufficiently flexible and configurable such that it may be utilized and navigated in ways other than that shown in the accompanying figures.

Further the purpose of the Abstract is to enable the U.S. Patent and Trademark Office and the public generally and especially the scientists engineers and practitioners in the art who are not familiar with patent or legal terms or phraseology to determine quickly from a cursory inspection the nature and essence of the technical disclosure of the application. The Abstract is not intended to be limiting as to the scope of the example embodiments presented herein in any way. It is also to be understood that the procedures recited in the claims need not be performed in the order presented.

