---

title: Signature creation for malicious network traffic
abstract: An endpoint on a network uses detection data to detect a malicious software attack. The endpoint identifies content associated with the attack, such as a component of a web page, and generates a description of the content. The endpoint sends the description to a security server. The security server analyzes the content and identifies characteristics of the content that are present when the content is carried by network traffic. The security server generates a traffic signature that specifies the identified characteristics and provides the traffic signature to inspection points. The inspection points, in turn, use the traffic signature to examine network traffic passing through the inspection points to detect network traffic carrying the content. The attack detection at the endpoint thus informs the traffic signature-based detection at the inspection points and reduces the spread of malicious software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08782790&OS=08782790&RS=08782790
owner: Symantec Corporation
number: 08782790
owner_city: Mountain View
owner_country: US
publication_date: 20100219
---
This invention pertains in general to computer security and in particular to detecting malicious software.

There is a wide variety of malicious software malware that can attack modern computers. Malware threats include computer viruses worms Trojan horse programs spyware adware crimeware and phishing websites. Malware can for example surreptitiously capture important information such as logins passwords bank account identifiers and credit card numbers. Similarly the malware can provide hidden interfaces that allow the attacker to access and control the compromised computer.

Modern malware is often targeted and delivered to only a relative handful of computers. For example a Trojan horse program can be designed to target computers in a particular department of a particular enterprise. Such malware is difficult for security software to detect because there are fewer instances of the same malware and the security software might not be configured to recognize it. Moreover even mass distributed malware is becoming harder to detect because the malware can contain polymorphisms designed to evade detection.

In response to the increasing difficulty of detecting malware security software is evolving toward heuristics based detection. This type of detection uses a set of heuristics such as descriptions of behaviors that are indicative of malicious behavior to identify malware. Heuristic based detection can work well but has drawbacks in some environments. For example behavior based heuristics require that the potential malware be allowed to execute in order to exhibit the behaviors that are then flagged as malicious. This requirement renders heuristic based detection unsuitable for environments where the malware does not execute such as in routers firewalls and other computers that are using network traffic filtering to scan for malware on the wire. Moreover heuristic based detection capabilities are not present in all environments where malware may execute meaning that computers in these environments are still susceptible to attack.

The above and other issues are addressed by a computer implemented method computer system and computer readable medium for creating a traffic signature for detecting content in network traffic. An embodiment of the method comprises receiving a description of content associated with an attack on an endpoint of a computer network. The method further comprises generating a traffic signature for the described content where the traffic signature identifies characteristics of the content that are present when the content is carried by network traffic. The method additionally comprises providing the traffic signature to an inspection point. The inspection point is adapted to use the traffic signature to examine network traffic passing through the inspection point to detect network traffic carrying the content.

Embodiments of the computer system comprise a non transitory computer readable storage medium storing executable computer program modules. The modules comprise a content collection module for receiving a description of content associated with an attack on an endpoint of a computer network. The modules also comprise a signature creation module for creating a traffic signature for the described content the traffic signature identifying characteristics of the content that are present when the content is carried by network traffic. The modules further comprise a signature distribution module for providing the traffic signature to an inspection point. The inspection point is adapted to use the traffic signature to examine network traffic passing through the inspection point to detect network traffic carrying the content. The computer system further comprises a computer processor for executing the computer program modules.

Embodiments of the computer readable medium store executable computer program modules for enabling creation of a traffic signature for detecting content in network traffic. The modules comprise a monitoring module for monitoring activity of an application at an endpoint. The modules additionally comprise an attack detection module for detecting an attack on the application by analyzing activities monitored by the monitoring module. The modules further comprise a content identification module for identifying content associated with the detected attack and for generating a description of the identified content and a communications module for providing the content description to a security server via a network. The security server is adapted to receive the content description and generate a traffic signature for the described content the traffic signature identifying characteristics of the content that are present when the content is carried by network traffic and to provide the traffic signature to an inspection point. The inspection point is adapted to use the traffic signature to examine network traffic passing through the inspection point to detect network traffic carrying the content.

The figures depict an embodiment for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

The network represents the communication pathways between the security server inspection points endpoints and other entities on the network. In one embodiment the network is the Internet and uses standard communications technologies and or protocols. Thus the network can include links using technologies such as Ethernet 802.11 worldwide interoperability for microwave access WiMAX G digital subscriber line DSL asynchronous transfer mode ATM InfiniBand PCI Express Advanced Switching etc. Similarly the networking protocols used on the network can include multiprotocol label switching MPLS the transmission control protocol Internet protocol TCP IP the User Datagram Protocol UDP the hypertext transport protocol HTTP the simple mail transfer protocol SMTP the file transfer protocol FTP etc. The data exchanged over the network can be represented using technologies and or formats including the hypertext markup language HTML the extensible markup language XML etc. In addition all or some of links can be encrypted using conventional encryption technologies such as secure sockets layer SSL transport layer security TLS virtual private networks VPNs Internet Protocol security IPsec etc. In other embodiments the entities use custom and or dedicated data communications technologies instead of or in addition to the ones described above.

An inspection point inspects network traffic passing through the inspection point for content containing malicious software malware . The inspection point is often located at an intermediate location between the source and destination of the traffic. For example the inspection point can be located at an Internet Service Provider ISP at the gateway between an enterprise network and a public network such as the Internet or at other locations with access to network traffic destined for multiple locations. In such embodiments the inspection point can reside in a network interface card router firewall or other similar device. The inspection point can also reside at the ultimate source and or destination of the network traffic e.g. in a network software stack executing on an endpoint . The inspection point can be formed of hardware and or software elements.

The content for which the inspection point inspects can include any text or binary stream of bytes which an application at an endpoint might use in a way that allows a security vulnerability at the endpoint to be exploited. The content includes data that are executable or loadable at the endpoint such as files in the Portable Executable .EXE or dynamic link library .DLL formats data that are rendered at the endpoint e.g. data in the HTML XML Portable Document Format PDF or ADOBE FLASH formats data that are interpreted as instructions at the endpoint e.g. JAVASCRIPT and VBSCRIPT and other data that can be downloaded or installed by the endpoint .

The inspection point uses traffic filtering to detect malware residing within the network traffic. To this end the inspection point includes a traffic filtering module having a set of traffic signatures . The traffic signatures identify data strings or and other characteristics of malware in a manner that allows content containing the malware to be detected in the network traffic. The traffic filtering module scans the network traffic to identify traffic matching signatures from the set . For example the traffic filtering module can perform inspection at layers and of the Open System Interconnection OSI model so called deep packet inspection to identify packets having content matching the characteristics specified by the traffic signatures . If network traffic matches a traffic signature the filtering module performs an action that remediates the detected malware such as blocking redirecting marking and or reporting the traffic. The filtering module can also add metadata to the network traffic containing the content such as metadata indicating the IP address port protocol and or URL associated with the content. In one embodiment the traffic filtering module receives the traffic signatures from the security server .

An endpoint is a destination of traffic traversing the network . In one embodiment an endpoint is a computer used by one or more users to perform activities including browsing web sites on the network and downloading installing updating and or executing applications. The endpoint can also be a network capable device not traditionally thought of as a computer such as a mobile telephone personal digital assistant PDA video game system television set top box or any other device that encounters network traffic.

In one embodiment the protection module includes detection data that describe ways to detect malware attacks at the endpoint . In one embodiment the protection module receives the detection data from the security server . The detection data can specify a variety of ways to detect malware such as behaviors reputations and signatures. For example the detection data can describe abnormal behaviors performed by the application that indicate a vulnerability of the application is being exploited by previously unknown malware.

When the protection module detects a malware attack at the endpoint it identifies the content associated with the attack i.e. the content in which the attacking malware resides. For example the protection module can detect that a script caused abnormal behavior in the application when the application rendered the web page containing the script. In this case the protection module identifies the script as the content containing the malware. The protection module generates a description of the detected content and sends the description to the security server .

The inspection point and endpoint are located within the same entity in some embodiments. For example a home computer can include both a traffic filtering module for filtering network traffic entering the computer and a protection module for monitoring the operation of an application executing on the computer. In addition the traffic filtering module can be located at a home computer that lacks a protection module . Thus some entities are both endpoints and inspection points .

The security server collects descriptions of content containing malware detected by protection modules of endpoints on the network . A signature generation module at the security server analyzes the descriptions of a given piece of content to identify characteristics of the content that are present in network traffic carrying the content. The signature generation module uses the characteristics to generate a traffic signature for the content. The security server distributes the generated traffic signature to the traffic filtering modules of the inspection points and the inspection points use the traffic signature to detect the content containing the malware.

In the technique described above malware detections made by the endpoints are leveraged to generate traffic signatures. These traffic signatures in turn are used to detect malware in network traffic filtered by the inspection points . The detections at the inspection points stop malware infections before the malware reaches the endpoints . Further in the case where the inspection point and endpoint are located within the same entity the inspection point based detection stops the malware before it reaches the application it is intending to attack. Moreover since the network traffic filtered through the inspection points may be destined for endpoints that lack malware protection generating and using traffic signatures in this manner provides protection to otherwise unprotected endpoints. Detection at the inspection points also tends to generate fewer false positives than detections at the endpoints and tends to be more reliable because it is more difficult for the malware to evade detection while being carried in network traffic. Additionally stopping malware at the inspection points reduces any collateral damage to the endpoint that may occur if the malware successfully attacks the endpoint prior to being detected by the protection module . In sum the malware detection at the endpoints informs and improves the detection at the inspection points and ultimately reduces the spread of malware.

Depending on the embodiment one or more of the functions of the security server can be provided by a cloud computing environment. As used herein cloud computing refers to a style of computing in which dynamically scalable and often virtualized resources are provided as a service over the network . Functions of the inspection points and endpoints can also be provided by the cloud computing environment.

The storage device is a non transitory computer readable storage medium such as a hard drive compact disk read only memory CD ROM DVD or a solid state memory device. The memory holds instructions and data used by the processor . The pointing device is a mouse track ball or other type of pointing device and is used in combination with the keyboard to input data into the computer system . The graphics adapter displays images and other information on the display . The network adapter couples the computer system to the network .

As is known in the art a computer can have different and or other components than those shown in . In addition the computer can lack certain illustrated components. In one embodiment a computer acting as a security server lacks a keyboard pointing device graphics adapter and or display . Moreover the storage device can be local and or remote from the computer such as embodied within a storage area network SAN .

This description uses the term module to refer to computer program logic for providing a specified functionality. A module can be implemented in hardware firmware and or software. A module is typically stored on a computer readable storage medium such as the storage device loaded into the memory and executed by the processor .

A monitoring module monitors activity by the application and or elsewhere at the endpoint . For example if the application is a web browser the monitoring module observes content processed by the application as it renders web pages. The content can include for example HTML documents images JAVASCRIPT and other types of scripts ActiveX controls ADOBE FLASH content and other executable and non executable content. In addition the monitoring module observes behaviors of the application as it processes the content. The behaviors include downloading web pages and other content served by web sites on the network accessing content and other resources stored at the endpoint spawning processes at the endpoint and the like.

An attack detection module analyzes the activities monitored by the monitoring module to detect when the application or another entity on the endpoint is attacked by malware. As mentioned above one embodiment of the attack detection module uses detection data to recognize a malware attack. The attack detection module analyzes the activities in view of the detection data and detects an attack if warranted. The attack detection module can perform one or more actions to remediate the attack such as blocking malicious behavior quarantining malicious content and reporting the attack to a user of the endpoint .

The detection data can specify a variety of ways to detect malware. In one embodiment the detection data include a set of heuristics specifying behaviors by the application that are characteristic of a malware attack. These behaviors can include the application crashing performing an illegal access of local resources having memory corruption suffering a memory buffer overflow or downloading files that have not been requested or authorized by a user. The abnormal behaviors can also include the application executing child processes or calling to the Application Programming Interface API of the operating system to start or stop other processes on the system.

The detection data can also include information supporting reputation based malware detection by the protection module . For example the detection data can indicate reputations of content downloaded by the application . Content having a low reputation can be convicted as malware based on the reputation alone or on a combination of the low reputation and other features such as causing the application to perform potentially malicious behaviors. The detection data can also include signatures for detecting malware when the malware is in the format used by the application .

A content identification module identifies content associated with a detected malware attack. In general the type of content associated with the attack depends upon the type of attack. In a typical scenario where the application is attacked while rendering a web page the associated content can include the web page being rendered when the attack occurred and or a component of the web page such as a script on the page. The associated content can also include content downloaded during the attack such as an executable file downloaded during a drive by download attack.

In one embodiment the content identification module generates a description of the identified content. The content description can include for example a hash produced by applying a hashing algorithm such as a variant of the Secure Hash Algorithm SHA to the content. Similarly the content description can include a fingerprint of the content produced by extracting characteristic components of the content. In addition the description of the content can include an optionally compressed copy of the content itself. In one embodiment the content description also includes metadata about the content such as the address of the web page being rendered when the malware attack was detected an identifier of the specific detection data that identified the attack and or other information. Different embodiments of the content identification module use different techniques to generate the content description.

An endpoint communications module provides a communications link between the endpoint and the security server . In one embodiment the endpoint communications module provides the content description generated by the content identification module to the security server . The endpoint communications module also receives detection data and other information supplied by the security server .

A content collection module collects content descriptions from endpoints on the network . As mentioned above there can be thousands or millions of endpoints on the network . During typical operation a subset of the endpoints will detect malware attacks as the endpoints are used by their users and send descriptions of the content associated with the attacks to the security server . The content collection module receives and stores these content descriptions.

A content analysis module analyzes the content descriptions received by the security server . In one embodiment the analysis verifies that the content descriptions describe actual malware. To this end the analysis can include correlating the content descriptions received from the endpoints to identify descriptions referring to the same content. In addition the analysis can include determining whether the content truly contains malware and is not merely generated in response to false positive attack detections at the endpoints .

A signature creation module generates traffic signatures for detecting content in network traffic that the content analysis module determines to contain malware. To generate a traffic signature for particular content the signature creation module identifies characteristics of the content that are present when the content is travelling on the wire i.e. present in traffic carrying the content on the network . For example the signature creation module can find a string of bytes that distinctly identifies the content and can be detected in IP packets carrying the content on the network . The format of the content carried in the network traffic is often different than the format of the content when it is used by applications at the endpoint . For example the content in the network traffic may be encrypted compressed base encoded etc. This format difference prevents use of signatures in the detection data at the endpoint for detecting malicious content in network traffic.

The signature creation module forms a traffic signature that specifies the identified characteristics and enables detection of the content in network traffic. In one embodiment the signature creation module creates and tests a set of potential signatures for detecting particular content in order to exclude signatures that generate false positive detections in legitimate network traffic. Depending upon the embodiments the functions of the content analysis and signature creation modules can be performed using manual and or automated techniques.

A signature distribution module provides the created traffic signatures to the inspection points . In one embodiment the traffic signatures are provided on a rolling basis as new signatures are created. In another embodiment the traffic signatures are provided on a predetermined schedule and or upon request by an inspection point .

The protection module monitors activity by the application and or elsewhere at the endpoint . For example the protection module can monitor actions performed by the application while rendering a web page downloaded from a web site via the network . The protection module detects a malware attack occurring at the endpoint . The attack can be detected by using detection data to identify abnormal behaviors by the application that signify that the application is being attacked or by other techniques. Once an attack is detected the protection module identifies content such as a component of a web page that is associated with the attack. The protection module generates a description of the identified content and provides the description to the security server .

The security server collects content descriptions from endpoints on the network . The security server analyzes the content descriptions to correlate the content descriptions received from the various endpoints and or perform other tasks such as verifying that described content contains malware. If content identified by a content description contains malware the security server generates a traffic signature specifying characteristics that allow the content to be detected in network traffic. The security server distributes the traffic signature to the inspection points . The inspection points use the traffic signature to detect the content in filtered network traffic. If an inspect point detects content matching the traffic signature in network traffic passing through the inspection point it takes steps to remediate the malware contained in the content such as blocking or redirecting the network traffic.

The above description is included to illustrate the operation of certain embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention.

