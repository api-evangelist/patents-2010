---

title: Method and apparatus for monitoring and analyzing degree of trust and information assurance attributes information in a data providence architecture workflow
abstract: A method and apparatus that monitors and analyzes degree of trust and information assurance attributes information in a data providence architecture workflow is disclosed. The method may include receiving a message having a data provenance wrapper, examining each data provenance record of the message and any attachments for discrepancies, identifying any discrepancies in the examination of each data provenance record of the message and any attachments; calculating a degree of trust based on any discrepancies identified in the examination of each data provenance record of the message and any attachments, and presenting the degree of trust and information assurance attributes information to the user on a display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08281141&OS=08281141&RS=08281141
owner: Lockheed Martin Corporation
number: 08281141
owner_city: Bethesda
owner_country: US
publication_date: 20100105
---
This application claims priority from U.S. Provisional Patent Application Ser. No. 61 162 774 filed Mar. 24 2009 and U.S. Provisional Patent Application Ser. No. 61 253 243 filed Oct. 20 2009 the contents of which are incorporated herein by reference in their entireties.

This application is related to co filed applications U.S. patent application Ser. No. 12 652 266 filed Jan. 5 2010 published as 2010 0250932 A1 on Sep. 30 2010 entitled METHOD AND APPARATUS FOR SIMULATING A WORKFLOW AND ANALYZING THE BEHAVIOR OF INFORMATION ASSURANCE ATTRIBUTES THROUGH A DATA PROVIDENCE ARCHITECTURE U.S. patent application Ser. No. 12 652 298 filed Jan. 5 2010 published as 2010 0251367 A1 on Sep. 30 2010 entitled METHOD AND APPARATUS FOR PROVIDING INFORMATION ASSURANCE ATTRIBUTES THROUGH A DATA PROVIDENCE ARCHITECTURE and U.S. Pat. No. 8 166 122 issued Apr. 24 2012 entitled METHOD AND APPARATUS FOR GENERATING A FIGURE OF MERIT FOR USE IN TRANSMISSION OF MESSAGES IN A MULTI LEVEL SECURE ENVIRONMENT the contents of which are incorporated herein by reference in their entireties.

In conventional communications environments data provenance involves tracking the origin of data and subsequent transformations performed on the data. This process is useful for large science projects in areas like astronomy genetics etc. where a large repository of data is continually being modified and it is important to validate and be able to recreate results derived from the data repository.

Information assurance is the practice of managing information related risks. More specifically information assurance practitioners seek to protect and defend information and information systems by ensuring confidentiality integrity authentication availability and non repudiation. These goals are relevant whether the information is in storage processing or transit and whether threatened by malice or accident. In other words information assurance is the process of ensuring that authorized users have access to authorized information at the authorized time.

However while work on data provenance exists the concept has not been implemented in conventional communication devices for information assurance attributes such as authenticity confidentiality integrity non repudiation and availability. Furthermore conventional communication devices implementing data provenance have no manner in which to monitor and analyze information assurance attributes.

A method and apparatus that monitors and analyzes degree of trust and information assurance attributes information in a data providence architecture workflow is disclosed. The method may include receiving a message having a data provenance wrapper wherein the message may or may not have attachments and the data provenance wrapper contains a data provenance record with data provenance information for the message and each attachment examining each data provenance record of the message and any attachments for discrepancies wherein the examination of each data provenance record of the message and any attachments includes verifying signatures of senders of the message and any attachments calculating a hash value for the message and any attachments verifying that the hash value for the message and any attachments matches the values in the data provenance record for the message and any attachments verifying the timestamp of the message and any attachments and verifying information assurance attributes of the message and any attachments the information assurance attributes being at least one of authenticity confidentiality integrity non repudiation and availability identifying any discrepancies in the examination of each data provenance record of the message and any attachments calculating a degree of trust based on any discrepancies identified in the examination of each data provenance record of the message and any attachments and presenting the degree of trust and information assurance attributes information to the user on a display.

Additional features and advantages of the disclosed embodiments will be set forth in the description which follows and in part will be obvious from the description or may be learned by practice of the disclosed embodiments. The features and advantages of the disclosed embodiments may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the present disclosed embodiments will become more fully apparent from the following description and appended claims or may be learned by the practice of the disclosed embodiments as set forth herein.

Various embodiments of the disclosed embodiments are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosed embodiments.

The disclosure may describe a variety of embodiments such as a method and apparatus and other embodiments that relate to the basic concepts of the disclosed embodiments.

The disclosed embodiments may concern displaying data provenance data which involves tracking the origin of data and subsequent transformations performed on it. In particular the disclosed embodiments may concern a multi level secure environment where it may not always be possible to pass data source and processing information across security boundaries. Further the disclosed embodiments may concern the use of data provenance techniques to support information assurance attributes like availability authentication confidentiality integrity and non repudiation which then may be presented to a user on an interactive screen display or dashboard. A user may monitor and analyze the information assurance data using the display and may be able to select and print various reports.

This data provenance architecture may bring together the intrinsic information assurance attributes of a workflow as it was designed as well as its actual execution in a deployed communications device or system. The workflow as designed may provide a baseline for entitlement such that it may provide the maximum value that can be achieved in the deployed system. For example if the workflow is structured to send data in clear text then no confidentiality may be ensured and the deployed system may not guarantee confidentiality. On the other hand if the workflow as designed is structured to encrypt the data that it sends then the baseline entitlement may provide confidentiality but if a deployed system process sends data in clear text then the baseline entitlement of confidentiality is not met and may be identified.

The dashboard architecture may display the values for the information assurance attributes which may be used by a user to do a what if analysis by incorporating subjective confidence values. Further it may also be used to perform an after the fact analysis to understand vulnerabilities and determine the impact of compromised assets.

The disclosed embodiments may also concern information that needs to be added to an existing messaging system to provide data provenance. Two parts may be described and utilized as separate pieces namely the original messaging system and the data provenance section. This division may simplify both the addition and removal of any data provenance information. Real world implementations may provide the desired fields by a changing the message format used for a Service Oriented Architecture SOA system or b by augmenting an existing SOA based workflow. Separating the two components also provides flexibility in implementation.

This system may be designed to work with both peer to peer and message workflow services. In an SOA client applications may talk directly to the SOA servers and processes communicate using protocols like Simple Object Access Protocol SOAP or Representational State Transfer REST for example. The disclosed embodiments may have a routing service that supports both explicit destinations and role based destinations and the framework may be language independent for example.

The data provenance data may be decoupled from the actual message. That is the data provenance information may be sent in parallel with the actual message. This process may allow the data provenance section to be sent independently from the normal workflow. Data provenance records may then be associated with the message. However data provenance records may also be transmitted using a separate communication channel. Note that may also be possible to use Out Of Band SOAP headers to include the data provenance data in the same packet as the message itself.

The data provenance system should allow flexible implementations. Multiple SOA systems can exchange data over the SOA enterprise bus. Some systems may act like routers in forwarding messages to the proper workflow recipient. For instance the sending system may send the information to a role such as an analyst . A workflow system may then decide on the next available analyst and forward the message to that individual for example. The data provenance system may also support the use of gateways protocols that encapsulate or tunnel data multi level security and encrypted data for example.

The communication devices may be any device capable of sending and receiving messages and or attachments such as a processing device a mobile communication device a portable computer a desktop computer a server a network router a gateway device or combinations of the above for example.

Processor may include at least one conventional processor or microprocessor that interprets and executes instructions. Memory may be a random access memory RAM or another type of dynamic storage device that stores information and instructions for execution by processor . Memory may also store temporary variables or other intermediate information used during execution of instructions by processor . ROM may include a conventional ROM device or another type of static storage device that stores static information and instructions for processor . Memory may include an internal or external storage device that may include any type of media such as for example magnetic or optical recording media and its corresponding drive.

User interface may include one or more conventional input mechanisms that permit a user to input information communicate with the communication device and or present information to the user such as a an electronic display microphone touchpad keypad keyboard mouse pen stylus voice recognition device buttons one or more speakers etc. Output devices may include one or more conventional mechanisms that output information to the user including a printer one or more speakers or a medium such as a memory or a magnetic or optical disk and a corresponding disk drive.

Display may be any device that may be able to present information electronically to a user. For example the display may be a computer display that may be able to present graphics video streams animation and or text to the user. In particular the display may be any device that may be able to electronically present degree of trust and information assurance information to the user. The display may also include touch screen and or other interactive display capabilities known to one of skill in the art for example.

Communication interface may include any transceiver like mechanism that enables the communication device to communicate via a network. For example communication interface may include a modem or an Ethernet interface for communicating via a local area network LAN . Alternatively communication interface may include other mechanisms for communicating with other devices and or systems via wired wireless or optical connections. In some implementations of the communication device communication interface may not be included in the exemplary communication device when the communication process is implemented completely within the communication device .

The communication device may perform such functions in response to processor by executing sequences of instructions contained in a computer readable medium such as for example memory a magnetic disk or an optical disk. Such instructions may be read into memory from another computer readable medium such as a storage device or from a separate device via communication interface .

The communication network environment and the communication devices illustrated in and the related discussion are intended to provide a brief general description of a suitable computing environment in which the disclosed embodiments may be implemented. Although not required the disclosed embodiments will be described at least in part in the general context of computer executable instructions such as program modules being executed by the communication device such as a general purpose computer. Generally program modules include routine programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that other embodiments of the disclosed embodiments may be practiced in network computing environments with many types of computer system configurations including personal computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like.

Embodiments may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked either by hardwired links wireless links or by a combination thereof through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In the disclosed embodiments wrappers may be used in the message sending process that will add the appropriate data provenance information and a de wrapper will be used in the message receiving process that will strip the data provenance information before the message reaches its destination.

Note that the data providence architecture of the disclosed embodiments may be a peer to peer architecture or a service oriented architecture for example.

The message list may be a list of messages. There may be at least one message and one data provenance record. However the data provenance records may be created in parallel of an existing workflow. For example the data provenance records can be created at a higher security level than the messages. Attachments may be included in this list.

The message body may be the data being sent. It may be text images etc. Each message may have a unique message identification ID value. Attachments may be considered messages as well therefore they may also have a unique message ID.

Attackers may attempt to fabricate and modify messages. The data provenance verification may detect these attempts if proper information is available. However it is important that different messages do not have identical message ID values.

Note that one way to reduce the risk of collisions of message ID s is to force each entity to have a unique name and to base the message ID on the entity name combined with a value either based on date and time or based on a monotonically increasing integer. The disclosed embodiments may have the ability to archive and retrieve messages based on the message ID value so that someone may verify the data provenance with first hand investigation.

Note that the message may include a variant part and an invariant part note however that it may be possible that the entire message will be invariant . The variant part may contain information that changes such as for example the routing information as the message is forwarded.

The invariant part may always contain the same values. The data provenance information may include information from the invariant part of the message. For example hash algorithm identification information and a hash value may be data provenance information that are included in the invariant part of the message. Any system that retrieves the message and calculates a one way hash of that message will always get the same value.

When the invariant part is described it is important to note that it is the components that are invariant. The process may store the components in multiple places and the message body may not even be part of the data provenance record. But in validating the data provenance record these components must be re assembled into a known order and the hash can therefore be calculated 

Certain fields may be contained inside the invariant section of the message. These fields may be included when the hash of the message is calculated and therefore may be authenticated. Some of the fields may include 

Variant fields might change when routing is applied. That is the value of these fields may change as messages are routed through the workflow process. Examples might include 

The information assurance verification section of the message list may be used to verify the security attributes of the contents of the message confidentiality authenticity integrity non repudiation etc. and would be provided by the SOA security stack. For example if used for authentication the information assurance verification section may contain a signature of the contents of the message list. If used for encryption the information assurance verification section may include a reference to the encryption key.

Since data provenance records may reference one or more data provenance records the actual data structure for a message may be complex i.e. contain attachments . However consider a single data provenance record of a message with no attachments. This process corresponds to a sender transmitting a message to a receiver and so there are two different perspectives of any single message transmission outgoing and incoming.

The outgoing perspective may be the intended transport data provenance characteristics from the perspective of the sender. The incoming may be the observed transport properties from the receiver s perspective. The appropriate party may sign each perspective. The receiving perspective may include the outgoing intended perspective. Therefore the receiving party may sign the data provenance record from the sending party.

Note that there may be benefits of including the recipient s name in the sender s data provenance section as that would allow a recipient to check if the message was intended for him her and not that he she received it due to some error or deliberate intent. This is importance especially when the message recipient is determined as it is forwarded and the real recipient information is in variant part which can easily be modified without detection.

The sender s data provenance information may be used to verify the data provenance of a message. That is if one obtained a message referred to by the record combined with this record they may verify that the creator of the record saw the message or at least makes the claim that they saw the message whose hash is inside the data provenance record. That is one may decrypt the signature using the public key of the owner and the results should match the hash of the invariant part of the message.

Some of the information may be missing however. For instance suppose a sender does not provide any data provenance information to a receiver. The receiver may fill in empty values into the appropriate fields. This might happen in case an embedded system such as an Unmanned Aerial Vehicle UAV sends information from the sensor to an Automatic Target Recognition ATR system. The receiver may provider the sender s ID in the record leave the hash and signature blank fill in its section and sign the resulting information.

Note that the message ID of the attachment may not need to be specified in this data provenance record as it may be specified inside the message itself. Some implementations may wish to include references to messages inside the data provenance record.

Note also that the user and or the application may sign the data provenance record. The XML stack may perform the signature in the XML envelope for example. Therefore the certificates and the signing algorithm might differ. The signature for the data provenance might be performed by a multi purpose private key or a dedicated key may be used for example. However some systems may lack the ability to sign a document and as such the signature information may be blank. The receiver may provide modify the information if the data provenance record was not signed.

When receiving the message the receiver may add data provenance information for analysis. The data that may be signed by the receiver may include the sender s signed information for example. The data and function of the receiver s data provenance record may be similar to the sender s data provenance information. However the information may not include the message ID because that information is included in the sender s data provenance information. By having the receiver sign the sender s data provenance record the process may provide non repudiation in case the sender denies sending the message.

The hash value and algorithm may be included in case the sender and receiver use different hash algorithms or if the sender does not provide the information .

After a message is transmitted that is it goes from the sender to receiver a completed data provenance record may be created. To simplify the parsing of the data provenance records the sender may transmit a completed data provenance record but with the receiver s section blank. When the receiver accepts the message it may complete its section and sign the record. This process may waste bits but may simplify the implementation.

The data provenance information may be used towards each of the information assurance attributes. These information assurance attributes can be used to address various attacks as set forth below.

Authenticity Since each data provenance record may be signed by the sender anyone receiving the message may 

Integrity Since a hash function is a one way calculation based on the contents of the message it may be used to verify the integrity. If the authentication step is done the integrity may also be checked. Note that integrity may be checked even if the data provenance record is not signed. However the sender of the information may not be validated. One may just ensure the message arrived intact because the receiver and the sender validate the hash values. The final recipient may also verify if what was received is the same message as the one sent by original source by verifying that the hash values are identical.

Confidentiality It may be impossible to verify that a message is confidential as a true attack may be completely passive and cannot be measured. A secure channel may have a covert monitoring device. However one can verify that the sender intended to send a message using an encrypted channel or if due to some error a message was received that was not confidential.

Since there is a data provenance record for every hop each hop may be examined independently to ensure all information assurance attributes. However if integrity is needed but not authenticity only the first and last hop may be examined. If any of the hops were not encrypted then there may have been an unintentional exposure of confidential information.

In Case 1 the conclusion may be that the message was transmitted encrypted to the best knowledge of the participants. Either one may publish the information using another channel for example. However if one party published the information the other may not detect this by examining the data provenance records.

In Case 2 the receiver may receive a message that was encrypted but arrived unencrypted. This situation may indicate a bug in the implementation or if the message cannot be authenticated it may be an intrusion such as replay attack or a man in the middle attack for example.

In Case 3 the message was sent unencrypted but is received encrypted. This situation may indicate either be an implementation error the sender is mistaken or a man in the middle attack with the input unencrypted but with the output that is encrypted for example. One instance may involve a dumb device transmitting a message using a secure communication channel but the receiver is more sophisticated and knows the channel is secure for example. In this case the receiver may state the channel was secure because it has additional knowledge or more sophistication than the sender.

Both case 2 and 3 may also occur if either party intentionally lies about the characteristics. Someone might accuse the other party that they made a mistake and lied about the characteristics to provide evidence. Unfortunately there may be no way to determine which party is fabricating information without an observation from a third party log files etc. .

If no logs or third party auditing is done then that may potentially cause a problem. One could create a data provenance record on a data provenance record to make sure it has not been tampered with. However this process may only protect the data about the transmission and not the data that was transmitted.

If multi hops occur the entire chain from origination source to destination may have to be examined. If there are discrepancies they may have to be resolved. External knowledge may be necessary to properly evaluate the risk of eavesdropping for example.

Non Repudiation The data provenance records by their very nature may provide protection from non repudiation. Since the data provenance records may be signed it may be difficult for someone to retract this statement. For example someone could send a message and then claim that their key was compromised. One may have to examine the sequence of events to determine if the retraction occurred while the key was considered secure or not. One could also claim the message was not sent at the time that was logged. However the receiver places a timestamp on the message and then signs it so it becomes harder for the sender to lie about the time the message was sent.

The timestamp may also be useful in dealing with compromised and expired certificates. Someone can claim that their digital signature has been compromised. The timestamp may provide a timeline of any activity which may be used to verify any claims.

Availability There may be two different ways this architecture can be used to detect attacks on availability. The first approach may assume the data provenance analyst knows historical information about transmission times. The second approach may be used if the data provenance system provides historical information along with the record.

In the first approach the data provenance records if the timestamp is included may provide the information to determine the total transmission time for each hop. There are two transmission models that may be used reliable and unreliable. If a reliable transmission model is used e.g. TCP then the sender may include in the data provenance record at the time it was initiated. The receiver may record the time the message arrived. The difference between these two times may provide the total transmission time. If the typical time is 5 minutes for example and one of the data provenance records indicates the arrival time was 5 hours this might be an indication of some attack or some other system problem for example.

If an unreliable transmission model is used e.g. User Datagram Protocol UDP then there may need to be historical information to determine if there is a problem. For instance if the data provenance record indicates the source normally sends out a report every 15 minutes then if one examined the record for a time period and counted how many times reports arrived during that time this information might indicate an attack. In another instance if the previous report was 2 hours ago and there should have been 8 reports during this period but only one arrived then perhaps an attack occurred.

Another way to detect attacks may be to have a monotonically increasing value. That is if each report had a number such as 1 2 3 4 5 . . . and the current report has a value of 22 then if there was no record of report 21 arriving then this might indicate an attack.

A second mechanism may be used to detect availability but this mechanism may require knowledge of the sender and or the receiver. If we assume that the sender and or receiver have knowledge about the availability from their perspective they may include this information in the data provenance records. For example if a receiver is getting transmission errors the number of retries needed to receive a message may double. If the receiver included this information in the data provenance record the data provenance analyzer may use this information and past knowledge to consider whether there was an attack on availability.

Replay and Freshness The data provenance analysis may also detect replay attacks. There may be two mechanisms that can be used.

The first mechanism may be the analysis of the timestamp records. This process assumes knowledge of previous transmissions. Someone could capture and intercept a message and retransmit it later for example. If scenario occurred the data provenance record would have a timestamp that may be much earlier that expected. In this example the scenario may be very similar to an attack on availability as the message may be simply delayed. The difference may be a question of degree to distinguish between a delaying attack on availability and a replay attack if the receiver has no way to detect old messages. Also note that a variation may cause packets to arrive out of order. Unusual activity may also indicate some sort of attack.

If the receiver or data provenance analysis keeps track of messages and can detect messages that have arrived earlier then it may become easier to detect a true replay attack assuming the transmission mechanism does not create duplicate messages.

In each transmission of a message there may be multiple data provenance records added. In the case of a message being forwarded unchanged then each hop may provide a data provenance record for example. Forwarded messages may occur if the message is unchanged for example. In other words in the case of workflow routers or someone who uses a messaging service a data provenance record may be added even though the message is unchanged.

For instance if Alice sends a message M to Bob who forwards it to Carol who forwards it to Dave then there may be 3 data provenance records sent with message M to Dave 

Since the message is unchanged and potentially verifiable this route information may not need to be retained. Therefore Dave could accept the message from Carol but create a data provenance record with Alice in the sender s section. The other records may be deleted in the data provenance record. For instance if the route from Bob to Carol to Dave is though an encrypted tunnel in a MLS system the data provenance records containing information about Carol and perhaps Bob could be removed. Carol may create a single data provenance record showing that Alice sent the message to Dave directly. However the To information in the invariant portion of M may still remain and could identify Bob as the original recipient of M. If the invariant part of the message did not include the intended receiver i.e. the To field it may be impossible to detect misrouted messages.

Alternatively the entire data provenance record may be retained. This process may be important if the originating message was not signed and verified i.e. from an untrusted source . In this scenario the route from Alice to Bob Carol and Dave may be important because Alice s ID could not be verified.

If the message is going from a high security level to a lower level it may be necessary to remove all trace of the original source. This removal may be performed by creating a proxy author alternatively the security gateway might perform this creation for example.

The second type of data provenance record may be one where a new message is created with the previous message included or attached. If a device or person receives a message and then forwards the message so the message is changed it may create a new message and new message ID. This message may identify the previous message by message ID so any data provenance record associated with the included message may be found.

The disclosed embodiments may also support the analysis of the data provenance of complex messages. In other words when Alice sends a message to Bob who adds a note and sends it with the original message attached to Carol who forwards it to Dave then Dave s system may be capable of performing a data provenance analysis of the data so as to determine the trustworthiness of the entire workflow.

This issue can be complex because data provenance is not a static event. Months later one may wish to perform a data provenance analysis and part of this analysis may concern non repudiation. Certificates may have expired or be compromised between the original message and time that the analysis is performed. For instance if Alice s certificate is compromised then one may create false records of actions that Alice supposedly performed.

Another problem may be that messages may no longer exist or may not be accessible by someone verifying the data provenance history. As an example the record might have a different security classification. Therefore one may not be able to retrieve the message to verify the hash. Instead one may have to base a decision on the data provenance records of others.

A third issue may concern discrepancies between the sender s and receiver s security attributes. For example Alice may send an encrypted message to Bob that is encrypted for confidentiality. Bob may receive the message but claim that Alice purposely sent the message in clear text thus violating security policy. Even though Alice has signed the document that makes claims about the transmission security attributes Alice may insert incorrect information. Several solutions may be possible but essentially the messaging system such as XML may act as a third party to resolve the issue.

Another issue may be the danger of a data provenance record being modified or changed after the fact. If a certificate is compromised then someone who has the private key may fabricate data provenance records. This attack may allow an attacker to fabricate some of the fields such as the security attributes of a received message. However if the sender s attributes are signed this fabrication may be detected by the process of the disclosed embodiments. In some cases it might be necessary to create a data provenance record of receiving a data provenance record. However note that data provenance records of data provenance records adds complexity and it is not certain that this is needed in all cases.

Another implementation detail may be to ensure that when the data provenance analysis is done all or some of the information may be available. Since some implementations may not have a mechanism to retrieve old messages they also may not have a mechanism to retrieve old data provenance records. Therefore a complete set of records may be provided that enables each receiver to analyze data provenance.

Messages may also contain attachments. shows a message with an attachment M. In this example the attachment may have message ID values which are referenced in message . Note that if the number of messages is limited to one with zero or more attachments the first message may be the main message and the additional messages 2 . . . n may be attachments. There may also be a message type which is used to distinguish between messages and attachments.

Note that if a message is included then the old message may be made into an attachment and a new message is created which references it. Also note that since the message ID of the attachment is specified inside the message the attachment may not be included as part of the message. If the system has a message retrieval system the attachment may be obtained later for example.

For illustrative purposes the operation of the data provenance information analysis unit and the data provenance information analysis process will be described below in relation to the block diagrams shown in .

The data provenance information may include message identification information outgoing security attributes timestamp identification information of owner of signature references hash of an invariant part of the message hash algorithm used security label authenticity objective information based on processing device review authenticity subjective information based on human input confidentiality objective information confidentiality subjective information integrity objective information integrity subjective information availability objective information availability subjective information and sender s signature for example.

At step the data provenance information analysis unit may examine each data provenance record of the message and any attachments for discrepancies. In order to examine each data provenance record of the message and any attachments the data provenance information analysis unit may perform steps as set forth below.

At step the data provenance information analysis unit may verify signatures of senders of the message and any attachments. At step the data provenance information analysis unit may calculate a hash value for the message and any attachments.

At step the data provenance information analysis unit may verify that the hash value for the message and any attachments matches the values in the data provenance record for the message and any attachments. At step the data provenance information analysis unit may verify the timestamp of the message and any attachments.

At step the data provenance information analysis unit may verify information assurance attributes of the message and any attachments the information assurance attributes being at least one of authenticity confidentiality integrity non repudiation and availability.

At step the data provenance information analysis unit may identify any discrepancies in the examination of each data provenance record of the message and any attachments. At step the data provenance information analysis unit may calculate a degree of trust based on any discrepancies identified in the examination of each data provenance record of the message and any attachments. At step the data provenance information analysis unit may present the degree of trust and information assurance attributes information to the user on a display. The process may then go to step and end.

Note that a degree of trust of a complex message with multiple attachments and or references may be calculable at multiple places in the hierarchy of messages. For instance if message A refers to Message B and B uses information references in C D and E it may be possible to calculate the information assurance attributes for each record individually and also as a roll up of information. In this manner one can examine A and find out why A is low in confidentiality for example and to therefore examine B which allows the user to examine C D and E to find out which message was the cause of the low security indication. Also note that the formula used to calculate the degree of trust may be changed and the user can select from a list of formulas modify a formula and or insert a new formula used for the calculation.

The information assurance readings section may include icons links buttons or dials that may be activated to display individual detailed information assurance category information. The dial may include a present objective reading which may be color coded for example. The color coding may be green for good data readings yellow for cautionary data readings red for warning or bad data readings and another color such as blue for unknown data readings for example. The icons links buttons or dials may be activated by mouse clicks keyboard strokes stylus or by touching via a touch screen . As such in presenting the degree of trust and information assurance attributes information to the user on the display the data provenance information analysis unit may present icons links dials or buttons that when activated provide detailed information on at least one of the information assurance attributes.

The degree of trust of workflow information section may include degree of trust information at each stage of a workflow. The degree of trust information may be displayed as numerical data readings or percentages for example. From this section the process itself or an analyst may be able to identify troubled areas of a workflow. As such in presenting the degree of trust and information assurance attributes information to the user on the display the data provenance information analysis unit may present degree of trust information at each stage of a workflow. Another implementation may show degree of trust for a collection of messages with a summary value visible at the top level. If desired the user may change the scope of the view to see the relationship between the summary and the individual values corresponding to individual messages. The user may drill down into the message hierarchy to see the individual values that contribute to the summary score thus identifying a specific message or messages that contributed to the overall score. The user may also be capable of changing the formula used to calculate the score.

The detailed diagnosis and analysis report summary section may include a summary of all of the degree of trust and information assurance information. The section may also provide a total integrity measurement which may be used by the process or an analyst to accept or reject information from a source. As such in presenting the degree of trust and information assurance attributes information to the user on the display the data provenance information analysis unit may present a summary that includes the total integrity measurement for the workflow that takes in account degree of trust and information assurance attributes information.

Embodiments within the scope of the disclosed embodiments may also include computer readable media for carrying or having computer executable instructions or data structures stored thereon. Such computer readable media can be any available media that can be accessed by a general purpose or special purpose computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to carry or store desired program code means in the form of computer executable instructions or data structures. When information is transferred or provided over a network or another communications connection either hardwired wireless or combination thereof to a computer the computer properly views the connection as a computer readable medium. Thus any such connection is properly termed a computer readable medium. Combinations of the above should also be included within the scope of the computer readable media.

Computer executable instructions include for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Computer executable instructions also include program modules that are executed by computers in stand alone or network environments. Generally program modules include routines programs objects components and data structures etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.

Although the above description may contain specific details they should not be construed as limiting the claims in any way. Other configurations of the described embodiments of the disclosure are part of the scope of this disclosure. For example the principles of the disclosed embodiments may be applied to each individual user where each user may individually deploy such a system. This enables each user to utilize the benefits of the disclosed embodiments even if any one of the large number of possible applications do not need the functionality described herein. In other words there may be multiple instances of the disclosed embodiments each processing the content in various possible ways. It does not necessarily need to be one system used by all end users. Accordingly the appended claims and their legal equivalents should only define the disclosed embodiments rather than any specific examples given.

