---

title: Following content item updates via chat groups
abstract: A content item hosted by a content item source (such as a weblog post of a weblog) may receive updates (e.g., comments submitted by users), and may be discussed among users in a chat group of a chat service. The content item source and the chat service may coordinate to notify users of updates to the content item, and to share content regarding the content item. When a user requests to subscribe to updates of the content item, the content item source may invite the user to join a chat group of the chat service created for discussion of the content item. Additionally, updates to the content item received by the content item source may be automatically posted as messages in the chat group, and messages posted in the chat group regarding the content item may be automatically posted as updates to the content item at the content item source.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08782145&OS=08782145&RS=08782145
owner: Microsoft Corporation
number: 08782145
owner_city: Redmond
owner_country: US
publication_date: 20100128
---
In the field of computing many scenarios may involve a content item such as a news article a factual description such as an encyclopedia or a weblog post which may involve one or more user updates such as additions or changes of information or comments comprising a discussion of the content item. Such content items are often posted by a content item source such as a webserver hosting a website comprising a set of content items which may accept updates from users and associate them with the news article. In some scenarios the user updates may be posted in a series that is organized in various ways e.g. sequentially by priority or according to threads in other scenarios the user updates may comprise alterations of the body of the content item e.g. an editable wiki page regarding a particular topic. 

A user who is interested in the topic of a content item may wish to follow the updates posted to the content item. In many such scenarios the user may simply issue a series of requests to the content item source for the content item such as a web page of a website and may examine the content item for new material. In other scenarios the user may be able to query the content item source for a list of updates e.g. a real simple syndication RSS feed that presents a series of updates to the content item. In still other scenarios the user may be able to request the content item source to notify the user upon receiving updates to a particular content item such as a post in a web forum regarding a particular topic for which the web forum software may be configured to send an email message to the user upon receiving an additional post in the topic. However some content item sources may not be configured to permit users to subscribe to updates and users may have to visit and revisit many content item sources in order to remain informed about updates to particular content items of interest.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In many contemporary scenarios involving a user who wishes to follow a set of updates to a content item the user may have to query the content item source repeatedly for updates. This repeated querying may be inefficient in many respects. For example a first query may result in few or no updates since a previous query thereby resulting in an inefficiency in the user s time and the rendering resources of the content item source while many other updates regarding the same topic may be posted elsewhere but may be unread by a user who is not aware of this activity. Periodically polling a data feed such as an RSS feed of the content item source may be similarly inefficient if few or no updates are received. An email notification mechanism may alleviate this polling to a limited extent but email may be too slow or cumbersome to keep the user apprised of updates on a prompt basis. Therefore the efficiency of the user in monitoring a content item source for updates to a content item may yield comparatively few results while expending significant amounts of the user s time and the resources of the content item sources.

It may be appreciated that some of these inefficiencies derive from the unsuitability of many content item sources such as web pages and wiki pages to handle the scenario of a near realtime updating particularly with push type notifications of a content item particularly where the updates involve an ad hoc and informal conversation among a potentially large and possibly anonymized series of users. By contrast many chat services offer various group chat scenarios that may be readily suitable for notifying a user of a set of updates in near realtime and in particular for hosting an ad hoc group of users in a conversation about a topic. However in many scenarios the discussion arising in a chat service is ephemeral and unless captured and preserved by a user the discussion often disappears without having a lasting effect on the content item.

Techniques may be developed to merge the ad hoc conversation provoking environment of a chat group with the nontransient nature of a content item source such as a web page or wiki page. When a user expresses interest in a content item hosted by a content item source the user may be invited to join a chat group hosted by the chat service regarding the content item. If the user accepts this invitation a chat group interface may connect the user with other users who wish to follow the content item. Moreover the chat group and the content item source may coordinate such that updates to the content item including additions or alterations of the content item follow up information and comments submitted by various users regarding the content item may be automatically posted as messages in the chat group and messages posted to the chat group regarding the content item may be automatically posted by the content item source as updates to the content item. In this manner the user may follow updates about the content item through an interface that is well suited for near realtime updates and discussion while also preserving some of the automated non transience of a web page wiki page or web forum. In some embodiments the user may be able to follow updates to many content items through a single chat interface and or to maintain subscriptions for a non ephemeral period in order to receive notification of updates submitted over a long period of time. This coordination may also improve the efficient use of resources by the content item source e.g. by reducing redundant refreshing of the content item by visitors and or may promote additional use of the chat group.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Within the field of computing many scenarios involve a content item hosted by a content item source such as a news article hosted on a web page of a webserver an informational summary hosted on a wiki page of an information source a commentary posted on a weblog and a topical post on a web forum. In these scenarios the content item may often receive a series of updates including supplemental information provided by the author of the content item or other users alterations to the content item particularly for content items represented as a wiki based informational page and or comments by various users that comprise a conversation regarding the content item.

The content item source may present the content item and the updates to the user in various ways. As a first example the content item source may present the content item and may then present a list of updates to the content item which may be sorted in various ways e.g. sequentially by priority or in a threaded manner such as a nested hierarchy of nodes representing updates that contain as subnodes any responsive updates thereby presenting the discussion as a hierarchy of conversational threads. As a third example particularly with wiki informational pages the content item source may present to the user the latest version of the content item but the user may be able to review the series of updates and various previous versions of the content item.

However some inefficiencies may exist within this scenario. As a first exemplary inefficiency the user is often not informed when updates to the content item are received by the content item source and may therefore have difficulty following the content item . Instead the user may have to query the content item source for updates on an arbitrary basis e.g. based on the whims or availability of the user . For example at a second time point the user may query the content item source for updates to the content item only to receive a large number of updates that have been received since the first time point . The user may have desired to have been informed that many updates were arriving frequently but because the user was unaware of this occurrence the user may at the second time point have to catch up with the potentially large set of new updates . Conversely at a third time point the user may repeatedly query the content item source for updates but if no new updates have been received then each query yields little or no value to the user while also consuming the resources of the content item source in repeatedly rendering the content item and the set of updates in response to each query of the user . Meanwhile a second content item source may be receiving other updates relating to the same content item e.g. informational updates or comments posted on another website about the same topic yet the user may be unaware of the second content item source or the updates to the content item posted thereto and may therefore miss many updates that might be of significant interest to the user . Moreover the user may simply be unable to query a potentially large set of content item sources frequently for updates to a potentially large set of content items therefore the user may have to delay or forgo the querying of some content item sources and may miss potentially interesting updates posted thereto.

Some techniques may be available to mitigate these inefficiencies. As a first example a content item source such as a website or web forum may offer to notify the user when one or more new updates to the content item are received. However this notification is often presented as an email notification whereby the content item source sends an email message to an email account of the user to notify the user that new updates to a particular content item have been received. However email notifications may be inefficiently slow or cumbersome because email is not well designed for near realtime notifications. The user may also have to toggle between an email client where the notifications of updates are received and an interface to the content item source such as a website presented in a web browser thereby adding to the inefficiency of the user experience in following updates to the content item . Moreover it may be difficult for the user to contribute an update to the content item through the email client.

As a second example a content item source may offer a data feed such as a real simple syndication RSS feed that presents to the user as a queryable list of updates to a particular content item . The user may execute on the device an RSS reader that periodically polls the content item source for updates to a content item represented in the data feed and may notify the user upon detecting such updates . However this scenario also utilizes an inefficient polling mechanism e.g. if the user periodically queries a data feed that is not often updated such queries represent an inefficiency and a valueless consumption of computing resources of the content item source in repeatedly providing to the user an unchanging data feed. This inefficiency may be reduced by increasing the polling period but at the cost of an added delay to the user in receiving notification of an update . Again it may be difficult and or expensive for the device of the user to poll a potentially large set of data feeds offered by various content item sources or to follow the large set of updates received therefrom.

More generally webservers are often inefficient hosts of an interaction offering near realtime updates. This is because the hypertext transport protocol HTTP is oriented around a request response model where the client s request for a resource is quickly satisfied and the connection is closed to free server resources to handle other requests. This connection model is difficult to convert for use in a scenario featuring push type notification of updates to many users in near realtime. As a result webservers are generally not well suited for maintaining a comparatively large number of long lived connections such as connections to a potentially large number of clients in a chat group. While some techniques may ameliorate this difficulty e.g. push techniques embodied in the HTTP5 standard it may be appreciated that the field of webserver based chat is not presently well developed. For example it is unclear how a large chat session among a potentially large body of users may be hosted on a distributed set of interoperating webservers.

By contrast other types of servers based on other protocols may be very well suited for hosting chat sessions. For example the Internet Relay Chat IRC protocol was designed in 1988 primarily for configuring a server to maintain open connections and much development has occurred in configuring IRC servers to support thousands of concurrent users in a distributed multi server fashion. Many types of instant messaging IM protocols have also been developed to promote near realtime conversational communication among ad hoc groups of users. For scenarios involving a stream of near realtime updates of a content item which may include conversational dialogue among users regarding the content item a chat server implementing a chat service using one of these protocols may be more efficient than a webserver. Therefore the communication protocol of a chat server may be more efficient for connecting a large set of users in a persistent manner and distributing updates in near realtime.

However a group chat environment may not be fully sufficient for hosting the updates to a content item . As a first example a group chat environment may be somewhat less organized than similar information presented in other formats e.g. it may be easier to identify significant comments in a web forum or weblog comments section than to follow the observations presented in a transcript of an online chat. This difference might result from the different types of conversation prompted by each communication environment. For example a weblog comments section wiki page or web forum may encourage coherent and formal messages comprising discrete units wherein a first user may fully express his views in a single and potentially lengthy post and to which a second user may subsequently reply in full in a responsive perhaps also lengthy article. By contrast a chat group often prompts a colloquial free flowing conversation with many concurrent speakers where ideas are expressed conversationally in small segments of thoughts and statements and where users frequently interrupt each other or discuss a topic in a rapidly interleaved manner without a turn taking etiquette protocol. As a second example messages submitted in a chat group are often formulated intended and anticipated to be ephemeral and only part of a transient discussion while a submission of a wiki entry weblog comment or other update posted on a website often feels more significant and lasting as if submitted as part of a formal record. Accordingly a chat group may be a useful setting for developing and discussing ideas and may be technologically easier to organize and host particularly among a potentially large set of users in a comparatively long term discussion but may not be an efficient format for storing a significant set of updates such as may be presented on a website.

Due to these and other aspects these communication environments are often offered and maintained separately with little crossover except some semantic references from one environment to the other. In regard to a particular topic users may choose to visit a content item source such as a news page a web forum or a wiki page to view and contribute significant updates to a content item or may choose to join a chat group in order to follow or engage in an informal unstructured and transient conversation with other users regarding the content item . However the conversation in the chat group rarely affects the content item offered by the content item source and content items from the content item source are rarely specified in full particularly if lengthy in a chat group. In fact when users of a chat group wish to discuss a particular content item a user often posts to the chat group a hyperlink to the full content of the content item at the content item source which other users may visit to examine the full content item before returning to the chat group to discuss the content item in the conversational interleaved setting of the chat group. Thus users may switch between these two communication environments in order to satisfy different interests regarding the content item e.g. using the content item source to provide and receive information in the form of comparatively lengthy comments and sets of information and using the chat group to discuss the content item in short conversational messages. 

Techniques may be achieved for reducing this partition of content between the set of updates to the content item hosted by the content item source and the set of messages comprising a conversation about the content item posted in the chat group of the chat service . In particular the chat server may be configured to deliver updates to the content item to the chat service for posting as messages in the chat group and the chat group may deliver messages posted in the chat group to the content item source for inclusion in the set of updates to the content item . This interaction may present several advantages. As a first example users may follow the updates to a content item in a near realtime manner by joining the chat group and monitoring the updates posted therein. Because the infrastructure of the chat service may provide greater support for near realtime updates pushed to a potentially large and ad hoc set of users than the infrastructure of the content item host such as a webserver this technique for publishing the updates to the users may not only transmit the updates to the users in a quicker manner but may also economize the resources of the content item source e.g. by reducing polling of the content item by users eager to receive updates thereto. As a second example the updates to the content item may be automatically injected into the conversation occurring in the chat group so users may not have to keep checking the content item source outside of the interface of the chat group e.g. by toggling to a web browser or RSS reader to query the content item source for updates to the content item and then toggling back to the interface of the chat group to refer to publish excerpts of or discuss such updates with other chat participants . As a third example significant aspects of the conversation arising in the chat group may be automatically posted as updates to the content item at the content item source so that users may not have to prepare excerpts or transcripts of the conversation for republication as updates to the content item at the content item source. As a fourth example some embodiments may allow a user to receive updates to several content items through a single interface and or to participate in conversations about many content items in a single interface. Moreover some embodiments may allow the user to maintain subscriptions to one or more content items for a comparatively duration and to receive notifications of updates to the content item that are received over a comparatively long period of time thereby reducing the ephemeral nature of user interest in a content item which often arises from the difficulty of frequently checking the content item for updates over a long duration. These and other advantages may be achieved by the cooperative interaction and content sharing arrangement of the content item source and the chat service .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of informing users of updates to a content item hosted by a content item source such as the exemplary method of . In another such embodiment the processor executable instructions may be configured to implement a system for informing users of updates to a content item hosted by a content item source such as the exemplary method of . Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary method of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein these techniques may be utilized. As a first example many types content item sources may utilize these techniques in regard to hosting many types of content items such as a news website hosting a set of news articles a weblog hosting a set of weblog posts a web forum hosting a set of web forum topics or threads a media sharing site hosting a set of media objects such as images videos or music a social content feed hosting a set of content items and an application site hosting a set of applications. As a second example of this first aspect many types of chat services may utilize these techniques to host many types of discussions including a textual chat service such as an Internet Relay Chat IRC service an instant messaging network hosting a group instant messaging chat a voice chat service hosting a group voice over IP session and a videoconferencing service hosting a group videoconferencing chat.

As a third example of this first aspect a content item source may utilize many chat services and or may send updates to one or more content items to several chat groups within the same chat service or multiple chat services . This may be useful e.g. for permitting users to choose to follow one or more content items through a range of chat services possibly of different types e.g. a voice chat service and a textual chat service and or many chat groups hosted thereby possibly of different scopes e.g. a first chat group offering a more verbose set of updates comprising a comparatively detailed information set for a particular content item a second chat group offering a comparatively concise set of significant updates for the same content item and a third chat group offering updates for a range of content item from a particular content item source . 

As a fourth example of this first aspect a chat service may be configured to receive updates for content items hosted by one content item source . Alternatively a chat service may receive updates from several content item sources and such content item sources may offer similar types of content items or a diverse set of content items of many types. In one such embodiment a chat group hosted by a chat service may be configured to receive a customized set of updates for an entire set of content items hosted by a large set of content item source that may be of interest to a particular user or group of such users .

As a fifth example of this first aspect each user following the content item and or participating in the group chat may utilize many types of devices such as a workstation computer a notebook or netbook computer a palmtop device such as a personal data assistant PDA or a smartphone a game console and an internet appliance or thin client device. Such devices may also connect to the content item source and or the chat service using many types of software such as a specialized client configured for accessing a particular content item source or chat service a generalized client for accessing any content item source or chat service using a particular protocol e.g. an Internet Relay Chat IRC client or a messaging protocol client a web browser or a thin client configured to present applications executing on a remote server. Those of ordinary skill in the art may devise many scenarios wherein the techniques presented herein may be utilized.

A second aspect that may vary among embodiments of these techniques relates to the architectures of solutions wherein these techniques are implemented. presents one such architecture but other architectures may be devised that implement these techniques possibly with additional advantages as compared with other architectures. For example it may be advantageous to combine some or all portions of the update to message posting component and the message to update posting component e.g. to unify particular processing aspects for more symmetric handling of such items for shared configuration or easier software development. As a second example of this second aspect the components of the architecture may be distributed in many ways particularly with regard to the content item source and the chat service . As a first example the content item source may directly initiate the chat group send users to the chat service may directly send updates to content items to the chat service and may directly receive from the chat service any messages to be posted as updates to the content item . Alternatively the content item source may rely on the chat service or another service to handle some or all of these interactions. For example the content item source may receive objects or scripts such as JavaScript or Python offered by the chat service or a third party to be injected into web pages featuring a content item where such objects or scripts may perform some of the elements of these techniques. Similarly the chat service may directly form the chat group receive users and or updates to content items from the content item source and or send messages to the content item source be posted as updates to the content item or may rely on the content item source or a third party for some or all of these elements. For example instead of sending updates to the chat service as a special type of object that is to be broadcast into one or more chat groups an automated agent of the content item source may directly join the chat group as a participant and may inject messages into the chat group corresponding to the updates to the content item . Those of ordinary skill in the art may devise many architectures wherein the techniques discussed herein may be implemented.

A third aspect that may vary among embodiments of these techniques relates to the manner of inviting users to join the chat group for a particular content item . As a first example the content item source may simply notify the user of the existence of the chat group and may invite the user to join the chat group and possibly to form the chat group in the chat service for discussing the content item . As a second example the content item source may redirecting the user to a chat service interface of the chat service which may be configured to subscribe the user to the chat group for the content item . For example a content item source may include on a web page featuring a content item a user control e.g. the button illustrated in that redirects the web browser of the user to a web page of the chat service that subscribes the user to the chat group for the content item and possibly connects the user to the chat group e.g. by invoking a web browser based chat client that receives and renders messages of the chat group . As another example when the user requests to subscribe to the content item the device operated by the user may invoke a client side application such as a chat client application which may login to the chat service to subscribe to the chat group and or to connect to the chat group . Those of ordinary skill in the art may devise many ways of inviting users to join the chat groups of many chat services while implementing the techniques discussed herein.

A fourth aspect that may vary among embodiments of these techniques relates to the management of the state of the chat group . As a first example when a user requests to subscribe to a particular content item a chat group may already exist and the content item source may simply refer the user to the chat group . Alternatively the chat group might not already exist e.g. the chat group might be created on an ad hoc basis when users request to follow the content item and the content item source may receive a first such request from a first user before the chat group has been formed. For example an embodiment of these techniques may be configured to upon receiving a request from a user to subscribe to a content item query the chat service to determine whether a chat group regarding the content item exists. If not the embodiment may suggest to the user to form the chat group for the content item or may form a chat group in the chat service regarding the content item e.g. by sending to the chat service a request to create the chat group . As an alternative embodiment the chat service may handle the automated creation of the chat groups and may upon receiving a first request from a first user to join a chat group for the particular content item may create the chat group on behalf of the content item .

As a second example of this fourth aspect the content item source and the chat service may allow a chat group for a particular content item to continue to exist indefinitely or until terminated by a user . This configuration may be useful e.g. if a chat group is designated to feature updates and discussion for a set of content items of a particular type and or on a particular topic. Alternatively the content item source and or the chat service may actively participate in the termination of the chat groups for particular content items . In one such embodiment a chat group for a particular content item may be formed for a designated period of time e.g. for 24 hours from the posting of the content item on the content item source . In another such embodiment the content item source and or the chat service may actively monitor the interest of the users in discussing the content item and may upon identifying reduced interest among the users in the content item terminate the chat group in the chat service . For example the chat service may detect one or several factors as an indication of interest including a minimum number of users joined to the group chat or actively participating in the group chat a minimum number of messages that may be received in the chat group in a particular period and or a minimum number of updates to the content item by the content item source . Upon detecting such reduced interest the content item source and or the chat service may simply terminate the chat group or may temporarily or indefinitely suspend the group chat e.g. until and unless new updates to the content item are received from the content item host . The chat service may also simply disconnect users from the chat group for the content item and or may redirect users to a different chat group . Those of ordinary skill in the art may devise many ways of managing the state of a chat group for particular content item while implementing the techniques discussed herein.

A fifth aspect that may vary among embodiments of these techniques relates to the manner of detecting updates to a content item posted by the content item source and sending such updates as messages to be posted within a chat group of the chat service . As a first example when the content item source receives an update it may deliver the content item to the chat service which may receive the content item and post it as a message in the chat group . For example the chat service may provide an application programming interface API or web service that the content item source may invoke to transfer the content item .

As a second example of this fifth aspect the content item source may directly transmit updates as messages within the chat group . For example the content item source may join the chat group for the content item as an automated agent on par with regular users and upon receiving at least one update of the content item may post one or more messages to the chat group corresponding to the update . As a third variation the content item source may send updates to the chat service through various users such as by redirecting a user who submits an update to the content item source to deliver the update as a message within the chat group hosted by the chat service . For example a content item source comprising a weblog may include a Submit button tied to a textbox on a comments web page. The Submit button might be tied to a script such as JavaScript that not only instructs the web browser to send the contents of the textbox to the weblog for posting as a comment i.e. as an update to the content item but might also redirect the web browser of the user to send the message to the chat host e.g. as a request to a web service that accepts the comment and injects it into the chat group as one or more messages . This variation may be helpful e.g. for utilizing the computing resources and bandwidth of the users to send the update to the chat service instead of the resources of the content item source .

As a third example of this fifth aspect an external process may detect updates to the content item at the content item source . For example the chat service may periodically poll the content item source to detect updates to the content item and upon detecting at least one update may request the update to the content item for posting as a message within the chat group of the chat service . Alternatively a third party service may perform this polling and may deliver updates to the chat service . Such polling may be performed e.g. by identifying changes within a web page hosting the content item by monitoring metadata such as a version number or date of updating for the content item or the containing web page by monitoring a data feed such as a Real Simple Syndication RSS feed offered by the content item source and indicating the receipt of recent updates etc. This example may be helpful e.g. where the content item source cannot actively participate in the redelivery of updates to the chat service or where the content item source declines to participate in the cooperative arrangement with the chat service . Those of ordinary skill in the art may devise many ways of identifying or detecting updates to the content item at the content item source while implementing the techniques discussed herein.

A sixth aspect that may vary among embodiments of these techniques relates to the manner of posting an update to a content item as a message in the chat group . As a first example the update may be posted in the chat group as a message from the content item source or as a message from a user who may have submitted the update to the content item source e.g. as a message from the author of a comment posted on a weblog. As a second example of this sixth aspect the update may be posted as a message in full detail e.g. a complete rebroadcast of a comment to a weblog as an excerpt or summary of the update e.g. the first few words or sentences of a comparatively lengthy update may be posted as a message as a link to the full version of the update at the content item source or as simply a notification that an update has been received at the content item source .

A third example of this sixth aspect relates to the often different communication environments of a content item source where a comparatively large or long update may be hosted and a chat group which is often unsuitable for large or long messages e.g. where the communications protocol does not support comparatively long messages which may be difficult for users of the chat group to read in a chat client and or which may be simply considered against the etiquette of the chat group . When comparatively large or long update is received it may be segmented into one or more update segments each of which may be posted as a message in the chat group . The segmenting may be performed e.g. by dividing a message at arbitrary positions e.g. at one hundred characters or after three sentences or with more sophisticated techniques e.g. semantically identifying segments comprising discrete entities such as literary groupings or arguments in an essay. In this manner an automated conversion may be performed between the communications etiquette of the content item source and that of the chat group .

A fourth example of this sixth aspect relates to the manner of reducing the redundancy and inefficiency of updating the chat group with messages that have already been posted to the chat group . As one example an update to the content item at the content item source may relate information that has previously been posted as a message in the chat group and it may be advantageous to detect such redundancy and avoid the posting of such updates as messages in the chat group . As another example a message posted in the chat group might be posted as an update to the content item at the content item source and a less efficient embodiment of these techniques might also identify the update to the content item as having been recently received by the content item source and might repost it as a message in the chat group thereby creating redundancy and inefficiently utilizing the resources of the chat group and or the content item source . Therefore an embodiment of these techniques may be configured to before posting an update as a message in the chat group determine whether the update was received and has already been posted as a message in the chat group and may post the update as a message in the chat group upon verifying that the message has not previously been posted. For example the chat service may examine recent logs of messages posted in the chat group in order to compare the current message corresponding to an update to the content item has already been posted. In a similar manner the content item source may before sending an update to the chat group for posting verify that the update did not originate as a message received in the chat group . Those of ordinary skill in the art may devise many ways of detecting and updates of content items hosted by a content item source and of sending such updates to a chat service while implementing the techniques discussed herein.

A seventh aspect that may vary among embodiments of these techniques relates to the manner of sending messages in a chat group to a content item source to be posted as updates to the content item discussed in the chat group . As a first example messages may be transmitted from the chat group to the content item source in many ways. In one such embodiment the chat service may endeavor to identify messages received in the chat room that are relevant to the content item or an update thereto and may transmit such messages to the content item source . In one such embodiment the content item source may specify an updating interface configured to receive updates to the content item such as a Uniform Resource Identifier URI comprising a callback or web service which the chat service may invoke to send one or more messages the content item source as updates to a content item . Indeed in some such scenarios this embodiment may detect the URI from an aspect of the content item source that is not specifically configured to coordinate with the chat service e.g. a weblog site that couples a comment submission postback URI to a Submit button in a comments section of a web page. Conversely the content item source may identify and retrieve messages from the chat service e.g. the content item source may automatically monitor the messages exchanged in a chat group and may automatically select and copy messages to be posted as updates to a content item that are deemed to be relevant to the content item and or an update thereto. This configuration may be helpful e.g. to promote discussion of a content item on a chat service that is not specifically configured to coordinate with the content item source .

As a second example of this seventh aspect the chat service may send all messages received in the chat group to the content item source for posting as updates to the content item . Alternatively only some of the messages may be sent. For example in many chat group environments the conversation may diverge from a particular topic such as the content item possibly for extended portions of dialogue before returning to the content item or an update thereto. Therefore the chat service and or the content item source may endeavor to identify messages that are related to a content item or update . Such identification may use comparatively simple techniques e.g. messages including a keyword associated with the content item or that are within a certain period of time or number of messages since the posting of the content item or an update thereto in the chat group and or comparatively sophisticated techniques e.g. semantic and contextual parsing of messages to identify those that pertain to the content item and or an update . This analysis might also be performed e.g. by the chat service which may send to the content item source only the messages that are relevant to the content item and or an update and or by the content item source which may receive many messages from the chat service but may filter these messages for relevance to the content item and or an update . In still another variation a user may expressly identify one or more messages as relevant to the content item or an update e.g. by including a keyword in the message or by directing the message to a particular user of the chat service e.g. an automated agent of the content item source that is present within the chat group in order to exchange messages relating to the content item and updates thereto . 

As a third example of this seventh aspect messages may be translated into updates to the content item in many ways. In a simple variation each message may be posted as an update of the content item but this may lead to a large number of updates to the content item . In other variations two or more messages may together be regarded as comprising an update to the content item and may be sent together to the content item source as an update to the content item . For example a set of messages by a particular user of the chat group particularly a sequence of such messages by the same user or among two or more users comprising a dialogue may be excerpted and posted together as an update . These and other variations may be combined with the automated identification of messages that may be relevant to the content item or an update thereto e.g. a set of messages that are automatically identified as together having a high probability of relating to the content item or an update thereto such as based on the frequency of relevant keywords appearing in the set of messages may be considered and submitted to the content item source as an update to the content item .

As a fourth aspect of this seventh example redundancy and inefficiency may be reduced in the posting of updates to the content item by verifying that the messages posted in the chat group for the content item have not already been posted as updates to the content item . As one example a message posted in the chat group may relate information that has already been posted as an update to the content item at the content item source and it may be advantageous to detect such redundancy and avoid the posting of such messages as updates to the content item . As another example a message received from the chat service might have originated as an update to the content item at the content item source . A less efficient embodiment of these techniques might nevertheless repost this message as an update to the content item thereby creating redundancy and inefficiently utilizing the resources of the content item source . Therefore a more sophisticated embodiment of these techniques may be configured to before posting a message as an update to the content item at the content item source determine whether the update was already posted and may post the update as to the content item only after verifying that the update has not previously been posted. Those of ordinary skill in the art may devise many ways of receiving messages and posting such messages as updates to the content item at the content item source while implementing the techniques discussed herein.

An eighth aspect that may vary among embodiments of these techniques relates to additional features that may be included with various embodiments. As a first example an update may be detected as having a responsive relationship with a previous update e.g. a comment to an article in a weblog may have been posted with a responsive relationship with a previously posted comment. This responsive relationship may be indicated in corresponding messages injected into the chat group e.g. when a second update has a responsive relationship with a first update the responsive relationship of the second update with the first update may be indicated to the chat service and or within the message so posted. For example a textual indication of the responsive relationship may be included in a message e.g. In response to update number three . . . . Conversely a message posted in the chat group may have a responsive relationship with an earlier message posted in the chat group and this responsive relationship may be indicated in the corresponding update to the content item posted at the content item source .

As a second example of this eighth aspect the content item source may be configured to receive and display messages relating to a content item in a comparatively transient manner e.g. a temporary rebroadcasting of messages about the content item . Conversely the content item source may comprise a content item store that is configured to store at least one message posted as an update of the content item . This storing may be temporary or non temporary and may permit users to search or filter updates including updates that were originally posted as messages in the chat group in various ways. Those of ordinary skill in the art may devise many additional features that may be added to various embodiments of the techniques discussed herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

