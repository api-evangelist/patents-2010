---

title: Clock simulation device and methods thereof
abstract: A pulse width of a simulated external system clock is set by determining a least common multiple of the frequency of selected internal clock signals relative to the frequency of the external system clock. The pulse width can be further adjusted based on the frequency of simulated external clocks. By setting the pulse width of the simulated external system clock based on the least common multiple value, the time required to complete the simulation can be reduced while ensuring proper operation of the simulated clock signals during the simulation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08645117&OS=08645117&RS=08645117
owner: Freescale Semiconductor, Inc.
number: 08645117
owner_city: Austin
owner_country: US
publication_date: 20100527
---
The present disclosure relates generally to data processing devices and more particularly design tools for data processing devices.

Because of their complexity data processing devices such as systems on a chip SOCs are typically designed using automated design tools such as a computer aided design CAD system. The CAD system can include automated processes to implement verify functionality and improve performance and manufacturability of the data processing device design. To verify functionality the CAD system simulates input stimuli such as clock signals for a data processing device and simulates the behavior of the device based on the input stimuli. However verification of functionality can demand an undesirable amount of time increasing the cost and difficulty of designing the data processing device.

To illustrate a data processing device can include a collection of disparate logic modules. Each logic module may be associated with a dedicated clock signal often referred to as a clock domain . Furthermore a logic module may be capable of operating at any one of a plurality of clock frequencies. For example the data processing device may have four processor cores wherein each processor core is associated with a different clock domain. The data processing device can further include a memory controller associated with another clock domain a high speed serial interface associated with still another clock domain and additional modules that are each associated with a different clock domain. During simulation a clock generator provides each simulated external clock signal to the device design. If the simulated external clock signals are not generated correctly simulated internal phase locked loop PLL devices may not be able to lock to an incoming clock signal and logic associated with clock signals provided by the PLL device can fail to simulate operation of the device correctly. Accordingly it is useful to set the pulse width of the simulated external clock signals so that the simulated PLL devices can operate correctly while reducing the size of the pulse width in order to reduce simulation time.

In one embodiment the application modules and can include hardware modules software modules or a combination thereof. Each application module can be executed as described herein to perform an associated design function. The design system can include additional application modules not shown at that are associated with other aspects of the design process.

The clock generation module is operable to generate simulated clock signals to be used during simulation of a data processing device based on the design file . The clock generation module can evaluate multiple criteria to determine and configure a pulse width associated with one or more clock signals to be provided to a device design during a simulation procedure. For example the clock generation module can evaluate the frequency of external clock signals provided to the device design information describing how the external clock signals are manipulated within the device design and other configuration information. The clock generation module can determine a minimum pulse width of each external clock signal based on this set of information.

The logic simulator is a device operable to simulate operation of the device based on the design file to verify logical functionality of the device design. Bus functional model can include a representation of other logic modules to facilitate simulation of the device design. For example the bus functional model can include a representation of a memory device or a peripheral chip set that together with the data processing device represented by the device design implements an information handling system. During a simulation of the device design the bus functional model can interact with the simulated device design to model the behavior of the information handling system and determine the device s predicted behavior in the system.

The logic simulator can include a commercially available logic simulator such as a Verilog simulator a proprietary logic simulator or a combination thereof to simulate the operation of the configuration of logic gates and other modules reflected by the design file . Further the logic simulator can use the simulated clock signals provided by the clock generation module during the simulation process to simulate device behavior. For example the logic simulator can employ the simulated clock signals to control the timing of events at the modules reflected by the design file in order to simulate the behavior of a data processing device that is based on the device design. This can be better understood with reference to .

The processor core includes a phase locked loop PLL the processor core includes a PLL the clock module includes a PLL the memory control module includes a PLL and the communications module includes a PLL . Each of the modules and can include additional PLL devices and other modules that are not illustrated.

The data processing device design includes a clock system having terminals for receiving external clock signals labeled SysClk ExtClk and ExtClk. As used herein an external clock signal with respect to design file refers to a signal that simulates a signal to be provided to the data processing device from a source external to the device. The PLL at the processor core receives the external system clock signal SysClk and provides a local clock signal labeled CLK for use by the processor core . A local clock signal is a signal generated internally by the data processing device for use by one or more modules of the device. The PLL at the processor core receives the clock signal SysClk and provides a local clock signal labeled CLK. The PLL at the clock module receives the clock signal SysClk and provides a platform clock signal labeled PltFrmClk. The PLL at the memory control module receives the platform clock signal PltFrmClk and provides a local clock signal labeled CLK. The PLL at the communications module receives the platform clock signal PltFrmClk and provides a local clock signal labeled CLK.

Clock signals CLK CLK CLK and CLK are referred to as domain clock signals. Each domain clock signal controls the synchronous operation of logic modules included in the corresponding clock domain. For example clock signal CLK is the domain clock signal associated with the processor core . In an embodiment the clock domain associated with the clock signal CLK operates at a frequency of 1.6 GHz clock signal CLK has a frequency of 2.4 GHz clock signal CLK has a frequency of 1.5 GHz and clock signal CLK has a frequency of 3.2 GHz.

A domain clock signal can be generated from another clock signal herein referred to as an intermediate clock signal having a frequency that is a multiple of the frequency of the domain clock signal. Generating a domain clock signal using an intermediate clock signal can improve the duty cycle and waveform uniformity of the generated domain clock. For the purpose of the present example it is assumed that the PLL includes an intermediate clock signal having a frequency that is twice that of clock signal CLK 3.2 GHz . The PLL also includes a corresponding intermediate clock signal having a frequency twice that of their respective clock domain signals. The PLL and the PLL each include an intermediate clock signal having a frequency that is four times that of clock signal CLK and clock signal CLK respectively.

The PLL devices and can each be configured to process a clock signal received at the PLL s input terminal and to provide a related clock signal at an output terminal at a designated frequency that may differ from the frequency of the input clock signal by a multiplicative factor. Furthermore a PLL may be operable to provide any one of a plurality of frequency multiples based on how the PLL is configured. For example the frequency of clock signal SysClk may be 100 MHz and the PLL can be configured to generate clock signal CLK having a frequency of 800 MHz 1000 MHz 1600 MHz or another frequency. The corresponding clock multiple provided by a PLL such as PLL devices and can be individually configured during operation of the data processing device or the PLL device can be configured during an initialization procedure such as in response to an assertion of a reset signal not shown at .

Each of the external clock signals SysClk ExtClk and ExtClk as well as the platform clock signal PltFrmClk can also be configured to operate at one of multiple frequencies. Accordingly the data processing device design provides for a large number of possible clock signal configurations depending on how each PLL is configured and depending on the frequency of the external clock signals.

During simulation of a data processing device based on the device design the logic simulator assesses the state of the simulation and enforces changes in the simulation state at selected intervals. The logic simulator determines the timing of the selected intervals based on an internal clock reference referred to herein as a simulation clock. Accordingly the timing of the clock signals received and generated by the PLLs and is based on the relationship of these clock signals to the simulation clock. Thus each of the clock signals can be expressed as a function of the simulation clock. For example each interval at which the logic simulator evaluates the simulation state or enforces changes in the simulation state can be referred to as a simulation clock time unit. Each of the clock signals received and generated by the PLLs and can be expressed according to the number of simulation clock time units associated with a pulse of the clock signal. Thus for example the pulse width of the clock signal SysClk can be 1000 simulation clock time units while the clock signal generated by PLL can be 2000 simulation clock time units. The design file can store the number of simulation time units associated with each clock signal so that the logic simulator can determine the relative timing of events dependent on each clock signal during simulation. The clock generation module can determine the pulse width expressed in simulation time units for each clock signal based on configuration information stored at the design file . This can be better understood with reference to .

The ABS is configured to receive configuration information from the design file from a user via a graphical user interface GUI or a combination thereof. Based on the configuration information the ABS identifies each clock signal of the device design and determines the operating frequency of each clock signal relative to the frequency of a system clock signal. In particular the ABS is configured to evaluate each clock domain within the device design to determine a relationship between the frequencies of all domain and intermediate clock signals within the design. In an embodiment the frequency of each internal clock signal is expressed as a ratio to the frequency of an external system clock signal such as system clock signal SysClk at the data processing device of . The ABS can process information including a frequency multiplication factor associated with each PLL at the device design and information describing how the clock network is interconnected and configured. This can be better understood referring to the example of .

To illustrate the information received at the ABS can include frequency multiplication factors provided by each of the PLL the PLL the PLL the PLL and the PLL . The ABS also can receive clock network connectivity information from the design file . For example the ABS can determine that clock signal CLK provided by the PLL is generated based on the platform clock signal PltFrmClk referred to herein as synchronous operation while the clock signal CLK provided by the PLL is generated based on the system clock signal SysClk referred to herein as asynchronous operation . The ABS can determine a frequency relationship between each clock signal and the system clock signal SysClk and provides this information to the SMC . Table 1 below illustrates an example configuration of the data processing device design and information determined by the ABS .

The PLL provides the clock signal CLK which is the domain clock associated with the processor core . For the present example clock signal CLK is assumed to have a frequency of 1.6 GHz. That is it is assumed that the PLL is configured to multiply the frequency of system clock signal SysClk 100 MHz by a factor of 16. The PLL includes an intermediate clock having a frequency that is twice that of clock signal CLK or 3.2 GHz. Therefore the frequency ratio of the highest frequency clock at the processor core relative to system clock signal SysClk is 32. The PLL provides the clock signal CLK which is the domain clock associated with the processor core . For the present example clock signal CLK is assumed to have a frequency of 2.4 GHz. In other words it is assumed that the PLL is configured to multiply the frequency of system clock signal SysClk by a factor of 24. The PLL includes an intermediate clock having a frequency that is twice that of clock signal CLK or 4.8 GHz. Therefore the frequency ratio of the highest frequency clock at the processor core relative to system clock signal SysClk is 48.

The platform clock signal PltFrmClk is provided by the PLL which multiplies the frequency of the system clock signal SysClk by a factor of two. The platform clock signal PltFrmClk is used to generate clock signals CLK and CLK. Therefore clock signals CLK and CLK are referred to herein as synchronous clock signals. The PLL provides the clock signal CLK which is the domain clock associated with the memory control module . For the present example clock signal CLK is assumed to have a frequency of 1.5 GHz. For example the PLL can be configured to multiply the frequency of the platform clock signal PltFrmClk by a factor of 7.5. The PLL includes an intermediate clock having a frequency that is four times that of clock signal CLK or 6.0 GHz. Therefore the frequency ratio of the highest frequency clock at the memory control module relative to system clock signal SysClk is 60. The PLL provides the clock signal CLK which is the domain clock associated with the communications module . For the present example clock signal CLK is assumed to have a frequency of 3.2 GHz. In other words the PLL is configured to multiply the frequency of the platform clock signal PltFrmClk by a factor of 16. The PLL includes an intermediate clock having a frequency that is four times that of clock signal CLK or 6.4 GHz. Therefore the frequency ratio of the highest frequency clock at the communications module relative to system clock signal SysClk is 64.

The set of frequency ratios 32 48 2 60 and 64 is provided to the SMC . In an embodiment the ABS can exclude one or more logic modules from consideration by the SMC . For example if the configuration information indicates that processor core is not active during a particular simulation the frequency ratio of clock signal CLK is not provided to the SMC . In another embodiment the ABS can supply clock signal information to the ICG identifying nodes within a device design that are to be directly driven with generated clock signals. For example if the design of a portion of the device design that generates or otherwise propagates an internal clock signal for use by another logic module has not been completed the clock signal that ultimately will be provided by the missing block can be synthesized by the ICG using information provided by the ABS and the PAC .

The SMC performs a mathematical computation based on the frequency ratios received from the ABS to calculate a least common multiple of the frequency ratios. A least common multiple of a set of values is the smallest whole number that is divisible by each of the values without a remainder. For example based on the previous example the least common multiple LCM D of the values 32 48 2 60 and 64 is equal to 960. The calculated least common multiple LCM D determined based on the domain clocks is provided to the PAC for used in subsequent calculations.

The PAC calculates the pulse width of each external clock received by the device design during simulation based on the least common multiple LCM D provided by the SMC and based on a relationship between the frequency of the system clock SysClk and the frequency of other external clocks ExtClk n as indicated by the configuration information. In an embodiment the PAC calculates the pulse width by calculating a least common multiple LCM of the frequency of each of the external clock signals LCM least common multiple ofSysClk ExtClk The PAC then determines a relationship between the LCM and the frequency of the system clock SysClk and the frequency of each additional external reference clock signals ExtClk n as follows CPWS LCM SysClk frequency CPWE LCM ExtClk frequency The PAC further calculates a scale up factor SUF as follows SUF least common multiple of LCM D and CPWS CPWS The PAC then determines a pulse width PW for the system clock signal SysClk and each external clock signal ExtClk n according to the following PW SysClk CPWS SUF PW ExtClk CPWE SUF

Table 2 below illustrates the preceding calculations with reference to the device design of and the previous example illustrated at Table 1.

The ERCG is configured to translate the pulse width information received from the PAC into a format compliant with the logic simulator . In particular the ERCG translates the pulse width information into the corresponding number of simulation clock time units and formats the translated information into a syntax that can be interpreted by the logic simulator . For example the ERCG can express a clock signal representing system clock SysClk according to Verilog syntax as follows Initial SysClk 0 Always 4800 SysClk SysClk which will instruct the logic simulator to produce a continuous pulse stream wherein the system clock signal SysClk is set to a logic low level for 4800 simulation clock time units transitioning to a logic high level where it remains for another 4800 time units before transitioning back to a logic low level. Thus clock signal SysClk transitions every 4800 simulation clock time units and has a total period of 9600 simulation clock time units.

The pulse widths of other clock signals can be determined by the logic simulator based on the frequency relationship between the corresponding clock signal and SysClk. For example the logic simulator will determine that because clock signal PltFrmClk is twice the frequency of SysClk the clock signal has a pulse width that is half of the pulse width of SysClk. Because the pulse width of SysClk is based on the calculated least common multiple the pulse width of each of the clock signals to be simulated can be expressed as an integer value of simulation clock time units. Because the logic simulator evaluates the state of the simulation for each simulation clock time unit the expression of the pulse width of each clock signal as an integer value allows the simulator to properly simulate the behavior of the logic modules that are synchronized by the clock signals. To illustrate if a pulse width of a clock signal were expressed by a non integer e.g. fractional value the signal would transition between simulation clock time units. Accordingly behavior resulting from the signal transition would not be properly simulated by the logic simulator .

Returning to the operation of the ICG is similar to that of the ERCG except the ICG provides clock signals to logic nodes internal to the device design that is being simulated rather than to external terminals of the device design. For example if the design of clock module of is not complete simulation of the data processing device design can be supported by synthesizing platform clock signal PltFrmClk using information provided by the ABS and by the PAC . The synthesized clock signal can be injected at the node corresponding to the platform clock signal PltFrmClk which can be received at the memory control module and at the communications module .

If the present clock domain is synchronous the flow proceeds to node where a ratio between a platform clock signal and the system clock signal is determined. For example in the example described above the PLL of the clock module at the data processing device design is configured to multiply the frequency of the system clock signal SysClk by a factor of two. The flow proceeds to node where a domain frequency ratio is determined for the present domain clock signal based on the platform clock ratio and based on a PLL multiplier ratio associated with the present domain clock. For example the domain clock signal CLK of the memory control module has a frequency that is fifteen times that of system clock signal SysClk a factor of two provided by the PLL and a factor of 7.5 provided by the PLL . Returning to decision block if the domain is asynchronous the flow proceeds to node where a domain frequency ratio is determined for the present domain clock based only on a PLL multiplier ratio associated with the present domain clock. For example domain clock signal CLK of the processor core has a frequency that is sixteen times that of the system clock SysClk based on the multiplier ratio provided by the PLL .

The flow proceeds from nodes and to decision node where it is determined whether the present domain clock is to be injected at an internal node of the device design being simulated. If the present domain clock signal is to be injected the flow proceeds to node where the frequency ratio information is provided to an internal clock generator. For example the ICG is operable to generate an internal clock signal and inject the signal at a designated node within the device design. If the present domain clock signal is not to be injected the flow proceeds to decision node where it is determined whether the clock domain includes an intermediate clock signal that is operating at a frequency that is greater than that of the primary domain clock signal. For example an intermediate clock signal at the PLL has a frequency that is twice that of the domain clock signal CLK. If a faster intermediate clock is identified the flow proceeds to node where the additional multiplicative factor is included and the frequency ratio associated with the present clock domain is based on the higher frequency of the intermediate clock signal. The flow then proceeds to node .

Returning to decision block if there are no higher frequency intermediate clocks included within the present clock domain the frequency ratio associated with the present clock domain is the ratio determined at node or at node and the flow proceeds to node . At node the frequency ratio associated with the present clock domain is provided to the SMC to be used to calculate a least common multiple LCM D. The flow proceeds to decision node where it is determined whether another clock domain remains to be processed. If another clock domain has not yet been considered the flow returns to node otherwise method terminates. Accordingly a frequency ratio corresponding to each clock domain is reported to the SMC which calculates a least common multiple LCM D based on the set of clock frequency ratios.

If there exists one or more external clock signals in addition to the system clock signal the flow continues at node where a least common multiple LCM is calculated based on the set of external clock frequencies. For example at column 3 of Table 2 the value of LCM is determined to be 2500 based on the set of three external clock frequencies 100 125 and 156.25 MHz . The flow proceeds to node where a current pulse width corresponding to the system clock signal CPWS is calculated by dividing the value LCM by the frequency of the system clock signal. For example at column 4 of Table 2 the current pulse width of the system clock signal SYSCLK is 25 2500 100 . The flow proceeds to node where a current pulse width correspond to each of all additional external clock signals is calculated in the same manner as described with reference to node . For example the current pulse width of the external clock signal ExtClk is 20 2500 125 and the current pulse width of the external clock signal ExtClk is 16 2500 156.25 .

The flow proceeds to node where a scale up factor SUF is determined by calculating a least common multiple of the value LCM D and the value CPWS and dividing the result by CPWS. Referring again to Table 2 the least common multiple of LCM D and CPWS 960 and 25 respectively is equal to 4800 which when divided by CPWS provides a scale up factor SUF 192. The flow proceeds to node where a pulse width of the system clock signal can be determined by multiplying the value CPWS by the value SUF. As seen at the final column of Table 2 the pulse width for signal SysClk is determined to be 4800 25 192 . The flow proceeds to node where a similar calculation can be performed for each of the remaining external clock signals. For example the pulse width of the external clock signal ExtClk is 3840 20 192 and the pulse width of the external clock signal ExtClk is 3072 16 192 . The calculated set of pulse width values can be provided to the ERCG which can generate the appropriate clock signals for simulation by the logic simulator .

Input output I O adapter is further connected to and controls disk drives printer removable storage devices as well as other standard and proprietary I O devices. User interface adapter can be considered a specialized I O adapter. The Adapter is connected to a mouse and a keyboard . In addition user interface adapter may be connected to other devices capable of providing various types of user control such as touch screen devices. The communications interface adapter is connected to a bridge such as is associated with a local or a wide area network and a modem . System bus can be connected to various communication devices to access external information. Multimedia controller will generally include a video graphics controller capable of displaying images upon the monitor as well as providing audio to external components not illustrated .

Note that not all of the activities or elements described above in the general description are required that a portion of a specific activity or device may not be required and that one or more further activities may be performed or elements included in addition to those described. Still further the order in which activities are listed are not necessarily the order in which they are performed.

Also the concepts have been described with reference to specific embodiments. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present disclosure as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of the present disclosure.

Benefits other advantages and solutions to problems have been described above with regard to specific embodiments. However the benefits advantages solutions to problems and any feature s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential feature of any or all the claims.

