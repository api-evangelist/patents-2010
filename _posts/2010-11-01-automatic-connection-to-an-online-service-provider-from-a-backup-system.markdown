---

title: Automatic connection to an online service provider from a backup system
abstract: A software application is provided for a user to select a backed up data file and specify a task to be performed by an online service provider on the selected file. The application automatically connects to the online service provider and uploads the selected file for the online service provider to perform the task. Tasks that can be performed include printing, sharing, viewing, playing and archiving the selected file. Task preferences, user settings and user information can also be specified by the user and uploaded to the online service provider. Automatic connection to the online service provider can be via default setting, selected file type, or specified task. Alternatively, the user can designate which service provider is to perform the task. Payment for the task can be accomplished via bundled credits or by other payment mechanisms.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08050905&OS=08050905&RS=08050905
owner: Storage Appliance Corporation
number: 08050905
owner_city: Richmond Hill
owner_country: CA
publication_date: 20101101
---
This application is a continuation application of and claims priority to U.S. Non Provisional patent application Ser. No. 11 801 240 filed on May 8 2007 now issued as U.S. Pat. No. 7 844 445 which is a Continuation in Part of U.S. Non Provisional patent application Ser. No. 11 715 008 filed on Mar. 6 2007 and entitled Systems and Methods for Selecting and Printing Data Files from a Backup System non Provisional patent application Ser. No. 11 715 008 is a Continuation in Part of U.S. Non Provisional patent application Ser. No. 11 506 386 filed on Aug. 18 2006 now U.S. Pat. No. 7 818 160 and entitled Data Backup Devices and Methods for Backing up Data which is a divisional application of U.S. Non Provisional patent application Ser. No. 11 492 380 filed on Jul. 24 2006 now U.S. Pat. No. 7 813 913 and entitled Emulation Component for Data Backup Applications which claims the benefit of U.S. Provisional Patent Application No. 60 725 225 filed on Oct. 12 2005 and entitled Method Apparatus and a System for Removable Media Device Emulation on an External Storage Device via an Emulation Component for the Purpose of an Electronic Data Backup Appliance U.S. Provisional Patent Application No. 60 814 687 filed on Jun. 19 2006 and entitled Portable Electronic Data Backup Appliance Based on Integrated Circuit IC Memory and U.S. Provisional Patent Application No. 60 817 540 filed on Jun. 30 2006 an entitled Portable Data Backup Appliance for Utilizing a Recordable Media Burner Device non Provisional patent application Ser. No. 11 715 008 is also a Continuation in Part of U.S. Non Provisional patent application Ser. No. 11 546 176 filed on Oct. 10 2006 and entitled Optical Disc Initiated Data Backup which claims the benefit of U.S. Provisional Patent Application No. 60 834 247 filed on Jul. 31 2006 and entitled Portable Electronic Data Backup Appliance Utilizing a Hybrid Optical Disc and U.S. Provisional Patent Application No. 60 836 228 filed on Aug. 9 2006 and also entitled Portable Electronic Data Backup Appliance Utilizing a Hybrid Optical Disc non Provisional patent application Ser. No. 11 715 008 is also a Continuation in Part of U.S. Non Provisional patent application Ser. No. 11 601 040 filed on Nov. 16 2006 now U.S. Pat. No. 7 702 830 and entitled Methods for Selectively Copying Data Files to Networked Storage and Devices for Initiating the Same which is also a Continuation in Part of U.S. Non Provisional patent application Ser. No. 11 506 386 and a Continuation in Part of U.S. Non Provisional patent application Ser. No. 11 546 176 non Provisional patent application Ser. No. 11 715 008 additionally claims the benefit of U.S. Provisional Patent Application No. 60 779 194 filed on Mar. 6 2006 and entitled Method a Process and a System for Selecting and Printing Digital Files from a Backup Appliance this application additionally claims the benefit of U.S. Provisional Patent Application No. 60 799 395 filed on May 11 2006 and entitled Method a Process and a System for Automatically Connecting to Online Services from a Backup Appliance. Each of the aforementioned applications is incorporated herein by reference.

The present invention relates generally to the field of digital data management and more particularly to systems for data backup applications.

Digital content represented by digital data files of various file types is rapidly replacing other forms of content. Documents presentations photos movies and music for example are increasingly produced and stored digitally. A problem for many individuals and organizations is that digital content typically stored on a computer hard drive can be poorly organized and needs to be archived to be protected against accidental loss. For example digital photo files on a personal computer PC are likely to be found in numerous folders photos transferred from a digital camera are stored in one set of folders photos received as e mail attachments are stored in other folders and photos downloaded from websites are stored in still other folders.

One approach to archiving digital content is to periodically backup all of the data files on the computer preserving the existing organizational structure. While this technique is effective to preserve digital content against accidental loss the technique has several shortcomings. For one the resulting copy is no better organized than the original so misplaced or disorganized content remains misplaced or disorganized. Also backing up all data files requires substantial memory capacity to copy numerous files that are otherwise already preserved elsewhere. Application specific files for example originally loaded onto the computer from a compact disc CD are already archived on the CD and therefore do not need to be backed up.

The necessary storage capacity for a complete backup can be obtained with writable data storage media such as hard disc drives HDDs however these require device installation and software set up when first connected to a system. In order to complete these steps a user may have to provide information about the existing system which the user may not readily know. Also the user may have to make decisions regarding the configuration of the device and the backup software. The number of steps involved with installation and set up as well as the complexity of some of the steps dissuades many users from bothering with backup applications. The expense of a writable data storage media with enough capacity to perform a complete backup can also dissuade users from performing complete backups. Furthermore some users having bought and installed the necessary storage capacity are dissuaded from performing frequent backups due to the length of time the system is tied up while performing a complete backup.

Alternately a user can manually select a set of files from a directory and copy the selected files to a storage device. While this alternative may allow usage of a smaller memory device that does not require installation and set up steps manually selecting files is time consuming. Also manually selecting files creates the possibility of an accidental omission of some files.

Another issue raised by digital content and especially digital photos relates to printing. For example when a person takes a digital camera memory medium to a photo printing kiosk the kiosk has to read all of the photos from the memory medium before displaying the photos so that the person can select just some of the displayed photos for printing. Where the number of photos on the memory medium is large reading all of the photos can be very time consuming as well as inefficient when only a small number of photos are to be printed. As an alternative printing from an online photo printing service is also becoming popular. However if the user wishes to print photos stored in different directories on a PC or even in e mail attachments selecting the photos and uploading the photos to the online photo printing service can be cumbersome. Still another frequently encountered problem is seeking to make a print of a photo but not being able to recall where amongst the various folders and e mails on a PC the photo is stored. Without knowing the photo s file name search functions can be of little help and may be of no help where the photo is stored as an e mail attachment.

An issue with online photo printing and other online services is that identifying and or locating an online service provider connecting to the online service provider uploading data to the online service provider and specifying tasks to be performed by the online service provider can require a large number of user steps. For example connecting to the online service provider typically requires establishing an Internet connection opening a browser identifying and or locating an online service provider providing a URL and then entering a user name and password. Where the user does not know the URL of the online service provider or does not even know which online service provider to use the user may have to perform a search with a search engine. Where the user has not used the online service provider previously the user may additionally have to register with the online service provider which entails still further steps. After getting past the online service provider s log in page the user still has to navigate the website select images or other data to upload wait while the files are uploaded and indicate the desired tasks to be performed. Additionally the user may have to provide some form of payment and may have to fill out forms with shipping and billing addresses. What is needed therefore is the ability to simplify the process of connecting with and communicating tasks to as well as potentially having to locate and identify an online service provider.

An exemplary data backup system comprises a communication interface a first storage device and an emulation component. The first storage device includes a writable data storage medium comprising first and second logical storage areas and in some embodiments the first logical storage area stores a data backup application. The emulation component is in communication between the first storage device and the communication interface. The emulation component comprises logic configured to represent the first logical storage area as an auto launch device and additional logic configured to represent the second logical storage area as a second storage device including a writable data storage medium. It will be appreciated that the logic of the emulation component can be implemented through software hardware firmware or a combination thereof.

The emulation component of the exemplary data backup system can also comprise in some embodiments logic configured to receive auto launch device commands from the communication interface translate the auto launch device commands to first storage device commands and send the first storage device commands to the first logical storage area and additional logic configured to receive first storage device responses from the first logical storage area translate the first storage device responses into auto launch device responses and send the auto launch device responses to the communication interface. The emulation component can further comprise logic configured to receive second storage device commands from the communication interface and send the second storage device commands to the second logical storage area and additional logic configured to receive second storage device responses from the second logical storage area and send the second storage device responses to the communication interface.

In some embodiments the first storage device comprises a HDD and in some of these embodiments the first and second logical storage areas comprise first and second partitions of the HDD. In other embodiments the first storage device comprises solid state memory or an optical device. Suitable solid state memories include any solid state memory that can be written at least once including a Secure Digital SD memory card a Compact Flash CF memory card or a memory stick. Suitable optical devices include CD and Digital Video Disc DVD drives. Exemplary writable data storage media for these drives include Compact Disc Recordable CD R and Compact Disc ReWritable CD RW media and Digital Video Disc Recordable DVD R and DVD R and Digital Video Disc ReWritable DVD RW and DVD RW media respectively.

An exemplary method for backing up data stored on a data source comprises returning a response to an inquiry from the data source. The response identifies a first storage device of a first device type as instead being of a second device type. Here the second device type belongs to a class of device types that upon connection to the data source will trigger an operating system of the data source to automatically execute a backup application stored on the first storage device. The exemplary method further comprises providing the backup application to the data source to selectively copy data stored on the data source. Providing the backup application includes receiving auto launch device commands from the data source translating the auto launch device commands into first storage device commands and sending the first storage device commands to the storage device. Providing the backup application also includes receiving first storage device responses from the first storage device translating the first storage device responses into auto launch device responses and sending the auto launch device responses to the data source.

In some embodiments the method for backing up data stored on the data source also comprises selectively copying data files to a second storage device and in some embodiments the first storage device comprises the second storage device. In other embodiments selectively copying data files includes sending copied files to a web based storage facility. Selectively copying data files can include searching one or more storage devices associated with the data source for data files that meet a predefined criterion for example that the data files have not previously been copied to a data backup system or that the data files have a file type associated with a type of content. Selectively copying data files can also include creating a directory structure on the second storage device to indicate the location of a copied file on the data source. Selectively copying data files can further include determining whether a data source has been previously paired with a data backup system. Selectively copying data files can be initiated in some embodiments by a user command or by connecting a removable storage device to a communication port of a data backup system.

An exemplary method for backing up data from a data source comprises detecting an optical disc in an optical drive of the data source auto launching a data backup application stored on the optical disc and using the data backup application to copy a data file across a network to a networked storage. The networked storage can comprise for example a storage area network or a server of a commercial service provider. The commercial service provider can be predetermined in some embodiments. The networked storage can also comprise a user selected location. In some embodiments the method further comprises finding on the optical disc an Autorun.inf file that points to the data backup application. The method can also comprise finding the data file according to a criterion that can be predetermined or user specified.

An exemplary data backup device comprises an optical disc comprising computer readable instructions including auto launch instructions and a backup application. The auto launch instructions are configured to point to the backup application and can comprise in some embodiments an Autorun.inf file. The backup application is configured to find data files on the data source according to a criterion and back up the data files across a network to a networked storage. The criterion can be a type of content and in some instances the criterion is pre determined. The backup application can also be further configured to allow a user to specify the criterion. The networked storage can comprise for example a storage area network or a server of a commercial service provider. In some embodiments the commercial service provider is predetermined. The backup application can be further configured in some embodiments to allow a user to specify a location of the networked storage.

An exemplary data backup system of the invention comprises a USB flash drive. The USB flash drive includes a USB interface a flash memory and an emulation component in communication between the flash memory and the USB interface. The emulation component includes logic configured to represent the flash memory as an auto launch device. The flash memory includes computer readable instructions comprising a backup application configured to selectively copy data files from a data source to a networked storage such as a server of a commercial service provider. In some embodiments the backup application is further configured to allow a user to specify an address of the networked storage while in other embodiments the backup application is further configured with a predetermined address of the networked storage.

Methods for backing up data stored on a data source are also provided. An exemplary method comprises providing a response to an inquiry from the data source where the response identifies a flash memory of a USB flash drive as being an auto launch device. The response is provided through a USB interface of the USB flash drive to the data source. The method further comprises providing a backup application from the flash memory of the USB flash drive to the data source the backup application being configured to selectively copy data files stored on the data source to a networked storage. In some embodiments the response identifying the flash memory as being an auto launch device identifies the flash memory as a CD drive including a CD medium or a DVD drive including a DVD medium. In some embodiments providing the backup application includes receiving auto launch device commands from the data source translating the auto launch device commands to flash memory commands and sending the flash memory commands to the flash memory and in these embodiments providing the backup application further includes receiving flash memory responses from the flash memory translating the flash memory responses into auto launch device responses and sending the auto launch device responses to the data source.

Still another exemplary backup system of the invention comprises a communication interface and a first storage device including a writable data storage medium comprising first and second logical storage areas. The first logical storage area includes computer readable instructions of a backup application configured to back up data files from a data source and to provide a GUI for selecting a data file for printing from amongst the backed up data files. The backup system also comprises and an emulation component in communication between the first storage device and the communication interface. The emulation component comprises logic configured to represent the first logical storage area as an auto launch device and logic configured to represent the second logical storage area as a second storage device including a writable data storage medium. In some embodiments the backup system further comprises a display device and the backup application is further configured to provide the GUI on the display device.

The backup application of the backup system can be further configured to back up data files from the data source to the second logical storage area. The backup application can also be configured to store a copy of the data file selected for printing in a print folder in the second logical storage area. In other embodiments the backup application can be configured to store a pointer to the data file selected for printing or a file name of the selected data file in the print folder.

Still another exemplary backup system of the invention comprises a data storage medium comprising an optical disc including a writable portion and a read only portion comprising computer readable instructions of a backup application configured to back up data files from a data source to the writable portion and to provide a GUI for selecting a data file for printing from amongst the backed up data files. The optical disc can comprise in some embodiments a hybrid optical disc. The backup application can also be configured to store a copy of the data file selected for printing in a print folder in the writable portion. In other embodiments the backup application can be configured to store a pointer to the data file selected for printing or a file name of the selected data file in the print folder.

Still another exemplary backup system of the invention comprises a USB flash drive including a USB interface a flash memory including computer readable instructions comprising a backup application configured to selectively back up data files from a data source to a networked storage and to provide a GUI for selecting a data file for printing from amongst the backed up data files and an emulation component in communication between the flash memory and the USB interface. Here the emulation component includes logic configured to represent the flash memory as an auto launch device. The networked storage can comprise a server of a commercial service provider and in some of these embodiments the commercial service provider comprises an online photo printing service.

Still another exemplary method of the invention comprises backing up data files from a data source using an auto launched backup application configured to automatically configure and execute upon connection of a backup system to the data source providing a GUI that allows a user to select from amongst the backed up data files a data file for printing receiving a user selection of a data file to be printed from amongst the backed up data files and populating a first print folder. Backing up data files from the data source can include copying the data files to the backup system where the backup system comprises for example a hard disk drive or an optical disc. Backing up data files from the data source can also include copying the data files to a networked storage. In some embodiments receiving the user selection of the data file to be printed includes receiving a printing option pertaining to the selected data file.

Populating the first print folder can include storing in the first print folder a copy of the selected data file. Some of these embodiments further comprise sending the copy of the selected data file to a printer connected to the data source which can be a networked printer connected to the data source by a network connection or sending the copy of the selected data file to an online service provider or kiosk. Where backing up data files from the data source includes copying the data files to the backup system the method can further comprise sending the copy of the selected data file to a printer connected to the backup system.

Populating the first print folder can include storing a pointer in the first print folder the pointer being to the selected data file or storing a file name of the selected data file in the first print folder. Some of these embodiments further comprise using the pointer or file name to locate the selected data file and sending the selected data file to a printer connected to the data source which can be a networked printer connected to the data source by a network connection or sending the selected data file to an online service provider or kiosk. Where backing up data files from the data source includes copying the data files to a backup system the method can further comprise sending the selected data file to a printer connected to the backup system.

Additionally the method can further comprise populating a second print folder. The first print folder can be populated with an image type of data file and the second print folder can be populated with a document type of data file for example. As another example the first print folder can be populated with a data file for a first printing alternative such as an online service provider and the second print folder can be populated with a data file for a second printing alternative such as a local printer.

Still another exemplary method of the invention comprises connecting a backup system to a data source to auto launch a backup application stored on the backup system the backup application being configured to selectively back up data files from the data source and provide a GUI for selecting a data file for printing from amongst the backed up data files. The method further comprises selecting through the GUI a data file to be printed from amongst the selectively backed up data files and printing the data file. The method can further comprise disconnecting the backup system from the data source before printing the data file. In some embodiments printing the data file includes connecting the backup system to a kiosk. Printing the data file can also include connecting the backup system to a printer. The method can also further comprise electing an online printing service before printing the data file.

Still another method of the invention comprises providing a GUI for a user to select a data file from amongst a set of backed up data files and to specify a task for an online service provider. The method additionally comprises receiving a user selection of a data file from amongst the set of backed up data files receiving a task specification for the online service provider automatically connecting to the online service provider and uploading the selected backed up data file to the online service provider. The method further comprises in some embodiments uploading the task specification to the online service provider. In various embodiments receiving the task specification includes receiving a specification to print share view play or archive the selected backed up data file. Receiving the task specification can also include receiving a task preference.

Further automatically connecting to the online service provider can include identifying the online service provider which can include obtaining the online service provider from the specification of the task using a default setting or following a rule. Logging on to the online service provider can include in some embodiments providing default user credentials to the online service provider. Also providing payment information to the online service provider can include applying bundled credits.

The present invention also provides a computer readable medium having stored thereupon computing instructions. The computing instructions comprise a code segment to provide a GUI for selection of a backed up data file from amongst a set of backed up data files and specification of a task for an online service provider. The computing instructions also comprise code segments to receive a selection of a backed up data file from amongst the set of backed up data files receive a task specification for the online service provider automatically connect to the online service provider and upload the selected data file to the online service provider. The computing instructions can also comprise a code segment to upload the task specification to the online service provider. The computing instructions can further comprise a code segment to provide payment information to the online service provider by applying bundled credits. In some embodiments the code segment to receive the task specification includes a code segment to receive a task preference. The code segment to automatically connect to the online service provider can also include a code segment to identify the online service provider. The code segment to automatically connect to the online service provider can include a code segment to provide default user credentials to the online service provider.

A data backup system is provided for personal as well as commercial applications. The data backup system of the present invention allows files to be selectively copied from a data source such as a personal computer to a storage device according to some criteria such as file type. For example the system can be configured to backup audio files having recognized music file extensions such as .mp3 and .wav or image files having recognized image file extensions such as .jpg .pct and .tif. The data backup system according to some embodiments stores a backup application that automatically launches when the data backup system is connected to the data source. The backup application can be configured to require little or no user input to perform the backup process.

The data backup system can take a number of different forms. One example is an appliance that includes both the backup application and sufficient storage capacity for copied files. Another example is a device that includes the backup application and an interface for connecting sufficient storage capacity in the form of a storage device such as an external HDD or flash memory device. In both examples the system includes an emulation component. The emulation component makes the portion of the data backup system that contains the backup application appear to the data source as if it were of a particular device type. More specifically the backup application portion of the data backup system is represented as being one of a class of storage devices referred to herein as auto launch devices. Emulating an auto launch device allows the data backup system to take advantage of automatic execution capabilities of certain operating systems so that the backup application will automatically be executed when the device is connected to a data source running the operating system.

As shown in the backup system comprises a communication interface an emulation component and a storage device that includes a first logical storage area and second logical storage area . The communication interface allows the data source to communicate with the emulation component of the backup system according to a communication protocol. The communication interface can be for example USB FireWire or a wireless interface such as infrared Bluetooth or WiFi.

It will be appreciated that the backup system can include a plurality of communication interfaces of the same or of different types to accommodate multiple and or different data sources . Depending on the type of communication interface the communication interface can include a communication port through which the connection to the data source is made. For instance a USB communication interface can include a USB communication port and a FireWire communication interface can include a FireWire communication port. Alternatively the communication interface can include a wireless antennae or an infrared transmitter receiver unit for sending and receiving infrared signals.

The storage device comprises a writable data storage medium and can be for example a HDD that has been partitioned into at least two logical storage areas. In this instance each logical storage area is a partition of the HDD. Suitable HDDs for the storage device include 1.0 inch 1.8 inch 2.5 inch and 3.5 inch hard drives having capacities of 20 to 60 gigabytes GB or more. Other suitable storage devices that include rewritable media are solid state memory devices such as SD memory cards and CF memory cards. The storage device can also be an optical device such as a CD drive or a DVD drive where the writable data storage medium within such an optical storage device can be either a write once medium such as a Compact Disc Recordable CD R DVD Recordable DVD R or DVD R or a rewritable medium such as a Compact Disc Rewritable CD RW or DVD Rewritable DVD RW or DVD RW .

The storage device can also be implemented by two different devices one dedicated to each of the two logical storage areas . For example the first logical storage area can be implemented by a CD drive with any CD media while the second logical storage area is implemented by a HDD. In a further example the first logical storage area can be implemented by a solid state memory while the second logical storage area is implemented by an optical device with a writable data storage medium. In this further example the two different devices could be contained within a common housing. It will be understood that the device types form factors and capacities provided herein are merely exemplary and not intended to be limiting.

In some embodiments the backup system further comprises a memory device interface that allows the first and second logical storage areas and to communicate with the emulation component . In these embodiments the memory device interface is of a type that is appropriate to the type of storage device . For instance an Integrated Drive Electronics IDE interface can be used with an IDE HDD storage device and a Small Computer System Interface SCSI interface can be used with a SCSI HDD storage device . Alternately the memory device interface can be a SD memory card host interface where the storage device is a SD memory card. The interface can also be a wireless interface such as infrared WiFi and Bluetooth. The memory device interface can be implemented in the backup system by an integrated circuit IC chip or through the use of discrete components. The memory device interface is integrated into the memory device in some embodiments. It will be appreciated that in the embodiments noted above that employ multiple storage devices the backup system can include multiple memory device interfaces as appropriate.

The first logical storage area represents a logical area of the memory device that is meant to be inaccessible to the user and safe from accidental erasure. The first logical storage area can contain for example a backup application system files drivers and other setup and configuration software. The first logical storage area is represented to the data source by the emulation component as being an auto launch device. As used herein auto launch devices are those devices that will trigger the automatic execution functionalities of certain operating systems such as the AutoRun function of the Microsoft Windows operating system. Examples of device types that will trigger AutoRun of Windows include CD and DVD drives when a CD or DVD medium is contained therein. In these examples the Windows AutoRun functionality is triggered either when the CD DVD is placed in the CD DVD drive already connected to the data source or when the CD DVD drive already containing the CD DVD medium is connected to the data source .

The second logical storage area represents a logical area of the memory device that is dedicated to storing backed up data. Accordingly the emulation component represents the second logical storage area to the data source as being a device type that includes a writable data storage medium. The second logical storage area can be represented as a FWD CF or a SD memory card for example. In some embodiments the second logical storage area can be represented as the same type of device as the storage device . In other embodiments the second logical storage area can be represented to be a different device type than the storage device .

The emulation component provides certain functions to the backup system and can be implemented through logic such as software firmware hardware or any combination of these. It will be understood that within an embodiment different functions of the emulation component can be implemented with different forms of logic. Thus while one function of the emulation component is implemented through firmware for example another function can be implemented through software.

In one embodiment the emulation component includes an IC. For example the emulation component can be implemented using software firmware hardware or some combination thereof incorporated in a USB controller chipset. In some USB specific embodiments the emulation component implements some or all of a number of layered industry standards. Examples of such standards include USB Specification Revision 2.0 USB Mass Storage Class Bulk Only Transport Revision 1.0 SCSI Primary Commands 3 SPC 3 SCSI Block Commands 2 SBC 2 Multimedia Commands 4 MMC 4 and AT Attachment with Packet Interface 6 ATA ATAPI 6 . It should be noted that in some embodiments the emulation component may only support subsets of the commands of these industry standards.

Functions provided by the emulation component can include representing the first logical storage area as an auto launch device and representing the second logical storage area as a device including a writable data storage medium. Accordingly the data source will recognize the data backup system as two attached devices when connected to the backup system . It should be noted however that in some embodiments the contents of these two devices are not accessible to the user of the data source but are accessible by the backup application which is configured with appropriate application programming interface API calls. This serves to protect the contents of both the first and second logical storage areas from accidental modification or erasure. To access the backed up data from the second logical storage area in some embodiments the data backup system restores the data to the data source or copies the data to yet another device. In other embodiments the virtual device that represents the second logical storage area is accessible to the user while the virtual device that represents the first logical storage area is not accessible. In these embodiments the user is allowed direct access to the contents of the second logical storage area but not the first logical storage area .

Another function that can be provided by the emulation component is translating commands and responses between formats such as between the command sets for a HDD and a CD drive. In this way when the data source sends a command to the backup system addressed to the auto launch device as the first logical storage area is represented to be the emulation component translates the command from an auto launch device format to the appropriate format for the storage device before sending the command to the first logical storage area . Similarly responses from the first logical storage area in the format of the storage device are translated into the auto launch device format and sent to the data source so the response appears to have come from an auto launch device.

It should be noted that translation between CD drive and HDD formats is but one example and in some embodiments the emulation component can implement one or more analogous format translations. As used herein a storage device command refers to a command in an appropriate format for the specific storage device and a storage device response refers to a response in the same format. As a specific example an auto launch device command refers to a command in an appropriate format for a specific auto launch device and an auto launch device response refers to a response in the same format.

Still another function that can be provided by the emulation component is to pass commands and responses between the data source and the second logical storage area . When the commands received by the emulation component are already in the proper format for the storage device the emulation component does not have to translate commands or responses. Here the emulation component receives commands from the data source addressed to the device that includes the writable data storage medium and passes the commands to the second logical storage area . In a similar fashion responses are relayed back to the data source without translation. It will be appreciated that the emulation component can be configured to represent the second logical storage area as being of a different type of device than the memory device . In these embodiments the emulation component is configured to translate between the formats of the memory device and the device type of the representation of the second logical storage area .

The data backup system can also comprise a removable storage device interface to allow a removable storage device including a writable data storage medium to be attached externally to the data backup system by way of a communication port . The removable storage device interface provides communication between the emulation component and the removable storage device . In some embodiments the removable storage device interface is configured to support a removable device with an integrated medium such as a flash memory device or a HDD. In other embodiments the removable device can be one that accepts removable media such as a CD drive.

It will be appreciated that the removable storage device interface is optional as the copied files do not necessarily have to be stored to a memory device that is associated with the data backup system . Alternately the backup application can direct copied files to be stored to an existing internal or external drive of the data source or to a networked drive. In still another option the backup application can send copied files over an Internet connection to be stored at a web based storage facility.

It should be noted that the backup systems can include a display or other visual indicator such as a light emitting diode LED to show files being copied for instance though some embodiments do not include the display to lower the cost and increase the durability of the backup systems . The backup systems can run off of a battery an external power source e.g. an AC power outlet or off of power supplied by the data source . In some embodiments the connection is a cable that is part of the backup system . The backup systems can also be configured as a cradle designed to receive the removable storage device or the data source where the data source is a consumer electronic device such as a digital camera.

Providing the data backup system can include providing data backup system or data backup system for example. In those embodiments in which the data backup system is used providing the data backup system can include for example connecting a removable storage device to the communication port . Where the removable storage device is for example a SD or CF memory card connecting the removable storage device to the communication port can include inserting the memory card into the communication port . Alternately where the removable storage device is a HDD connecting the removable storage device to the communication port can include coupling the communication port to the removable storage device with a connection such as a cable or a wireless link.

With reference to data backup systems connecting the data backup system to the data source can include coupling the communication interface to the data source with the connection . Connecting the data backup system to the data source also includes the data source recognizing the data backup system as two new devices. For example some operating systems periodically query unused ports for newly attached hardware. An exemplary process by which the data backup system can be recognized by the data source as being two attached devices is described below with respect to .

Connecting the data backup system to the data source automatically launches a backup application. Operating systems that include an automatic execution function such as the AutoRun capability of the Windows operating system can execute applications that are resident on an auto launch device. Here the automatic execution function of the data source s operating system recognizes the backup application as an application to be launched and automatically launches the backup application to run on the data source.

Connecting the data backup system to the data source can also comprise translating commands and responses between device formats as communications are passed between the data source and the data backup system as discussed above with respect to the functionality of the emulation component . Thus for example CD read commands sent to the backup system are translated to HDD read commands before being sent to the first logical storage area .

Selectively copying the data files from the data source can include running the backup application on the data source where the backup application is configured to search one or more storage devices associated with the data source. The backup application can in some embodiments search directories of internal storage devices external storage devices and network drives that are accessible to the data source. The backup application selectively copies files to a storage device including a writable data storage medium such as the second logical storage area or the removable storage device .

The backup application selects files that meet at least one criterion such as file type e.g. .jpg or type of content e.g. audio files . The backup application can also find files that meet at least one of several criteria. Other examples of types of content include e mails business application data e.g. Accpac and Simply Accounting files digital video files ebook files contacts files calendar files text files tasks files settings files bookmark files and password files. Another criterion in some embodiments is whether a file has been previously backed up. Yet another criterion can be a particular date or a range of dates. The backup application in some embodiments finds files that meet the criteria by searching e mail attachments and files embedded within other files such as compressed files within a .zip file. The backup application can find files that are stored directly on the data source or additionally on associated peripheral devices and networks.

The backup application can in some embodiments create a file path or directory structure on the writable data storage medium of the data backup system to indicate the location where a copied file was located on the data source. In other embodiments the backup application creates a new directory structure based on chronological order alphabetical order file size or some other criteria. Another alternative is for the backup application to create a monolithic file that includes all of the backed up files. Yet another alternative is for the backup application to store on the writable data storage medium the backed up files in a common directory i.e. a flat structure and to create an index e.g. an XML index that stores the information on file locations. In these embodiments when the backed up files are restored the index is used to re create the directory structure on the data source.

It will be appreciated that according to the method user involvement can be reduced to simply making a physical connection between a data backup system and a data source. While user involvement can be reduced to one or more simple operations it will be appreciated that options can be provided to the user through a graphical user interface GUI provided by the backup application on a display device of the data source. In this way the user if desired can customize the backup process by specifying search criteria such as a type of content or a file type to be copied. Additionally the user can limit the scope of the backup process by drive directory folder file type file size or date time stamp or the user can deselect a type of content or a specific file drive directory or folder such as a temporary folder or an Internet Explorer directory.

As noted selectively copying the data files from the data source can include running the backup application on the data source. In addition to the above functions of the backup application the backup application can also be configured to perform the following functions as part of selectively copying the data files. For example the backup application can wait a predetermined length of time and then repeat the backup process so long as the backup system remains connected to the data source . The backup application can also perform a self diagnostic routine at predetermined intervals. The backup application can also be configured to wait for a predetermined period of time before performing an automatic backup to provide the user an opportunity to customize the backup process. Additionally the backup application can be configured to selectively copy the data files only upon a user command rather than automatically. The user command can be entered through the GUI on the data source or can be provided by a button or switch on the data backup system. Alternately the backup application can be configured to selectively copy the data files whenever a removable storage device is connected to the communication port .

Copying the data files in some embodiments includes determining whether the data source has been previously paired with the data backup system e.g. the data source was previously backed up with the data backup system . This can include for example searching for a marker that was previously left on the data source or comparing a marker saved on the data backup system with an identifier of the data source such as a volume label. The marker allows the backup application to recognize the data source. In some embodiments the backup application determines a course of action based on whether the data source has been previously paired with the data backup system and if so whether the data backup system already stores data associated with the data source. For instance the course of action can be an automatic backup of the data source either full or incremental a restoration of backed up data to the data source or a query to the user to make a selection between these or other alternatives.

Enumerating the data backup system is performed to identify the newly attached hardware in this case the data backup system and how the hardware is configured for communication. Enumerating comprises the data source assigning a unique device number and querying the data backup system for a device descriptor. The emulation component responds by providing a device descriptor to the data source. Enumerating further comprises the data source setting an address for the data backup system. Once the address has been set the data backup system obtains communication frames assigned to the address. Enumerating can also comprise the data source requesting and receiving detailed device information from the data backup system specifically the emulation component such as class subclass and protocol.

Enumerating also comprises the data source starting an appropriate USB mass storage class driver and the USB mass storage class driver requesting the number of LUNs from the data backup system with a GET MAX LOGICAL UNIT NUMBER command. Enumerating also comprises the data backup system and more specifically the emulation component responding to the GET MAX LOGICAL UNIT NUMBER command by communicating two LUNs to the data source.

Representing the two LUNs through initialization comprises the emulation component receiving a number of SCSI commands directed to each LUN from the data source. The emulation component handles each LUN independently. The emulation component responds to those SCSI commands that it recognizes and generates a standard error condition in response to SCSI commands that are not recognized. Each SCSI command and any errors that are generated are typically handled before the next SCSI command is issued to either LUN. It will be understood that the sequence of SCSI commands sent to the LUN representing a storage device including a writable data storage medium can be different from those sent to the LUN representing an auto launch device. Additionally SCSI commands or a sequence of SCSI commands may be repeated multiple times by the data source and sequences of SCSI commands directed to the two LUNs can be interlaced.

For both LUNs the sequence of SCSI commands starts with the USB mass storage class driver issuing an INQUIRY command to identify the device type. The emulation component returns a response to represent a storage device such as second logical storage area as a storage device that can include a writable data storage medium. A response of 0x00 for example indicates that the storage device is a HDD. Similarly the emulation component returns a response to represent a storage device such as first logical storage area as an auto launch device. A response of 0x05 for instance indicates that the auto launch device is a CD drive. The storage device that can include a writable data storage medium can additionally be marked as either removable or non removable while the auto launch device can be marked as removable. After this point the sequence of SCSI commands for the two LUNs diverge. It will be appreciated that the order of SCSI commands in the sequences described below are exemplary and the order of the SCSI commands will vary with different data sources. Also in some instances one or more of the SCSI commands provided below are omitted and or other SCSI commands are included.

An exemplary sequence of SCSI commands directed to the storage device that includes the writable data storage medium continues with a READ FORMAT CAPACITIES request that the data source uses to determine whether the writable data storage medium is unformatted. Ordinarily the medium of the storage device being represented is already formatted and the emulation component responds accordingly. Otherwise the data source will attempt to format the medium of the storage device. Next the data source issues a READ CAPACITY request to identify the capacity of the writable data storage medium and its block size and the emulation component returns this information as well. A READ command is issued to read the first block on the writable data storage medium. The first block has a logical block addressing LBA value of zero LBA 0 and contains the Master Boot Record MBR which itself contains the partition table for the writable data storage medium. The emulation component responds with the contents of the requested block.

A MODE SENSE command is then used to extract the capabilities of the storage device including the writable data storage medium such as whether the storage device contains a disk cache. The emulation component replies as appropriate to the capabilities of the storage device being represented. Another READ command is issued to recover the first block of the file system that contains the root directory. The first block of the file system can be located at LBA 0x3F for example but can vary depending on the particular type of file system being represented. The emulation component returns the first block of the file system. Finally the data source can issue a TEST UNIT READY request before reading the full contents of the root directory etc. Here the emulation component responds affirmatively so that the data source will regard the storage device that includes the writable data storage medium as operational. The data source thereafter issues more read write requests as necessary.

An exemplary sequence of SCSI commands directed to the auto launch device continues with a GET CONFIGURATION request to obtain information about the capabilities of the auto launch device and its ability to read or write different types of optical media e.g. CD R CD RW DVD R DVD R DVD RW DVD RW etc. The emulation component responds with capabilities that are appropriate for the auto launch device being represented to the data source. This can be followed by a READ CAPACITY request to discover if there is a medium present in the auto launch device. The emulation component is configured to respond by failing the initial attempt. In response the data source will issue a REQUEST SENSE command to access the extended error information. In the reply the emulation component sets the Sense Key to UNIT ATTENTION and sets the Additional Sense Code to POWER ON. The data source will then repeat the READ CAPACITY request and the emulation component will respond with a capacity such as the size of the first logical storage area .

To learn what types of status change events the read only media device supports the data source issues an initial GET EVENT STATUS NOTIFICATION request and the emulation component responds with a set of coded status fields. The data source can then repeat the GET EVENT STATUS NOTIFICATION request with a field set to a status entry to be checked. If the operational status field is enabled for example the emulation component will respond with an operational change event and a status code representing a feature change. This response can trigger the data source to issue further GET CONFIGURATION request s to discover which feature if any has changed.

The data source can also issue a MODE SENSE request for Page Code 0x2A known as the MM Capabilities and Mechanical Status Page. The emulation component will respond with information that is typical for a simple auto launch device that includes read only support for CD R and CD RW media. This echoes the information that is returned in response to the GET CONFIGURATION request.

At this point the data source can issue a TEST UNIT READY command. This triggers two sequences of request response events in the emulation component that can support the automatic execution functionality of different operating systems. The commands in the two sequences can be interlaced and the events will remain pending until the emulation component has passed through all of the expected states. As outlined below both sequences are typical for an operating system such as Windows XP. The sequences below do not account for the number of times that a request or a sequence of requests can be repeated. Also the particular sequence of events can vary depending on the type and version of the operating system executing on the data source. Additional or substitute commands can also be issued.

The first sequence comprises a series of TEST UNIT READY commands from the data source to the auto launch device. The emulation component is configured to fail the first request. The data source then sends a REQUEST SENSE command to obtain the extended error information and the emulation component sets the sense key to NOT READY with an additional sense code of MEDIUM NOT PRESENT. The data source then repeats the TEST UNIT READY command which the emulation component again fails. The data source again sends a REQUEST SENSE command and the emulation component responds with a sense key set to UNIT ATTENTION and an additional sense code of MEDIUM MAY HAVE CHANGED. All subsequent TEST UNIT READY commands are typically responded to without error.

The second sequence comprises a series of GET EVENT STATUS NOTIFICATION requests from the data source to the auto launch device. Following the first TEST UNIT READY command that triggers the first sequence the data source issues a GET EVENT STATUS NOTIFICATION request with the operational change field enabled. The emulation component responds with an operational change event and a status code representing a feature change. On the following GET EVENT STATUS NOTIFICATION request the media status field is enabled. The emulation component responds with a media event a status code representing new media and a flag set to indicate that the media is present. On all subsequent GET EVENT STATUS NOTIFICATION requests where the media status field is enabled the emulation component responds with a media event and with the media present flag set but the status code will not indicate new media. In the case where a GET EVENT STATUS NOTIFICATION request is issued and the expected status field is not enabled the emulation component responds as appropriate for the current state of that event.

At the end of either or both of these sequences the data source can send a READ TOC PMA ATIP request to read the Table Of Contents TOC from the medium of the auto launch device. The TOC includes information on the number of tracks on the medium and the start position of each. The emulation component responds with entries for a default configuration namely a single data track that starts immediately after the lead in area. The default TOC declares that the first block of data on the medium starts at address zero. The position of a last track is fixed in the emulation component and represents the space allocated to the data on the auto launch device such as the backup application.

When the data source makes a read request of the auto launch device the emulation component automatically translates the logical address into a corresponding physical address of the storage device e.g. first logical storage area that is being represented as the auto launch device. In addition where the block sizes of the storage device e.g. a HDD partition that is being represented as the auto launch device e.g. a CD drive are different the emulation component also translates the required amount of auto launch device data into the appropriate number of blocks on the storage device.

After the method has been completed the data source recognizes one LUN as an auto launch device and another LUN as a storage device including a writable data storage medium and is properly configured to communicate independently with each. Thereafter selectively copying the data files from the data source can commence. As described above this can include the operating system of the data source automatically launching a backup application from the LUN being represented as the auto launch device and writing selected data from the data source to the LUN being represented as the storage device including a writable data storage medium.

Another data backup device is also provided for personal as well as commercial applications. The data backup device of the present invention allows files to be selectively copied from a data source such as a personal computer to the data backup device according to some criterion such as file type. For example the device can be configured to backup audio files having recognized music file extensions such as .mp3 and .wav or image files having recognized image file extensions such as .jpg .pct and .tif. The data backup device stores a backup application that automatically launches when the data backup device is connected to the data source. The backup application can be configured to require little or no user input to perform the backup process. The data backup device can take the form of a hybrid optical disc divided into sections characterized by different media formats. Although the example of a hybrid optical disc is used for explanatory purposes herein it will be appreciated that the invention is not limited to hybrid optical discs as is explained further herein.

As noted the portions can comprise either the same or different media formats. In those embodiments where the portions of the optical disc comprise the same media format the media format is one that can only be written once. Examples of write once media formats include Compact Disc Recordable CD R DVD Recordable DVD R and DVD R DVD Recordable Dual Layer DVD R DL and DVD R DL Blu ray disc Recordable BD R and High Density Digital Versatile Disc HD DVD formats. These media formats are defined in various industry standards known in the art such as the Orange Book Recordable Compact Disc Standard developed by Philips and Sony. In these embodiments the read only portion having computer readable instructions already written thereto cannot be rewritten whereas the writable portion remains initially unwritten.

Optical discs having portions comprising different media formats are referred to herein as hybrid optical discs. Where the optical disc comprises a hybrid optical disc suitable media formats for the read only portion include CD ROM and DVD ROM formats where the computer readable instructions are placed on the read only portion by stamping. Other suitable media formats for the read only portion include the write once media formats listed above where the computer readable instructions are written to the read only portion . In hybrid optical disc embodiments the writable portion can either comprise a write once media format or a rewritable media format such as Compact Disc Rewritable CD RW DVD Rewritable DVD RW and DVD RW DVD Rewritable Dual Layer DVD RW DL and DVD RW DL Blu ray disc Re writeable BD RE and DVD Random Access Memory DVD RAM . The writable portion can either be initially unwritten or if the writable portion comprises a rewritable format can include computer readable instructions that can be overwritten with data files.

It will be appreciated that the portions can also be distributed across the layers of a multi layered optical disc . In one example the read only portion is disposed on a first layer of a dual layer optical disc such as a CD ROM layer and the writable portion is disposed on a second layer such as a DVD R layer. As another dual layer example both layers can comprise the DVD R format with only a segment of a first layer comprising the read only portion . In this example the remainder of the first layer as well as a second layer comprise the writable portion . In other embodiments the different layers comprise different media formats for instance a triple layer optical disc can comprise a CD ROM layer a DVD R layer and a DVD R layer. In this example the CD ROM layer comprises the read only portion and the DVD R and DVD R layers comprise the writable portion . Providing both DVD R and DVD R formats on a single optical disc can be particularly advantageous as many optical drives are configured to write to one of the two formats but not the other.

The following list provides examples of media format combinations that can be implemented for either a single layer optical disc where the two media formats are provided in a side by side configuration or for a dual layer optical disc where the each media format is provided as a separate layer. Although the following list is extensive the list is not meant to be exhaustive CD ROM CD R CD ROM CD RW CD ROM CD RW CD ROM DVD R CD ROM DVD R CD ROM DVD RW CD ROM DVD RW CD ROM DVD R DL CD ROM BD R CD ROM BD RE CD ROM HD DVD DVD ROM DVD R DVD ROM DVD R DVD ROM DVD RW DVD ROM DVD RW DVD ROM DVD R DL DVD ROM BD R DVD ROM BD RE and DVD ROM HD DVD R. Additional media format combinations that can be implemented as the layers of a three layer optical disc include CD ROM DVD R DVD R CD ROM DVD RW DVD RW DVD ROM DVD R DVD R DVD ROM DVD RW DVD RW CD ROM BD R HD DVD R CD ROM BD RE HD DVD R DVD ROM BD R HD DVD R and DVD ROM BD RE HD DVD R. As above this list of three layer media format combinations is not meant to be exhaustive.

The data source can be for example a personal computer PC a Macintosh computer Mac or a Personal Digital Assistant PDA on which data resides. The data source can also comprise a server a settop box a television a cellular telephone a Smartphone a digital still camera or video camera a scanner a digital music or video player a game console or a Personal Video Recorder PVR . Preferably the data source includes an operating system OS such as Windows XP that includes an automatic application launching function as discussed in more detail elsewhere herein. Other suitable operating systems include MacOS PalmOS Linux and Unix for example. The data source in some embodiments can also be configured to access the Internet and or include other peripheral devices not shown especially for data storage such as hard disc drives solid state memory devices like compact flash CF and or a storage area network NAS .

As used herein auto launch devices are those devices that will trigger the automatic execution functionalities of certain operating systems such as the AutoRun function of the Microsoft Windows operating systems. Examples of device types that will trigger AutoRun of Windows include CD and DVD drives when a CD or DVD medium is contained therein. In these examples the Windows AutoRun functionality is triggered when either a CD or DVD medium is placed in either of the optical drives or when the optical drive already containing a CD or DVD medium is connected to the data source . The AutoRun function in Windows XP is used herein as merely an example of the automatic application launching functions that are made available by other operating systems and the invention is not limited to the Windows environment.

The backup application finds files that meet one or more predefined criteria such as file type e.g. .jpg or type of content e.g. audio files . The backup application can also find files that meet at least one of several predefined criteria. Other examples of types of content include e mails business application data e.g. Accpac and Simply Accounting files digital video files ebook files contacts files calendar files text files tasks files settings files bookmark files and password files. Another criterion in some embodiments is whether a file has been previously backed up. Still other can be a particular date or a range of dates. The backup application in some embodiments finds files that meet the predefined criteria by searching e mail attachments and files embedded within other files such as compressed files within a .zip file. The backup application can find files that are stored directly on the data source or additionally on associated peripheral devices and networks.

One advantage of the invention is the simplicity of use of the optical disc for selectively backing up a particular type of content such as images or music. It will be appreciated that a user s involvement can be reduced to inserting the optical disc into either of the optical drives or and from that point forward the back up method continues automatically. Accordingly the backup application can be configured to back up those data files that include a particular type of content such as images. This allows embodiments of the optical disc to be packaged and sold as a specialty data backup device for automatically backing up a single type of content onto the data backup device. In this way the optical disc can be viewed as a device that takes and stores a snapshot of a type of content on the data source . Additionally a set of optical discs can be provided together where each is a specialty data backup device dedicated to a different type of content such that the set covers the types of data files most commonly found on data sources . Thus an exemplary set includes one optical disc for backing up Microsoft Office files one optical disc for backing up music files one optical disc for backing up image files and one optical disc for backing up video files.

With continued reference to the backup application looks for installed data burning software and determines whether installed data burning software is present. If already installed data burning software is present on the data source the operating system initiates the use of 3rd party Application Programming Interfaces APIs . If direct access to the 3rd party APIs is not available the installed software is launched . The files found can then be written by the installed software to the writable portion of the optical disc . If installed software is not found the Windows OS native APIs are used . If the Windows OS native APIs are disabled bundled data burning software optionally included as part of the computer readable instructions on the read only portion is launched and the found files can then be written by the bundled software. It will be understood that although looking for installed data burning software is shown in as sequentially following finding files looking for installed data burning software and finding files take place concurrently in some embodiments.

In some embodiments writing the files includes creating a file path or directory structure on the writable portion to indicate the location where a copied file was located on the data source . In other embodiments the backup application creates a new directory structure based on chronological order alphabetical order file size or some other criteria. Another alternative is for the backup application to create a monolithic file that includes all of the backed up files. Yet another alternative is for the backup application to store on the writable portion the backed up files in a common directory i.e. a flat structure and to create an index e.g. an XML index that stores the information on file locations. In these embodiments when the backed up files are restored the index is used to re create the directory structure on the data source .

As noted above a user s involvement in the method can be reduced to simply inserting the optical disc into either optical drive . Once the backup application has successfully completed the data backup a message indicating successful completion can be displayed to the user by a GUI provided by the backup application on a display device of the data source . It will be understood however that other embodiments provide options to the user through the GUI so that the user if desired can customize the backup process prior to the backup application finding data files. As one example the user can customize the backup process by specifying one or more search criteria. The use can specify a search criterion by making a selection from a set of choices for example as presented in a drop down menu. As another example the user can customize the backup process by specifying one or more search criteria by entering the criteria in a text box. Additionally the user can limit the scope of the backup process by drive directory folder file type file size or date time stamp or the user can deselect a type of content or a specific file drive directory or folder such as a temporary folder or an Internet Explorer directory. Additional user involvement is discussed below.

As in the embodiments described above with respect to the Windows operating system looks for the Autorun.inf file that points to the backup application. The Windows operating system auto launches the backup application to run on the data source . The backup application then finds data files to be backed up. Next the backup application backs up the found data files to either a pre defined location or a user specified location. In the case of a user specified location the backup application prompts the user to specify a backup destination and waits for a response. The user can specify for example a network drive an attached storage drive a memory card Network Attached Storage NAS and so forth. In some embodiments the user specifies the backup destination by selecting the backup destination from a drop down menu or other list. Alternately the user can enter the backup destination in a text box.

In some embodiments the backup application is configured to automatically direct the data files to be backed up to a pre determined location so that the user does not need to specify a destination. One example of a pre determined location is a website accessible over the Internet. In such a case the data is automatically uploaded to the website. An online service provider for example can offer data storage as a service and distribute CD ROMs including the backup application where the backup application is configured to automatically direct data files to a URL maintained by the online service provider. The data files can then be stored for instance on servers maintained by the online service provider.

Payment for the storage service can be arranged in numerous different ways. As one example the backup application asks the user to provide an e mail address after the data files have been copied to the online service provider s servers. The online service provider can then send an e mail to the user with pricing information based on the amount of storage used for example and requesting a credit card number for billing purposes. Rather than charge for the storage itself the storage can be free but subsequent access or use can be billed. Examples of uses that can be billed for include printing copies of the data files and where the data files are images using the images in merchandising such as printing on T shirts coffee mugs buttons and so forth. In other embodiments the backup application installs an access application on the data source . Launching the access application opens a browser such as Internet Explorer and directs the browser to the website of the online service provider. The online service provider can then charge the user for access to the data files.

Another example where the backup application can be configured to automatically direct the data files to be backed up to a pre determined location is within the context of an organization such as a corporation. For instance an information technology IT department of a corporation can provide a backup application CD ROM to each employee having a computer. The backup application can be configured to selectively back up business related files such as e mails and business application data. The data files are then directed to a specific drive on the corporation network that has been dedicated for this purpose. Advantageously employees working remotely from the office can readily back up files.

Regardless of the destination for the data files whether selected by the user or pre determined backing up the data files proceeds as otherwise described with respect to starting with looking for installed data burning software. After completion the backup application can display a message indicating successful completion.

The data backup system can also comprise a flash memory and an emulation component in communication between the flash memory and the USB interface . The flash memory includes computer readable instructions comprising for example a backup application. The backup application when executed is configured to selectively copy data files from the data source to a networked storage.

Examples of networked storage include a server of a commercial service provider Network Attached Storage NAS and networked drives such as a drive of a Local Area Network LAN . In some embodiments the backup application comprises an address of the networked storage. In these embodiments executing the backup application causes the backup application to automatically direct the data files to the address. For example where the backup application comprises an address of a commercial service provider executing the backup application causes the backup application to automatically direct the data files to the commercial service provider.

Since the data backup system does not comprise an auto launch device the data backup system includes the emulation component . The emulation component includes logic configured to represent the flash memory as an auto launch device. Accordingly when the data backup system is connected to the data source the data source is able to automatically launch the backup application as described in detail above.

In one embodiment the Windows operating system detects the connection event of connecting . As provided above with respect to the Windows operating system sends an inquiry for a device descriptor when new hardware is detected. Since the data backup system includes the emulation component the Windows operating system receives from the emulation component a response comprising a device descriptor that is suitable to trigger the AutoRun functionality of the Windows operating system.

Accordingly the Windows operating system automatically looks for an Autorun.inf file on the data backup system and more specifically within the root directory of the computer readable instructions. In this example the Autorun.inf file points to the backup application. Accordingly the Windows operating system automatically launches the backup application to run on the data source.

Launching the backup application can comprise providing the backup application to the data source. As discussed above another function of the emulation component is to translate between command and response formats. This can comprise receiving auto launch device commands from the data source translating the auto launch device commands to flash memory commands and sending the flash memory commands to the flash memory. Providing the data backup application can also comprise receiving flash memory responses from the flash memory translating the flash memory responses into auto launch device responses and sending the auto launch device responses to the data source.

The backup application then finds data files at the data source to be backed up according to a criterion such as type of content as described above. Next the backup application backs up the found data files to a networked storage. Once the data files have been successfully backed up the backup application can display a message of successful completion.

Returning to backing up the data files in some embodiments the backup application is configured to automatically direct the data files to a pre determined address so that the user does not need to specify the networked storage. One example of a pre determined address is a URL of a server accessible over the Internet. In such a case backing up the data files includes automatically uploading the data files to the server. A pre determined address can also be used to automatically direct data files to other networked storage such as a network drive Network Attached Storage NAS and so forth.

One exemplary method that relies on the backup application having a pre determined address for the networked storage consists of a user connecting a USB flash drive including an emulation component to a USB interface of a data source. In this example an operating system of the data source automatically launches the backup application stored on the USB flash drive and then the backup application automatically copies data files from the data source to the networked storage. Thus the user can backup data files from the data source to the networked storage merely by connecting the USB flash drive to the data source. It will be appreciated that the operating system of the data source is able to automatically launch the backup application because of the presence of the emulation component as provided above.

Returning again to backing up the data files in some embodiments the backup application allows a user to specify a networked storage destination. In some of these embodiments the user specifies the backup destination by selecting the networked storage from a drop down menu or other list. Alternately the user can enter an address of the networked storage in a text box.

As noted above the backup application can include functionalities beyond the data file backup capabilities described elsewhere herein. is a flow chart representation of a method that an exemplary backup application can perform and that provides printing functionalities in addition to backup capabilities. The method comprises backing up data files from a data source using an auto launched backup application and providing a GUI that allows a user to select from amongst the backed up data files a data file for printing. The method further comprises receiving a user selection of a data file to be printed from amongst the backed up data files and populating a print folder. The print folder can be populated with a copy of the selected data file a pointer to the selected data file or a file name of the selected data file for example. The method can optionally comprise sending the selected data file or a copy thereof to be printed. Sending the selected data file or a copy thereof to be printed can comprise sending the selected data file from the print folder or using the pointer or file name to locate and send the selected data file from the location where the selected data file has been backed up.

Referring to the method comprises backing up data files from the data source by using an auto launched backup application. This can comprise for example an initial backup of data files from a data source as described by the method of . In the initial data backup a backup system is connected for the first time to the data source and consequently a backup application is automatically launched to run on the data source. Once the backup application has run on the data source and selectively backed up data files therefrom backing up data files can comprise any subsequent backup. Subsequent backups can be initiated as desired by a user or initiated automatically by the backup application in response to some backup trigger such as the expiration of a period of time.

Backing up data files can comprise selectively copying the data files from the data source according to a criterion. The backed up data files can be copied to a backup system connected to the data source such as backup system backup system or optical disc . Alternatively the backed up data files can be copied to a networked storage as described for example with respect to .

Providing the GUI can comprise displaying the GUI on a display device of the data source or a display device of the backup system. Where the GUI is displayed on the data source the backup application can be configured to read the backed up data files from either or both of a connected backup system or from a networked storage to allow the user to make a selection. Where the GUI is displayed on the backup system logic of the backup system can simply display a list of file names on the GUI. Logic of the backup system can also employ the resident copy of the backup application in some embodiments to read and display on the GUI data files that have been copied to the backup system. Backup systems that include such logic and a display device for the GUI provide the user with the ability to review backed up data files when the backup system is not connected to the data source. Thus for example the user can back up photos from a PC disconnect the backup system from the PC and then use the GUI on the backup system to select one or more photos to print.

In some situations providing the GUI occurs automatically when data files are backed up without user involvement. Automatically providing the GUI can be a default setting in some embodiments. In other situations the user can request that the backup application provide the GUI. In some of these embodiments the user can change the default setting so that providing the GUI does not automatically occur. In some embodiments whether providing the GUI occurs automatically depends on the type of data file that has been backed up. For example providing the GUI can occur automatically for backed up photos but not for backed up music or text documents.

Providing the GUI allows the user to select one or more data files to print from amongst the backed up data files. Providing the GUI can comprise showing the backed up data files in any number of well known formats. For example the backed up data files can be shown as one or more pages of reduced resolution thumbnail images or as a file list. The backed up data files can be arranged in the display by date file name or some other attribute. The GUI can also allow the user to review backed up data files at a higher resolution in some embodiments. As the user selects data files to print those data files can be shown within the GUI as selected for printing for example by highlighting the data file or any other well known technique.

Receiving the user selection of the data file to be printed can comprise the backup application receiving some input that identifies the data file. As one example the GUI can display a number with each displayed data file and the user can indicate the user selection by typing the number of the data file on a keyboard. As another example the user can use a pointing device such as a mouse or a touch screen to select the data file. The backup application then receives an input from the pointing device or touch screen that can be mapped to the selected data file.

In some embodiments the GUI further allows the user to select one or more printing options for the data files selected for printing. In this way the printing of selected data files can be customized with respect to parameters such as the number of copies and the printing device. Thus receiving the user selection can also include the backup application receiving from the GUI a printing option pertaining to the selected data file. In particular where the data files are photos printing options pertaining to the selected data file can comprise photo editing e.g. adjustments to color and brightness cropping etc. and parameters such as print size type of paper and finishing. In some embodiments the backup application includes default settings for the various parameters and the GUI can allow the default settings to be overridden changed or restored.

After receiving the user selection of the data file to be printed the backup application populates the print folder. Populating the print folder can comprise for example storing a copy of the selected data file in the print folder. Populating the print folder can also comprise storing in the print folder a pointer to the selected data file or a file name of the selected data file. In various embodiments the print folder is a folder that resides on the backup system or networked storage as part of a file structure that also includes the backed up data files. Having the print folder on the backup system with the backed up data files allows the backup system to be connected to and utilize different printing options as discussed below. Alternatively where the backup system is not configured to store the backed up data files as in data backup system the print folder can reside on the data source or networked storage. Multiple print folders can also be maintained in some situations. For example separate print folders can be populated to direct selected data files to different printing alternatives as discussed below.

In some instances where populating the print folder comprises storing the copy of the selected data file and receiving the user selection also includes receiving a printing option pertaining to the selected data file populating the print folder can include storing the selected data file as modified by the printing option. For example where the printing option pertains to cropping the cropped data file can be stored in the print folder. In other instances populating the print folder further comprises associated the printing option with the selected data file in the print folder. For example printing options comprising instructions to print two copies of a selected data file on 5 7 paper with a glossy finish can be stored in the print folder either in association with the copy of the selected data file or in association with the pointer or file name.

As noted above once the print folder has been populated the method can optionally comprise sending the data file or a copy thereof to be printed. This can be performed by the backup application or by another application such as a printing application. Sending the copy of the selected data file to be printed can include sending the copy of the selected data file from the print folder whereas sending the selected data file to be printed can include using the pointer or file name to locate and send the selected data file.

Sending the data file or a copy thereof to be printed can include sending to a local or networked printer or kiosk or sending to an online service provider for example. In some instances sending is performed automatically after the user has finished selecting data files or sending can occur at some later time. Sending can further include marking the selected data file to indicate that the data file has been printed. Additionally sending can include displaying a notice to the user through the GUI for example regarding printing success or problems such as an inability to connect to the online service provider s website or that one or more selected data files cannot be printed.

Examples of exemplary printing alternatives are discussed with respect to . Turning first to printing from a local or networked printer as in the selected data file or a copy of the selected data file can be sent to a printer connected to a data source across a connection . Here the connection can be a direct connection where the printer is a local printer or the connection can be a network connection such as a LAN where the printer is a networked printer.

In the embodiments illustrated by sending can be triggered either manually by the user or automatically by the backup application. Where sending occurs automatically the backup application can send when the user finishes selecting data files for instance. Alternatively the backup application can send in response to a printing trigger. Examples of printing triggers include the expiration of a threshold period of time e.g. once a week a determination that the cumulative size of the selected data files has reached some threshold e.g. 25 MB a determination that the number of selected data files has reached some threshold or the detection of a connection of the printer to the data source .

Referring now to a backup system can be directly connected to a printer which again can be a local printer or a networked printer. In this instance the print folder resides on the backup system so that the backup system can print without being connected to a data source. As above the backup application or another application can send the copy of the selected data file from the print folder to the printer or the pointer or file name can be used to locate the selected data file and send the selected data file to the printer .

It will be noted that some embodiments of the backup system include a display . The display can allow the backup application to provide the GUI on the backup system so the user can select backed up data files and print when the backup system is not connected to a data source.

In some embodiments sending to the printer occurs automatically in response to detecting the connection of the printer to the backup system . This feature is achieved in some embodiments through the use of a standard direct printing technology such as PictBridge or USB On The Go USB OTG . Sending to the printer can also be triggered manually by the user.

As shown in sending can include sending the selected data file or a copy thereof to an online service provider such as an online photo printing service. The online service provider prints the data files and then either mails the printed copies to the user or to another destination specified by the user or makes the prints available to be picked up by the user at some convenient location. Here a print folder can reside on a data source on a backup system or by the online service provider . Where the print folder resides on the data source or on the backup system the copy of the selected data file can be sent from the print folder to the online service provider . Alternatively the pointer or file name can be used to locate the selected data file amongst the backed up data files to send to the online service provider . As noted with respect to sending can be triggered manually by the user or automatically once the user is finished selecting data files or in response to a print trigger.

In some embodiments the backup application is initially configured to interface with one or more particular online service providers and in some of these embodiments providing the GUI includes providing the user with the option to select one of these particular online service providers . If such an online service provider is selected the backup application can request that the user provide specific information for interfacing with the online service provider such as user name password mailing address and so forth. The backup application can save this information for later use in order to send .

The backup application can also allow the user to designate some other online service provider other than the particular online service providers for which the backup application was initially configured. In these embodiments the user connects to the online service provider of the user s choice and the backup application records information for later use such as the URL of the online service provider and the user name and password. In this way reconnection to the online service provider can be made automatic.

Referring now to the user can also print from a kiosk such as a photo printing kiosk located in a mall or in a grocery store for example. Here printing from the kiosk includes disconnecting a backup system from a data source and connecting the backup system to the kiosk . In some embodiments upon connection of the backup system to the kiosk the kiosk will automatically read the contents of a print folder residing on the backup system . Where the print folder stores a copy of the selected data file the copy is sent to the kiosk . Where the print folder stores a pointer to the selected data file or a file name of the selected data file the pointer or file name can be used to locate the selected data file to send to the kiosk .

In other embodiments the backup system can include a removable storage device interface so that the print folder can be stored on a removable storage device . Here only the removable storage device needs to be taken to the kiosk rather than the entire backup system .

In some embodiments credits or a monetary value can be included with the backup application on the backup system for use with a particular online service provider or kiosk to encourage an initial use thereof. The credit or monetary value can be increased in some instances as a further incentive to use a particular type of payment method e.g. a brand of credit card PayPal e mail money etc. .

In a single icon has been used to represent the backup system but it will be understood that various backup systems described herein can be used with the various printing embodiments. For example in the backup system can be a backup system an optical disc or a backup system . As another example the backup system in can be any backup system that data files can be backed up to such as backup system and optical disc .

The method begins by providing a GUI for a user to select a backed up data file and specify a task for an online service provider. The application then receives a user selection of a data file receives a specification of a task for an online service provider and automatically connects to the online service provider. Once connected the application uploads the selected data file to the online service provider and uploads the specification of the task to the online service provider. At this point the online service provider can execute the task. Optionally the application can upload user information and or a user setting to the online service provider provide payment information to the online service provider receive confirmation from the online service provider that the task has been completed receive advertising from the online service provider and log off from the online service provider.

As just noted the method includes providing a GUI for a user to select a backed up data file and specify a task for an online service provider GUIs for selecting backed up data files have been discussed above for example in connection with . The GUI is also configured to allow the user to specify a task for an online service provider. Examples of tasks and exemplary configurations for the GUI to allow tasks to be specified are described below. In some embodiments the GUI is provided automatically after data files have been backed up as also described above with respect to .

Tasks that can be specified through the GUI include actions to be carried out by the online service provider on the backed up data files that are selected through the GUI. Such actions can include printing sharing viewing archiving and playing the selected backed up data files. In some embodiments multiple tasks can be specified through the GUI for the same backed up data file such as printing and sharing. For some tasks the user can also specify task preferences that further delineate how the online service provider is to execute the task. Tasks can also be specified to occur at or after some specified future time. A task together with any task preferences comprises the specification of the task. In addition to specifying tasks and task preferences the GUI can also be used to affect the online service provider in other ways as noted below. A few examples of tasks that can be specified through the GUI will now be provided.

Photo printing of selected backed up data files is one example of a task for an online service provider. The task can be further delineated by specifying printing preferences such as print size choice of paper and number of copies. These printing preferences can be applied to all of the selected backed up data files or can be specified for selected backed up data files individually. A task similar to photo printing is document printing. As with photo printing printing preferences can be further specified and applied to selected document data files globally or individually.

Another example of a task for an online service provider is sharing selected backed up data files. The task of sharing can be further delineated by specifying sharing preferences such as which individuals have permission to access the selected backed up data files how long data files will be available for sharing and so forth. Similar tasks for an online service provider are viewing and playing selected backed up data files. Music and video data files for example can be played by an online service provider. It will be appreciated of course that playing may simply be the server of the online service provider serving the data files to the computer of whomever wishes to play the data file so that it can be played on that computer. The task of playing can be further delineated by specifying playing preferences such as whether the data files are streamed or made available to download.

Still another example of a task for an online service provider is archiving selected backed up data files. While a backup system e.g. backup system can provide a high degree of security over accidental loss of important data files archiving yet another copy to a remote location provides even further security against catastrophic loss. Again the archiving task can be further delineated by specifying archiving preferences.

As noted above the GUI can also be used to cause the application to affect the online service provider in other ways. For example the user can provide new or updated user information and user settings for use by the online service provider. User information can include for instance account information such as the user s billing information and shipping address and user credentials such as the user name and password.

User settings include the user s default options or preferences that are associated with the user s account by the online service provider. As an example an online service provider offering photo sharing services may charge a monthly fee based on the amount of storage consumed by a customer s uploaded data files. Thus a user preference can be the duration of time that uploaded data files are maintained before being deleted by the online service provider. The default duration can be for instance one month. Through the GUI the user can specify a change in that duration. In the context of photo printing an example of a user setting is the default brand or type of photo paper.

The method also comprises receiving a user selection of a data file and receiving a specification of a task for an online service provider. The GUI can be designed to allow selecting backed up data files and specifying tasks in a variety of different ways. For instance backed up data files can be dragged to folders or icons representing various tasks. Alternatively a radio button for a task can be clicked and then backed up data files can be selected for that task. Tabbed pages can be used to navigate between tasks. Depending on the design of the GUI receiving a user selection of a data file and receiving the specification of the task for an online service provider can therefore occur in either order. In some instances selecting a backed up data file of a particular file type will implicate a particular task without the user having to expressly specify the task. For instance selecting a backed up data file having a music file type such as .mp3 can be sufficient to specify that the task is playing.

The method further comprises automatically connecting to the online service provider. provides a flow chart representation of an exemplary method for automatically connecting to the online service provider. Here automatically connecting begins by receiving a trigger to connect. Events that can trigger printing to an online service provider have been discussed with respect to and apply equally to other tasks as well. In some embodiments where more than one task specification has been received automatically connecting to the online service provider can include connecting to more than one online service provider in parallel.

Automatically connecting also includes identifying the online service provider. In some instances the online service provider for a given task is expressly selected by the user through the GUI as the task is specified. For example the user can provide a URL. As another example the user can select the online service provider from a predefined list of online service providers that are associated with the task. Where the user selects the online service provider identifying the online service provider can include obtaining the online service provider from the specification of the task.

In other instances the online service provider for a given task is identified by a default setting. For example the application can include a predefined default provider for a given task. Additionally where the application has previously uploaded a user selected backed up data file to a user selected online service provider for a particular type of task that online service provider can become the default provider for that type of task. Thereafter the application will automatically direct the same type of task to that default provider. When the user specifies a task of that type through the GUI the user can be informed of the default provider and given an opportunity to decline the default provider and select another. In light of the above it will be understood that identifying the online service provider in some instances will precede receiving the trigger to connect.

In still other instances the application identifies the online service provider for the task by following a rule or a set of rules. Thus for example a rule can specify one online service provider for a task of printing where a printing preference is for paper larger than 8 10 while a different online service provider is specified for printing where the printing preference is for paper that is 8 10 or smaller. Such rules can themselves be provided as defaults that can be modified through the GUI in some embodiments.

Automatically connecting also includes determining whether an Internet connection exists. In some embodiments if the application cannot find an Internet connection the application is configured to spawn the Internet connection. If the application cannot spawn the Internet connection the application can wait a period of time and try again. The application can be configured to repeat this procedure a number of times and if the Internet connection still cannot be established the application can notify the user that a connection to the Internet cannot be established and the method ends. In other embodiments if the application cannot find an Internet connection the application notifies the user and waits for the user to establish the Internet connection. Methods for providing notifications have been described above with respect to .

Once the application determines that an Internet connection exists the application determines whether it is able to connect to the online service provider. If the application cannot connect to the online service provider the application can be configured to wait a predetermined period of time and then try again to connect to the online service provider. If after a preset number of cycles the application still cannot connect to the online service provider the application can notify the user that a connection to the online service provider cannot be established and the method ends.

Once the application connects to the online service provider the application logs on to the online service provider. Logging on to the online service provider can be achieved by supplying user credentials to the online service provider such as a user name and password. In some embodiments the user credentials are encrypted for added security. The user credentials can be read for example from a hidden directory.

In further embodiments the application includes default user credentials for the online service provider. With the default user credentials the application can log on to the online service provider without having to register the user. Default user credentials can be included with an application as originally installed on a device such as a backup system e.g. backup system FIG. or can be added to the application through a software update for example.

Referring again to after the application has automatically connected to the online service provider the method continues by uploading the selected backed up data file to the online service provider. Uploading the selected backed up data file can be performed automatically in some embodiments. In order to do so the application can be configured to interface with the particular online service provider either by being preconfigured or by recording previous activity with the online service provider.

The method also comprises uploading the specification of the task to the online service provider. Uploading the specification of the task includes uploading the specified task and any specified task preferences. To print the selected backed up data file for instance the task specified can be printing and the preferences specified can include the number of prints the size of the prints and the finish etc. The method also can optionally comprise uploading user information and or user settings to the online service provider in order to update billing information and to change the length of time that data files are retained by the online service provider for example.

The method optionally can include providing payment information to the online service provider. In some instances the online service provider can request a credit card number from the user to pay for the task. The user then provides the credit card number through the GUI. Providing payment information in this instance includes the application transmitting the credit card number to the online service provider. In the alternative to providing payment information a registered user of the online service provider can have a prearranged payment method such as billing to an existing credit card or account.

The application can also apply bundled credits to pay for the task in whole or in part to provide payment information. As discussed with respect to bundled credits can be provided with an application as originally installed on a device such as a backup system e.g. backup system and can be added through promotions or by purchasing more credits. The application can display the credit balance to the user through the GUI in some embodiments as part of providing payment information.

Once payment information has been provided the online service provider may execute the task according to the specification of the task. The method can also optionally include receiving a confirmtion from the online service provider that the task has been successfully completed. In some embodiments the application then notifies the user that the task has been successfully completed.

The method can also optionally include receiving advertising from the online service provider. The advertising can be displayed for example in an advertising window of the GUI. Advertisements can include information about special sales upcoming events up selling and so forth. Particular advertisements can be selected at random can be targeted to the user based on prior history of the user s purchases and actions with the online service provider or the specification of the task for example.

The method can also optionally include logging off from the online service provider. Logging off can be in response to receiving the confirmation. Logging off can include checking session activity to verify that all task specifications have been uploaded to the online service provider. It will be appreciated that although shows an exemplary sequence other sequences are also possible. For example uploading user information and or user settings can occur before or in parallel with uploading the specification of the task. It will also be appreciated that the application can also log events while performing the method to create an event log of the user selections and communications between the application and the online service provider.

In the foregoing specification the invention is described with reference to specific embodiments thereof but those skilled in the art will recognize that the invention is not limited thereto. Various features and aspects of the above described invention may be used individually or jointly. Further the invention can be utilized in any number of environments and applications beyond those described herein without departing from the broader spirit and scope of the specification. The specification and drawings are accordingly to be regarded as illustrative rather than restrictive. It will be recognized that the terms comprising including and having as used herein are specifically intended to be read as open ended terms of art.

