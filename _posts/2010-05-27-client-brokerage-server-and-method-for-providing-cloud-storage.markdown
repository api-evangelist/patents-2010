---

title: Client, brokerage server and method for providing cloud storage
abstract: A system for providing resources of a cloud infrastructure is provided. In the system, a client terminal may dynamically span its storage to heterogeneous cloud storages as necessary. A client determines, when receiving a file access request from an application, whether to process the file access request as a local file access request for access to a local storage of the client or as a cloud file access request for access to a cloud storage connected through the Internet. A brokerage server receives the file access request and supports the client by brokering a connection to a cloud infrastructure in response to the file access request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762480&OS=08762480&RS=08762480
owner: Samsung Electronics Co., Ltd.
number: 08762480
owner_city: Suwon-si
owner_country: KR
publication_date: 20100527
---
This application claims the benefit under 35 U.S.C. 119 a of a Korean Patent Application No. 10 2009 0055689 filed on Jun. 22 2009 in the Korean Intellectual Property Office the entire disclosure of which is incorporated herein by reference for all purposes.

The following description relates to a cloud computing system and more particularly to a system for providing resources of a cloud infrastructure.

Cloud computing is an Internet based computing technology. In a computer network configuration the Internet is represented by a cloud which is an abstraction of the underlying infrastructure. Cloud computing is a computing paradigm in which IT related functions are supported in the form of services that are transmitted over a network. Cloud computing allows users to easily access desired services over the Internet even if they do not possess particular knowledge regarding the technical infrastructures that are supported by the cloud computing. In other words a user can utilize clouding computing to receive desired resources regardless of his or her physical location. In general computing resources which are managed by resource providers such as data centers may include hardware resources for example CPU capability memories or storages development platforms application programs and the like. Services that are provided by resource providers to allow terminals to access computing capability may be referred to as cloud computing services.

Generally for a client to access a remote storage an access request indicating a particular remote storage is generated to use the corresponding remote storage a browsing application dedicated to the remote storage is installed. In other words clients are only allowed access to particular storages statically mounted.

In one general aspect there is provided a client including an application execution unit and a client storage manager. The application execution unit executes at least one application. The client storage manager determines when a file access request is received from the application whether to process the file access request as a local file access request for access to a local storage of the client or as a cloud file access request for access to a cloud storage connected through the Internet.

The client may further include a cache to store a list of files stored in the cloud storage. The list of files stored in the cloud storage may be received from a brokerage server for supporting brokerage between the client and at least one cloud storage and the list of files is updated according to information received from the brokerage server. The client storage manager may combine the list of files stored in the cloud storage with a list of files stored in the local storage and provides the result of the combination to the application execution unit.

If the file access request is a file read request the client storage manager may determine whether to process the file read request as a file read request for the local storage or as a file read request for the cloud storage according to the list of files stored in the cloud storage.

The client may further include a brokerage unit to select at least one cloud storage suitable to process the cloud file access request from among a plurality of cloud storages connected through the network if the client storage manager determines to process the file access request as the cloud file access request for access to the cloud storage and to support brokerage between the selected cloud storage and the client storage manager.

The client storage manager may determine whether to process the file access request as the local file access request or as the cloud file access request with respect to at least one selected from a group of a preset policy a current status of the local storage device environments the kind and characteristics of contents the proximity to a computing module the size of the file and any combinations thereof.

In another general aspect there is provided a brokerage server for supporting a client connecting to a cloud storage including a server storage manager to receive a cloud file access request for accessing the cloud storage from the client and a storage broker to select at least one cloud storage suitable for processing the cloud file access request from among a plurality of is cloud storages connected through the network. The brokerage server may support brokerage between the selected at least one cloud storage and the client.

The brokerage server may include a metadata manager to manage metadata including information about files stored in the cloud storage and an interface adaptor to convert the file access request received from the client into file operation of the cloud storage and to convert the result of execution on the file operation into a data format interpretable by the client. The server storage manager may transfer the result of processing the file access request to the client.

The metadata may be classified and managed according to individual clients or according to users of individual clients and the metadata may be transferred to a cache of the client using the cloud storage. The metadata manager may store and manage information regarding a writing operation as metadata in response to the client writing a file in the cloud storage.

The storage broker may monitor the plurality of cloud storages and select the at least one cloud storage suitable for processing the cloud file access request according to cost and performance for the client with respect to at least one of data attributes included in the file access request and the metadata.

The interface adaptor may convert the cloud file access request from the client into a file processing request for the cloud storage by one by one mapping of file operations and by modifying file operation parameters according to a result of the mapping. If an error occurs the interface adaptor may convert the file access request into the file processing request by configuring a virtual file operation function for the file processing request according to a basic Application Programming Interface API installed in the cloud storage.

In another general aspect there is provided a method of providing a cloud storage the is method including receiving a cloud file access request for access to a cloud storage from a client selecting at least one cloud storage suitable for processing the cloud file access request from among a plurality of cloud storages and supporting brokerage between the selected cloud storage and the client.

The method may include determining when a file access request is received from an application of the client whether to process the file access request as a local file access request for access to a local storage or as a cloud file access request for access to a cloud storage and transferring if the file access request is to be processed as the cloud file access request the cloud file access request to a brokerage server for brokering a provision of the cloud storage between the client and the cloud storage.

The method may include determining if the file access request is a file read request whether to process the file read request as a file read request for the local storage or as a file read request for the cloud storage according to a list of files stored in the cloud storage wherein the list of files stored in the cloud storage is stored in a cache of the client.

The determining of whether to process the file access request as the local file access request or as the cloud file access request may include determining with respect to at least one selected from a group consisting of a preset policy a current status of the local storage device environments the kind and characteristics of contents the proximity to a corresponding computing module the size of the file and any combination thereof.

The selecting of the at least one cloud storage suitable for processing the cloud file access request may include selecting at least one cloud storage from among the plurality of cloud storages with respect to cost and performance for the client.

The method may include combining at the client a list of files stored in the cloud storage with a list of files stored in a local storage and providing the combined file list to an is application that issued the file access request.

Other objects features and advantages will be apparent from the following description the drawings and the claims.

Throughout the drawings and the detailed description unless otherwise described the same drawing reference numerals will be understood to refer to the same elements features and structures. The relative size and depiction of these elements may be exaggerated for clarity illustration and convenience.

The following description is provided to assist the reader in gaining a comprehensive understanding of the methods apparatuses and or systems described herein. Accordingly various changes modifications and equivalents of the methods apparatuses and or systems described herein will be suggested to those of ordinary skill in the art. Also descriptions of well known functions and constructions may be omitted for increased clarity and conciseness.

Referring to a system for providing cloud storage may have a configuration in which a client a brokerage server and a cloud infrastructure are connected to each other via the Internet . The client may be an arbitrary electronic device such as a mobile phone a digital television a set top box a digital music player a portable media player a notebook and the like.

The client may connect to the brokerage server over the Internet and receive cloud computing services from the brokerage server . The brokerage server which may manage a variety of cloud computing services selects an appropriate cloud computing service in response to a request from the client . Accordingly the brokerage server connects the cloud computing service to the client the brokerage server accesses an appropriate cloud infrastructure through the Internet thus providing a storage to the client . In other words the brokerage server connects to both the client and the client infrastructure over the Internet thus supporting the use the cloud infrastructure by the client .

When the client issues a file access request the brokerage server selects in response to the file access request at least one appropriate cloud storage from among cloud storages in the cloud infrastructure . The brokerage server also supports brokerage between the selected cloud storage and the client . The brokerage server may be provided as illustrated in as a separate computing device that is connected to both the client and the cloud infrastructure via the Internet however some or all of the functional components of the brokerage server may be integrated with one or both of the client and the cloud infrastructure .

As an example illustrated in the cloud infrastructure may include cloud storages and and a cloud computing device . The type and number of cloud storages and cloud computing devices that may be included in a cloud infrastructure are not limited by this example a cloud infrastructure may include a variety of any number of cloud storages and cloud computing devices.

The cloud storages and may each include a data storage and a web based network interface for data transmission and reception through the Internet. Further the cloud storages and may be heterogeneous storages. For example the cloud storages and may be supplied from different providers and configured to store data in such a manner as to be accessible by different file systems.

The client through which a user receives cloud computing services may be implemented as a mobile device for consumer electronics CE having low processing power. The client may include an application execution unit a client storage manager a cache a file system stub a local file system and a local storage .

The application execution unit accesses particular files for execution of applications. In other words applications that are executable by the application execution unit may request access to particular files. For purposes of the description herein the term file access is request refers to execution of any operations associated with a corresponding file. That is a file access request includes a file read request for reading a file stored in a storage a file write request for writing a file in a storage a file list request for receiving a file list about file information stored in a storage and similar file access requests. In addition a file access request may include various parameters and commands related to the corresponding file.

The client storage manager may be referred to as an elastic storage manager client since it provides storage elasticity to the user of the client .

The cache manages a list of files stored in the cloud storages and and is used to quickly determine when receiving a file read request or a file list request whether or not the corresponding file exists in the cloud storage or . The list of files may be updated by receiving the result of the variation from the brokerage server when any of file creation file deletion variations of file attributions and the like occurs. Accordingly the list of files may be quickly and accurately updated.

The file system stub provides a standardized file system interface for an application executed by the application execution unit regardless of the kind of a file system trying to access a storage. One example of a file system used by the file system stub may be a Linux virtual file system.

The local file system may be used to control the local storage . The local storage may include one or both of a built in storage and an external storage directly attached to the client .

Generally when an application of a particular system issues a file access request the application provides information for access to a particular storage in the file access request and directly accesses a file system stub . However in the present example when an application of the client issues a file access request the file access request is transferred to the client is storage manager . That is the client storage manager may intercept and process the file access request before it is transferred to the file system stub .

When receiving the file access request from the application the client storage manager may determine whether to process the file access request as a local file access request with access to the local storage or as a cloud file access request with access to the cloud storage or included in the cloud infrastructure . The client storage manager may also determine whether to process the file access request as a local file access request or as a cloud file access request. The determination may be made with respect to at least one of a preset policy the current status of the local storage device environments the kind and characteristics of contents the proximity to the corresponding computing module the size of the corresponding file and the like.

For example if the file access request is a file write request the client storage manager provides access to the local storage if the local storage has sufficient space. If the available space of the local storage is insufficient the client storage manager directs the file write request to the cloud storage or for processing. As another example if the corresponding file that is to be written according to the file write request is classified as large data such as video data or multimedia data the client storage manager may direct the file write request to the cloud storage or for processing. Also in consideration of proximity to the corresponding computing module the client storage manager may process the file access request as a request for access to the local storage if the corresponding application is to be executed on the client . If the corresponding application is to be executed on a cloud computing device see included in a cloud infrastructure the client storage manager may process the file access request as a request for access to a is cloud storage close to the cloud computing device such as the cloud storage see .

Meanwhile if the application issues a file read request the client storage manager senses a file read operation and intercepts the file read request. Accordingly the client storage manager determines whether the corresponding file is stored in the local storage or in a remote cloud storage based on a file list stored in the cache .

If it is determined that the corresponding file is stored in the local storage the client storage manager accesses the local file system via the file system stub . The local file system accesses the local storage to process the requested file. That is a local file access request is transferred to the file system stub the local file system and the local storage and the local file access requested processed in the client . The result of processing the local file access request is transferred to the corresponding application of the application execution unit via the local file system the file system stub and the client storage manager .

If it is determined that the corresponding file is stored in the cloud storage or the client storage manager requests that the brokerage server process the file access request providing access to the cloud storage or . The cloud storage manager may packetize file access requests for transmission to the brokerage server through the Internet and may de packetize packets received through the Internet .

If the file access request is a file list request the client storage manager may acquire a list of files associated with the client which are stored in the cloud storages and from the cache and acquire a list of files stored in the local storage from the local file system . The client storage manager may combine the list of files stored in the cloud storages and with the list of files stored in the local storage and provide the is combined file list to the application.

Meanwhile in the example illustrated in the client storage manager may be located before the file system stub . However the client storage manager may be positioned between the file system stub and the local file system . The client storage manager may be appropriately disposed according to the operating system OS configuration of the client . The client storage manager is configured to support an interface for both data transmission to and data reception from other components in the client according to its actual position.

The brokerage server may include a server storage manager a metadata manager an interface adapter and a storage broker . Each of the server storage manager metadata manager interface adapter and storage broker may be configured to allow data transmission and reception.

When a cloud file access request is received the server storage manager determines which cloud storage of the cloud storages and is suitable for processing the cloud file access request. The following description is provided with respect to the cloud storage determined to be suitable for processing the cloud file access request.

The metadata manager manages metadata information regarding files stored in the cloud storages and . The metadata information may include information regarding file owners for example service subscription information client device information security key information file IDs file names file attributes for example the sizes or types of files information indicating which cloud storages files are stored in information regarding cloud storages for example information about a current status or quality of service information is authority setting information for sharing with user groups or others usage information and the like.

The metadata manager may manage file lists for each client or for each client s user. The metadata manager may provide file lists to the client storage manager via the server storage manager at regular time intervals or in response to a request from the client storage manager . Accordingly the cache maintains updated file lists. Also when receiving an access request for access to a particular file from a client who is not designated as an owner of the particular file the server storage manager may be configured to provide the requested file to the client if it is determined that the client has authority to access the file based on authority setting information of file information managed by the metadata manager .

According to the present example to provide dynamic access to particular storages the storage broker may select an appropriate cloud storage which is suitable for processing a cloud file access request from the client and is efficient in both cost and performance for the client . Also the storage broker may continue to monitor the statuses of the cloud storages. According to the results of the monitoring the storage broker may select a cloud storage based on storage usage costs and performance with respect to the client in consideration of the system status data attributes requested by the file access request metadata of the corresponding file setting information of the system and similar parameters.

If an appropriate cloud storage for example is determined the interface adaptor adapts the file operation of the file access request transmitted from the client storage manager of the client to a file operation suitable for an interface of the cloud storage so that the client can access the cloud storage . The interface adaptor may perform interface adaptation by one by one mapping of the file operation of the file access request sent by the client to file operation of a file processing request that is to be sent to the cloud is storage and by modifying file operation parameters according to the results of the mapping. If the one by one mapping and the modifying of file operation parameters fail to perform interface adaptation the interface adaptor may configure a virtual file operation function for a file processing request using a basic Application Programming Interface API installed in the cloud storage to process the file access request. Also the interface adaptor converts the result of processing according to the file access request into a command or data format that can be interpreted by the client and transfers the result of the conversion to the client storage manager via the server storage manager .

The result of the processing according to the file access request transferred to the client is provided to the user through the corresponding application. Also the result of the processing is overlaid on and mapped to predetermined locations of the client terminal. The result of the processing may be maintained for browsing without distinguishing whether the result of the processing is for the local storage or for the cloud storage or .

Accordingly the brokerage server connects to the client over the Internet to process file access requests from the client as described above however all or some of the functional components of the brokerage server may be integrated with the client or may be included in the cloud storages and or cloud computing device of the cloud infrastructure .

Referring to and if a file access request is received from an application of the client operation the client determines whether to process the file access request as a local file access request or as a cloud file access request operation .

If the file access request is to be processed as a cloud file access request operation the client transfers the cloud file access request to the brokerage server which brokers is provision of a cloud storage between the client and the cloud storages and operation .

The brokerage server selects at least one cloud storage for example cloud storage of suitable for processing the cloud file access request from among a plurality of cloud storages included in the cloud infrastructure operation . Thereafter the brokerage server serves as a brokerage between the cloud storage and the client operation .

If it is determined in operation that the file access request is to be processed as a local file access request that is not as a cloud file access request the client processes the local file access request operation .

Referring to if an application of the client issues a file read request operation the client storage manager searches for a location of the corresponding file operation . The client storage manager may determine whether the file is located in the local storage or in a cloud storage for example cloud storage or of according to a file list for cloud storages which is stored in the cache . At this time the client storage manager may determine whether the file list is available. If the file list is not available the client manager receives the latest file list from the brokerage server to update the file list. A process of updating a file list is described further below with reference to .

If the corresponding file is located in the cloud storage operation the server storage manager receives the file read request from the client storage manager operation . The file read request is transferred to the metadata manager and the metadata manager is checks the location of the file which cloud storage stores the file a storage location of the file in the cloud storage and the like from the metadata of the file read request operation . The storage broker determines whether access to the cloud storage storing the corresponding file is allowed operation .

When access to the cloud storage storing the file is allowed the interface adaptor performs interface adaptation to read the file from the cloud storage operation . The interface adaptation includes a process of converting the file read request into a format that can be interpreted by the cloud storage. The file is read from the cloud storage operation and the interface adaptor receives the file from the cloud storage and then converts it into a format that can be interpreted by the client operation . The file in the converted format is transferred to the server storage manager and the server storage manager returns the file to the client storage manager . The client storage manager transfers the file to the application which has issued the file read request operation .

However if it is determined in operation that the file is located in the local storage the client storage manager transfers the file read request to the local file system through the local system stub operation . The local file system reads the requested file from the local storage operation and the read file is returned to the application operation .

When an application issues a file write request operation the client storage manager may intercept the file write request and determine whether to store the corresponding file in the local storage or in a remote cloud storage operation . The cloud storage manager may determine whether to store the corresponding file in the local is storage or in a remote cloud storage based on its own policy or a user defined policy.

In operation it is determined whether the file is to be stored in a cloud storage. If the file is to be stored in a cloud storage the file write request is transferred to the server storage manager of the brokerage server operation . Then the storage broker searches for a cloud storage based on costs and performance of storing the file for a user of the client according to a policy of the server storage manager or a policy requested by the user operation .

If an appropriate cloud storage is found the metadata manager records as metadata information about the file for example a location at which the file will be stored in the cloud storage file attributes and the like operation .

Then the interface adaptor performs interface adaptation for file operation to write the file in the cloud storage operation and stores the file in the cloud storage operation . Also the interface adaptor performs interface adaptation on the result of the writing operation to convert the result of the writing into a format that can be interpreted by the client . The result of the conversion is returned to the client storage manager via the server storage manager operation .

However if it is determined in operation that the file is to be stored in the local storage and not in a cloud storage the client storage manager transfers the file write request to the local file system through the local system stub operation . The local file system writes the file in the local storage operation and returns the result of the file writing to the application operation .

Referring to an application issues a file list request to access a logical is architectural file list for example a directory a partition and the like operation . The client storage manager detects the file list request and searches for a list of files stored in the local storage and a list of files stored in cloud storages operation . That is a local storage file list request is transferred to the local file system . The local file system searches for the local storage creates a list of files stored therein and transfers the file list to the client storage manager . The client storage manager may acquire a list that is a cloud storage file list of files stored in cloud storages from the cache . The client storage manager may determine whether the cloud storage file list is available and if the cloud storage file list is not available the client storage manager receives a recently updated file list from the brokerage server .

The client storage manager may combine the local storage file list with the cloud storage file list operation and transfer the combined file list to the application operation . Accordingly the user may receive through an application in use both a list of files stored in the local storage and a list of files stored in cloud storages. Therefore a user may easily access a desired file according to a user interface UI of an application executed by the client without having to consider either the type of the application or whether the file is stored in the local storage or in a cloud storage.

If it is determined that the cloud storage file list stored in the cache is not available for example if the cloud storage file list has not been updated within a predetermined validity period operation the client storage manager transfers a cloud storage file list request to the server storage manager operation .

Accordingly the metadata manager which manages information regarding files is stored in cloud storages for each client receives the cloud storage file list request and searches for a cloud storage file list in use by the client without having to directly access any cloud storage. The metadata manager transfers the found file list to the server storage manager operation .

The server storage manager returns the cloud file list to the client storage manager operation . The client storage manager stores the cloud file list in the cache to update the cloud file list operation .

The processes functions methods and or software described above may be recorded stored or fixed in one or more computer readable storage media that includes program instructions to be implemented by a computer to cause a processor to execute or perform the program instructions. The media may also include alone or in combination with the program instructions data files data structures and the like. The media and program instructions may be those specially designed and constructed or they may be of the kind well known and available to those having skill in the computer software arts. Examples of computer readable media include magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROM disks and DVDs magneto optical media such as optical disks and hardware devices that are specially configured to store and perform program instructions such as read only memory ROM random access memory RAM flash memory and the like. Examples of program instructions include machine code such as produced by a compiler and files containing higher level code that may be executed by the computer using an interpreter. The described hardware devices may be configured to act as one or more software modules in order to perform the operations and methods described above or vice versa. In addition a computer readable storage medium may be distributed among computer systems connected through a network and computer readable codes or program instructions may be stored and is executed in a decentralized manner.

According to one example CE terminals that may form interconnections may overcome certain limitations of their local storages by utilizing a network infrastructure and cloud storage resources. Accordingly users may easily access and utilize cloud storages with existing UIs.

Furthermore cloud storages may be suitable for contents shared between devices or between users since they have higher accessibility than local storages of CE terminals. Furthermore cloud storages may preserve contents more safely due to their high security.

Also it may be possible to reduce costs or improve performance for each content by utilizing a storage brokerage function of a brokerage server without implementing dedicated cloud storages.

A number of examples have been described above. Nevertheless it will be understood that various modifications may be made. For example suitable results may be achieved if the described techniques are performed in a different order and or if components in a described system architecture device or circuit are combined in a different manner and or replaced or supplemented by other components or their equivalents. Accordingly other implementations are within the scope of the following claims.

