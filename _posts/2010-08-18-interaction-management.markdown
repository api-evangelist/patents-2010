---

title: Interaction management
abstract: In a system, at least one web server provides an interface to a web-enabled application to a first computing device, with the web-enabled application and the at least one web server belonging to a first domain. An interaction routing module routes a contact event to the first computing device. At least one application server receives and responds to an Hypertext Transfer Protocol (HTTP) request for requested information related to the contact event. The HTTP request is generated by the web-enabled application. An integration module receives the HTTP request from the at least one application server and translates the HTTP request to an application programming interface call to interface with a second computing device storing the requested information in a second domain. A messaging module provides the requested data to the web-enabled application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08468545&OS=08468545&RS=08468545
owner: 8x8, Inc.
number: 08468545
owner_city: San Jose
owner_country: US
publication_date: 20100818
---
This application relates generally to methods and systems for managing networked contact centers and more specifically for a networked call center that integrates disparate call center resources.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document Copyright 2010 CONTACTUAL INC. All Rights Reserved.

Traditionally contact centers are referred to as call centers and designed to enable a company to handle calls from their clients. The calls received from the clients may be distributed to multiple call agents according to certain call distribution and handling methodologies. Ideally a call center is designed to handle calls with minimal client waiting time minimal dropped calls even call distribution to agents and minimal downtime. Any drastic fluctuations in one or more of these criteria may result in loss of business and or customer dissatisfaction.

The call centers are normally configured to be operated on premise using proprietary systems with propriety hardware and software. These on premise call center systems are generally very costly to maintain. The systems typically require internal support staff. Furthermore the systems may be inflexible in the type of applications and hardware that can be supported limiting the company s ability to upgrade and grow along with any potential increase in demand. Even when the upgrade options are available the options tend to be very costly and may require replacing a current system with another more advanced system causing further stress to the supporting staff the agents and the clients.

Ideally the resources of a call center solution are monitored so that the call center is able to determine which resources are occupied and which resources are available. However when real time monitoring of the status of call center resources is desired the on premise call center solution may be impractical.

For some example embodiments methods and systems for managing interactions in networked contact centers are disclosed. An interface to a web enabled application may be provided to a first computing device via a network. The web enabled application may be in communication with a networked contact center with the application and the contact center located in a first domain. A contact event may be transmitted via the interface to the web enabled application. In response a Hypertext Transfer Protocol HTTP request for information related to the contact event may be received by the first computing device. The HTTP request may be translated into an application programming interface API call to interface with a second computing device storing the requested information in a second domain. In response to the API call the requested information related to the contact event may be received from the second computing device. The information may be provided to the web enabled application.

The following detailed description includes references to the accompanying drawings which form a part of the detailed description. The drawings show illustrations in accordance with example embodiments. These example embodiments which are also referred to herein as examples are described in enough detail to enable those skilled in the art to practice the present subject matter. The embodiments may be combined other embodiments may be utilized or structural logical and electrical changes may be made without departing from the scope of what is claimed. The following detailed description is therefore not to be taken in a limiting sense and the scope is defined by the appended claims and their equivalents.

In this document the terms a or an are used as is common in patent documents to include one or more than one. In this document the term or is used to refer to a nonexclusive or such that A or B includes A but not B B but not A and A and B unless otherwise indicated. Furthermore all publications patents and patent documents referred to in this document are incorporated by reference herein in their entirety as though individually incorporated by reference. In the event of inconsistent usages between this document and those documents so incorporated by reference the usage in the incorporated reference s should be considered supplementary to that of this document for irreconcilable inconsistencies the usage in this document controls.

Methods and systems for managing interactions in networked contact centers are described herein. In one example embodiment a networked contact center is a hosted service to provide services such as responses to telephone calls email instant messages chats short message service SMS and video. An example networked contact center is described in more detail below with reference to . The methods and systems for managing interactions described in the example embodiments herein may facilitate cross domain information retrieval and display real time monitoring of agent statuses and integration and presentation of data from multiple data sources in a user interface mashup. Additionally managing interactions of networked contact centers according to the example embodiments described herein may reduce the number of data requests through the publication of events to a shared message bus and subscription to published events.

Interactions may refer to transactions between agents and customers or entities seeking assistance from a networked contact center. Interactions may further refer to the requests and responses occurring between an agent machine and the networked contact center. Managing interactions permits efficient use of agent resources and minimization of time spent by customers waiting for assistance.

For some example embodiments the networked contact center may provide an integrated environment for conducting contact center interactions. The integrated environment may be able to access both locally maintained data and data maintained on remote third party systems. Access to these resources may occur seamlessly from an agent s perspective as an agent user interface may issue an HTTP request for data which may be routed through and translated at the networked contact center into an appropriate API call to access remotely stored data. Thus an agent conducting a contact center interaction is able to gather data from disparate sources in a centralized location without resorting to separate and multiple authentications for each data source.

A conventional company providing contact center services lacking the integration capabilities described herein may not have access to third party data stores or may have to conduct additional authentication steps to obtain access. Methods and systems for managing interactions of networked contact centers thus offer an ability to manage customer and agent interactions within a single integrated web enabled application.

The networks may be used to communicatively couple the networked contact center with the machines . In an example embodiment networks include the Internet and a public switched telephone network PSTN . Other types of networks may be included within the networks without departing from the claimed subject matter. The transmission media may include any transmission media appropriate for supporting the networks . In an example embodiment the transmission media may include one or more of optical fiber twisted pairs and wireless media. Other transmission media not described may also be used.

Contact made between the networked contact center and the various machines may include various modes of communications e.g. electronic communications that may be digitally encoded composed of analog signals and or include a combination of digital and analog communication. Some example types of contact may include communications made via Voice Over Internet Protocol VoIP analog telephone online chat text messaging electronic mail email video conferencing screen sharing web conferencing and file sharing radio broadcast among other things. It is to be appreciated that example forms of communication are provided herein to illustrate types of contact and not to limit the meaning of contact to certain forms of communication.

The networked contact center may perform various contact related tasks described in more detail below on behalf of one or more tenants. The networked contact center may be implemented in software hardware or a combination of both software and hardware. The networked contact center may comprise contact center machines modules or components not shown that execute instructions to perform the various contact related tasks e.g. call distribution call routing call prioritizing call transferring etc. . One or more of the contact center machines may include interface hardware to communicate with the machines via the transmission media and the networks . It may be noted that the number of customers agents or supervisors and e.g. machines used by the customers agent and supervisors that communicate with the networked contact center may be significantly increased when the number of tenants supported by the networked contact center also increases. One or more of the contact center machines may be responsible for storing data associated with the one or more tenants. The data may include for example tenant specific call configuration agents identifications supervisors identifications call recordings call statistics among other things. For some example embodiments there may be multiple instances of the same data that may be used as backup and for recovery purposes.

A tenant is an entity e.g. a company an employer etc. that seeks to address contact made by other entities e.g. customers employees associates etc. with which the tenant has a relationship. To help respond to such contact an example tenant may use the networked contact center to receive the contact organize the contact allocate the contact transmit the contact and to perform other contact center related services for the benefit of the tenant. In addition to using the networked contact center a tenant may look to yet further entities e.g. agents consultants business partners etc. to help address the various contacts referred to above e.g. contact from the customers associates etc. .

Entities such as for example agents and customers may transmit and or receive communications using the machines . The machines may include interface hardware not shown and software to transmit and or receive communications via the transmission media to and or from the networks and the networked contact center . It is to be noted that the machines may represent different types of machines e.g. personal computers PCs mobile devices telephones or any other network device . In an example embodiment an entity associated with the machine is a tenant s agent and a different entity associated with the machine is the tenant s customer. In various example embodiments on behalf of the tenant the agent using the machine may communicate via the networks and the networked contact center with the customer who is using the machine .

Although the current example may illustrate agents associated with one tenant it is to be understood that the networked contact center may be configured to support or host multiple tenants and therefore may also be referred to as a hosted networked contact center or just a hosted contact center . For some example embodiments the tenants may not need to install any call distribution system on premise. To host these multiple tenants the networked contact center may include multiple platforms and databases to store configurations specific to each tenant. The networked contact center may also implement backup and recovery schemes to reduce system down time.

For some example embodiments the multiple platforms in the platform layer may share the same data in the storage layer . The storage layer may be associated with databases and associated database machines. The storage layer may itself be partitioned into multiple images for backup and recovery and for efficient access. For some example embodiments mapping may be used to relate a tenant on a particular platform to the tenant s data in the storage layer .

Thus the networked contact center may include logic to receive calls to determine to which of the multiple supported tenants the calls belong to distribute the calls to the right platform and to determine where the data associated with the tenant may be found.

Using the organization described above the networked contact center may be easily upgraded and maintained with little or minimal impact to the tenant. For example a tenant may be operating with a backup platform while the primary platform is upgraded from one software level to another software level. Once the upgrade is completed operations may be switched back to the primary platform. Similarly because both the primary platform and the backup platform share the same data in the storage layer switching from the backup platform to the primary platform can be accomplished with minimal impact to the tenant and system availability. It may be noted that some calls may be affected during the switch however as is typical with telephone calls the customers may re dial or call the tenant again. It may be likely that the re dialed calls may be received by the networked contact center after the switch is complete.

Referring again to the components of the backend layer may be associated with a single platform or may be associated with multiple platforms. The backend layer components may further be communicatively coupled with third party databases not shown to retrieve data related to a tenant or customer. The machines and modules of are to be described in further detail with respect to which follows.

The flow diagram may begin at block with an agent machine submitting a request for information related to the identity of a person e.g. a customer requesting interaction with the agent via one or more communication channels. Prior to the submission of the request the person seeking service from the tenant may contact the tenant via the networked contact center which acts as an agent for the tenant. The contact with the networked contact center may occur via one or more communication channels such as by telephone email instant message online chat and text message. A backend component such as a private branch exchange PBX not shown may receive the contact e.g. telephone call email instant message and generate an event corresponding to the contact. The event may be routed to an Interactive Voice Response IVR system not shown where the person making contact with the networked contact center may be prompted to provide information that may be used to assist an agent with handling the interaction. The event further may be transmitted to an Interaction Routing IR component of the backend layer to be routed to an available agent. The IR component may have a listing of the status of the agents associated with the tenant at its disposal. The agent status data may be provided by a statistics engine that maintains agent status data in a variety of metrics. The agent status data may be provided to the statistics engine by a Jabber Communications Manager JCM server . The JCM server is a Java application server that consumes data from agent machines and translates the data for use in the backend layer . The JCM server may further transmit data from the backend layer to the web layer for further transmission to agent machines . Using the status of the agents the skills of the agents and the information provided to the IVR system the IR component may determine which available agent is most suited to handle the interaction with the contactor and may route the contact event to that agent. Other backend components shown generally may provide data and services as needed from the backend layer to the web layer . For example other backend components may include the backend PBX databases and components to interface with other systems.

As shown in routing of the contact event e.g. telephone call to the agent involves routing the event from the backend layer to the web layer where an application server may transmit the event to a web load balancer for further routing to the assigned agent. Upon receipt of the event a screen pop may be generated in an agent user interface of a web enabled application executing in an Internet browser installed on the agent s machine. The screen pop populates the agent s browser window with information pertaining to the contact event such as the personal information of the person initiating contact with the contact center. One source of this information may be information gathered from the IVR system not shown . The agent user interface UI of the web enabled application may interact with the networked call center. The agent UI may be a mashup of multiple data sources with data from each data source being provided in its own frame.

As the agent machine receives the contact event the agent machine may submit a request for additional information concerning the contact event. The agent s browser generates an HTTP request to the backend layer of the networked contact center. To provide real time functionality to the call center agent UI the agent UI may be a web enabled application that utilizes Asynchronous JavaScript and XML AJAX and Comet technologies. The agent UI thus may provide real time interaction with a networked contact center. This real time interaction may be characterized by the web enabled application retrieving and receiving data from the contact center in the background without affecting the state of the agent UI. As data is received by the agent UI the user interface may be updated without refreshing the page. The agent UI may generate the HTTP request as an asynchronous request that uses a long polling COMET transport to keep a connection with the backend layer open while the data is retrieved. In an example embodiment the web enabled application may generate a persistent connection with the backend layer.

In block the browser generated HTTP request is received by the backend layer where the target of the HTTP request may be determined. In one embodiment a CRM integration server such as a Contactual CRM integration server may receive the HTTP request. The HTTP request may be directed to data residing in a local CRM system or database or in a third party proprietary CRM system or database. If the HTTP request is directed to a local database or CRM system because the agent machine and the networked contact center are located in the same domain the browser call may be used to retrieve data from the local database or CRM system without having to translate the call. If the HTTP request is directed to a third party CRM system or database located in a different domain in block the CRM integration server translates the HTTP request into a Web API call recognizable by the third party system or database using the exposed Web API of that third party system. For example the agent UI may make a call for data to be retrieved from a Salesforce.com CRM system or a NetSuite CRM system. The agent UI may not have knowledge of the calling convention used by the Salesforce.com CRM system or the NetSuite CRM system. The backend CRM integration server may have knowledge of the Web APIs used to interface with third party systems. In this respect the CRM integration server may serve as a proxy for the agent machine browser as the agent machine browser does not have knowledge of the APIs needed to interface with third party systems.

In block the translated data request call is used to query the third party system for data relating to the person contacting the networked contact center . In block in response to the query the third party CRM system or database returns relevant data as a structured data response to the API call. In block the CRM integration server may receive the data from the third party system. In block the CRM integration server may push or otherwise provide the retrieved data to the agent UI application using the COMET transport. In block the agent UI may receive the pushed data and update the user interface with the retrieved data.

As shown in the method may commence at operation with an agent user interface being provided in an Internet browser on an agent machine. The agent user interface may be a web enabled application provided as a web service by web and application servers of the networked contact center . The agent UI may be an application that leverages AJAX and COMET technologies to provide real time interaction between the agent machine and the networked contact center. The agent UI web application may be a mashup that is the agent UI may interact with and display data from multiple data sources. Each data source may be given its own frame for displaying data in the agent UI. In one example embodiment the frames in the web application may interact with each other and refresh upon one frame receiving updated data.

At operation certain third party domains from which data is to be retrieved may be set as trusted domains in the Internet browser of the agent machine. A trust may enable the agent UI to engage in cross domain communications to access resources residing in a different domain. For example in the embodiment of the agent UI did not have access to certain third party domains related to third party proprietary CRM systems. In the example embodiment of by setting the third party proprietary CRM systems as trusted domains the agent UI may be able to interface with the third party domains to access data stored in the third party CRM systems. Use of trusted domains may obviate the need for a proxy server to translate generic agent UI HTTP requests into appropriate third party CRM calls.

At operation the agent UI or one of its frames may issue an HTTP request for data. The HTTP request may use a long polling COMET transport to open a persistent or long lasting connection between the agent machine and the backend components of the networked contact center. By using a persistent or long lasting connection the number of connections between the agent machine and the contact center may be minimized.

At operation data may be retrieved from the third party domain. By setting the third party domain as a trusted domain the data may be retrieved from the third party domain without having to translate the HTTP request into a call that conforms to an exposed API for the third party domain. At operation the retrieved data may be pushed back to the browser using the asynchronous long polling connection. The agent UI may receive the retrieved data in the background and may update the requesting frame with the retrieved data.

At operation agent systems and each may include a Comet connection and respectively to connect the agent systems and to the networked contact center . In an example embodiment agent systems and further may include an event publisher such as a TIBCO PageBus Publisher which is an open source message bus implemented in JavaScript. An inline frame Iframe e.g. elements of agent system elements of agent system elements of agent system of an agent UI provided in an Internet browser window for interacting with a contact center may receive data in response to a request issued by the Iframe. In one example embodiment the data may be pushed to the Iframe by a backend component of the networked contact center . In one example embodiment the JCM server may receive the data from a data source e.g. local CRM database third party CRM and push the data to an application server supporting Apache Tomcat technologies. The data may then be transmitted from the application server to the agent UI. The Iframe may receive the data and update itself with the newly received data.

At operation the requesting Iframe may publish the incoming event corresponding to the received data on a message bus. The requesting Iframe may publish the incoming event with a topic name. Each Iframe may have an instance of the message bus while an outer frame surrounding the Iframes may be designated as the parent frame. The parent frame may have an instance of the message bus as well. Each frame may be an AJAX component. In one example embodiment the incoming event may be published to the parent frame message bus instance. Alternatively the incoming event may be published to the message bus instance of the requesting inline frame.

At operation other Iframes who have subscribed to the topic may listen to the message bus and be alerted to the publication of an event having a topic name matching their subscription. At operation the subscribing Iframes read the data off the bus and use the data to update themselves. In one example embodiment publication of the data and incoming event may be implemented using TIBCO PageBus an open source message bus implemented in JavaScript. The publication of data to other inline frames in the agent UI may eliminate redundant requests and retrievals of data that may occur if each inline frame submits the same request.

The agent UI may include a button titled reject call. When the button is enabled the button permits an agent to reject an incoming call. The agent may become aware of the incoming call when the button starts blinking Blinking of the button is an example of an event being pushed from the backend layer to the interface . However an event being pushed to a UI does make the button blink. In order for the UI to display a blinking button a client side logic not shown may receive the event and then act on the event. Generally the agent UI or one of its frames may generate requests and receive and act on events. For example in the situation where a person calls a contact center using a telephone an event may be generated at the backend of the networked contact center corresponding to the incoming call. The event may be sent by the JCM server to the control panel frame of the UI . This control panel frame may detect the incoming event and may generate a call for additional data about the event in response. The call may be used to retrieve additional data from different domains such as third party CRM servers according to the embodiments described herein. When data is retrieved at the backend layer the JCM server may push the data to the control panel via a web server in the web layer . The control panel may publish the data on a message bus with a topic name. If the topic name associated with the data matches a topic name subscribed to by the CRM frame the CRM frame may retrieve the data from the bus and use it to populate the data fields of the CRM frame.

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium or computer readable medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The instructions may further be transmitted or received over a network via the network interface device . While the machine readable medium is shown in an example embodiment to be a single medium the terms machine readable storage medium and computer readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The terms machine readable medium and computer readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present subject matter. The terms machine readable medium and computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

The above description is intended to be illustrative and not restrictive. For example the above described embodiments or one or more aspects thereof may be used in combination with each other. Other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of the claims should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein. Also in the following claims the terms including and comprising are open ended a system device article or process that includes elements in addition to those listed after such a term in a claim are still deemed to fall within the scope of that claim. Moreover in the following claims the terms first second and third and so forth are used merely as labels and are not intended to impose numerical requirements on their objects.

The Abstract is provided to comply with 37 C.F.R. 1.72 b which requires that it allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the above Detailed Description various features may be grouped together to streamline the disclosure. This should not be interpreted as intending that an unclaimed disclosed feature is essential to any claim. Rather inventive subject matter may lie in less than all features of a particular disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

